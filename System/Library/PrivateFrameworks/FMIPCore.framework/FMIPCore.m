uint64_t sub_1D4273F28(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  id v27;
  char v28;
  uint64_t v30;
  int64_t v31;
  int64_t v32;
  uint64_t vars8;

  v5 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      v6 = a1;
    }
    else {
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v5)
    {
      if (a2 < 0) {
        v7 = a2;
      }
      else {
        v7 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      return MEMORY[0x1F4184BB8](v7, v6);
    }
    sub_1D4274238(v6, a2);
    return v9 & 1;
  }
  if (v5)
  {
    if (a2 < 0) {
      v8 = a2;
    }
    else {
      v8 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    sub_1D4274238(v8, a1);
    return v9 & 1;
  }
  if (a1 == a2)
  {
LABEL_49:
    v9 = 1;
    return v9 & 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
LABEL_51:
    v9 = 0;
    return v9 & 1;
  }
  v30 = a1 + 56;
  v10 = 1 << *(unsigned char *)(a1 + 32);
  if (v10 < 64) {
    v11 = ~(-1 << v10);
  }
  else {
    v11 = -1;
  }
  v12 = v11 & *(void *)(a1 + 56);
  v7 = sub_1D4275AD0(0, a3);
  v13 = 0;
  v31 = (unint64_t)(v10 + 63) >> 6;
  v14 = a2 + 56;
  while (1)
  {
    if (v12)
    {
      v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_43;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v17 >= v31) {
      goto LABEL_49;
    }
    v18 = *(void *)(v30 + 8 * v17);
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v31) {
        goto LABEL_49;
      }
      v18 = *(void *)(v30 + 8 * v13);
      if (!v18)
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v31) {
          goto LABEL_49;
        }
        v18 = *(void *)(v30 + 8 * v13);
        if (!v18)
        {
          v13 = v17 + 3;
          if (v17 + 3 >= v31) {
            goto LABEL_49;
          }
          v18 = *(void *)(v30 + 8 * v13);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_42:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_43:
    v20 = *(id *)(*(void *)(a1 + 48) + 8 * v16);
    v21 = sub_1D446A108();
    v22 = -1 << *(unsigned char *)(a2 + 32);
    v23 = v21 & ~v22;
    if (((*(void *)(v14 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_50;
    }
    v32 = v13;
    v24 = *(id *)(*(void *)(a2 + 48) + 8 * v23);
    v25 = sub_1D446A118();

    if ((v25 & 1) == 0)
    {
      v26 = ~v22;
      while (1)
      {
        v23 = (v23 + 1) & v26;
        if (((*(void *)(v14 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          break;
        }
        v27 = *(id *)(*(void *)(a2 + 48) + 8 * v23);
        v28 = sub_1D446A118();

        if (v28) {
          goto LABEL_24;
        }
      }
LABEL_50:

      goto LABEL_51;
    }
LABEL_24:

    v13 = v32;
  }
  v19 = v17 + 4;
  if (v19 >= v31) {
    goto LABEL_49;
  }
  v18 = *(void *)(v30 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_42;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v13 >= v31) {
      goto LABEL_49;
    }
    v18 = *(void *)(v30 + 8 * v13);
    ++v19;
    if (v18) {
      goto LABEL_42;
    }
  }
LABEL_54:
  __break(1u);
  return MEMORY[0x1F4184BB8](v7, v6);
}

void sub_1D4274238(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != sub_1D446A278()) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_6:
    id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v11);
    char v13 = sub_1D446A2C8();

    if ((v13 & 1) == 0) {
      return;
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v14);
  ++v4;
  if (v15) {
    goto LABEL_19;
  }
  int64_t v4 = v14 + 1;
  if (v14 + 1 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1D42744A0()
{
  uint64_t result = sub_1D4469618();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1D4274548(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t _s8FMIPCore10FMIPPersonV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  int v33 = *(unsigned __int8 *)(a1 + 33);
  int v27 = *(unsigned __int8 *)(a1 + 35);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v29 = *(void *)(a1 + 56);
  uint64_t v25 = *(void *)(a1 + 64);
  *(void *)&v23[16] = *(void *)(a1 + 80);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  int v9 = *(unsigned __int8 *)(a2 + 32);
  int v31 = *(unsigned __int8 *)(a1 + 34);
  int v32 = *(unsigned __int8 *)(a2 + 33);
  int v30 = *(unsigned __int8 *)(a2 + 34);
  int v26 = *(unsigned __int8 *)(a2 + 35);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v28 = *(void *)(a2 + 56);
  uint64_t v24 = *(void *)(a2 + 64);
  unint64_t v22 = *(void *)(a2 + 72);
  *(void *)v23 = *(void *)(a1 + 72);
  *(void *)&v23[8] = *(void *)(a2 + 80);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_1D446A758(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v8 && v3 == v7 || (char v14 = sub_1D446A758(), result = 0, (v14 & 1) != 0))
    {
      if (v5 == v10 && v6 == v11)
      {
        if (v4 != v9) {
          return 0;
        }
      }
      else
      {
        char v15 = sub_1D446A758();
        uint64_t result = 0;
        if (v15 & 1) == 0 || ((v4 ^ v9)) {
          return result;
        }
      }
      if (v33) {
        uint64_t v16 = 1162760004;
      }
      else {
        uint64_t v16 = 0x474E4944414F4CLL;
      }
      if (v33) {
        unint64_t v17 = 0xE400000000000000;
      }
      else {
        unint64_t v17 = 0xE700000000000000;
      }
      if (v32) {
        uint64_t v18 = 1162760004;
      }
      else {
        uint64_t v18 = 0x474E4944414F4CLL;
      }
      if (v32) {
        unint64_t v19 = 0xE400000000000000;
      }
      else {
        unint64_t v19 = 0xE700000000000000;
      }
      if (v16 == v18 && v17 == v19)
      {
        swift_bridgeObjectRelease_n();
        uint64_t result = 0;
        if (v31 != v30) {
          return result;
        }
      }
      else
      {
        char v20 = sub_1D446A758();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if (v20 & 1) == 0 || ((v31 ^ v30)) {
          return result;
        }
      }
      if (((v27 ^ v26) & 1) == 0)
      {
        if (v29 == v28 && v25 == v24 || (v21 = sub_1D446A758(), uint64_t result = 0, (v21 & 1) != 0))
        {
          uint64_t result = *(_OWORD *)&v23[8] == 0;
          if (*(void *)&v23[16] && *(void *)&v23[8])
          {
            if (__PAIR128__(*(unint64_t *)&v23[16], v22) == *(_OWORD *)v23)
            {
              return 1;
            }
            else
            {
              return sub_1D446A758();
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t static FMIPManagerConfiguration.default.getter()
{
  if (qword_1EBD7E728 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_1D42748E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = (void *)(a1 + *a4);
  *uint64_t v6 = a2;
  v6[1] = a3;
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRelease();
  return a5(v7);
}

uint64_t sub_1D4274934()
{
  uint64_t result = sub_1D4469618();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D4274A24(uint64_t a1)
{
  uint64_t v2 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v2);
  if (result)
  {
    uint64_t v4 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t FMIPManager.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  FMIPManager.initialize()();
  return swift_unknownObjectRelease();
}

uint64_t sub_1D4274B90(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FMIPInitClientResponse()
{
  return self;
}

unint64_t sub_1D4274BFC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1D42D5DA0(&qword_1EA6CAA00);
  uint64_t v2 = (void *)sub_1D446A4C8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1D42C4FCC(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1D4274D18(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D42759C8(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D4274D78()
{
  uint64_t result = sub_1D4469618();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D4274E10()
{
  return swift_initClassMetadata2();
}

void sub_1D4274E78()
{
  sub_1D4469688();
  if (v0 <= 0x3F)
  {
    type metadata accessor for FMIPProductType();
    if (v1 <= 0x3F)
    {
      sub_1D42E4698();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1D4274FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_siriDelegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v6);
  if (result)
  {
    uint64_t v8 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    long long v10 = *(_OWORD *)(a2 + 48);
    v12[2] = *(_OWORD *)(a2 + 32);
    v12[3] = v10;
    v12[4] = *(_OWORD *)(a2 + 64);
    uint64_t v13 = *(void *)(a2 + 80);
    long long v11 = *(_OWORD *)(a2 + 16);
    v12[0] = *(_OWORD *)a2;
    v12[1] = v11;
    (*(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v12, a3, ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for FMIPUserInfoResponseFragment()
{
  return self;
}

uint64_t sub_1D42750C0()
{
  uint64_t result = sub_1D4469498();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D4275188()
{
  uint64_t result = sub_1D4469618();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D427523C()
{
  uint64_t result = sub_1D4469618();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_1D427532C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1D4469928();
  sub_1D4279568(v3, a2);
  sub_1D42D7FAC(v3, (uint64_t)a2);
  return sub_1D4469908();
}

uint64_t sub_1D42753A4()
{
  uint64_t result = sub_1D44696C8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D427546C()
{
  uint64_t result = sub_1D4469618();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D4275538(void *a1, uint64_t a2)
{
  uint64_t v4 = OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_appBeacons;
  sub_1D42D5DA0(&qword_1EA6CBA68);
  sub_1D42BF5F0(&qword_1EA6CBA70, &qword_1EA6CBA68);
  sub_1D4469F78();
  uint64_t v5 = v7;
  if (!v7) {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  *a1 = v5;
  swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4275610()
{
  uint64_t result = sub_1D4469688();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1D4469618();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for FMIPRefreshClientResponse()
{
  return self;
}

uint64_t sub_1D427577C()
{
  uint64_t v0 = sub_1D4469928();
  sub_1D4279568(v0, qword_1EBD83228);
  sub_1D42D7FAC(v0, (uint64_t)qword_1EBD83228);
  return sub_1D4469918();
}

uint64_t sub_1D42757C8()
{
  uint64_t result = sub_1D4469618();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FMIPBeaconRefreshingControllerClientConfiguration.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CB7C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42E342C();
  sub_1D446A8C8();
  if (!v2)
  {
    char v9 = sub_1D446A5A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return sub_1D42BEC64((uint64_t)a1);
}

uint64_t sub_1D42759C8(uint64_t result)
{
  int v2 = 4;
  switch(result)
  {
    case 1:
      uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_separationMonitoringState);
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_separationMonitoringState) != 6)
      {
        LOBYTE(v2) = 6;
        goto LABEL_16;
      }
      return result;
    case 2:
      goto LABEL_11;
    case 3:
      int v2 = 5;
      goto LABEL_11;
    case 4:
      int v2 = 3;
      goto LABEL_11;
    case 5:
      int v2 = 2;
      goto LABEL_11;
    case 6:
      int v2 = 1;
      goto LABEL_11;
    case 7:
      int v2 = 0;
LABEL_11:
      uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_separationMonitoringState);
      int v4 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_separationMonitoringState);
      if (v2 == v4 && (v4 & 0xFE) != 6) {
        return result;
      }
      goto LABEL_16;
    default:
      uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_separationMonitoringState);
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_separationMonitoringState) == 7) {
        return result;
      }
      LOBYTE(v2) = 7;
LABEL_16:
      *uint64_t v3 = v2;
      uint64_t result = MEMORY[0x1D9447840](v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_delegate);
      if (result)
      {
        char v6 = v2;
        sub_1D4291174(&v6);
        return swift_unknownObjectRelease();
      }
      return result;
  }
}

uint64_t sub_1D4275AD0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1D4275B0C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t type metadata accessor for FMDemoManager()
{
  return self;
}

uint64_t sub_1D4275B70(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1D4275AD0(0, &qword_1EA6CA230);
  sub_1D42E2004();
  uint64_t v2 = sub_1D4469ED8();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4275C00(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1D4275AD0(0, &qword_1EA6CA380);
  uint64_t v2 = sub_1D4469D78();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_1D4275C84()
{
  unint64_t result = qword_1EA6CABF8;
  if (!qword_1EA6CABF8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA6CABF8);
  }
  return result;
}

void sub_1D4275CC4()
{
  if (!qword_1EBD7CB78)
  {
    sub_1D4469498();
    unint64_t v0 = sub_1D446A168();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBD7CB78);
    }
  }
}

uint64_t sub_1D4275D1C()
{
  uint64_t result = type metadata accessor for FMIPItemUpdateType(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1D4469618();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

void sub_1D4275DEC(uint64_t a1)
{
  if (a1) {
    uint64_t v2 = sub_1D4469D58();
  }
  else {
    uint64_t v2 = 0;
  }
  id v3 = (id)v2;
  objc_msgSend(v1, sel_setEnabledTopics_);
}

uint64_t sub_1D4275E4C(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1D4275AD0(0, &qword_1EA6C9340);
  sub_1D42B2630((unint64_t *)&unk_1EA6C9348, &qword_1EA6C9340);
  uint64_t v2 = sub_1D4469ED8();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1D4275EFC()
{
  sub_1D4469618();
  if (v0 <= 0x3F)
  {
    sub_1D4276B24();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t FMLocationShifter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1D4276040()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CB8]), sel_init);
  qword_1EBD7EC40 = (uint64_t)result;
  return result;
}

uint64_t sub_1D4276074()
{
  unint64_t v1 = *(void **)(v0[16] + 112);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1D42E43A8;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D42E1FB0;
  v0[13] = &unk_1E69E5CA0;
  v0[14] = v2;
  objc_msgSend(v1, sel_sharingLimitsWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

void sub_1D4276174()
{
  sub_1D4469688();
  if (v0 <= 0x3F)
  {
    sub_1D427634C(319, (unint64_t *)&qword_1EBD7E920, MEMORY[0x1E4F27928]);
    if (v1 <= 0x3F)
    {
      sub_1D427634C(319, (unint64_t *)&qword_1EBD7EA20, (void (*)(uint64_t))type metadata accessor for FMIPDevice);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_1D427634C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1D446A168();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for FMAPSConnectionHandler()
{
  return self;
}

uint64_t sub_1D42763C4(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D427F6D4(a1, 0);
    return swift_release();
  }
  return result;
}

void sub_1D4276428(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1D42764A0()
{
  return sub_1D4469E68();
}

uint64_t type metadata accessor for FMLocationShifter()
{
  return self;
}

uint64_t sub_1D427650C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD80058);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  uint64_t v5 = sub_1D4469778();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = type metadata accessor for FMIPServerInteractionController(0);
  swift_allocObject();
  uint64_t result = sub_1D429B04C((uint64_t)v4);
  uint64_t v8 = result;
  if (qword_1EBD7E658 != -1) {
    uint64_t result = swift_once();
  }
  if (byte_1EBD7CB21 == 1)
  {
    v15[3] = v6;
    v15[4] = &off_1F2C0F740;
    v15[0] = v8;
    swift_retain();
    char v9 = sub_1D443B860((uint64_t)v15);
    sub_1D42BEC64((uint64_t)v15);
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1D4469928();
    sub_1D42D7FAC(v10, (uint64_t)qword_1EBD83228);
    uint64_t v11 = sub_1D44698F8();
    os_log_type_t v12 = sub_1D446A038();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_1D4271000, v11, v12, "FMIPManager: Entering Demo Mode", v13, 2u);
      MEMORY[0x1D9447730](v13, -1, -1);
    }

    a1[3] = type metadata accessor for FMIPDemoInteractionController();
    a1[4] = (uint64_t)&off_1F2C13838;
    uint64_t result = swift_release();
    uint64_t v8 = (uint64_t)v9;
  }
  else
  {
    a1[3] = v6;
    a1[4] = (uint64_t)&off_1F2C0F740;
  }
  *a1 = v8;
  return result;
}

uint64_t sub_1D427690C@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager) + 288);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D4276938()
{
  uint64_t result = sub_1D4469618();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1D42769D0()
{
  sub_1D4469688();
  if (v0 <= 0x3F)
  {
    sub_1D4469618();
    if (v1 <= 0x3F)
    {
      sub_1D4275CC4();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t type metadata accessor for FMIPLocationController()
{
  return self;
}

void sub_1D4276B24()
{
  if (!qword_1EBD7E570)
  {
    sub_1D44696C8();
    unint64_t v0 = sub_1D446A168();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBD7E570);
    }
  }
}

uint64_t sub_1D4276B7C(uint64_t a1, char a2)
{
  uint64_t result = MEMORY[0x1D9447840](a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_delegate);
  if (result)
  {
    unsigned __int8 v4 = a2 & 1;
    sub_1D4287E5C(&v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D4276BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7F828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4276C3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1D42D5DA0(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D4276C98(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1D42D5DA0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D4276CFC(uint64_t a1, void *a2)
{
  unint64_t v2 = a2;
  uint64_t v3 = *(void (**)(void *, unint64_t))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v4 = v2;
    unint64_t v2 = (void *)sub_1D44694E8();
    unint64_t v6 = v5;
  }
  else
  {
    swift_retain();
    unint64_t v6 = 0xF000000000000000;
  }
  v3(v2, v6);
  sub_1D42DD08C((uint64_t)v2, v6);

  return swift_release();
}

uint64_t FMIPManagerConfiguration.__allocating_init(enabledSubsystems:preferredLocale:authenticationUIProvider:snapshotHandlers:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v6 = sub_1D44696C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  if (qword_1EBD7E728 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1EBD7E720;
  uint64_t v11 = *(void *)(qword_1EBD7E720 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_cacheDirectory);
  uint64_t v12 = *(void *)(qword_1EBD7E720 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_cacheDirectory + 8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  swift_bridgeObjectRetain();
  v13(a2, v6);
  uint64_t v15 = *(void *)(v10 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_interactionControllerProvider);
  uint64_t v14 = *(void *)(v10 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_interactionControllerProvider + 8);
  type metadata accessor for FMIPManagerConfiguration();
  uint64_t v16 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v16 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_preferredLocale, v9, v6);
  unint64_t v17 = (void *)(v16 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_cacheDirectory);
  *unint64_t v17 = v11;
  v17[1] = v12;
  uint64_t v18 = (void *)(v16 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_interactionControllerProvider);
  *uint64_t v18 = v15;
  v18[1] = v14;
  sub_1D4276BD4(v22, v16 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_authenticationUIProvider);
  *(void *)(v16 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems) = v21;
  *(void *)(v16 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_snapshotHandlers) = v23;
  swift_retain();
  return v16;
}

uint64_t sub_1D4276F94()
{
  uint64_t result = sub_1D4469688();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1D4469618();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v3[4] = v3;
      v3[5] = &unk_1D4476268;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D427706C()
{
  uint64_t v1 = *(void *)(*v0 + qword_1EA6C9D88);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1D43338B4((void *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1D42771B8()
{
  uint64_t v8 = v0;
  id v1 = *(id *)(v0 + 120);
  uint64_t v2 = (uint64_t)objc_msgSend(v1, sel_maxCircleMembers);
  if (v2 < 0) {
    return sub_1D446A478();
  }
  uint64_t v3 = v2;
  uint64_t v4 = (uint64_t)objc_msgSend(v1, sel_maxDelegatedShares);

  if (v4 < 0) {
    return sub_1D446A478();
  }
  if (MEMORY[0x1D9447840](*(void *)(v0 + 128) + 152))
  {
    v7[0] = v3;
    v7[1] = v4;
    sub_1D4281220(v7);

    swift_unknownObjectRelease();
  }
  else
  {
  }
  unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1D42772F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469958();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D44699B8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager);
  uint64_t v12 = *(void *)(v11 + 232);
  swift_retain();
  swift_bridgeObjectRetain();
  char v13 = sub_1D42E2C44(a2, v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    return swift_release();
  }
  else
  {
    swift_beginAccess();
    unint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1D42AD994(v15, a2);
    swift_bridgeObjectRelease();
    *(void *)(v11 + 80) = v16;
    swift_bridgeObjectRelease();
    *(void *)(v11 + 232) = a2;
    swift_bridgeObjectRetain();
    swift_release();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1D42E7900;
    aBlock[5] = a1;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D42BD950;
    aBlock[3] = &unk_1F2C0B7E8;
    unint64_t v17 = _Block_copy(aBlock);
    swift_retain();
    sub_1D4469988();
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v10, v6, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return swift_release();
  }
}

uint64_t sub_1D4277660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1D4469958();
  uint64_t v30 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D44699B8();
  uint64_t v28 = *(void *)(v13 - 8);
  uint64_t v29 = v13;
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager;
  swift_retain();
  LOBYTE(a5) = sub_1D427FFBC(a2, a3, a4, a5);
  uint64_t result = swift_release();
  if (a5)
  {
    uint64_t v18 = *(void *)(a1 + v16);
    swift_beginAccess();
    unint64_t v19 = *(void *)(v18 + 80);
    swift_bridgeObjectRetain();
    swift_retain();
    char v20 = sub_1D429BDD4(v19, 1);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v21 = MEMORY[0x1E4FBC860];
    if (v20)
    {
      v27[1] = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue);
      v36 = sub_1D42E7900;
      uint64_t v37 = a1;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v33 = 1107296256;
      v34 = sub_1D42BD950;
      v35 = &unk_1F2C0B6F8;
      uint64_t v22 = _Block_copy(&aBlock);
      swift_retain();
      sub_1D4469988();
      uint64_t v38 = v21;
      sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
      sub_1D42D5DA0(&qword_1EBD7FD78);
      sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
      uint64_t v21 = MEMORY[0x1E4FBC860];
      sub_1D446A1F8();
      MEMORY[0x1D9446420](0, v15, v12, v22);
      _Block_release(v22);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v10);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v29);
      swift_release();
    }
    uint64_t v23 = *(void *)(a1 + v16);
    swift_beginAccess();
    uint64_t v24 = *(void *)(v23 + 280);
    swift_bridgeObjectRetain();
    swift_retain();
    char v25 = sub_1D4298AA4(v24, 2, 1);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v25)
    {
      v36 = sub_1D42E7AA0;
      uint64_t v37 = a1;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v33 = 1107296256;
      v34 = sub_1D42BD950;
      v35 = &unk_1F2C0B6D0;
      int v26 = _Block_copy(&aBlock);
      swift_retain();
      sub_1D4469988();
      uint64_t v31 = v21;
      sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
      sub_1D42D5DA0(&qword_1EBD7FD78);
      sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
      sub_1D446A1F8();
      MEMORY[0x1D9446420](0, v15, v12, v26);
      _Block_release(v26);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v10);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v29);
      return swift_release();
    }
  }
  return result;
}

uint64_t static FMDemoManager.assetURL(for:)()
{
  uint64_t v0 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790]();
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1D4469498();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD7E648 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D42D7FAC(v0, (uint64_t)qword_1EBD7CB08);
  sub_1D42E83D0(v7, (uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1D4304ECC((uint64_t)v2);
    sub_1D438C554();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    sub_1D4469448();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1D4277D90()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1D4277DE0(uint64_t a1, char a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v4);
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    char v8 = a2 & 1;
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v6 + 144))(a1, &v8, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D4277E80(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D4277EEC(uint64_t a1, char a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v4);
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    char v8 = a2;
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v6 + 176))(a1, &v8, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D4277F8C()
{
  uint64_t v1 = sub_1D4469618();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_1D4469608();
  uint64_t v6 = v5 + qword_1EBD831E8;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 40))(v6, v4, v1);
  return swift_endAccess();
}

void sub_1D4278080(void *a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1D4469928();
    sub_1D42D7FAC(v3, (uint64_t)qword_1EBD83228);
    oslog = sub_1D44698F8();
    os_log_type_t v4 = sub_1D446A038();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_1D4271000, oslog, v4, "FMIPDeviceConnectionStateProvider: unable to get connected devices with error", v5, 2u);
      MEMORY[0x1D9447730](v5, -1, -1);
    }
  }
  else
  {
    *(void *)(a3 + 16) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (MEMORY[0x1D9447840](a3 + 24))
    {
      if (a1) {
        uint64_t v8 = a1;
      }
      else {
        uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRetain();
      sub_1D4282D04(v8);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
  }
}

uint64_t destroy for FMIPBeaconRefreshFilter()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4278240(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2 + 192);
  swift_bridgeObjectRetain();
  char v7 = sub_1D42786DC(a1, v6);
  swift_bridgeObjectRelease();
  if (v7)
  {
    uint64_t v8 = *(void *)(v3 + 184);
    swift_bridgeObjectRetain();
    char v9 = sub_1D42786DC(a2, v8);
    swift_bridgeObjectRelease();
    if (v9) {
      return 0;
    }
  }
  *(void *)(v3 + 192) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 184) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v11 = *(void *)(v3 + 288);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v3 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1D439C364(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 288) = v13;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  unint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_1D42B9654(v14);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 80) = v15;
  swift_bridgeObjectRelease();
  unint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_1D42BA1A4(v16, a1);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 80) = v17;
  swift_bridgeObjectRelease();
  unint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_1D42B55C4(v18);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 80) = v19;
  swift_bridgeObjectRelease();
  unint64_t v20 = *(void *)(v3 + 80);
  uint64_t v21 = *(void *)(v3 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1D42AD154(v20, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 80) = v22;
  swift_bridgeObjectRelease();
  unint64_t v23 = *(void *)(v3 + 80);
  uint64_t v24 = *(void *)(v3 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1D42AC90C(v23, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 80) = v25;
  swift_bridgeObjectRelease();
  unint64_t v26 = *(void *)(v3 + 80);
  uint64_t v27 = *(void *)(v3 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1D42B8E0C(v26, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 80) = v28;
  swift_bridgeObjectRelease();
  unint64_t v29 = *(void *)(v3 + 80);
  uint64_t v30 = *(void *)(v3 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1D42AD994(v29, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 80) = v31;
  swift_bridgeObjectRelease();
  unint64_t v32 = *(void *)(v3 + 80);
  uint64_t v33 = *(void *)(v3 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_1D439B084(v32, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 80) = v34;
  swift_bridgeObjectRelease();
  unint64_t v35 = *(void *)(v3 + 80);
  uint64_t v36 = *(void *)(v3 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_1D439B9AC(v35, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 80) = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v3 + 16);
  if ((v38 & 1) != 0 && *(unsigned char *)(v3 + 24) == 1 && *(void *)(v3 + 328))
  {
    swift_retain();
    uint64_t v39 = swift_bridgeObjectRetain();
    sub_1D428ABC4(v39, (uint64_t)&unk_1F2C0CB00, (uint64_t)sub_1D42E3180, (uint64_t)&unk_1F2C0CB18);
    swift_bridgeObjectRelease();
    swift_release();
  }
  unint64_t v40 = swift_bridgeObjectRetain();
  uint64_t v41 = sub_1D439D0C0(v40, a1, a2);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 280) = v41;
  swift_bridgeObjectRelease();
  uint64_t v42 = swift_bridgeObjectRetain();
  uint64_t v43 = sub_1D438FCA4(v42);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 280) = v43;
  swift_bridgeObjectRelease();
  if ((v38 & 2) != 0 && *(unsigned char *)(v3 + 24) == 1)
  {
    if (*(void *)(v3 + 312))
    {
      swift_retain();
      uint64_t v44 = swift_bridgeObjectRetain();
      sub_1D428ABC4(v44, (uint64_t)&unk_1F2C0CA60, (uint64_t)sub_1D439EC7C, (uint64_t)&unk_1F2C0CA78);
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  sub_1D4391084(a1, a2);
  return 1;
}

uint64_t sub_1D42786DC(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v44 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v45 = (unint64_t)(v5 + 63) >> 6;
  if (v7) {
    goto LABEL_9;
  }
LABEL_10:
  int64_t v10 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_88;
  }
  if (v10 >= v45) {
    return 1;
  }
  unint64_t v11 = *(void *)(v44 + 8 * v10);
  ++v4;
  if (v11) {
    goto LABEL_25;
  }
  int64_t v4 = v10 + 1;
  if (v10 + 1 >= v45) {
    return 1;
  }
  unint64_t v11 = *(void *)(v44 + 8 * v4);
  if (v11) {
    goto LABEL_25;
  }
  int64_t v4 = v10 + 2;
  if (v10 + 2 >= v45) {
    return 1;
  }
  unint64_t v11 = *(void *)(v44 + 8 * v4);
  if (v11) {
    goto LABEL_25;
  }
  int64_t v4 = v10 + 3;
  if (v10 + 3 >= v45) {
    return 1;
  }
  unint64_t v11 = *(void *)(v44 + 8 * v4);
  if (v11) {
    goto LABEL_25;
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v45) {
    return 1;
  }
  unint64_t v11 = *(void *)(v44 + 8 * v12);
  if (v11)
  {
    int64_t v4 = v12;
LABEL_25:
    uint64_t v48 = (v11 - 1) & v11;
    for (unint64_t i = __clz(__rbit64(v11)) + (v4 << 6); ; unint64_t i = __clz(__rbit64(v7)) | (v4 << 6))
    {
      uint64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * i);
      uint64_t v14 = *v13;
      uint64_t v15 = v13[1];
      unint64_t v16 = (unsigned __int8 *)(*(void *)(v3 + 56) + 24 * i);
      int v17 = *v16;
      int v50 = v16[1];
      int v49 = v16[2];
      uint64_t v18 = v16[3];
      uint64_t v19 = (void *)*((void *)v16 + 1);
      double v20 = *((double *)v16 + 2);
      swift_bridgeObjectRetain();
      id v21 = v19;
      unint64_t v22 = sub_1D42C4FCC(v14, v15);
      char v24 = v23;
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        id v33 = v21;
        goto LABEL_85;
      }
      int64_t v46 = v4;
      uint64_t v25 = v3;
      unint64_t v26 = (unsigned __int8 *)(*(void *)(a2 + 56) + 24 * v22);
      int v27 = *v26;
      int v28 = v26[1];
      int v29 = v26[2];
      uint64_t v30 = v26[3];
      uint64_t v31 = (void *)*((void *)v26 + 1);
      double v32 = *((double *)v26 + 2);
      sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7D970);
      id v33 = v31;
      v47 = v21;
      if ((sub_1D446A118() & 1) == 0
        || v32 != v20
        || ((v17 ^ v27) & 1) != 0
        || ((v50 ^ v28) & 1) != 0
        || ((v49 ^ v29) & 1) != 0)
      {
        break;
      }
      unint64_t v34 = 0xE700000000000000;
      unint64_t v35 = 0x6E776F6E6B6E75;
      uint64_t v3 = v25;
      switch(v30)
      {
        case 1:
          unint64_t v35 = 0x756F7364776F7263;
          unint64_t v34 = 0xEC00000064656372;
          break;
        case 2:
          unint64_t v34 = 0xE300000000000000;
          unint64_t v35 = 5460039;
          break;
        case 3:
          unint64_t v34 = 0xE400000000000000;
          unint64_t v35 = 1768319319;
          break;
        case 4:
          unint64_t v35 = 0x61636F4C65666173;
          unint64_t v34 = 0xEC0000006E6F6974;
          break;
        case 5:
          unint64_t v35 = 0xD000000000000012;
          uint64_t v36 = "rk";
          goto LABEL_54;
        case 6:
          unint64_t v34 = 0xE800000000000000;
          unint64_t v35 = 0x656D69746C616572;
          break;
        case 7:
          unint64_t v35 = 0x6F4C646572696170;
          unint64_t v34 = 0xEE006E6F69746163;
          break;
        case 8:
          unint64_t v35 = 0x6E6E6F437473616CLL;
          unsigned int v37 = 1702126437;
          goto LABEL_47;
        case 9:
          unint64_t v35 = 0xD000000000000019;
          uint64_t v36 = "edLocation";
          goto LABEL_54;
        case 10:
          unint64_t v35 = 0xD000000000000010;
          uint64_t v36 = "lastConnectionMaintenance";
          goto LABEL_54;
        case 11:
          unint64_t v35 = 0x656E774F7261656ELL;
          unint64_t v34 = 0xE900000000000072;
          break;
        case 12:
          unint64_t v35 = 0xD000000000000018;
          uint64_t v36 = "lastDisconnected";
          goto LABEL_54;
        case 13:
          unint64_t v35 = 0x786F725072656570;
          unint64_t v34 = 0xEB00000000646569;
          break;
        case 14:
          unint64_t v35 = 0x6C627550666C6573;
          unsigned int v37 = 1701344105;
LABEL_47:
          unint64_t v34 = v37 | 0xED00006400000000;
          break;
        case 15:
          uint64_t v38 = "xied";
          goto LABEL_52;
        case 16:
          unint64_t v34 = 0xE600000000000000;
          unint64_t v35 = 0x646568636163;
          break;
        case 17:
          unint64_t v35 = 0x6552746E65746E69;
          unint64_t v34 = 0xEE0065736E6F7073;
          break;
        case 18:
          uint64_t v38 = "lter";
LABEL_52:
          unint64_t v34 = (unint64_t)v38 | 0x8000000000000000;
          unint64_t v35 = 0xD000000000000014;
          break;
        case 19:
          unint64_t v35 = 0xD000000000000013;
          uint64_t v36 = "intentLocationUpdate";
LABEL_54:
          unint64_t v34 = (unint64_t)v36 | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v39 = 0xE700000000000000;
      int64_t v4 = v46;
      unint64_t v40 = 0x6E776F6E6B6E75;
      switch(v18)
      {
        case 1:
          unint64_t v40 = 0x756F7364776F7263;
          unint64_t v39 = 0xEC00000064656372;
          break;
        case 2:
          unint64_t v39 = 0xE300000000000000;
          unint64_t v40 = 5460039;
          break;
        case 3:
          unint64_t v39 = 0xE400000000000000;
          unint64_t v40 = 1768319319;
          break;
        case 4:
          unint64_t v40 = 0x61636F4C65666173;
          unint64_t v39 = 0xEC0000006E6F6974;
          break;
        case 5:
          unint64_t v40 = 0xD000000000000012;
          uint64_t v41 = "rk";
          goto LABEL_77;
        case 6:
          unint64_t v39 = 0xE800000000000000;
          unint64_t v40 = 0x656D69746C616572;
          break;
        case 7:
          unint64_t v40 = 0x6F4C646572696170;
          unint64_t v39 = 0xEE006E6F69746163;
          break;
        case 8:
          unint64_t v40 = 0x6E6E6F437473616CLL;
          unsigned int v42 = 1702126437;
          goto LABEL_70;
        case 9:
          unint64_t v40 = 0xD000000000000019;
          uint64_t v41 = "edLocation";
          goto LABEL_77;
        case 10:
          unint64_t v40 = 0xD000000000000010;
          uint64_t v41 = "lastConnectionMaintenance";
          goto LABEL_77;
        case 11:
          unint64_t v40 = 0x656E774F7261656ELL;
          unint64_t v39 = 0xE900000000000072;
          break;
        case 12:
          unint64_t v40 = 0xD000000000000018;
          uint64_t v41 = "lastDisconnected";
          goto LABEL_77;
        case 13:
          unint64_t v40 = 0x786F725072656570;
          unint64_t v39 = 0xEB00000000646569;
          break;
        case 14:
          unint64_t v40 = 0x6C627550666C6573;
          unsigned int v42 = 1701344105;
LABEL_70:
          unint64_t v39 = v42 | 0xED00006400000000;
          break;
        case 15:
          uint64_t v43 = "xied";
          goto LABEL_75;
        case 16:
          unint64_t v39 = 0xE600000000000000;
          unint64_t v40 = 0x646568636163;
          break;
        case 17:
          unint64_t v40 = 0x6552746E65746E69;
          unint64_t v39 = 0xEE0065736E6F7073;
          break;
        case 18:
          uint64_t v43 = "lter";
LABEL_75:
          unint64_t v39 = (unint64_t)v43 | 0x8000000000000000;
          unint64_t v40 = 0xD000000000000014;
          break;
        case 19:
          unint64_t v40 = 0xD000000000000013;
          uint64_t v41 = "intentLocationUpdate";
LABEL_77:
          unint64_t v39 = (unint64_t)v41 | 0x8000000000000000;
          break;
        default:
          break;
      }
      if (v35 == v40 && v34 == v39)
      {

        uint64_t result = swift_bridgeObjectRelease_n();
        unint64_t v7 = v48;
        if (!v48) {
          goto LABEL_10;
        }
      }
      else
      {
        char v8 = sub_1D446A758();

        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v7 = v48;
        if ((v8 & 1) == 0) {
          return 0;
        }
        if (!v48) {
          goto LABEL_10;
        }
      }
LABEL_9:
      uint64_t v48 = (v7 - 1) & v7;
    }

LABEL_85:
    return 0;
  }
  while (1)
  {
    int64_t v4 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v4 >= v45) {
      return 1;
    }
    unint64_t v11 = *(void *)(v44 + 8 * v4);
    ++v12;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_88:
  __break(1u);
  return result;
}

uint64_t sub_1D4278E88(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v49 = sub_1D4469688();
  uint64_t v43 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v44 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v45 = a3;
  uint64_t v9 = sub_1D42D5DA0(a3);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  int64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v10);
  if (a1 == a2) {
    return 1;
  }
  uint64_t v15 = (char *)&v37 - v14;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v46 = 0;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v38 = a1 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  uint64_t v20 = (uint64_t)v44;
  unsigned int v42 = (void (**)(uint64_t, char *, uint64_t))(v43 + 32);
  uint64_t v40 = v43 + 16;
  uint64_t v41 = (uint64_t (**)(uint64_t, uint64_t))(v43 + 8);
  int64_t v39 = (unint64_t)(v17 + 63) >> 6;
  int64_t v37 = v39 - 1;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v46 << 6);
LABEL_8:
      (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v12, *(void *)(a1 + 48) + *(void *)(v43 + 72) * v22, v49);
      uint64_t v23 = *(void *)(a1 + 56);
      uint64_t v24 = sub_1D42D5DA0(a4);
      v12[*(int *)(v24 + 48)] = *(unsigned char *)(v23 + v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v12, 0, 1, v24);
      goto LABEL_30;
    }
    int64_t v25 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v25 < v39)
    {
      unint64_t v26 = *(void *)(v38 + 8 * v25);
      if (v26) {
        goto LABEL_12;
      }
      int64_t v27 = v46 + 2;
      ++v46;
      if (v25 + 1 < v39)
      {
        unint64_t v26 = *(void *)(v38 + 8 * v27);
        if (v26) {
          goto LABEL_15;
        }
        int64_t v46 = v25 + 1;
        if (v25 + 2 < v39)
        {
          unint64_t v26 = *(void *)(v38 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
            goto LABEL_12;
          }
          int64_t v46 = v25 + 2;
          if (v25 + 3 < v39)
          {
            unint64_t v26 = *(void *)(v38 + 8 * (v25 + 3));
            if (v26)
            {
              v25 += 3;
              goto LABEL_12;
            }
            int64_t v27 = v25 + 4;
            int64_t v46 = v25 + 3;
            if (v25 + 4 < v39) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v28 = sub_1D42D5DA0(a4);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v12, 1, 1, v28);
    unint64_t v19 = 0;
LABEL_30:
    sub_1D4276C98((uint64_t)v12, (uint64_t)v15, v45);
    uint64_t v29 = sub_1D42D5DA0(a4);
    int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v15, 1, v29);
    BOOL v47 = v30 == 1;
    if (v30 != 1)
    {
      uint64_t v31 = *(int *)(v29 + 48);
      uint64_t v32 = a2;
      uint64_t v33 = v49;
      (*v42)(v20, v15, v49);
      int v34 = v15[v31];
      unint64_t v35 = sub_1D43AEE98(v20);
      int v48 = v36;
      uint64_t result = (*v41)(v20, v33);
      if (v48)
      {
        a2 = v32;
        if (*(unsigned __int8 *)(*(void *)(v32 + 56) + v35) == v34) {
          continue;
        }
      }
    }
    return v47;
  }
  unint64_t v26 = *(void *)(v38 + 8 * v27);
  if (v26)
  {
LABEL_15:
    int64_t v25 = v27;
LABEL_12:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v22 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v46 = v25;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v39)
    {
      int64_t v46 = v37;
      goto LABEL_29;
    }
    unint64_t v26 = *(void *)(v38 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1D427931C(uint64_t *a1)
{
  sub_1D42D5DA0(a1);
  sub_1D446A0A8();
  return v2;
}

unint64_t sub_1D427937C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = sub_1D42D5DA0(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1D42D5DA0(a3);
  uint64_t v10 = sub_1D446A4C8();
  uint64_t v11 = (void *)v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  uint64_t v13 = *(int *)(v6 + 48);
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v26[1] = a1;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_1D42A3A74(v16, (uint64_t)v9, a2);
    unint64_t result = sub_1D43AEE98((uint64_t)v9);
    if (v19) {
      break;
    }
    unint64_t v20 = result;
    *(void *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v21 = v11[6];
    uint64_t v22 = sub_1D4469688();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, v9, v22);
    *(void *)(v11[7] + 8 * v20) = *(void *)&v9[v13];
    uint64_t v23 = v11[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v11[2] = v25;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *sub_1D4279568(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1D42795CC(unsigned __int8 a1, uint64_t a2)
{
  if (qword_1EA6C8FE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = qword_1EA6E49C8;
  if (*(void *)(qword_1EA6E49C8 + 16) && (unint64_t v5 = sub_1D42A3758(a1), (v6 & 1) != 0)) {
    sub_1D42CBAC0(*(void *)(v4 + 56) + 32 * v5, (uint64_t)v8);
  }
  else {
    memset(v8, 0, sizeof(v8));
  }
  swift_endAccess();
  sub_1D42D5DA0(&qword_1EBD80050);
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
  if (swift_dynamicCast()) {
    return v9;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1D42796DC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1D42D5DA0(&qword_1EA6CBA40);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_1D4275AD0(0, &qword_1EA6CBA50);
    sub_1D446A4F8();
    uint64_t v10 = sub_1D42D5DA0(&qword_1EA6CBA48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = sub_1D42D5DA0(&qword_1EA6CBA48);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  id v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_1D4276C3C((uint64_t)v8, &qword_1EA6CBA40);
}

uint64_t sub_1D4279848(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1D42D5DA0(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  BOOL v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

void sub_1D4279A90()
{
  sub_1D4279DB0(319, &qword_1EBD7F648, (void (*)(uint64_t))type metadata accessor for FMIPPlaySoundMetadata);
  if (v0 <= 0x3F)
  {
    sub_1D4279DB0(319, &qword_1EBD7F700, (void (*)(uint64_t))type metadata accessor for FMIPDeviceLostModeMetadata);
    if (v1 <= 0x3F)
    {
      sub_1D4279DB0(319, &qword_1EBD7F308, (void (*)(uint64_t))type metadata accessor for FMIPLockMetadata);
      if (v2 <= 0x3F)
      {
        sub_1D4279DB0(319, &qword_1EBD7F3B0, (void (*)(uint64_t))type metadata accessor for FMIPEraseMetadata);
        if (v3 <= 0x3F)
        {
          sub_1D4279DB0(319, &qword_1EBD7E678, (void (*)(uint64_t))type metadata accessor for FMIPItemGroup);
          if (v4 <= 0x3F)
          {
            sub_1D4279DB0(319, (unint64_t *)&qword_1EBD7E920, MEMORY[0x1E4F27928]);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_1D4279DB0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1D446A168();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t FMIPManager.selectedDevice.setter(uint64_t a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7CBC0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_selectedDevice;
  swift_beginAccess();
  sub_1D42E7F98(a1, v6);
  swift_endAccess();
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_refreshingController);
  if (v7)
  {
    sub_1D42A3A74(v6, (uint64_t)v5, &qword_1EBD7CBC0);
    uint64_t v8 = v7 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_selectedDevice;
    swift_beginAccess();
    swift_retain();
    sub_1D42E8000((uint64_t)v5, v8, &qword_1EBD7CBC0);
    swift_endAccess();
    swift_release();
  }
  return sub_1D4276C3C(a1, &qword_1EBD7CBC0);
}

uint64_t sub_1D4279F3C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_1D4469D78();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4279FD4(uint64_t result)
{
  if (*(void *)(result + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_connection))
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_connection + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_1D42D5DA0(&qword_1EBD80060);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1D446E050;
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_topic);
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_topic + 8);
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v6;
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v7(v4, ObjectType, v2);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_1D427A0D0(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t result = sub_1D4469BF8();
  if (v4) {
    uint64_t result = 15;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_12;
  }

  return sub_1D4469CD8();
}

uint64_t sub_1D427A18C()
{
  if (qword_1EBD7E738 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(qword_1EBD831D0 + 16);
  uint64_t v2 = *(void *)(qword_1EBD831D0 + 24);
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EBD831C0 = v1;
  *(void *)algn_1EBD831C8 = v2;
  return result;
}

uint64_t _s8FMIPCore16FMIPAudioChannelVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D427A298()
{
  type metadata accessor for FMSystemDirectoryUtilities();
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = swift_slowAlloc();
  uint64_t started = sysdir_start_search_path_enumeration_private();
  MEMORY[0x1D94478A0](started, v1);
  uint64_t v3 = sub_1D4469C18();
  uint64_t v5 = v4;
  uint64_t result = MEMORY[0x1D9447730](v1, -1, -1);
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v5;
  qword_1EBD831D0 = v0;
  return result;
}

id sub_1D427A3D8()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1D4469B08();
  uint64_t v2 = (void *)sub_1D4469B08();
  id v3 = objc_msgSend(v0, sel_stringForKey_inDomain_, v1, v2);

  if (v3)
  {
    uint64_t v4 = sub_1D4469B38();
    unint64_t v6 = v5;

    v20[0] = 44;
    v20[1] = 0xE100000000000000;
    MEMORY[0x1F4188790]();
    v19[2] = v20;
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1D43BB934(0x7FFFFFFFFFFFFFFFLL, 1, sub_1D43BC310, (uint64_t)v19, v4, v6);
    swift_bridgeObjectRelease();
    uint64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = v7 + 56;
      uint64_t v10 = (double *)MEMORY[0x1E4FBC860];
      do
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_1D4469EB8();
        if ((v12 & 1) == 0)
        {
          uint64_t v13 = v11;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v10 = (double *)sub_1D43AFD90(0, *((void *)v10 + 2) + 1, 1, v10);
          }
          unint64_t v15 = *((void *)v10 + 2);
          unint64_t v14 = *((void *)v10 + 3);
          if (v15 >= v14 >> 1) {
            uint64_t v10 = (double *)sub_1D43AFD90((void *)(v14 > 1), v15 + 1, 1, v10);
          }
          *((void *)v10 + 2) = v15 + 1;
          *(void *)&v10[v15 + 4] = v13;
        }
        v9 += 32;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = (double *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    if (*((void *)v10 + 2) == 2)
    {
      double v16 = v10[4];
      double v17 = v10[5];
      swift_bridgeObjectRelease();
      return objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E5F0]), sel_initWithLatitude_longitude_, v16, v17);
    }
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1D427A658()
{
  uint64_t v0 = sub_1D446A088();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D446A068();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1D44699B8();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1D42AADA4();
  sub_1D4469988();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1D42C626C((unint64_t *)&qword_1EBD7FDB0, MEMORY[0x1E4FBCC10]);
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FDA0, (uint64_t *)&unk_1EBD7FD90);
  sub_1D446A1F8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_1D446A0C8();
  qword_1EA6CB0C8 = result;
  return result;
}

uint64_t sub_1D427A898()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1D427A920()
{
  uint64_t v0 = sub_1D44696C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD7E6E0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1EBD7E6D0;
  sub_1D44696A8();
  if (qword_1EBD7E680 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1EBD831C0;
  uint64_t v5 = *(void *)algn_1EBD831C8;
  type metadata accessor for FMIPManagerConfiguration();
  memset(v11, 0, sizeof(v11));
  uint64_t v12 = 0;
  uint64_t v7 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v7 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_preferredLocale, v3, v0);
  uint64_t v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_cacheDirectory);
  *uint64_t v8 = v6;
  v8[1] = v5;
  uint64_t v9 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v7
                                                    + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_interactionControllerProvider);
  *uint64_t v9 = sub_1D427650C;
  v9[1] = 0;
  sub_1D4276BD4((uint64_t)v11, v7 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_authenticationUIProvider);
  *(void *)(v7 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems) = v4;
  *(void *)(v7 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_snapshotHandlers) = 0;
  qword_1EBD7E720 = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D427AB04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D4469E88();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v9 = sub_1D42AC414(&qword_1EA6C9370, v8, (void (*)(uint64_t))type metadata accessor for FMIPBeaconSharingController);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a2;
  v10[3] = v9;
  v10[4] = a2;
  v10[5] = a1;
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_1D43733DC((uint64_t)v6, (uint64_t)&unk_1EA6C9378, (uint64_t)v10);
  return swift_release();
}

id static FMDemoManager.hasDemoModeAsset(for:)(unsigned char *a1)
{
  uint64_t v2 = sub_1D4469498();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10[15] = *a1;
  static FMDemoManager.assetURL(for:)();
  if (qword_1EBD7E640 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_1EBD7EC40;
  sub_1D4469478();
  uint64_t v7 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_fileExistsAtPath_, v7);

  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  return v8;
}

uint64_t sub_1D427ADB8(uint64_t a1, int a2)
{
  swift_beginAccess();
  unint64_t v4 = *(void *)(a1 + 280);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1D427D0D8(a2, v4);
  swift_bridgeObjectRelease();
  if ((sub_1D4298AA4(v5, 0, 0) & 1) != 0 && MEMORY[0x1D9447840](a1 + 32))
  {
    sub_1D428A3B4(a1);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  unint64_t v6 = *(void *)(a1 + 288);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1D427D874(a2 & 1, v6);
  swift_bridgeObjectRelease();
  if (!sub_1D42C0758(v7) || !MEMORY[0x1D9447840](a1 + 32)) {
    return swift_bridgeObjectRelease();
  }
  sub_1D438B9CC(a1);
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for FMIPBeaconRefreshFilter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t FMLocationShiftingRequest.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1D427B074()
{
  uint64_t v0 = sub_1D4469758();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_1EBD83000;
  uint64_t v2 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1D427B148()
{
  uint64_t v0 = sub_1D42D5DA0(&qword_1EBD7E918);
  uint64_t v1 = MEMORY[0x1F4188790]();
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4279568(v1, qword_1EBD7CB08);
  uint64_t v4 = sub_1D42D7FAC(v0, (uint64_t)qword_1EBD7CB08);
  if (qword_1EBD7E640 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_1EBD7EC40;
  unint64_t v6 = (void *)sub_1D4469B08();
  id v7 = objc_msgSend(v5, sel_containerURLForSecurityApplicationGroupIdentifier_, v6);

  if (v7)
  {
    sub_1D4469468();

    uint64_t v8 = sub_1D4469498();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 0, 1, v8);
  }
  else
  {
    uint64_t v9 = sub_1D4469498();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
  }
  return sub_1D42E8438((uint64_t)v3, v4);
}

uint64_t sub_1D427B2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469958();
  uint64_t v105 = *(void *)(v4 - 8);
  uint64_t v106 = v4;
  MEMORY[0x1F4188790](v4);
  v103 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1D44699B8();
  uint64_t v102 = *(void *)(v104 - 8);
  MEMORY[0x1F4188790](v104);
  v101 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for FMIPItem();
  uint64_t v7 = *(void *)(v109 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v109);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v83 - v10;
  MEMORY[0x1F4188790](v9);
  unint64_t v14 = (char *)&v83 - v13;
  uint64_t v15 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager;
  uint64_t v16 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager);
  uint64_t v17 = *(void *)(v16 + 192);
  unint64_t v18 = *(void *)(a2 + 16);
  uint64_t v107 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager;
  if (!v18)
  {
    swift_bridgeObjectRetain();
    goto LABEL_46;
  }
  uint64_t v89 = v12;
  uint64_t v98 = a1;
  unint64_t v19 = v18;
  uint64_t v20 = *(void *)(v16 + 184);
  unint64_t v108 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v97 = a2;
  swift_bridgeObjectRetain();
  LODWORD(v99) = 0;
  unint64_t v21 = 0;
  uint64_t v22 = -(uint64_t)v19;
  *(void *)&long long v23 = 136315138;
  long long v87 = v23;
  uint64_t v86 = MEMORY[0x1E4FBC840] + 8;
  v96 = "rk";
  v95 = "edLocation";
  v94 = "lastConnectionMaintenance";
  v93 = "lastDisconnected";
  v92 = "xied";
  v91 = "lter";
  v90 = "intentLocationUpdate";
  uint64_t v100 = v20;
  unint64_t v88 = v19;
LABEL_3:
  uint64_t v24 = v17;
  if (v21 <= v19) {
    unint64_t v25 = v19;
  }
  else {
    unint64_t v25 = v21;
  }
  uint64_t v17 = -(uint64_t)v25;
  ++v21;
  do
  {
    if (v17 + v21 == 1)
    {
      __break(1u);
LABEL_55:
      a2 = v97;
      swift_bridgeObjectRelease();
      a1 = v98;
      uint64_t v15 = v107;
      goto LABEL_43;
    }
    uint64_t v26 = v7;
    sub_1D42CA6F0(v108 + *(void *)(v7 + 72) * (v21 - 1), (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v27 = *(void *)&v14[*(int *)(v109 + 76)];
    sub_1D42CA6F0((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    if ((v27 & 0x40) == 0 && *(void *)(v24 + 16))
    {
      uint64_t v28 = *((void *)v11 + 44);
      uint64_t v29 = *((void *)v11 + 45);
      swift_bridgeObjectRetain();
      unint64_t v30 = sub_1D42C4FCC(v28, v29);
      if (v31)
      {
        uint64_t v32 = *(void *)(v24 + 56) + 24 * v30;
        uint64_t v33 = *(unsigned __int8 *)(v32 + 3);
        id v34 = *(id *)(v32 + 8);
        swift_bridgeObjectRelease();
        if (v34)
        {

          switch(v33)
          {
            case 6:
              swift_bridgeObjectRelease();
              sub_1D42CA8E8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
              break;
            case 20:
              goto LABEL_14;
            default:
              char v35 = sub_1D446A758();
              swift_bridgeObjectRelease();
              sub_1D42CA8E8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
              if ((v35 & 1) == 0) {
                goto LABEL_15;
              }
              break;
          }
          if (qword_1EBD80068 != -1) {
            swift_once();
          }
          uint64_t v36 = sub_1D4469928();
          sub_1D42D7FAC(v36, (uint64_t)qword_1EBD83228);
          uint64_t v37 = v89;
          sub_1D42CA6F0((uint64_t)v14, v89, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          uint64_t v38 = sub_1D44698F8();
          os_log_type_t v39 = sub_1D446A038();
          uint64_t v17 = v24;
          if (os_log_type_enabled(v38, v39))
          {
            uint64_t v40 = swift_slowAlloc();
            uint64_t v99 = swift_slowAlloc();
            uint64_t aBlock = v99;
            *(_DWORD *)uint64_t v40 = v87;
            uint64_t v41 = (uint64_t *)(v37 + *(int *)(v109 + 56));
            uint64_t v84 = *v41;
            os_log_t v85 = v38;
            unint64_t v42 = v41[1];
            swift_bridgeObjectRetain();
            *(void *)(v40 + 4) = sub_1D42CB9EC(v84, v42, &aBlock);
            swift_bridgeObjectRelease();
            sub_1D42CA8E8(v37, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            uint64_t v38 = v85;
            _os_log_impl(&dword_1D4271000, v85, v39, "FMIPManager: overriding location for \"%s\" with cached BA location because it's no longer connected", (uint8_t *)v40, 0xCu);
            uint64_t v43 = v99;
            swift_arrayDestroy();
            MEMORY[0x1D9447730](v43, -1, -1);
            MEMORY[0x1D9447730](v40, -1, -1);
          }
          else
          {
            sub_1D42CA8E8(v37, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          }

          uint64_t v24 = v100;
          uint64_t v44 = *((void *)v14 + 45);
          uint64_t v99 = *((void *)v14 + 44);
          uint64_t v45 = *(void *)(v100 + 16);
          swift_bridgeObjectRetain();
          uint64_t v7 = v26;
          if (v45)
          {
            swift_bridgeObjectRetain();
            unint64_t v46 = sub_1D42C4FCC(v99, v44);
            if (v47)
            {
              int v48 = (unsigned __int8 *)(*(void *)(v24 + 56) + 24 * v46);
              LODWORD(v84) = *v48;
              int v49 = v48[1];
              int v50 = v48[2];
              double v51 = *((double *)v48 + 2);
              int v52 = v48[3];
              os_log_t v85 = (os_log_t)*((id *)v48 + 1);
              swift_bridgeObjectRelease();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t aBlock = v17;
              BOOL v54 = v49 == 0;
              uint64_t v24 = v100;
              if (v54) {
                int v55 = 0;
              }
              else {
                int v55 = 256;
              }
              int v56 = v55 | v84;
              if (v50) {
                int v57 = 0x10000;
              }
              else {
                int v57 = 0;
              }
              int v58 = v56 | v57 | (v52 << 24);
              uint64_t v7 = v26;
              sub_1D42C158C(v58, (uint64_t)v85, v99, v44, isUniquelyReferenced_nonNull_native, v51);
              uint64_t v17 = aBlock;
              goto LABEL_37;
            }
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRetain();
          unint64_t v59 = sub_1D42C4FCC(v99, v44);
          char v61 = v60;
          swift_bridgeObjectRelease();
          if ((v61 & 1) == 0) {
            goto LABEL_38;
          }
          char v62 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t aBlock = v17;
          if ((v62 & 1) == 0)
          {
            sub_1D43D8F64();
            uint64_t v17 = aBlock;
          }
          swift_bridgeObjectRelease();
          v63 = *(void **)(*(void *)(v17 + 56) + 24 * v59 + 8);
          sub_1D43FD0D0(v59, v17);

LABEL_37:
          swift_bridgeObjectRelease();
LABEL_38:
          swift_bridgeObjectRelease();
          sub_1D42CA8E8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          LODWORD(v99) = 1;
          unint64_t v19 = v88;
          if (v22 + v21) {
            goto LABEL_3;
          }
          goto LABEL_55;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
LABEL_14:
    sub_1D42CA8E8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_15:
    sub_1D42CA8E8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    ++v21;
    uint64_t v7 = v26;
  }
  while (v22 + v21 != 1);
  a2 = v97;
  swift_bridgeObjectRelease();
  if (v99)
  {
    a1 = v98;
    uint64_t v17 = v24;
    uint64_t v15 = v107;
    uint64_t v24 = v100;
LABEL_43:
    swift_retain();
    uint64_t v64 = swift_bridgeObjectRetain();
    sub_1D4278240(v64, v24);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  swift_bridgeObjectRelease();
  a1 = v98;
  uint64_t v17 = v24;
  uint64_t v15 = v107;
LABEL_46:
  swift_retain();
  char v65 = sub_1D4298AA4(a2, 4, 0);
  swift_release();
  if (v65)
  {
    uint64_t v109 = v17;
    uint64_t v66 = *(void *)(a1 + v15);
    swift_beginAccess();
    uint64_t v67 = *(void *)(v66 + 280);
    unint64_t v108 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue);
    v115 = sub_1D42E7AA0;
    uint64_t v116 = a1;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v112 = 1107296256;
    v113 = sub_1D42BD950;
    v114 = &unk_1F2C0B5E0;
    v68 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    v69 = v101;
    sub_1D4469988();
    uint64_t v110 = MEMORY[0x1E4FBC860];
    sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    v70 = v103;
    uint64_t v71 = v106;
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v69, v70, v68);
    _Block_release(v68);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v70, v71);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v69, v104);
    swift_release();
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_useRealtimeForItems) == 1)
    {
      uint64_t v72 = v67;
      v73 = (uint64_t *)(*(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_locationController)
                      + OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_currentLocation);
      v74 = (void *)v73[1];
      if (v74)
      {
        v75 = (uint64_t (*)(uint64_t))v73[2];
        uint64_t v76 = *v73;
        LOWORD(aBlock) = v76 & 0x101;
        BYTE2(aBlock) = BYTE2(v76) & 1;
        BYTE3(aBlock) = BYTE3(v76);
        uint64_t v112 = (uint64_t)v74;
        v113 = v75;
        id v77 = v74;
        sub_1D4382280((unsigned __int8 *)&aBlock, v72, "FMIPManager: appending realtime location %{private}s", (uint64_t)&unk_1F2C0B618, (uint64_t)sub_1D4389EEC, (uint64_t)&unk_1F2C0B630);
      }
    }
    swift_bridgeObjectRelease();
    v78 = *(void **)(a1 + v107);
    swift_beginAccess();
    uint64_t v79 = v78[10];
    swift_beginAccess();
    uint64_t v80 = v78[35];
    uint64_t v81 = v78[36];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D42C73B8(v79, v80, v81);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_snapshotItemsResponseReceived) & 1) == 0)
  {
    *(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_snapshotItemsResponseReceived) = 1;
    sub_1D428D164(a2, 0);
  }
  *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemCounts) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1D4374EC8();
  return swift_bridgeObjectRelease();
}

void sub_1D427C174(uint64_t a1, char a2)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
  uint64_t v5 = sub_1D44698F8();
  os_log_type_t v6 = sub_1D446A038();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1D4271000, v5, v6, "FMIPRefreshingController: Refreshing", v7, 2u);
    MEMORY[0x1D9447730](v7, -1, -1);
  }

  swift_retain_n();
  uint64_t v8 = sub_1D44698F8();
  os_log_type_t v9 = sub_1D446A038();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v16 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    sub_1D42D5DA0(&qword_1EA6CB358);
    uint64_t v12 = sub_1D446A158();
    sub_1D42CB9EC(v12, v13, &v16);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v8, v9, "FMIPRefreshingController: Refreshing request itemCounts: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v11, -1, -1);
    MEMORY[0x1D9447730](v10, -1, -1);
  }
  else
  {

    uint64_t v14 = swift_release_n();
  }
  uint64_t v15 = (void *)MEMORY[0x1D9446F50](v14);
  sub_1D428C000(a1, a2 & 1);
}

uint64_t sub_1D427C3E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1D4469118();
  uint64_t v30 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D42D5DA0((uint64_t *)&unk_1EA6CA568);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v18 = (char *)v29 - v17;
  v29[1] = a1;
  v29[2] = a2;
  v29[3] = a3;
  v29[4] = a4;
  uint64_t v19 = sub_1D4469138();
  uint64_t v31 = a5;
  unint64_t v21 = v20;
  if (v20 >> 60 == 15)
  {
    sub_1D42D5DA0(&qword_1EA6CA618);
    sub_1D42BF5F0(&qword_1EA6CA620, &qword_1EA6CA618);
    uint64_t v22 = (void *)swift_allocError();
    swift_willThrow();
    sub_1D4469858();
    sub_1D4469888();
    sub_1D4469338();
    swift_allocObject();
    sub_1D4469328();
    sub_1D42BF5F0(&qword_1EA6CA608, (uint64_t *)&unk_1EA6CA568);
    uint64_t v24 = sub_1D4469318();
    unint64_t v26 = v25;
    swift_release();
    uint64_t v32 = v24;
    unint64_t v33 = v26;
    uint64_t v27 = v30;
    (*(void (**)(char *, void, uint64_t))(v30 + 104))(v12, *MEMORY[0x1E4F619E8], v10);
    sub_1D439F210();
    sub_1D4469128();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v10);

    sub_1D42DCFDC(v24, v26);
    unint64_t v18 = v16;
  }
  else
  {
    uint64_t v23 = v19;
    sub_1D4469308();
    swift_allocObject();
    sub_1D44692F8();
    sub_1D42BF5F0(&qword_1EA6CA628, (uint64_t *)&unk_1EA6CA568);
    sub_1D44692E8();
    sub_1D42DD08C(v23, v21);
    swift_release();
  }
  return sub_1D4276C98((uint64_t)v18, v31, (uint64_t *)&unk_1EA6CA568);
}

uint64_t sub_1D427C94C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager);
  swift_beginAccess();
  *a1 = *(void *)(v3 + 280);
  return swift_bridgeObjectRetain();
}

id sub_1D427C9B0(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t *a5, void (*a6)(void, void), uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v58 = a4;
  uint64_t v16 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v16 - 8);
  unint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    uint64_t v19 = sub_1D4469108();
    v60[3] = v19;
    v60[4] = sub_1D42C626C(&qword_1EBD7E550, MEMORY[0x1E4F619E0]);
    unint64_t v20 = sub_1D42BECB4(v60);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F619C0], v19);
    LOBYTE(v19) = MEMORY[0x1D9445460](v60);
    sub_1D42BEC64((uint64_t)v60);
    if (v19)
    {
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_1D4469928();
      uint64_t v22 = sub_1D42D7FAC(v21, (uint64_t)qword_1EBD83228);
      id v23 = a3;
      id v24 = a3;
      unint64_t v25 = sub_1D44698F8();
      os_log_type_t v26 = sub_1D446A038();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v55 = v22;
        uint64_t v28 = (uint8_t *)v27;
        uint64_t v29 = swift_slowAlloc();
        int v56 = a6;
        uint64_t v30 = v29;
        v60[0] = v29;
        uint64_t v57 = a7;
        *(_DWORD *)uint64_t v28 = 136315138;
        swift_getErrorValue();
        uint64_t v31 = sub_1D446A7D8();
        uint64_t v59 = sub_1D42CB9EC(v31, v32, v60);
        sub_1D446A188();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D4271000, v25, v26, "FMIPServerInteractionController: didn't complete because of error (will check Stewie): %s", v28, 0xCu);
        swift_arrayDestroy();
        uint64_t v33 = v30;
        a6 = v56;
        MEMORY[0x1D9447730](v33, -1, -1);
        MEMORY[0x1D9447730](v28, -1, -1);
      }
      else
      {
      }
      id v35 = *(id *)(v58 + qword_1EBD7E7B8);
      char v36 = sub_1D43586A8(v35);

      if (v36 & 1) != 0 && ((*(uint64_t (**)(void))(qword_1EBD83008 + *a5 + 200))())
      {
        uint64_t v37 = sub_1D44698F8();
        os_log_type_t v38 = sub_1D446A038();
        if (os_log_type_enabled(v37, v38))
        {
          os_log_type_t v39 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v39 = 0;
          _os_log_impl(&dword_1D4271000, v37, v38, "FMIPServerInteractionController: discarded alert because refresh request and Stewie-enabled", v39, 2u);
          MEMORY[0x1D9447730](v39, -1, -1);
        }
      }
      else
      {
        uint64_t v40 = sub_1D44698F8();
        os_log_type_t v41 = sub_1D446A038();
        if (os_log_type_enabled(v40, v41))
        {
          unint64_t v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v42 = 0;
          _os_log_impl(&dword_1D4271000, v40, v41, "FMIPServerInteractionController: proceeding with alert", v42, 2u);
          MEMORY[0x1D9447730](v42, -1, -1);
        }

        sub_1D43FB984(a5, (uint64_t)a3);
      }
    }
    a6(0, a3);
    return objc_msgSend(a8, sel_signal);
  }
  else
  {
    uint64_t v34 = *a5;
    if (type metadata accessor for FMIPInitClientRequest() == v34) {
      *(unsigned char *)(v58 + qword_1EBD831F0) = 1;
    }
    if (a2 >> 60 == 15)
    {
LABEL_27:
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_1D4469928();
      sub_1D42D7FAC(v47, (uint64_t)qword_1EBD83228);
      int v48 = sub_1D44698F8();
      os_log_type_t v49 = sub_1D446A038();
      if (os_log_type_enabled(v48, v49))
      {
        int v50 = a6;
        double v51 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)double v51 = 0;
        _os_log_impl(&dword_1D4271000, v48, v49, "FMIPServerInteractionController: received empty data", v51, 2u);
        int v52 = v51;
        a6 = v50;
        MEMORY[0x1D9447730](v52, -1, -1);
      }

      sub_1D4406B40();
      v53 = (void *)swift_allocError();
      *BOOL v54 = 1;
      a6(0, v53);

      return objc_msgSend(a8, sel_signal);
    }
    else
    {
      switch(a2 >> 62)
      {
        case 1uLL:
          if ((int)a1 == a1 >> 32) {
            goto LABEL_27;
          }
          goto LABEL_24;
        case 2uLL:
          if (*(void *)(a1 + 16) == *(void *)(a1 + 24)) {
            goto LABEL_27;
          }
LABEL_24:
          sub_1D42DD034(a1, a2);
          goto LABEL_25;
        case 3uLL:
          goto LABEL_12;
        default:
          if ((a2 & 0xFF000000000000) == 0)
          {
LABEL_12:
            sub_1D42DD08C(a1, a2);
            goto LABEL_27;
          }
LABEL_25:
          uint64_t v44 = sub_1D4469E88();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v18, 1, 1, v44);
          uint64_t v45 = (void *)swift_allocObject();
          v45[2] = 0;
          v45[3] = 0;
          v45[4] = a9;
          v45[5] = a1;
          v45[6] = a2;
          v45[7] = v58;
          v45[8] = a6;
          v45[9] = a7;
          v45[10] = a8;
          swift_retain();
          swift_retain();
          id v46 = a8;
          sub_1D43733DC((uint64_t)v18, (uint64_t)&unk_1EA6CB108, (uint64_t)v45);
          id result = (id)swift_release();
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1D427D0D8(int a1, unint64_t a2)
{
  int v71 = a1;
  uint64_t updated = type metadata accessor for FMIPItemUpdateType(0);
  MEMORY[0x1F4188790](updated);
  v68 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for FMIPItem();
  uint64_t v77 = *(void *)(v62 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v62);
  uint64_t v67 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v82 = (uint64_t)&v59 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v76 = (char *)&v59 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v59 - v10;
  uint64_t v83 = sub_1D42D5DA0(&qword_1EBD7E818);
  uint64_t v12 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  v63 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E820);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (uint64_t *)((char *)&v59 - v18);
  unint64_t v20 = *(void *)(a2 + 16);
  v74 = (uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v75 = (void (**)(uint64_t, uint64_t))(v12 + 56);
  v69 = (long long *)(v11 + 392);
  v70 = v11 + 8;
  swift_bridgeObjectRetain_n();
  uint64_t result = (uint64_t)v17;
  unint64_t v22 = 0;
  *(void *)&long long v23 = 136315394;
  long long v61 = v23;
  unint64_t v60 = 0x80000001D4481300;
  uint64_t v59 = MEMORY[0x1E4FBC840] + 8;
  unint64_t v24 = v20;
  unint64_t v64 = a2;
  unint64_t v65 = v20;
  v78 = (unint64_t *)v17;
  v73 = v19;
  uint64_t v66 = v11;
  BOOL v25 = v20 == 0;
  if (v20) {
    goto LABEL_3;
  }
LABEL_2:
  uint64_t v26 = 1;
  unint64_t v81 = v24;
  uint64_t v27 = v83;
  while (1)
  {
    uint64_t v35 = result;
    (*v75)(result, v26);
    sub_1D4276C98(v35, (uint64_t)v19, (uint64_t *)&unk_1EBD7E820);
    int v36 = (*v74)(v19, 1, v27);
    uint64_t v37 = (uint64_t)v76;
    if (v36 == 1) {
      goto LABEL_27;
    }
    unint64_t v38 = *v19;
    sub_1D42BB578((uint64_t)v19 + *(int *)(v27 + 48), (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    if (v71) {
      int v39 = (v11[*(int *)(v62 + 76)] >> 6) & 1;
    }
    else {
      int v39 = 0;
    }
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_1D4469928();
    sub_1D42D7FAC(v40, (uint64_t)qword_1EBD83228);
    sub_1D42D22A0((uint64_t)v11, v37, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    os_log_type_t v41 = sub_1D44698F8();
    os_log_type_t v42 = sub_1D446A038();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      *(void *)&long long v80 = a2;
      uint64_t v44 = v43;
      uint64_t v45 = swift_slowAlloc();
      v89[0] = v45;
      *(_DWORD *)uint64_t v44 = v61;
      unint64_t v46 = v38;
      uint64_t v47 = v37;
      uint64_t v49 = *(void *)(v37 + 352);
      unint64_t v48 = *(void *)(v37 + 360);
      swift_bridgeObjectRetain();
      uint64_t v50 = v49;
      unint64_t v38 = v46;
      uint64_t v19 = v73;
      *(void *)(v44 + 4) = sub_1D42CB9EC(v50, v48, v89);
      swift_bridgeObjectRelease();
      sub_1D42D20B8(v47, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      *(_WORD *)(v44 + 12) = 2080;
      uint64_t v51 = v39 ? 0xD000000000000012 : 0;
      unint64_t v52 = v39 ? v60 : 0xE000000000000000;
      *(void *)(v44 + 14) = sub_1D42CB9EC(v51, v52, v89);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v41, v42, "FMIPDataManager: Resetting transient properties for %s %s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v45, -1, -1);
      uint64_t v53 = v44;
      a2 = v80;
      MEMORY[0x1D9447730](v53, -1, -1);
    }
    else
    {
      sub_1D42D20B8(v37, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    }

    uint64_t v11 = v66;
    uint64_t v54 = v67;
    sub_1D42D22A0((uint64_t)v66, v67, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v55 = (uint64_t)v68;
    swift_storeEnumTagMultiPayload();
    sub_1D4276C98((uint64_t)v70, (uint64_t)v89, &qword_1EBD7CC10);
    sub_1D4276C98((uint64_t)v89, (uint64_t)v88, &qword_1EBD7CC10);
    uint64_t v86 = (char *)*((void *)v11 + 48);
    long long v80 = *v69;
    long long v87 = v80;
    uint64_t v84 = *((void *)v11 + 39);
    long long v79 = *((_OWORD *)v11 + 20);
    long long v85 = v79;
    sub_1D42FAC78((uint64_t)v89, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
    int v56 = (void *)v80;
    id v57 = (id)v79;
    id v58 = v56;
    FMIPItem.init(item:updateType:address:location:crowdSourcedLocation:connected:)(v54, v55, (uint64_t)v88, &v86, &v84, v39, v82);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result)
    {
      if ((v38 & 0x8000000000000000) != 0) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t result = sub_1D43994A0(a2);
      a2 = result;
      if ((v38 & 0x8000000000000000) != 0)
      {
LABEL_26:
        __break(1u);
LABEL_27:
        swift_bridgeObjectRelease();
        return a2;
      }
    }
    if (v38 >= *(void *)(a2 + 16)) {
      break;
    }
    sub_1D439ED88(v82, a2+ ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))+ *(void *)(v77 + 72) * v38, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42D20B8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t result = (uint64_t)v78;
    unint64_t v24 = v65;
    unint64_t v22 = v81;
    BOOL v25 = v81 >= v65;
    if (v81 == v65) {
      goto LABEL_2;
    }
LABEL_3:
    if (v25) {
      goto LABEL_29;
    }
    unint64_t v28 = v22 + 1;
    unint64_t v29 = a2;
    unint64_t v30 = v22;
    uint64_t v31 = (uint64_t)&v63[*(int *)(v83 + 48)];
    sub_1D42D22A0(v64+ ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))+ *(void *)(v77 + 72) * v22, v31, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    unint64_t v32 = v78;
    uint64_t v33 = (uint64_t)v78 + *(int *)(v83 + 48);
    unint64_t *v78 = v30;
    a2 = v29;
    uint64_t v34 = v31;
    uint64_t v27 = v83;
    sub_1D42BB578(v34, v33, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t result = (uint64_t)v32;
    uint64_t v19 = v73;
    uint64_t v26 = 0;
    unint64_t v81 = v28;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1D427D874(int a1, unint64_t a2)
{
  int v73 = a1;
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7E710);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v81 = (uint64_t)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for FMIPItemGroup();
  uint64_t v76 = *(void *)(v72 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v72);
  int v71 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  v70 = (uint64_t *)((char *)&v58 - v8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v69 = (uint64_t)&v58 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v58 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v58 - v14;
  uint64_t v16 = sub_1D42D5DA0(&qword_1EBD7E808);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  long long v61 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1D42D5DA0(&qword_1EBD7E810);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  unint64_t v22 = (unint64_t *)((char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v20);
  unint64_t v24 = (uint64_t *)((char *)&v58 - v23);
  unint64_t v25 = *(void *)(a2 + 16);
  v74 = (unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v75 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t result = swift_bridgeObjectRetain_n();
  unint64_t v27 = 0;
  *(void *)&long long v28 = 136315394;
  long long v60 = v28;
  unint64_t v59 = 0x80000001D4481300;
  uint64_t v58 = MEMORY[0x1E4FBC840] + 8;
  unint64_t v62 = a2;
  unint64_t v63 = v25;
  uint64_t v67 = v15;
  v68 = v13;
  unint64_t v65 = v22;
  uint64_t v66 = v16;
  unint64_t v64 = v24;
  BOOL v29 = v25 == 0;
  if (v25) {
    goto LABEL_3;
  }
LABEL_2:
  for (uint64_t i = 1; ; uint64_t i = 0)
  {
    (*v75)(v22, i, 1, v16);
    sub_1D4276C98((uint64_t)v22, (uint64_t)v24, &qword_1EBD7E810);
    if ((*v74)(v24, 1, v16) == 1)
    {
      swift_bridgeObjectRelease();
      return a2;
    }
    unint64_t v78 = *v24;
    sub_1D42BB578((uint64_t)v24 + *(int *)(v16 + 48), (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    if (v73) {
      int v33 = (v15[64] >> 6) & 1;
    }
    else {
      int v33 = 0;
    }
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1D4469928();
    sub_1D42D7FAC(v34, (uint64_t)qword_1EBD83228);
    sub_1D42D22A0((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v35 = sub_1D44698F8();
    os_log_type_t v36 = sub_1D446A038();
    BOOL v37 = os_log_type_enabled(v35, v36);
    unint64_t v79 = a2;
    unint64_t v80 = v25;
    if (v37)
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      v82[0] = v39;
      *(_DWORD *)uint64_t v38 = v60;
      uint64_t v41 = *((void *)v13 + 1);
      unint64_t v40 = *((void *)v13 + 2);
      swift_bridgeObjectRetain();
      *(void *)(v38 + 4) = sub_1D42CB9EC(v41, v40, v82);
      swift_bridgeObjectRelease();
      sub_1D42D20B8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      *(_WORD *)(v38 + 12) = 2080;
      uint64_t v42 = v33 ? 0xD000000000000012 : 0;
      unint64_t v43 = v33 ? v59 : 0xE000000000000000;
      *(void *)(v38 + 14) = sub_1D42CB9EC(v42, v43, v82);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v35, v36, "FMIPDataManager: Resetting transient properties for item group %s %s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v39, -1, -1);
      MEMORY[0x1D9447730](v38, -1, -1);
    }
    else
    {
      sub_1D42D20B8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    }

    uint64_t v44 = v70;
    sub_1D42D22A0((uint64_t)v15, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v45 = v44[8];
    uint64_t v46 = v44[9];
    uint64_t v77 = v46;
    if ((v45 & 0x40) != 0) {
      int v47 = v33;
    }
    else {
      int v47 = 1;
    }
    if (!v47) {
      v45 &= ~0x40uLL;
    }
    uint64_t v49 = v44[2];
    uint64_t v48 = v44[3];
    uint64_t v50 = *v44;
    uint64_t v51 = v71;
    uint64_t v52 = v72;
    *((void *)v71 + 1) = v44[1];
    v51[2] = v49;
    *(void *)((char *)v51 + *(int *)(v52 + 52)) = *(uint64_t *)((char *)v44 + *(int *)(v52 + 52));
    uint64_t v53 = v44[6];
    v51[7] = v44[7];
    v51[8] = v45;
    uint64_t v55 = v44[4];
    uint64_t v54 = v44[5];
    v51[3] = v48;
    v51[4] = v55;
    v51[5] = v54;
    v51[6] = v53;
    v51[9] = v46;
    *uint64_t v51 = v50;
    sub_1D42A3A74((uint64_t)v44 + *(int *)(v52 + 48), v81, &qword_1EBD7E710);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D42D20B8((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D4276C98(v81, (uint64_t)v51 + *(int *)(v52 + 48), &qword_1EBD7E710);
    uint64_t v56 = (uint64_t)v51;
    uint64_t v57 = v69;
    sub_1D42BB578(v56, v69, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    a2 = v79;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1D4399478(a2);
      a2 = result;
    }
    unint64_t v22 = v65;
    uint64_t v16 = v66;
    unint64_t v25 = v63;
    unint64_t v24 = v64;
    unint64_t v27 = v80;
    uint64_t v15 = v67;
    uint64_t v13 = v68;
    if ((v78 & 0x8000000000000000) != 0) {
      break;
    }
    if (v78 >= *(void *)(a2 + 16)) {
      goto LABEL_33;
    }
    sub_1D439ED88(v57, a2+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(void *)(v76 + 72) * v78, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t result = sub_1D42D20B8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    BOOL v29 = v27 >= v25;
    if (v27 == v25) {
      goto LABEL_2;
    }
LABEL_3:
    if (v29) {
      goto LABEL_34;
    }
    unint64_t v25 = v27 + 1;
    uint64_t v31 = (uint64_t)&v61[*(int *)(v16 + 48)];
    sub_1D42D22A0(v62+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(void *)(v76 + 72) * v27, v31, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v32 = (uint64_t)v22 + *(int *)(v16 + 48);
    *unint64_t v22 = v27;
    sub_1D42BB578(v31, v32, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1D427E030()
{
  uint64_t v8 = 0;
  uint64_t v1 = *(NSObject **)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  *(void *)(v2 + 24) = &v8;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1D42E31CC;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_1D42AEE88;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42AEDE4;
  aBlock[3] = &unk_1F2C0CD48;
  uint64_t v4 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v8;
    swift_release();
    return v6;
  }
  return result;
}

uint64_t sub_1D427E194()
{
  int v1 = *(unsigned __int8 *)(v0 + 292);
  _Block_release(*(const void **)(v0 + 264));
  uint64_t v2 = sub_1D44698F8();
  os_log_type_t v3 = sub_1D446A038();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 67109120;
    *(_DWORD *)(v0 + 288) = v1;
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v2, v3, "FMIPBeaconSharingController: Started sharing controller: %{BOOL}d", v4, 8u);
    MEMORY[0x1D9447730](v4, -1, -1);
  }

  *(unsigned char *)(*(void *)(v0 + 248) + 120) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1D42E3F1C;
  uint64_t v6 = *(void *)(v0 + 248);
  v5[16] = v6;
  return MEMORY[0x1F4188298](sub_1D4276074, v6, 0);
}

uint64_t sub_1D427E300(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EBD7D9A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42E5D2C();
  sub_1D446A8C8();
  if (v2) {
    goto LABEL_71;
  }
  LOBYTE(v50) = 1;
  uint64_t v9 = sub_1D446A548();
  type metadata accessor for FMIPUserInfoResponseFragment();
  char v52 = 2;
  sub_1D427E9FC(&qword_1EBD7D6D8, (void (*)(uint64_t))type metadata accessor for FMIPUserInfoResponseFragment);
  sub_1D446A5D8();
  uint64_t v10 = v50;
  type metadata accessor for FMIPAlert();
  char v52 = 0;
  sub_1D427E9FC(&qword_1EBD7D7A8, (void (*)(uint64_t))type metadata accessor for FMIPAlert);
  sub_1D446A5D8();
  uint64_t v49 = v50;
  LOBYTE(v50) = 3;
  uint64_t result = sub_1D446A598();
  uint64_t v13 = v12;
  uint64_t v14 = HIBYTE(v12) & 0xF;
  uint64_t v15 = result & 0xFFFFFFFFFFFFLL;
  if ((v13 & 0x2000000000000000) != 0) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = result & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v48 = v10;
  if (!v16)
  {
    swift_bridgeObjectRelease();
LABEL_70:
    swift_bridgeObjectRelease();
    sub_1D4406B40();
    swift_allocError();
    *uint64_t v44 = 0;
    swift_willThrow();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
LABEL_71:
    type metadata accessor for FMIPBaseResponse();
    swift_deallocPartialClassInstance();
    goto LABEL_72;
  }
  if ((v13 & 0x1000000000000000) != 0)
  {
    uint64_t v47 = (uint64_t)sub_1D430B5A4(result, v13, 10);
    char v19 = v45;
    goto LABEL_54;
  }
  if ((v13 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v17 = (unsigned __int8 *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v17 = (unsigned __int8 *)sub_1D446A3E8();
    }
    uint64_t v47 = (uint64_t)sub_1D430B58C(v17, v15, 10);
    char v19 = v18 & 1;
    goto LABEL_54;
  }
  *(void *)&long long v50 = result;
  *((void *)&v50 + 1) = v13 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v14) {
      goto LABEL_76;
    }
    if (v14 == 1 || (BYTE1(result) - 48) > 9u) {
      goto LABEL_32;
    }
    uint64_t v20 = (BYTE1(result) - 48);
    if (v14 == 2)
    {
LABEL_34:
      uint64_t v47 = v20;
      char v19 = 0;
      goto LABEL_54;
    }
    if ((BYTE2(result) - 48) > 9u) {
      goto LABEL_32;
    }
    uint64_t v21 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
    uint64_t v22 = v14 - 3;
    if (v22)
    {
      uint64_t v23 = (unsigned __int8 *)&v50 + 3;
      while (1)
      {
        unsigned int v24 = *v23 - 48;
        if (v24 > 9) {
          goto LABEL_52;
        }
        uint64_t v25 = (unsigned __int128)(v21 * (__int128)10) >> 64;
        uint64_t v26 = 10 * v21;
        if (v25 != v26 >> 63) {
          goto LABEL_52;
        }
        BOOL v27 = __OFADD__(v26, v24);
        uint64_t v21 = v26 + v24;
        if (v27) {
          goto LABEL_52;
        }
        char v19 = 0;
        ++v23;
        if (!--v22) {
          goto LABEL_53;
        }
      }
    }
LABEL_45:
    uint64_t v47 = v21;
    char v19 = 0;
    goto LABEL_54;
  }
  if (result != 45)
  {
    if (!v14 || (result - 48) > 9u) {
      goto LABEL_32;
    }
    uint64_t v20 = (result - 48);
    if (v14 == 1) {
      goto LABEL_34;
    }
    if ((BYTE1(result) - 48) > 9u) {
      goto LABEL_32;
    }
    uint64_t v21 = 10 * (result - 48) + (BYTE1(result) - 48);
    uint64_t v28 = v14 - 2;
    if (v28)
    {
      BOOL v29 = (unsigned __int8 *)&v50 + 2;
      while (1)
      {
        unsigned int v30 = *v29 - 48;
        if (v30 > 9) {
          goto LABEL_52;
        }
        uint64_t v31 = (unsigned __int128)(v21 * (__int128)10) >> 64;
        uint64_t v32 = 10 * v21;
        if (v31 != v32 >> 63) {
          goto LABEL_52;
        }
        BOOL v27 = __OFADD__(v32, v30);
        uint64_t v21 = v32 + v30;
        if (v27) {
          goto LABEL_52;
        }
        char v19 = 0;
        ++v29;
        if (!--v28) {
          goto LABEL_53;
        }
      }
    }
    goto LABEL_45;
  }
  if (v14)
  {
    if (v14 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v14 == 2)
      {
        char v19 = 0;
        uint64_t v47 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_54;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        uint64_t v21 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        uint64_t v33 = v14 - 3;
        if (!v33) {
          goto LABEL_45;
        }
        uint64_t v34 = (unsigned __int8 *)&v50 + 3;
        while (1)
        {
          unsigned int v35 = *v34 - 48;
          if (v35 > 9) {
            break;
          }
          uint64_t v36 = (unsigned __int128)(v21 * (__int128)10) >> 64;
          uint64_t v37 = 10 * v21;
          if (v36 != v37 >> 63) {
            break;
          }
          BOOL v27 = __OFSUB__(v37, v35);
          uint64_t v21 = v37 - v35;
          if (v27) {
            break;
          }
          char v19 = 0;
          ++v34;
          if (!--v33) {
            goto LABEL_53;
          }
        }
LABEL_52:
        uint64_t v21 = 0;
        char v19 = 1;
LABEL_53:
        uint64_t v47 = v21;
LABEL_54:
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          if (v9)
          {
            if (*(void *)(v9 + 16))
            {
              swift_bridgeObjectRetain();
              unint64_t v38 = sub_1D42C4FCC(0x4E6C6C53776F6873, 0xEA0000000000776FLL);
              if (v39)
              {
                sub_1D42CBAC0(*(void *)(v9 + 56) + 32 * v38, (uint64_t)&v50);
              }
              else
              {
                long long v50 = 0u;
                long long v51 = 0u;
              }
              swift_bridgeObjectRelease();
            }
            else
            {
              long long v50 = 0u;
              long long v51 = 0u;
            }
            uint64_t v41 = v48;
            (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            if (*((void *)&v51 + 1))
            {
              if (swift_dynamicCast())
              {
                char v40 = v52;
                goto LABEL_68;
              }
            }
            else
            {
              sub_1D429D4F4((uint64_t)&v50);
            }
            char v40 = 0;
            goto LABEL_68;
          }
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          char v40 = 0;
          uint64_t v41 = v48;
LABEL_68:
          uint64_t v42 = v49;
          unint64_t v43 = (unsigned __int8 *)v47;
          *(void *)(v3 + 16) = v9;
          *(void *)(v3 + 24) = v41;
          *(void *)(v3 + 48) = v43;
          *(unsigned char *)(v3 + 40) = v40;
          *(void *)(v3 + 32) = v42;
LABEL_72:
          sub_1D42BEC64((uint64_t)a1);
          return v3;
        }
        goto LABEL_70;
      }
    }
LABEL_32:
    uint64_t v47 = 0;
    char v19 = 1;
    goto LABEL_54;
  }
  __break(1u);
LABEL_76:
  __break(1u);
  return result;
}

uint64_t sub_1D427E9FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL FMIPManager.isInitialized.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration)
                 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems);
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_initializedSubsystems);
  if (v1 == 1)
  {
    swift_beginAccess();
    if (*v2) {
      return (*v2 >> 1) & 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    swift_beginAccess();
    return (v1 & ~*v2) == 0;
  }
}

uint64_t sub_1D427EAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v19 = sub_1D446A088();
  uint64_t v21 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D446A068();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1D44699B8();
  MEMORY[0x1F4188790](v6 - 8);
  *(void *)(a2 + 24) = 0;
  uint64_t v18 = a2;
  swift_unknownObjectWeakInit();
  *(void *)(a2 + 32) = MEMORY[0x1E4FBC870];
  v17[0] = sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7E860);
  sub_1D4469988();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  v17[2] = sub_1D42C61DC((unint64_t *)&qword_1EBD7FDB0, MEMORY[0x1E4FBCC10]);
  v17[1] = sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FDA0, (uint64_t *)&unk_1EBD7FD90);
  sub_1D446A1F8();
  uint64_t v7 = *MEMORY[0x1E4FBCC58];
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 104);
  v21 += 104;
  uint64_t v9 = v4;
  uint64_t v10 = v4;
  uint64_t v11 = v19;
  v8(v10, v7, v19);
  uint64_t v12 = sub_1D446A0C8();
  uint64_t v13 = v18;
  *(void *)(v18 + 40) = v12;
  sub_1D4469988();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1D446A1F8();
  v8(v9, v7, v11);
  uint64_t v14 = sub_1D446A0C8();
  uint64_t v15 = v20;
  *(void *)(v13 + 48) = v14;
  *(void *)(v13 + 56) = v15;
  return v13;
}

uint64_t sub_1D427EE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4469958();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D44699B8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(void *)&v3[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_connectionQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v3;
  aBlock[4] = a2;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = a3;
  uint64_t v15 = _Block_copy(aBlock);
  uint64_t v16 = v3;
  sub_1D4469988();
  v18[1] = MEMORY[0x1E4FBC860];
  sub_1D42C6224((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_1D427F0B8(uint64_t a1)
{
  uint64_t v2 = a1 + 32;
  if (MEMORY[0x1D9447840](a1 + 32))
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1D428A3B4(a1);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t result = MEMORY[0x1D9447840](v2);
  if (result)
  {
    swift_beginAccess();
    uint64_t v4 = *(void *)(a1 + 80);
    swift_bridgeObjectRetain();
    sub_1D428CE28(a1, v4);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D427F180()
{
  uint64_t v8 = 0;
  uint64_t v1 = *(NSObject **)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  *(void *)(v2 + 24) = &v8;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1D42E3214;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_1D42AEE88;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42AEDE4;
  aBlock[3] = &unk_1F2C0CC58;
  uint64_t v4 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v8;
    swift_release();
    return v6;
  }
  return result;
}

uint64_t sub_1D427F2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v18 = a5;
  uint64_t v19 = sub_1D44699B8();
  uint64_t v8 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D4469958();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4469948();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a1;
  aBlock[4] = a4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = v18;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v10, v14, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_1D427F510()
{
  uint64_t v8 = 0;
  uint64_t v1 = *(NSObject **)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  *(void *)(v2 + 24) = &v8;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1D42E321C;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_1D42AEE88;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42AEDE4;
  aBlock[3] = &unk_1F2C0CCD0;
  uint64_t v4 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v8;
    swift_release();
    return v6;
  }
  return result;
}

uint64_t sub_1D427F674(uint64_t a1)
{
  uint64_t v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_initializedSubsystems);
  swift_beginAccess();
  uint64_t v2 = *v1;
  *v1 |= 1uLL;
  uint64_t v4 = v2;
  return sub_1D4375E68(&v4);
}

uint64_t sub_1D427F6D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D4469958();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D44699B8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = v3;
  *(void *)(v14 + 32) = a1;
  aBlock[4] = sub_1D42E34A4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C08718;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D4469988();
  v17[1] = MEMORY[0x1E4FBC860];
  sub_1D42E81D4();
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42E2378();
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_1D427F950()
{
  uint64_t v1 = sub_1D4469958();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1D44699B8();
  uint64_t v5 = *(void *)(v12[0] - 8);
  MEMORY[0x1F4188790](v12[0]);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)(v0 + 72);
  aBlock[4] = sub_1D42E612C;
  uint64_t v14 = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0CEB0;
  uint64_t v9 = _Block_copy(aBlock);
  id v10 = v8;
  swift_retain();
  sub_1D4469988();
  v12[1] = MEMORY[0x1E4FBC860];
  sub_1D42AAE70((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v7, v4, v9);
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, void))(v5 + 8))(v7, v12[0]);
  return swift_release();
}

uint64_t sub_1D427FBFC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v28 = a4;
  int v27 = a2;
  uint64_t v8 = sub_1D4469958();
  uint64_t v32 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1D44699B8();
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = &v26[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = *(void *)(v4 + qword_1EA6CB220);
  sub_1D42D22A0(a1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v19 = v18 + v16;
  unint64_t v20 = (v18 + v16) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  unint64_t v22 = v20 + v21;
  *(void *)(v21 + 16) = v5;
  sub_1D42BB578((uint64_t)v17, v21 + v18, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  *(unsigned char *)(v21 + v19) = v27;
  uint64_t v23 = v28;
  *(void *)(v22 + 8) = a3;
  *(void *)(v22 + 16) = v23;
  aBlock[4] = sub_1D439E2DC;
  void aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0C9D8;
  unsigned int v24 = _Block_copy(aBlock);
  swift_retain();
  sub_1D42972D4(a3);
  sub_1D4469988();
  uint64_t v33 = MEMORY[0x1E4FBC860];
  sub_1D42AAE70((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v13, v10, v24);
  _Block_release(v24);
  (*(void (**)(unsigned char *, uint64_t))(v32 + 8))(v10, v8);
  (*(void (**)(unsigned char *, uint64_t))(v30 + 8))(v13, v31);
  return swift_release();
}

uint64_t sub_1D427FFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 256);
  swift_bridgeObjectRetain();
  char v10 = sub_1D42E2C30(a1, v9);
  swift_bridgeObjectRelease();
  if (v10)
  {
    uint64_t v11 = *(void *)(v4 + 264);
    swift_bridgeObjectRetain();
    char v12 = sub_1D42C62FC(a2, v11);
    swift_bridgeObjectRelease();
    if (v12)
    {
      uint64_t v13 = *(void *)(v4 + 272);
      swift_bridgeObjectRetain();
      char v14 = sub_1D42C62FC(a3, v13);
      swift_bridgeObjectRelease();
      if (v14)
      {
        uint64_t v15 = *(void *)(v4 + 248);
        swift_bridgeObjectRetain();
        char v16 = sub_1D42E25D4(a4, v15);
        swift_bridgeObjectRelease();
        if (v16) {
          return 0;
        }
      }
    }
  }
  *(void *)(v4 + 256) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v4 + 264) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v4 + 248) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v4 + 272) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v4 + 24) == 1)
  {
    if (*(void *)(v4 + 352))
    {
      uint64_t v18 = *(void *)(v4 + 248);
      uint64_t v19 = *(void *)(v4 + 256);
      uint64_t v20 = *(void *)(v4 + 264);
      uint64_t v21 = *(void *)(v4 + 272);
      v22[0] = *(void *)(v4 + 240);
      v22[1] = v18;
      v22[2] = v19;
      v22[3] = v20;
      v22[4] = v21;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D43949B0(v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  return 1;
}

uint64_t sub_1D42801AC(unint64_t a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7E710);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v106 = (uint64_t)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  v134 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v100 - v8;
  uint64_t v10 = sub_1D4469688();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  v133 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  v140 = (char *)&v100 - v14;
  uint64_t v15 = type metadata accessor for FMIPItem();
  uint64_t v102 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v121 = (uint64_t)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v100 - v18;
  uint64_t v117 = type metadata accessor for FMIPItemGroup();
  uint64_t v112 = *(void *)(v117 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v117);
  uint64_t v105 = (char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v116 = (char **)((char *)&v100 - v23);
  MEMORY[0x1F4188790](v22);
  uint64_t v115 = (uint64_t)&v100 - v24;
  uint64_t v119 = sub_1D42D5DA0(&qword_1EBD7E808);
  uint64_t v25 = *(void *)(v119 - 8);
  MEMORY[0x1F4188790](v119);
  uint64_t v100 = (char *)&v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1D42D5DA0(&qword_1EBD7E810);
  uint64_t v28 = MEMORY[0x1F4188790](v27 - 8);
  uint64_t v30 = (char *)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v100 - v31;
  unint64_t v33 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain_n();
  uint64_t v107 = (uint64_t *)(v1 + 280);
  swift_beginAccess();
  unint64_t v34 = v33;
  uint64_t result = (uint64_t)v30;
  unint64_t v36 = 0;
  uint64_t v131 = 0;
  uint64_t v109 = (void (**)(void))(v25 + 56);
  unint64_t v108 = (uint64_t (**)(unint64_t *, uint64_t, uint64_t))(v25 + 48);
  uint64_t v37 = (uint64_t)v19;
  unint64_t v38 = (unint64_t *)v32;
  v141 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v135 = v11 + 16;
  v138 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  v139 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v122 = v11;
  v137 = (void (**)(char *, uint64_t))(v11 + 8);
  unint64_t v101 = a1;
  v123 = v9;
  uint64_t v125 = v37;
  v111 = (unint64_t *)v30;
  uint64_t v104 = (unint64_t *)v32;
  unint64_t v103 = v33;
  while (1)
  {
    unint64_t v118 = a1;
    if (v36 == v34)
    {
      unint64_t v114 = v34;
      uint64_t v39 = v119;
    }
    else
    {
      if (v36 >= v34) {
        goto LABEL_52;
      }
      unint64_t v40 = v36 + 1;
      unint64_t v41 = v36;
      uint64_t v42 = (uint64_t)&v100[*(int *)(v119 + 48)];
      sub_1D42D22A0(v101+ ((*(unsigned __int8 *)(v112 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80))+ *(void *)(v112 + 72) * v36, v42, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      unint64_t v43 = v111;
      uint64_t v44 = (uint64_t)v111 + *(int *)(v119 + 48);
      unint64_t *v111 = v41;
      uint64_t v45 = v42;
      uint64_t v39 = v119;
      sub_1D42BB578(v45, v44, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      uint64_t result = (uint64_t)v43;
      unint64_t v114 = v40;
    }
    uint64_t v46 = result;
    (*v109)();
    sub_1D4276C98(v46, (uint64_t)v38, &qword_1EBD7E810);
    int v47 = (*v108)(v38, 1, v39);
    uint64_t v48 = v134;
    if (v47 == 1)
    {
      swift_bridgeObjectRelease();
      return v118;
    }
    unint64_t v113 = *v38;
    uint64_t v49 = (uint64_t)v38 + *(int *)(v39 + 48);
    long long v50 = v116;
    sub_1D42BB578(v49, (uint64_t)v116, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v51 = *v107;
    uint64_t v52 = *(void *)((char *)v50 + *(int *)(v117 + 52));
    uint64_t v53 = v50[7];
    uint64_t v54 = MEMORY[0x1E4FBC860];
    uint64_t v142 = MEMORY[0x1E4FBC860];
    uint64_t v55 = *(void *)(v51 + 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v124 = v52;
    if (v55)
    {
      uint64_t v56 = 0;
      unint64_t v57 = (*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
      uint64_t v130 = *(void *)(v102 + 72);
      uint64_t v110 = v51;
      unint64_t v120 = v57;
      uint64_t v129 = v51 + v57;
      uint64_t v126 = v53;
      uint64_t v127 = v55;
      while (1)
      {
        uint64_t v132 = v56;
        sub_1D42D22A0(v129 + v130 * v56, v37, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        sub_1D4469628();
        unint64_t v59 = *v141;
        if ((*v141)(v9, 1, v10) == 1)
        {
          sub_1D4276C3C((uint64_t)v9, (uint64_t *)&unk_1EBD7E930);
          uint64_t v58 = v132;
        }
        else
        {
          long long v60 = *v138;
          (*v138)(v140, v9, v10);
          uint64_t v61 = v52;
          uint64_t v62 = *(void *)(v52 + 16);
          unint64_t v128 = (unint64_t)v139 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
          if (v62)
          {
            unint64_t v63 = v61 + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
            uint64_t v136 = *(void *)(v122 + 72);
            unint64_t v64 = *(void (**)(char *, unint64_t, uint64_t))(v122 + 16);
            swift_bridgeObjectRetain();
            while (1)
            {
              v64(v48, v63, v10);
              unint64_t v65 = *v139;
              (*v139)(v48, 0, 1, v10);
              if (v59(v48, 1, v10) == 1)
              {
                uint64_t v9 = v123;
                uint64_t v37 = v125;
                uint64_t v53 = v126;
                uint64_t v52 = v124;
                goto LABEL_22;
              }
              uint64_t v66 = v133;
              v60(v133, v48, v10);
              sub_1D42AAE70(&qword_1EA6CA0E8, MEMORY[0x1E4F27990]);
              char v67 = sub_1D4469AF8();
              v68 = *v137;
              (*v137)(v66, v10);
              if (v67) {
                break;
              }
              v63 += v136;
              --v62;
              uint64_t v48 = v134;
              if (!v62)
              {
                uint64_t v9 = v123;
                uint64_t v37 = v125;
                uint64_t v53 = v126;
                uint64_t v52 = v124;
                goto LABEL_20;
              }
            }
            uint64_t v52 = v124;
            swift_bridgeObjectRelease();
            v68(v140, v10);
            sub_1D42BB578(v125, v121, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            uint64_t v70 = v142;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v55 = v127;
            uint64_t v58 = v132;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1D4337258(0, *(void *)(v70 + 16) + 1, 1);
              uint64_t v70 = v142;
            }
            uint64_t v48 = v134;
            uint64_t v9 = v123;
            unint64_t v73 = *(void *)(v70 + 16);
            unint64_t v72 = *(void *)(v70 + 24);
            if (v73 >= v72 >> 1)
            {
              sub_1D4337258(v72 > 1, v73 + 1, 1);
              uint64_t v48 = v134;
              uint64_t v70 = v142;
            }
            *(void *)(v70 + 16) = v73 + 1;
            sub_1D42BB578(v121, v70 + v120 + v73 * v130, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            uint64_t v37 = v125;
            uint64_t v53 = v126;
            goto LABEL_11;
          }
          unint64_t v65 = *v139;
          uint64_t v69 = swift_bridgeObjectRetain();
          uint64_t v53 = v126;
          uint64_t v52 = v69;
LABEL_20:
          v65(v48, 1, 1, v10);
LABEL_22:
          uint64_t v55 = v127;
          uint64_t v58 = v132;
          swift_bridgeObjectRelease();
          (*v137)(v140, v10);
        }
        sub_1D42D20B8(v37, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_11:
        uint64_t v56 = v58 + 1;
        if (v56 == v55)
        {
          uint64_t v54 = v142;
          uint64_t v74 = MEMORY[0x1E4FBC860];
          goto LABEL_30;
        }
      }
    }
    uint64_t v74 = v54;
LABEL_30:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v75 = *(void *)(v53 + 16);
    uint64_t v132 = v54;
    if (v75) {
      break;
    }
    uint64_t v9 = v123;
LABEL_41:
    uint64_t v90 = sub_1D4351F50(v74);
    swift_bridgeObjectRelease();
    v91 = v116;
    uint64_t v93 = v116[2];
    uint64_t v92 = v116[3];
    uint64_t v94 = *v116;
    v95 = v105;
    *((void *)v105 + 1) = v116[1];
    v95[2] = v93;
    uint64_t v96 = v117;
    *(void *)((char *)v95 + *(int *)(v117 + 52)) = v52;
    uint64_t v97 = v91[4];
    v95[3] = v92;
    v95[4] = v97;
    v95[5] = v132;
    v95[6] = v90;
    uint64_t v98 = v91[9];
    v95[8] = v91[8];
    v95[9] = v98;
    v95[7] = v53;
    void *v95 = v94;
    uint64_t v99 = v106;
    sub_1D42A3A74((uint64_t)v91 + *(int *)(v96 + 48), v106, &qword_1EBD7E710);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D42D20B8((uint64_t)v91, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D4276C98(v99, (uint64_t)v95 + *(int *)(v96 + 48), &qword_1EBD7E710);
    sub_1D42BB578((uint64_t)v95, v115, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    a1 = v118;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1D4399478(a1);
      a1 = result;
    }
    uint64_t v37 = v125;
    unint64_t v38 = v104;
    if ((v113 & 0x8000000000000000) != 0) {
      goto LABEL_50;
    }
    if (v113 >= *(void *)(a1 + 16)) {
      goto LABEL_51;
    }
    sub_1D439ED88(v115, a1+ ((*(unsigned __int8 *)(v112 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80))+ *(void *)(v112 + 72) * v113, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t result = (uint64_t)v111;
    unint64_t v34 = v103;
    unint64_t v36 = v114;
  }
  uint64_t v142 = v74;
  swift_retain();
  sub_1D4337228(0, v75, 0);
  uint64_t v74 = v142;
  uint64_t result = sub_1D4386D70(v53);
  uint64_t v76 = result;
  uint64_t v78 = v77;
  int v80 = v79 & 1;
  uint64_t v130 = v53 + 56;
  while ((v76 & 0x8000000000000000) == 0 && v76 < 1 << *(unsigned char *)(v53 + 32))
  {
    if (((*(void *)(v130 + (((unint64_t)v76 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v76) & 1) == 0) {
      goto LABEL_48;
    }
    if (*(_DWORD *)(v53 + 36) != v78) {
      goto LABEL_49;
    }
    LODWORD(v136) = v80;
    swift_retain();
    uint64_t v81 = swift_bridgeObjectRetain();
    uint64_t v82 = v53;
    uint64_t v83 = v131;
    uint64_t v84 = sub_1D4387714(v81, v54);
    uint64_t v131 = v83;
    swift_release();
    uint64_t v85 = sub_1D4352030(v84);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v142 = v74;
    unint64_t v87 = *(void *)(v74 + 16);
    unint64_t v86 = *(void *)(v74 + 24);
    if (v87 >= v86 >> 1)
    {
      sub_1D4337228(v86 > 1, v87 + 1, 1);
      uint64_t v74 = v142;
    }
    *(void *)(v74 + 16) = v87 + 1;
    *(void *)(v74 + 8 * v87 + 32) = v85;
    uint64_t result = sub_1D4449D08(v76, v78, v136 & 1, v82);
    uint64_t v76 = result;
    uint64_t v78 = v88;
    int v80 = v89 & 1;
    --v75;
    uint64_t v53 = v82;
    uint64_t v54 = v132;
    if (!v75)
    {
      sub_1D4329478(result, v88, v80);
      swift_release();
      uint64_t v9 = v123;
      uint64_t v52 = v124;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_1D4280FAC(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    *(void *)(v2 + qword_1EBD7FC70) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (!*(void *)(v3 + 16)) {
      return sub_1D4281378(v3);
    }
    unint64_t v4 = sub_1D42C4FCC(0xD000000000000012, 0x80000001D4483360);
    if ((v5 & 1) == 0) {
      return sub_1D4281378(v3);
    }
    sub_1D42CBAC0(*(void *)(v3 + 56) + 32 * v4, (uint64_t)v22);
    if ((swift_dynamicCast() & 1) == 0) {
      return sub_1D4281378(v3);
    }
    uint64_t v6 = self;
    uint64_t v7 = (void *)sub_1D4469B08();
    uint64_t v8 = (void *)sub_1D4469B08();
    id v19 = v6;
    id v9 = objc_msgSend(v6, sel_stringForKey_inDomain_, v7, v8);

    if (!v9) {
      goto LABEL_10;
    }
    uint64_t v10 = sub_1D4469B38();
    uint64_t v12 = v11;

    if (v10 == v20 && v12 == v21)
    {
      swift_bridgeObjectRelease_n();
      return sub_1D4281378(v3);
    }
    char v13 = sub_1D446A758();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
LABEL_10:
      uint64_t v14 = (void *)sub_1D4469B08();
      uint64_t v15 = (void *)sub_1D4469B08();
      uint64_t v16 = (void *)sub_1D4469B08();
      objc_msgSend(v19, sel_setString_forKey_inDomain_, v14, v15, v16);

      uint64_t v17 = MEMORY[0x1D9447840](v2 + qword_1EBD7FC80);
      if (v17)
      {
        uint64_t v18 = v17;
        swift_retain();
        sub_1D44052D0(v20, v21, v18);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        return sub_1D4281378(v3);
      }
    }
    swift_bridgeObjectRelease();
    return sub_1D4281378(v3);
  }
  return result;
}

uint64_t sub_1D4281220(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D4469928();
  sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
  uint64_t v6 = sub_1D44698F8();
  os_log_type_t v7 = sub_1D446A038();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D4271000, v6, v7, "FMIPManager: beaconSharingController didUpdateSharingLimits", v8, 2u);
    MEMORY[0x1D9447730](v8, -1, -1);
  }

  uint64_t v9 = v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v9);
  if (result)
  {
    uint64_t v11 = *(void *)(v9 + 8);
    uint64_t ObjectType = swift_getObjectType();
    v13[0] = v3;
    v13[1] = v4;
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v11 + 192))(v2, v13, ObjectType, v11);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D4281378(uint64_t a1)
{
  uint64_t v3 = sub_1D4469958();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D44699B8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA6C8FD8 != -1) {
    swift_once();
  }
  v14[0] = qword_1EA6CB0C8;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v1;
  aBlock[4] = sub_1D42E3588;
  void aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0F810;
  uint64_t v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D4469988();
  v14[1] = MEMORY[0x1E4FBC860];
  sub_1D42C626C((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_1D4281660()
{
  uint64_t v1 = sub_1D4469958();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D44699B8();
  uint64_t v5 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = *(void *)(v0 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_refreshQueue);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1D42E4A4C;
  void aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0FDF8;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_1D4469988();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  sub_1D42C6224((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v7, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  swift_release();
  return swift_release();
}

uint64_t sub_1D4281928(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1D44698F8();
  os_log_type_t v6 = sub_1D446A038();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134217984;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v5, v6, "FMIPDeviceContainingResponse: Updating with shifted devices %ld", v7, 0xCu);
    MEMORY[0x1D9447730](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  *(void *)(v2 + 56) = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_1D4281A7C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v5 = self;
  os_log_type_t v6 = (void *)sub_1D4469B08();
  uint64_t v7 = (void *)sub_1D4469B08();
  LOBYTE(v5) = objc_msgSend(v5, sel_BOOLForKey_inDomain_, v6, v7);

  *a4 = (_BYTE)v5;
}

uint64_t sub_1D4281B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4469868();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1D4469898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

void *FMIPAlert.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v57 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EBD7D9D8);
  uint64_t v56 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D4469928();
  sub_1D42D7FAC(v10, (uint64_t)qword_1EBD83228);
  uint64_t v11 = sub_1D44698F8();
  os_log_type_t v12 = sub_1D446A038();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1D4271000, v11, v12, "FMAlert: initialized with coder", v13, 2u);
    MEMORY[0x1D9447730](v13, -1, -1);
  }

  sub_1D42C26F4(a1, a1[3]);
  sub_1D42E2E90();
  sub_1D446A8C8();
  if (!v2)
  {
    char v65 = 0;
    uint64_t v14 = sub_1D446A598();
    uint64_t v55 = v15;
    uint64_t v48 = v14;
    char v64 = 1;
    uint64_t v16 = sub_1D446A598();
    uint64_t v53 = v17;
    uint64_t v54 = v16;
    char v63 = 2;
    uint64_t v18 = sub_1D446A598();
    uint64_t v51 = v19;
    uint64_t v52 = v18;
    char v62 = 3;
    uint64_t v20 = sub_1D446A598();
    uint64_t v22 = v21;
    v46[2] = v20;
    char v61 = 4;
    uint64_t v23 = sub_1D446A598();
    uint64_t v49 = v24;
    uint64_t v50 = v23;
    char v60 = 5;
    uint64_t v25 = sub_1D446A598();
    uint64_t v27 = v26;
    v46[1] = v25;
    char v59 = 6;
    uint64_t v28 = sub_1D446A598();
    unsigned int v35 = v34;
    uint64_t v47 = v28;
    if (v22)
    {
      uint64_t v29 = (uint64_t)v57;
      sub_1D4469488();
      swift_bridgeObjectRelease();
      sub_1D42E8438(v29, (uint64_t)v3 + OBJC_IVAR____TtC8FMIPCore9FMIPAlert_okButtonURL);
      if (!v27) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v36 = (char *)v3 + OBJC_IVAR____TtC8FMIPCore9FMIPAlert_okButtonURL;
      uint64_t v37 = sub_1D4469498();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 1, 1, v37);
      if (!v27)
      {
LABEL_15:
        unint64_t v38 = (char *)v3 + OBJC_IVAR____TtC8FMIPCore9FMIPAlert_cancelButtonURL;
        uint64_t v39 = sub_1D4469498();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
        uint64_t v31 = v48;
        if (!v35) {
          goto LABEL_16;
        }
        goto LABEL_10;
      }
    }
    uint64_t v30 = (uint64_t)v57;
    sub_1D4469488();
    swift_bridgeObjectRelease();
    sub_1D42E8438(v30, (uint64_t)v3 + OBJC_IVAR____TtC8FMIPCore9FMIPAlert_cancelButtonURL);
    uint64_t v31 = v48;
    if (!v35)
    {
LABEL_16:
      (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v7);
      char v33 = 0;
LABEL_17:
      *((unsigned char *)v3 + OBJC_IVAR____TtC8FMIPCore9FMIPAlert_type) = v33;
      uint64_t v40 = v55;
      v3[2] = v31;
      v3[3] = v40;
      uint64_t v41 = v53;
      v3[4] = v54;
      v3[5] = v41;
      uint64_t v42 = v51;
      void v3[6] = v52;
      v3[7] = v42;
      unint64_t v43 = (void *)((char *)v3 + OBJC_IVAR____TtC8FMIPCore9FMIPAlert_cancelButtonLabel);
      uint64_t v44 = v49;
      *unint64_t v43 = v50;
      v43[1] = v44;
      goto LABEL_18;
    }
LABEL_10:
    v32._countAndFlagsBits = v47;
    v32._object = v35;
    FMIPAlertType.init(rawValue:)(v32);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v7);
    char v33 = v58;
    if (v58 == 5) {
      char v33 = 0;
    }
    goto LABEL_17;
  }
  type metadata accessor for FMIPAlert();
  swift_deallocPartialClassInstance();
LABEL_18:
  sub_1D42BEC64((uint64_t)a1);
  return v3;
}

unint64_t sub_1D4282178(unsigned __int8 a1)
{
  sub_1D446A828();
  sub_1D446A838();
  uint64_t v2 = sub_1D446A888();

  return sub_1D42821E4(a1, v2);
}

unint64_t sub_1D42821E4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D4282284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a3;
  uint64_t v19 = a2;
  uint64_t v4 = sub_1D4469958();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D44699B8();
  uint64_t v8 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue);
  aBlock[4] = sub_1D42E7900;
  void aBlock[5] = a1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0B978;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  sub_1D4469988();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v10, v7, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);
  swift_release();
  uint64_t v12 = v18;
  swift_beginAccess();
  uint64_t v13 = *(void *)(v12 + 280);
  uint64_t v14 = *(void *)(v12 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D42C73B8(v19, v13, v14);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D4282574()
{
  uint64_t v1 = v0;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  uint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPSafeLocationRefreshingController: Starting refreshing Safe Locations", v5, 2u);
    MEMORY[0x1D9447730](v5, -1, -1);
  }

  uint64_t v6 = *(void **)(v1 + 56);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  v9[4] = sub_1D42E34B0;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  v9[2] = sub_1D4275B70;
  v9[3] = &unk_1F2C088A8;
  uint64_t v8 = _Block_copy(v9);
  swift_release();
  objc_msgSend(v6, sel_startRefreshingSafeLocationWithBlock_, v8);
  _Block_release(v8);
}

void sub_1D4282708(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4469958();
  uint64_t v7 = *(NSObject **)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D44699B8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 60 == 15)
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1D4469928();
    sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
    os_log_t v24 = (os_log_t)sub_1D44698F8();
    os_log_type_t v15 = sub_1D446A018();
    if (os_log_type_enabled(v24, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1D4271000, v24, v15, "FMIPBeaconRefreshingController: Received nil client configuration", v16, 2u);
      MEMORY[0x1D9447730](v16, -1, -1);
    }
    os_log_t v17 = v24;
  }
  else
  {
    os_log_t v24 = v7;
    sub_1D4469168();
    swift_allocObject();
    sub_1D42DD034(a1, a2);
    sub_1D4469158();
    sub_1D42E32FC();
    sub_1D4469148();
    swift_release();
    char v18 = aBlock[0];
    uint64_t v23 = *(void *)(a3 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshQueue);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a3;
    *(unsigned char *)(v19 + 24) = v18;
    aBlock[4] = sub_1D42E3758;
    void aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D42BD950;
    aBlock[3] = &unk_1F2C13380;
    uint64_t v22 = _Block_copy(aBlock);
    swift_retain();
    sub_1D4469988();
    void aBlock[6] = MEMORY[0x1E4FBC860];
    sub_1D444A534((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    uint64_t v20 = v22;
    MEMORY[0x1D9446420](0, v13, v9, v22);
    _Block_release(v20);
    sub_1D42DD08C(a1, a2);
    ((void (*)(char *, uint64_t))v24[1].isa)(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_release();
  }
}

uint64_t sub_1D4282D04(void *a1)
{
  uint64_t v3 = sub_1D44699B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D4469958();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1D42C9D88(v11, a1);
  swift_bridgeObjectRelease();
  sub_1D4469948();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v1;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_1D42E7820;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0C468;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v6, v10, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void FMIPDeviceLostModeMetadata.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6CB110);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v10 = v1;
  uint64_t v8 = (void *)sub_1D4469578();
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42B1854();
  sub_1D446A8E8();
  objc_msgSend(v8, sel_fm_epoch);
  LOBYTE(v11) = 8;
  sub_1D446A6A8();
  if (!v2)
  {
    uint64_t v11 = qword_1D4477648[*(char *)(v10 + 56)];
    sub_1D446A6D8();
    LOBYTE(v11) = 4;
    sub_1D446A658();
    swift_bridgeObjectRelease();
    LOBYTE(v11) = 6;
    sub_1D446A658();
    LOBYTE(v11) = 1;
    sub_1D446A658();
    LOBYTE(v11) = 2;
    sub_1D446A658();
    LOBYTE(v11) = 5;
    sub_1D446A668();
    LOBYTE(v11) = 0;
    sub_1D446A668();
    LOBYTE(v11) = 3;
    sub_1D446A668();
    LOBYTE(v11) = 7;
    sub_1D446A668();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D4283284()
{
  uint64_t v1 = v0;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    int v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_isRefreshing);
    uint64_t v10 = v6;
    if (v7) {
      uint64_t v8 = 1702195828;
    }
    else {
      uint64_t v8 = 0x65736C6166;
    }
    if (v7) {
      unint64_t v9 = 0xE400000000000000;
    }
    else {
      unint64_t v9 = 0xE500000000000000;
    }
    sub_1D42CB9EC(v8, v9, &v10);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPBeaconRefreshingController: auto refreshing set to: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v6, -1, -1);
    MEMORY[0x1D9447730](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_1D4283458()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1D42834A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_1D42834F0()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D4283530()
{
  uint64_t v1 = (int *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  unint64_t v4 = (v3 + *(void *)(*(void *)v1 + 64)) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();

  uint64_t v6 = v5 + v1[8];
  uint64_t v7 = sub_1D44696C8();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  if (*(void *)(v0 + v4 + 8)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, v4 + 24, v2 | 7);
}

uint64_t sub_1D4283690()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D42836D8()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D4283720()
{
  uint64_t v1 = (int *)type metadata accessor for FMIPDevice();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v35 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + v3 + 472))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v4 + v1[28];
  uint64_t v6 = type metadata accessor for FMIPPlaySoundMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = v5 + *(int *)(v6 + 20);
    uint64_t v8 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = v4 + v1[29];
  uint64_t v10 = type metadata accessor for FMIPDeviceLostModeMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(v10 + 48);
    uint64_t v12 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = v4 + v1[30];
  uint64_t v14 = type metadata accessor for FMIPLockMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = v13 + *(int *)(v14 + 20);
    uint64_t v16 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  uint64_t v17 = v4 + v1[31];
  uint64_t v18 = type metadata accessor for FMIPEraseMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
  {
    uint64_t v19 = v17 + *(int *)(v18 + 20);
    uint64_t v20 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = v4 + v1[32];
  uint64_t v22 = type metadata accessor for FMIPItemGroup();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v21 + *(int *)(v22 + 48);
    uint64_t v24 = type metadata accessor for FMIPItemLostModeMetadata();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v23, 1, v24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = v23 + *(int *)(v24 + 24);
      uint64_t v26 = sub_1D4469618();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = v4 + v1[38];
  uint64_t v28 = sub_1D4469618();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  if (!v30(v27, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
  }
  uint64_t v31 = v4 + v1[39];
  if (!v30(v31, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v28);
  }
  uint64_t v32 = v4 + v1[40];
  if (!v30(v32, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v28);
  }
  uint64_t v33 = v4 + v1[41];
  if (!v30(v33, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v33, v28);
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, ((v35 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_1D4283E50()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D4283F14@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager);
  swift_beginAccess();
  *a1 = *(void *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

void sub_1D4283F78()
{
  uint64_t v1 = v0;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    int v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_isRefreshing);
    uint64_t v10 = v6;
    if (v7) {
      uint64_t v8 = 1702195828;
    }
    else {
      uint64_t v8 = 0x65736C6166;
    }
    if (v7) {
      unint64_t v9 = 0xE400000000000000;
    }
    else {
      unint64_t v9 = 0xE500000000000000;
    }
    sub_1D42CB9EC(v8, v9, &v10);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPRefreshingController: auto refreshing set to: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v6, -1, -1);
    MEMORY[0x1D9447730](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_1D428414C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D4469688();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v7 = (char *)v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D4469928();
  uint64_t v9 = sub_1D42D7FAC(v8, (uint64_t)qword_1EBD83228);
  uint64_t v10 = sub_1D44698F8();
  os_log_type_t v11 = sub_1D446A038();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_1D4271000, v10, v11, "FMIPBeaconRefreshingController: Refreshing Separation State", v12, 2u);
    MEMORY[0x1D9447730](v12, -1, -1);
  }

  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v93 = v9;
    uint64_t v84 = v2;
    uint64_t v14 = a1 + 32;
    id v94 = (id)*MEMORY[0x1E4F97D38];
    v95 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v92 = &v106;
    unint64_t v87 = (char *)&v105 + 4;
    v83[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
    uint64_t v16 = MEMORY[0x1E4FBC868];
    *(void *)&long long v17 = 136316162;
    long long v86 = v17;
    uint64_t v85 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v18 = MEMORY[0x1E4FBC868];
    uint64_t v102 = MEMORY[0x1E4FBC868];
    uint64_t v103 = MEMORY[0x1E4FBC868];
    while (1)
    {
      uint64_t v100 = v13;
      sub_1D42A4D5C(v14, (uint64_t)&v110);
      uint64_t v37 = v111;
      uint64_t v38 = v112;
      sub_1D42C26F4(&v110, v111);
      uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 80))(v37, v38);
      if (!*(void *)(v39 + 16)) {
        goto LABEL_16;
      }
      id v40 = v94;
      unint64_t v41 = sub_1D43AEF30((uint64_t)v40);
      if ((v42 & 1) == 0) {
        break;
      }
      id v43 = *(id *)(*(void *)(v39 + 56) + 8 * v41);

      swift_bridgeObjectRelease();
      id v44 = objc_msgSend(v43, sel_state);

      unint64_t v45 = 0x3000002000100uLL >> (8 * (v44 + 1));
      if ((unint64_t)v44 + 1 >= 7) {
        unint64_t v45 = 0;
      }
      else {
        unint64_t v45 = v45;
      }
      unint64_t v104 = v45;
LABEL_17:
      uint64_t v46 = v111;
      uint64_t v47 = v112;
      sub_1D42C26F4(&v110, v111);
      uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 80))(v46, v47);
      uint64_t v49 = *(void *)(v48 + 16);
      uint64_t v98 = v14;
      uint64_t v99 = v18;
      if (v49)
      {
        id v50 = v94;
        unint64_t v51 = sub_1D43AEF30((uint64_t)v50);
        int v96 = v52;
        if (v52) {
          id v53 = *(id *)(*(void *)(v48 + 56) + 8 * v51);
        }
        else {
          id v53 = 0;
        }
      }
      else
      {
        int v96 = 0;
        id v53 = 0;
      }
      uint64_t v101 = v16;
      swift_bridgeObjectRelease();

      uint64_t v54 = v111;
      uint64_t v55 = v112;
      sub_1D42C26F4(&v110, v111);
      int v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 168))(v54, v55);
      uint64_t v57 = v111;
      uint64_t v58 = v112;
      sub_1D42C26F4(&v110, v111);
      uint64_t v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 120))(v57, v58);
      uint64_t v60 = sub_1D443B984(v59);
      uint64_t v97 = v15;
      swift_bridgeObjectRelease();
      sub_1D42A4D5C((uint64_t)&v110, (uint64_t)v107);
      swift_bridgeObjectRetain_n();
      char v61 = sub_1D44698F8();
      int v62 = sub_1D446A038();
      if (os_log_type_enabled(v61, (os_log_type_t)v62))
      {
        int v89 = v62;
        os_log_t v90 = v61;
        int v91 = v56;
        uint64_t v63 = v4;
        uint64_t v64 = swift_slowAlloc();
        uint64_t v88 = swift_slowAlloc();
        uint64_t v106 = v88;
        *(_DWORD *)uint64_t v64 = v86;
        uint64_t v66 = v108;
        uint64_t v65 = v109;
        sub_1D42C26F4(v107, v108);
        (*(void (**)(uint64_t, uint64_t))(v65 + 16))(v66, v65);
        sub_1D444A534((unint64_t *)&qword_1EA6C92C0, MEMORY[0x1E4F27990]);
        uint64_t v67 = sub_1D446A6D8();
        unint64_t v69 = v68;
        uint64_t v70 = v63;
        (*v95)(v7, v63);
        uint64_t v105 = sub_1D42CB9EC(v67, v69, &v106);
        sub_1D446A188();
        swift_bridgeObjectRelease();
        sub_1D42BEC64((uint64_t)v107);
        *(_WORD *)(v64 + 12) = 2080;
        unint64_t v71 = 0xE700000000000000;
        uint64_t v72 = 0x64656C62616E65;
        char v19 = v96;
        switch((char)v104)
        {
          case 1:
            break;
          case 2:
            unint64_t v71 = 0xE800000000000000;
            uint64_t v72 = 0x64656C6261736964;
            break;
          case 3:
            unint64_t v71 = 0xE600000000000000;
            uint64_t v72 = 0x646573756170;
            break;
          default:
            uint64_t v72 = 0x6E776F6E6B6E75;
            break;
        }
        uint64_t v105 = sub_1D42CB9EC(v72, v71, &v106);
        sub_1D446A188();
        swift_bridgeObjectRelease();
        *(_WORD *)(v64 + 22) = 1024;
        LODWORD(v105) = v19 & 1;
        sub_1D446A188();
        *(_WORD *)(v64 + 28) = 1024;
        LOBYTE(v56) = v91;
        LODWORD(v105) = v91 & 1;
        sub_1D446A188();
        *(_WORD *)(v64 + 34) = 2080;
        uint64_t v73 = swift_bridgeObjectRetain();
        uint64_t v74 = MEMORY[0x1D94460F0](v73, v70);
        unint64_t v76 = v75;
        swift_bridgeObjectRelease();
        uint64_t v105 = sub_1D42CB9EC(v74, v76, &v106);
        sub_1D446A188();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        os_log_t v77 = v90;
        _os_log_impl(&dword_1D4271000, v90, (os_log_type_t)v89, "    FMIPBeaconRefreshingController: Separation Monitoring State for Beacon %s\n    separationMonitoringEnabled: %s,\n    canEnableSeparationMonitoring: %{BOOL}d,\n    canBeMonitoredForSeparationByHost: %{BOOL}d,\n    safeLocations: %s", (uint8_t *)v64, 0x2Cu);
        uint64_t v78 = v88;
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v78, -1, -1);
        uint64_t v79 = v64;
        uint64_t v4 = v70;
        MEMORY[0x1D9447730](v79, -1, -1);
      }
      else
      {
        sub_1D42BEC64((uint64_t)v107);

        swift_bridgeObjectRelease_n();
        char v19 = v96;
      }
      uint64_t v20 = v111;
      uint64_t v21 = v112;
      sub_1D42C26F4(&v110, v111);
      (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
      uint64_t v22 = v102;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v107[0] = v22;
      sub_1D43D7E2C(v104, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
      uint64_t v102 = v107[0];
      swift_bridgeObjectRelease();
      uint64_t v24 = *v95;
      (*v95)(v7, v4);
      uint64_t v25 = v111;
      uint64_t v26 = v112;
      sub_1D42C26F4(&v110, v111);
      (*(void (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
      uint64_t v27 = v103;
      char v28 = swift_isUniquelyReferenced_nonNull_native();
      v107[0] = v27;
      sub_1D43D7C8C(v19 & 1, (uint64_t)v7, v28);
      uint64_t v103 = v107[0];
      swift_bridgeObjectRelease();
      v24(v7, v4);
      uint64_t v29 = v111;
      uint64_t v30 = v112;
      sub_1D42C26F4(&v110, v111);
      (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
      uint64_t v31 = v99;
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      v107[0] = v31;
      sub_1D43D7C8C(v56 & 1, (uint64_t)v7, v32);
      uint64_t v18 = v107[0];
      swift_bridgeObjectRelease();
      v24(v7, v4);
      uint64_t v33 = v111;
      uint64_t v34 = v112;
      sub_1D42C26F4(&v110, v111);
      (*(void (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
      uint64_t v35 = v101;
      char v36 = swift_isUniquelyReferenced_nonNull_native();
      v107[0] = v35;
      sub_1D43D7AE4(v60, (uint64_t)v7, v36);
      uint64_t v16 = v107[0];
      swift_bridgeObjectRelease();
      v24(v7, v4);
      sub_1D42BEC64((uint64_t)&v110);
      uint64_t v14 = v98 + 40;
      uint64_t v13 = v100 - 1;
      uint64_t v15 = v97;
      if (v100 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = v84;
        uint64_t v81 = v102;
        uint64_t v80 = v103;
        goto LABEL_31;
      }
    }

LABEL_16:
    swift_bridgeObjectRelease();
    unint64_t v104 = 0;
    goto LABEL_17;
  }
  uint64_t v16 = MEMORY[0x1E4FBC868];
  uint64_t v18 = MEMORY[0x1E4FBC868];
  uint64_t v80 = MEMORY[0x1E4FBC868];
  uint64_t v81 = MEMORY[0x1E4FBC868];
LABEL_31:
  if (MEMORY[0x1D9447840](v2 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_delegate))
  {
    sub_1D4294464(v81, v80, v18, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D4284BA8(uint64_t a1)
{
  uint64_t v2 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v2);
  if (result)
  {
    uint64_t v4 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_1D42D5DA0(&qword_1EBD7D8C0);
    sub_1D446A0A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 32))(a1, v6, ObjectType, v4);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D4284C94()
{
  uint64_t v1 = sub_1D4469108();
  v0[24] = v1;
  v0[25] = sub_1D42AC414(&qword_1EBD7E550, 255, MEMORY[0x1E4F619E0]);
  uint64_t v2 = sub_1D42BECB4(v0 + 21);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v1 - 8) + 104))(v2, *MEMORY[0x1E4F619B8], v1);
  LOBYTE(v1) = MEMORY[0x1D9445460](v0 + 21);
  sub_1D42BEC64((uint64_t)(v0 + 21));
  if (v1)
  {
    if (qword_1EBD7E7C0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1D4469928();
    v0[32] = sub_1D42D7FAC(v3, (uint64_t)qword_1EBD831A0);
    uint64_t v4 = sub_1D44698F8();
    os_log_type_t v5 = sub_1D446A038();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1D4271000, v4, v5, "FMIPBeaconSharingController: Starting...", v6, 2u);
      MEMORY[0x1D9447730](v6, -1, -1);
    }
    uint64_t v7 = v0[31];

    uint64_t v8 = *(void **)(v7 + 112);
    v0[14] = sub_1D42E3F14;
    v0[15] = v7;
    v0[10] = MEMORY[0x1E4F143A8];
    v0[11] = 1107296256;
    v0[12] = sub_1D4275E4C;
    v0[13] = &unk_1F2C04D08;
    uint64_t v9 = _Block_copy(v0 + 10);
    v0[33] = v9;
    swift_retain();
    swift_release();
    v0[2] = v0;
    v0[7] = (char *)v0 + 292;
    v0[3] = sub_1D42E4010;
    uint64_t v10 = swift_continuation_init();
    v0[16] = MEMORY[0x1E4F143A8];
    v0[17] = 0x40000000;
    v0[18] = sub_1D42E20DC;
    v0[19] = &unk_1E69E5CD0;
    v0[20] = v10;
    objc_msgSend(v8, sel_startRefreshingSharesWithBlock_completion_, v9, v0 + 16);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
  else
  {
    if (qword_1EBD7E7C0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1D4469928();
    sub_1D42D7FAC(v11, (uint64_t)qword_1EBD831A0);
    uint64_t v12 = sub_1D44698F8();
    os_log_type_t v13 = sub_1D446A038();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1D4271000, v12, v13, "FMIPBeaconSharingController: Not starting since FF disabled.", v14, 2u);
      MEMORY[0x1D9447730](v14, -1, -1);
    }

    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t initializeBufferWithCopyOfBuffer for FMIPAddress(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_1D428509C(uint64_t a1, uint64_t a2)
{
  uint64_t v301 = a2;
  uint64_t v281 = sub_1D4469958();
  uint64_t v280 = *(void *)(v281 - 8);
  MEMORY[0x1F4188790](v281);
  v279 = (char *)&v271 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v285 = sub_1D44699B8();
  uint64_t v278 = *(void *)(v285 - 8);
  MEMORY[0x1F4188790](v285);
  v277 = (char *)&v271 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0((uint64_t *)&unk_1EA6C9468);
  MEMORY[0x1F4188790](v5 - 8);
  v298 = (char *)&v271 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v308 = sub_1D4469618();
  uint64_t v7 = *(void *)(v308 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v308);
  v307 = (char *)&v271 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  v306 = (char *)&v271 - v10;
  uint64_t v294 = type metadata accessor for FMIPItem();
  uint64_t v11 = *(void *)(v294 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v294);
  uint64_t v273 = (uint64_t)&v271 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v271 = (uint64_t)&v271 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v272 = (uint64_t)&v271 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v283 = (uint64_t)&v271 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  v318 = (void (*)(char *, uint64_t))((char *)&v271 - v21);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v271 - v22;
  int v274 = *(unsigned __int8 *)(*(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_locationController)
                            + OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_limitedPrecision);
  uint64_t v284 = a1;
  uint64_t v282 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager;
  uint64_t v24 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager);
  uint64_t v25 = *(void *)(v24 + 192);
  swift_beginAccess();
  uint64_t v26 = *(void *)(v24 + 280);
  uint64_t v27 = *(void *)(v26 + 16);
  uint64_t v299 = v11;
  uint64_t v300 = v25;
  if (v27)
  {
    uint64_t v317 = v7;
    uint64_t v28 = v26 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v29 = *(void *)(v11 + 72);
    swift_bridgeObjectRetain_n();
    uint64_t v315 = v26;
    swift_bridgeObjectRetain_n();
    v316 = (void *)MEMORY[0x1E4FBC868];
    do
    {
      sub_1D42CA6F0(v28, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v31 = *((void *)v23 + 44);
      uint64_t v30 = *((void *)v23 + 45);
      sub_1D42CA6F0((uint64_t)v23, (uint64_t)v318, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      swift_bridgeObjectRetain();
      uint64_t v32 = (uint64_t)v316;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t aBlock = (void *)v32;
      unint64_t v35 = sub_1D42C4FCC(v31, v30);
      uint64_t v36 = *(void *)(v32 + 16);
      BOOL v37 = (v34 & 1) == 0;
      uint64_t v38 = v36 + v37;
      if (__OFADD__(v36, v37))
      {
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
        goto LABEL_166;
      }
      char v39 = v34;
      if (*(void *)(v32 + 24) >= v38)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1D43D9ACC();
        }
      }
      else
      {
        sub_1D43D5444(v38, isUniquelyReferenced_nonNull_native);
        unint64_t v40 = sub_1D42C4FCC(v31, v30);
        if ((v39 & 1) != (v41 & 1)) {
          goto LABEL_169;
        }
        unint64_t v35 = v40;
      }
      v316 = aBlock;
      if (v39)
      {
        sub_1D4389C20((uint64_t)v318, aBlock[7] + v35 * v29);
      }
      else
      {
        aBlock[(v35 >> 6) + 8] |= 1 << v35;
        char v42 = (uint64_t *)(v316[6] + 16 * v35);
        *char v42 = v31;
        v42[1] = v30;
        sub_1D42CAAD0((uint64_t)v318, v316[7] + v35 * v29, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v43 = v316[2];
        BOOL v44 = __OFADD__(v43, 1);
        uint64_t v45 = v43 + 1;
        if (v44) {
          goto LABEL_165;
        }
        v316[2] = v45;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D42CA8E8((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      v28 += v29;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    uint64_t v11 = v299;
    uint64_t v25 = v300;
    uint64_t v7 = v317;
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v316 = (void *)MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void *)(v301 + 64);
  uint64_t v295 = v301 + 64;
  uint64_t v47 = 1 << *(unsigned char *)(v301 + 32);
  uint64_t v48 = -1;
  if (v47 < 64) {
    uint64_t v48 = ~(-1 << v47);
  }
  unint64_t v49 = v48 & v46;
  uint64_t v276 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_useRealtimeForItems;
  int64_t v296 = (unint64_t)(v47 + 63) >> 6;
  v292 = &v321;
  id v50 = (void (**)(char *, uint64_t))(v7 + 8);
  v293 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v289 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v288 = v327;
  swift_bridgeObjectRetain();
  uint64_t v51 = 0;
  *(void *)&long long v52 = 136315651;
  long long v291 = v52;
  uint64_t v290 = MEMORY[0x1E4FBC840] + 8;
  *(void *)&long long v52 = 136315394;
  long long v275 = v52;
  *(void *)&long long v52 = 136315138;
  long long v286 = v52;
  uint64_t v287 = v25;
  uint64_t v53 = (uint64_t)v298;
  v297 = (void (**)(char *, uint64_t))(v7 + 8);
  while (1)
  {
    if (v49)
    {
      uint64_t v314 = (v49 - 1) & v49;
      uint64_t v315 = v51;
      unint64_t v54 = __clz(__rbit64(v49)) | (v51 << 6);
      goto LABEL_37;
    }
    int64_t v55 = v51 + 1;
    if (__OFADD__(v51, 1)) {
      goto LABEL_164;
    }
    if (v55 >= v296)
    {
LABEL_160:
      swift_bridgeObjectRelease();
      uint64_t v256 = v301;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v257 = v284;
      uint64_t v258 = v282;
      swift_retain();
      uint64_t v259 = swift_bridgeObjectRetain();
      LOBYTE(v256) = sub_1D4278240(v259, v256);
      swift_release();
      swift_bridgeObjectRelease();
      if (v256)
      {
        uint64_t v260 = *(void *)(v257 + v258);
        swift_beginAccess();
        uint64_t v261 = *(void *)(v260 + 280);
        v316 = *(void **)(v257 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue);
        v324 = sub_1D42E7AA0;
        uint64_t v325 = v257;
        uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
        uint64_t v321 = 1107296256;
        v313 = &v322;
        v322 = sub_1D42BD950;
        v323 = &unk_1F2C0B4A0;
        v262 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        v263 = v277;
        sub_1D4469988();
        uint64_t v319 = MEMORY[0x1E4FBC860];
        uint64_t v315 = sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
        uint64_t v314 = sub_1D42D5DA0(&qword_1EBD7FD78);
        uint64_t v317 = sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
        v264 = v279;
        uint64_t v265 = v281;
        sub_1D446A1F8();
        MEMORY[0x1D9446420](0, v263, v264, v262);
        _Block_release(v262);
        v318 = *(void (**)(char *, uint64_t))(v280 + 8);
        v318(v264, v265);
        v266 = *(void (**)(char *, uint64_t))(v278 + 8);
        v266(v263, v285);
        swift_release();
        sub_1D4469948();
        uint64_t v267 = swift_allocObject();
        *(void *)(v267 + 16) = v257;
        *(void *)(v267 + 24) = v261;
        v324 = sub_1D4389BC4;
        uint64_t v325 = v267;
        uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
        uint64_t v321 = 1107296256;
        v322 = sub_1D42BD950;
        v323 = &unk_1F2C0B4F0;
        v268 = _Block_copy(&aBlock);
        swift_retain();
        sub_1D4469988();
        MEMORY[0x1D9446420](0, v263, v264, v268);
        _Block_release(v268);
        v266(v263, v285);
        v318(v264, v265);
        swift_release();
        v324 = sub_1D42E7900;
        uint64_t v325 = v257;
        uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
        uint64_t v321 = 1107296256;
        v322 = sub_1D42BD950;
        v323 = &unk_1F2C0B518;
        v269 = _Block_copy(&aBlock);
        swift_retain();
        sub_1D4469988();
        uint64_t v319 = MEMORY[0x1E4FBC860];
        sub_1D446A1F8();
        MEMORY[0x1D9446420](0, v263, v264, v269);
        _Block_release(v269);
        v318(v264, v265);
        v266(v263, v285);
        swift_release();
      }
      return swift_bridgeObjectRelease();
    }
    unint64_t v56 = *(void *)(v295 + 8 * v55);
    int64_t v57 = v51 + 1;
    if (!v56)
    {
      int64_t v57 = v51 + 2;
      if (v51 + 2 >= v296) {
        goto LABEL_160;
      }
      unint64_t v56 = *(void *)(v295 + 8 * v57);
      if (!v56)
      {
        int64_t v57 = v51 + 3;
        if (v51 + 3 >= v296) {
          goto LABEL_160;
        }
        unint64_t v56 = *(void *)(v295 + 8 * v57);
        if (!v56) {
          break;
        }
      }
    }
LABEL_36:
    uint64_t v314 = (v56 - 1) & v56;
    uint64_t v315 = v57;
    unint64_t v54 = __clz(__rbit64(v56)) + (v57 << 6);
LABEL_37:
    uint64_t v59 = (uint64_t *)(*(void *)(v301 + 48) + 16 * v54);
    uint64_t v61 = *v59;
    unint64_t v60 = v59[1];
    int v62 = (unsigned __int8 *)(*(void *)(v301 + 56) + 24 * v54);
    LODWORD(v312) = *v62;
    int v311 = v62[1];
    int v310 = v62[2];
    int v309 = v62[3];
    uint64_t v63 = (void *)*((void *)v62 + 1);
    double v64 = *((double *)v62 + 2);
    uint64_t v65 = *(void *)(v25 + 16);
    swift_bridgeObjectRetain();
    if (!v65)
    {
      id v118 = v63;
LABEL_61:
      id v119 = v63;
      uint64_t v120 = v287;
      char v121 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t aBlock = (void *)v120;
      uint64_t v122 = v61;
      unint64_t v124 = sub_1D42C4FCC(v61, v60);
      uint64_t v125 = *(void *)(v120 + 16);
      BOOL v126 = (v123 & 1) == 0;
      uint64_t v127 = v125 + v126;
      if (__OFADD__(v125, v126)) {
        goto LABEL_167;
      }
      char v128 = v123;
      if (*(void *)(v120 + 24) >= v127)
      {
        if ((v121 & 1) == 0) {
          sub_1D43D8F64();
        }
      }
      else
      {
        sub_1D42C1798(v127, v121);
        unint64_t v129 = sub_1D42C4FCC(v122, v60);
        if ((v128 & 1) != (v130 & 1)) {
          goto LABEL_169;
        }
        unint64_t v124 = v129;
      }
      uint64_t v53 = (uint64_t)v298;
      uint64_t v131 = aBlock;
      uint64_t v287 = (uint64_t)aBlock;
      if (v128)
      {
        uint64_t v132 = aBlock[7] + 24 * v124;

        *(unsigned char *)uint64_t v132 = v312;
        *(unsigned char *)(v132 + 1) = v311;
        *(unsigned char *)(v132 + 2) = v310;
        *(unsigned char *)(v132 + 3) = v309;
        *(void *)(v132 + 8) = v119;
        *(double *)(v132 + 16) = v64;
      }
      else
      {
        aBlock[(v124 >> 6) + 8] |= 1 << v124;
        v133 = (uint64_t *)(v131[6] + 16 * v124);
        uint64_t *v133 = v122;
        v133[1] = v60;
        uint64_t v134 = v131[7] + 24 * v124;
        *(unsigned char *)uint64_t v134 = v312;
        *(unsigned char *)(v134 + 1) = v311;
        *(unsigned char *)(v134 + 2) = v310;
        *(unsigned char *)(v134 + 3) = v309;
        *(void *)(v134 + 8) = v119;
        *(double *)(v134 + 16) = v64;
        uint64_t v135 = v131[2];
        BOOL v44 = __OFADD__(v135, 1);
        uint64_t v136 = v135 + 1;
        if (v44) {
          goto LABEL_168;
        }
        v131[2] = v136;
        swift_bridgeObjectRetain();
      }

      goto LABEL_95;
    }
    swift_bridgeObjectRetain();
    id v66 = v63;
    unint64_t v67 = sub_1D42C4FCC(v61, v60);
    if ((v68 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_61;
    }
    uint64_t v317 = v61;
    unint64_t v69 = (unsigned __int8 *)(*(void *)(v25 + 56) + 24 * v67);
    int v304 = *v69;
    int v302 = v69[1];
    int v303 = v69[2];
    LODWORD(v313) = v69[3];
    double v70 = *((double *)v69 + 2);
    id v71 = *((id *)v69 + 1);
    swift_bridgeObjectRelease();
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v72 = sub_1D4469928();
    uint64_t v73 = sub_1D42D7FAC(v72, (uint64_t)qword_1EBD83228);
    swift_bridgeObjectRetain_n();
    id v74 = v66;
    id v75 = v71;
    unint64_t v76 = (void (*)(char *, uint64_t))v74;
    id v77 = v75;
    uint64_t v78 = sub_1D44698F8();
    os_log_type_t v79 = sub_1D446A038();
    BOOL v80 = os_log_type_enabled(v78, v79);
    v318 = v76;
    uint64_t v305 = v73;
    if (v80)
    {
      uint64_t v81 = swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      uint64_t v326 = v82;
      *(_DWORD *)uint64_t v81 = v291;
      swift_bridgeObjectRetain();
      uint64_t aBlock = (void *)sub_1D42CB9EC(v317, v60, &v326);
      sub_1D446A188();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v81 + 12) = 2081;
      LOBYTE(aBlock) = v312;
      BYTE1(aBlock) = v311;
      BYTE2(aBlock) = v310;
      BYTE3(aBlock) = v309;
      uint64_t v321 = (uint64_t)v318;
      v322 = *(uint64_t (**)(uint64_t))&v64;
      uint64_t v83 = FMIPLocation.debugDescription.getter();
      uint64_t aBlock = (void *)sub_1D42CB9EC(v83, v84, &v326);
      sub_1D446A188();

      swift_bridgeObjectRelease();
      *(_WORD *)(v81 + 22) = 2081;
      LOBYTE(aBlock) = v304;
      BYTE1(aBlock) = v302;
      BYTE2(aBlock) = v303;
      BYTE3(aBlock) = (_BYTE)v313;
      uint64_t v321 = (uint64_t)v77;
      v322 = *(uint64_t (**)(uint64_t))&v70;
      uint64_t v85 = FMIPLocation.debugDescription.getter();
      uint64_t aBlock = (void *)sub_1D42CB9EC(v85, v86, &v326);
      id v50 = v297;
      unint64_t v76 = v318;
      sub_1D446A188();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v78, v79, "FMIPManager: didReceive location for identifier: %s new %{private}s, old: %{private}s", (uint8_t *)v81, 0x20u);
      swift_arrayDestroy();
      uint64_t v87 = v82;
      uint64_t v53 = (uint64_t)v298;
      MEMORY[0x1D9447730](v87, -1, -1);
      MEMORY[0x1D9447730](v81, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v88 = v299;
    id v89 = objc_msgSend(v76, sel_timestamp);
    os_log_t v90 = v306;
    sub_1D44695D8();

    id v91 = objc_msgSend(v77, sel_timestamp);
    uint64_t v92 = v307;
    sub_1D44695D8();

    LOBYTE(v91) = sub_1D4469588();
    uint64_t v93 = *v50;
    id v94 = v92;
    uint64_t v95 = v308;
    (*v50)(v94, v308);
    v93(v90, v95);
    if (v91)
    {
      LOBYTE(aBlock) = (_BYTE)v313;
      if (FMIPLocationType.rawValue.getter() == 0x656D69746C616572 && v96 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
        uint64_t v25 = v300;
      }
      else
      {
        char v102 = sub_1D446A758();
        swift_bridgeObjectRelease();
        uint64_t v25 = v300;
        if ((v102 & 1) == 0)
        {
          swift_bridgeObjectRetain_n();
          v137 = sub_1D44698F8();
          os_log_type_t v159 = sub_1D446A038();
          if (os_log_type_enabled(v137, v159))
          {
            uint64_t v139 = swift_slowAlloc();
            uint64_t v160 = swift_slowAlloc();
            uint64_t aBlock = (void *)v160;
            *(_DWORD *)uint64_t v139 = v286;
            swift_bridgeObjectRetain();
            uint64_t v142 = v317;
            uint64_t v326 = sub_1D42CB9EC(v317, v60, (uint64_t *)&aBlock);
            id v50 = v297;
            uint64_t v53 = (uint64_t)v298;
            sub_1D446A188();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1D4271000, v137, v159, "FMIPManager: Overriding location because it's newer: %s ", (uint8_t *)v139, 0xCu);
            swift_arrayDestroy();
            uint64_t v143 = v160;
            goto LABEL_86;
          }
LABEL_87:

          swift_bridgeObjectRelease_n();
          uint64_t v142 = v317;
          goto LABEL_88;
        }
      }
      id v103 = objc_msgSend(v318, sel_timestamp);
      unint64_t v104 = v306;
      sub_1D44695D8();

      sub_1D44695B8();
      double v106 = v105;
      uint64_t v107 = v104;
      uint64_t v108 = v308;
      v93(v107, v308);
      id v109 = objc_msgSend(v77, sel_timestamp);
      uint64_t v110 = v307;
      sub_1D44695D8();

      sub_1D44695B8();
      double v112 = v111;
      v93(v110, v108);
      swift_bridgeObjectRetain();
      if (v106 - v112 <= 15.0)
      {
        unint64_t v113 = sub_1D44698F8();
        os_log_type_t v114 = sub_1D446A038();
        if (os_log_type_enabled(v113, v114))
        {
          uint64_t v115 = (uint8_t *)swift_slowAlloc();
          uint64_t v116 = swift_slowAlloc();
          uint64_t aBlock = (void *)v116;
          *(_DWORD *)uint64_t v115 = v286;
          swift_bridgeObjectRetain();
          uint64_t v326 = sub_1D42CB9EC(v317, v60, (uint64_t *)&aBlock);
          id v50 = v297;
          uint64_t v53 = (uint64_t)v298;
          sub_1D446A188();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1D4271000, v113, v114, "FMIPManager: Keeping realtime location for %s ", v115, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D9447730](v116, -1, -1);
          MEMORY[0x1D9447730](v115, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        goto LABEL_20;
      }
      swift_bridgeObjectRetain();
      v137 = sub_1D44698F8();
      os_log_type_t v138 = sub_1D446A038();
      if (os_log_type_enabled(v137, v138))
      {
        uint64_t v139 = swift_slowAlloc();
        id v140 = v77;
        uint64_t v141 = swift_slowAlloc();
        uint64_t aBlock = (void *)v141;
        *(_DWORD *)uint64_t v139 = v275;
        v313 = (uint64_t (**)(uint64_t))(v139 + 4);
        swift_bridgeObjectRetain();
        uint64_t v142 = v317;
        uint64_t v326 = sub_1D42CB9EC(v317, v60, (uint64_t *)&aBlock);
        sub_1D446A188();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v139 + 12) = 2048;
        uint64_t v326 = 0x402E000000000000;
        sub_1D446A188();
        _os_log_impl(&dword_1D4271000, v137, v138, "FMIPManager: Overriding realtime location for %s because %f miliseconds threshold is expired", (uint8_t *)v139, 0x16u);
        swift_arrayDestroy();
        uint64_t v143 = v141;
        id v77 = v140;
        uint64_t v53 = (uint64_t)v298;
LABEL_86:
        MEMORY[0x1D9447730](v143, -1, -1);
        MEMORY[0x1D9447730](v139, -1, -1);

LABEL_88:
        v161 = v318;
        uint64_t v162 = v287;
        char v163 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t aBlock = (void *)v162;
        if (v311) {
          int v164 = 256;
        }
        else {
          int v164 = 0;
        }
        int v165 = v164 | v312;
        if (v310) {
          int v166 = 0x10000;
        }
        else {
          int v166 = 0;
        }
        sub_1D42C158C(v165 | v166 | (v309 << 24), (uint64_t)v161, v142, v60, v163, v64);
        uint64_t v287 = (uint64_t)aBlock;

LABEL_95:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      goto LABEL_87;
    }
    uint64_t v98 = v316;
    uint64_t v97 = v317;
    if (!v316[2])
    {
      (*v293)(v53, 1, 1, v294);
      uint64_t v25 = v300;
LABEL_58:
      swift_bridgeObjectRelease();

      sub_1D4276C3C(v53, (uint64_t *)&unk_1EA6C9468);
      goto LABEL_20;
    }
    swift_bridgeObjectRetain();
    unint64_t v99 = sub_1D42C4FCC(v97, v60);
    if (v100)
    {
      sub_1D42CA6F0(v98[7] + *(void *)(v88 + 72) * v99, v53, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v101 = 0;
    }
    else
    {
      uint64_t v101 = 1;
    }
    uint64_t v25 = v300;
    uint64_t v117 = v294;
    (*v293)(v53, v101, 1, v294);
    swift_bridgeObjectRelease();
    if ((*v289)(v53, 1, v117) == 1) {
      goto LABEL_58;
    }
    uint64_t v144 = v283;
    sub_1D42CAAD0(v53, v283, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    if (*(unsigned char *)(v284 + v276) != 1)
    {
      if (!*(void *)(v287 + 16))
      {
LABEL_106:
        uint64_t v180 = v273;
        sub_1D42CA6F0(v283, v273, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        v181 = sub_1D44698F8();
        os_log_type_t v182 = sub_1D446A038();
        if (!os_log_type_enabled(v181, v182)) {
          goto LABEL_114;
        }
        v183 = (uint8_t *)swift_slowAlloc();
        uint64_t v184 = swift_slowAlloc();
        v313 = (uint64_t (**)(uint64_t))v184;
        *(_DWORD *)v183 = v286;
        uint64_t aBlock = (void *)v184;
        v185 = (uint64_t *)(v180 + *(int *)(v294 + 56));
        uint64_t v187 = *v185;
        unint64_t v186 = v185[1];
        swift_bridgeObjectRetain();
        uint64_t v188 = v187;
        uint64_t v25 = v300;
        uint64_t v326 = sub_1D42CB9EC(v188, v186, (uint64_t *)&aBlock);
        uint64_t v53 = (uint64_t)v298;
        sub_1D446A188();
        id v50 = v297;
        swift_bridgeObjectRelease();
        sub_1D42CA8E8(v180, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        v189 = v181;
        os_log_type_t v190 = v182;
        v191 = "FMIPManager: using BA Location for \"%s\" with because BA provides live locations.";
        goto LABEL_113;
      }
      swift_bridgeObjectRetain();
      uint64_t v167 = v287;
      unint64_t v168 = sub_1D42C4FCC(v317, v60);
      if ((v169 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_106;
      }
      id v170 = v77;
      v171 = (unsigned __int8 *)(*(void *)(v167 + 56) + 24 * v168);
      int v172 = *v171;
      int v173 = v171[1];
      int v174 = v171[2];
      unsigned __int8 v175 = v171[3];
      double v176 = *((double *)v171 + 2);
      id v177 = *((id *)v171 + 1);
      swift_bridgeObjectRelease();
      sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7D970);
      v157 = v318;
      id v178 = v177;
      if ((sub_1D446A118() & 1) == 0 || v176 != v64 || v312 != v172)
      {

        uint64_t v53 = (uint64_t)v298;
        uint64_t v25 = v300;
        id v50 = v297;
        id v77 = v170;
        goto LABEL_106;
      }
      unsigned __int8 v225 = v175;
      uint64_t v53 = (uint64_t)v298;
      id v77 = v170;
      if (v311 != v173 || v310 != v174)
      {

        uint64_t v25 = v300;
        id v50 = v297;
        goto LABEL_106;
      }
      LOBYTE(aBlock) = v225;
      LOBYTE(v326) = v309;
      unint64_t v243 = FMIPLocationType.rawValue.getter();
      uint64_t v245 = v244;
      unint64_t v246 = FMIPLocationType.rawValue.getter();
      id v50 = v297;
      if (v243 != v246 || v245 != v247)
      {
        char v253 = sub_1D446A758();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v53 = (uint64_t)v298;
        uint64_t v25 = v300;
        id v77 = v170;
        if (v253) {
          goto LABEL_156;
        }
        goto LABEL_106;
      }

      swift_bridgeObjectRelease_n();
      uint64_t v53 = (uint64_t)v298;
      uint64_t v25 = v300;
      id v77 = v170;
LABEL_156:
      uint64_t v254 = v283;
LABEL_159:
      sub_1D42CA8E8(v254, (uint64_t (*)(void))type metadata accessor for FMIPItem);

      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    int v145 = v274;
    if ((*(unsigned char *)(v144 + *(int *)(v294 + 76)) & 0x40) == 0) {
      int v145 = 1;
    }
    if (v145 != 1)
    {
      LOBYTE(aBlock) = (_BYTE)v313;
      if (FMIPLocationType.rawValue.getter() == 0x656D69746C616572 && v179 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();

        goto LABEL_144;
      }
      char v192 = sub_1D446A758();
      swift_bridgeObjectRelease();
      uint64_t v193 = v317;
      if (v192)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if (*(void *)(v287 + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v207 = v287;
          unint64_t v208 = sub_1D42C4FCC(v193, v60);
          if (v209)
          {
            v210 = (unsigned __int8 *)(*(void *)(v207 + 56) + 24 * v208);
            uint64_t v211 = *v210;
            int v212 = v210[1];
            int v213 = v210[2];
            uint64_t v214 = v210[3];
            v215 = (void *)*((void *)v210 + 1);
            v216 = (uint64_t (*)(uint64_t))*((void *)v210 + 2);
            uint64_t v217 = 256;
            if (!v212) {
              uint64_t v217 = 0;
            }
            uint64_t v218 = v217 | v211;
            uint64_t v219 = 0x10000;
            if (!v213) {
              uint64_t v219 = 0;
            }
            uint64_t v220 = v218 | v219 | (v214 << 24);
            id v221 = v215;
            swift_bridgeObjectRelease();
            uint64_t aBlock = (void *)v220;
            uint64_t v321 = (uint64_t)v215;
            v322 = v216;
            LOBYTE(v326) = v304;
            BYTE1(v326) = v302;
            BYTE2(v326) = v303;
            BYTE3(v326) = (_BYTE)v313;
            v327[0] = v77;
            *(double *)&v327[1] = v70;
            id v222 = v221;
            char v223 = _s8FMIPCore12FMIPLocationV2eeoiySbAC_ACtFZ_0((double *)&aBlock, (double *)&v326);
            v224 = (void *)v321;

            if (v223)
            {
              sub_1D42CA8E8(v283, (uint64_t (*)(void))type metadata accessor for FMIPItem);

              swift_bridgeObjectRelease();
              goto LABEL_20;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v226 = v271;
        sub_1D42CA6F0(v283, v271, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        v227 = sub_1D44698F8();
        os_log_type_t v228 = sub_1D446A038();
        if (os_log_type_enabled(v227, v228))
        {
          uint64_t v229 = v226;
          v230 = (uint8_t *)swift_slowAlloc();
          uint64_t v231 = swift_slowAlloc();
          uint64_t v312 = v231;
          *(_DWORD *)v230 = v286;
          uint64_t aBlock = (void *)v231;
          v232 = (uint64_t *)(v229 + *(int *)(v294 + 56));
          uint64_t v234 = *v232;
          unint64_t v233 = v232[1];
          swift_bridgeObjectRetain();
          uint64_t v235 = v234;
          uint64_t v25 = v300;
          uint64_t v326 = sub_1D42CB9EC(v235, v233, (uint64_t *)&aBlock);
          uint64_t v53 = (uint64_t)v298;
          sub_1D446A188();
          swift_bridgeObjectRelease();
          sub_1D42CA8E8(v271, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          _os_log_impl(&dword_1D4271000, v227, v228, "FMIPManager: overriding location for \"%s\" with realtime location because it's connected", v230, 0xCu);
          uint64_t v236 = v312;
          swift_arrayDestroy();
          MEMORY[0x1D9447730](v236, -1, -1);
          MEMORY[0x1D9447730](v230, -1, -1);
        }
        else
        {
          sub_1D42CA8E8(v226, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        }

        uint64_t v237 = v287;
        char v238 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t aBlock = (void *)v237;
        if (v302) {
          int v239 = 256;
        }
        else {
          int v239 = 0;
        }
        int v240 = v239 | v304;
        if (v303) {
          int v241 = 0x10000;
        }
        else {
          int v241 = 0;
        }
        sub_1D42C158C(v240 | v241 | (v313 << 24), (uint64_t)v77, v317, v60, v238, v70);
        uint64_t v287 = (uint64_t)aBlock;

        swift_bridgeObjectRelease();
LABEL_144:
        swift_bridgeObjectRelease();
      }
      sub_1D42CA8E8(v283, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      goto LABEL_20;
    }
    if (*(void *)(v287 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v146 = v287;
      unint64_t v147 = sub_1D42C4FCC(v317, v60);
      if (v148)
      {
        id v149 = v77;
        v150 = (unsigned __int8 *)(*(void *)(v146 + 56) + 24 * v147);
        int v151 = *v150;
        int v152 = v150[1];
        int v153 = v150[2];
        unsigned __int8 v154 = v150[3];
        double v155 = *((double *)v150 + 2);
        id v156 = *((id *)v150 + 1);
        swift_bridgeObjectRelease();
        sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7D970);
        v157 = v318;
        id v158 = v156;
        if ((sub_1D446A118() & 1) != 0 && v155 == v64 && v312 == v151)
        {
          unsigned __int8 v242 = v154;
          uint64_t v53 = (uint64_t)v298;
          id v77 = v149;
          if (v311 == v152 && v310 == v153)
          {
            LOBYTE(aBlock) = v242;
            LOBYTE(v326) = v309;
            unint64_t v248 = FMIPLocationType.rawValue.getter();
            uint64_t v250 = v249;
            unint64_t v251 = FMIPLocationType.rawValue.getter();
            id v50 = v297;
            if (v248 == v251 && v250 == v252)
            {

              swift_bridgeObjectRelease_n();
              uint64_t v53 = (uint64_t)v298;
              uint64_t v144 = v283;
              uint64_t v25 = v300;
              id v77 = v149;
LABEL_158:
              uint64_t v254 = v144;
              goto LABEL_159;
            }
            char v255 = sub_1D446A758();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v53 = (uint64_t)v298;
            uint64_t v144 = v283;
            uint64_t v25 = v300;
            id v77 = v149;
            if (v255) {
              goto LABEL_158;
            }
          }
          else
          {

            uint64_t v144 = v283;
            uint64_t v25 = v300;
            id v50 = v297;
          }
        }
        else
        {

          uint64_t v53 = (uint64_t)v298;
          uint64_t v144 = v283;
          uint64_t v25 = v300;
          id v50 = v297;
          id v77 = v149;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v144 = v283;
      }
    }
    uint64_t v180 = v272;
    sub_1D42CA6F0(v144, v272, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    v181 = sub_1D44698F8();
    os_log_type_t v194 = sub_1D446A038();
    if (!os_log_type_enabled(v181, v194))
    {
LABEL_114:
      sub_1D42CA8E8(v180, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      goto LABEL_115;
    }
    v183 = (uint8_t *)swift_slowAlloc();
    uint64_t v195 = swift_slowAlloc();
    v313 = (uint64_t (**)(uint64_t))v195;
    *(_DWORD *)v183 = v286;
    uint64_t aBlock = (void *)v195;
    v196 = (uint64_t *)(v180 + *(int *)(v294 + 56));
    uint64_t v198 = *v196;
    unint64_t v197 = v196[1];
    swift_bridgeObjectRetain();
    uint64_t v199 = v198;
    uint64_t v25 = v300;
    uint64_t v326 = sub_1D42CB9EC(v199, v197, (uint64_t *)&aBlock);
    uint64_t v53 = (uint64_t)v298;
    sub_1D446A188();
    id v50 = v297;
    swift_bridgeObjectRelease();
    sub_1D42CA8E8(v180, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    v189 = v181;
    os_log_type_t v190 = v194;
    v191 = "FMIPManager: overriding location for \"%s\" with new BA location because it's not connected";
LABEL_113:
    _os_log_impl(&dword_1D4271000, v189, v190, v191, v183, 0xCu);
    v200 = v313;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v200, -1, -1);
    MEMORY[0x1D9447730](v183, -1, -1);
LABEL_115:

    v201 = v318;
    uint64_t v202 = v287;
    char v203 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t aBlock = (void *)v202;
    if (v311) {
      int v204 = 256;
    }
    else {
      int v204 = 0;
    }
    int v205 = v204 | v312;
    if (v310) {
      int v206 = 0x10000;
    }
    else {
      int v206 = 0;
    }
    sub_1D42C158C(v205 | v206 | (v309 << 24), (uint64_t)v201, v317, v60, v203, v64);
    uint64_t v287 = (uint64_t)aBlock;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D42CA8E8(v283, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_20:
    uint64_t v51 = v315;
    unint64_t v49 = v314;
  }
  uint64_t v58 = v51 + 4;
  if (v51 + 4 >= v296) {
    goto LABEL_160;
  }
  unint64_t v56 = *(void *)(v295 + 8 * v58);
  if (v56)
  {
    int64_t v57 = v51 + 4;
    goto LABEL_36;
  }
  while (1)
  {
    int64_t v57 = v58 + 1;
    if (__OFADD__(v58, 1)) {
      break;
    }
    if (v57 >= v296) {
      goto LABEL_160;
    }
    unint64_t v56 = *(void *)(v295 + 8 * v57);
    ++v58;
    if (v56) {
      goto LABEL_36;
    }
  }
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  uint64_t result = sub_1D446A7A8();
  __break(1u);
  return result;
}

uint64_t sub_1D42876CC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469958();
  uint64_t v18 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D44699B8();
  uint64_t v16 = *(void *)(v7 - 8);
  uint64_t v17 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v10 = a1[35];
  uint64_t v15 = *(void *)(a2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue);
  aBlock[4] = sub_1D42E7AA0;
  void aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0B9F0;
  uint64_t v11 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D4469988();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v9, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v17);
  swift_release();
  *(void *)(a2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemCounts) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1D4374EC8();
  swift_beginAccess();
  uint64_t v12 = a1[10];
  uint64_t v13 = a1[36];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D42C73B8(v12, v10, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D4287A0C()
{
  uint64_t v1 = (__CFString *)(id)*MEMORY[0x1E4F97DD0];
  uint64_t v2 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterAddObserver(v2, v0, (CFNotificationCallback)sub_1D4449404, v1, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_defaultCenter);
  objc_msgSend(v4, sel_addObserver_selector_name_object_, v0, sel_handleBeaconsChanged, v1, 0);

  uint64_t v5 = (__CFString *)(id)*MEMORY[0x1E4F97DF8];
  CFNotificationCenterAddObserver(v2, v0, (CFNotificationCallback)sub_1D4449410, v5, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  id v6 = objc_msgSend(v3, sel_defaultCenter);
  objc_msgSend(v6, sel_addObserver_selector_name_object_, v0, sel_handleUnknownBeaconsChanged, v5, 0);
}

uint64_t sub_1D4287B6C()
{
  uint64_t v1 = v0;
  swift_defaultActor_initialize();
  uint64_t v2 = MEMORY[0x1E4FBC870];
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v0 + 120) = 0;
  *(void *)(v0 + 128) = v2;
  *(void *)(v0 + 136) = v3;
  *(void *)(v0 + 144) = v2;
  *(void *)(v0 + 160) = 0;
  swift_unknownObjectWeakInit();
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD831A0);
  uint64_t v5 = sub_1D44698F8();
  os_log_type_t v6 = sub_1D446A038();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1D4271000, v5, v6, "FMIPBeaconSharingController: init", v7, 2u);
    MEMORY[0x1D9447730](v7, -1, -1);
  }

  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F97C50]), sel_init);
  id v9 = objc_msgSend(v8, sel_beaconSharingSession);

  *(void *)(v1 + 112) = v9;
  return v1;
}

void sub_1D4287CBC()
{
  uint64_t v1 = v0;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  uint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPDeviceConnectionStateProvider: accesoriesConnectionStateChanged notification received", v5, 2u);
    MEMORY[0x1D9447730](v5, -1, -1);
  }

  id v6 = objc_msgSend(self, sel_sharedInstance);
  v8[4] = sub_1D42E34EC;
  v8[5] = v1;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_1D4279F3C;
  v8[3] = &unk_1F2C0DD38;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_getConnectedAccessoriesDiscoveryIds_, v7);
  _Block_release(v7);
}

void sub_1D4287E5C(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D4469958();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1D44699B8();
  uint64_t v25 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v24 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *a1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D4469928();
  sub_1D42D7FAC(v10, (uint64_t)qword_1EBD83228);
  uint64_t v11 = sub_1D44698F8();
  os_log_type_t v12 = sub_1D446A038();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = v5;
    uint64_t v15 = v14;
    aBlock[0] = v14;
    uint64_t v21 = v7;
    *(_DWORD *)uint64_t v13 = 136446210;
    LOBYTE(v26) = v9;
    uint64_t v16 = sub_1D4469B68();
    uint64_t v26 = sub_1D42CB9EC(v16, v17, aBlock);
    uint64_t v7 = v21;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v11, v12, "FMIPManager: didReceive clientConfiguration: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v18 = v15;
    uint64_t v5 = v22;
    MEMORY[0x1D9447730](v18, -1, -1);
    MEMORY[0x1D9447730](v13, -1, -1);
  }

  if (v9)
  {
    aBlock[4] = (uint64_t)sub_1D438B9C4;
    void aBlock[5] = v2;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1D42BD950;
    aBlock[3] = (uint64_t)&unk_1F2C0C378;
    uint64_t v19 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v20 = v24;
    sub_1D4469988();
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v20, v7, v19);
    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v23);
    swift_release();
  }
}

uint64_t sub_1D428826C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4469958();
  uint64_t v36 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D44699B8();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager);
  uint64_t v13 = *(void *)(v12 + 176);
  swift_retain();
  swift_bridgeObjectRetain();
  char v14 = sub_1D42E2428(a2, v13);
  swift_bridgeObjectRelease();
  uint64_t v33 = a2;
  if ((v14 & 1) == 0)
  {
    *(void *)(v12 + 176) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if ((*(unsigned char *)(v12 + 24) & 1) != 0 && *(void *)(v12 + 336))
    {
      swift_retain();
      sub_1D4394DC8(a2);
      swift_release();
    }
    swift_release();
    uint64_t v32 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a1;
    *(void *)(v15 + 24) = a2;
    *(void *)&long long v39 = sub_1D438B8B4;
    *((void *)&v39 + 1) = v15;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v38 = sub_1D42BD950;
    *((void *)&v38 + 1) = &unk_1F2C0C210;
    uint64_t v16 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1D4469988();
    uint64_t v43 = MEMORY[0x1E4FBC860];
    sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v11, v8, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
  }
  swift_release();
  long long v17 = *(_OWORD *)(a3 + 48);
  long long v39 = *(_OWORD *)(a3 + 32);
  long long v40 = v17;
  long long v41 = *(_OWORD *)(a3 + 64);
  uint64_t v42 = *(void *)(a3 + 80);
  long long v18 = *(_OWORD *)(a3 + 16);
  long long aBlock = *(_OWORD *)a3;
  long long v38 = v18;
  swift_retain();
  char v19 = sub_1D4290A2C((uint64_t)&aBlock);
  swift_release();
  if (v19)
  {
    uint64_t v32 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue);
    uint64_t v20 = swift_allocObject();
    long long v21 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(v20 + 56) = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(v20 + 72) = v21;
    *(_OWORD *)(v20 + 88) = *(_OWORD *)(a3 + 64);
    long long v22 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v20 + 24) = *(_OWORD *)a3;
    *(void *)(v20 + 16) = a1;
    *(void *)(v20 + 104) = *(void *)(a3 + 80);
    *(_OWORD *)(v20 + 40) = v22;
    *(void *)&long long v39 = sub_1D438B984;
    *((void *)&v39 + 1) = v20;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v38 = sub_1D42BD950;
    *((void *)&v38 + 1) = &unk_1F2C0C2B0;
    uint64_t v23 = _Block_copy(&aBlock);
    swift_retain();
    sub_1D4290D4C(a3);
    sub_1D4469988();
    uint64_t v43 = MEMORY[0x1E4FBC860];
    sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v11, v8, v23);
    _Block_release(v23);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
    swift_release();
  }
  uint64_t v24 = swift_allocObject();
  long long v25 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v24 + 72) = v25;
  *(_OWORD *)(v24 + 88) = *(_OWORD *)(a3 + 64);
  long long v26 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v24 + 24) = *(_OWORD *)a3;
  *(void *)(v24 + 16) = a1;
  uint64_t v27 = *(void *)(a3 + 80);
  *(_OWORD *)(v24 + 40) = v26;
  uint64_t v28 = v33;
  *(void *)(v24 + 104) = v27;
  *(void *)(v24 + 112) = v28;
  *(void *)&long long v39 = sub_1D42E7980;
  *((void *)&v39 + 1) = v24;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v38 = sub_1D42BD950;
  *((void *)&v38 + 1) = &unk_1F2C0C260;
  uint64_t v29 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D4290D4C(a3);
  sub_1D4469988();
  uint64_t v43 = MEMORY[0x1E4FBC860];
  sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v11, v8, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
  return swift_release();
}

void sub_1D428896C(int a1)
{
  uint64_t v2 = v1;
  switch(a1)
  {
    case 0:
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1D4469928();
      sub_1D42D7FAC(v16, (uint64_t)qword_1EBD83228);
      uint64_t v9 = sub_1D44698F8();
      os_log_type_t v17 = sub_1D446A038();
      if (!os_log_type_enabled(v9, v17)) {
        goto LABEL_25;
      }
      long long v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v18 = 0;
      char v19 = "FMIPLocationController: location manager didChangeAuthorization: NOT DETERMINED";
      goto LABEL_23;
    case 1:
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_1D4469928();
      sub_1D42D7FAC(v20, (uint64_t)qword_1EBD83228);
      uint64_t v9 = sub_1D44698F8();
      os_log_type_t v17 = sub_1D446A038();
      if (!os_log_type_enabled(v9, v17)) {
        goto LABEL_25;
      }
      long long v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v18 = 0;
      char v19 = "FMIPLocationController: location manager didChangeAuthorization: RESTRICTED";
      goto LABEL_23;
    case 2:
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_1D4469928();
      sub_1D42D7FAC(v21, (uint64_t)qword_1EBD83228);
      uint64_t v9 = sub_1D44698F8();
      os_log_type_t v17 = sub_1D446A038();
      if (!os_log_type_enabled(v9, v17)) {
        goto LABEL_25;
      }
      long long v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v18 = 0;
      char v19 = "FMIPLocationController: location manager didChangeAuthorization: DENIED";
LABEL_23:
      _os_log_impl(&dword_1D4271000, v9, v17, v19, v18, 2u);
      uint64_t v15 = v18;
      break;
    case 3:
    case 4:
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1D4469928();
      sub_1D42D7FAC(v3, (uint64_t)qword_1EBD83228);
      uint64_t v4 = sub_1D44698F8();
      os_log_type_t v5 = sub_1D446A038();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl(&dword_1D4271000, v4, v5, "FMIPLocationController: location manager didChangeAuthorization: AUTHORIZED", v6, 2u);
        MEMORY[0x1D9447730](v6, -1, -1);
      }

      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_locationManager), sel_startUpdatingLocation);
      goto LABEL_26;
    default:
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_1D4469928();
      sub_1D42D7FAC(v7, (uint64_t)qword_1EBD83228);
      os_log_type_t v8 = sub_1D446A018();
      uint64_t v9 = sub_1D44698F8();
      os_log_type_t v10 = v8;
      if (!os_log_type_enabled(v9, v8)) {
        goto LABEL_25;
      }
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v27 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      type metadata accessor for CLAuthorizationStatus(0);
      uint64_t v13 = sub_1D4469B68();
      uint64_t v26 = sub_1D42CB9EC(v13, v14, &v27);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v9, v10, "FMIPLocationController: location manager didChangeAuthorization: UNKNOWN - %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v12, -1, -1);
      uint64_t v15 = v11;
      break;
  }
  MEMORY[0x1D9447730](v15, -1, -1);
LABEL_25:

LABEL_26:
  BOOL v22 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_locationManager), sel_accuracyAuthorization, v26, v27) != 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_limitedPrecision) = v22;
  uint64_t v23 = self;
  uint64_t v24 = (void *)sub_1D4469B08();
  long long v25 = (void *)sub_1D4469B08();
  objc_msgSend(v23, sel_setBool_forKey_inDomain_, v22, v24, v25);
}

uint64_t sub_1D4288E68(char a1, uint64_t a2)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
  os_log_type_t v5 = sub_1D44698F8();
  os_log_type_t v6 = sub_1D446A038();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v16[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = 0xD000000000000019;
    unint64_t v10 = 0x80000001D447DAF0;
    switch(a1)
    {
      case 1:
        uint64_t v9 = 0xD000000000000014;
        unint64_t v10 = 0x80000001D447DB10;
        break;
      case 2:
        unint64_t v10 = 0xEF64656C62616E45;
        uint64_t v9 = 0x626154736D657469;
        break;
      case 3:
        unint64_t v10 = 0x80000001D447DB40;
        uint64_t v9 = 0xD000000000000010;
        break;
      default:
        break;
    }
    uint64_t v15 = sub_1D42CB9EC(v9, v10, v16);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v5, v6, "FMIPManager: didChangeServerConfiguration: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v8, -1, -1);
    MEMORY[0x1D9447730](v7, -1, -1);
  }

  uint64_t v11 = a2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v11);
  if (result)
  {
    uint64_t v13 = *(void *)(v11 + 8);
    uint64_t ObjectType = swift_getObjectType();
    LOBYTE(v15) = a1;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v13 + 104))(a2, &v15, ObjectType, v13);
    return swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_1D42890DC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = a3;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[3];
  uint64_t v25 = a1[2];
  uint64_t v26 = *a1;
  char v23 = *((unsigned char *)a1 + 33);
  char v24 = *((unsigned char *)a1 + 32);
  char v22 = *((unsigned char *)a1 + 34);
  char v10 = *((unsigned char *)a1 + 35);
  uint64_t v11 = a1[6];
  uint64_t v12 = a1[8];
  uint64_t v20 = a1[7];
  uint64_t v21 = a1[5];
  uint64_t v13 = a1[10];
  uint64_t v19 = a1[9];
  if (a2)
  {
    uint64_t v15 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = swift_bridgeObjectRetain();
    if (v15)
    {
      unint64_t result = sub_1D42C4FCC(0x4153487369, 0xE500000000000000);
      if (v17)
      {
        sub_1D42CBAC0(*(void *)(a2 + 56) + 32 * result, (uint64_t)v28);
        unint64_t result = swift_dynamicCast();
        if (result)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v10 = v27;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t result = swift_bridgeObjectRetain();
        }
      }
    }
    uint64_t v6 = a3;
    if (a4) {
      goto LABEL_7;
    }
LABEL_9:
    uint64_t v6 = v19;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = swift_bridgeObjectRetain();
  if (!a4) {
    goto LABEL_9;
  }
LABEL_7:
  swift_bridgeObjectRetain();
  unint64_t result = swift_bridgeObjectRelease();
  uint64_t v13 = a4;
LABEL_10:
  *(void *)a5 = v26;
  *(void *)(a5 + 8) = v8;
  *(void *)(a5 + 16) = v25;
  *(void *)(a5 + 24) = v9;
  *(unsigned char *)(a5 + 32) = v24;
  *(unsigned char *)(a5 + 33) = v23;
  *(unsigned char *)(a5 + 34) = v22;
  *(unsigned char *)(a5 + 35) = v10;
  *(void *)(a5 + 40) = v21;
  *(void *)(a5 + 48) = v11;
  *(void *)(a5 + 56) = v20;
  *(void *)(a5 + 64) = v12;
  *(void *)(a5 + 72) = v6;
  *(void *)(a5 + 80) = v13;
  return result;
}

uint64_t sub_1D42892D4(uint64_t a1)
{
  sub_1D42D5DA0(&qword_1EBD7D8C0);
  sub_1D446A0A8();
  sub_1D42D5DA0((uint64_t *)&unk_1EA6CA520);
  sub_1D446A0A8();
  sub_1D42D5DA0(&qword_1EA6CA4F0);
  sub_1D446A0A8();
  sub_1D42C73B8(v7, v7, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  if (MEMORY[0x1D9447840](v2))
  {
    uint64_t v3 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_1D446A0A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32))(a1, v6, ObjectType, v3);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  sub_1D446A0A8();
  sub_1D42E6CFC(v6, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42894E0(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = a2;
  uint64_t v72 = a1;
  uint64_t v2 = sub_1D4469688();
  uint64_t v71 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  os_log_type_t v5 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v62 - v6;
  uint64_t v8 = sub_1D42D5DA0(&qword_1EA6CBA30);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v62 - v12;
  if (qword_1EBD80068 != -1) {
LABEL_43:
  }
    swift_once();
  uint64_t v14 = sub_1D4469928();
  uint64_t v76 = sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
  uint64_t v15 = sub_1D44698F8();
  os_log_type_t v16 = sub_1D446A038();
  if (os_log_type_enabled(v15, v16))
  {
    char v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v17 = 0;
    _os_log_impl(&dword_1D4271000, v15, v16, "FMIPBeaconRefreshingController: refreshing location", v17, 2u);
    MEMORY[0x1D9447730](v17, -1, -1);
  }

  uint64_t v18 = *(void *)(v72 + 64);
  uint64_t v65 = v72 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(v72 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  uint64_t v81 = (void (**)(char *, char *, uint64_t, double))(v71 + 16);
  id v75 = (void (**)(char *, char *, uint64_t))(v71 + 32);
  unint64_t v84 = (void (**)(char *, uint64_t))(v71 + 8);
  unint64_t v69 = &v91;
  int64_t v66 = (unint64_t)(v19 + 63) >> 6;
  int64_t v63 = v66 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v79 = 0;
  uint64_t v23 = MEMORY[0x1E4FBC868];
  *(void *)&long long v24 = 136315395;
  long long v68 = v24;
  uint64_t v67 = MEMORY[0x1E4FBC840] + 8;
  BOOL v80 = v5;
  double v70 = v7;
  id v77 = v13;
  uint64_t v78 = v11;
  while (1)
  {
    if (v21)
    {
      unint64_t v33 = __clz(__rbit64(v21));
      uint64_t v34 = (v21 - 1) & v21;
      unint64_t v35 = v33 | (v79 << 6);
LABEL_17:
      uint64_t v36 = v72;
      (*(void (**)(char *, unint64_t, uint64_t))(v71 + 16))(v11, *(void *)(v72 + 48) + *(void *)(v71 + 72) * v35, v2);
      uint64_t v37 = *(void *)(v36 + 56);
      uint64_t v38 = sub_1D42D5DA0(&qword_1EA6CBA38);
      long long v39 = *(void **)(v37 + 8 * v35);
      *(void *)&v11[*(int *)(v38 + 48)] = v39;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v11, 0, 1, v38);
      id v40 = v39;
      goto LABEL_36;
    }
    int64_t v41 = v79 + 1;
    if (__OFADD__(v79, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v41 < v66)
    {
      unint64_t v42 = *(void *)(v65 + 8 * v41);
      if (v42) {
        goto LABEL_21;
      }
      int64_t v43 = v79 + 2;
      ++v79;
      if (v41 + 1 < v66)
      {
        unint64_t v42 = *(void *)(v65 + 8 * v43);
        if (v42) {
          goto LABEL_24;
        }
        int64_t v79 = v41 + 1;
        if (v41 + 2 < v66)
        {
          unint64_t v42 = *(void *)(v65 + 8 * (v41 + 2));
          if (v42)
          {
            v41 += 2;
            goto LABEL_21;
          }
          int64_t v43 = v41 + 3;
          int64_t v79 = v41 + 2;
          if (v41 + 3 < v66) {
            break;
          }
        }
      }
    }
LABEL_35:
    uint64_t v44 = sub_1D42D5DA0(&qword_1EA6CBA38);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v11, 1, 1, v44);
    uint64_t v34 = 0;
LABEL_36:
    sub_1D4276C98((uint64_t)v11, (uint64_t)v13, &qword_1EA6CBA30);
    uint64_t v45 = sub_1D42D5DA0(&qword_1EA6CBA38);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48))(v13, 1, v45) == 1)
    {
      swift_release();
      if (!MEMORY[0x1D9447840](v64 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_delegate)) {
        return swift_bridgeObjectRelease();
      }
      sub_1D428BB94(v23);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
    unint64_t v83 = v34;
    uint64_t v46 = *(void **)&v13[*(int *)(v45 + 48)];
    (*v75)(v7, v13, v2);
    id v47 = v46;
    double v48 = FMIPLocation.init(beaconLocation:)(v47, (uint64_t)&v90);
    int v85 = BYTE1(v90);
    int v86 = BYTE2(v90);
    int v87 = v90;
    int v88 = BYTE3(v90);
    unint64_t v49 = v91;
    double v50 = v92;
    (*v81)(v5, v7, v2, v48);
    id v51 = v49;
    long long v52 = sub_1D44698F8();
    os_log_type_t v53 = sub_1D446A038();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v89 = v55;
      *(_DWORD *)uint64_t v54 = v68;
      id v73 = v47;
      uint64_t v56 = sub_1D4469638();
      uint64_t v90 = sub_1D42CB9EC(v56, v57, &v89);
      uint64_t v74 = v23;
      sub_1D446A188();
      swift_bridgeObjectRelease();
      uint64_t v82 = *v84;
      v82(v80, v2);
      *(_WORD *)(v54 + 12) = 2081;
      LOBYTE(v90) = v87;
      BYTE1(v90) = v85;
      BYTE2(v90) = v86;
      BYTE3(v90) = v88;
      id v91 = v51;
      double v92 = v50;
      uint64_t v58 = FMIPLocation.debugDescription.getter();
      uint64_t v90 = sub_1D42CB9EC(v58, v59, &v89);
      id v47 = v73;
      uint64_t v23 = v74;
      sub_1D446A188();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v52, v53, "FMIPBeaconRefreshingController: refreshLocations identifier: %s, location: %{private}s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy();
      uint64_t v60 = v55;
      uint64_t v7 = v70;
      MEMORY[0x1D9447730](v60, -1, -1);
      uint64_t v61 = v54;
      os_log_type_t v5 = v80;
      MEMORY[0x1D9447730](v61, -1, -1);
    }
    else
    {
      uint64_t v82 = *v84;
      v82(v5, v2);
    }
    uint64_t v25 = sub_1D4469638();
    uint64_t v27 = v26;
    id v28 = v51;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v90 = v23;
    if (v85) {
      int v30 = 256;
    }
    else {
      int v30 = 0;
    }
    int v31 = v30 | v87;
    if (v86) {
      int v32 = 0x10000;
    }
    else {
      int v32 = 0;
    }
    sub_1D42C158C(v31 | v32 | (v88 << 24), (uint64_t)v28, v25, v27, isUniquelyReferenced_nonNull_native, v50);
    uint64_t v23 = v90;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v82)(v7, v2);
    uint64_t v13 = v77;
    uint64_t v11 = v78;
    unint64_t v21 = v83;
  }
  unint64_t v42 = *(void *)(v65 + 8 * v43);
  if (v42)
  {
LABEL_24:
    int64_t v41 = v43;
LABEL_21:
    uint64_t v34 = (v42 - 1) & v42;
    unint64_t v35 = __clz(__rbit64(v42)) + (v41 << 6);
    int64_t v79 = v41;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v41 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v41 >= v66)
    {
      int64_t v79 = v63;
      goto LABEL_35;
    }
    unint64_t v42 = *(void *)(v65 + 8 * v41);
    ++v43;
    if (v42) {
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D4289D80()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D44699B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  os_log_type_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D4469958();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D4469928();
  sub_1D42D7FAC(v10, (uint64_t)qword_1EBD83228);
  uint64_t v11 = sub_1D44698F8();
  os_log_type_t v12 = sub_1D446A038();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1D4271000, v11, v12, "FMIPManager: didInitialize", v13, 2u);
    MEMORY[0x1D9447730](v13, -1, -1);
  }

  sub_1D4469948();
  aBlock[4] = sub_1D42E6CF4;
  void aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0C4B8;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v5, v9, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  uint64_t v15 = v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_siriDelegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v15);
  if (result)
  {
    uint64_t v17 = *(void *)(v15 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_1D42D5DA0(&qword_1EBD7D8C0);
    sub_1D446A0A8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 8))(v1, v19[1], ObjectType, v17);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1D428A0F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EBD83228);
  uint64_t v7 = sub_1D44698F8();
  os_log_type_t v8 = sub_1D446A038();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1D4271000, v7, v8, "FMIPBeaconRefreshingController: Calling SPOwnerSession - unknownBeacons", v9, 2u);
    MEMORY[0x1D9447730](v9, -1, -1);
  }

  uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_ownerSession);
  sub_1D4469688();
  id v11 = v10;
  os_log_type_t v12 = (void *)sub_1D4469D58();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a1;
  v13[3] = a2;
  v13[4] = a3;
  v15[4] = sub_1D42E376C;
  void v15[5] = v13;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  v15[2] = sub_1D4275C00;
  v15[3] = &unk_1F2C12DB8;
  uint64_t v14 = _Block_copy(v15);
  swift_retain();
  sub_1D42972D4(a2);
  swift_release();
  objc_msgSend(v11, sel_unknownBeaconsForUUIDs_completion_, v12, v14);
  _Block_release(v14);
}

uint64_t sub_1D428A2EC()
{
  uint64_t result = sub_1D4469868();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1D4469898();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D428A3B4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D44699B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D4469958();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = MEMORY[0x1F4188790](v8);
  os_log_type_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration)
                 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems) & 2) != 0)
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1D4469928();
    sub_1D42D7FAC(v13, (uint64_t)qword_1EBD83228);
    uint64_t v14 = sub_1D44698F8();
    os_log_type_t v15 = sub_1D446A038();
    if (os_log_type_enabled(v14, v15))
    {
      os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = v9;
      uint64_t v17 = v8;
      uint64_t v18 = v5;
      uint64_t v19 = v4;
      uint64_t v20 = a1;
      unint64_t v21 = v16;
      *(_WORD *)os_log_type_t v16 = 0;
      _os_log_impl(&dword_1D4271000, v14, v15, "FMIPManager: dataManager updated items", v16, 2u);
      char v22 = v21;
      a1 = v20;
      uint64_t v4 = v19;
      uint64_t v5 = v18;
      uint64_t v8 = v17;
      uint64_t v9 = v26;
      MEMORY[0x1D9447730](v22, -1, -1);
    }

    sub_1D4469948();
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a1;
    *(void *)(v23 + 24) = v2;
    aBlock[4] = sub_1D42E7AD0;
    void aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D42BD950;
    aBlock[3] = &unk_1F2C0B9C8;
    long long v24 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_1D4469988();
    MEMORY[0x1D9446420](0, v7, v12, v24);
    _Block_release(v24);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D428A6E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D44699B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D4469958();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = MEMORY[0x1F4188790](v8);
  os_log_type_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration)
                 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems) & 1) != 0)
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1D4469928();
    sub_1D42D7FAC(v13, (uint64_t)qword_1EBD83228);
    uint64_t v14 = sub_1D44698F8();
    os_log_type_t v15 = sub_1D446A038();
    if (os_log_type_enabled(v14, v15))
    {
      os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = v9;
      uint64_t v17 = v8;
      uint64_t v18 = v5;
      uint64_t v19 = v4;
      uint64_t v20 = a1;
      unint64_t v21 = v16;
      *(_WORD *)os_log_type_t v16 = 0;
      _os_log_impl(&dword_1D4271000, v14, v15, "FMIPManager: didReceive offline finding device states.", v16, 2u);
      char v22 = v21;
      a1 = v20;
      uint64_t v4 = v19;
      uint64_t v5 = v18;
      uint64_t v8 = v17;
      uint64_t v9 = v26;
      MEMORY[0x1D9447730](v22, -1, -1);
    }

    sub_1D4469948();
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a1;
    *(void *)(v23 + 24) = v2;
    aBlock[4] = sub_1D42E7930;
    void aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D42BD950;
    aBlock[3] = &unk_1F2C0B838;
    long long v24 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1D4469988();
    MEMORY[0x1D9446420](0, v7, v12, v24);
    _Block_release(v24);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D428AA1C()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_publicAPSToken);
  if (*(void *)(v0 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_publicAPSToken + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = (void *)sub_1D4469B08();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = self;
  uint64_t v4 = (void *)sub_1D4469B08();
  uint64_t v5 = (void *)sub_1D4469B08();
  objc_msgSend(v3, sel_setString_forKey_inDomain_, v2, v4, v5);

  uint64_t v6 = v0 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v6);
  if (result)
  {
    uint64_t v8 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_topicAPSToken);
    uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_topicAPSToken + 8);
    uint64_t v12 = *v1;
    uint64_t v13 = v1[1];
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v0, v10, v11, v12, v13, ObjectType, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D428ABC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v6 = v4;
  uint64_t v8 = sub_1D4469958();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1D44699B8();
  uint64_t v12 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1D4469928();
  sub_1D42D7FAC(v15, (uint64_t)qword_1EBD83228);
  os_log_type_t v16 = sub_1D44698F8();
  os_log_type_t v17 = sub_1D446A038();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    int v32 = v14;
    uint64_t v19 = v11;
    uint64_t v20 = v6;
    uint64_t v21 = v8;
    uint64_t v22 = v12;
    uint64_t v23 = v9;
    uint64_t v24 = a1;
    uint64_t v25 = a4;
    uint64_t v26 = v18;
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_1D4271000, v16, v17, "FMDiskIO: save to disk", v18, 2u);
    uint64_t v27 = v26;
    a4 = v25;
    a1 = v24;
    uint64_t v9 = v23;
    uint64_t v12 = v22;
    uint64_t v8 = v21;
    uint64_t v6 = v20;
    uint64_t v11 = v19;
    uint64_t v14 = v32;
    MEMORY[0x1D9447730](v27, -1, -1);
  }

  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v6;
  *(void *)(v28 + 24) = a1;
  aBlock[4] = v34;
  void aBlock[5] = v28;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = a4;
  uint64_t v29 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D4469988();
  uint64_t v36 = MEMORY[0x1E4FBC860];
  sub_1D42AAE70((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v14, v11, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v35);
  return swift_release();
}

void sub_1D428AF70(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a2;
  uint64_t v5 = sub_1D4469958();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v54 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D44699B8();
  uint64_t v53 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  long long v52 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D4469928();
  sub_1D42D7FAC(v10, (uint64_t)qword_1EBD83228);
  uint64_t v11 = sub_1D44698F8();
  os_log_type_t v12 = sub_1D446A038();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1D4271000, v11, v12, "FMIPSafeLocationRefreshingController: Processing safe locations update", v13, 2u);
    MEMORY[0x1D9447730](v13, -1, -1);
  }

  if ((a1 & 1) == 0)
  {
    uint64_t v14 = swift_bridgeObjectRetain();
    char v15 = sub_1D42E20B4(v14, a3);
    swift_bridgeObjectRelease();
    if (v15)
    {
      os_log_t v56 = (os_log_t)sub_1D44698F8();
      os_log_type_t v16 = sub_1D446A038();
      if (os_log_type_enabled(v56, v16))
      {
        os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v17 = 0;
        _os_log_impl(&dword_1D4271000, v56, v16, "FMIPSafeLocationRefreshingController: No changes detected, bailing.", v17, 2u);
        MEMORY[0x1D9447730](v17, -1, -1);
      }
      os_log_t v18 = v56;

      return;
    }
  }
  uint64_t v49 = v8;
  uint64_t v50 = v6;
  uint64_t v51 = v5;
  *(void *)(v55 + 32) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v19 = a3 & 0xC000000000000001;
  if ((a3 & 0xC000000000000001) != 0) {
    uint64_t v20 = sub_1D446A278();
  }
  else {
    uint64_t v20 = *(void *)(a3 + 16);
  }
  uint64_t v21 = MEMORY[0x1E4FBC860];
  if (!v20)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    goto LABEL_37;
  }
  uint64_t v62 = MEMORY[0x1E4FBC860];
  sub_1D433716C(0, v20 & ~(v20 >> 63), 0);
  if (v19)
  {
    uint64_t v22 = sub_1D446A228();
    unsigned __int8 v24 = 1;
  }
  else
  {
    uint64_t v22 = sub_1D444A074(a3);
    unsigned __int8 v24 = v26 & 1;
  }
  uint64_t v59 = v22;
  uint64_t v60 = v23;
  unsigned __int8 v61 = v24;
  if (v20 < 0)
  {
    __break(1u);
LABEL_39:
    __break(1u);
    return;
  }
  uint64_t v27 = (a3 & 0xFFFFFFFFFFFFFF8);
  if (a3 < 0) {
    uint64_t v27 = a3;
  }
  os_log_t v56 = v27;
  for (uint64_t i = v20 - 1; ; --i)
  {
    uint64_t v29 = v59;
    uint64_t v30 = v60;
    uint64_t v31 = v61;
    sub_1D4449DF0(v59, v60, v61, a3);
    FMIPSafeLocation.init(safeLocation:)(v32, v58);
    uint64_t v33 = v62;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D433716C(0, *(void *)(v33 + 16) + 1, 1);
      uint64_t v33 = v62;
    }
    unint64_t v35 = *(void *)(v33 + 16);
    unint64_t v34 = *(void *)(v33 + 24);
    if (v35 >= v34 >> 1)
    {
      sub_1D433716C(v34 > 1, v35 + 1, 1);
      uint64_t v33 = v62;
    }
    *(void *)(v33 + 16) = v35 + 1;
    memcpy((void *)(v33 + 352 * v35 + 32), v58, 0x160uLL);
    if (v19) {
      break;
    }
    uint64_t v36 = sub_1D4449D08(v29, v30, v31, a3);
    uint64_t v38 = v37;
    char v40 = v39;
    sub_1D4329478(v29, v30, v31);
    uint64_t v59 = v36;
    uint64_t v60 = v38;
    unsigned __int8 v61 = v40 & 1;
    if (!i) {
      goto LABEL_36;
    }
LABEL_35:
    ;
  }
  if ((v31 & 1) == 0) {
    goto LABEL_39;
  }
  if (sub_1D446A248()) {
    swift_isUniquelyReferenced_nonNull_native();
  }
  sub_1D42D5DA0(&qword_1EA6C9BA8);
  int64_t v41 = (void (*)(uint64_t *, void))sub_1D4469F18();
  sub_1D446A2D8();
  v41(v57, 0);
  if (i) {
    goto LABEL_35;
  }
LABEL_36:
  sub_1D4329478(v59, v60, v61);
  uint64_t v25 = v62;
  uint64_t v21 = MEMORY[0x1E4FBC860];
LABEL_37:
  uint64_t v42 = v55;
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v42;
  *(void *)(v43 + 24) = v25;
  v58[4] = sub_1D43294C4;
  v58[5] = v43;
  v58[0] = MEMORY[0x1E4F143A8];
  v58[1] = 1107296256;
  v58[2] = sub_1D42BD950;
  v58[3] = &unk_1F2C08768;
  uint64_t v44 = _Block_copy(v58);
  swift_retain();
  uint64_t v45 = v52;
  sub_1D4469988();
  v57[0] = v21;
  sub_1D42E81D4();
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42E2378();
  uint64_t v46 = v54;
  uint64_t v47 = v51;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v45, v46, v44);
  _Block_release(v44);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v46, v47);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v45, v49);
  swift_release();
}

uint64_t sub_1D428B5B0(long long *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D44699B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D4469958();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = a1[3];
  long long v39 = a1[2];
  long long v40 = v14;
  long long v41 = a1[4];
  uint64_t v42 = *((void *)a1 + 10);
  long long v15 = a1[1];
  long long v37 = *a1;
  long long v38 = v15;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1D4469928();
  sub_1D42D7FAC(v16, (uint64_t)qword_1EBD83228);
  os_log_type_t v17 = sub_1D44698F8();
  os_log_type_t v18 = sub_1D446A038();
  if (os_log_type_enabled(v17, v18))
  {
    unint64_t v19 = (uint8_t *)swift_slowAlloc();
    unint64_t v35 = v13;
    uint64_t v20 = v9;
    uint64_t v21 = v3;
    uint64_t v22 = v11;
    uint64_t v23 = v7;
    uint64_t v24 = a2;
    uint64_t v25 = v10;
    uint64_t v26 = v6;
    uint64_t v27 = v19;
    *(_WORD *)unint64_t v19 = 0;
    _os_log_impl(&dword_1D4271000, v17, v18, "FMIPManager: didReceiveUserInfos", v19, 2u);
    uint64_t v28 = v27;
    uint64_t v6 = v26;
    uint64_t v10 = v25;
    a2 = v24;
    uint64_t v7 = v23;
    uint64_t v11 = v22;
    uint64_t v3 = v21;
    uint64_t v9 = v20;
    uint64_t v13 = v35;
    MEMORY[0x1D9447730](v28, -1, -1);
  }

  sub_1D4469948();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v3;
  *(void *)(v29 + 24) = a2;
  long long v30 = v40;
  *(_OWORD *)(v29 + 64) = v39;
  *(_OWORD *)(v29 + 80) = v30;
  *(_OWORD *)(v29 + 96) = v41;
  *(void *)(v29 + 112) = v42;
  long long v31 = v38;
  *(_OWORD *)(v29 + 32) = v37;
  *(_OWORD *)(v29 + 48) = v31;
  aBlock[4] = sub_1D42E7990;
  void aBlock[5] = v29;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0C1C0;
  int v32 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D4290D4C((uint64_t)&v37);
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v9, v13, v32);
  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_1D428B928(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1D44698F8();
  os_log_type_t v6 = sub_1D446A038();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    uint64_t v15 = sub_1D4469A38();
    sub_1D446A188();
    *uint64_t v8 = v15;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v5, v6, "FMIPRefreshingController: connectionHandler didReceive message: %@", v7, 0xCu);
    sub_1D42D5DA0(&qword_1EBD7E830);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v8, -1, -1);
    MEMORY[0x1D9447730](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v9 = (void **)(v2 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_tapContexts);
  swift_beginAccess();
  uint64_t v10 = *v9;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v9 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v10 = sub_1D42E1F48(0, v10[2] + 1, 1, v10);
    *uint64_t v9 = v10;
  }
  unint64_t v13 = v10[2];
  unint64_t v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    uint64_t v10 = sub_1D42E1F48((void *)(v12 > 1), v13 + 1, 1, v10);
    *uint64_t v9 = v10;
  }
  v10[2] = v13 + 1;
  v10[v13 + 4] = a1;
  swift_endAccess();
  return sub_1D4294C8C(0.0);
}

uint64_t sub_1D428BB94(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1D44698F8();
  os_log_type_t v6 = sub_1D446A038();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = sub_1D4469A78();
    sub_1D42CB9EC(v9, v10, &v14);
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v5, v6, "FMIPManager: didReceive beacon locations %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v8, -1, -1);
    MEMORY[0x1D9447730](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_retain();
  uint64_t v11 = sub_1D4373634(a1);
  unint64_t v12 = (void *)swift_allocObject();
  void v12[2] = a1;
  v12[3] = sub_1D42E78C0;
  v12[4] = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D42DD324(v11, (uint64_t)sub_1D42C12EC, (uint64_t)v12);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1D428BDFC(uint64_t a1)
{
  sub_1D42D5DA0((uint64_t *)&unk_1EA6CA520);
  sub_1D446A0A8();
  uint64_t v2 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  if (MEMORY[0x1D9447840](v2))
  {
    uint64_t v3 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_1D42D5DA0(&qword_1EBD7D8C0);
    sub_1D446A0A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32))(a1, v10, ObjectType, v3);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  if (MEMORY[0x1D9447840](v2))
  {
    uint64_t v5 = *(void *)(v2 + 8);
    uint64_t v6 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 112))(a1, v11, v6, v5);
    swift_unknownObjectRelease();
  }
  if (MEMORY[0x1D9447840](v2))
  {
    uint64_t v7 = *(void *)(v2 + 8);
    uint64_t v8 = swift_getObjectType();
    sub_1D42D5DA0(&qword_1EA6CA4F0);
    sub_1D446A0A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 152))(a1, v10, v8, v7);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemCounts) = v11;
  swift_bridgeObjectRelease();
  return sub_1D4374EC8();
}

uint64_t sub_1D428C000(uint64_t a1, int a2)
{
  int v50 = a2;
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7CB80);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v47 = (void *)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  uint64_t v46 = (char *)&v42 - v6;
  uint64_t v7 = sub_1D42D5DA0(&qword_1EBD7CBC0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1D4469618();
  uint64_t v10 = *(void *)(v45 - 8);
  uint64_t v49 = *(void *)(v10 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v45);
  uint64_t v48 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v51 = (char *)&v42 - v13;
  sub_1D4469608();
  uint64_t v14 = (uint64_t *)(a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_tapContexts);
  swift_beginAccess();
  uint64_t v15 = *v14;
  uint64_t v16 = a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_selectedDevice;
  swift_beginAccess();
  sub_1D42A3A74(v16, (uint64_t)v9, &qword_1EBD7CBC0);
  long long v17 = *(_OWORD *)(a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_itemCounts);
  long long v42 = *(_OWORD *)(a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_itemCounts + 16);
  long long v43 = v17;
  uint64_t v18 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_itemCounts + 32);
  uint64_t v19 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_itemCounts + 40);
  char v20 = *(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_itemCounts + 48);
  type metadata accessor for FMIPRefreshClientRequest();
  uint64_t v21 = swift_allocObject();
  sub_1D42A3A74((uint64_t)v9, v21 + qword_1EBD83030, &qword_1EBD7CBC0);
  uint64_t v44 = v15;
  *(void *)(v21 + qword_1EBD83028) = v15;
  *(void *)(v21 + qword_1EBD83038) = 0;
  uint64_t v22 = v21 + qword_1EA6E4A68;
  long long v23 = v42;
  *(_OWORD *)uint64_t v22 = v43;
  *(_OWORD *)(v22 + 16) = v23;
  *(void *)(v22 + 32) = v18;
  *(void *)(v22 + 40) = v19;
  *(unsigned char *)(v22 + 48) = v20;
  swift_bridgeObjectRetain_n();
  *(void *)&long long v43 = sub_1D4332A24(0x4368736572666572, 0xED0000746E65696CLL, 0, 0, 1);
  sub_1D4276C3C((uint64_t)v9, &qword_1EBD7CBC0);
  uint64_t v24 = v10;
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v27 = v45;
  uint64_t v26 = (uint64_t)v46;
  uint64_t v28 = v51;
  v25(v46, v51, v45);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v26, 0, 1, v27);
  uint64_t v29 = v47;
  sub_1D4276C98(v26, (uint64_t)v47, &qword_1EBD7CB80);
  uint64_t v30 = a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_lastRefreshTime;
  swift_beginAccess();
  sub_1D42E82FC((uint64_t)v29, v30);
  swift_endAccess();
  uint64_t v31 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_interactionController + 24);
  uint64_t v46 = *(char **)(a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_interactionController + 32);
  uint64_t v47 = sub_1D42C26F4((void *)(a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_interactionController), v31);
  uint64_t v32 = swift_allocObject();
  swift_weakInit();
  uint64_t v33 = v48;
  v25(v48, v28, v27);
  unint64_t v34 = (*(unsigned __int8 *)(v24 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v35 = (v49 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v32;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v36 + v34, v33, v27);
  unint64_t v37 = v36 + v35;
  *(void *)unint64_t v37 = v44;
  *(unsigned char *)(v37 + 8) = v50;
  long long v38 = v46;
  long long v39 = (void (*)(void, uint64_t (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t, char *))*((void *)v46 + 7);
  uint64_t v40 = type metadata accessor for FMIPRefreshClientResponse();
  v39(v43, sub_1D440C76C, v36, v40, v31, v38);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v51, v27);
}

uint64_t sub_1D428C4D0(uint64_t *a1)
{
  if (*(unsigned char *)(v1 + 24) != 1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  if (*a1)
  {
    if (!*(void *)(v1 + 328)) {
      return 0;
    }
    swift_retain();
    uint64_t v8 = sub_1D427F510();
    swift_release();
    if (!v8) {
      return 0;
    }
    LOBYTE(v40) = 16;
    unint64_t v9 = sub_1D42C678C(v8, (char *)&v40);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(void *)(v2 + 80) = v9;
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v2 + 344);
    if (v10)
    {
      uint64_t v45 = 0;
      long long v43 = 0u;
      long long v44 = 0u;
      long long v41 = 0u;
      long long v42 = 0u;
      long long v40 = 0u;
      uint64_t v11 = *(NSObject **)(v10 + 16);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v10;
      *(void *)(v12 + 24) = &v40;
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = sub_1D42E3264;
      *(void *)(v13 + 24) = v12;
      aBlock[4] = sub_1D42AEE88;
      void aBlock[5] = v13;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1D42AEDE4;
      aBlock[3] = &unk_1F2C0CBE0;
      uint64_t v14 = _Block_copy(aBlock);
      swift_retain_n();
      swift_retain();
      swift_release();
      dispatch_sync(v11, v14);
      _Block_release(v14);
      LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
      uint64_t result = swift_release();
      if (v11)
      {
        __break(1u);
        return result;
      }
      long long v16 = v40;
      long long v17 = v41;
      long long v18 = v42;
      uint64_t v35 = *((void *)&v43 + 1);
      uint64_t v37 = v43;
      uint64_t v33 = *((void *)&v44 + 1);
      uint64_t v34 = v44;
      uint64_t v32 = v45;
      swift_release();
      swift_release();
      if (*((void *)&v16 + 1))
      {
        uint64_t v19 = *(void *)(v2 + 88);
        uint64_t v20 = *(void *)(v2 + 96);
        *(_OWORD *)(v2 + 88) = v16;
        *(_OWORD *)(v2 + 104) = v17;
        *(_OWORD *)(v2 + 120) = v18;
        *(void *)(v2 + 136) = v37;
        *(void *)(v2 + 144) = v35;
        *(void *)(v2 + 152) = v34;
        *(void *)(v2 + 160) = v33;
        *(void *)(v2 + 168) = v32;
        sub_1D42E7D9C(v19, v20);
      }
    }
    if (*(void *)(v2 + 336))
    {
      swift_retain();
      uint64_t v21 = sub_1D427F180();
      swift_release();
      if (v21)
      {
        *(void *)(v2 + 176) = v21;
        swift_bridgeObjectRelease();
      }
    }
  }
  if ((v3 & 2) != 0)
  {
    if (*(void *)(v2 + 312))
    {
      swift_retain();
      uint64_t v4 = sub_1D427E030();
      swift_release();
      if (v4)
      {
        LOBYTE(v40) = 16;
        unint64_t v5 = sub_1D439A5FC(v4, (unsigned __int8 *)&v40);
        swift_bridgeObjectRelease();
        swift_beginAccess();
        *(void *)(v2 + 280) = v5;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1D438EA98(v5);
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    return 0;
  }
LABEL_7:
  if ((v3 & 3) != 0)
  {
    if (*(void *)(v2 + 320))
    {
      swift_retain();
      uint64_t v6 = sub_1D4397F14();
      if (v6)
      {
        uint64_t v7 = v6;
      }
      else
      {
        uint64_t v7 = MEMORY[0x1E4FBC860];
        sub_1D428ABC4(MEMORY[0x1E4FBC860], (uint64_t)&unk_1F2C0CA10, (uint64_t)sub_1D439EB88, (uint64_t)&unk_1F2C0CA28);
      }
      swift_release();
      *(void *)(v2 + 288) = v7;
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v2 + 352))
    {
      uint64_t v22 = qword_1EA6C8FB8;
      swift_retain();
      if (v22 != -1) {
        swift_once();
      }
      long long v40 = xmmword_1EA6CA3B0;
      long long v41 = *(_OWORD *)&qword_1EA6CA3C0;
      uint64_t v23 = qword_1EA6CA3D0;
      *(void *)&long long v42 = qword_1EA6CA3D0;
      uint64_t v25 = *((void *)&xmmword_1EA6CA3B0 + 1);
      uint64_t v24 = xmmword_1EA6CA3B0;
      uint64_t v27 = unk_1EA6CA3C8;
      uint64_t v26 = qword_1EA6CA3C0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D4397D84((uint64_t)v46);
      uint64_t v28 = v46[0];
      uint64_t v29 = v46[1];
      uint64_t v30 = v46[2];
      uint64_t v36 = v46[4];
      uint64_t v38 = v46[3];
      sub_1D4276C98((uint64_t)v46, (uint64_t)aBlock, &qword_1EA6CA598);
      if (aBlock[0])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v24 = v28;
        uint64_t v25 = v29;
        uint64_t v26 = v30;
        uint64_t v23 = v36;
        uint64_t v27 = v38;
      }
      else
      {
        sub_1D43949B0(&v40);
        swift_release();
      }
      *(void *)(v2 + 240) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v2 + 248) = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v2 + 256) = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v2 + 264) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v2 + 272) = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v31 = swift_bridgeObjectRetain();
    sub_1D438F7F4(v31);
    swift_bridgeObjectRelease();
  }
  return 1;
}

void *sub_1D428CAC8(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v19 = a2;
  uint64_t v20 = a1;
  uint64_t v18 = sub_1D446A088();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D446A068();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1D44699B8();
  MEMORY[0x1F4188790](v8 - 8);
  v2[2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F97C08]), sel_init);
  v2[5] = 0;
  sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7E860);
  sub_1D4469988();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_1D42DDAD4((unint64_t *)&qword_1EBD7FDB0, MEMORY[0x1E4FBCC10]);
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FDA0, (uint64_t *)&unk_1EBD7FD90);
  sub_1D446A1F8();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCC58], v18);
  uint64_t v9 = v19;
  v2[6] = sub_1D446A0C8();
  v2[7] = MEMORY[0x1E4FBC860];
  uint64_t v10 = v20;
  v2[3] = v20;
  v2[4] = v9;
  uint64_t v11 = qword_1EBD80068;
  id v12 = v10;
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1D4469928();
  sub_1D42D7FAC(v13, (uint64_t)qword_1EBD83228);
  uint64_t v14 = sub_1D44698F8();
  os_log_type_t v15 = sub_1D446A038();
  if (os_log_type_enabled(v14, v15))
  {
    long long v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v16 = 0;
    _os_log_impl(&dword_1D4271000, v14, v15, "FMIPItemActionsController: initialized", v16, 2u);
    MEMORY[0x1D9447730](v16, -1, -1);
  }

  swift_release();
  return v3;
}

uint64_t sub_1D428CE28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v24 = a1;
  uint64_t v23 = sub_1D44699B8();
  uint64_t v5 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D4469958();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = MEMORY[0x1F4188790](v8);
  id v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(*(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration)
                 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems) & 1) != 0)
  {
    uint64_t v13 = a2;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1D4469928();
    sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
    os_log_type_t v15 = sub_1D44698F8();
    os_log_type_t v16 = sub_1D446A038();
    if (os_log_type_enabled(v15, v16))
    {
      long long v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = v9;
      uint64_t v18 = v17;
      *(_WORD *)long long v17 = 0;
      _os_log_impl(&dword_1D4271000, v15, v16, "FMIPManager: dataManager updated device", v17, 2u);
      uint64_t v9 = v22;
      MEMORY[0x1D9447730](v18, -1, -1);
    }

    sub_1D4469948();
    uint64_t v19 = (void *)swift_allocObject();
    void v19[2] = v3;
    v19[3] = v13;
    v19[4] = v24;
    aBlock[4] = sub_1D42E7AD8;
    void aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D42BD950;
    aBlock[3] = &unk_1F2C0B950;
    uint64_t v20 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1D4469988();
    MEMORY[0x1D9446420](0, v7, v12, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return swift_release();
  }
  return result;
}

void sub_1D428D164(uint64_t a1, id a2)
{
  uint64_t v3 = v2;
  if (a2)
  {
    id v6 = a2;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1D4469928();
    sub_1D42D7FAC(v7, (uint64_t)qword_1EBD83228);
    id v8 = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    id v9 = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1D44698F8();
    os_log_type_t v11 = sub_1D446A038();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446722;
      v56[0] = v13;
      sub_1D42D5DA0(&qword_1EA6CA338);
      uint64_t v14 = sub_1D4469B68();
      sub_1D42CB9EC(v14, v15, v56);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2048;
      swift_bridgeObjectRelease();
      sub_1D446A188();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 22) = 2080;
      swift_getErrorValue();
      uint64_t v16 = sub_1D446A7D8();
      sub_1D42CB9EC(v16, v17, v56);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v10, v11, "%{public}s: received %ld items (error=%s)", (uint8_t *)v12, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v13, -1, -1);
      MEMORY[0x1D9447730](v12, -1, -1);
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v31 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration)
                    + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_snapshotHandlers);
    if (v31)
    {
      uint64_t v32 = *(void (**)(uint64_t, void, void, id))(v31 + 64);
      if (v32)
      {
        id v33 = a2;
        sub_1D42972D4((uint64_t)v32);
        v32(v2, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], a2);

        sub_1D42E2C6C((uint64_t)v32);
      }
    }

    return;
  }
  uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration);
  uint64_t v19 = OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_snapshotHandlers;
  uint64_t v20 = *(void *)(v18 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_snapshotHandlers);
  if (v20)
  {
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 48);
    if (v21)
    {
      swift_retain();
      uint64_t v22 = v21(v2, a1);
      uint64_t v23 = sub_1D4373EB0(v22);
      swift_bridgeObjectRelease();
      unint64_t v24 = sub_1D4373830(v23);
      swift_bridgeObjectRelease();
      if (*(void *)(v24 + 16))
      {
        if (qword_1EBD80068 != -1) {
          swift_once();
        }
        uint64_t v25 = sub_1D4469928();
        sub_1D42D7FAC(v25, (uint64_t)qword_1EBD83228);
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v26 = sub_1D44698F8();
        os_log_type_t v27 = sub_1D446A038();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = swift_slowAlloc();
          uint64_t v54 = swift_slowAlloc();
          *(_DWORD *)uint64_t v28 = 136446722;
          v56[0] = v54;
          sub_1D42D5DA0(&qword_1EA6CA338);
          uint64_t v29 = sub_1D4469B68();
          sub_1D42CB9EC(v29, v30, v56);
          sub_1D446A188();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v28 + 12) = 2048;
          swift_bridgeObjectRelease();
          sub_1D446A188();
          swift_bridgeObjectRelease();
          *(_WORD *)(v28 + 22) = 2048;
          swift_bridgeObjectRelease();
          sub_1D446A188();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D4271000, v26, v27, "🥑 %{public}s: received %ld items but asking for %ld locations…", (uint8_t *)v28, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1D9447730](v54, -1, -1);
          MEMORY[0x1D9447730](v28, -1, -1);
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        swift_retain();
        uint64_t v52 = sub_1D4351BC8(v24);
        swift_bridgeObjectRelease();
        unint64_t v53 = sub_1D42E2C58(MEMORY[0x1E4FBC860]);
        LOBYTE(v56[0]) = 1;
        v56[1] = 2;
        v56[2] = v52;
        v56[3] = v53;
        char v57 = 1;
        sub_1D4444854((uint64_t)v56);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_1D4469928();
      sub_1D42D7FAC(v44, (uint64_t)qword_1EBD83228);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v45 = sub_1D44698F8();
      os_log_type_t v46 = sub_1D446A038();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = swift_slowAlloc();
        uint64_t v55 = v18;
        uint64_t v48 = swift_slowAlloc();
        *(_DWORD *)uint64_t v47 = 136446466;
        v56[0] = v48;
        sub_1D42D5DA0(&qword_1EA6CA338);
        uint64_t v49 = sub_1D4469B68();
        sub_1D42CB9EC(v49, v50, v56);
        sub_1D446A188();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 12) = 2048;
        swift_bridgeObjectRelease();
        sub_1D446A188();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D4271000, v45, v46, "%{public}s: received %ld items but no location asked", (uint8_t *)v47, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v48, -1, -1);
        MEMORY[0x1D9447730](v47, -1, -1);

        uint64_t v51 = *(void *)(v55 + v19);
        if (!v51) {
          goto LABEL_34;
        }
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
        uint64_t v51 = *(void *)(v18 + v19);
        if (!v51) {
          goto LABEL_34;
        }
      }
      long long v42 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v51 + 64);
      if (v42)
      {
        swift_retain();
        v42(v3, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], 0);
        sub_1D42E2C6C((uint64_t)v21);
        goto LABEL_26;
      }
LABEL_34:
      uint64_t v43 = (uint64_t)v21;
      goto LABEL_35;
    }
  }
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1D4469928();
  sub_1D42D7FAC(v34, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v35 = sub_1D44698F8();
  os_log_type_t v36 = sub_1D446A038();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136446466;
    v56[0] = v38;
    sub_1D42D5DA0(&qword_1EA6CA338);
    uint64_t v39 = sub_1D4469B68();
    sub_1D42CB9EC(v39, v40, v56);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2048;
    swift_bridgeObjectRelease();
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v35, v36, "%{public}s: received %ld items", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v38, -1, -1);
    MEMORY[0x1D9447730](v37, -1, -1);

    uint64_t v41 = *(void *)(v18 + v19);
    if (!v41) {
      return;
    }
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    uint64_t v41 = *(void *)(v18 + v19);
    if (!v41) {
      return;
    }
  }
  long long v42 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v41 + 64);
  if (v42)
  {
    swift_retain();
    v42(v3, a1, a1, 0);
LABEL_26:
    uint64_t v43 = (uint64_t)v42;
LABEL_35:
    sub_1D42E2C6C(v43);
  }
}

uint64_t sub_1D428DC80(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D44699B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D4469958();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  os_log_type_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D4469928();
  sub_1D42D7FAC(v12, (uint64_t)qword_1EBD83228);
  uint64_t v13 = sub_1D44698F8();
  os_log_type_t v14 = sub_1D446A038();
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = v2;
    uint64_t v16 = v7;
    uint64_t v17 = v9;
    uint64_t v18 = v5;
    uint64_t v19 = v8;
    uint64_t v20 = a1;
    uint64_t v21 = v4;
    uint64_t v22 = v15;
    *(_WORD *)unint64_t v15 = 0;
    _os_log_impl(&dword_1D4271000, v13, v14, "FMIPManager: didReceiveDevices", v15, 2u);
    uint64_t v23 = v22;
    uint64_t v4 = v21;
    a1 = v20;
    uint64_t v8 = v19;
    uint64_t v5 = v18;
    uint64_t v9 = v17;
    uint64_t v7 = v16;
    uint64_t v2 = v30;
    MEMORY[0x1D9447730](v23, -1, -1);
  }

  if (*(void *)(*(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_connectionStateProvider) + 16)) {
    unint64_t v24 = *(void **)(*(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_connectionStateProvider) + 16);
  }
  else {
    unint64_t v24 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1D42C9D88(a1, v24);
  swift_bridgeObjectRelease();
  sub_1D4469948();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v2;
  *(void *)(v26 + 24) = v25;
  aBlock[4] = sub_1D42E7948;
  void aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0C328;
  os_log_type_t v27 = _Block_copy(aBlock);
  swift_retain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v7, v11, v27);
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_1D428DFD8()
{
  uint64_t v1 = v0;
  *(void *)(v0 + 16) = 0xD00000000000001FLL;
  *(void *)(v0 + 24) = 0x80000001D4481BD0;
  *(void *)(v0 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F179C8]), sel_init);
  *(unsigned char *)(v0 + 40) = 0;
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0;
  swift_unknownObjectWeakInit();
  sub_1D42D5DA0(&qword_1EBD80060);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1D446E050;
  if (qword_1EBD7E680 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)algn_1EBD831C8;
  *(void *)(v2 + 32) = qword_1EBD831C0;
  *(void *)(v2 + 40) = v3;
  *(void *)(v1 + 80) = v2;
  uint64_t v4 = qword_1EBD80068;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D4469928();
  sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
  uint64_t v6 = sub_1D44698F8();
  os_log_type_t v7 = sub_1D446A038();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D4271000, v6, v7, "FMIPGarbageCollector: initialized", v8, 2u);
    MEMORY[0x1D9447730](v8, -1, -1);
  }

  sub_1D429F4E8();
  id v9 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v9, sel_addObserver_selector_name_object_, v1, sel_scheduleAccountVerificationWithNotification_, *MEMORY[0x1E4F17728], 0);

  return v1;
}

uint64_t sub_1D428E1D0(void *a1)
{
  uint64_t v59 = sub_1D42D5DA0(&qword_1EBD7D9D0);
  uint64_t v58 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D4469928();
  sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
  uint64_t v6 = sub_1D44698F8();
  os_log_type_t v7 = sub_1D446A038();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D4271000, v6, v7, "FMIPUserInfoResponseFragment: initialized with coder", v8, 2u);
    MEMORY[0x1D9447730](v8, -1, -1);
  }

  sub_1D42C26F4(a1, a1[3]);
  sub_1D42E3B5C();
  sub_1D446A8C8();
  if (v1)
  {
    uint64_t v62 = v1;
    type metadata accessor for FMIPUserInfoResponseFragment();
    uint64_t v9 = v66;
    swift_deallocPartialClassInstance();
LABEL_8:
    sub_1D42BEC64((uint64_t)a1);
    return v9;
  }
  sub_1D42A4D5C((uint64_t)a1, (uint64_t)v75);
  FMIPPerson.init(from:)(v75, (uint64_t)v76);
  uint64_t v57 = v76[0];
  uint64_t v56 = v76[1];
  uint64_t v55 = v76[2];
  uint64_t v54 = v76[3];
  int v53 = v77;
  int v52 = v78;
  int v51 = v79;
  int v50 = v80;
  uint64_t v49 = v81;
  uint64_t v48 = v82;
  uint64_t v47 = v83;
  uint64_t v46 = v84;
  uint64_t v45 = v85;
  uint64_t v44 = v86;
  os_log_type_t v11 = sub_1D44698F8();
  os_log_type_t v12 = sub_1D446A038();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1D4271000, v11, v12, "FMIPUserInfoResponseFragment: parsing family members", v13, 2u);
    MEMORY[0x1D9447730](v13, -1, -1);
  }

  sub_1D42D5DA0(&qword_1EBD7D8A8);
  sub_1D42E2558();
  uint64_t result = sub_1D446A5D8();
  uint64_t v62 = 0;
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(v76[0] + 64);
  uint64_t v60 = v76[0] + 64;
  uint64_t v65 = v76[0];
  uint64_t v16 = 1 << *(unsigned char *)(v76[0] + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v61 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v64 = a1;
  int64_t v63 = v4;
  if ((v17 & v15) == 0) {
    goto LABEL_15;
  }
LABEL_14:
  unint64_t v20 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  int64_t v87 = v14;
  for (unint64_t i = v20 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    uint64_t v26 = *(void *)(v65 + 56);
    os_log_type_t v27 = (uint64_t *)(*(void *)(v65 + 48) + 16 * i);
    uint64_t v28 = v27[1];
    uint64_t v74 = *v27;
    uint64_t v29 = (uint64_t *)(v26 + 88 * i);
    uint64_t v30 = *v29;
    uint64_t v31 = v29[1];
    uint64_t v32 = v29[3];
    uint64_t v72 = v29[2];
    LODWORD(v26) = *((unsigned __int8 *)v29 + 32);
    int v70 = *((unsigned __int8 *)v29 + 33);
    int v71 = v26;
    LODWORD(v26) = *((unsigned __int8 *)v29 + 34);
    int v68 = *((unsigned __int8 *)v29 + 35);
    int v69 = v26;
    uint64_t v33 = v29[6];
    uint64_t v67 = v29[5];
    uint64_t v34 = v29[10];
    uint64_t v73 = v29[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1D43B0770(0, v19[2] + 1, 1, v19);
      uint64_t v19 = (void *)result;
    }
    unint64_t v36 = v19[2];
    unint64_t v35 = v19[3];
    uint64_t v37 = v19;
    if (v36 >= v35 >> 1)
    {
      uint64_t result = (uint64_t)sub_1D43B0770((void *)(v35 > 1), v36 + 1, 1, v19);
      uint64_t v37 = (void *)result;
    }
    v37[2] = v36 + 1;
    uint64_t v19 = v37;
    uint64_t v38 = &v37[11 * v36];
    v38[4] = v30;
    v38[5] = v31;
    v38[6] = v72;
    v38[7] = v32;
    *((unsigned char *)v38 + 64) = v71;
    *((unsigned char *)v38 + 65) = v70;
    *((unsigned char *)v38 + 66) = v69;
    *((unsigned char *)v38 + 67) = v68;
    v38[9] = v67;
    v38[10] = v33;
    v38[11] = v74;
    v38[12] = v28;
    v38[13] = v73;
    v38[14] = v34;
    a1 = v64;
    uint64_t v4 = v63;
    int64_t v14 = v87;
    if (v18) {
      goto LABEL_14;
    }
LABEL_15:
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v22 >= v61)
    {
      swift_release();
      uint64_t v9 = v66;
LABEL_37:
      (*(void (**)(char *, uint64_t))(v58 + 8))(v4, v59);
      uint64_t v39 = v56;
      *(void *)(v9 + 16) = v57;
      *(void *)(v9 + 24) = v39;
      uint64_t v40 = v54;
      *(void *)(v9 + 32) = v55;
      *(void *)(v9 + 40) = v40;
      *(unsigned char *)(v9 + 48) = v53;
      *(unsigned char *)(v9 + 49) = v52;
      *(unsigned char *)(v9 + 50) = v51;
      *(unsigned char *)(v9 + 51) = v50;
      uint64_t v41 = v48;
      *(void *)(v9 + 56) = v49;
      *(void *)(v9 + 64) = v41;
      uint64_t v42 = v46;
      *(void *)(v9 + 72) = v47;
      *(void *)(v9 + 80) = v42;
      uint64_t v43 = v44;
      *(void *)(v9 + 88) = v45;
      *(void *)(v9 + 96) = v43;
      *(void *)(v9 + 104) = v19;
      goto LABEL_8;
    }
    unint64_t v23 = *(void *)(v60 + 8 * v22);
    int64_t v24 = v14 + 1;
    uint64_t v9 = v66;
    if (!v23)
    {
      int64_t v24 = v22 + 1;
      if (v22 + 1 >= v61) {
        goto LABEL_36;
      }
      unint64_t v23 = *(void *)(v60 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v22 + 2;
        if (v22 + 2 >= v61) {
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v60 + 8 * v24);
        if (!v23) {
          break;
        }
      }
    }
LABEL_28:
    unint64_t v18 = (v23 - 1) & v23;
    int64_t v87 = v24;
  }
  int64_t v25 = v22 + 3;
  if (v25 >= v61)
  {
LABEL_36:
    swift_release();
    goto LABEL_37;
  }
  unint64_t v23 = *(void *)(v60 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v25;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v61) {
      goto LABEL_36;
    }
    unint64_t v23 = *(void *)(v60 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_28;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1D428E964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v7 = sub_1D44698F8();
  os_log_type_t v8 = sub_1D446A038();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    if (a2) {
      uint64_t v11 = 1702195828;
    }
    else {
      uint64_t v11 = 0x65736C6166;
    }
    if (a2) {
      unint64_t v12 = 0xE400000000000000;
    }
    else {
      unint64_t v12 = 0xE500000000000000;
    }
    sub_1D42CB9EC(v11, v12, &v15);
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    if (a4) {
      uint64_t v13 = 1702195828;
    }
    else {
      uint64_t v13 = 0x65736C6166;
    }
    if (a4) {
      unint64_t v14 = 0xE400000000000000;
    }
    else {
      unint64_t v14 = 0xE500000000000000;
    }
    sub_1D42CB9EC(v13, v14, &v15);
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v7, v8, "FMIPRefreshingController: connectionHandler didReceive topicToken: %s publicToken: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v10, -1, -1);
    MEMORY[0x1D9447730](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1D428EBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4469958();
  uint64_t v21 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  os_log_type_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1D44699B8();
  uint64_t v9 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D4469928();
  sub_1D42D7FAC(v12, (uint64_t)qword_1EBD83228);
  sub_1D42972D4(a1);
  uint64_t v13 = sub_1D44698F8();
  os_log_type_t v14 = sub_1D446A038();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 67109120;
    LODWORD(aBlock[0]) = a1 == 0;
    sub_1D446A188();
    sub_1D42E2C6C(a1);
    _os_log_impl(&dword_1D4271000, v13, v14, "FMIPBeaconRefreshingController: Refreshing unknown beacons isCompletionNil? %{BOOL}d", v15, 8u);
    MEMORY[0x1D9447730](v15, -1, -1);
  }
  else
  {
    sub_1D42E2C6C(a1);
  }

  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a3;
  uint64_t v16[3] = a1;
  v16[4] = a2;
  aBlock[4] = sub_1D42E3778;
  void aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C12D68;
  uint64_t v17 = _Block_copy(aBlock);
  sub_1D42972D4(a1);
  swift_retain();
  sub_1D4469988();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1D444A534((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v11, v8, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v20);
  return swift_release();
}

uint64_t sub_1D428EFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469958();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = sub_1D44699B8();
  uint64_t v8 = *(void *)(v18[0] - 8);
  MEMORY[0x1F4188790](v18[0]);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1D4469928();
  sub_1D42D7FAC(v11, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1D44698F8();
  os_log_type_t v13 = sub_1D446A038();
  if (os_log_type_enabled(v12, v13))
  {
    os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v14 = 134217984;
    aBlock[0] = *(void *)(a1 + 16);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v12, v13, "FMIPBeaconRefreshingController: locations %ld refreshed", v14, 0xCu);
    MEMORY[0x1D9447730](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  aBlock[4] = sub_1D42E3790;
  void aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C12778;
  uint64_t v16 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D4469988();
  v18[1] = MEMORY[0x1E4FBC860];
  sub_1D444A534((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v10, v7, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void))(v8 + 8))(v10, v18[0]);
  return swift_release();
}

uint64_t sub_1D428F370(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = a3;
  uint64_t v43 = a4;
  uint64_t v44 = a2;
  uint64_t v5 = type metadata accessor for FMIPUnknownItem();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v42 - v11;
  MEMORY[0x1F4188790](v10);
  int v50 = (char *)&v42 - v13;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D4469928();
  uint64_t v15 = sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  uint64_t v53 = v15;
  uint64_t v16 = sub_1D44698F8();
  os_log_type_t v17 = sub_1D446A038();
  if (os_log_type_enabled(v16, v17))
  {
    unint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v18 = 138412290;
    uint64_t v55 = v18 + 4;
    sub_1D4275AD0(0, &qword_1EA6CA380);
    uint64_t v20 = v12;
    uint64_t v21 = sub_1D4469D58();
    uint64_t v57 = v21;
    sub_1D446A188();
    *uint64_t v19 = v21;
    uint64_t v12 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v16, v17, "FMIPBeaconRefreshingController: unknown beacon received %@", v18, 0xCu);
    sub_1D42D5DA0(&qword_1EBD7E830);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v19, -1, -1);
    MEMORY[0x1D9447730](v18, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  *(void *)(v44 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_unknownBeacons) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t)v50;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1D446A498();
    uint64_t v23 = result;
    if (result) {
      goto LABEL_8;
    }
LABEL_22:
    uint64_t v27 = MEMORY[0x1E4FBC860];
    goto LABEL_23;
  }
  uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v23) {
    goto LABEL_22;
  }
LABEL_8:
  if (v23 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v26 = 0;
  unint64_t v51 = a1 & 0xC000000000000001;
  uint64_t v47 = &v57;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  *(void *)&long long v25 = 136315138;
  long long v46 = v25;
  uint64_t v45 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v52 = v23;
  uint64_t v48 = v6;
  unint64_t v49 = a1;
  do
  {
    if (v51) {
      id v28 = (id)MEMORY[0x1D9446710](v26, a1);
    }
    else {
      id v28 = *(id *)(a1 + 8 * v26 + 32);
    }
    id v29 = v28;
    FMIPUnknownItem.init(with:)(v29, v22);
    sub_1D444DAF8(v22, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v54 = v29;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v27 = sub_1D43B03C0(0, *(void *)(v27 + 16) + 1, 1, v27);
    }
    unint64_t v32 = *(void *)(v27 + 16);
    unint64_t v31 = *(void *)(v27 + 24);
    if (v32 >= v31 >> 1) {
      uint64_t v27 = sub_1D43B03C0(v31 > 1, v32 + 1, 1, v27);
    }
    *(void *)(v27 + 16) = v32 + 1;
    unint64_t v33 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v55 = (uint8_t *)v27;
    sub_1D444E76C((uint64_t)v12, v27 + v33 + *(void *)(v6 + 72) * v32, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D444DAF8(v22, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v34 = sub_1D44698F8();
    os_log_type_t v35 = sub_1D446A038();
    if (os_log_type_enabled(v34, v35))
    {
      unint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v57 = v37;
      *(_DWORD *)unint64_t v36 = v46;
      uint64_t v38 = FMIPUnknownItem.debugDescription.getter();
      uint64_t v56 = sub_1D42CB9EC(v38, v39, &v57);
      uint64_t v22 = (uint64_t)v50;
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D444DB60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
      _os_log_impl(&dword_1D4271000, v34, v35, "FMIPBeaconRefreshingController: FMIPUnknown item created %s", v36, 0xCu);
      swift_arrayDestroy();
      uint64_t v40 = v37;
      uint64_t v6 = v48;
      MEMORY[0x1D9447730](v40, -1, -1);
      uint64_t v41 = v36;
      a1 = v49;
      MEMORY[0x1D9447730](v41, -1, -1);
    }
    else
    {

      sub_1D444DB60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    }
    sub_1D444DB60(v22, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    ++v26;
    uint64_t v27 = (uint64_t)v55;
  }
  while (v52 != v26);
LABEL_23:
  swift_bridgeObjectRelease();
  if (!MEMORY[0x1D9447840](v44 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_delegate)) {
    return swift_bridgeObjectRelease();
  }
  sub_1D4293434(v27, v42, v43);
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1D428F984(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D4469958();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D44699B8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  uint64_t v29 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v27 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = *a1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D4469928();
  sub_1D42D7FAC(v12, (uint64_t)qword_1EBD83228);
  uint64_t v13 = sub_1D44698F8();
  os_log_type_t v14 = sub_1D446A038();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v26 = v5;
    uint64_t v17 = v16;
    long long v25 = v7;
    *(_DWORD *)uint64_t v15 = 136315138;
    aBlock[0] = v16;
    if (v11) {
      uint64_t v18 = 0x64656C6261736964;
    }
    else {
      uint64_t v18 = 0x64656C62616E65;
    }
    if (v11) {
      unint64_t v19 = 0xE800000000000000;
    }
    else {
      unint64_t v19 = 0xE700000000000000;
    }
    uint64_t v30 = sub_1D42CB9EC(v18, v19, aBlock);
    uint64_t v7 = v25;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v13, v14, "FMIPManager: didReceive UT alert state: %s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v20 = v17;
    uint64_t v5 = v26;
    MEMORY[0x1D9447730](v20, -1, -1);
    MEMORY[0x1D9447730](v15, -1, -1);
  }

  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v2;
  *(unsigned char *)(v21 + 24) = v11;
  aBlock[4] = (uint64_t)sub_1D42E7874;
  void aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D42BD950;
  aBlock[3] = (uint64_t)&unk_1F2C0C558;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v23 = v27;
  sub_1D4469988();
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v23, v7, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v28);
  return swift_release();
}

void FMIPLocation.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6CAA90);
  uint64_t v15 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v7 = *(unsigned __int8 *)(v1 + 1);
  int v13 = *(unsigned __int8 *)(v1 + 2);
  int v14 = v7;
  int v12 = *(unsigned __int8 *)(v1 + 3);
  uint64_t v8 = *(void **)(v1 + 8);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42D8CE8();
  sub_1D446A8E8();
  id v9 = objc_msgSend(v8, sel_timestamp);
  if (v9)
  {
    uint64_t v10 = v9;
    char v27 = 5;
    sub_1D446A668();
    if (!v2)
    {
      char v26 = 3;
      sub_1D446A668();
      char v25 = 4;
      sub_1D446A668();
      char v24 = v12;
      FMIPLocationType.rawValue.getter();
      char v23 = 9;
      sub_1D446A658();
      swift_bridgeObjectRelease();
      char v22 = 1;
      sub_1D446A678();
      objc_msgSend(v8, sel_altitude);
      char v21 = 0;
      sub_1D446A678();
      objc_msgSend(v8, sel_coordinate);
      char v20 = 6;
      sub_1D446A678();
      objc_msgSend(v8, sel_coordinate);
      char v19 = 8;
      sub_1D446A678();
      objc_msgSend(v8, sel_horizontalAccuracy);
      char v18 = 2;
      sub_1D446A678();
      objc_msgSend(v8, sel_verticalAccuracy);
      char v17 = 11;
      sub_1D446A678();
      objc_msgSend(v10, sel_fm_epoch);
      char v16 = 10;
      sub_1D446A6A8();
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v4);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D4290184@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = &v43[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  int v12 = &v43[-v11];
  sub_1D42A789C(a2, v49);
  sub_1D4276C98((uint64_t)v49, (uint64_t)v50, &qword_1EBD7CC10);
  sub_1D4276C98((uint64_t)v50, (uint64_t)v51, &qword_1EBD7CC10);
  if (sub_1D42FE02C((uint64_t)v51) != 1)
  {
    sub_1D4276C98((uint64_t)v50, (uint64_t)v48, &qword_1EBD7CC10);
    memcpy(a3, v48, 0x120uLL);
    return nullsub_1(a3);
  }
  uint64_t v47 = (uint64_t)a3;
  uint64_t v13 = sub_1D42A9D18();
  uint64_t v15 = v14;
  uint64_t v16 = a1 + qword_1EA6CB208;
  swift_beginAccess();
  if (!*(void *)(*(void *)v16 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  sub_1D42C4FCC(v13, v15);
  char v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
LABEL_10:
    if (qword_1EA6C8F58 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1D4469928();
    sub_1D42D7FAC(v29, (uint64_t)qword_1EA6E46D0);
    sub_1D42E510C((uint64_t)a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    swift_retain_n();
    uint64_t v30 = sub_1D44698F8();
    os_log_type_t v31 = sub_1D446A038();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v46 = v3;
      uint64_t v34 = v33;
      uint64_t v45 = swift_slowAlloc();
      *(void *)&v49[0] = v45;
      *(_DWORD *)uint64_t v34 = 136315394;
      int v44 = v32;
      uint64_t v35 = sub_1D446A918();
      uint64_t v52 = sub_1D42CB9EC(v35, v36, (uint64_t *)v49);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      uint64_t v37 = FMReverseGeocodingRequest.debugDescription.getter();
      uint64_t v52 = sub_1D42CB9EC(v37, v38, (uint64_t *)v49);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D42E4588((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      _os_log_impl(&dword_1D4271000, v30, (os_log_type_t)v44, "%s: Loading new address for %s", (uint8_t *)v34, 0x16u);
      uint64_t v39 = v45;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v39, -1, -1);
      MEMORY[0x1D9447730](v34, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_1D42E4588((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    }

    uint64_t v40 = v47;
    sub_1D427FBFC((uint64_t)a2, 0, 0, 0);
    sub_1D42FB494(v49);
    uint64_t v41 = v40;
    return sub_1D4276C98((uint64_t)v49, v41, &qword_1EBD7CC10);
  }
  uint64_t v46 = v3;
  if (qword_1EA6C8F58 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1D4469928();
  sub_1D42D7FAC(v19, (uint64_t)qword_1EA6E46D0);
  sub_1D42E510C((uint64_t)a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  swift_retain_n();
  char v20 = sub_1D44698F8();
  os_log_type_t v21 = sub_1D446A038();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    *(void *)&v49[0] = v45;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v23 = sub_1D446A918();
    uint64_t v52 = sub_1D42CB9EC(v23, v24, (uint64_t *)v49);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v25 = FMReverseGeocodingRequest.debugDescription.getter();
    uint64_t v52 = sub_1D42CB9EC(v25, v26, (uint64_t *)v49);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42E4588((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    _os_log_impl(&dword_1D4271000, v20, v21, "%s: Already loading address for same geohash as %s, ignoring.", (uint8_t *)v22, 0x16u);
    uint64_t v27 = v45;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v27, -1, -1);
    MEMORY[0x1D9447730](v22, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_1D42E4588((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  }

  uint64_t v42 = v47;
  sub_1D42FB494(v49);
  uint64_t v41 = v42;
  return sub_1D4276C98((uint64_t)v49, v41, &qword_1EBD7CC10);
}

void sub_1D42907E4(void *a1)
{
}

void FMIPAudioChannel.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6C9AF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[16];
  int v13 = v1[17];
  v10[3] = v1[18];
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v7);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42A67EC();
  sub_1D446A8E8();
  char v17 = 0;
  uint64_t v8 = v12;
  sub_1D446A658();
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    id v9 = v11;
    char v16 = 1;
    sub_1D446A668();
    objc_msgSend(v9, sel_integerValue);
    char v15 = 2;
    sub_1D446A688();
    char v14 = 3;
    sub_1D446A668();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1D4290A2C(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v74[2] = *(_OWORD *)(a1 + 32);
  v74[3] = v2;
  v74[4] = *(_OWORD *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v75 = v3;
  long long v5 = *(_OWORD *)(a1 + 16);
  v74[0] = *(_OWORD *)a1;
  v74[1] = v5;
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v14 = 256;
  if (!*(unsigned char *)(a1 + 33)) {
    uint64_t v14 = 0;
  }
  uint64_t v15 = v14 | *(unsigned __int8 *)(a1 + 32);
  uint64_t v16 = 0x10000;
  if (!*(unsigned char *)(a1 + 34)) {
    uint64_t v16 = 0;
  }
  uint64_t v17 = 0x1000000;
  if (!*(unsigned char *)(a1 + 35)) {
    uint64_t v17 = 0;
  }
  uint64_t v18 = v15 | v16 | v17;
  uint64_t v20 = *(void *)(v1 + 88);
  uint64_t v19 = *(void *)(v1 + 96);
  uint64_t v21 = *(void *)(v1 + 104);
  uint64_t v22 = *(void *)(v1 + 112);
  uint64_t v24 = *(void *)(v1 + 120);
  uint64_t v23 = *(void *)(v1 + 128);
  uint64_t v26 = *(void *)(v1 + 136);
  uint64_t v25 = *(void *)(v1 + 144);
  uint64_t v28 = *(void *)(v1 + 152);
  uint64_t v27 = *(void *)(v1 + 160);
  uint64_t v29 = *(void *)(v1 + 168);
  v73[0] = v6;
  v73[1] = v7;
  v73[2] = v8;
  v73[3] = v9;
  v73[4] = v18;
  v73[5] = v10;
  v73[6] = v11;
  v73[7] = v12;
  v73[8] = v13;
  v73[9] = v4;
  uint64_t v49 = v3;
  uint64_t v50 = v10;
  v73[10] = v3;
  uint64_t v46 = v6;
  uint64_t v45 = v9;
  uint64_t v47 = v4;
  uint64_t v48 = v12;
  uint64_t v44 = v18;
  if (v19)
  {
    uint64_t v51 = v20;
    uint64_t v52 = v19;
    uint64_t v53 = v21;
    uint64_t v54 = v22;
    LOWORD(v55) = v24 & 0x101;
    BYTE2(v55) = BYTE2(v24) & 1;
    BYTE3(v55) = BYTE3(v24) & 1;
    uint64_t v56 = v23;
    uint64_t v57 = v26;
    uint64_t v58 = v25;
    uint64_t v59 = v28;
    uint64_t v60 = v27;
    uint64_t v61 = v29;
    sub_1D4290D4C((uint64_t)v74);
    sub_1D4290D4C((uint64_t)v74);
    char v30 = _s8FMIPCore10FMIPPersonV2eeoiySbAC_ACtFZ_0((uint64_t)v73, (uint64_t)&v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D4277E80((uint64_t)v74);
    if (v30) {
      return 0;
    }
  }
  else
  {
    uint64_t v42 = v25;
    uint64_t v43 = v8;
    uint64_t v32 = v6;
    uint64_t v40 = v27;
    uint64_t v41 = v29;
    uint64_t v38 = v26;
    uint64_t v39 = v28;
    uint64_t v36 = v22;
    uint64_t v37 = v23;
    uint64_t v35 = v21;
    sub_1D4290D4C((uint64_t)v74);
    sub_1D4290D4C((uint64_t)v74);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = v32;
    uint64_t v52 = v7;
    uint64_t v8 = v43;
    uint64_t v53 = v43;
    uint64_t v54 = v9;
    uint64_t v55 = v18;
    uint64_t v56 = v50;
    uint64_t v57 = v11;
    uint64_t v58 = v48;
    uint64_t v59 = v13;
    uint64_t v60 = v47;
    uint64_t v61 = v49;
    uint64_t v62 = v20;
    uint64_t v63 = 0;
    uint64_t v64 = v35;
    uint64_t v65 = v36;
    uint64_t v66 = v24;
    uint64_t v67 = v37;
    uint64_t v68 = v38;
    uint64_t v69 = v42;
    uint64_t v70 = v39;
    uint64_t v71 = v40;
    uint64_t v72 = v41;
    sub_1D439EDF4(&v51);
  }
  uint64_t v33 = *(void *)(v1 + 88);
  uint64_t v34 = *(void *)(v1 + 96);
  *(void *)(v1 + 88) = v46;
  *(void *)(v1 + 96) = v7;
  *(void *)(v1 + 104) = v8;
  *(void *)(v1 + 112) = v45;
  *(void *)(v1 + 120) = v44;
  *(void *)(v1 + 128) = v50;
  *(void *)(v1 + 136) = v11;
  *(void *)(v1 + 144) = v48;
  *(void *)(v1 + 152) = v13;
  *(void *)(v1 + 160) = v47;
  *(void *)(v1 + 168) = v49;
  sub_1D4290D4C((uint64_t)v74);
  sub_1D42E7D9C(v33, v34);
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    if (*(void *)(v1 + 344))
    {
      swift_retain();
      sub_1D4394DF0((uint64_t)v74);
      swift_release();
    }
  }
  return 1;
}

uint64_t sub_1D4290D4C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D4290DB8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1D4469928();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D42D7FAC(v8, (uint64_t)qword_1EBD83228);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1D44698F8();
  os_log_type_t v14 = sub_1D446A038();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v27 = v4;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v29[0] = v26;
    *(_DWORD *)uint64_t v15 = 136315394;
    if (!a2)
    {
LABEL_13:
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_14;
    }
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1D42CB9EC(a1, a2, v29);
    sub_1D446A188();
    uint64_t result = swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2112;
    if (!a3)
    {
LABEL_14:
      __break(1u);
      return result;
    }
    uint64_t v24 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v17 = a3;
    uint64_t v18 = sub_1D4469A38();
    uint64_t v28 = v18;
    sub_1D446A188();
    uint64_t v19 = v25;
    *uint64_t v25 = v18;
    a3 = v17;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D4271000, v13, v14, "FMAPSConnectionHandler: Received message for topic: %s \n Message: %@", (uint8_t *)v15, 0x16u);
    sub_1D42D5DA0(&qword_1EBD7E830);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v19, -1, -1);
    uint64_t v20 = v26;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v20, -1, -1);
    MEMORY[0x1D9447730](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v4 = v27;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v21 = v4 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v21);
  if (!result) {
    return result;
  }
  if (!a3)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v22 = *(void *)(v21 + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 16))(v4, a3, ObjectType, v22);
  return swift_unknownObjectRelease();
}

uint64_t sub_1D4291174(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D4469958();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D44699B8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  uint64_t v29 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v27 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = *a1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D4469928();
  sub_1D42D7FAC(v12, (uint64_t)qword_1EBD83228);
  uint64_t v13 = sub_1D44698F8();
  os_log_type_t v14 = sub_1D446A038();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v26 = v5;
    uint64_t v17 = v16;
    aBlock[0] = v16;
    uint64_t v25 = v7;
    *(_DWORD *)uint64_t v15 = 136315138;
    LOBYTE(v30) = v11;
    uint64_t v18 = sub_1D4469B68();
    uint64_t v30 = sub_1D42CB9EC(v18, v19, aBlock);
    uint64_t v7 = v25;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v13, v14, "FMIPManager: didReceive separation monitoring state: %s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v20 = v17;
    uint64_t v5 = v26;
    MEMORY[0x1D9447730](v20, -1, -1);
    MEMORY[0x1D9447730](v15, -1, -1);
  }

  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v2;
  *(unsigned char *)(v21 + 24) = v11;
  aBlock[4] = (uint64_t)sub_1D42E7858;
  void aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D42BD950;
  aBlock[3] = (uint64_t)&unk_1F2C0B568;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v23 = v27;
  sub_1D4469988();
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v23, v7, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v28);
  return swift_release();
}

char *sub_1D42915A4()
{
  uint64_t v21 = sub_1D446A088();
  uint64_t v1 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D446A068();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1D44699B8();
  MEMORY[0x1F4188790](v5 - 8);
  *(void *)&v0[OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v20 = OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_locationUpdatingQueue;
  uint64_t v19 = sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7E860);
  uint64_t v6 = v0;
  sub_1D4469988();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1D42DDA8C((unint64_t *)&qword_1EBD7FDB0, MEMORY[0x1E4FBCC10]);
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FDA0, (uint64_t *)&unk_1EBD7FD90);
  sub_1D446A1F8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v21);
  *(void *)&v0[v20] = sub_1D446A0C8();
  uint64_t v7 = &v6[OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_currentLocation];
  *((void *)v7 + 1) = 0;
  *((void *)v7 + 2) = 0;
  *(void *)uint64_t v7 = 0;
  uint64_t v8 = self;
  uint64_t v9 = (void *)sub_1D4469B08();
  uint64_t v10 = (void *)sub_1D4469B08();
  LOBYTE(v8) = objc_msgSend(v8, sel_BOOLForKey_inDomain_, v9, v10);

  v6[OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_limitedPrecision] = (char)v8;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E600]), sel_init);
  *(void *)&v6[OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_locationManager] = v11;
  type metadata accessor for FMLocationShifter();
  swift_allocObject();
  *(void *)&v6[OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_locationShifter] = FMLocationShifter.init()();

  uint64_t v12 = (objc_class *)type metadata accessor for FMIPLocationController();
  v22.receiver = v6;
  v22.super_class = v12;
  uint64_t v13 = (char *)objc_msgSendSuper2(&v22, sel_init);
  os_log_type_t v14 = *(void **)&v13[OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_locationManager];
  uint64_t v15 = v13;
  objc_msgSend(v14, sel_setDelegate_, v15);
  double v16 = *MEMORY[0x1E4F1E6E0];
  id v17 = v14;
  objc_msgSend(v17, sel_setDesiredAccuracy_, v16);

  return v15;
}

uint64_t sub_1D4291978(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v94 = a4;
  uint64_t v93 = a3;
  uint64_t v114 = a2;
  uint64_t v112 = type metadata accessor for FMIPUnknownItem();
  uint64_t v5 = *(void *)(v112 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v112);
  uint64_t v111 = (uint64_t)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v110 = (uint64_t)&v86 - v9;
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (unint64_t)&v86 - v10;
  uint64_t v92 = sub_1D44699B8();
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  uint64_t v89 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1D4469958();
  uint64_t v88 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  int64_t v87 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 == -1) {
    goto LABEL_2;
  }
  while (1)
  {
    swift_once();
LABEL_2:
    uint64_t v14 = sub_1D4469928();
    uint64_t v15 = sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
    swift_bridgeObjectRetain();
    uint64_t v109 = v15;
    double v16 = sub_1D44698F8();
    os_log_type_t v17 = sub_1D446A038();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = v11;
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 134217984;
      aBlock[0] = a1[2];
      sub_1D446A188();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v16, v17, "FMIPManager: unknownItems processing %ld", v19, 0xCu);
      uint64_t v20 = v19;
      unint64_t v11 = v18;
      MEMORY[0x1D9447730](v20, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    uint64_t v113 = swift_allocObject();
    *(void *)(v113 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v108 = a1[2];
    if (!v108)
    {
LABEL_56:
      uint64_t v78 = v114;
      unsigned __int8 v79 = v87;
      sub_1D4469948();
      unsigned __int8 v80 = (void *)swift_allocObject();
      v80[2] = v113;
      v80[3] = v78;
      uint64_t v81 = v93;
      uint64_t v82 = v94;
      v80[4] = v93;
      v80[5] = v82;
      aBlock[4] = (uint64_t)sub_1D42E79CC;
      void aBlock[5] = (uint64_t)v80;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1D42BD950;
      aBlock[3] = (uint64_t)&unk_1F2C0C0D0;
      uint64_t v83 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      sub_1D42972D4(v81);
      uint64_t v84 = v89;
      sub_1D4469988();
      MEMORY[0x1D9446420](0, v84, v79, v83);
      _Block_release(v83);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v84, v92);
      (*(void (**)(char *, uint64_t))(v88 + 8))(v79, v90);
      swift_release();
      return swift_release();
    }
    uint64_t v104 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_locationShifter;
    uint64_t v21 = *(unsigned __int8 *)(v5 + 80);
    uint64_t v107 = (char *)a1 + ((v21 + 32) & ~v21);
    uint64_t v106 = *(void *)(v5 + 72);
    uint64_t v97 = aBlock;
    uint64_t v102 = v21 | 7;
    uint64_t v103 = (v21 + 16) & ~v21;
    unint64_t v101 = (v6 + v103 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v100 = (v101 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v99 = (v100 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v98 = v99 + 8;
    uint64_t v86 = a1;
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    unint64_t v105 = 0x80000001D4480ED0;
    *(void *)&long long v23 = 136315394;
    long long v96 = v23;
    uint64_t v95 = MEMORY[0x1E4FBC840] + 8;
    unint64_t v117 = v11;
LABEL_8:
    sub_1D42CA6F0((uint64_t)&v107[v106 * v22], v11, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    id v27 = objc_allocWithZone(MEMORY[0x1E4F61568]);
    uint64_t v28 = (void *)sub_1D4469B08();
    id v116 = objc_msgSend(v27, sel_initWithDescription_andTimeout_, v28, 60.0);

    uint64_t v29 = *(void *)(v11 + *(int *)(v112 + 32));
    uint64_t v119 = *(void *)(v29 + 16);
    if (v119) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v31 = MEMORY[0x1E4FBC868];
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v53 = v110;
    sub_1D42CA6F0(v11, v110, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    swift_bridgeObjectRetain_n();
    uint64_t v54 = sub_1D44698F8();
    os_log_type_t v55 = sub_1D446A038();
    uint64_t v6 = v31;
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      aBlock[0] = v57;
      *(_DWORD *)uint64_t v56 = v96;
      sub_1D4469688();
      sub_1D42C61DC((unint64_t *)&qword_1EA6C92C0, MEMORY[0x1E4F27990]);
      uint64_t v58 = sub_1D446A6D8();
      uint64_t v123 = sub_1D42CB9EC(v58, v59, aBlock);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D42CA8E8(v53, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
      *(_WORD *)(v56 + 12) = 2048;
      uint64_t v60 = *(void *)(v31 + 16);
      swift_bridgeObjectRelease();
      uint64_t v123 = v60;
      unint64_t v11 = v117;
      sub_1D446A188();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v54, v55, "FMIPManager: unknownItems shifting location for item %s, locations: %ld", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v57, -1, -1);
      MEMORY[0x1D9447730](v56, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1D42CA8E8(v53, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);

      swift_bridgeObjectRelease();
    }
    uint64_t v118 = v22 + 1;
    uint64_t v122 = *(void *)(v114 + v104);
    uint64_t v61 = v111;
    sub_1D42CA6F0(v11, v111, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v62 = swift_allocObject();
    sub_1D42CAAD0(v61, v62 + v103, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    *(void *)(v62 + v101) = v31;
    *(void *)(v62 + v100) = v113;
    uint64_t v63 = v116;
    *(void *)(v62 + v99) = v116;
    aBlock[0] = MEMORY[0x1E4FBC860];
    a1 = (void *)(v31 + 64);
    uint64_t v64 = 1 << *(unsigned char *)(v31 + 32);
    if (v64 < 64) {
      uint64_t v65 = ~(-1 << v64);
    }
    else {
      uint64_t v65 = -1;
    }
    unint64_t v66 = v65 & *(void *)(v31 + 64);
    int64_t v67 = (unint64_t)(v64 + 63) >> 6;
    swift_bridgeObjectRetain_n();
    swift_retain();
    id v121 = v63;
    uint64_t v5 = 0;
    if (v66)
    {
LABEL_32:
      unint64_t v68 = __clz(__rbit64(v66));
      v66 &= v66 - 1;
      unint64_t v69 = v68 | (v5 << 6);
      goto LABEL_51;
    }
    while (1)
    {
      int64_t v70 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        break;
      }
      if (v70 >= v67) {
        goto LABEL_7;
      }
      unint64_t v71 = a1[v70];
      ++v5;
      if (!v71)
      {
        uint64_t v5 = v70 + 1;
        if (v70 + 1 >= v67) {
          goto LABEL_7;
        }
        unint64_t v71 = a1[v5];
        if (!v71)
        {
          uint64_t v5 = v70 + 2;
          if (v70 + 2 >= v67) {
            goto LABEL_7;
          }
          unint64_t v71 = a1[v5];
          if (!v71)
          {
            uint64_t v5 = v70 + 3;
            if (v70 + 3 >= v67) {
              goto LABEL_7;
            }
            unint64_t v71 = a1[v5];
            if (!v71)
            {
              uint64_t v5 = v70 + 4;
              if (v70 + 4 >= v67) {
                goto LABEL_7;
              }
              unint64_t v71 = a1[v5];
              if (!v71)
              {
                int64_t v72 = v70 + 5;
                if (v72 >= v67)
                {
LABEL_7:
                  swift_release();
                  uint64_t v24 = aBlock[0];
                  uint64_t v25 = (void *)swift_allocObject();
                  v25[2] = v6;
                  v25[3] = sub_1D438B638;
                  v25[4] = v62;
                  swift_bridgeObjectRetain();
                  swift_retain();
                  sub_1D42DD324(v24, (uint64_t)sub_1D438BF70, (uint64_t)v25);
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_release();
                  id v26 = v121;
                  objc_msgSend(v121, sel_wait);

                  unint64_t v11 = v117;
                  sub_1D42CA8E8(v117, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
                  uint64_t v22 = v118;
                  if (v118 != v108) {
                    goto LABEL_8;
                  }
                  swift_bridgeObjectRelease();
                  goto LABEL_56;
                }
                unint64_t v71 = a1[v72];
                if (!v71)
                {
                  while (1)
                  {
                    uint64_t v5 = v72 + 1;
                    if (__OFADD__(v72, 1)) {
                      goto LABEL_60;
                    }
                    if (v5 >= v67) {
                      goto LABEL_7;
                    }
                    unint64_t v71 = a1[v5];
                    ++v72;
                    if (v71) {
                      goto LABEL_50;
                    }
                  }
                }
                uint64_t v5 = v72;
              }
            }
          }
        }
      }
LABEL_50:
      unint64_t v66 = (v71 - 1) & v71;
      unint64_t v69 = __clz(__rbit64(v71)) + (v5 << 6);
LABEL_51:
      uint64_t v73 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v69);
      uint64_t v75 = *v73;
      uint64_t v74 = v73[1];
      uint64_t v76 = *(void **)(*(void *)(v6 + 56) + 24 * v69 + 8);
      type metadata accessor for FMLocationShiftingRequest();
      unsigned __int8 v77 = (void *)swift_allocObject();
      v77[2] = v76;
      v77[3] = v75;
      v77[4] = v74;
      swift_bridgeObjectRetain();
      MEMORY[0x1D94460A0](v76);
      unint64_t v11 = *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v11 >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1D4469DB8();
      }
      sub_1D4469E08();
      sub_1D4469D98();
      if (v66) {
        goto LABEL_32;
      }
    }
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
  }
  uint64_t v118 = v22;
  uint64_t v30 = (char *)(v29 + 32);
  uint64_t v115 = v29;
  swift_bridgeObjectRetain_n();
  uint64_t v6 = 0;
  uint64_t v31 = MEMORY[0x1E4FBC868];
  while (1)
  {
    char v33 = *v30;
    int v34 = v30[2];
    int v120 = v30[1];
    LODWORD(v121) = v34;
    LODWORD(v122) = v30[3];
    uint64_t v35 = (void *)*((void *)v30 + 1);
    uint64_t v36 = *((void *)v30 + 2);
    aBlock[0] = v6;
    a1 = v35;
    uint64_t v37 = sub_1D446A6D8();
    uint64_t v5 = v38;
    uint64_t v39 = v31;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v39;
    unint64_t v11 = sub_1D42C4FCC(v37, v5);
    uint64_t v42 = *(void *)(v39 + 16);
    BOOL v43 = (v41 & 1) == 0;
    uint64_t v44 = v42 + v43;
    if (__OFADD__(v42, v43))
    {
      __break(1u);
      goto LABEL_58;
    }
    char v45 = v41;
    if (*(void *)(v39 + 24) < v44) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v31 = aBlock[0];
      if ((v41 & 1) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      sub_1D43D8F64();
      uint64_t v31 = aBlock[0];
      if ((v45 & 1) == 0)
      {
LABEL_19:
        *(void *)(v31 + 8 * (v11 >> 6) + 64) |= 1 << v11;
        uint64_t v48 = (uint64_t *)(*(void *)(v31 + 48) + 16 * v11);
        *uint64_t v48 = v37;
        v48[1] = v5;
        uint64_t v49 = *(void *)(v31 + 56) + 24 * v11;
        *(unsigned char *)uint64_t v49 = v33;
        *(unsigned char *)(v49 + 1) = v120;
        *(unsigned char *)(v49 + 2) = (_BYTE)v121;
        *(unsigned char *)(v49 + 3) = v122;
        *(void *)(v49 + 8) = a1;
        *(void *)(v49 + 16) = v36;
        uint64_t v50 = *(void *)(v31 + 16);
        BOOL v51 = __OFADD__(v50, 1);
        uint64_t v52 = v50 + 1;
        if (v51) {
          goto LABEL_59;
        }
        *(void *)(v31 + 16) = v52;
        swift_bridgeObjectRetain();
        goto LABEL_11;
      }
    }
LABEL_10:
    uint64_t v32 = *(void *)(v31 + 56) + 24 * v11;

    *(unsigned char *)uint64_t v32 = v33;
    *(unsigned char *)(v32 + 1) = v120;
    *(unsigned char *)(v32 + 2) = (_BYTE)v121;
    *(unsigned char *)(v32 + 3) = v122;
    *(void *)(v32 + 8) = a1;
    *(void *)(v32 + 16) = v36;
LABEL_11:
    ++v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 += 24;
    if (v119 == v6)
    {
      swift_bridgeObjectRelease();
      unint64_t v11 = v117;
      uint64_t v22 = v118;
      goto LABEL_25;
    }
  }
  sub_1D42C1798(v44, isUniquelyReferenced_nonNull_native);
  unint64_t v46 = sub_1D42C4FCC(v37, v5);
  if ((v45 & 1) == (v47 & 1))
  {
    unint64_t v11 = v46;
    uint64_t v31 = aBlock[0];
    if ((v45 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  uint64_t result = sub_1D446A7A8();
  __break(1u);
  return result;
}

uint64_t sub_1D4292774(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v37 = a2;
  uint64_t v7 = v5;
  uint64_t v40 = sub_1D44699B8();
  uint64_t v9 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  unint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D4469958();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1D4469928();
  sub_1D42D7FAC(v16, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  os_log_type_t v17 = sub_1D44698F8();
  os_log_type_t v18 = sub_1D446A038();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v36 = v13;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v35 = a5;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = (void *)swift_slowAlloc();
    char v33 = v20;
    int v34 = v15;
    *(_DWORD *)uint64_t v20 = 138412290;
    v32[1] = v20 + 4;
    type metadata accessor for FMIPItem();
    uint64_t v22 = v7;
    long long v23 = v11;
    uint64_t v24 = v12;
    uint64_t v25 = v9;
    uint64_t v26 = sub_1D4469D58();
    aBlock[0] = v26;
    uint64_t v15 = v34;
    sub_1D446A188();
    *uint64_t v21 = v26;
    uint64_t v9 = v25;
    uint64_t v12 = v24;
    unint64_t v11 = v23;
    uint64_t v7 = v22;
    uint64_t v13 = v36;
    swift_bridgeObjectRelease();
    os_log_type_t v27 = v18;
    uint64_t v28 = v33;
    _os_log_impl(&dword_1D4271000, v17, v27, v37, v33, 0xCu);
    sub_1D42D5DA0(&qword_1EBD7E830);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v21, -1, -1);
    a5 = v35;
    MEMORY[0x1D9447730](v28, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  sub_1D4469948();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v7;
  *(void *)(v29 + 24) = a1;
  aBlock[4] = v39;
  void aBlock[5] = v29;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = a5;
  uint64_t v30 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v11, v15, v30);
  _Block_release(v30);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v40);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1D4292B40(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1D4469958();
  uint64_t v37 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v35 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1D44699B8();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  char v33 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D4469968();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = a2 & 1;
  *(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_clientConfiguration) = a2;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D4469928();
  sub_1D42D7FAC(v12, (uint64_t)qword_1EBD83228);
  uint64_t v13 = sub_1D44698F8();
  os_log_type_t v14 = sub_1D446A018();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v31 = a1;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v32 = v4;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v30 = v7;
    uint64_t v18 = v17;
    aBlock[0] = v17;
    *(_DWORD *)uint64_t v16 = 136446210;
    LOBYTE(v38) = v11;
    uint64_t v19 = sub_1D4469B68();
    uint64_t v38 = sub_1D42CB9EC(v19, v20, aBlock);
    a1 = v31;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v13, v14, "FMIPBeaconRefreshingController: Received new client configuration: %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    uint64_t v21 = v18;
    uint64_t v7 = v30;
    MEMORY[0x1D9447730](v21, -1, -1);
    uint64_t v22 = v16;
    uint64_t v4 = v32;
    MEMORY[0x1D9447730](v22, -1, -1);
  }

  sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7E860);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCB50], v7);
  long long v23 = (void *)sub_1D446A0D8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a1;
  *(unsigned char *)(v24 + 24) = v11;
  aBlock[4] = (uint64_t)sub_1D42E374C;
  void aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D42BD950;
  aBlock[3] = (uint64_t)&unk_1F2C133D0;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v26 = v33;
  sub_1D4469988();
  uint64_t v38 = MEMORY[0x1E4FBC860];
  sub_1D444A534((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  os_log_type_t v27 = v35;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v26, v27, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v4);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v36);
  return swift_release();
}

uint64_t sub_1D429306C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EBD7D9A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 56) = 0;
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42E5D2C();
  swift_retain();
  sub_1D446A8C8();
  if (v2)
  {
    swift_release();
    sub_1D42BEC64((uint64_t)a1);
    swift_bridgeObjectRelease();
    type metadata accessor for FMIPInitClientResponse();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1D42D5DA0(&qword_1EBD7D8C0);
    LOBYTE(v25) = 4;
    sub_1D42E222C();
    sub_1D446A5D8();
    *(void *)(v1 + 56) = v24[0];
    swift_release();
    swift_bridgeObjectRelease();
    sub_1D42A4D5C((uint64_t)a1, (uint64_t)v24);
    uint64_t v3 = sub_1D427E300(v24);
    uint64_t v9 = qword_1EBD80068;
    swift_retain();
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1D4469928();
    sub_1D42D7FAC(v10, (uint64_t)qword_1EBD83228);
    swift_retain_n();
    char v11 = sub_1D44698F8();
    os_log_type_t v12 = sub_1D446A038();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_t v23 = v11;
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v24[0] = v22;
      uint64_t v21 = v13;
      *(_DWORD *)uint64_t v13 = 136315138;
      v20[1] = v13 + 4;
      uint64_t v14 = sub_1D429F0AC();
      uint64_t v25 = sub_1D42CB9EC(v14, v15, v24);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      char v11 = v23;
      os_log_type_t v16 = v12;
      uint64_t v17 = v21;
      _os_log_impl(&dword_1D4271000, v23, v16, "FMIPInitClientResponse: initialized with coder %s", v21, 0xCu);
      uint64_t v18 = v22;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v18, -1, -1);
      MEMORY[0x1D9447730](v17, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1D42BEC64((uint64_t)a1);
    swift_release();
  }
  return v3;
}

uint64_t sub_1D4293434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1D4469958();
  uint64_t v33 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1D44699B8();
  uint64_t v11 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v34 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1D4469928();
  sub_1D42D7FAC(v13, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1D44698F8();
  os_log_type_t v15 = sub_1D446A038();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v30 = a3;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v32 = v8;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v29 = v4;
    uint64_t v19 = (void *)v18;
    *(_DWORD *)uint64_t v17 = 138412290;
    uint64_t v31 = v11;
    uint64_t v28 = v10;
    type metadata accessor for FMIPUnknownItem();
    uint64_t v20 = sub_1D4469D58();
    aBlock[0] = v20;
    uint64_t v10 = v28;
    uint64_t v11 = v31;
    sub_1D446A188();
    *uint64_t v19 = v20;
    a3 = v30;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v14, v15, "FMIPManager: didReceive unknownItems %@", v17, 0xCu);
    sub_1D42D5DA0(&qword_1EBD7E830);
    swift_arrayDestroy();
    uint64_t v21 = v19;
    uint64_t v4 = v29;
    MEMORY[0x1D9447730](v21, -1, -1);
    uint64_t v22 = v17;
    uint64_t v8 = v32;
    MEMORY[0x1D9447730](v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  os_log_t v23 = (void *)swift_allocObject();
  v23[2] = a1;
  v23[3] = v4;
  v23[4] = a2;
  v23[5] = a3;
  aBlock[4] = sub_1D42E79D8;
  void aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0C008;
  uint64_t v24 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D42972D4(a2);
  uint64_t v25 = v34;
  sub_1D4469988();
  uint64_t v36 = MEMORY[0x1E4FBC860];
  sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v25, v10, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v25, v35);
  return swift_release();
}

uint64_t destroy for FMIPBeaconRefreshingPolicy()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1D42938D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v63 = a6;
  uint64_t v64 = a5;
  uint64_t v61 = a3;
  uint64_t v62 = a4;
  uint64_t v59 = a1;
  uint64_t v60 = a2;
  uint64_t v7 = sub_1D4469958();
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v52 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1D446A088();
  uint64_t v9 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D446A068();
  MEMORY[0x1F4188790](v12);
  uint64_t v51 = sub_1D44699B8();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v6;
  *(void *)&v6[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v57 = OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_connectionQueue;
  unint64_t v55 = sub_1D42AADA4();
  os_log_type_t v15 = v6;
  sub_1D4469988();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1D42C6224((unint64_t *)&qword_1EBD7FDB0, MEMORY[0x1E4FBCC10]);
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FDA0, (uint64_t *)&unk_1EBD7FD90);
  sub_1D446A1F8();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCC58], v58);
  uint64_t v16 = v14;
  *(void *)&v56[v57] = sub_1D446A0C8();
  uint64_t v17 = &v15[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_connection];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  uint64_t v18 = &v15[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_topicAPSToken];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  uint64_t v19 = &v15[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_publicAPSToken];
  *(void *)uint64_t v19 = 0;
  *((void *)v19 + 1) = 0;
  uint64_t v20 = &v15[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_topic];
  uint64_t v21 = v60;
  *(void *)uint64_t v20 = v59;
  *((void *)v20 + 1) = v21;
  uint64_t v22 = &v15[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_preferenceDomain];
  uint64_t v23 = v62;
  *(void *)uint64_t v22 = v61;
  *((void *)v22 + 1) = v23;
  uint64_t v25 = v63;
  uint64_t v24 = v64;
  *(void *)uint64_t v17 = v64;
  *((void *)v17 + 1) = v25;
  uint64_t v26 = v24;
  swift_unknownObjectRetain();

  swift_unknownObjectRelease();
  uint64_t v27 = (objc_class *)type metadata accessor for FMAPSConnectionHandler();
  v67.receiver = v15;
  v67.super_class = v27;
  uint64_t v28 = (char *)objc_msgSendSuper2(&v67, sel_init);
  uint64_t v29 = v28;
  if (v26)
  {
    if (*(void *)&v28[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_connection])
    {
      uint64_t v30 = *(void *)&v28[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_connection + 8];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v32 = *(void (**)(void *, uint64_t, uint64_t))(v30 + 16);
      id v33 = v29;
      swift_unknownObjectRetain();
      v32(v29, ObjectType, v30);
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v39 = v28;
    }
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_1D4469928();
    sub_1D42D7FAC(v40, (uint64_t)qword_1EBD83228);
    char v41 = v29;
    uint64_t v42 = sub_1D44698F8();
    os_log_type_t v43 = sub_1D446A038();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136315138;
      aBlock[0] = v45;
      uint64_t v46 = *(void *)&v41[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_topic];
      unint64_t v47 = *(void *)&v41[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_topic + 8];
      swift_bridgeObjectRetain();
      uint64_t v65 = sub_1D42CB9EC(v46, v47, aBlock);
      sub_1D446A188();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v42, v43, "FMAPSConnectionHandler: initialized with topic %s", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v45, -1, -1);
      MEMORY[0x1D9447730](v44, -1, -1);

      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v29;
    aBlock[4] = (uint64_t)sub_1D42E5400;
    void aBlock[5] = v34;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1D42BD950;
    aBlock[3] = (uint64_t)&unk_1F2C0DCC0;
    uint64_t v35 = _Block_copy(aBlock);
    id v36 = v29;
    sub_1D4469988();
    uint64_t v65 = MEMORY[0x1E4FBC860];
    sub_1D42C6224((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    uint64_t v37 = v52;
    uint64_t v38 = v54;
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v16, v37, v35);

    _Block_release(v35);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v38);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v51);
    swift_release();
  }
  return v29;
}

uint64_t sub_1D4294030(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D44699B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D4469958();
  uint64_t v30 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1D4469928();
  sub_1D42D7FAC(v11, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1D44698F8();
  os_log_type_t v13 = sub_1D446A038();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v29 = v4;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = v2;
    uint64_t v16 = v15;
    aBlock[0] = v15;
    uint64_t v27 = v8;
    *(_DWORD *)uint64_t v14 = 136315138;
    v25[1] = v14 + 4;
    sub_1D4469688();
    uint64_t v28 = v5;
    sub_1D42C61DC(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1D4469A68();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t v20 = v17;
    uint64_t v4 = v29;
    uint64_t v31 = sub_1D42CB9EC(v20, v19, aBlock);
    uint64_t v8 = v27;
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    uint64_t v5 = v28;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v12, v13, "FMIPManager: didReceive beaconTypes: %s", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v21 = v16;
    uint64_t v2 = v26;
    MEMORY[0x1D9447730](v21, -1, -1);
    MEMORY[0x1D9447730](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1D4469948();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v2;
  *(void *)(v22 + 24) = a1;
  aBlock[4] = (uint64_t)sub_1D42E7938;
  void aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D42BD950;
  aBlock[3] = (uint64_t)&unk_1F2C0B7C0;
  uint64_t v23 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v7, v10, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v8);
  return swift_release();
}

uint64_t sub_1D4294464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a4;
  uint64_t v30 = a2;
  uint64_t v32 = sub_1D44699B8();
  uint64_t v6 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1D4469958();
  uint64_t v27 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v26 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D4469928();
  sub_1D42D7FAC(v10, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1D44698F8();
  os_log_type_t v12 = sub_1D446A038();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v24 = a3;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v25 = v6;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412290;
    sub_1D4469688();
    sub_1D42C61DC(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
    uint64_t v16 = sub_1D4469A38();
    aBlock[0] = v16;
    sub_1D446A188();
    *uint64_t v15 = v16;
    a3 = v24;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v11, v12, "FMIPManager: didReceive separation states %@", v14, 0xCu);
    sub_1D42D5DA0(&qword_1EBD7E830);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v15, -1, -1);
    uint64_t v17 = v14;
    uint64_t v6 = v25;
    MEMORY[0x1D9447730](v17, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v18 = v29;
  unint64_t v19 = v26;
  sub_1D4469948();
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = v18;
  v20[3] = a1;
  v20[4] = v30;
  v20[5] = a3;
  v20[6] = v28;
  aBlock[4] = sub_1D42E7864;
  void aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0B6A8;
  uint64_t v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v8, v19, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v32);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v31);
  return swift_release();
}

void sub_1D429488C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D44696C8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (objc_class *)type metadata accessor for FMReverseGeocodingOperation();
  v26.receiver = v0;
  v26.super_class = v9;
  objc_msgSendSuper2(&v26, sel_start);
  id v24 = self;
  id v10 = objc_msgSend(v24, sel_sharedService);
  id v11 = objc_msgSend(v10, sel_defaultTraits);

  sub_1D4275C84();
  os_log_type_t v12 = &v1[OBJC_IVAR____TtC8FMIPCore27FMReverseGeocodingOperation_request];
  sub_1D4295418(*(id *)&v1[OBJC_IVAR____TtC8FMIPCore27FMReverseGeocodingOperation_request + 16]);
  uint64_t v14 = v13;
  uint64_t v15 = type metadata accessor for FMReverseGeocodingRequest();
  sub_1D42E8294((uint64_t)&v12[*(int *)(v15 + 24)], (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1D43C0AFC((uint64_t)v4);
  }
  else
  {
    uint64_t v23 = v1;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_1D4469698();
    sub_1D44696B8();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_clearDeviceDisplayLanguages);
    if (v11)
    {
      id v16 = v11;
      uint64_t v17 = (void *)sub_1D4469B08();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_addDeviceDisplayLanguage_, v17);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_bridgeObjectRelease();
    }
    uint64_t v1 = v23;
  }
  if (v12[*(int *)(v15 + 32)] == 1 && v14) {
    objc_msgSend(v14, sel_setHorizontalAccuracy_, 1100.0);
  }
  id v18 = objc_msgSend(v24, sel_sharedService);
  id v19 = objc_msgSend(v18, sel_ticketForReverseGeocodeLocation_traits_, v14, v11);

  if (v19)
  {
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v1;
    aBlock[4] = sub_1D43C0B94;
    void aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D43C09A4;
    aBlock[3] = &unk_1F2C0DD10;
    uint64_t v21 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    uint64_t v22 = v1;
    swift_release();
    objc_msgSend(v19, sel_submitWithHandler_timeout_networkActivity_, v21, 25, 0);
    swift_unknownObjectRelease_n();

    _Block_release(v21);
  }
  else
  {
  }
}

uint64_t sub_1D4294C8C(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D4469958();
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D44699B8();
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v21 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(double *)(v1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_maxCallbackInterval) < a1) {
    a1 = *(double *)(v1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_maxCallbackInterval);
  }
  uint64_t v10 = swift_allocObject();
  *(double *)(v10 + 16) = a1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1D4469928();
  sub_1D42D7FAC(v11, (uint64_t)qword_1EBD83228);
  swift_retain();
  swift_retain();
  os_log_type_t v12 = sub_1D44698F8();
  os_log_type_t v13 = sub_1D446A038();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134218240;
    swift_beginAccess();
    aBlock[0] = *(void *)(v10 + 16);
    sub_1D446A188();
    swift_release();
    *(_WORD *)(v14 + 12) = 2048;
    aBlock[0] = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_callbackInterval);
    sub_1D446A188();
    swift_release();
    _os_log_impl(&dword_1D4271000, v12, v13, "FMIPRefreshingController: scheduleNextRefresh scheduling next target interval: %f callback: %f", (uint8_t *)v14, 0x16u);
    MEMORY[0x1D9447730](v14, -1, -1);
  }
  else
  {

    swift_release();
    swift_release();
  }
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v10;
  aBlock[4] = sub_1D42C1E70;
  void aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0FF60;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1D4469988();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1D42C6224((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v9, v6, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v21);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1D4295118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D429513C(a1, a2, a3, a4);
}

uint64_t sub_1D429513C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1D4469958();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1D44699B8();
  uint64_t v14 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)(v5 + qword_1EBD7FC68);
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = a4;
  void v17[3] = v5;
  v17[4] = a1;
  v17[5] = a2;
  v17[6] = a3;
  aBlock[4] = sub_1D42C1B00;
  void aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0F900;
  id v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D4469988();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1D42C626C((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v16, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  return swift_release();
}

void sub_1D4295418(void *a1)
{
  uint64_t v2 = sub_1D4469618();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_coordinate);
  double v7 = v6;
  objc_msgSend(a1, sel_coordinate);
  id v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithGEOCoordinate_, v7, v8);
  if (!v9)
  {
LABEL_14:

    return;
  }
  id v10 = v9;
  id v11 = objc_msgSend(a1, sel_timestamp);
  sub_1D44695D8();

  sub_1D44695B8();
  double v13 = v12;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v10, sel_setTimestamp_, v13);
  objc_msgSend(a1, sel_horizontalAccuracy);
  objc_msgSend(v10, sel_setHorizontalAccuracy_);
  objc_msgSend(a1, sel_verticalAccuracy);
  objc_msgSend(v10, sel_setVerticalAccuracy_);
  objc_msgSend(a1, sel_course);
  objc_msgSend(v10, sel_setCourse_);
  objc_msgSend(a1, sel_courseAccuracy);
  objc_msgSend(v10, sel_setCourseAccuracy_);
  objc_msgSend(a1, sel_speed);
  objc_msgSend(v10, sel_setSpeed_);
  objc_msgSend(a1, sel_speedAccuracy);
  objc_msgSend(v10, sel_setSpeedAccuracy_);
  objc_msgSend(a1, sel_altitude);
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v14 <= -2147483650.0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v14 >= 2147483650.0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v10, sel_setAltitude_, (int)v14);
  id v15 = objc_msgSend(a1, sel_floor);
  if (!v15) {
    goto LABEL_9;
  }
  uint64_t v16 = v15;
  uint64_t v17 = (uint64_t)objc_msgSend(v15, sel_level);

  if (v17 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (v17 <= 0x7FFFFFFF)
    {
LABEL_10:
      objc_msgSend(v10, sel_setLevelOrdinal_, v17);
      unsigned int v18 = objc_msgSend(a1, sel_referenceFrame);
      if (v18 > 2) {
        uint64_t v19 = 0;
      }
      else {
        uint64_t v19 = dword_1D4479E90[v18];
      }
      objc_msgSend(v10, sel_setReferenceFrame_, v19);

      goto LABEL_14;
    }
    __break(1u);
LABEL_9:
    uint64_t v17 = 0;
    goto LABEL_10;
  }
LABEL_18:
  __break(1u);
}

void *sub_1D4295760(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v49 = a2;
  uint64_t v50 = a1;
  uint64_t v4 = sub_1D446A088();
  unint64_t v47 = *(uint8_t **)(v4 - 8);
  uint64_t v48 = v4;
  MEMORY[0x1F4188790](v4);
  double v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D446A068();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1D44699B8();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1D4469688();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  double v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4469678();
  uint64_t v13 = sub_1D4469638();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v3[2] = v13;
  v3[3] = v15;
  v3[5] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v16 = (char *)v3 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_selectedDevice;
  uint64_t v17 = type metadata accessor for FMIPDevice();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  unsigned int v18 = (char *)v3 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_itemCounts;
  *(_OWORD *)unsigned int v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *((_OWORD *)v18 + 2) = 0u;
  v18[48] = 1;
  uint64_t v19 = OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_refreshQueue;
  sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7E860);
  sub_1D4469988();
  v52[1] = MEMORY[0x1E4FBC860];
  sub_1D42C6224((unint64_t *)&qword_1EBD7FDB0, MEMORY[0x1E4FBCC10]);
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FDA0, (uint64_t *)&unk_1EBD7FD90);
  sub_1D446A1F8();
  (*((void (**)(char *, void, uint64_t))v47 + 13))(v6, *MEMORY[0x1E4FBCC58], v48);
  *(void *)((char *)v3 + v19) = sub_1D446A0C8();
  *(void *)((char *)v3 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_tapContexts) = MEMORY[0x1E4FBC860];
  *(void *)((char *)v3 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_callbackInterval) = 0x40DD4C0000000000;
  *(void *)((char *)v3 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_minCallbackInterval) = 0x40B3880000000000;
  *(void *)((char *)v3 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_maxCallbackInterval) = 0x40ED4C0000000000;
  uint64_t v20 = (char *)v3 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_lastRefreshTime;
  uint64_t v21 = sub_1D4469618();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(void *)((char *)v3 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_refreshTimer) = 0;
  *((unsigned char *)v3 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_isInitializing) = 0;
  uint64_t v22 = (void *)((char *)v3 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_ownerPhoneNumber);
  *uint64_t v22 = 0;
  v22[1] = 0;
  *((unsigned char *)v3 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_isRefreshing) = 0;
  *(void *)((char *)v3 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_rangingParameters) = 0x4034000000000000;
  id v24 = v49;
  uint64_t v23 = v50;
  *(void *)((char *)v3 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_apsConnectionHandler) = v49;
  sub_1D42A4D5C(v23, (uint64_t)v3 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_interactionController);
  uint64_t v25 = *(void *)((char *)v3 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_apsConnectionHandler)
      + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  *(void *)(v25 + 8) = &off_1F2C0FDB8;
  swift_unknownObjectWeakAssign();
  uint64_t v26 = qword_1EBD80068;
  id v27 = v24;
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1D4469928();
  sub_1D42D7FAC(v28, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v29 = sub_1D44698F8();
  os_log_type_t v30 = sub_1D446A038();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    v52[0] = v48;
    id v49 = v27;
    *(_DWORD *)uint64_t v31 = 136315138;
    unint64_t v47 = v31 + 4;
    uint64_t v32 = v3[2];
    unint64_t v33 = v3[3];
    swift_bridgeObjectRetain();
    unint64_t v34 = sub_1D427A0D0(0xCuLL, v32, v33);
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    uint64_t v40 = v39;
    swift_bridgeObjectRelease();
    uint64_t v41 = MEMORY[0x1D9445EF0](v34, v36, v38, v40);
    unint64_t v43 = v42;
    swift_bridgeObjectRelease();
    uint64_t v51 = sub_1D42CB9EC(v41, v43, v52);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v29, v30, "FMIPRefreshingController<%s>.init", v31, 0xCu);
    uint64_t v44 = v48;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v44, -1, -1);
    MEMORY[0x1D9447730](v31, -1, -1);
  }
  else
  {
    swift_release_n();
  }
  sub_1D42BEC64(v50);
  return v3;
}

uint64_t sub_1D4295E0C()
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1D4469928();
  sub_1D42D7FAC(v0, (uint64_t)qword_1EBD83228);
  uint64_t v1 = sub_1D44698F8();
  os_log_type_t v2 = sub_1D446A038();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1D4271000, v1, v2, "fetching owner phone Number", v3, 2u);
    MEMORY[0x1D9447730](v3, -1, -1);
  }

  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F179C8]), sel_init);
  id v5 = objc_msgSend(v4, sel_aa_primaryAppleAccount);
  if (!v5)
  {
    long long v22 = 0u;
    long long v23 = 0u;
LABEL_18:

LABEL_19:
    sub_1D4276C3C((uint64_t)&v22, &qword_1EBD80050);
    return 0;
  }
  id v6 = v5;
  uint64_t v7 = (void *)sub_1D4469B08();
  id v8 = objc_msgSend(v6, sel_accountPropertyForKey_, v7);

  if (v8)
  {
    sub_1D446A1D8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v21, 0, sizeof(v21));
  }
  sub_1D4276C98((uint64_t)v21, (uint64_t)&v22, &qword_1EBD80050);
  if (!*((void *)&v23 + 1))
  {

    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    return 0;
  }
  id v9 = objc_msgSend(self, sel_sharedInstance);
  uint64_t v10 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_authKitAccountWithAltDSID_, v10);

  if (!v11)
  {
LABEL_29:

    return 0;
  }
  id v12 = objc_msgSend(v9, sel_additionalInfoForAccount_, v11);
  if (!v12)
  {

    goto LABEL_29;
  }
  uint64_t v13 = v12;
  uint64_t v14 = sub_1D4469A58();

  if (*(void *)(v14 + 16) && (unint64_t v15 = sub_1D42C4FCC(0x6D754E656E6F6870, 0xEC00000073726562), (v16 & 1) != 0))
  {
    sub_1D42CBAC0(*(void *)(v14 + 56) + 32 * v15, (uint64_t)&v22);
  }
  else
  {
    long long v22 = 0u;
    long long v23 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v23 + 1))
  {

    goto LABEL_19;
  }
  sub_1D42D5DA0(&qword_1EA6CB368);
  if ((swift_dynamicCast() & 1) == 0)
  {

    return 0;
  }
  if (!*(void *)(*(void *)&v21[0] + 16))
  {

    swift_bridgeObjectRelease();
    long long v22 = 0u;
    long long v23 = 0u;
    goto LABEL_19;
  }
  uint64_t v17 = *(void *)(*(void *)&v21[0] + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1D42C4FCC(0x6D754E656E6F6870, 0xEB00000000726562), (v19 & 1) != 0))
  {
    sub_1D42CBAC0(*(void *)(v17 + 56) + 32 * v18, (uint64_t)&v22);
  }
  else
  {
    long long v22 = 0u;
    long long v23 = 0u;
  }

  swift_bridgeObjectRelease();
  if (!*((void *)&v23 + 1)) {
    goto LABEL_19;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  return *(void *)&v21[0];
}

void sub_1D4296258(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1D4469958();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D44699B8();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 60 == 15)
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1D4469928();
    sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
    os_log_t v44 = (os_log_t)sub_1D44698F8();
    os_log_type_t v15 = sub_1D446A018();
    if (os_log_type_enabled(v44, v15))
    {
      char v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v16 = 0;
      _os_log_impl(&dword_1D4271000, v44, v15, "FMAPSConnectionHandler: Public APS Token was nil.", v16, 2u);
      MEMORY[0x1D9447730](v16, -1, -1);
    }
    os_log_t v17 = v44;
  }
  else
  {
    uint64_t v42 = v11;
    os_log_t v44 = v10;
    unint64_t v18 = (void *)sub_1D44694C8();
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    unint64_t v43 = v8;
    uint64_t v19 = sub_1D4469928();
    sub_1D42D7FAC(v19, (uint64_t)qword_1EBD83228);
    id v20 = v18;
    uint64_t v21 = sub_1D44698F8();
    os_log_type_t v22 = sub_1D446A038();
    if (os_log_type_enabled(v21, v22))
    {
      long long v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v41 = v6;
      uint64_t v39 = (void *)v24;
      *(_DWORD *)long long v23 = 138412290;
      aBlock[0] = v20;
      id v25 = v20;
      uint64_t v40 = v13;
      uint64_t v26 = v3;
      id v27 = v25;
      sub_1D446A188();
      uint64_t v28 = v39;
      *uint64_t v39 = v20;

      uint64_t v3 = v26;
      uint64_t v13 = v40;
      _os_log_impl(&dword_1D4271000, v21, v22, "FMAPSConnectionHandler: Public APS Token received %@.", v23, 0xCu);
      sub_1D42D5DA0(&qword_1EBD7E830);
      swift_arrayDestroy();
      uint64_t v6 = v41;
      MEMORY[0x1D9447730](v28, -1, -1);
      MEMORY[0x1D9447730](v23, -1, -1);
    }
    else
    {
    }
    uint64_t v29 = v20;
    id v30 = objc_msgSend(v20, sel_fm_hexString);
    uint64_t v31 = sub_1D4469B38();
    uint64_t v33 = v32;

    unint64_t v34 = (void *)swift_allocObject();
    v34[2] = v3;
    v34[3] = v31;
    v34[4] = v33;
    aBlock[4] = sub_1D42E5438;
    void aBlock[5] = v34;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D42BD950;
    aBlock[3] = &unk_1F2C0DC70;
    uint64_t v35 = _Block_copy(aBlock);
    id v36 = v3;
    sub_1D4469988();
    uint64_t v45 = MEMORY[0x1E4FBC860];
    sub_1D42C6224((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    uint64_t v37 = v43;
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v13, v37, v35);
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v37, v5);
    (*(void (**)(char *, os_log_t))(v42 + 8))(v13, v44);
    swift_release();
  }
}

void sub_1D42967D0()
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1D4469928();
  sub_1D42D7FAC(v0, (uint64_t)qword_1EBD83228);
  uint64_t v1 = sub_1D44698F8();
  os_log_type_t v2 = sub_1D446A038();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1D4271000, v1, v2, "FMIPRefreshingController: refreshTimerFired", v3, 2u);
    MEMORY[0x1D9447730](v3, -1, -1);
  }

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    *(unsigned char *)(v6 + 24) = 1;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_1D42E4A40;
    *(void *)(v7 + 24) = v6;
    aBlock[4] = sub_1D42AEE34;
    void aBlock[5] = v7;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D42AEDE4;
    aBlock[3] = &unk_1F2C0FE70;
    id v8 = _Block_copy(aBlock);
    uint64_t v9 = _Block_copy(v8);
    uint64_t v10 = qword_1EBD7E6F0;
    swift_retain();
    swift_retain();
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_1EBD7E6E8;
    swift_unknownObjectRetain();
    uint64_t v12 = _os_activity_create(&dword_1D4271000, "FMIPRefreshingController.refresh", v11, OS_ACTIVITY_FLAG_DEFAULT);
    swift_unknownObjectRelease();
    uint64_t v13 = _Block_copy(v9);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_1D42AEE74;
    *(void *)(v15 + 24) = v14;
    v18[4] = sub_1D42AEE88;
    v18[5] = v15;
    v18[0] = MEMORY[0x1E4F143A8];
    v18[1] = 1107296256;
    void v18[2] = sub_1D42AEDE4;
    v18[3] = &unk_1F2C0FEE8;
    char v16 = _Block_copy(v18);
    swift_retain();
    swift_release();
    os_activity_apply(v12, v16);
    _Block_release(v16);
    LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    _Block_release(v9);
    swift_unknownObjectRelease();
    _Block_release(v8);
    if (v16)
    {
      __break(1u);
    }
    else
    {
      swift_release();
      swift_release();
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1D4296BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1D4469958();
  uint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v42 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D44699B8();
  uint64_t v43 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v41 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v40 = a4;
  uint64_t v12 = sub_1D4469928();
  uint64_t v13 = sub_1D42D7FAC(v12, (uint64_t)qword_1EBD83228);
  swift_retain();
  v38[1] = v13;
  uint64_t v14 = sub_1D44698F8();
  os_log_type_t v15 = sub_1D446A038();
  if (os_log_type_enabled(v14, v15))
  {
    char v16 = (uint8_t *)swift_slowAlloc();
    v38[0] = a2;
    *(_DWORD *)char v16 = 134217984;
    swift_beginAccess();
    uint64_t aBlock = *(void *)(*(void *)(a1 + 16) + 16);
    a2 = v38[0];
    sub_1D446A188();
    uint64_t v17 = a1;
    swift_release();
    _os_log_impl(&dword_1D4271000, v14, v15, "FMIPManager: unknownItems updating model with unknownItems %ld", v16, 0xCu);
    MEMORY[0x1D9447730](v16, -1, -1);
  }
  else
  {

    uint64_t v17 = a1;
    swift_release();
  }
  uint64_t v18 = *(void *)(a2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager);
  swift_beginAccess();
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = *(void *)(v18 + 296);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v21 = sub_1D42E23D4(v19, v20);
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v22 = v40;
    sub_1D42972D4(a3);
    long long v23 = sub_1D44698F8();
    os_log_type_t v24 = sub_1D446A038();
    if (os_log_type_enabled(v23, v24))
    {
      id v25 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v25 = 67109120;
      LODWORD(aBlock) = a3 == 0;
      sub_1D446A188();
      sub_1D42E2C6C(a3);
      _os_log_impl(&dword_1D4271000, v23, v24, "FMIPManager: no refresh required, calling completion if needed isCompletionBlockNil %{BOOL}d", v25, 8u);
      MEMORY[0x1D9447730](v25, -1, -1);
    }
    else
    {
      sub_1D42E2C6C(a3);
    }
    uint64_t v32 = a3;

    sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7E860);
    uint64_t v33 = (void *)sub_1D446A098();
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v32;
    *(void *)(v34 + 24) = v22;
    uint64_t v50 = sub_1D42E799C;
    uint64_t v51 = (void *)v34;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v47 = 1107296256;
    uint64_t v48 = sub_1D42BD950;
    id v49 = &unk_1F2C0C170;
    uint64_t v35 = _Block_copy(&aBlock);
    sub_1D42972D4(v32);
    swift_release();
    id v36 = v41;
    sub_1D4469988();
    uint64_t aBlock = MEMORY[0x1E4FBC860];
    sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    uint64_t v37 = v42;
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v36, v37, v35);
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v36, v44);
  }
  else
  {
    *(void *)(v18 + 296) = v19;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v26 = (void *)swift_allocObject();
    void v26[2] = a2;
    v26[3] = v17;
    uint64_t v27 = v40;
    v26[4] = a3;
    v26[5] = v27;
    uint64_t v50 = sub_1D438B7D4;
    uint64_t v51 = v26;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v47 = 1107296256;
    uint64_t v48 = sub_1D42BD950;
    id v49 = &unk_1F2C0C120;
    uint64_t v28 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    sub_1D42972D4(a3);
    uint64_t v29 = v41;
    sub_1D4469988();
    uint64_t v45 = MEMORY[0x1E4FBC860];
    sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    id v30 = v42;
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v29, v30, v28);
    _Block_release(v28);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v30, v8);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v44);
    return swift_release();
  }
}

uint64_t sub_1D42972D4(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1D42972E4(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1D4469928();
    sub_1D42D7FAC(v6, (uint64_t)qword_1EBD83228);
    uint64_t v7 = sub_1D44698F8();
    os_log_type_t v8 = sub_1D446A038();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1D4271000, v7, v8, "FMIPRefreshingController: initClientRequest completed", v9, 2u);
      MEMORY[0x1D9447730](v9, -1, -1);
    }

    if (a1)
    {
      uint64_t v10 = *(void *)(a1 + 24);
      if (v10)
      {
        uint64_t v11 = *(void *)(v10 + 24);
        uint64_t v12 = *(void *)(v10 + 32);
        uint64_t v13 = *(void *)(v10 + 40);
        char v14 = *(unsigned char *)(v10 + 48);
        char v15 = *(unsigned char *)(v10 + 49);
        char v16 = *(unsigned char *)(v10 + 50);
        char v17 = *(unsigned char *)(v10 + 51);
        uint64_t v18 = *(void *)(v10 + 56);
        uint64_t v19 = *(void *)(v10 + 64);
        uint64_t v20 = *(void *)(v10 + 72);
        uint64_t v21 = *(void *)(v10 + 80);
        uint64_t v22 = *(void *)(v10 + 88);
        uint64_t v23 = *(void *)(v10 + 96);
        v43[0] = *(void *)(v10 + 16);
        v43[1] = v11;
        v43[2] = v12;
        v43[3] = v13;
        char v44 = v14;
        char v45 = v15;
        char v46 = v16;
        char v47 = v17;
        uint64_t v48 = v18;
        uint64_t v49 = v19;
        uint64_t v50 = v20;
        uint64_t v51 = v21;
        uint64_t v52 = v22;
        uint64_t v53 = v23;
        uint64_t v24 = *(void *)(a1 + 16);
        uint64_t v25 = *(void *)(v5 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_ownerPhoneNumber + 8);
        uint64_t v41 = *(void *)(v5 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_ownerPhoneNumber);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D42890DC(v43, v24, v41, v25, (uint64_t)&v54);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v26 = v54;
        uint64_t v40 = v56;
        uint64_t v42 = *((void *)&v54 + 1);
        char v27 = v58;
        char v28 = v59;
        char v36 = v60;
        char v37 = v57;
        uint64_t v29 = v62;
        uint64_t v30 = v64;
        uint64_t v34 = v63;
        uint64_t v35 = v61;
        uint64_t v31 = v65;
        uint64_t v38 = v55;
        uint64_t v39 = v66;
        if (MEMORY[0x1D9447840](v5 + 32))
        {
          *(void *)&long long v54 = v26;
          *((void *)&v54 + 1) = v42;
          uint64_t v55 = v38;
          uint64_t v56 = v40;
          char v57 = v37;
          char v58 = v27;
          char v59 = v28;
          char v60 = v36;
          uint64_t v61 = v35;
          uint64_t v62 = v29;
          uint64_t v63 = v34;
          uint64_t v64 = v30;
          uint64_t v65 = v31;
          uint64_t v66 = v39;
          uint64_t v32 = *(void *)(v10 + 104);
          swift_bridgeObjectRetain();
          sub_1D428B5B0(&v54, v32);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_retain();
      }
      if (MEMORY[0x1D9447840](v5 + 32))
      {
        if (*(void *)(a1 + 56)) {
          uint64_t v33 = *(void *)(a1 + 56);
        }
        else {
          uint64_t v33 = MEMORY[0x1E4FBC860];
        }
        swift_bridgeObjectRetain();
        sub_1D428DC80(v33);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      if (MEMORY[0x1D9447840](v5 + 32))
      {
        sub_1D4289D80();
        swift_unknownObjectRelease();
      }
      if (*(unsigned char *)(a1 + 40) != 1 || !MEMORY[0x1D9447840](v5 + 32))
      {
        swift_release();
        goto LABEL_27;
      }
      sub_1D4388B8C();
      swift_release();
    }
    else
    {
      if (!MEMORY[0x1D9447840](v5 + 32))
      {
LABEL_27:
        *(unsigned char *)(v5 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_isInitializing) = 0;
        return swift_release();
      }
      sub_1D4388D2C(a2);
    }
    swift_unknownObjectRelease();
    goto LABEL_27;
  }
  return result;
}

void sub_1D4297700(void *a1, void *a2)
{
  unsigned __int8 v77 = a2;
  uint64_t v74 = sub_1D4469838();
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v76 = &v65[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1D44698B8();
  uint64_t v75 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v78 = &v65[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1D42D5DA0(&qword_1EA6CA5A0);
  MEMORY[0x1F4188790](v6 - 8);
  unsigned __int8 v80 = &v65[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v81 = sub_1D42D5DA0(&qword_1EA6CA5A8);
  uint64_t v79 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v83 = &v65[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1D4469498();
  uint64_t v84 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v65[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v82 = v4;
  uint64_t v12 = sub_1D4469928();
  uint64_t v85 = sub_1D42D7FAC(v12, (uint64_t)qword_1EBD83228);
  uint64_t v13 = sub_1D44698F8();
  os_log_type_t v14 = sub_1D446A038();
  if (os_log_type_enabled(v13, v14))
  {
    char v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v15 = 0;
    _os_log_impl(&dword_1D4271000, v13, v14, "FMDiskIO: read from disk", v15, 2u);
    MEMORY[0x1D9447730](v15, -1, -1);
  }

  id v16 = objc_msgSend(self, sel_defaultManager);
  uint64_t v17 = a1[3];
  unint64_t v18 = a1[4];
  uint64_t v20 = a1[5];
  uint64_t v19 = a1[6];
  uint64_t v87 = v17;
  unint64_t v88 = v18;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  uint64_t v21 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  unsigned __int8 v22 = objc_msgSend(v16, sel_fileExistsAtPath_, v21);

  if (v22)
  {
    int64_t v70 = a1;
    uint64_t v87 = v17;
    unint64_t v88 = v18;
    swift_bridgeObjectRetain();
    sub_1D4469C08();
    sub_1D4469408();
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_1D44694A8();
    unint64_t v29 = v28;
    uint64_t v30 = v19;
    unint64_t v68 = v18;
    unint64_t v69 = 0;
    uint64_t v67 = v17;
    (*(void (**)(unsigned char *, uint64_t))(v84 + 8))(v11, v9);
    uint64_t v31 = v70;
    swift_retain();
    sub_1D42DD034(v27, v29);
    swift_retain();
    sub_1D42DD034(v27, v29);
    uint64_t v32 = sub_1D44698F8();
    os_log_type_t v33 = sub_1D446A038();
    int v34 = v33;
    BOOL v35 = os_log_type_enabled(v32, v33);
    unint64_t v36 = v29;
    uint64_t v37 = v27;
    uint64_t v72 = v20;
    uint64_t v71 = v30;
    if (v35)
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v84 = swift_slowAlloc();
      uint64_t v86 = v84;
      *(_DWORD *)uint64_t v38 = 136315394;
      uint64_t v87 = v67;
      unint64_t v88 = v68;
      swift_bridgeObjectRetain();
      int v66 = v34;
      uint64_t v39 = v32;
      uint64_t v37 = v27;
      unint64_t v36 = v29;
      sub_1D4469C08();
      uint64_t v87 = sub_1D42CB9EC(v87, v88, &v86);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2080;
      uint64_t v40 = sub_1D44694B8();
      uint64_t v87 = sub_1D42CB9EC(v40, v41, &v86);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D42DCFDC(v27, v29);
      sub_1D42DCFDC(v27, v29);
      _os_log_impl(&dword_1D4271000, v32, (os_log_type_t)v66, "FMDiskIO: file: %s data: %s", (uint8_t *)v38, 0x16u);
      uint64_t v42 = v84;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v42, -1, -1);
      MEMORY[0x1D9447730](v38, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_1D42DCFDC(v27, v29);
      sub_1D42DCFDC(v27, v29);
    }
    uint64_t v43 = v83;
    uint64_t v44 = (uint64_t)v80;
    uint64_t v45 = v81;
    uint64_t v46 = v79;
    sub_1D4469308();
    swift_allocObject();
    sub_1D44692F8();
    sub_1D42A3A74((uint64_t)v31 + *(void *)(*v31 + 128), v44, &qword_1EA6CA5A0);
    int v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45);
    uint64_t v48 = v82;
    if (v47 == 1)
    {
      sub_1D4276C3C(v44, &qword_1EA6CA5A0);
      sub_1D42D5DA0(&qword_1EA6CA5B0);
      sub_1D439E09C((unint64_t *)&unk_1EA6CA5B8, &qword_1EA6CA5B0, (void (*)(void))sub_1D42E7E24);
      uint64_t v49 = v69;
      sub_1D44692E8();
      if (!v49)
      {
        sub_1D42DCFDC(v37, v36);
        swift_release();
LABEL_16:
        *unsigned __int8 v77 = v87;
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      sub_1D4276C98(v44, (uint64_t)v43, &qword_1EA6CA5A8);
      sub_1D42AAE70(&qword_1EA6CA5C8, MEMORY[0x1E4F61A20]);
      uint64_t v50 = v78;
      uint64_t v49 = v69;
      sub_1D44692E8();
      if (!v49)
      {
        uint64_t v84 = v37;
        uint64_t v51 = v76;
        sub_1D4469848();
        uint64_t v52 = sub_1D44698A8();
        unint64_t v54 = v53;
        (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v51, v74);
        sub_1D42D5DA0(&qword_1EA6CA5B0);
        sub_1D439E09C((unint64_t *)&unk_1EA6CA5B8, &qword_1EA6CA5B0, (void (*)(void))sub_1D42E7E24);
        sub_1D44692E8();
        uint64_t v55 = (void (**)(unsigned char *, uint64_t))(v75 + 8);
        swift_release();
        sub_1D42DCFDC(v52, v54);
        sub_1D42DCFDC(v84, v36);
        (*v55)(v50, v48);
        sub_1D4276C3C((uint64_t)v83, &qword_1EA6CA5A8);
        goto LABEL_16;
      }
      sub_1D4276C3C((uint64_t)v43, &qword_1EA6CA5A8);
    }
    swift_release();
    swift_retain();
    id v56 = v49;
    swift_retain();
    id v57 = v49;
    char v58 = sub_1D44698F8();
    os_log_type_t v59 = sub_1D446A018();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc();
      uint64_t v84 = v37;
      uint64_t v61 = v60;
      uint64_t v62 = swift_slowAlloc();
      uint64_t v86 = v62;
      *(_DWORD *)uint64_t v61 = 136315394;
      swift_getErrorValue();
      uint64_t v63 = sub_1D446A7D8();
      uint64_t v87 = sub_1D42CB9EC(v63, v64, &v86);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      *(_WORD *)(v61 + 12) = 2080;
      uint64_t v87 = v67;
      unint64_t v88 = v68;
      swift_bridgeObjectRetain();
      sub_1D4469C08();
      uint64_t v87 = sub_1D42CB9EC(v87, v88, &v86);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v58, v59, "FMDiskIO: Could not decode the disk archive: %s, %s", (uint8_t *)v61, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v62, -1, -1);
      MEMORY[0x1D9447730](v61, -1, -1);

      sub_1D42DCFDC(v84, v36);
      return;
    }
    sub_1D42DCFDC(v37, v36);
  }
  else
  {
    uint64_t v71 = v19;
    uint64_t v72 = v20;
    swift_retain_n();
    uint64_t v23 = sub_1D44698F8();
    os_log_type_t v24 = sub_1D446A018();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v86 = v26;
      uint64_t v87 = v17;
      *(_DWORD *)uint64_t v25 = 136315138;
      unint64_t v88 = v18;
      swift_bridgeObjectRetain();
      sub_1D4469C08();
      uint64_t v87 = sub_1D42CB9EC(v87, v88, &v86);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v23, v24, "FMDiskIO: Disk archive does not exist at: %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v26, -1, -1);
      MEMORY[0x1D9447730](v25, -1, -1);

      return;
    }
  }
  swift_release_n();
}

void sub_1D42985E8(char *a1)
{
  unint64_t v28 = a1;
  uint64_t v27 = sub_1D446A088();
  uint64_t v1 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D446A068();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1D44699B8();
  MEMORY[0x1F4188790](v5 - 8);
  void v26[2] = sub_1D4469B38();
  v26[3] = sub_1D4469B38();
  v26[1] = sub_1D42AADA4();
  sub_1D4469988();
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_1D42C6224((unint64_t *)&qword_1EBD7FDB0, MEMORY[0x1E4FBCC10]);
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FDA0, (uint64_t *)&unk_1EBD7FD90);
  sub_1D446A1F8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v27);
  uint64_t v6 = (void *)sub_1D446A0C8();
  id v7 = objc_allocWithZone(MEMORY[0x1E4F4E1E8]);
  uint64_t v8 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_1D4469B08();
  uint64_t v10 = v28;
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v7, sel_initWithEnvironmentName_namedDelegatePort_queue_, v8, v9, v6);

  uint64_t v12 = &off_1F2C0DB28;
  uint64_t v13 = &v10[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_connection];
  if (!v11) {
    uint64_t v12 = 0;
  }
  *(void *)uint64_t v13 = v11;
  *((void *)v13 + 1) = v12;
  swift_unknownObjectRelease();
  if (*(void *)v13)
  {
    uint64_t v14 = *((void *)v13 + 1);
    uint64_t ObjectType = swift_getObjectType();
    id v16 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    swift_unknownObjectRetain();
    uint64_t v17 = v10;
    v16(v10, ObjectType, v14);
    swift_unknownObjectRelease();
  }
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1D4469928();
  sub_1D42D7FAC(v18, (uint64_t)qword_1EBD83228);
  uint64_t v19 = v10;
  uint64_t v20 = sub_1D44698F8();
  os_log_type_t v21 = sub_1D446A038();
  if (os_log_type_enabled(v20, v21))
  {
    unsigned __int8 v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v30 = v23;
    *(_DWORD *)unsigned __int8 v22 = 136315138;
    uint64_t v24 = *(void *)&v19[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_topic];
    unint64_t v25 = *(void *)&v19[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_topic + 8];
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1D42CB9EC(v24, v25, &v30);
    sub_1D446A188();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v20, v21, "FMAPSConnectionHandler: initialized with default connection for topic %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v23, -1, -1);
    MEMORY[0x1D9447730](v22, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1D4298AA4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D4469928();
  sub_1D42D7FAC(v7, (uint64_t)qword_1EBD83228);
  uint64_t v8 = sub_1D44698F8();
  os_log_type_t v9 = sub_1D446A038();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v32[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v12 = sub_1D4469B68();
    sub_1D42CB9EC(v12, v13, v32);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v8, v9, "FMIPDataManager: Updating items from source: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v11, -1, -1);
    MEMORY[0x1D9447730](v10, -1, -1);
  }

  swift_beginAccess();
  uint64_t v14 = *(void *)(v4 + 280);
  swift_bridgeObjectRetain();
  char v15 = sub_1D4298E70(a1, v14);
  swift_bridgeObjectRelease();
  char v16 = v15 ^ 1 | a3;
  if (v16)
  {
    *(void *)(v4 + 280) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v17 = *(void *)(v4 + 280);
    uint64_t v19 = *(void *)(v4 + 184);
    uint64_t v18 = *(void *)(v4 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1D439D0C0(v17, v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v4 + 280) = v20;
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v22 = sub_1D4399DC8(v21, v4);
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v4 + 280) = v22;
    swift_bridgeObjectRelease();
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_1D438FCA4(v23);
    swift_bridgeObjectRelease();
    *(void *)(v4 + 280) = v24;
    swift_bridgeObjectRelease();
    unint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v26 = sub_1D42801AC(v25);
    swift_bridgeObjectRelease();
    *(void *)(v4 + 288) = v26;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    unint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v28 = sub_1D42B9654(v27);
    swift_bridgeObjectRelease();
    *(void *)(v4 + 80) = v28;
    swift_bridgeObjectRelease();
    if (MEMORY[0x1D9447840](v4 + 32))
    {
      uint64_t v29 = *(void *)(v4 + 80);
      swift_bridgeObjectRetain();
      sub_1D428CE28(v4, v29);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    if (*(unsigned char *)(v4 + 24) == 1 && *(void *)(v4 + 312))
    {
      swift_retain();
      uint64_t v30 = swift_bridgeObjectRetain();
      sub_1D428ABC4(v30, (uint64_t)&unk_1F2C0CA60, (uint64_t)sub_1D439EC7C, (uint64_t)&unk_1F2C0CA78);
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  return v16 & 1;
}

uint64_t sub_1D4298E70(uint64_t a1, uint64_t a2)
{
  return sub_1D42C08D8(a1, a2, (uint64_t (*)(void))type metadata accessor for FMIPItem, (uint64_t (*)(void))type metadata accessor for FMIPItem, (uint64_t (*)(char *, char *))_s8FMIPCore8FMIPItemV2eeoiySbAC_ACtFZ_0, (uint64_t (*)(void))type metadata accessor for FMIPItem);
}

uint64_t sub_1D4298EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D4298EEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4298EEC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x63616542666C6573 && a2 == 0xED0000676E696E6FLL || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6169727564 && a2 == 0xE600000000000000 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xE900000000000079 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701602664 && a2 == 0xE400000000000000 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E69466C61636F6CLL && a2 == 0xED0000656C626164 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4D6C617574726976 && a2 == 0xEF65636976654465)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1D446A758();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1D4299224(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v22 = a1;
  uint64_t v3 = sub_1D446A088();
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v19 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1D446A068();
  MEMORY[0x1F4188790](v18);
  uint64_t v5 = sub_1D44699B8();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1D44695E8();
  uint64_t v6 = MEMORY[0x1E4FBC868];
  *(void *)(v1 + qword_1EA6CB1F8) = MEMORY[0x1E4FBC868];
  *(void *)(v1 + qword_1EA6CB200) = v6;
  *(void *)(v1 + qword_1EA6CB208) = v6;
  *(void *)(v1 + qword_1EA6CB210) = 0;
  if (qword_1EA6C8F58 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D4469928();
  sub_1D42D7FAC(v7, (uint64_t)qword_1EA6E46D0);
  swift_retain_n();
  uint64_t v8 = sub_1D44698F8();
  os_log_type_t v9 = sub_1D446A038();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v24 = v11;
    uint64_t v12 = sub_1D446A918();
    uint64_t v23 = sub_1D42CB9EC(v12, v13, &v24);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v8, v9, "%s: initialized", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v11, -1, -1);
    MEMORY[0x1D9447730](v10, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F08]), sel_init);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_1D446A378();
  sub_1D4469C08();
  sub_1D446A918();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  char v15 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setName_, v15);

  objc_msgSend(v14, sel_setMaxConcurrentOperationCount_, 10);
  sub_1D42AADA4();
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_1D446A378();
  swift_bridgeObjectRelease();
  uint64_t v24 = 0xD000000000000022;
  unint64_t v25 = 0x80000001D4483660;
  sub_1D446A918();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D44699A8();
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_1D42C6224((unint64_t *)&qword_1EBD7FDB0, MEMORY[0x1E4FBCC10]);
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FDA0, (uint64_t *)&unk_1EBD7FD90);
  sub_1D446A1F8();
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v19, *MEMORY[0x1E4FBCC58], v21);
  uint64_t v16 = sub_1D446A0C8();
  *(void *)(v2 + qword_1EA6CB218) = v14;
  sub_1D4276C98(v22, v2 + qword_1EA6E49F8, (uint64_t *)&unk_1EBD7E560);
  *(void *)(v2 + qword_1EA6CB220) = v16;
  return v2;
}

void _s8FMIPCore13FMIPAnalyticsV31sendNotificationAuthLaunchEvent5eventyAA016FMIPNotificationefG0V_tFZ_0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  unint64_t v3 = sub_1D4274BFC(MEMORY[0x1E4FBC860]);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, v2);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v4, 0xD00000000000001CLL, 0x80000001D447ED70, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, v1);
  char v7 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v6, 0xD000000000000011, 0x80000001D447ED90, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)sub_1D4469B08();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v3;
  v11[4] = sub_1D4308610;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  void v11[2] = sub_1D4356EBC;
  v11[3] = &unk_1F2C05E40;
  uint64_t v10 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v10);
  swift_bridgeObjectRelease();
}

void sub_1D42999B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  char v7 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1D42C4FCC(a2, a3);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1D43D93E0(a5);
LABEL_7:
    uint64_t v20 = (void *)*v7;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1D4299B48(v17, a4 & 1, a5);
  unint64_t v22 = sub_1D42C4FCC(a2, a3);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_17:
    sub_1D446A7A8();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  uint64_t v20 = (void *)*v7;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v24 = (uint64_t *)(v20[6] + 16 * v14);
  *uint64_t v24 = a2;
  v24[1] = a3;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v25 = v20[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v27;

  swift_bridgeObjectRetain();
}

void sub_1D4299B3C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

uint64_t sub_1D4299B48(uint64_t a1, char a2, uint64_t *a3)
{
  id v4 = v3;
  uint64_t v6 = *v3;
  sub_1D42D5DA0(a3);
  char v39 = a2;
  uint64_t v7 = sub_1D446A4B8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  unint64_t v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    char v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          id v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    os_log_type_t v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    sub_1D446A828();
    sub_1D4469BC8();
    uint64_t result = sub_1D446A888();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *uint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  id v4 = v36;
  char v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v4 = v8;
  return result;
}

uint64_t sub_1D4299E54@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FMIPBeaconType.init(from:)(a1, a2);
}

void sub_1D4299E6C(void *a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, void (*a6)(void))
{
  unint64_t v101 = a6;
  unint64_t v100 = a5;
  v109[1] = *MEMORY[0x1E4F143B8];
  uint64_t v92 = sub_1D44698B8();
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  uint64_t v95 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v98 = a3;
  uint64_t v11 = sub_1D42D5DA0(a3);
  MEMORY[0x1F4188790](v11 - 8);
  char v13 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = a4;
  uint64_t v97 = sub_1D42D5DA0(a4);
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  uint64_t v94 = (uint64_t)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D4469498();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = a2;
  char v105 = 0;
  uint64_t v19 = self;
  id v20 = objc_msgSend(v19, sel_defaultManager);
  unint64_t v21 = (void *)a1[3];
  unint64_t v22 = a1[4];
  unint64_t v99 = a1;
  uint64_t v103 = v21;
  unint64_t v104 = v22;
  char v23 = (void *)sub_1D4469B08();
  unsigned __int8 v24 = objc_msgSend(v20, sel_fileExistsAtPath_isDirectory_, v23, &v105);

  if (v24) {
    goto LABEL_3;
  }
  id v25 = objc_msgSend(v19, sel_defaultManager);
  sub_1D4469408();
  char v26 = (void *)sub_1D4469428();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  id v107 = 0;
  unsigned __int8 v27 = objc_msgSend(v25, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v26, 1, 0, &v107);

  id v28 = v107;
  if (v27)
  {
LABEL_3:
    uint64_t v29 = v19;
    sub_1D4469338();
    swift_allocObject();
    uint64_t v30 = (uint64_t *)sub_1D4469328();
    sub_1D42D5DA0(v100);
    v101();
    unint64_t v31 = (unint64_t)v102;
    uint64_t v32 = sub_1D4469318();
    uint64_t v102 = (void *)v33;
    if (v31)
    {
      swift_release();
      id v34 = (void *)v31;
LABEL_20:
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v72 = sub_1D4469928();
      sub_1D42D7FAC(v72, (uint64_t)qword_1EBD83228);
      id v73 = v34;
      id v74 = v34;
      uint64_t v75 = sub_1D44698F8();
      os_log_type_t v76 = sub_1D446A018();
      if (os_log_type_enabled(v75, v76))
      {
        unsigned __int8 v77 = (uint8_t *)swift_slowAlloc();
        uint64_t v78 = (void *)swift_slowAlloc();
        id v107 = v78;
        *(_DWORD *)unsigned __int8 v77 = 136315138;
        swift_getErrorValue();
        uint64_t v79 = sub_1D446A7D8();
        v109[0] = sub_1D42CB9EC(v79, v80, (uint64_t *)&v107);
        sub_1D446A188();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D4271000, v75, v76, "FMDiskIO: Could not save objects to disk %s", v77, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v78, -1, -1);
        MEMORY[0x1D9447730](v77, -1, -1);
      }
      else
      {
      }
      return;
    }
    uint64_t v35 = (void (*)(void))v32;
    unint64_t v36 = v99;
    int64_t v37 = v98;
    sub_1D42A3A74((uint64_t)v36 + *(void *)(*v36 + 128), (uint64_t)v13, v98);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v13, 1, v97) == 1)
    {
      sub_1D4276C3C((uint64_t)v13, v37);
      unint64_t v101 = v35;
      uint64_t v38 = (void *)sub_1D44694C8();
      char v39 = (uint64_t *)v36[6];
      id v107 = v103;
      unint64_t v108 = v104;
      swift_bridgeObjectRetain();
      unint64_t v100 = v39;
      sub_1D4469C08();
      uint64_t v40 = (void *)sub_1D4469B08();
      swift_bridgeObjectRelease();
      unsigned __int8 v41 = objc_msgSend(v38, sel_writeToFile_atomically_, v40, 1);

      if (v41)
      {
LABEL_7:
        id v42 = objc_msgSend(v29, sel_defaultManager, v91);
        sub_1D42D5DA0(qword_1EBD7D9F8);
        uint64_t inited = swift_initStackObject();
        uint64_t v44 = (void **)MEMORY[0x1E4F28370];
        *(_OWORD *)(inited + 16) = xmmword_1D446E050;
        uint64_t v45 = *v44;
        *(void *)(inited + 32) = *v44;
        uint64_t v46 = (void *)*MEMORY[0x1E4F28358];
        type metadata accessor for FileProtectionType(0);
        *(void *)(inited + 64) = v47;
        *(void *)(inited + 40) = v46;
        id v48 = v45;
        id v49 = v46;
        sub_1D43AAA74(inited);
        type metadata accessor for FileAttributeKey(0);
        sub_1D42AAE70((unint64_t *)&unk_1EBD7D930, type metadata accessor for FileAttributeKey);
        uint64_t v50 = (void *)sub_1D4469A38();
        swift_bridgeObjectRelease();
        id v107 = v103;
        unint64_t v108 = v104;
        swift_bridgeObjectRetain();
        sub_1D4469C08();
        uint64_t v51 = (void *)sub_1D4469B08();
        swift_bridgeObjectRelease();
        id v107 = 0;
        LOBYTE(inited) = objc_msgSend(v42, sel_setAttributes_ofItemAtPath_error_, v50, v51, &v107);

        if ((inited & 1) == 0)
        {
          id v71 = v107;
          id v34 = (void *)sub_1D44693D8();

          swift_willThrow();
          sub_1D42DCFDC((uint64_t)v101, (unint64_t)v102);
          swift_release();
          goto LABEL_20;
        }
        uint64_t v52 = qword_1EBD80068;
        id v53 = v107;
        if (v52 != -1) {
          swift_once();
        }
        uint64_t v54 = sub_1D4469928();
        sub_1D42D7FAC(v54, (uint64_t)qword_1EBD83228);
        swift_retain_n();
        uint64_t v55 = sub_1D44698F8();
        os_log_type_t v56 = sub_1D446A038();
        if (!os_log_type_enabled(v55, v56))
        {
          swift_release();
          sub_1D42DCFDC((uint64_t)v101, (unint64_t)v102);

          swift_release_n();
          return;
        }
        id v57 = (uint8_t *)swift_slowAlloc();
        uint64_t v58 = swift_slowAlloc();
        unint64_t v98 = v30;
        uint64_t v59 = v58;
        v109[0] = v58;
        *(_DWORD *)id v57 = 136315138;
        id v107 = v103;
        unint64_t v108 = v104;
        swift_bridgeObjectRetain();
        sub_1D4469C08();
        id v107 = (id)sub_1D42CB9EC((uint64_t)v107, v108, v109);
        sub_1D446A188();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D4271000, v55, v56, "FMDiskIO: Successfully wrote object to disk @ %s", v57, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v59, -1, -1);
        MEMORY[0x1D9447730](v57, -1, -1);
LABEL_31:
        swift_release();
        sub_1D42DCFDC((uint64_t)v101, (unint64_t)v102);

        return;
      }
    }
    else
    {
      uint64_t v68 = (uint64_t)v13;
      unint64_t v69 = v93;
      sub_1D4276C98(v68, v94, v93);
      sub_1D4469878();
      sub_1D42AAE70(&qword_1EA6CA508, MEMORY[0x1E4F61A20]);
      uint64_t v70 = v92;
      uint64_t v81 = sub_1D4469318();
      unint64_t v83 = v82;
      unint64_t v101 = v35;
      uint64_t v84 = (void *)sub_1D44694C8();
      sub_1D42DCFDC(v81, v83);
      uint64_t v86 = (uint64_t *)v36[5];
      uint64_t v85 = (uint64_t *)v36[6];
      id v107 = v103;
      unint64_t v108 = v104;
      swift_bridgeObjectRetain();
      unint64_t v98 = v86;
      unint64_t v100 = v85;
      sub_1D4469C08();
      uint64_t v87 = (void *)sub_1D4469B08();
      swift_bridgeObjectRelease();
      LODWORD(v85) = objc_msgSend(v84, sel_writeToFile_atomically_, v87, 1);

      (*(void (**)(char *, uint64_t))(v91 + 8))(v95, v70);
      sub_1D4276C3C(v94, v69);
      if (v85) {
        goto LABEL_7;
      }
    }
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v88 = sub_1D4469928();
    sub_1D42D7FAC(v88, (uint64_t)qword_1EBD83228);
    uint64_t v55 = sub_1D44698F8();
    os_log_type_t v89 = sub_1D446A038();
    if (os_log_type_enabled(v55, v89))
    {
      uint64_t v90 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v90 = 0;
      _os_log_impl(&dword_1D4271000, v55, v89, "FMDiskIO: Could not save objects to disk", v90, 2u);
      MEMORY[0x1D9447730](v90, -1, -1);
    }
    goto LABEL_31;
  }
  uint64_t v60 = v28;
  uint64_t v61 = sub_1D44693D8();

  swift_willThrow();
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v62 = sub_1D4469928();
  sub_1D42D7FAC(v62, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v63 = sub_1D44698F8();
  os_log_type_t v64 = sub_1D446A038();
  if (os_log_type_enabled(v63, v64))
  {
    uint64_t v65 = (uint8_t *)swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    uint64_t v102 = (void *)v61;
    *(_DWORD *)uint64_t v65 = 136315138;
    v109[0] = v66;
    id v107 = v103;
    unint64_t v108 = v104;
    swift_bridgeObjectRetain();
    sub_1D4469C08();
    id v107 = (id)sub_1D42CB9EC((uint64_t)v107, v108, v109);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v63, v64, "FMDiskIO: Could not create directory for content: %s", v65, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v66, -1, -1);
    MEMORY[0x1D9447730](v65, -1, -1);
    uint64_t v67 = v102;
  }
  else
  {
    swift_release_n();
    uint64_t v67 = (void *)v61;
  }
}

uint64_t sub_1D429ACD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D4466EEC);
}

uint64_t sub_1D429ACE4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v17 = *(void *)(v3 + 64);
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v16 - v5;
  uint64_t v18 = v4;
  sub_1D4469E48();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v7 = sub_1D446A408();
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D4469928();
  sub_1D42D7FAC(v8, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1D44698F8();
  os_log_type_t v10 = sub_1D446A038();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 134217984;
    uint64_t v18 = MEMORY[0x1D9446180](v7, v2);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v9, v10, "FMImageCache: Preloading data for %ld requests.", v11, 0xCu);
    MEMORY[0x1D9447730](v11, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  if (!MEMORY[0x1D94461A0](v7, v2)) {
    return swift_bridgeObjectRelease();
  }
  for (uint64_t i = 0; ; ++i)
  {
    char v13 = sub_1D4469DF8();
    sub_1D4469DA8();
    if (v13)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * i, v2);
      uint64_t v14 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_15;
      }
      goto LABEL_10;
    }
    uint64_t result = sub_1D446A398();
    if (v17 != 8) {
      break;
    }
    uint64_t v18 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 16))(v6, &v18, v2);
    swift_unknownObjectRelease();
    uint64_t v14 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_15:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_10:
    sub_1D43A6458((uint64_t)v6, 0, 0);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    if (v14 == MEMORY[0x1D94461A0](v7, v2)) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D429B04C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v48 = a1;
  sub_1D42D5DA0(&qword_1EBD80058);
  MEMORY[0x1F4188790]();
  uint64_t v47 = (uint8_t *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1D446A088();
  uint64_t v49 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v44 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D446A068();
  MEMORY[0x1F4188790]();
  sub_1D44699B8();
  MEMORY[0x1F4188790]();
  uint64_t v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D4469688();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790]();
  os_log_type_t v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t *)(v2 + qword_1EBD7E7A8);
  swift_retain();
  sub_1D4469678();
  uint64_t v12 = sub_1D4469638();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *uint64_t v11 = v12;
  v11[1] = v14;
  uint64_t v15 = qword_1EBD7FC78;
  uint64_t v45 = qword_1EBD7FC78;
  sub_1D4469798();
  swift_allocObject();
  *(void *)(v2 + v15) = sub_1D4469788();
  uint64_t v43 = qword_1EBD7FC68;
  v42[4] = sub_1D42AADA4();
  sub_1D4469988();
  uint64_t v51 = MEMORY[0x1E4FBC860];
  v42[2] = sub_1D42C626C((unint64_t *)&qword_1EBD7FDB0, MEMORY[0x1E4FBCC10]);
  v42[1] = sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  v42[3] = sub_1D42BF5A0((unint64_t *)&qword_1EBD7FDA0, (uint64_t *)&unk_1EBD7FD90);
  sub_1D446A1F8();
  uint64_t v16 = *MEMORY[0x1E4FBCC58];
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 104);
  v49 += 104;
  uint64_t v18 = v44;
  uint64_t v19 = v46;
  v17(v44, v16, v46);
  v42[0] = v6;
  *(void *)(v2 + v43) = sub_1D446A0C8();
  uint64_t v43 = qword_1EBD7E7B0;
  sub_1D4469988();
  uint64_t v51 = MEMORY[0x1E4FBC860];
  sub_1D446A1F8();
  v17(v18, v16, v19);
  *(void *)(v2 + v43) = sub_1D446A0C8();
  *(void *)(v2 + qword_1EBD7FC80 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + qword_1EBD7FC70) = 0;
  sub_1D4469608();
  *(unsigned char *)(v2 + qword_1EBD831F0) = 0;
  *(void *)(v2 + qword_1EBD83198) = MEMORY[0x1E4FBC868];
  uint64_t v20 = qword_1EBD7E7B8;
  *(void *)(v2 + v20) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F97C78]), sel_init);
  swift_release();
  sub_1D42E822C(v48, (uint64_t)v47);
  swift_retain();
  uint64_t v21 = sub_1D4469808();
  uint64_t v22 = qword_1EBD80068;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1D4469928();
  sub_1D42D7FAC(v23, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  unsigned __int8 v24 = sub_1D44698F8();
  os_log_type_t v25 = sub_1D446A038();
  if (os_log_type_enabled(v24, v25))
  {
    char v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v49 = v27;
    *(_DWORD *)char v26 = 136315138;
    uint64_t v51 = v27;
    uint64_t v47 = v26 + 4;
    uint64_t v28 = *(void *)(v21 + qword_1EBD7E7A8);
    unint64_t v29 = *(void *)(v21 + qword_1EBD7E7A8 + 8);
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_1D427A0D0(0xCuLL, v28, v29);
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();
    uint64_t v37 = MEMORY[0x1D9445EF0](v30, v32, v34, v36);
    unint64_t v39 = v38;
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_1D42CB9EC(v37, v39, &v51);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v24, v25, "FMIPServerInteractionController<%s>.init", v26, 0xCu);
    uint64_t v40 = v49;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v40, -1, -1);
    MEMORY[0x1D9447730](v26, -1, -1);

    swift_release();
  }
  else
  {

    swift_release_n();
  }
  sub_1D4276C3C(v48, &qword_1EBD80058);
  return v21;
}

uint64_t initializeWithCopy for FMIPBeaconRefreshingPolicy(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D429B798(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1D4469B38();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t FMDiskIO.KeyPair.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v27 = sub_1D4469898();
  uint64_t v22 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  char v26 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1D4469868();
  uint64_t v25 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v28 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FMDiskIO.KeyPair.CodingKeys();
  swift_getWitnessTable();
  uint64_t v30 = sub_1D446A608();
  uint64_t v24 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v6 = (char *)&v20 - v5;
  uint64_t v7 = type metadata accessor for FMDiskIO.KeyPair();
  uint64_t v21 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v20 - v8;
  sub_1D42C26F4(a1, a1[3]);
  uint64_t v10 = (uint64_t)v31;
  sub_1D446A8C8();
  if (v10) {
    return sub_1D42BEC64((uint64_t)a1);
  }
  uint64_t v31 = a1;
  uint64_t v11 = v9;
  uint64_t v13 = v24;
  uint64_t v12 = v25;
  uint64_t v14 = v26;
  uint64_t v15 = v27;
  char v33 = 0;
  sub_1D429BD8C(&qword_1EA6CBBD0, MEMORY[0x1E4F619F0]);
  sub_1D446A5D8();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v20 = v11;
  v16(v11, v28, v29);
  char v32 = 1;
  sub_1D429BD8C(qword_1EA6CBBD8, MEMORY[0x1E4F61A08]);
  sub_1D446A5D8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v30);
  uint64_t v17 = v20;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v20[*(int *)(v7 + 44)], v14, v15);
  uint64_t v18 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v23, v17, v7);
  sub_1D42BEC64((uint64_t)v31);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v17, v7);
}

uint64_t sub_1D429BC84()
{
  type metadata accessor for FMDiskIO.KeyPair();
  uint64_t result = sub_1D446A168();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D429BD44()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for FMDiskIO.KeyPair()
{
  return sub_1D429BD44();
}

uint64_t sub_1D429BD8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D429BDD4(unint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 80);
  swift_bridgeObjectRetain();
  char v6 = sub_1D429C178(a1, v5);
  swift_bridgeObjectRelease();
  char v7 = v6 ^ 1 | a2;
  if (v7)
  {
    unint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = sub_1D42801AC(v8);
    swift_bridgeObjectRelease();
    *(void *)(v2 + 288) = v9;
    swift_bridgeObjectRelease();
    unint64_t v10 = sub_1D42B9654(a1);
    uint64_t v11 = *(void *)(v2 + 80);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1D42BA8DC(v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v2 + 80) = v12;
    swift_bridgeObjectRelease();
    unint64_t v13 = *(void *)(v2 + 80);
    uint64_t v14 = *(void *)(v2 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1D42BA1A4(v13, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v2 + 80) = v15;
    swift_bridgeObjectRelease();
    unint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = sub_1D42B55C4(v16);
    swift_bridgeObjectRelease();
    *(void *)(v2 + 80) = v17;
    swift_bridgeObjectRelease();
    unint64_t v18 = *(void *)(v2 + 80);
    uint64_t v19 = *(void *)(v2 + 200);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1D42AD154(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v2 + 80) = v20;
    swift_bridgeObjectRelease();
    unint64_t v21 = *(void *)(v2 + 80);
    uint64_t v22 = *(void *)(v2 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1D42AC90C(v21, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v2 + 80) = v23;
    swift_bridgeObjectRelease();
    unint64_t v24 = *(void *)(v2 + 80);
    uint64_t v25 = *(void *)(v2 + 224);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1D42B8E0C(v24, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v2 + 80) = v26;
    swift_bridgeObjectRelease();
    unint64_t v27 = *(void *)(v2 + 80);
    uint64_t v28 = *(void *)(v2 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1D42AD994(v27, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v2 + 80) = v29;
    swift_bridgeObjectRelease();
    unint64_t v30 = *(void *)(v2 + 80);
    uint64_t v31 = *(void *)(v2 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1D439B084(v30, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v2 + 80) = v32;
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v33 = swift_bridgeObjectRetain();
    uint64_t v34 = sub_1D4399A44(v33, (void *)v2);
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v2 + 80) = v34;
    swift_bridgeObjectRelease();
    unint64_t v35 = *(void *)(v2 + 80);
    uint64_t v36 = *(void *)(v2 + 304);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1D439B9AC(v35, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v2 + 80) = v37;
    swift_bridgeObjectRelease();
    if ((*(unsigned char *)(v2 + 16) & 1) != 0 && *(unsigned char *)(v2 + 24) == 1 && *(void *)(v2 + 328))
    {
      swift_retain();
      uint64_t v38 = swift_bridgeObjectRetain();
      sub_1D428ABC4(v38, (uint64_t)&unk_1F2C0CB00, (uint64_t)sub_1D42E3180, (uint64_t)&unk_1F2C0CB18);
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  return v7 & 1;
}

uint64_t sub_1D429C178(uint64_t a1, uint64_t a2)
{
  return sub_1D42C08D8(a1, a2, (uint64_t (*)(void))type metadata accessor for FMIPDevice, (uint64_t (*)(void))type metadata accessor for FMIPDevice, (uint64_t (*)(char *, char *))static FMIPDevice.== infix(_:_:), (uint64_t (*)(void))type metadata accessor for FMIPDevice);
}

void sub_1D429C1CC(uint64_t a1)
{
  uint64_t v2 = sub_1D4469618();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EBD83228);
  char v7 = sub_1D44698F8();
  os_log_type_t v8 = sub_1D446A038();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1D4271000, v7, v8, "FMIPBeaconRefreshingController: Start Refreshing", v9, 2u);
    MEMORY[0x1D9447730](v9, -1, -1);
  }

  *(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_isRefreshing) = 1;
  sub_1D4283284();
  *(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_currentlyRefreshing) = 0;
  *(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_nextRefreshQueued) = 0;
  sub_1D4469548();
  uint64_t v10 = a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_lastRefreshTime;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 40))(v10, v5, v2);
  swift_endAccess();
  *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_callbackInterval) = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_initialCallbackInterval);
  sub_1D4287A0C();
  sub_1D42BE33C(0, 0);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = 0;
  v11[3] = 0;
  v11[4] = a1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1D444F6C0;
  *(void *)(v12 + 24) = v11;
  uint64_t v36 = sub_1D42AEE88;
  uint64_t v37 = v12;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v33 = 1107296256;
  uint64_t v34 = sub_1D42AEDE4;
  unint64_t v35 = &unk_1F2C13268;
  unint64_t v13 = _Block_copy(&aBlock);
  uint64_t v14 = _Block_copy(v13);
  uint64_t v15 = qword_1EBD7E6F0;
  swift_retain();
  swift_retain();
  if (v15 != -1) {
    swift_once();
  }
  unint64_t v16 = qword_1EBD7E6E8;
  swift_unknownObjectRetain();
  uint64_t v17 = _os_activity_create(&dword_1D4271000, "FMIPBeaconRefreshingController.refreshUnknownBeacons", v16, OS_ACTIVITY_FLAG_DEFAULT);
  swift_unknownObjectRelease();
  unint64_t v18 = _Block_copy(v14);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v18;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1D438C100;
  *(void *)(v20 + 24) = v19;
  v31[4] = sub_1D42AEE88;
  v31[5] = v20;
  v31[0] = MEMORY[0x1E4F143A8];
  v31[1] = 1107296256;
  v31[2] = sub_1D42AEDE4;
  v31[3] = &unk_1F2C132E0;
  unint64_t v21 = _Block_copy(v31);
  swift_retain();
  swift_release();
  os_activity_apply(v17, v21);
  _Block_release(v21);
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v14);
  swift_unknownObjectRelease();
  _Block_release(v13);
  if (v21)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      sub_1D42B0BC0(0, 0);
      sub_1D4446344();
      sub_1D42AB908();
      uint64_t v23 = OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_ownerSession;
      unint64_t v24 = *(void **)(a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_ownerSession);
      uint64_t v36 = sub_1D42E3764;
      uint64_t v37 = a1;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v33 = 1107296256;
      uint64_t v34 = sub_1D4276CFC;
      unint64_t v35 = &unk_1F2C13308;
      uint64_t v25 = _Block_copy(&aBlock);
      swift_retain();
      id v26 = v24;
      swift_release();
      objc_msgSend(v26, sel_clientConfigurationWithCompletion_, v25);
      _Block_release(v25);

      unint64_t v27 = *(void **)(a1 + v23);
      uint64_t v28 = swift_allocObject();
      swift_weakInit();
      uint64_t v36 = sub_1D42E3808;
      uint64_t v37 = v28;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v33 = 1107296256;
      uint64_t v34 = sub_1D42E1F5C;
      unint64_t v35 = &unk_1F2C13330;
      uint64_t v29 = _Block_copy(&aBlock);
      id v30 = v27;
      swift_release();
      objc_msgSend(v30, sel_startRefreshingSeparationMonitoringState_, v29);
      _Block_release(v29);

      return;
    }
  }
  __break(1u);
}

uint64_t sub_1D429C800()
{
  return sub_1D429C824();
}

uint64_t sub_1D429C824()
{
  uint64_t v1 = v0;
  v15[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = qword_1EA6C9D80;
  uint64_t v3 = *(void *)(v0 + qword_1EA6C9D80);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_1D433313C((void *)(v3 + 16), v15);
  uint64_t v4 = self;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  swift_release();
  uint64_t v5 = (void *)sub_1D4469A38();
  swift_bridgeObjectRelease();
  unsigned __int8 v6 = objc_msgSend(v4, sel_isValidJSONObject_, v5);

  if ((v6 & 1) == 0) {
    return 0;
  }
  uint64_t v7 = *(void *)(v1 + v2);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  sub_1D433313C((void *)(v7 + 16), v15);
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
  swift_release();
  os_log_type_t v8 = (void *)sub_1D4469A38();
  swift_bridgeObjectRelease();
  v15[0] = 0;
  id v9 = objc_msgSend(v4, sel_dataWithJSONObject_options_error_, v8, 0, v15);

  id v10 = v15[0];
  if (!v9)
  {
    uint64_t v12 = v10;
    unint64_t v13 = (void *)sub_1D44693D8();

    swift_willThrow();
    return 0;
  }
  uint64_t v11 = sub_1D44694E8();

  return v11;
}

Swift::Void __swiftcall FMIPManager.startRefreshing(subsystems:)(FMIPCore::FMIPManagerSubsystem subsystems)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v4 - 8);
  unsigned __int8 v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1D44699B8();
  uint64_t v7 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  id v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1D4469958();
  uint64_t v10 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v65 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D4469618();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = *(void *)subsystems.rawValue;
  uint64_t v16 = v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_stopRefreshTimestamp;
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v16, 1, v12))
  {
    LODWORD(v17) = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
    sub_1D44695A8();
    double v19 = v18;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    LODWORD(v17) = v19 > -60.0;
  }
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1D4469928();
  sub_1D42D7FAC(v20, (uint64_t)qword_1EBD83228);
  unint64_t v21 = sub_1D44698F8();
  os_log_type_t v22 = sub_1D446A038();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v59 = v6;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v64 = v10;
    uint64_t v25 = (uint8_t *)v24;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v61 = v9;
    int v27 = v17;
    uint64_t v17 = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    uint64_t aBlock = v26;
    if (v27) {
      uint64_t v28 = 0xD000000000000014;
    }
    else {
      uint64_t v28 = 0;
    }
    if (v27) {
      unint64_t v29 = 0x80000001D4480A30;
    }
    else {
      unint64_t v29 = 0xE000000000000000;
    }
    uint64_t v67 = sub_1D42CB9EC(v28, v29, &aBlock);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v21, v22, "FMIPManager: start refreshing %s", v25, 0xCu);
    swift_arrayDestroy();
    uint64_t v30 = v17;
    LOBYTE(v17) = v27;
    id v9 = v61;
    MEMORY[0x1D9447730](v30, -1, -1);
    uint64_t v31 = v25;
    uint64_t v10 = v64;
    MEMORY[0x1D9447730](v31, -1, -1);
  }

  uint64_t v32 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager);
  uint64_t v33 = *(void **)(v32 + 72);
  swift_retain();
  id v34 = v33;
  unint64_t v35 = v65;
  sub_1D4469948();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v32;
  *(unsigned char *)(v36 + 24) = v17;
  uint64_t v72 = sub_1D42E6134;
  uint64_t v73 = v36;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v69 = 1107296256;
  uint64_t v70 = sub_1D42BD950;
  id v71 = &unk_1F2C0AB58;
  uint64_t v37 = _Block_copy(&aBlock);
  swift_retain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v9, v35, v37);
  _Block_release(v37);

  uint64_t v38 = v63;
  uint64_t v60 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v61 = (char *)(v7 + 8);
  v60(v9, v63);
  unsigned __int8 v41 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v39 = v10 + 8;
  uint64_t v40 = v41;
  v41(v35, v66);
  swift_release();
  swift_release();
  char v42 = v62;
  if ((v62 & 1) != 0 && (*(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isItemsSnapshotMode) & 1) == 0)
  {
    uint64_t v43 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_refreshingController);
    if (v43)
    {
      dispatch_queue_t v58 = *(dispatch_queue_t *)(v43 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_refreshQueue);
      uint64_t v44 = swift_allocObject();
      *(void *)(v44 + 16) = sub_1D42E4A90;
      *(void *)(v44 + 24) = v43;
      uint64_t v72 = sub_1D42AEE88;
      uint64_t v73 = v44;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v69 = 1107296256;
      uint64_t v70 = sub_1D42AEDE4;
      id v71 = &unk_1F2C0AC48;
      uint64_t v45 = _Block_copy(&aBlock);
      swift_retain_n();
      swift_retain();
      swift_release();
      dispatch_sync(v58, v45);
      _Block_release(v45);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release_n();
      swift_release();
      if (isEscapingClosureAtFileLocation)
      {
        __break(1u);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isRefreshingDevices) = 1;
  }
  uint64_t v64 = v39;
  if ((v42 & 3) == 0
    || (*(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isDevicesSnapshotMode) & 1) != 0
    || (*(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isItemsSnapshotMode) & 1) != 0)
  {
    goto LABEL_24;
  }
  uint64_t v47 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconRefreshingController);
  uint64_t v48 = *(NSObject **)(v47 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshQueue);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = sub_1D42E3810;
  *(void *)(v49 + 24) = v47;
  uint64_t v72 = sub_1D42AEE88;
  uint64_t v73 = v49;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v69 = 1107296256;
  uint64_t v70 = sub_1D42AEDE4;
  id v71 = &unk_1F2C0ABD0;
  uint64_t v50 = _Block_copy(&aBlock);
  swift_retain_n();
  swift_retain();
  swift_release();
  dispatch_sync(v48, v50);
  _Block_release(v50);
  LOBYTE(v48) = swift_isEscapingClosureAtFileLocation();
  swift_release_n();
  swift_release();
  if ((v48 & 1) == 0)
  {
    uint64_t v51 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconSharingController);
    uint64_t v52 = sub_1D4469E88();
    uint64_t v53 = (uint64_t)v59;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v59, 1, 1, v52);
    uint64_t v54 = (void *)swift_allocObject();
    v54[2] = 0;
    v54[3] = 0;
    v54[4] = v51;
    swift_retain();
    sub_1D43733DC(v53, (uint64_t)&unk_1EA6CA2F0, (uint64_t)v54);
    swift_release();
    *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isRefreshingItems) = 1;
    swift_retain();
    sub_1D4282574();
    swift_release();
    objc_msgSend(*(id *)(*(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_locationController)+ OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_locationManager), sel_startUpdatingLocation);
    uint64_t v38 = v63;
LABEL_24:
    uint64_t v72 = sub_1D42E7A48;
    uint64_t v73 = v2;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v69 = 1107296256;
    uint64_t v70 = sub_1D42BD950;
    id v71 = &unk_1F2C0AB80;
    uint64_t v55 = _Block_copy(&aBlock);
    swift_retain();
    sub_1D4469988();
    uint64_t v67 = MEMORY[0x1E4FBC860];
    sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    os_log_type_t v56 = v65;
    uint64_t v57 = v66;
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v9, v56, v55);
    _Block_release(v55);
    v40(v56, v57);
    v60(v9, v38);
    swift_release();
    return;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1D429D47C(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = a1;
    swift_unknownObjectRetain();
    sub_1D446A1D8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
    id v5 = a1;
  }
  char v6 = CLLocation.isEqual(_:)((uint64_t)v8);

  sub_1D429D4F4((uint64_t)v8);
  return v6 & 1;
}

uint64_t sub_1D429D4F4(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD80050);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CLLocation.isEqual(_:)(uint64_t a1)
{
  uint64_t v3 = sub_1D4469618();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v34 - v8;
  sub_1D429D81C(a1, (uint64_t)v36);
  if (!v37)
  {
    sub_1D429D4F4((uint64_t)v36);
    goto LABEL_12;
  }
  sub_1D4275AD0(0, (unint64_t *)&qword_1EA6CA358);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    char v31 = 0;
    return v31 & 1;
  }
  id v10 = v35;
  objc_msgSend(v35, sel_coordinate);
  double v12 = v11;
  objc_msgSend(v1, sel_coordinate);
  if (v12 != v13) {
    goto LABEL_11;
  }
  objc_msgSend(v10, sel_coordinate);
  double v15 = v14;
  objc_msgSend(v1, sel_coordinate);
  if (v15 != v16) {
    goto LABEL_11;
  }
  objc_msgSend(v10, sel_altitude);
  double v18 = v17;
  objc_msgSend(v1, sel_altitude);
  if (v18 != v19) {
    goto LABEL_11;
  }
  objc_msgSend(v10, sel_course);
  double v21 = v20;
  objc_msgSend(v1, sel_course);
  if (v21 != v22
    || (objc_msgSend(v10, sel_horizontalAccuracy), double v24 = v23, objc_msgSend(v1, sel_horizontalAccuracy), v24 != v25)
    || (objc_msgSend(v10, sel_verticalAccuracy), double v27 = v26, objc_msgSend(v1, sel_verticalAccuracy), v27 != v28))
  {
LABEL_11:

    goto LABEL_12;
  }
  id v29 = objc_msgSend(v10, sel_timestamp);
  sub_1D44695D8();

  id v30 = objc_msgSend(v1, sel_timestamp);
  sub_1D44695D8();

  char v31 = sub_1D44695C8();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v4 + 8);
  v32(v7, v3);
  v32(v9, v3);
  return v31 & 1;
}

uint64_t sub_1D429D81C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD80050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1D429D884(void *a1, uint64_t *a2)
{
  uint64_t v87 = a2;
  uint64_t v84 = sub_1D4469838();
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v86 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D44698B8();
  uint64_t v85 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v88 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D42D5DA0(&qword_1EA6CA578);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1D42D5DA0(&qword_1EA6CA580);
  uint64_t v9 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  double v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D4469498();
  uint64_t v94 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  double v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v89 = v9;
  uint64_t v90 = v8;
  uint64_t v93 = v11;
  uint64_t v92 = v4;
  uint64_t v15 = sub_1D4469928();
  uint64_t v95 = sub_1D42D7FAC(v15, (uint64_t)qword_1EBD83228);
  double v16 = sub_1D44698F8();
  os_log_type_t v17 = sub_1D446A038();
  if (os_log_type_enabled(v16, v17))
  {
    double v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v18 = 0;
    _os_log_impl(&dword_1D4271000, v16, v17, "FMDiskIO: read from disk", v18, 2u);
    MEMORY[0x1D9447730](v18, -1, -1);
  }

  id v19 = objc_msgSend(self, sel_defaultManager);
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  uint64_t v22 = a1[5];
  uint64_t v23 = a1[6];
  *(void *)&long long v96 = v20;
  *((void *)&v96 + 1) = v21;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  double v24 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  unsigned __int8 v25 = objc_msgSend(v19, sel_fileExistsAtPath_, v24);

  if ((v25 & 1) == 0)
  {
    uint64_t v81 = v23;
    uint64_t v82 = v22;
    swift_retain_n();
    double v26 = sub_1D44698F8();
    os_log_type_t v27 = sub_1D446A018();
    if (os_log_type_enabled(v26, v27))
    {
      double v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v102 = v29;
      *(_DWORD *)double v28 = 136315138;
      *(void *)&long long v96 = v20;
      *((void *)&v96 + 1) = v21;
      swift_bridgeObjectRetain();
      sub_1D4469C08();
      *(void *)&long long v96 = sub_1D42CB9EC(v96, *((unint64_t *)&v96 + 1), &v102);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v26, v27, "FMDiskIO: Disk archive does not exist at: %s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v29, -1, -1);
      MEMORY[0x1D9447730](v28, -1, -1);

      return;
    }

    goto LABEL_25;
  }
  unint64_t v80 = a1;
  *(void *)&long long v96 = v20;
  *((void *)&v96 + 1) = v21;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  sub_1D4469408();
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_1D44694A8();
  unint64_t v32 = v31;
  uint64_t v33 = v20;
  uint64_t v78 = 0;
  uint64_t v79 = v21;
  (*(void (**)(char *, uint64_t))(v94 + 8))(v14, v12);
  uint64_t v34 = v80;
  swift_retain();
  sub_1D42DD034(v30, v32);
  swift_retain();
  sub_1D42DD034(v30, v32);
  id v35 = sub_1D44698F8();
  os_log_type_t v36 = sub_1D446A038();
  int v37 = v36;
  BOOL v38 = os_log_type_enabled(v35, v36);
  unint64_t v39 = v32;
  uint64_t v82 = v22;
  uint64_t v81 = v23;
  uint64_t v77 = v33;
  if (v38)
  {
    uint64_t v40 = swift_slowAlloc();
    uint64_t v94 = swift_slowAlloc();
    uint64_t v102 = v94;
    *(_DWORD *)uint64_t v40 = 136315394;
    int v76 = v37;
    *(void *)&long long v96 = v33;
    *((void *)&v96 + 1) = v79;
    swift_bridgeObjectRetain();
    os_log_t v75 = v35;
    unint64_t v39 = v32;
    sub_1D4469C08();
    *(void *)&long long v96 = sub_1D42CB9EC(v96, *((unint64_t *)&v96 + 1), &v102);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    uint64_t v41 = sub_1D44694B8();
    *(void *)&long long v96 = sub_1D42CB9EC(v41, v42, &v102);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42DCFDC(v30, v32);
    sub_1D42DCFDC(v30, v32);
    os_log_t v43 = v75;
    _os_log_impl(&dword_1D4271000, v75, (os_log_type_t)v76, "FMDiskIO: file: %s data: %s", (uint8_t *)v40, 0x16u);
    uint64_t v44 = v94;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v44, -1, -1);
    MEMORY[0x1D9447730](v40, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_1D42DCFDC(v30, v32);
    sub_1D42DCFDC(v30, v32);
  }
  uint64_t v45 = v92;
  uint64_t v46 = v91;
  uint64_t v47 = (uint64_t)v90;
  uint64_t v48 = v89;
  sub_1D4469308();
  swift_allocObject();
  sub_1D44692F8();
  sub_1D42A3A74((uint64_t)v34 + *(void *)(*v34 + 128), v47, &qword_1EA6CA578);
  int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v47, 1, v46);
  uint64_t v50 = (uint64_t)v93;
  if (v49 == 1)
  {
    sub_1D4276C3C(v47, &qword_1EA6CA578);
    sub_1D42E7E24();
    uint64_t v51 = v78;
    sub_1D44692E8();
    uint64_t v52 = v79;
    if (v51)
    {
      uint64_t v94 = v30;
      goto LABEL_18;
    }
    sub_1D42DCFDC(v30, v39);
    swift_release();
LABEL_20:
    uint64_t v54 = v101;
    uint64_t v55 = v87;
    uint64_t v56 = *v87;
    uint64_t v57 = v87[1];
    long long v58 = v97;
    *(_OWORD *)uint64_t v87 = v96;
    *((_OWORD *)v55 + 1) = v58;
    long long v59 = v99;
    *((_OWORD *)v55 + 2) = v98;
    *((_OWORD *)v55 + 3) = v59;
    *((_OWORD *)v55 + 4) = v100;
    v55[10] = v54;
    sub_1D42E7D9C(v56, v57);
    return;
  }
  sub_1D4276C98(v47, (uint64_t)v93, &qword_1EA6CA580);
  sub_1D42AAE70(&qword_1EA6CA5C8, MEMORY[0x1E4F61A20]);
  uint64_t v53 = v88;
  uint64_t v94 = v30;
  uint64_t v51 = v78;
  sub_1D44692E8();
  uint64_t v52 = v79;
  if (!v51)
  {
    uint64_t v60 = v86;
    sub_1D4469848();
    uint64_t v61 = v60;
    uint64_t v62 = sub_1D44698A8();
    unint64_t v64 = v63;
    (*(void (**)(char *, uint64_t))(v83 + 8))(v61, v84);
    sub_1D42E7E24();
    sub_1D44692E8();
    uint64_t v65 = (void (**)(char *, uint64_t))(v85 + 8);
    swift_release();
    sub_1D42DCFDC(v62, v64);
    sub_1D42DCFDC(v94, v39);
    (*v65)(v53, v45);
    sub_1D4276C3C((uint64_t)v93, &qword_1EA6CA580);
    goto LABEL_20;
  }
  sub_1D4276C3C(v50, &qword_1EA6CA580);
LABEL_18:
  swift_release();
  swift_retain();
  id v66 = v51;
  swift_retain();
  id v67 = v51;
  uint64_t v68 = sub_1D44698F8();
  os_log_type_t v69 = sub_1D446A018();
  if (os_log_type_enabled(v68, v69))
  {
    uint64_t v70 = swift_slowAlloc();
    uint64_t v71 = swift_slowAlloc();
    uint64_t v102 = v71;
    *(_DWORD *)uint64_t v70 = 136315394;
    swift_getErrorValue();
    uint64_t v72 = sub_1D446A7D8();
    *(void *)&long long v96 = sub_1D42CB9EC(v72, v73, &v102);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    *(_WORD *)(v70 + 12) = 2080;
    *(void *)&long long v96 = v77;
    *((void *)&v96 + 1) = v52;
    swift_bridgeObjectRetain();
    sub_1D4469C08();
    *(void *)&long long v96 = sub_1D42CB9EC(v96, *((unint64_t *)&v96 + 1), &v102);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v68, v69, "FMDiskIO: Could not decode the disk archive: %s, %s", (uint8_t *)v70, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v71, -1, -1);
    MEMORY[0x1D9447730](v70, -1, -1);

    sub_1D42DCFDC(v94, v39);
    return;
  }
  sub_1D42DCFDC(v94, v39);

LABEL_25:
  swift_release_n();
}

void *FMImageCache.init(converter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v20 = sub_1D446A088();
  uint64_t v4 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D446A068();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1D44699B8();
  MEMORY[0x1F4188790](v8 - 8);
  v2[2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F08]), sel_init);
  v19[1] = sub_1D42AADA4();
  sub_1D44699A8();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1D42DDB1C((unint64_t *)&qword_1EBD7FDB0, MEMORY[0x1E4FBCC10]);
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FDA0, (uint64_t *)&unk_1EBD7FD90);
  sub_1D446A1F8();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCC58], v20);
  v2[3] = sub_1D446A0C8();
  swift_getAssociatedConformanceWitness();
  v2[4] = sub_1D4469A28();
  sub_1D42DB55C(&qword_1EA6C9360);
  sub_1D446A8A8();
  swift_getFunctionTypeMetadata1();
  sub_1D4469E48();
  v2[5] = sub_1D4469A18();
  v2[6] = sub_1D4469A18();
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D4469928();
  sub_1D42D7FAC(v9, (uint64_t)qword_1EBD83228);
  uint64_t v10 = sub_1D44698F8();
  os_log_type_t v11 = sub_1D446A038();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_1D4271000, v10, v11, "FMImageCache: initialized", v12, 2u);
    MEMORY[0x1D9447730](v12, -1, -1);
  }

  uint64_t v13 = v22;
  v3[7] = v21;
  v3[8] = v13;
  double v14 = (void *)v3[2];
  swift_retain();
  id v15 = v14;
  double v16 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setName_, v16);

  id v17 = (id)v3[2];
  objc_msgSend(v17, sel_setMaxConcurrentOperationCount_, 3);

  swift_release();
  return v3;
}

uint64_t _s8FMIPCore27FMIPDeviceImageCacheRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  int v6 = *(unsigned __int8 *)(a1 + 48);
  double v7 = *(double *)(a1 + 56);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  int v12 = *(unsigned __int8 *)(a2 + 48);
  char v23 = *(unsigned char *)(a2 + 49);
  unsigned __int8 v24 = *(unsigned char *)(a1 + 49);
  double v13 = *(double *)(a2 + 56);
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v14 = sub_1D446A758();
    uint64_t result = 0;
    if ((v14 & 1) == 0) {
      return result;
    }
  }
  if (v2 != v8 || v4 != v9)
  {
    char v16 = sub_1D446A758();
    uint64_t result = 0;
    if ((v16 & 1) == 0) {
      return result;
    }
  }
  if (v5)
  {
    if (v10)
    {
      if (v3 != v11 || v5 != v10)
      {
        char v17 = sub_1D446A758();
        uint64_t result = 0;
        if ((v17 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_15;
    }
    return 0;
  }
  if (v10) {
    return 0;
  }
LABEL_15:
  if (v6) {
    uint64_t v18 = 0x786F626F666E69;
  }
  else {
    uint64_t v18 = 0x696C656372756F73;
  }
  if (v6) {
    unint64_t v19 = 0xE700000000000000;
  }
  else {
    unint64_t v19 = 0xEA00000000007473;
  }
  if (v12) {
    uint64_t v20 = 0x786F626F666E69;
  }
  else {
    uint64_t v20 = 0x696C656372756F73;
  }
  if (v12) {
    unint64_t v21 = 0xE700000000000000;
  }
  else {
    unint64_t v21 = 0xEA00000000007473;
  }
  if (v18 == v20 && v19 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v22 = sub_1D446A758();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v22 & 1) == 0) {
      return result;
    }
  }
  return sub_1D429EDFC(v24, v23) & (v7 == v13);
}

uint64_t sub_1D429EDFC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x656E696C6E6FLL;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x656E696C6E6FLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x656E696C66666FLL;
      break;
    case 2:
      unint64_t v5 = 0x64656B636F6CLL;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6475427466656CLL;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x6475427468676972;
      break;
    case 5:
      unint64_t v5 = 0xD00000000000001ALL;
      int v6 = "caseLidOpenLeftRightInside";
      goto LABEL_10;
    case 6:
      unint64_t v5 = 0x4364694C65736163;
      unint64_t v3 = 0xED00006465736F6CLL;
      break;
    case 7:
      unint64_t v3 = 0x80000001D447E0C0;
      unint64_t v5 = 0xD000000000000015;
      break;
    case 8:
      unint64_t v5 = 0xD000000000000016;
      int v6 = "caseLidOpenRightInside";
LABEL_10:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE700000000000000;
      unint64_t v2 = 0x656E696C66666FLL;
      break;
    case 2:
      unint64_t v2 = 0x64656B636F6CLL;
      break;
    case 3:
      unint64_t v7 = 0xE700000000000000;
      unint64_t v2 = 0x6475427466656CLL;
      break;
    case 4:
      unint64_t v7 = 0xE800000000000000;
      unint64_t v2 = 0x6475427468676972;
      break;
    case 5:
      unint64_t v2 = 0xD00000000000001ALL;
      uint64_t v8 = "caseLidOpenLeftRightInside";
      goto LABEL_20;
    case 6:
      unint64_t v2 = 0x4364694C65736163;
      unint64_t v7 = 0xED00006465736F6CLL;
      break;
    case 7:
      unint64_t v7 = 0x80000001D447E0C0;
      unint64_t v2 = 0xD000000000000015;
      break;
    case 8:
      unint64_t v2 = 0xD000000000000016;
      uint64_t v8 = "caseLidOpenRightInside";
LABEL_20:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

void sub_1D429F064(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1D429F07C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FMIPFeatures.init(from:)(a1, a2);
}

uint64_t sub_1D429F094@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPDevice.init(from:)(a1, a2);
}

uint64_t sub_1D429F0AC()
{
  sub_1D446A918();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D429F494();
  sub_1D4469CA8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  if (*(void *)(v0 + 24)) {
    swift_bridgeObjectRetain();
  }
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D446A378();
  swift_bridgeObjectRelease();
  sub_1D446A6D8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D446A378();
  sub_1D4469C08();
  sub_1D42D5DA0(&qword_1EA6C9C78);
  sub_1D446A458();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D446A378();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 60;
}

unint64_t sub_1D429F494()
{
  unint64_t result = qword_1EBD7D8A0;
  if (!qword_1EBD7D8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7D8A0);
  }
  return result;
}

void sub_1D429F4E8()
{
  uint64_t v1 = v0;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  unint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPGarbageCollector: verifyingAccount...", v5, 2u);
    MEMORY[0x1D9447730](v5, -1, -1);
  }

  int v6 = (void *)v1[4];
  id v7 = objc_msgSend(v6, sel_aa_primaryAppleAccount);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v54 = v6;
    id v55 = objc_msgSend(v7, sel_aa_personID);
    if (v55)
    {
      uint64_t v57 = sub_1D4469B38();
      uint64_t v58 = v9;
    }
    else
    {
      uint64_t v57 = 0;
      uint64_t v58 = 0;
    }
    double v13 = self;
    char v14 = (void *)sub_1D4469B08();
    id v15 = (void *)sub_1D4469B08();
    uint64_t v53 = v13;
    id v16 = objc_msgSend(v13, sel_stringForKey_inDomain_, v14, v15);

    if (v16)
    {
      uint64_t v56 = sub_1D4469B38();
      uint64_t v18 = v17;
    }
    else
    {
      uint64_t v56 = 0;
      uint64_t v18 = 0;
    }
    long long v59 = v8;
    unint64_t v19 = sub_1D44698F8();
    os_log_type_t v20 = sub_1D446A038();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      char v22 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v21 = 138412290;
      char v23 = v59;
      sub_1D446A188();
      *char v22 = v8;

      _os_log_impl(&dword_1D4271000, v19, v20, "FMIPGarbageCollector: account %@", v21, 0xCu);
      sub_1D42D5DA0(&qword_1EBD7E830);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v22, -1, -1);
      MEMORY[0x1D9447730](v21, -1, -1);
    }
    else
    {

      unint64_t v19 = v59;
    }

    swift_bridgeObjectRetain_n();
    uint64_t v24 = v58;
    swift_bridgeObjectRetain_n();
    unsigned __int8 v25 = sub_1D44698F8();
    os_log_type_t v26 = sub_1D446A038();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v60 = v28;
      *(_DWORD *)uint64_t v27 = 136315394;
      swift_bridgeObjectRetain();
      sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
      uint64_t v29 = sub_1D4469B68();
      sub_1D42CB9EC(v29, v30, &v60);
      uint64_t v24 = v58;
      sub_1D446A188();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1D4469B68();
      sub_1D42CB9EC(v31, v32, &v60);
      sub_1D446A188();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v25, v26, "FMIPGarbageCollector: verifyingAccount new: %s previous: %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v28, -1, -1);
      MEMORY[0x1D9447730](v27, -1, -1);

      uint64_t v33 = v54;
      if (v58) {
        goto LABEL_22;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v33 = v54;
      if (v58)
      {
LABEL_22:
        if (v18)
        {
          if (v57 == v56 && v24 == v18)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_32:
            id v37 = [v59 aa_fmipAccount];
            id v38 = objc_msgSend(v33, sel_credentialForAccount_, v37);
            unint64_t v39 = v38;
            if (v38
              && (id v40 = objc_msgSend(v38, sel_credentialItemForKey_, *MEMORY[0x1E4F17908])) != 0)
            {

              if (v37)
              {
                id v41 = objc_msgSend(v37, sel_identifier);
                if (v41)
                {
                  unint64_t v42 = v41;
                  uint64_t v43 = sub_1D4469B38();
                  uint64_t v45 = v44;
                }
                else
                {
                  uint64_t v43 = 0;
                  uint64_t v45 = 0;
                }
                uint64_t v50 = v53;
              }
              else
              {
                uint64_t v43 = 0;
                uint64_t v45 = 0;
                uint64_t v50 = v53;
              }
              v1[6] = v43;
              v1[7] = v45;
              swift_bridgeObjectRelease();
              uint64_t v51 = (void *)sub_1D4469B08();
              uint64_t v52 = (void *)sub_1D4469B08();
              objc_msgSend(v50, sel_setString_forKey_inDomain_, v55, v51, v52);
            }
            else
            {

              uint64_t v46 = sub_1D44698F8();
              os_log_type_t v47 = sub_1D446A038();
              if (os_log_type_enabled(v46, v47))
              {
                uint64_t v48 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v48 = 0;
                _os_log_impl(&dword_1D4271000, v46, v47, "FMIPGarbageCollector: purging cache because the token is missing", v48, 2u);
                MEMORY[0x1D9447730](v48, -1, -1);
              }

              v1[6] = 0;
              v1[7] = 0;
              swift_bridgeObjectRelease();
              sub_1D43BCC88();
            }
            return;
          }
          char v49 = sub_1D446A758();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v49) {
            goto LABEL_32;
          }
LABEL_29:
          uint64_t v34 = sub_1D44698F8();
          os_log_type_t v35 = sub_1D446A038();
          if (os_log_type_enabled(v34, v35))
          {
            os_log_type_t v36 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_log_type_t v36 = 0;
            _os_log_impl(&dword_1D4271000, v34, v35, "FMIPGarbageCollector: purging cache because person id are not matching.", v36, 2u);
            MEMORY[0x1D9447730](v36, -1, -1);
          }

          sub_1D43BCC88();
          goto LABEL_32;
        }
LABEL_28:
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    if (!v18) {
      goto LABEL_32;
    }
    goto LABEL_28;
  }
  uint64_t v10 = sub_1D44698F8();
  os_log_type_t v11 = sub_1D446A018();
  if (os_log_type_enabled(v10, v11))
  {
    int v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v12 = 0;
    _os_log_impl(&dword_1D4271000, v10, v11, "FMIPGarbageCollector: error retrieving primary account", v12, 2u);
    MEMORY[0x1D9447730](v12, -1, -1);
  }

  sub_1D43BCC88();
}

void sub_1D429FD3C(NSObject *a1)
{
  dispatch_queue_t v219 = a1;
  uint64_t v1 = sub_1D42D5DA0(&qword_1EBD7CB80);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  v210 = (unint64_t *)((char *)&v198 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v2);
  char v209 = (char *)&v198 - v4;
  uint64_t updated = type metadata accessor for FMIPItemUpdateType(0);
  MEMORY[0x1F4188790](updated);
  unint64_t v208 = (char *)&v198 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v216 = (uint64_t)&v198 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v215 = (uint64_t)&v198 - v9;
  uint64_t v10 = sub_1D42D5DA0(&qword_1EA6CBA48);
  os_log_t isa = (os_log_t)v10[-1].isa;
  unint64_t v11 = (unint64_t)isa[8].isa;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v218 = ((char *)&v198 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  char v14 = (char *)&v198 - v13;
  uint64_t v15 = sub_1D4469688();
  uint64_t v221 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  int v204 = (char *)&v198 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  char v203 = (char *)&v198 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  char v22 = (char *)&v198 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  v224 = ((char *)&v198 - v24);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  char v223 = ((char *)&v198 - v26);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v29 = (uint64_t)&v198 - v28;
  MEMORY[0x1F4188790](v27);
  int v213 = (char *)&v198 - v30;
  uint64_t v31 = sub_1D4469618();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  int v206 = ((char *)&v198 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  int v205 = (char *)&v198 - v36;
  MEMORY[0x1F4188790](v35);
  int v212 = (char *)&v198 - v37;
  uint64_t v38 = sub_1D4469108();
  os_log_type_t v228 = (void *)v38;
  uint64_t v229 = sub_1D444A534(&qword_1EBD7E550, MEMORY[0x1E4F619E0]);
  unint64_t v39 = sub_1D42BECB4(aBlock);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v38 - 8) + 104))(v39, *MEMORY[0x1E4F619D0], v38);
  LOBYTE(v38) = MEMORY[0x1D9445460](aBlock);
  sub_1D42BEC64((uint64_t)aBlock);
  if ((v38 & 1) == 0
    || *((unsigned char *)v214 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_shouldUseBeaconsOptimizationSPI) != 1)
  {
    if (qword_1EBD80068 != -1) {
      goto LABEL_59;
    }
    goto LABEL_8;
  }
  uint64_t v199 = v32;
  uint64_t v200 = v31;
  uint64_t v220 = (uint8_t *)v15;
  sub_1D4469608();
  sub_1D4469678();
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_1D4469928();
  uint64_t v41 = sub_1D42D7FAC(v40, (uint64_t)qword_1EBD83228);
  os_log_t v42 = isa;
  dispatch_queue_t v43 = v219;
  uint64_t v217 = (uint8_t *)isa[2].isa;
  ((void (*)(char *, dispatch_queue_t, NSObject *))v217)(v14, v219, v10);
  uint64_t v201 = v41;
  uint64_t v44 = sub_1D44698F8();
  os_log_type_t v45 = sub_1D446A008();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v211 = v44;
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    uint64_t v198 = (void *)swift_slowAlloc();
    uint64_t v202 = v46;
    *(_DWORD *)uint64_t v46 = 138412290;
    uint64_t v47 = sub_1D446A4E8();
    aBlock[0] = v47;
    dispatch_queue_t v43 = v219;
    sub_1D446A188();
    uint64_t v48 = v198;
    *uint64_t v198 = v47;
    uint64_t v44 = v211;
    ((void (*)(char *, NSObject *))isa[1].isa)(v14, v10);
    os_log_type_t v49 = v45;
    uint64_t v50 = v202;
    _os_log_impl(&dword_1D4271000, v44, v49, "FMIPBeaconRefreshingController: beacons diff received %@", v202, 0xCu);
    sub_1D42D5DA0(&qword_1EBD7E830);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v48, -1, -1);
    MEMORY[0x1D9447730](v50, -1, -1);
    os_log_t v51 = isa;
  }
  else
  {
    ((void (*)(char *, NSObject *))v42[1].isa)(v14, v10);
    os_log_t v51 = v42;
  }

  unint64_t v231 = MEMORY[0x1E4FBC860];
  uint64_t v56 = v214;
  dispatch_queue_t v219 = *(dispatch_queue_t *)((char *)v214 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshQueue);
  uint64_t v57 = v218;
  ((void (*)(NSObject *, dispatch_queue_t, NSObject *))v217)(v218, v43, v10);
  unint64_t v58 = (LOBYTE(v51[10].isa) + 32) & ~(unint64_t)LOBYTE(v51[10].isa);
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = &v231;
  *(void *)(v59 + 24) = v56;
  ((void (*)(unint64_t, NSObject *, NSObject *))v51[4].isa)(v59 + v58, v57, v10);
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = sub_1D42E37A0;
  *(void *)(v60 + 24) = v59;
  uint64_t v229 = (uint64_t)sub_1D42AEE88;
  v230 = v60;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D42AEDE4;
  os_log_type_t v228 = &unk_1F2C12AE8;
  uint64_t v61 = _Block_copy(aBlock);
  int64_t v62 = (int64_t)v230;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v219, v61);
  _Block_release(v61);
  LOBYTE(v57) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v57)
  {
    __break(1u);
    goto LABEL_61;
  }
  uint64_t v63 = sub_1D44698F8();
  LODWORD(v64) = sub_1D446A038();
  BOOL v65 = os_log_type_enabled((os_log_t)v63, (os_log_type_t)v64);
  uint64_t v66 = (uint64_t)&loc_1D446B000;
  uint64_t v198 = (void *)v59;
  if (!v65)
  {

    goto LABEL_29;
  }
  id v67 = (uint8_t *)swift_slowAlloc();
  uint64_t v56 = (unint64_t *)swift_slowAlloc();
  aBlock[0] = (uint64_t)v56;
  *(_DWORD *)id v67 = 136315138;
  swift_beginAccess();
  unint64_t v11 = v231;
  uint64_t v66 = (uint64_t)v220;
  if (v231 >> 62) {
    goto LABEL_154;
  }
  uint64_t v68 = *(void *)((v231 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    os_log_t isa = (os_log_t)v63;
    LODWORD(v219) = v64;
    uint64_t v218 = v56;
    if (v68)
    {
      uint64_t v217 = v67;
      uint64_t v226 = MEMORY[0x1E4FBC860];
      sub_1D43371EC(0, v68 & ~(v68 >> 63), 0);
      if (v68 < 0)
      {
        __break(1u);
LABEL_156:
        sub_1D446A7A8();
        __break(1u);
        return;
      }
      uint64_t v69 = 0;
      uint64_t v70 = v226;
      do
      {
        if ((v11 & 0xC000000000000001) != 0) {
          id v71 = (id)MEMORY[0x1D9446710](v69, v11);
        }
        else {
          id v71 = *(id *)(v11 + 8 * v69 + 32);
        }
        uint64_t v72 = v71;
        id v73 = objc_msgSend(v71, sel_identifier, v198);
        sub_1D4469668();

        uint64_t v226 = v70;
        unint64_t v75 = (unint64_t)v70[2].isa;
        unint64_t v74 = (unint64_t)v70[3].isa;
        if (v75 >= v74 >> 1)
        {
          sub_1D43371EC(v74 > 1, v75 + 1, 1);
          uint64_t v70 = v226;
        }
        ++v69;
        v70[2].os_log_t isa = (Class)(v75 + 1);
        (*(void (**)(unint64_t, uint64_t, uint8_t *))(v221 + 32))((unint64_t)v70+ ((*(unsigned __int8 *)(v221 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v221 + 80))+ *(void *)(v221 + 72) * v75, v29, v220);
      }
      while (v68 != v69);
      swift_bridgeObjectRelease();
      uint64_t v66 = (uint64_t)v220;
      id v67 = v217;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v70 = MEMORY[0x1E4FBC860];
    }
    uint64_t v76 = MEMORY[0x1D94460F0](v70, v66);
    uint64_t v56 = v77;
    swift_bridgeObjectRelease();
    uint64_t v226 = sub_1D42CB9EC(v76, (unint64_t)v56, aBlock);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    uint64_t v66 = (uint64_t)isa;
    _os_log_impl(&dword_1D4271000, isa, (os_log_type_t)v219, "FMIPBeaconRefreshingController: beacons received %s", v67, 0xCu);
    uint64_t v78 = v218;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v78, -1, -1);
    MEMORY[0x1D9447730](v67, -1, -1);

LABEL_29:
    uint64_t v10 = v223;
    swift_beginAccess();
    int64_t v62 = v231;
    if (v231 >> 62) {
      break;
    }
    uint64_t v29 = *(void *)((v231 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v29) {
      goto LABEL_31;
    }
LABEL_65:
    uint64_t v63 = MEMORY[0x1E4FBC868];
LABEL_66:
    swift_bridgeObjectRelease();
    unint64_t v103 = v231;
    id v67 = v220;
    if (v231 >> 62)
    {
      if ((v231 & 0x8000000000000000) != 0) {
        uint64_t v66 = v231;
      }
      else {
        uint64_t v66 = v231 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_1D446A498();
    }
    else
    {
      uint64_t v64 = *(void *)((v231 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v211 = v63;
    if (v64)
    {
      if (v64 < 1)
      {
        __break(1u);
LABEL_152:
        __break(1u);
        goto LABEL_153;
      }
      uint64_t v66 = 0;
      uint64_t v217 = (uint8_t *)(v103 & 0xC000000000000001);
      uint64_t v56 = (unint64_t *)(v221 + 8);
      unint64_t v104 = MEMORY[0x1E4FBC868];
      os_log_t isa = (os_log_t)MEMORY[0x1E4FBC868];
      char v223 = MEMORY[0x1E4FBC868];
      dispatch_queue_t v219 = (dispatch_queue_t)v103;
      uint64_t v218 = v64;
      do
      {
        if (v217) {
          unint64_t v117 = (objc_class *)MEMORY[0x1D9446710](v66, v103);
        }
        else {
          unint64_t v117 = (objc_class *)*(id *)(v103 + 8 * v66 + 32);
        }
        uint64_t v64 = (uint64_t)v117;
        uint64_t v118 = v224;
        id v119 = [(objc_class *)v117 identifier];
        sub_1D4469668();

        id v120 = objc_msgSend((id)v64, sel_accessoryProductInfo);
        if (v120)
        {
          char v105 = v120;
          unint64_t v106 = (unint64_t)objc_msgSend(v120, sel_capabilities);

          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v226 = v104;
          uint64_t v108 = (v106 >> 10) & 1;
          uint64_t v109 = v224;
          sub_1D43D7C8C(v108, (uint64_t)v224, isUniquelyReferenced_nonNull_native);
          unint64_t v104 = v226;
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          unint64_t v121 = sub_1D43AEE98((uint64_t)v118);
          char v123 = v122;
          swift_bridgeObjectRelease();
          if (v123)
          {
            int v124 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v226 = v104;
            if (!v124)
            {
              sub_1D43DA664();
              unint64_t v104 = v226;
            }
            (*(void (**)(char *, uint8_t *))(v221 + 8))((char *)v104[6].isa + *(void *)(v221 + 72) * v121, v67);
            unint64_t v104 = v226;
            sub_1D43FDE38(v121, (uint64_t)v226);
            swift_bridgeObjectRelease();
          }
          uint64_t v109 = v224;
        }
        ++v66;
        unint64_t v11 = *v56;
        ((void (*)(NSObject *, uint8_t *))*v56)(v109, v67);
        id v110 = objc_msgSend((id)v64, sel_identifier);
        sub_1D4469668();

        char v111 = objc_msgSend((id)v64, sel_connected);
        uint64_t v112 = isa;
        char v113 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v226 = v112;
        sub_1D43D7C8C(v111, (uint64_t)v22, v113);
        os_log_t isa = v226;
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint8_t *))v11)(v22, v67);
        id v114 = objc_msgSend((id)v64, sel_identifier);
        sub_1D4469668();

        sub_1D443EB5C(objc_msgSend((id)v64, sel_type), (char *)&v225);
        uint64_t v29 = v225;
        uint64_t v115 = v223;
        char v116 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v226 = v115;
        sub_1D43D7E38(v29, (uint64_t)v22, v116);
        char v223 = v226;
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint8_t *))v11)(v22, v67);

        unint64_t v103 = (unint64_t)v219;
      }
      while (v218 != v66);
    }
    else
    {
      unint64_t v104 = MEMORY[0x1E4FBC868];
      os_log_t isa = (os_log_t)MEMORY[0x1E4FBC868];
      char v223 = MEMORY[0x1E4FBC868];
    }
    uint64_t v202 = (uint8_t *)v104;
    swift_bridgeObjectRelease();
    unint64_t v125 = v231;
    if (v231 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_1D446A498();
      if (!v63)
      {
LABEL_99:
        v224 = MEMORY[0x1E4FBC868];
        goto LABEL_100;
      }
    }
    else
    {
      uint64_t v63 = *(void *)((v231 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v63) {
        goto LABEL_99;
      }
    }
    if (v63 < 1) {
      goto LABEL_152;
    }
    BOOL v126 = 0;
    unint64_t v127 = v125 & 0xC000000000000001;
    dispatch_queue_t v219 = (dispatch_queue_t)(v221 + 8);
    v224 = MEMORY[0x1E4FBC868];
    char v128 = (SEL *)&property descriptor for FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback;
    uint64_t v218 = v63;
    do
    {
      if (v127) {
        id v129 = (id)MEMORY[0x1D9446710](v126, v125);
      }
      else {
        id v129 = *(id *)(v125 + 8 * (void)v126 + 32);
      }
      char v130 = v129;
      id v131 = objc_msgSend(v129, v128[305], v198);

      if (v131)
      {
        id v132 = [v130 v128[305]];
        if (v132)
        {
          v133 = v132;
          uint64_t v134 = v128;
          id v135 = objc_msgSend(v130, sel_identifier);
          sub_1D4469668();

          id v136 = v133;
          uint64_t v137 = v215;
          FMIPDeviceLostModeMetadata.init(lostModeInfo:)(v136, v215);
          unint64_t v138 = v127;
          uint64_t v139 = v22;
          uint64_t v140 = v216;
          sub_1D444E76C(v137, v216, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
          uint64_t v141 = v224;
          char v142 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v226 = v141;
          uint64_t v143 = v140;
          char v22 = v139;
          unint64_t v127 = v138;
          sub_1D43D7FF4(v143, (uint64_t)v22, v142);
          v224 = v226;
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint8_t *))v219->isa)(v22, v67);

          char v128 = v134;
          uint64_t v63 = (uint64_t)v218;
        }
      }
      BOOL v126 = ((char *)v126 + 1);
    }
    while (v63 != v126);
LABEL_100:
    swift_bridgeObjectRelease();
    unint64_t v11 = (unint64_t)v214;
    uint64_t v144 = (uint64_t)v214 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_delegate;
    if (MEMORY[0x1D9447840]((char *)v214 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_delegate))
    {
      sub_1D42D5DA0(&qword_1EA6CBA58);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D4473200;
      *(unsigned char *)(inited + 32) = 0;
      *(void *)(inited + 40) = v211;
      *(unsigned char *)(inited + 48) = 2;
      *(void *)(inited + 56) = v202;
      *(unsigned char *)(inited + 64) = 1;
      *(void *)(inited + 72) = isa;
      unint64_t v146 = sub_1D43B385C(inited);
      swift_setDeallocating();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D42D5DA0(&qword_1EA6CBA60);
      swift_arrayDestroy();
      sub_1D428A6E8(v146);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    uint64_t v147 = MEMORY[0x1D9447840](v144);
    uint64_t v56 = v210;
    char v22 = v209;
    uint64_t v148 = (uint64_t)v208;
    if (v147)
    {
      uint64_t v149 = swift_bridgeObjectRetain();
      sub_1D4294030(v149);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    uint64_t v216 = v144;
    if (MEMORY[0x1D9447840](v144))
    {
      uint64_t v150 = swift_bridgeObjectRetain();
      sub_1D4389C84(v150);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    uint64_t v151 = v148 + *(int *)(sub_1D42D5DA0(&qword_1EA6CAF88) + 48);
    int v152 = *(uint8_t **)(v221 + 16);
    uint64_t v218 = (v221 + 16);
    uint64_t v217 = v152;
    ((void (*)(uint64_t, char *, uint8_t *))v152)(v148, v213, v67);
    uint64_t v153 = v199;
    uint64_t v64 = v200;
    (*(void (**)(uint64_t, char *, uint64_t))(v199 + 16))(v151, v212, v200);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v153 + 56))(v22, 1, 1, v64);
    type metadata accessor for FMIPItemUpdateContext(0);
    unsigned __int8 v154 = swift_allocObject();
    sub_1D444DAF8(v148, (uint64_t)v154 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_type, type metadata accessor for FMIPItemUpdateType);
    double v155 = v205;
    sub_1D4469608();
    dispatch_queue_t v219 = v154;
    id v156 = *(void (**)(char *, char *, uint64_t))(v153 + 32);
    v156((char *)v154 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_timestamp, v155, v64);
    sub_1D42A3A74((uint64_t)v22, (uint64_t)v56, &qword_1EBD7CB80);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v153 + 48))(v56, 1, v64) == 1)
    {
      uint64_t v29 = (uint64_t)v206;
      sub_1D4469608();
      sub_1D4276C3C((uint64_t)v22, &qword_1EBD7CB80);
      sub_1D444DB60(v148, type metadata accessor for FMIPItemUpdateType);
      sub_1D4276C3C((uint64_t)v56, &qword_1EBD7CB80);
    }
    else
    {
      sub_1D4276C3C((uint64_t)v22, &qword_1EBD7CB80);
      sub_1D444DB60(v148, type metadata accessor for FMIPItemUpdateType);
      uint64_t v29 = (uint64_t)v206;
      v156((char *)v206, (char *)v56, v64);
    }
    v156((char *)v219 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_creationTimestamp, (char *)v29, v64);
    uint64_t v66 = v231;
    id v67 = (uint8_t *)MEMORY[0x1E4FBC860];
    uint64_t v226 = MEMORY[0x1E4FBC860];
    unint64_t v157 = (unint64_t)v213;
    if (v231 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_1D446A498();
      if (!v63)
      {
LABEL_122:
        swift_bridgeObjectRelease();
        unint64_t v162 = MEMORY[0x1E4FBC860];
LABEL_123:
        swift_retain();
        uint64_t v163 = 0;
        unint64_t v164 = sub_1D42E1D30(v162, (uint64_t *)v11);
        swift_release();
        swift_release();
        uint64_t v226 = v67;
        if (v164 >> 62) {
          goto LABEL_139;
        }
        uint64_t v165 = *(void *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        for (; v165; uint64_t v165 = sub_1D446A498())
        {
          uint64_t v215 = v163;
          unint64_t v166 = 0;
          v11 += OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy;
          unint64_t v157 = v164 & 0xC000000000000001;
          while (1)
          {
            if (v157)
            {
              id v167 = (id)MEMORY[0x1D9446710](v166, v164);
            }
            else
            {
              if (v166 >= *(void *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_138;
              }
              id v167 = *(id *)(v164 + 8 * v166 + 32);
            }
            unint64_t v168 = v167;
            uint64_t v163 = v166 + 1;
            if (__OFADD__(v166, 1)) {
              break;
            }
            if (*(unsigned char *)(v11 + 32) == 1 && objc_msgSend(v167, sel_isAppleAudioAccessory))
            {
            }
            else
            {
              sub_1D446A418();
              sub_1D446A438();
              sub_1D446A448();
              sub_1D446A428();
            }
            ++v166;
            if (v163 == v165)
            {
              unint64_t v169 = (unint64_t)v226;
              unint64_t v157 = (unint64_t)v213;
              goto LABEL_141;
            }
          }
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          swift_retain();
        }
        unint64_t v169 = MEMORY[0x1E4FBC860];
LABEL_141:
        swift_bridgeObjectRelease();
        swift_release();
        dispatch_queue_t v170 = v219;
        swift_retain();
        v171 = sub_1D444CB58(v169, (uint64_t)v170);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        unint64_t v172 = swift_bridgeObjectRetain();
        uint64_t v173 = sub_1D42E1B1C(v172, &qword_1EA6CBA50, 0x1E4F97BE0, (uint64_t)&protocol witness table for SPApplicationBeacon);
        swift_bridgeObjectRelease();
        sub_1D428414C(v173);
        swift_bridgeObjectRelease();
        int v174 = v203;
        unsigned __int8 v175 = v220;
        ((void (*)(char *, unint64_t, uint8_t *))v217)(v203, v157, v220);
        double v176 = sub_1D44698F8();
        os_log_type_t v177 = sub_1D446A038();
        if (os_log_type_enabled(v176, v177))
        {
          unint64_t v178 = v157;
          uint64_t v179 = v174;
          uint64_t v180 = (uint8_t *)swift_slowAlloc();
          v181 = swift_slowAlloc();
          v224 = v171;
          os_log_type_t v182 = v181;
          uint64_t v226 = v181;
          *(_DWORD *)uint64_t v180 = 136315138;
          uint64_t v183 = sub_1D4469638();
          uint64_t v225 = sub_1D42CB9EC(v183, v184, (uint64_t *)&v226);
          sub_1D446A188();
          swift_bridgeObjectRelease();
          v185 = *(void (**)(char *, uint8_t *))(v221 + 8);
          unint64_t v186 = v179;
          unint64_t v157 = v178;
          v185(v186, v175);
          _os_log_impl(&dword_1D4271000, v176, v177, "FMIPBeaconRefreshingController: separation state %s", v180, 0xCu);
          swift_arrayDestroy();
          uint64_t v187 = v182;
          v171 = v224;
          MEMORY[0x1D9447730](v187, -1, -1);
          MEMORY[0x1D9447730](v180, -1, -1);
        }
        else
        {
          v185 = *(void (**)(char *, uint8_t *))(v221 + 8);
          v185(v174, v175);
        }

        uint64_t v188 = MEMORY[0x1D9447840](v216);
        v189 = v204;
        if (v188)
        {
          sub_1D42E7888((uint64_t)v171);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        os_log_type_t v190 = v220;
        ((void (*)(char *, unint64_t, uint8_t *))v217)(v189, v157, v220);
        v191 = sub_1D44698F8();
        os_log_type_t v192 = sub_1D446A038();
        if (os_log_type_enabled(v191, v192))
        {
          uint64_t v193 = v189;
          os_log_type_t v194 = (uint8_t *)swift_slowAlloc();
          uint64_t v195 = swift_slowAlloc();
          uint64_t v226 = v195;
          *(_DWORD *)os_log_type_t v194 = 136315138;
          uint64_t v196 = sub_1D4469638();
          uint64_t v225 = sub_1D42CB9EC(v196, v197, (uint64_t *)&v226);
          sub_1D446A188();
          swift_bridgeObjectRelease();
          v185(v193, v190);
          _os_log_impl(&dword_1D4271000, v191, v192, "FMIPBeaconRefreshingController: items updated %s", v194, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D9447730](v195, -1, -1);
          MEMORY[0x1D9447730](v194, -1, -1);

          swift_release();
          v185(v213, v190);
        }
        else
        {

          swift_release();
          v185(v189, v190);
          v185((char *)v157, v190);
        }
        (*(void (**)(char *, uint64_t))(v199 + 8))(v212, v200);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      uint64_t v63 = *(void *)((v231 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v63) {
        goto LABEL_122;
      }
    }
    if (v63 >= 1)
    {
      for (uint64_t i = 0; i != v63; uint64_t i = ((char *)i + 1))
      {
        if ((v66 & 0xC000000000000001) != 0) {
          id v159 = (id)MEMORY[0x1D9446710](i, v66);
        }
        else {
          id v159 = *(id *)(v66 + 8 * (void)i + 32);
        }
        uint64_t v160 = v159;
        id v161 = objc_msgSend(v159, sel_role, v198);

        if (v161)
        {
          sub_1D446A418();
          sub_1D446A438();
          sub_1D446A448();
          sub_1D446A428();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v162 = (unint64_t)v226;
      goto LABEL_123;
    }
LABEL_153:
    __break(1u);
LABEL_154:
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_1D446A498();
  }
LABEL_61:
  if (v62 < 0) {
    uint64_t v66 = v62;
  }
  else {
    uint64_t v66 = v62 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v29 = sub_1D446A498();
  swift_bridgeObjectRelease();
  if (!v29) {
    goto LABEL_65;
  }
LABEL_31:
  unint64_t v11 = v62 & 0xC000000000000001;
  uint64_t v202 = (uint8_t *)(v221 + 16);
  uint64_t v63 = MEMORY[0x1E4FBC868];
  uint64_t v217 = (uint8_t *)(v221 + 8);
  uint64_t v79 = 4;
  uint64_t v211 = *MEMORY[0x1E4F97D60];
  os_log_t isa = (os_log_t)v62;
  dispatch_queue_t v219 = (dispatch_queue_t)v29;
  uint64_t v218 = (v62 & 0xC000000000000001);
  while (1)
  {
    Class v80 = v11 ? (Class)MEMORY[0x1D9446710](v79 - 4, v62) : (Class)*(id *)(v62 + 8 * v79);
    uint64_t v66 = (uint64_t)v80;
    uint64_t v56 = (unint64_t *)(v79 - 3);
    if (__OFADD__(v79 - 4, 1)) {
      break;
    }
    id v81 = [(objc_class *)v80 role];

    if (v81) {
      goto LABEL_34;
    }
    id v82 = objc_msgSend((id)v66, sel_identifier);
    sub_1D4469668();

    id v83 = objc_msgSend((id)v66, sel_taskInformation);
    type metadata accessor for SPBeaconTaskName(0);
    sub_1D4275AD0(0, &qword_1EA6CA118);
    sub_1D444A534((unint64_t *)&qword_1EA6C92C8, type metadata accessor for SPBeaconTaskName);
    uint64_t v84 = sub_1D4469A58();

    if (*(void *)(v84 + 16))
    {
      uint64_t v85 = v211;
      unint64_t v86 = sub_1D43AEF30((uint64_t)v85);
      if (v87)
      {
        id v88 = *(id *)(*(void *)(v84 + 56) + 8 * v86);

        swift_bridgeObjectRelease();
        id v89 = objc_msgSend(v88, sel_state);

        BOOL v90 = v89 == 0;
        goto LABEL_45;
      }
    }
    swift_bridgeObjectRelease();
    BOOL v90 = 0;
LABEL_45:
    int v91 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v226 = v63;
    unint64_t v93 = sub_1D43AEE98((uint64_t)v10);
    Class v94 = *(Class *)(v63 + 16);
    BOOL v95 = (v92 & 1) == 0;
    uint64_t v96 = (uint64_t)v94 + v95;
    if (__OFADD__(v94, v95)) {
      goto LABEL_57;
    }
    char v97 = v92;
    if (*(void *)(v63 + 24) >= v96)
    {
      if (v91)
      {
        uint64_t v63 = (uint64_t)v226;
        if ((v92 & 1) == 0) {
          goto LABEL_52;
        }
      }
      else
      {
        sub_1D43DA664();
        uint64_t v63 = (uint64_t)v226;
        if ((v97 & 1) == 0) {
          goto LABEL_52;
        }
      }
    }
    else
    {
      sub_1D43D68E8(v96, v91);
      unint64_t v98 = sub_1D43AEE98((uint64_t)v223);
      if ((v97 & 1) != (v99 & 1)) {
        goto LABEL_156;
      }
      unint64_t v93 = v98;
      uint64_t v63 = (uint64_t)v226;
      if ((v97 & 1) == 0)
      {
LABEL_52:
        *(void *)(v63 + 8 * (v93 >> 6) + 64) |= 1 << v93;
        uint64_t v10 = v223;
        (*(void (**)(unint64_t, NSObject *, uint8_t *))(v221 + 16))(*(void *)(v63 + 48) + *(void *)(v221 + 72) * v93, v223, v220);
        *(unsigned char *)(*(void *)(v63 + 56) + v93) = v90;
        Class v100 = *(Class *)(v63 + 16);
        BOOL v101 = __OFADD__(v100, 1);
        uint64_t v102 = (Class)((char *)v100 + 1);
        if (v101) {
          goto LABEL_58;
        }
        *(void *)(v63 + 16) = v102;
        goto LABEL_33;
      }
    }
    *(unsigned char *)(*(void *)(v63 + 56) + v93) = v90;
    uint64_t v10 = v223;
LABEL_33:
    swift_bridgeObjectRelease();
    (*(void (**)(NSObject *, uint8_t *))v217)(v10, v220);
    int64_t v62 = (int64_t)isa;
    uint64_t v29 = (uint64_t)v219;
    unint64_t v11 = (unint64_t)v218;
LABEL_34:

    ++v79;
    if (v56 == (unint64_t *)v29) {
      goto LABEL_66;
    }
  }
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  swift_once();
LABEL_8:
  uint64_t v52 = sub_1D4469928();
  sub_1D42D7FAC(v52, (uint64_t)qword_1EBD83228);
  uint64_t v53 = sub_1D44698F8();
  os_log_type_t v54 = sub_1D446A038();
  if (os_log_type_enabled(v53, v54))
  {
    id v55 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v55 = 0;
    _os_log_impl(&dword_1D4271000, v53, v54, "FMIPBeaconRefreshingController: app beacons FF disabled", v55, 2u);
    MEMORY[0x1D9447730](v55, -1, -1);
  }
}

uint64_t sub_1D42A1DE8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1D42A1E20(void *a1, void *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, void (*a6)(void))
{
  id v82 = a6;
  id v81 = a5;
  Class v80 = a2;
  uint64_t v77 = sub_1D4469838();
  uint64_t v76 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D44698B8();
  uint64_t v78 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v87 = a3;
  uint64_t v14 = sub_1D42D5DA0(a3);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1D42D5DA0(a4);
  uint64_t v84 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v90 = (uint64_t)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1D4469498();
  uint64_t v91 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v85 = v16;
  uint64_t v79 = v10;
  id v88 = v13;
  uint64_t v89 = v11;
  id v83 = a4;
  uint64_t v21 = sub_1D4469928();
  uint64_t v92 = sub_1D42D7FAC(v21, (uint64_t)qword_1EBD83228);
  char v22 = sub_1D44698F8();
  os_log_type_t v23 = sub_1D446A038();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_1D4271000, v22, v23, "FMDiskIO: read from disk", v24, 2u);
    MEMORY[0x1D9447730](v24, -1, -1);
  }

  id v25 = objc_msgSend(self, sel_defaultManager);
  uint64_t v26 = a1[3];
  unint64_t v27 = a1[4];
  uint64_t v29 = a1[5];
  uint64_t v28 = a1[6];
  uint64_t v94 = v26;
  unint64_t v95 = v27;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  uint64_t v30 = a1;
  uint64_t v31 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  unsigned __int8 v32 = objc_msgSend(v25, sel_fileExistsAtPath_, v31);

  if (v32)
  {
    id v73 = v30;
    uint64_t v94 = v26;
    unint64_t v95 = v27;
    swift_bridgeObjectRetain();
    sub_1D4469C08();
    sub_1D4469408();
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_1D44694A8();
    unint64_t v40 = v39;
    uint64_t v41 = v26;
    (*(void (**)(char *, uint64_t))(v91 + 8))(v20, v18);
    os_log_t v42 = v73;
    swift_retain();
    sub_1D42DD034(v38, v40);
    swift_retain();
    unint64_t v72 = v40;
    sub_1D42DD034(v38, v40);
    dispatch_queue_t v43 = sub_1D44698F8();
    os_log_type_t v44 = sub_1D446A038();
    int v45 = v44;
    BOOL v46 = os_log_type_enabled(v43, v44);
    uint64_t v47 = v38;
    uint64_t v75 = v29;
    uint64_t v74 = v28;
    uint64_t v71 = v41;
    unint64_t v70 = v27;
    if (v46)
    {
      uint64_t v48 = swift_slowAlloc();
      LODWORD(v91) = v45;
      uint64_t v49 = v48;
      uint64_t v69 = swift_slowAlloc();
      uint64_t v93 = v69;
      uint64_t v94 = v41;
      *(_DWORD *)uint64_t v49 = 136315394;
      unint64_t v95 = v27;
      swift_bridgeObjectRetain();
      sub_1D4469C08();
      uint64_t v94 = sub_1D42CB9EC(v94, v95, &v93);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2080;
      unint64_t v50 = v72;
      uint64_t v51 = sub_1D44694B8();
      uint64_t v94 = sub_1D42CB9EC(v51, v52, &v93);
      sub_1D446A188();
      os_log_t v42 = v73;
      swift_bridgeObjectRelease();
      sub_1D42DCFDC(v38, v50);
      sub_1D42DCFDC(v38, v50);
      _os_log_impl(&dword_1D4271000, v43, (os_log_type_t)v91, "FMDiskIO: file: %s data: %s", (uint8_t *)v49, 0x16u);
      uint64_t v53 = v69;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v53, -1, -1);
      MEMORY[0x1D9447730](v49, -1, -1);
    }
    else
    {
      swift_release_n();
      unint64_t v54 = v72;
      sub_1D42DCFDC(v38, v72);
      sub_1D42DCFDC(v38, v54);
    }

    uint64_t v55 = v90;
    sub_1D4469308();
    swift_allocObject();
    sub_1D44692F8();
    uint64_t v56 = (uint64_t)v85;
    uint64_t v57 = v87;
    sub_1D42A3A74((uint64_t)v42 + *(void *)(*v42 + 128), (uint64_t)v85, v87);
    BOOL v58 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v56, 1, v86) == 1;
    uint64_t v59 = v88;
    uint64_t v60 = v89;
    if (v58)
    {
      sub_1D4276C3C(v56, v57);
      sub_1D42D5DA0(v81);
      v82();
      unint64_t v61 = v72;
      sub_1D44692E8();
      sub_1D42DCFDC(v47, v61);
      swift_release();
    }
    else
    {
      sub_1D4276C98(v56, v55, v83);
      sub_1D42AAE70(&qword_1EA6CA5C8, MEMORY[0x1E4F61A20]);
      uint64_t v91 = v47;
      sub_1D44692E8();
      int64_t v62 = v79;
      sub_1D4469848();
      uint64_t v63 = sub_1D44698A8();
      unint64_t v65 = v64;
      (*(void (**)(char *, uint64_t))(v76 + 8))(v62, v77);
      sub_1D42D5DA0(v81);
      v82();
      sub_1D44692E8();
      uint64_t v66 = (void (**)(char *, uint64_t))(v78 + 8);
      id v67 = v83;
      swift_release();
      sub_1D42DCFDC(v63, v65);
      sub_1D42DCFDC(v91, v72);
      (*v66)(v59, v60);
      sub_1D4276C3C(v90, v67);
    }
    *Class v80 = v94;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = v26;
    uint64_t v74 = v28;
    uint64_t v75 = v29;
    swift_retain_n();
    uint64_t v34 = sub_1D44698F8();
    os_log_type_t v35 = sub_1D446A018();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v93 = v37;
      uint64_t v94 = v33;
      *(_DWORD *)uint64_t v36 = 136315138;
      unint64_t v95 = v27;
      swift_bridgeObjectRetain();
      sub_1D4469C08();
      uint64_t v94 = sub_1D42CB9EC(v94, v95, &v93);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v34, v35, "FMDiskIO: Disk archive does not exist at: %s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v37, -1, -1);
      MEMORY[0x1D9447730](v36, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_1D42A2CC0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = sub_1D42C4FCC(0xD000000000000014, 0x80000001D447DB10);
    if (v5)
    {
      sub_1D42CBAC0(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v47);
      uint64_t v6 = MEMORY[0x1E4FBB1A0];
      if (swift_dynamicCast())
      {
        if (v45 == sub_1D43F8A28(1u, 0) && v46 == v7)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v8 = sub_1D446A758();
          swift_bridgeObjectRelease();
          if (v8)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            if (qword_1EA6C8FE0 != -1) {
              swift_once();
            }
            uint64_t v49 = v6;
            uint64_t v47 = v45;
            uint64_t v48 = v46;
            swift_beginAccess();
            sub_1D42A343C((uint64_t)&v47, 1);
            swift_endAccess();
            uint64_t v9 = MEMORY[0x1D9447840](a2 + qword_1EBD7FC80);
            if (v9)
            {
              uint64_t v10 = v9;
              swift_retain();
              sub_1D4288E68(1, v10);
              swift_release();
              swift_unknownObjectRelease();
            }
          }
        }
      }
    }
  }
  if (*(void *)(a1 + 16)
    && (unint64_t v11 = sub_1D42C4FCC(0x626154736D657469, 0xEF64656C62616E45), (v12 & 1) != 0)
    && (sub_1D42CBAC0(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v47), swift_dynamicCast()))
  {
    char v13 = v45;
  }
  else
  {
    char v13 = 0;
  }
  uint64_t v14 = self;
  uint64_t v15 = (void *)sub_1D4469B08();
  uint64_t v16 = (void *)sub_1D4469B08();
  unsigned __int8 v17 = objc_msgSend(v14, sel_BOOLForKey_inDomain_, v15, v16);

  if ((v13 & 1) == 0 && (v17 & 1) == 0)
  {
    if (qword_1EA6C8FE0 != -1) {
      swift_once();
    }
    uint64_t v49 = MEMORY[0x1E4FBB390];
    LOBYTE(v47) = 0;
    swift_beginAccess();
    sub_1D42A343C((uint64_t)&v47, 2);
    swift_endAccess();
    uint64_t v18 = (void *)sub_1D4469B08();
    uint64_t v19 = (void *)sub_1D4469B08();
    objc_msgSend(v14, sel_setBool_forKey_inDomain_, 0, v18, v19);

    uint64_t v20 = MEMORY[0x1D9447840](a2 + qword_1EBD7FC80);
    if (v20)
    {
      uint64_t v21 = v20;
      swift_retain();
      sub_1D4288E68(2, v21);
      swift_release();
      swift_unknownObjectRelease();
    }
  }
  if (*(void *)(a1 + 16) && (unint64_t v22 = sub_1D42C4FCC(0xD000000000000010, 0x80000001D447DB40), (v23 & 1) != 0))
  {
    sub_1D42CBAC0(*(void *)(a1 + 56) + 32 * v22, (uint64_t)&v47);
    int v24 = swift_dynamicCast();
    if (v24) {
      uint64_t v25 = v45;
    }
    else {
      uint64_t v25 = 0;
    }
    if (v24) {
      uint64_t v26 = v46;
    }
    else {
      uint64_t v26 = 0;
    }
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
  }
  unint64_t v27 = (void *)sub_1D4469B08();
  uint64_t v28 = (void *)sub_1D4469B08();
  id v29 = objc_msgSend(v14, sel_stringForKey_inDomain_, v27, v28);

  if (v29)
  {
    uint64_t v30 = sub_1D4469B38();
    uint64_t v32 = v31;

    uint64_t result = sub_1D42795CC(3u, 0);
    uint64_t v35 = result;
    uint64_t v36 = v34;
    if (v26)
    {
LABEL_38:
      swift_bridgeObjectRelease();
      if (v36) {
        goto LABEL_39;
      }
      goto LABEL_46;
    }
    if (v32)
    {
      uint64_t v25 = v30;
      uint64_t v26 = v32;
      if (v34)
      {
LABEL_39:
        if (v25 == v35 && v26 == v36)
        {
          swift_bridgeObjectRelease();
LABEL_51:
          uint64_t result = swift_bridgeObjectRelease();
          goto LABEL_52;
        }
        char v38 = sub_1D446A758();
        swift_bridgeObjectRelease();
        if (v38) {
          goto LABEL_51;
        }
      }
LABEL_46:
      if (qword_1EA6C8FE0 != -1) {
        swift_once();
      }
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      uint64_t v47 = v25;
      uint64_t v48 = v26;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1D42A343C((uint64_t)&v47, 3);
      swift_endAccess();
      unint64_t v39 = (void *)sub_1D4469B08();
      swift_bridgeObjectRelease();
      unint64_t v40 = (void *)sub_1D4469B08();
      uint64_t v41 = (void *)sub_1D4469B08();
      objc_msgSend(v14, sel_setString_forKey_inDomain_, v39, v40, v41);

      uint64_t result = MEMORY[0x1D9447840](a2 + qword_1EBD7FC80);
      if (result)
      {
        uint64_t v42 = result;
        swift_retain();
        sub_1D4288E68(3, v42);
        swift_release();
        uint64_t result = swift_unknownObjectRelease();
      }
      goto LABEL_52;
    }
  }
  else
  {
    uint64_t result = sub_1D42795CC(3u, 0);
    uint64_t v36 = v37;
    if (v26)
    {
      uint64_t v35 = result;
      goto LABEL_38;
    }
  }
  if (v36) {
    goto LABEL_51;
  }
LABEL_52:
  if (*(void *)(a1 + 16))
  {
    uint64_t result = sub_1D42C4FCC(0xD000000000000019, 0x80000001D447DAF0);
    if (v43)
    {
      sub_1D42CBAC0(*(void *)(a1 + 56) + 32 * result, (uint64_t)&v47);
      uint64_t v44 = MEMORY[0x1E4FBB550];
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        if (qword_1EA6C8FE0 != -1) {
          swift_once();
        }
        uint64_t v49 = v44;
        uint64_t v47 = v45;
        swift_beginAccess();
        sub_1D42A343C((uint64_t)&v47, 0);
        return swift_endAccess();
      }
    }
  }
  return result;
}

uint64_t sub_1D42A343C(uint64_t a1, char a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1D42C5494((_OWORD *)a1, v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1D42A34EC(v7, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v6;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D4276C3C(a1, &qword_1EBD80050);
    sub_1D43FCC34(a2, v7);
    return sub_1D4276C3C((uint64_t)v7, &qword_1EBD80050);
  }
}

_OWORD *sub_1D42A34EC(_OWORD *a1, char a2, char a3)
{
  unint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_1D42A3758(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1D43DA20C();
      goto LABEL_7;
    }
    sub_1D43D6120(v13, a3 & 1);
    unint64_t v19 = sub_1D42A3758(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1D446A7A8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    unsigned __int8 v17 = (_OWORD *)(v16[7] + 32 * v10);
    sub_1D42BEC64((uint64_t)v17);
    return sub_1D42C5494(a1, v17);
  }
LABEL_13:

  return sub_1D43D8654(v10, a2, a1, v16);
}

unint64_t sub_1D42A3628(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1D42D5DA0(&qword_1EA6CA980);
  uint64_t v2 = sub_1D446A4C8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D42A3A74(v6, (uint64_t)v13, &qword_1EA6CA988);
    unsigned __int8 v7 = v13[0];
    unint64_t result = sub_1D42A3758(v13[0]);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v7;
    unint64_t result = (unint64_t)sub_1D42C5494(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D42A3758(unsigned __int8 a1)
{
  sub_1D446A828();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D446A888();

  return sub_1D42A3864(a1, v2);
}

unint64_t sub_1D42A3864(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xD000000000000019;
      unint64_t v8 = 0x80000001D447DAF0;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xD000000000000014;
          unint64_t v8 = 0x80000001D447DB10;
          break;
        case 2:
          unint64_t v7 = 0x626154736D657469;
          unint64_t v8 = 0xEF64656C62616E45;
          break;
        case 3:
          unint64_t v8 = 0x80000001D447DB40;
          unint64_t v7 = 0xD000000000000010;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xD000000000000019;
      unint64_t v10 = 0x80000001D447DAF0;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0x80000001D447DB10;
          if (v7 == 0xD000000000000014) {
            goto LABEL_14;
          }
          goto LABEL_15;
        case 2:
          unint64_t v9 = 0x626154736D657469;
          unint64_t v10 = 0xEF64656C62616E45;
          goto LABEL_11;
        case 3:
          unint64_t v10 = 0x80000001D447DB40;
          if (v7 == 0xD000000000000010) {
            goto LABEL_14;
          }
          goto LABEL_15;
        default:
LABEL_11:
          if (v7 != v9) {
            goto LABEL_15;
          }
LABEL_14:
          if (v8 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_15:
          char v11 = sub_1D446A758();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

uint64_t sub_1D42A3A74(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1D42D5DA0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t FMIPManager.init(configuration:ownerSession:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v106 = a2;
  uint64_t v108 = a1;
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v4 - 8);
  char v105 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v103 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D446A088();
  uint64_t v101 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1D446A068();
  MEMORY[0x1F4188790](v104);
  uint64_t v12 = sub_1D44699B8();
  MEMORY[0x1F4188790](v12 - 8);
  sub_1D4469678();
  *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_siriDelegate + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v94 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_refreshingController;
  *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_refreshingController) = 0;
  uint64_t v13 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataQueue;
  id v100 = (id)sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7E860);
  sub_1D4469998();
  sub_1D446A058();
  uint64_t v14 = *MEMORY[0x1E4FBCC58];
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  uint64_t v98 = v9 + 104;
  id v107 = v15;
  unsigned int v97 = v14;
  v15(v11, v14, v8);
  uint64_t v16 = sub_1D446A0C8();
  uint64_t v102 = v13;
  *(void *)(v2 + v13) = v16;
  uint64_t v99 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_unknownItemQueue;
  sub_1D4469998();
  *(void *)&v112[0] = MEMORY[0x1E4FBC860];
  uint64_t v96 = sub_1D42C61DC((unint64_t *)&qword_1EBD7FDB0, MEMORY[0x1E4FBCC10]);
  uint64_t v95 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FDA0, (uint64_t *)&unk_1EBD7FD90);
  sub_1D446A1F8();
  uint64_t v17 = v101;
  v107(v11, v14, v101);
  *(void *)(v2 + v99) = sub_1D446A0C8();
  uint64_t v99 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue;
  sub_1D4469998();
  *(void *)&v112[0] = MEMORY[0x1E4FBC860];
  sub_1D446A1F8();
  v107(v11, v97, v17);
  *(void *)(v2 + v99) = sub_1D446A0C8();
  uint64_t v99 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_actionsController;
  *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_actionsController) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_snapshotDevicesResponseReceived) = 0;
  uint64_t v104 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemActionsController;
  *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemActionsController) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_snapshotItemsResponseReceived) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_snapshotItemsLocatedResponseReceived) = 0;
  uint64_t v18 = v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_stopRefreshTimestamp;
  uint64_t v19 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isUpdatingSingleDevices) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isRefreshingItems) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isRefreshingDevices) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isUTAppAlertDisabled) = 0;
  id v20 = objc_msgSend(self, sel_sharedInstance);
  LOBYTE(v13) = objc_msgSend(v20, sel_isInternalBuild);

  unsigned __int8 v21 = 0;
  if (v13)
  {
    id v22 = objc_msgSend(self, sel_standardUserDefaults);
    char v23 = (void *)sub_1D4469B08();
    unsigned __int8 v21 = objc_msgSend(v22, sel_BOOLForKey_, v23);
  }
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_useRealtimeForItems) = v21;
  uint64_t v24 = v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_selectedDevice;
  uint64_t v25 = type metadata accessor for FMIPDevice();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
  *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemCounts) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_initializedSubsystems) = 0;
  uint64_t v26 = v108;
  *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration) = v108;
  id v27 = objc_allocWithZone(MEMORY[0x1E4F97C58]);
  swift_retain();
  id v28 = objc_msgSend(v27, sel_init);
  *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_ownerSession) = v28;
  uint64_t v29 = *(void *)(v26 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_snapshotHandlers);
  if (v29)
  {
    BOOL v30 = *(void *)(v29 + 32) != 0;
    BOOL v31 = *(void *)(v29 + 64) != 0;
  }
  else
  {
    BOOL v31 = 0;
    BOOL v30 = 0;
  }
  LODWORD(v107) = v30 || v31;
  uint64_t v32 = qword_1EA6C8F80;
  id v100 = v28;
  if (v32 != -1) {
    swift_once();
  }
  uint64_t v33 = qword_1EA6CA2A8;
  id v34 = objc_msgSend(self, sel_mainBundle);
  id v35 = objc_msgSend(v34, sel_bundleIdentifier);

  if (v35)
  {
    uint64_t v36 = sub_1D4469B38();
    uint64_t v38 = v37;
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v38 = 0xE000000000000000;
  }
  int v39 = sub_1D43761C0(v36, v38, v33);
  swift_bridgeObjectRelease();
  int v40 = (int)v107;
  int v41 = v39 & (v107 ^ 1);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isDevicesSnapshotMode) = v30;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isItemsSnapshotMode) = v31;
  type metadata accessor for FMIPGarbageCollector();
  swift_allocObject();
  *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_garbageCollector) = sub_1D428DFD8();
  uint64_t v42 = v108;
  uint64_t v101 = OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems;
  uint64_t v43 = *(void *)(v108 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_cacheDirectory);
  uint64_t v44 = *(void *)(v108 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_cacheDirectory + 8);
  *(void *)&v112[0] = *(void *)(v108 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems);
  uint64_t v45 = v108 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_preferredLocale;
  uint64_t v46 = sub_1D44696C8();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = (uint64_t)v103;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v103, v45, v46);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v48, 0, 1, v46);
  uint64_t v49 = *(void **)(v3 + v102);
  type metadata accessor for FMIPDataManager();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_1D438D298(v43, v44, (uint64_t *)v112, v48, v41, v40, v49);
  *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager) = v50;
  type metadata accessor for FMIPBeaconSharingController();
  swift_allocObject();
  swift_retain();
  *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconSharingController) = sub_1D4287B6C();
  type metadata accessor for FMLocationShifter();
  swift_allocObject();
  *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_locationShifter) = FMLocationShifter.init()();
  *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_locationController) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMIPLocationController()), sel_init);
  uint64_t v102 = v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_authenticationUIProvider;
  uint64_t v51 = sub_1D42A3A74(v42 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_authenticationUIProvider, v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_authenticationUIProvider, &qword_1EBD7F828);
  (*(void (**)(long long *__return_ptr, uint64_t))(v42
                                                          + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_interactionControllerProvider))(v112, v51);
  uint64_t v52 = v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_interactionController;
  sub_1D42E4A0C(v112, v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_interactionController);
  id v53 = v100;
  sub_1D42E4C38((uint64_t)&v113);
  type metadata accessor for FMIPBeaconRefreshingController(0);
  swift_allocObject();
  *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconRefreshingController) = sub_1D42AAF00(v53, &v113);
  type metadata accessor for FMIPSafeLocationRefreshingController();
  uint64_t v54 = swift_allocObject();
  id v55 = v53;
  *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_safeLocationRefreshingController) = sub_1D427EAE0((uint64_t)v55, v54);
  swift_beginAccess();
  sub_1D42A4D5C(v52, (uint64_t)v112);
  type metadata accessor for FMIPURLHandler();
  uint64_t v56 = swift_allocObject();
  sub_1D42A4D5C((uint64_t)v112, v56 + 16);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v57 = sub_1D4469928();
  unint64_t v103 = (char *)sub_1D42D7FAC(v57, (uint64_t)qword_1EBD83228);
  BOOL v58 = sub_1D44698F8();
  os_log_type_t v59 = sub_1D446A038();
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v60 = v50;
    unint64_t v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v61 = 0;
    _os_log_impl(&dword_1D4271000, v58, v59, "FMIPURLHandler: initialized", v61, 2u);
    int64_t v62 = v61;
    uint64_t v50 = v60;
    MEMORY[0x1D9447730](v62, -1, -1);
  }

  sub_1D42BEC64((uint64_t)v112);
  *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_urlHandler) = v56;
  if (*(unsigned char *)(v108 + v101))
  {
    sub_1D42A4D5C(v52, (uint64_t)v112);
    sub_1D42A3A74(v102, (uint64_t)v111, &qword_1EBD7F828);
    type metadata accessor for FMIPDeviceActionsController();
    memset(v109, 0, sizeof(v109));
    uint64_t v110 = 0;
    swift_allocObject();
    uint64_t v63 = sub_1D42BB6B0(v55, (uint64_t)v112, (uint64_t)v111, (uint64_t)v109);
    *(void *)(v3 + v99) = v63;
    swift_release();
    sub_1D42A4D5C(v52, (uint64_t)v112);
    id v64 = objc_allocWithZone((Class)type metadata accessor for FMAPSConnectionHandler());
    unint64_t v65 = sub_1D42938D4(0xD00000000000001ELL, 0x80000001D4480A10, 0xD000000000000025, 0x80000001D447EB20, 0, 0);
    type metadata accessor for FMIPRefreshingController();
    swift_allocObject();
    uint64_t v66 = sub_1D4295760((uint64_t)v112, v65);
    *(void *)(v3 + v94) = v66;
    swift_release();
  }
  type metadata accessor for FMIPItemActionsController();
  swift_allocObject();
  id v67 = (char *)v55;
  swift_retain();
  uint64_t v68 = sub_1D428CAC8(v67, v50);
  *(void *)(v3 + v104) = v68;
  swift_release();
  type metadata accessor for FMIPDeviceConnectionStateProvider();
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = 0;
  *(void *)(v69 + 32) = 0;
  swift_unknownObjectWeakInit();
  sub_1D4287CBC();
  *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_connectionStateProvider) = v69;
  *(void *)(v69 + 32) = &off_1F2C0B378;
  swift_unknownObjectWeakAssign();
  if ((v107 & 1) == 0)
  {
    swift_retain();
    sub_1D43C0C0C();
    swift_release();
  }
  *(void *)(v50 + 40) = &off_1F2C0B318;
  swift_unknownObjectWeakAssign();
  swift_retain();
  uint64_t v104 = v50;
  sub_1D427F950();
  swift_release();
  *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_locationController)
            + OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_delegate
            + 8) = &off_1F2C0B340;
  swift_unknownObjectWeakAssign();
  uint64_t v70 = v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_interactionController;
  swift_beginAccess();
  uint64_t v71 = *(void *)(v70 + 24);
  uint64_t v72 = *(void *)(v70 + 32);
  sub_1D42E1A94(v70, v71);
  id v73 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v72 + 16);
  uint64_t v74 = swift_retain();
  v73(v74, &off_1F2C0B2F8, v71, v72);
  swift_endAccess();
  uint64_t v75 = *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_refreshingController);
  if (v75)
  {
    *(void *)(v75 + 40) = &off_1F2C0B238;
    swift_unknownObjectWeakAssign();
  }
  *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconRefreshingController)
            + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_delegate
            + 8) = &off_1F2C0B278;
  swift_unknownObjectWeakAssign();
  *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_safeLocationRefreshingController) + 24) = &off_1F2C0B2E8;
  swift_unknownObjectWeakAssign();
  *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_garbageCollector) + 72) = &off_1F2C0B350;
  swift_unknownObjectWeakAssign();
  uint64_t v76 = sub_1D4469E88();
  uint64_t v77 = (uint64_t)v105;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v105, 1, 1, v76);
  uint64_t v78 = (void *)swift_allocObject();
  v78[2] = 0;
  v78[3] = 0;
  v78[4] = v3;
  v78[5] = v3;
  swift_retain_n();
  sub_1D43733DC(v77, (uint64_t)&unk_1EA6CA2E0, (uint64_t)v78);
  swift_release();
  swift_retain_n();
  uint64_t v79 = sub_1D44698F8();
  os_log_type_t v80 = sub_1D446A038();
  if (os_log_type_enabled(v79, v80))
  {
    uint64_t v81 = swift_slowAlloc();
    uint64_t v82 = swift_slowAlloc();
    char v105 = v67;
    uint64_t v83 = v82;
    *(void *)&v112[0] = v82;
    *(_DWORD *)uint64_t v81 = 136315394;
    uint64_t v84 = sub_1D4469638();
    unint64_t v86 = sub_1D427A0D0(0xCuLL, v84, v85);
    uint64_t v87 = MEMORY[0x1D9445EF0](v86);
    unint64_t v89 = v88;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v111[0] = sub_1D42CB9EC(v87, v89, (uint64_t *)v112);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v81 + 12) = 2080;
    if (v107) {
      uint64_t v90 = 0x70616E7320736120;
    }
    else {
      uint64_t v90 = 0;
    }
    if (v107) {
      unint64_t v91 = 0xEC000000746F6873;
    }
    else {
      unint64_t v91 = 0xE000000000000000;
    }
    v111[0] = sub_1D42CB9EC(v90, v91, (uint64_t *)v112);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v79, v80, "FMIPManager<%s>.init%s", (uint8_t *)v81, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v83, -1, -1);
    MEMORY[0x1D9447730](v81, -1, -1);

    swift_release();
    swift_release();
    swift_release();
  }
  else
  {

    swift_release();
    swift_release_n();

    swift_release();
  }
  return v3;
}

uint64_t sub_1D42A4D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1D42A4DC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPLocation.init(from:)(a1, a2);
}

uint64_t FMIPPerson.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EBD7D988);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42A5610();
  sub_1D446A8C8();
  if (!v2)
  {
    LOBYTE(v68[0]) = 4;
    uint64_t v9 = sub_1D446A598();
    uint64_t v11 = v10;
    LOBYTE(v68[0]) = 5;
    uint64_t v62 = sub_1D446A598();
    uint64_t v66 = v12;
    LOBYTE(v68[0]) = 6;
    uint64_t v13 = sub_1D446A598();
    uint64_t v61 = v9;
    uint64_t v63 = v13;
    unint64_t v65 = v14;
    LOBYTE(v68[0]) = 1;
    sub_1D446A598();
    uint64_t v15 = sub_1D446A518();
    swift_bridgeObjectRelease();
    LODWORD(v64) = v15 != 0;
    LOBYTE(v68[0]) = 3;
    LODWORD(v58) = sub_1D446A5A8();
    LOBYTE(v68[0]) = 2;
    uint64_t v16 = sub_1D446A5A8();
    LOBYTE(v68[0]) = 0;
    uint64_t v54 = sub_1D446A5C8();
    LOBYTE(v68[0]) = 7;
    uint64_t v17 = sub_1D446A598();
    unint64_t v55 = v18;
    uint64_t v56 = v17;
    LOBYTE(v68[0]) = 8;
    uint64_t v19 = sub_1D446A598();
    uint64_t v60 = v11;
    uint64_t v59 = v20;
    uint64_t v57 = v19;
    LODWORD(v54) = v54 == 1;
    char v81 = v54;
    char v82 = (char)v64;
    LODWORD(v53) = v16 & 1;
    char v79 = v16 & 1;
    LODWORD(v52) = v58 & 1;
    char v80 = v58 & 1;
    if (v65)
    {
      uint64_t v21 = v60;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v22 = v61;
    }
    else
    {
      char v23 = self;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v24 = objc_msgSend(v23, sel_sharedInstance);
      id v25 = objc_msgSend(v24, sel_ownerAccount);

      id v26 = objc_msgSend(v25, sel_username);
      if (v26)
      {
        uint64_t v63 = sub_1D4469B38();
        unint64_t v65 = v27;
      }
      else
      {
        unint64_t v65 = 0xE700000000000000;
        uint64_t v63 = 0x6E776F6E6B6E75;
      }
      uint64_t v21 = v60;
      uint64_t v22 = v61;
    }
    uint64_t v28 = 0x72656E776FLL;
    if (v55) {
      uint64_t v28 = v56;
    }
    uint64_t v58 = v28;
    if (v55) {
      unint64_t v29 = v55;
    }
    else {
      unint64_t v29 = 0xE500000000000000;
    }
    swift_bridgeObjectRetain();
    unint64_t v30 = v65;
    swift_bridgeObjectRetain();
    uint64_t v56 = v29;
    swift_bridgeObjectRetain();
    v68[0] = v22;
    v68[1] = v21;
    v68[2] = v62;
    v68[3] = v66;
    char v69 = (char)v53;
    char v70 = (char)v64;
    char v71 = v54;
    char v72 = v52;
    uint64_t v73 = v63;
    unint64_t v74 = v30;
    uint64_t v75 = v58;
    unint64_t v76 = v29;
    uint64_t v77 = v57;
    uint64_t v78 = v59;
    uint64_t v54 = FMIPPerson.debugDescription.getter();
    unint64_t v55 = v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1D4469928();
    sub_1D42D7FAC(v32, (uint64_t)qword_1EBD83228);
    unint64_t v33 = v55;
    swift_bridgeObjectRetain();
    id v34 = sub_1D44698F8();
    os_log_type_t v35 = sub_1D4469FF8();
    id v64 = v34;
    if (os_log_type_enabled(v34, v35))
    {
      id v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      v68[0] = v52;
      uint64_t v36 = v53;
      *(_DWORD *)id v53 = 136315138;
      v51[1] = v36 + 4;
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_1D42CB9EC(v54, v33, v68);
      sub_1D446A188();
      swift_bridgeObjectRelease_n();
      uint64_t v37 = v64;
      os_log_type_t v38 = v35;
      int v39 = v53;
      _os_log_impl(&dword_1D4271000, v64, v38, "FMIPPerson: Initialized: %s", v53, 0xCu);
      uint64_t v40 = v52;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v40, -1, -1);
      MEMORY[0x1D9447730](v39, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v41 = v79;
    char v42 = v82;
    char v43 = v81;
    char v44 = v80;
    uint64_t v45 = v60;
    *(void *)a2 = v61;
    *(void *)(a2 + 8) = v45;
    uint64_t v46 = v66;
    *(void *)(a2 + 16) = v62;
    *(void *)(a2 + 24) = v46;
    *(unsigned char *)(a2 + 32) = v41;
    *(unsigned char *)(a2 + 33) = v42;
    *(unsigned char *)(a2 + 34) = v43;
    *(unsigned char *)(a2 + 35) = v44;
    unint64_t v47 = v65;
    *(void *)(a2 + 40) = v63;
    *(void *)(a2 + 48) = v47;
    uint64_t v48 = v56;
    *(void *)(a2 + 56) = v58;
    *(void *)(a2 + 64) = v48;
    uint64_t v49 = v59;
    *(void *)(a2 + 72) = v57;
    *(void *)(a2 + 80) = v49;
  }
  return sub_1D42BEC64((uint64_t)a1);
}

uint64_t sub_1D42A55D4(uint64_t a1)
{
  unint64_t v2 = sub_1D42A5610();

  return MEMORY[0x1F41862A8](a1, v2);
}

unint64_t sub_1D42A5610()
{
  unint64_t result = qword_1EBD7CBC8;
  if (!qword_1EBD7CBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CBC8);
  }
  return result;
}

unint64_t FMIPPerson.debugDescription.getter()
{
  return 0xD000000000000019;
}

void sub_1D42A57F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = qword_1EA6C9D88;
  uint64_t v3 = *(void *)(v0 + qword_1EA6C9D88);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_1D43338B4((void *)(v3 + 16), &v52);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  uint64_t v4 = v52;
  swift_release();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v52 = v4;
  sub_1D42C4CF0(3157553, 0xE300000000000000, 0xD000000000000015, 0x80000001D447F9D0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v1 + v2);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
  sub_1D4333854((void *)(v6 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v1 + v2);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  sub_1D43338B4((void *)(v7 + 16), &v52);
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
  uint64_t v8 = v52;
  swift_release();
  char v9 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v52 = v8;
  sub_1D42C4CF0(3157555, 0xE300000000000000, 0xD000000000000014, 0x80000001D447F9F0, v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v1 + v2);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  sub_1D4333854((void *)(v10 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v1 + v2);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 24));
  sub_1D43338B4((void *)(v11 + 16), &v52);
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 24));
  uint64_t v12 = v52;
  swift_release();
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v52 = v12;
  sub_1D42C4CF0(0x72657665726F46, 0xE700000000000000, 0xD000000000000012, 0x80000001D447FA10, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v1 + v2);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
  sub_1D4333854((void *)(v14 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(self, sel_currentDevice);
  if (v15)
  {
    uint64_t v16 = v15;
    id v17 = objc_msgSend(v15, sel_serverFriendlyDescription);

    if (v17)
    {
      uint64_t v18 = sub_1D4469B38();
      uint64_t v20 = v19;
    }
    else
    {
      uint64_t v18 = 0;
      uint64_t v20 = 0;
    }
    uint64_t v21 = *(void *)(v1 + v2);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
    sub_1D43338B4((void *)(v21 + 16), &v52);
    os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
    uint64_t v22 = v52;
    swift_release();
    uint64_t v52 = v22;
    if (v20)
    {
      char v23 = swift_isUniquelyReferenced_nonNull_native();
      sub_1D42C4CF0(v18, v20, 0xD000000000000011, 0x80000001D447FA30, v23);
    }
    else
    {
      sub_1D43FC4BC(0xD000000000000011, 0x80000001D447FA30);
    }
    uint64_t v24 = swift_bridgeObjectRelease();
    uint64_t v25 = *(void *)(v1 + v2);
    MEMORY[0x1F4188790](v24);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v25 + 24));
    sub_1D4333854((void *)(v25 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v25 + 24));
    swift_release();
    swift_bridgeObjectRelease();
    id v26 = objc_msgSend(self, sel_sharedInstance);
    unsigned int v27 = objc_msgSend(v26, sel_isInternalBuild);

    if (v27)
    {
      uint64_t v28 = self;
      id v29 = objc_msgSend(v28, sel_standardUserDefaults);
      unint64_t v30 = (void *)sub_1D4469B08();
      unsigned int v31 = objc_msgSend(v29, sel_BOOLForKey_, v30);

      if (v31)
      {
        uint64_t v32 = *(void *)(v1 + v2);
        swift_retain();
        os_unfair_lock_lock((os_unfair_lock_t)(v32 + 24));
        sub_1D43338B4((void *)(v32 + 16), &v52);
        os_unfair_lock_unlock((os_unfair_lock_t)(v32 + 24));
        uint64_t v33 = v52;
        swift_release();
        char v34 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v52 = v33;
        sub_1D42C4CF0(1702195828, 0xE400000000000000, 0xD000000000000018, 0x80000001D447FAD0, v34);
        uint64_t v35 = swift_bridgeObjectRelease();
        uint64_t v36 = *(void *)(v1 + v2);
        MEMORY[0x1F4188790](v35);
        swift_retain();
        os_unfair_lock_lock((os_unfair_lock_t)(v36 + 24));
        sub_1D4333854((void *)(v36 + 16));
        os_unfair_lock_unlock((os_unfair_lock_t)(v36 + 24));
        swift_release();
        swift_bridgeObjectRelease();
      }
      id v37 = objc_msgSend(v28, sel_standardUserDefaults);
      os_log_type_t v38 = (void *)sub_1D4469B08();
      unsigned int v39 = objc_msgSend(v37, sel_BOOLForKey_, v38);

      if (v39)
      {
        uint64_t v40 = *(void *)(v1 + v2);
        swift_retain();
        os_unfair_lock_lock((os_unfair_lock_t)(v40 + 24));
        sub_1D43338B4((void *)(v40 + 16), &v52);
        os_unfair_lock_unlock((os_unfair_lock_t)(v40 + 24));
        uint64_t v41 = v52;
        swift_release();
        char v42 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v52 = v41;
        sub_1D42C4CF0(1702195828, 0xE400000000000000, 0xD00000000000001ALL, 0x80000001D447FAB0, v42);
        uint64_t v43 = swift_bridgeObjectRelease();
        uint64_t v44 = *(void *)(v1 + v2);
        MEMORY[0x1F4188790](v43);
        swift_retain();
        os_unfair_lock_lock((os_unfair_lock_t)(v44 + 24));
        sub_1D4333854((void *)(v44 + 16));
        os_unfair_lock_unlock((os_unfair_lock_t)(v44 + 24));
        swift_release();
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v45 = *(void *)(v1 + qword_1EBD7CC80 + 8);
    if (v45)
    {
      uint64_t v46 = *(void *)(v1 + qword_1EBD7CC80);
      uint64_t v47 = *(void *)(v1 + v2);
      swift_bridgeObjectRetain();
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v47 + 24));
      sub_1D43338B4((void *)(v47 + 16), &v52);
      os_unfair_lock_unlock((os_unfair_lock_t)(v47 + 24));
      uint64_t v48 = v52;
      swift_release();
      char v49 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v52 = v48;
      sub_1D42C4CF0(v46, v45, 0xD000000000000019, 0x80000001D447FA50, v49);
      uint64_t v50 = swift_bridgeObjectRelease();
      uint64_t v51 = *(void *)(v1 + v2);
      MEMORY[0x1F4188790](v50);
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v51 + 24));
      sub_1D4333854((void *)(v51 + 16));
      os_unfair_lock_unlock((os_unfair_lock_t)(v51 + 24));
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1D42A6054(void *a1)
{
}

void FMIPPlaySoundMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6CBB68);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for FMIPPlaySoundMetadata();
  uint64_t v21 = v1;
  uint64_t v8 = (void *)sub_1D4469578();
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42B84C4();
  sub_1D446A8E8();
  objc_msgSend(v8, sel_fm_epoch);
  LOBYTE(v23) = 0;
  char v9 = v6;
  id v10 = v22;
  sub_1D446A6A8();
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    uint64_t v11 = v21;
    uint64_t v23 = qword_1D447C708[*v21];
    sub_1D446A6D8();
    LOBYTE(v23) = 1;
    uint64_t v12 = v9;
    sub_1D446A658();
    id v22 = v8;
    swift_bridgeObjectRelease();
    char v13 = &v11[v7[6]];
    uint64_t v14 = *((void *)v13 + 1);
    uint64_t v23 = *(void *)v13;
    uint64_t v24 = v14;
    char v25 = 2;
    swift_bridgeObjectRetain();
    sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
    sub_1D42BD508();
    sub_1D446A698();
    swift_bridgeObjectRelease();
    id v15 = &v11[v7[7]];
    uint64_t v16 = *((void *)v15 + 1);
    uint64_t v23 = *(void *)v15;
    uint64_t v24 = v16;
    char v25 = 3;
    swift_bridgeObjectRetain();
    sub_1D446A698();
    swift_bridgeObjectRelease();
    id v17 = &v11[v7[8]];
    uint64_t v18 = *((void *)v17 + 1);
    uint64_t v23 = *(void *)v17;
    uint64_t v24 = v18;
    char v25 = 4;
    swift_bridgeObjectRetain();
    sub_1D446A698();
    swift_bridgeObjectRelease();
    uint64_t v19 = &v21[v7[9]];
    uint64_t v20 = *((void *)v19 + 1);
    uint64_t v23 = *(void *)v19;
    uint64_t v24 = v20;
    char v25 = 5;
    swift_bridgeObjectRetain();
    sub_1D446A698();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, void))(v4 + 8))(v12, 0);
  }
}

uint64_t sub_1D42A63F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPAudioChannel.init(from:)(a1, a2);
}

uint64_t FMIPAudioChannel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6C9AE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42A67EC();
  sub_1D446A8C8();
  if (!v2)
  {
    LOBYTE(v34[0]) = 0;
    uint64_t v9 = sub_1D446A598();
    uint64_t v11 = v10;
    uint64_t v32 = v9;
    LOBYTE(v34[0]) = 1;
    char v12 = sub_1D446A5A8();
    LOBYTE(v34[0]) = 2;
    uint64_t v31 = sub_1D446A5C8();
    LOBYTE(v34[0]) = 3;
    char v13 = sub_1D446A5A8();
    BOOL v38 = v31 != 0;
    char v39 = v13 & 1;
    char v40 = v12 & 1;
    v34[0] = v32;
    v34[1] = v11;
    BOOL v35 = v31 != 0;
    char v36 = v12 & 1;
    char v37 = v13 & 1;
    uint64_t v31 = FMIPAudioChannel.debugDescription.getter();
    unint64_t v16 = v15;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1D4469928();
    sub_1D42D7FAC(v17, (uint64_t)qword_1EBD83228);
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1D44698F8();
    os_log_type_t v19 = sub_1D4469FF8();
    int v30 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      v34[0] = v27;
      id v29 = v18;
      uint64_t v20 = v28;
      *(_DWORD *)uint64_t v28 = 136315138;
      v26[1] = v20 + 4;
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_1D42CB9EC(v31, v16, v34);
      sub_1D446A188();
      swift_bridgeObjectRelease_n();
      uint64_t v21 = v28;
      _os_log_impl(&dword_1D4271000, v29, (os_log_type_t)v30, "FMIPAudioChannel: Initialized: %s", v28, 0xCu);
      uint64_t v22 = v27;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v22, -1, -1);
      MEMORY[0x1D9447730](v21, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    BOOL v23 = v38;
    char v24 = v40;
    char v25 = v39;
    *(void *)a2 = v32;
    *(void *)(a2 + 8) = v11;
    *(unsigned char *)(a2 + 16) = v23;
    *(unsigned char *)(a2 + 17) = v24;
    *(unsigned char *)(a2 + 18) = v25;
  }
  return sub_1D42BEC64((uint64_t)a1);
}

unint64_t sub_1D42A67EC()
{
  unint64_t result = qword_1EA6C9AE8;
  if (!qword_1EA6C9AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9AE8);
  }
  return result;
}

unint64_t FMIPAudioChannel.debugDescription.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_1D42A69D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FMIPAddress.init(from:)(a1, a2);
}

uint64_t FMIPAddress.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EBD7D990);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42A7130();
  sub_1D446A8C8();
  if (v2)
  {
    uint64_t v9 = (uint64_t)a1;
  }
  else
  {
    LOBYTE(v98) = 0;
    uint64_t v10 = sub_1D446A598();
    uint64_t v96 = a1;
    uint64_t v93 = v11;
    uint64_t v94 = v10;
    sub_1D42D5DA0(&qword_1EA6C9E30);
    char v97 = 1;
    sub_1D42E2190(&qword_1EA6C9F70, &qword_1EA6C9E30);
    sub_1D446A5D8();
    uint64_t v92 = v98;
    LOBYTE(v98) = 2;
    uint64_t v12 = sub_1D446A598();
    uint64_t v90 = v13;
    uint64_t v91 = v12;
    LOBYTE(v98) = 3;
    uint64_t v14 = sub_1D446A598();
    uint64_t v88 = v15;
    uint64_t v89 = v14;
    LOBYTE(v98) = 4;
    uint64_t v16 = sub_1D446A598();
    uint64_t v86 = v17;
    uint64_t v87 = v16;
    LOBYTE(v98) = 5;
    uint64_t v18 = sub_1D446A598();
    uint64_t v84 = v19;
    uint64_t v85 = v18;
    LOBYTE(v98) = 6;
    uint64_t v20 = sub_1D446A598();
    uint64_t v82 = v21;
    uint64_t v83 = v20;
    LOBYTE(v98) = 7;
    uint64_t v22 = sub_1D446A598();
    uint64_t v80 = v23;
    uint64_t v81 = v22;
    LOBYTE(v98) = 8;
    uint64_t v24 = sub_1D446A598();
    uint64_t v78 = v25;
    uint64_t v79 = v24;
    LOBYTE(v98) = 9;
    uint64_t v26 = sub_1D446A598();
    uint64_t v76 = v27;
    uint64_t v77 = v26;
    LOBYTE(v98) = 10;
    uint64_t v28 = sub_1D446A598();
    uint64_t v74 = v29;
    uint64_t v75 = v28;
    char v97 = 11;
    sub_1D446A5D8();
    uint64_t v64 = v98;
    LOBYTE(v98) = 12;
    uint64_t v30 = sub_1D446A598();
    uint64_t v72 = v31;
    uint64_t v73 = v30;
    LOBYTE(v98) = 13;
    uint64_t v32 = sub_1D446A598();
    uint64_t v70 = v33;
    uint64_t v71 = v32;
    LOBYTE(v98) = 14;
    uint64_t v34 = sub_1D446A598();
    uint64_t v68 = v35;
    uint64_t v69 = v34;
    LOBYTE(v98) = 15;
    uint64_t v36 = sub_1D446A598();
    uint64_t v66 = v37;
    uint64_t v67 = v36;
    LOBYTE(v98) = 16;
    uint64_t v38 = sub_1D446A598();
    uint64_t v95 = v6;
    uint64_t v40 = v39;
    uint64_t v65 = v38;
    LOBYTE(v98) = 17;
    uint64_t v41 = sub_1D446A598();
    uint64_t v43 = v42;
    LOBYTE(v98) = 18;
    uint64_t v44 = sub_1D446A598();
    uint64_t v46 = v45;
    (*(void (**)(char *, uint64_t))(v95 + 8))(v8, v5);
    uint64_t v47 = v93;
    *a2 = v94;
    a2[1] = v47;
    uint64_t v48 = v91;
    a2[2] = v92;
    a2[3] = v48;
    uint64_t v49 = v89;
    a2[4] = v90;
    a2[5] = v49;
    uint64_t v50 = v87;
    a2[6] = v88;
    a2[7] = v50;
    uint64_t v51 = v85;
    a2[8] = v86;
    a2[9] = v51;
    uint64_t v52 = v83;
    a2[10] = v84;
    a2[11] = v52;
    uint64_t v53 = v81;
    a2[12] = v82;
    a2[13] = v53;
    uint64_t v54 = v79;
    a2[14] = v80;
    a2[15] = v54;
    uint64_t v55 = v77;
    a2[16] = v78;
    a2[17] = v55;
    uint64_t v56 = v75;
    a2[18] = v76;
    a2[19] = v56;
    uint64_t v57 = v64;
    a2[20] = v74;
    a2[21] = v57;
    uint64_t v58 = v72;
    a2[22] = v73;
    a2[23] = v58;
    uint64_t v59 = v70;
    a2[24] = v71;
    a2[25] = v59;
    uint64_t v60 = v68;
    a2[26] = v69;
    a2[27] = v60;
    uint64_t v61 = v66;
    a2[28] = v67;
    a2[29] = v61;
    a2[30] = v65;
    a2[31] = v40;
    a2[32] = v41;
    a2[33] = v43;
    a2[34] = v44;
    a2[35] = v46;
    uint64_t v9 = (uint64_t)v96;
  }
  return sub_1D42BEC64(v9);
}

unint64_t sub_1D42A7130()
{
  unint64_t result = qword_1EBD7CBE8;
  if (!qword_1EBD7CBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CBE8);
  }
  return result;
}

uint64_t sub_1D42A7184(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1D42A71D8(char a1)
{
  return sub_1D42A71E4(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24));
}

uint64_t sub_1D42A71E4(char a1, uint64_t a2, void (*a3)(uint64_t *))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1D4469928();
    sub_1D42D7FAC(v7, (uint64_t)qword_1EBD83228);
    uint64_t v8 = sub_1D44698F8();
    os_log_type_t v9 = sub_1D446A038();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v22 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      if (a1) {
        uint64_t v12 = 0x64656C6261736964;
      }
      else {
        uint64_t v12 = 0x64656C62616E65;
      }
      if (a1) {
        unint64_t v13 = 0xE800000000000000;
      }
      else {
        unint64_t v13 = 0xE700000000000000;
      }
      sub_1D42CB9EC(v12, v13, &v22);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v8, v9, "FMIPBeaconRefreshingController: refreshUTAlertState: %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v11, -1, -1);
      MEMORY[0x1D9447730](v10, -1, -1);
    }

    if (a3)
    {
      LOBYTE(v22) = a1 & 1;
      a3(&v22);
    }
    uint64_t v14 = OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_utAlertState;
    if (a1) {
      uint64_t v15 = 0x64656C6261736964;
    }
    else {
      uint64_t v15 = 0x64656C62616E65;
    }
    if (a1) {
      unint64_t v16 = 0xE800000000000000;
    }
    else {
      unint64_t v16 = 0xE700000000000000;
    }
    if (*(unsigned char *)(v6 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_utAlertState)) {
      uint64_t v17 = 0x64656C6261736964;
    }
    else {
      uint64_t v17 = 0x64656C62616E65;
    }
    if (*(unsigned char *)(v6 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_utAlertState)) {
      unint64_t v18 = 0xE800000000000000;
    }
    else {
      unint64_t v18 = 0xE700000000000000;
    }
    if (v15 == v17 && v16 == v18)
    {
      swift_release();
      return swift_bridgeObjectRelease_n();
    }
    else
    {
      char v20 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v20) {
        return swift_release();
      }
      char v21 = a1 & 1;
      *(unsigned char *)(v6 + v14) = v21;
      if (!MEMORY[0x1D9447840](v6 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_delegate))
      {
        return swift_release();
      }
      else
      {
        LOBYTE(v22) = v21;
        sub_1D428F984((unsigned __int8 *)&v22);
        swift_release();
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

uint64_t FMReverseGeocodingRequest.debugDescription.getter()
{
  sub_1D446A378();
  sub_1D4469C08();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1D42A9D18();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  objc_msgSend(v1, sel_coordinate);
  sub_1D4469EA8();
  sub_1D4469C08();
  objc_msgSend(v1, sel_coordinate);
  sub_1D4469EA8();
  sub_1D4469C08();
  objc_msgSend(v1, sel_horizontalAccuracy);
  sub_1D4469EA8();
  sub_1D4469C08();
  objc_msgSend(v1, sel_horizontalAccuracy);
  sub_1D446A6D8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  type metadata accessor for FMReverseGeocodingRequest();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  objc_msgSend(v1, sel_referenceFrame);
  sub_1D446A6D8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  return 0;
}

uint64_t sub_1D42A789C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  unint64_t v162 = a2;
  uint64_t v5 = sub_1D4469618();
  uint64_t v158 = *(void *)(v5 - 8);
  uint64_t v159 = v5;
  MEMORY[0x1F4188790](v5);
  unint64_t v157 = (char *)&v146 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v7 = MEMORY[0x1F4188790](v156);
  uint64_t v150 = (uint64_t *)((char *)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  unsigned __int8 v154 = (uint64_t **)((char *)&v146 - v10);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v153 = (uint64_t)&v146 - v12;
  MEMORY[0x1F4188790](v11);
  int v152 = (uint64_t *)((char *)&v146 - v13);
  uint64_t v14 = sub_1D42D5DA0(&qword_1EA6CA4C8);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v155 = (uint64_t)&v146 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  os_log_t v151 = (os_log_t)((char *)&v146 - v18);
  MEMORY[0x1F4188790](v17);
  char v20 = (char *)&v146 - v19;
  uint64_t v163 = (int *)sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4D0);
  uint64_t v166 = *((void *)v163 - 1);
  uint64_t v21 = MEMORY[0x1F4188790](v163);
  uint64_t v147 = (uint64_t)&v146 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  unint64_t v146 = (uint64_t *)((char *)&v146 - v24);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v148 = (uint64_t *)((char *)&v146 - v26);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v29 = (uint64_t **)((char *)&v146 - v28);
  uint64_t v30 = MEMORY[0x1F4188790](v27);
  uint64_t v149 = (uint64_t)&v146 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v160 = (uint64_t)&v146 - v33;
  MEMORY[0x1F4188790](v32);
  uint64_t v161 = (uint64_t)&v146 - v34;
  uint64_t v35 = sub_1D44699E8();
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v38 = (uint64_t **)((char *)&v146 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = *(void **)((char *)v3 + qword_1EA6CB220);
  *uint64_t v38 = v39;
  (*(void (**)(void *, void, uint64_t))(v36 + 104))(v38, *MEMORY[0x1E4FBCBF0], v35);
  id v40 = v39;
  char v41 = sub_1D4469A08();
  uint64_t v43 = *(void (**)(void *, uint64_t))(v36 + 8);
  uint64_t v42 = v36 + 8;
  v43(v38, v35);
  if ((v41 & 1) == 0)
  {
    __break(1u);
    goto LABEL_47;
  }
  unint64_t v164 = a1;
  uint64_t v44 = sub_1D42A9D18();
  uint64_t v46 = v45;
  uint64_t v165 = v3;
  uint64_t v47 = (uint64_t *)((char *)v3 + qword_1EA6CB1F8);
  swift_beginAccess();
  uint64_t v48 = *v47;
  if (*(void *)(v48 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v49 = sub_1D42C4FCC(v44, v46);
    uint64_t v3 = v163;
    uint64_t v50 = v166;
    if (v51)
    {
      sub_1D42A3A74(*(void *)(v48 + 56) + *(void *)(v166 + 72) * v49, (uint64_t)v20, (uint64_t *)&unk_1EA6CA4D0);
      uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t, int *))(v50 + 56);
      v52(v20, 0, 1, v3);
    }
    else
    {
      uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t, int *))(v166 + 56);
      v52(v20, 1, 1, v163);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v50 = v166;
    uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t, int *))(v166 + 56);
    uint64_t v3 = v163;
    v52(v20, 1, 1, v163);
  }
  swift_bridgeObjectRelease();
  uint64_t v53 = *(unsigned int (**)(char *, uint64_t, int *))(v50 + 48);
  if (v53(v20, 1, v3) != 1)
  {
    uint64_t v42 = v161;
    sub_1D4276C98((uint64_t)v20, v161, (uint64_t *)&unk_1EA6CA4D0);
    if (qword_1EA6C8F58 == -1)
    {
LABEL_13:
      uint64_t v63 = sub_1D4469928();
      sub_1D42D7FAC(v63, (uint64_t)qword_1EA6E46D0);
      uint64_t v64 = v164;
      uint64_t v65 = v152;
      sub_1D42D22A0((uint64_t)v164, (uint64_t)v152, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      uint64_t v66 = (uint64_t)v64;
      uint64_t v67 = v153;
      sub_1D42D22A0(v66, v153, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      uint64_t v68 = v160;
      sub_1D42A3A74(v42, v160, (uint64_t *)&unk_1EA6CA4D0);
      swift_retain_n();
      uint64_t v69 = sub_1D44698F8();
      os_log_type_t v70 = sub_1D446A038();
      int v71 = v70;
      if (os_log_type_enabled(v69, v70))
      {
        uint64_t v72 = swift_slowAlloc();
        os_log_t v151 = v69;
        uint64_t v73 = v72;
        uint64_t v163 = (int *)swift_slowAlloc();
        *(void *)&v169[0] = v163;
        *(_DWORD *)uint64_t v73 = 136315906;
        LODWORD(v150) = v71;
        uint64_t v74 = sub_1D446A918();
        uint64_t v75 = v67;
        v167[0] = sub_1D42CB9EC(v74, v76, (uint64_t *)v169);
        sub_1D446A188();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v73 + 12) = 2080;
        uint64_t v77 = *v65;
        unint64_t v78 = v65[1];
        swift_bridgeObjectRetain();
        v167[0] = sub_1D42CB9EC(v77, v78, (uint64_t *)v169);
        sub_1D446A188();
        swift_bridgeObjectRelease();
        sub_1D42D20B8((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        *(_WORD *)(v73 + 22) = 2080;
        uint64_t v79 = sub_1D42A9D18();
        v167[0] = sub_1D42CB9EC(v79, v80, (uint64_t *)v169);
        sub_1D446A188();
        swift_bridgeObjectRelease();
        sub_1D42D20B8(v75, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        *(_WORD *)(v73 + 32) = 2080;
        uint64_t v81 = v160;
        uint64_t v42 = v161;
        unint64_t v82 = FMIPAddress.debugDescription.getter();
        v167[0] = sub_1D42CB9EC(v82, v83, (uint64_t *)v169);
        sub_1D446A188();
        swift_bridgeObjectRelease();
        sub_1D4276C3C(v81, (uint64_t *)&unk_1EA6CA4D0);
        os_log_t v84 = v151;
        _os_log_impl(&dword_1D4271000, v151, (os_log_type_t)v150, "%s: Using cached request %s based on geoHash %s -> %s.", (uint8_t *)v73, 0x2Au);
        uint64_t v85 = (uint64_t)v163;
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v85, -1, -1);
        MEMORY[0x1D9447730](v73, -1, -1);
      }
      else
      {
        swift_release_n();
        sub_1D42D20B8((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        sub_1D42D20B8(v67, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        sub_1D4276C3C(v68, (uint64_t *)&unk_1EA6CA4D0);
      }
      uint64_t v86 = v164;
      uint64_t v87 = v164[1];
      uint64_t v163 = (int *)*v164;
      uint64_t v88 = v154;
      sub_1D42D22A0((uint64_t)v164, (uint64_t)v154, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      uint64_t v89 = (const void *)(v42 + v3[12]);
      memcpy(v167, v89, sizeof(v167));
      uint64_t v90 = (void *)v86[2];
      swift_bridgeObjectRetain();
      sub_1D42FC768((uint64_t)v167);
      id v91 = objc_msgSend(v90, sel_timestamp);
      uint64_t v92 = v157;
      sub_1D44695D8();

      uint64_t v93 = v88[1];
      *uint64_t v29 = *v88;
      v29[1] = v93;
      uint64_t v94 = (void *)v88[2];
      swift_bridgeObjectRetain();
      v29[2] = sub_1D42A9D18();
      uint64_t v29[3] = v95;
      v29[4] = v94;
      uint64_t v96 = v42;
      char v97 = *((unsigned char *)v88 + *(int *)(v156 + 28));
      id v98 = v94;
      sub_1D42D20B8((uint64_t)v88, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      *((unsigned char *)v29 + v3[13]) = v97;
      (*(void (**)(char *, char *, uint64_t))(v158 + 32))((char *)v29 + v3[11], v92, v159);
      memcpy((char *)v29 + v3[12], v167, 0x120uLL);
      uint64_t v99 = v155;
      sub_1D4276C98((uint64_t)v29, v155, (uint64_t *)&unk_1EA6CA4D0);
      (*(void (**)(uint64_t, void, uint64_t, int *))(v166 + 56))(v99, 0, 1, v3);
      swift_beginAccess();
      sub_1D43F81AC(v99, (uint64_t)v163, v87);
      swift_endAccess();
      memcpy(v169, v89, sizeof(v169));
      id v100 = v162;
      memcpy(v162, v89, 0x120uLL);
      sub_1D42FC768((uint64_t)v169);
      sub_1D4276C3C(v96, (uint64_t *)&unk_1EA6CA4D0);
      uint64_t v101 = v100;
      return nullsub_1(v101);
    }
LABEL_47:
    swift_once();
    goto LABEL_13;
  }
  sub_1D4276C3C((uint64_t)v20, &qword_1EA6CA4C8);
  uint64_t v54 = v164;
  uint64_t v56 = *v164;
  uint64_t v55 = v164[1];
  uint64_t v57 = (uint64_t *)((char *)v165 + qword_1EA6CB200);
  swift_beginAccess();
  uint64_t v58 = *v57;
  if (!*(void *)(v58 + 16))
  {
    os_log_t v61 = v151;
    v52((char *)v151, 1, 1, v3);
LABEL_21:
    sub_1D4276C3C((uint64_t)v61, &qword_1EA6CA4C8);
    if (qword_1EA6C8F58 != -1) {
      swift_once();
    }
    uint64_t v103 = sub_1D4469928();
    sub_1D42D7FAC(v103, (uint64_t)qword_1EA6E46D0);
    uint64_t v104 = v150;
    sub_1D42D22A0((uint64_t)v54, (uint64_t)v150, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    swift_retain_n();
    char v105 = sub_1D44698F8();
    os_log_type_t v106 = sub_1D446A038();
    if (os_log_type_enabled(v105, v106))
    {
      uint64_t v107 = swift_slowAlloc();
      uint64_t v108 = swift_slowAlloc();
      *(void *)&v169[0] = v108;
      *(_DWORD *)uint64_t v107 = 136315394;
      uint64_t v109 = sub_1D446A918();
      uint64_t v168 = sub_1D42CB9EC(v109, v110, (uint64_t *)v169);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v107 + 12) = 2080;
      uint64_t v111 = *v104;
      unint64_t v112 = v104[1];
      swift_bridgeObjectRetain();
      uint64_t v168 = sub_1D42CB9EC(v111, v112, (uint64_t *)v169);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D42D20B8((uint64_t)v104, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      _os_log_impl(&dword_1D4271000, v105, v106, "%s: No cached request for %s.", (uint8_t *)v107, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v108, -1, -1);
      MEMORY[0x1D9447730](v107, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_1D42D20B8((uint64_t)v104, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    }

    goto LABEL_43;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v59 = sub_1D42C4FCC(v56, v55);
  if (v60)
  {
    os_log_t v61 = v151;
    sub_1D42A3A74(*(void *)(v58 + 56) + *(void *)(v166 + 72) * v59, (uint64_t)v151, (uint64_t *)&unk_1EA6CA4D0);
    uint64_t v62 = 0;
  }
  else
  {
    uint64_t v62 = 1;
    os_log_t v61 = v151;
  }
  v52((char *)v61, v62, 1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v53((char *)v61, 1, v3) == 1) {
    goto LABEL_21;
  }
  uint64_t v113 = v149;
  sub_1D4276C98((uint64_t)v61, v149, (uint64_t *)&unk_1EA6CA4D0);
  id v114 = v157;
  sub_1D44695E8();
  sub_1D4469558();
  double v116 = v115;
  (*(void (**)(char *, uint64_t))(v158 + 8))(v114, v159);
  if (v116 > 30.0)
  {
    if (qword_1EA6C8F58 != -1) {
      swift_once();
    }
    uint64_t v117 = sub_1D4469928();
    sub_1D42D7FAC(v117, (uint64_t)qword_1EA6E46D0);
    uint64_t v118 = v148;
    sub_1D42A3A74(v113, (uint64_t)v148, (uint64_t *)&unk_1EA6CA4D0);
    swift_retain_n();
    id v119 = sub_1D44698F8();
    os_log_type_t v120 = sub_1D446A038();
    if (os_log_type_enabled(v119, v120))
    {
      uint64_t v121 = swift_slowAlloc();
      uint64_t v122 = swift_slowAlloc();
      *(void *)&v169[0] = v122;
      *(_DWORD *)uint64_t v121 = 136315394;
      uint64_t v123 = sub_1D446A918();
      uint64_t v168 = sub_1D42CB9EC(v123, v124, (uint64_t *)v169);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v121 + 12) = 2080;
      uint64_t v125 = *v118;
      unint64_t v126 = v118[1];
      swift_bridgeObjectRetain();
      uint64_t v168 = sub_1D42CB9EC(v125, v126, (uint64_t *)v169);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D4276C3C((uint64_t)v118, (uint64_t *)&unk_1EA6CA4D0);
      _os_log_impl(&dword_1D4271000, v119, v120, "%s: Cached request for %s is older than the 30s.", (uint8_t *)v121, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v122, -1, -1);
      MEMORY[0x1D9447730](v121, -1, -1);

      uint64_t v127 = v149;
    }
    else
    {

      sub_1D4276C3C((uint64_t)v118, (uint64_t *)&unk_1EA6CA4D0);
      swift_release_n();
      uint64_t v127 = v113;
    }
    goto LABEL_42;
  }
  objc_msgSend(*(id *)(v113 + 32), sel_distanceFromLocation_, v54[2]);
  uint64_t v129 = *(void *)&v128;
  if (*((unsigned char *)v54 + *(int *)(v156 + 28))) {
    double v130 = 50.0;
  }
  else {
    double v130 = 250.0;
  }
  if (v128 < v130)
  {
    if (qword_1EA6C8F58 != -1) {
      swift_once();
    }
    uint64_t v131 = sub_1D4469928();
    sub_1D42D7FAC(v131, (uint64_t)qword_1EA6E46D0);
    id v132 = v146;
    sub_1D42A3A74(v113, (uint64_t)v146, (uint64_t *)&unk_1EA6CA4D0);
    uint64_t v133 = v147;
    sub_1D42A3A74(v113, v147, (uint64_t *)&unk_1EA6CA4D0);
    uint64_t v134 = sub_1D44698F8();
    os_log_type_t v135 = sub_1D446A038();
    if (os_log_type_enabled(v134, v135))
    {
      uint64_t v136 = swift_slowAlloc();
      uint64_t v137 = swift_slowAlloc();
      *(void *)&v169[0] = v137;
      *(_DWORD *)uint64_t v136 = 136315906;
      uint64_t v138 = *v132;
      unint64_t v139 = v132[1];
      swift_bridgeObjectRetain();
      uint64_t v168 = sub_1D42CB9EC(v138, v139, (uint64_t *)v169);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D4276C3C((uint64_t)v132, (uint64_t *)&unk_1EA6CA4D0);
      *(_WORD *)(v136 + 12) = 2048;
      uint64_t v168 = v129;
      sub_1D446A188();
      *(_WORD *)(v136 + 22) = 2048;
      uint64_t v168 = *(void *)&v130;
      sub_1D446A188();
      *(_WORD *)(v136 + 32) = 2080;
      uint64_t v140 = (uint64_t)v163;
      uint64_t v141 = v147;
      unint64_t v142 = FMIPAddress.debugDescription.getter();
      uint64_t v168 = sub_1D42CB9EC(v142, v143, (uint64_t *)v169);
      uint64_t v113 = v149;
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D4276C3C(v141, (uint64_t *)&unk_1EA6CA4D0);
      _os_log_impl(&dword_1D4271000, v134, v135, "FMReverseGeocodingCache: Using cached request for %s due to location distance throttling - distance: %f, limit: %f -> %s.", (uint8_t *)v136, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v137, -1, -1);
      MEMORY[0x1D9447730](v136, -1, -1);
    }
    else
    {
      sub_1D4276C3C((uint64_t)v132, (uint64_t *)&unk_1EA6CA4D0);
      sub_1D4276C3C(v133, (uint64_t *)&unk_1EA6CA4D0);

      uint64_t v140 = (uint64_t)v163;
    }
    uint64_t v144 = (const void *)(v113 + *(int *)(v140 + 48));
    memcpy(v169, v144, sizeof(v169));
    int v145 = v162;
    memcpy(v162, v144, 0x120uLL);
    sub_1D42FC768((uint64_t)v169);
    sub_1D4276C3C(v113, (uint64_t *)&unk_1EA6CA4D0);
    uint64_t v101 = v145;
    return nullsub_1(v101);
  }
  uint64_t v127 = v113;
LABEL_42:
  sub_1D4276C3C(v127, (uint64_t *)&unk_1EA6CA4D0);
LABEL_43:
  sub_1D42FB494(v169);
  return sub_1D4276C98((uint64_t)v169, (uint64_t)v162, &qword_1EBD7CC10);
}

uint64_t sub_1D42A8C24(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_1D4469618() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  if (v7 <= v9) {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v6 + 84);
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v14) {
    goto LABEL_28;
  }
  uint64_t v15 = *(void *)(v8 + 64) + ((v11 + ((v10 + 40) & ~v10) + v12) & ~v12) + 1;
  char v16 = 8 * v15;
  if (v15 <= 3)
  {
    unsigned int v19 = ((a2 - v14 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v19))
    {
      int v17 = *(_DWORD *)((char *)a1 + v15);
      if (!v17) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v19 > 0xFF)
    {
      int v17 = *(unsigned __int16 *)((char *)a1 + v15);
      if (!*(unsigned __int16 *)((char *)a1 + v15)) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v19 < 2)
    {
LABEL_28:
      if ((v13 & 0x80000000) != 0)
      {
        unint64_t v24 = ((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~v10;
        if (v7 == v14)
        {
          uint64_t v25 = *(uint64_t (**)(unint64_t))(v6 + 48);
          return v25(v24);
        }
        else
        {
          unint64_t v26 = (v24 + v11 + v12) & ~v12;
          uint64_t v27 = *(uint64_t (**)(unint64_t, uint64_t))(v8 + 48);
          return v27(v26, v9);
        }
      }
      else
      {
        unint64_t v23 = *((void *)a1 + 1);
        if (v23 >= 0xFFFFFFFF) {
          LODWORD(v23) = -1;
        }
        return (v23 + 1);
      }
    }
  }
  int v17 = *((unsigned __int8 *)a1 + v15);
  if (!*((unsigned char *)a1 + v15)) {
    goto LABEL_28;
  }
LABEL_18:
  int v20 = (v17 - 1) << v16;
  if (v15 > 3) {
    int v20 = 0;
  }
  if (*(_DWORD *)(v8 + 64) + ((v11 + ((v10 + 40) & ~v10) + v12) & ~v12) == -1)
  {
    int v22 = 0;
  }
  else
  {
    if (v15 <= 3) {
      int v21 = *(_DWORD *)(v8 + 64) + ((v11 + ((v10 + 40) & ~v10) + v12) & ~v12) + 1;
    }
    else {
      int v21 = 4;
    }
    switch(v21)
    {
      case 2:
        int v22 = *a1;
        break;
      case 3:
        int v22 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v22 = *(_DWORD *)a1;
        break;
      default:
        int v22 = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v14 + (v22 | v20) + 1;
}

void sub_1D42A8ECC(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_1D4469618() - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(v8 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  if (v9 <= v11) {
    unsigned int v15 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v15 = *(_DWORD *)(v8 + 84);
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v16 = 0x7FFFFFFF;
  }
  else {
    unsigned int v16 = v15;
  }
  size_t v17 = *(void *)(v10 + 64) + ((v13 + ((v12 + 40) & ~v12) + v14) & ~v14) + 1;
  if (a3 <= v16)
  {
    int v18 = 0;
  }
  else if (v17 <= 3)
  {
    unsigned int v21 = ((a3 - v16 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v21))
    {
      int v18 = 4;
    }
    else if (v21 >= 0x100)
    {
      int v18 = 2;
    }
    else
    {
      int v18 = v21 > 1;
    }
  }
  else
  {
    int v18 = 1;
  }
  if (v16 >= a2)
  {
    switch(v18)
    {
      case 1:
        a1[v17] = 0;
        if (a2) {
          goto LABEL_27;
        }
        break;
      case 2:
        *(_WORD *)&a1[v17] = 0;
        if (a2) {
          goto LABEL_27;
        }
        break;
      case 3:
LABEL_48:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)&a1[v17] = 0;
        goto LABEL_26;
      default:
LABEL_26:
        if (a2)
        {
LABEL_27:
          if ((v15 & 0x80000000) != 0)
          {
            unint64_t v23 = (((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v12 + 8) & ~v12;
            if (v9 == v16)
            {
              unint64_t v24 = *(void (**)(unint64_t, uint64_t))(v8 + 56);
              v24(v23, a2);
            }
            else
            {
              unint64_t v25 = (v23 + v13 + v14) & ~v14;
              unint64_t v26 = *(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 56);
              v26(v25, a2, v11);
            }
          }
          else if ((a2 & 0x80000000) != 0)
          {
            *(void *)a1 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
          }
          else
          {
            *((void *)a1 + 1) = (a2 - 1);
          }
        }
        break;
    }
  }
  else
  {
    unsigned int v19 = ~v16 + a2;
    if (v17 < 4)
    {
      int v20 = (v19 >> (8 * v17)) + 1;
      if (*(_DWORD *)(v10 + 64) + ((v13 + ((v12 + 40) & ~v12) + v14) & ~v14) != -1)
      {
        int v22 = v19 & ~(-1 << (8 * v17));
        bzero(a1, v17);
        if (v17 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if (v17 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        a1[v17] = v20;
        break;
      case 2:
        *(_WORD *)&a1[v17] = v20;
        break;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v17] = v20;
        break;
      default:
        return;
    }
  }
}

void sub_1D42A920C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v81 = a3;
  uint64_t v82 = a4;
  uint64_t v8 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v78 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v78 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v79 = (uint64_t)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v80 = (uint64_t)&v76 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v77 = (uint64_t)&v76 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  size_t v17 = (char *)&v76 - v16;
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  int v20 = (char *)&v76 - v19;
  MEMORY[0x1F4188790](v18);
  int v22 = (uint64_t *)((char *)&v76 - v21);
  uint64_t v83 = a1;
  uint64_t v23 = sub_1D42A9D18();
  uint64_t v25 = v24;
  uint64_t v84 = v5;
  uint64_t v26 = v5 + qword_1EA6CB208;
  swift_beginAccess();
  if (*(void *)(*(void *)v26 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1D42C4FCC(v23, v25);
    char v28 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v28)
    {
      if (qword_1EA6C8F58 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1D4469928();
      sub_1D42D7FAC(v29, (uint64_t)qword_1EA6E46D0);
      sub_1D42D22A0(v83, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      swift_retain_n();
      uint64_t v30 = sub_1D44698F8();
      os_log_type_t v31 = sub_1D446A038();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        v89[0] = v33;
        *(_DWORD *)uint64_t v32 = 136315394;
        uint64_t v34 = sub_1D446A918();
        v88[0] = sub_1D42CB9EC(v34, v35, v89);
        sub_1D446A188();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 12) = 2080;
        uint64_t v36 = FMReverseGeocodingRequest.debugDescription.getter();
        v88[0] = sub_1D42CB9EC(v36, v37, v89);
        sub_1D446A188();
        swift_bridgeObjectRelease();
        sub_1D42D20B8((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        _os_log_impl(&dword_1D4271000, v30, v31, "%s: Loading declined, we are already processing similar location: %s", (uint8_t *)v32, 0x16u);
        swift_arrayDestroy();
        uint64_t v38 = v33;
LABEL_21:
        MEMORY[0x1D9447730](v38, -1, -1);
        MEMORY[0x1D9447730](v32, -1, -1);
LABEL_25:

        return;
      }
      swift_release_n();
      uint64_t v75 = (uint64_t)v20;
      goto LABEL_24;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v39 = v83;
  sub_1D42D22A0(v83, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  if (a2)
  {
    sub_1D42D20B8((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    uint64_t v40 = v84;
  }
  else
  {
    uint64_t v40 = v84;
    sub_1D42A789C(v22, v87);
    sub_1D42D20B8((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    sub_1D4276C98((uint64_t)v87, (uint64_t)v88, &qword_1EBD7CC10);
    sub_1D42FAC78((uint64_t)v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
    sub_1D4276C98((uint64_t)v88, (uint64_t)v89, &qword_1EBD7CC10);
    if (sub_1D42FE02C((uint64_t)v89) != 1)
    {
      if (qword_1EA6C8F58 != -1) {
        swift_once();
      }
      uint64_t v67 = sub_1D4469928();
      sub_1D42D7FAC(v67, (uint64_t)qword_1EA6E46D0);
      uint64_t v68 = v77;
      sub_1D42D22A0(v39, v77, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      swift_retain_n();
      uint64_t v30 = sub_1D44698F8();
      os_log_type_t v69 = sub_1D446A038();
      if (os_log_type_enabled(v30, v69))
      {
        uint64_t v32 = swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        v87[0] = v70;
        *(_DWORD *)uint64_t v32 = 136315394;
        uint64_t v71 = sub_1D446A918();
        uint64_t v86 = sub_1D42CB9EC(v71, v72, v87);
        sub_1D446A188();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 12) = 2080;
        uint64_t v73 = FMReverseGeocodingRequest.debugDescription.getter();
        uint64_t v86 = sub_1D42CB9EC(v73, v74, v87);
        sub_1D446A188();
        swift_bridgeObjectRelease();
        sub_1D42D20B8(v68, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        _os_log_impl(&dword_1D4271000, v30, v69, "%s: Loading declined, we have already processed similar location: %s", (uint8_t *)v32, 0x16u);
        swift_arrayDestroy();
        uint64_t v38 = v70;
        goto LABEL_21;
      }
      swift_release_n();
      uint64_t v75 = v68;
LABEL_24:
      sub_1D42D20B8(v75, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      goto LABEL_25;
    }
  }
  if (qword_1EA6C8F58 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_1D4469928();
  sub_1D42D7FAC(v41, (uint64_t)qword_1EA6E46D0);
  sub_1D42D22A0(v39, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  swift_retain_n();
  uint64_t v42 = sub_1D44698F8();
  os_log_type_t v43 = sub_1D446A038();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = swift_slowAlloc();
    uint64_t v77 = swift_slowAlloc();
    v89[0] = v77;
    *(_DWORD *)uint64_t v44 = 136315394;
    uint64_t v45 = sub_1D446A918();
    v88[0] = sub_1D42CB9EC(v45, v46, v89);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2080;
    uint64_t v47 = FMReverseGeocodingRequest.debugDescription.getter();
    v88[0] = sub_1D42CB9EC(v47, v48, v89);
    uint64_t v39 = v83;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42D20B8((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    _os_log_impl(&dword_1D4271000, v42, v43, "%s: Loading new address for %s", (uint8_t *)v44, 0x16u);
    uint64_t v49 = v77;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v49, -1, -1);
    uint64_t v50 = v44;
    uint64_t v40 = v84;
    MEMORY[0x1D9447730](v50, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_1D42D20B8((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  }

  uint64_t v51 = v80;
  sub_1D42D22A0(v39, v80, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  uint64_t v52 = v79;
  sub_1D42D22A0(v39, v79, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  unint64_t v53 = (*(unsigned __int8 *)(v78 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = v40;
  sub_1D42BB578(v52, v54 + v53, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  uint64_t v55 = (uint64_t *)(v54 + ((v9 + v53 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v57 = v81;
  uint64_t v56 = v82;
  *uint64_t v55 = v81;
  v55[1] = v56;
  uint64_t v58 = (objc_class *)type metadata accessor for FMReverseGeocodingOperation();
  unint64_t v59 = objc_allocWithZone(v58);
  v59[OBJC_IVAR____TtC8FMIPCore27FMReverseGeocodingOperation__isFinished] = 0;
  sub_1D42D22A0(v51, (uint64_t)&v59[OBJC_IVAR____TtC8FMIPCore27FMReverseGeocodingOperation_request], (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  char v60 = (uint64_t (**)(uint64_t, void *))&v59[OBJC_IVAR____TtC8FMIPCore27FMReverseGeocodingOperation_completion];
  *char v60 = sub_1D439E7C4;
  v60[1] = (uint64_t (*)(uint64_t, void *))v54;
  swift_retain();
  sub_1D42972D4(v57);
  v85.receiver = v59;
  v85.super_class = v58;
  id v61 = objc_msgSendSuper2(&v85, sel_init);
  sub_1D42D20B8(v51, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  objc_msgSend(*(id *)(v40 + qword_1EA6CB218), sel_addOperation_, v61);
  uint64_t v62 = sub_1D42A9D18();
  uint64_t v64 = v63;
  swift_beginAccess();
  id v65 = v61;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v88[0] = *(void *)v26;
  *(void *)uint64_t v26 = 0x8000000000000000;
  sub_1D42E1B10((uint64_t)v65, v62, v64, isUniquelyReferenced_nonNull_native);
  *(void *)uint64_t v26 = v88[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
}

uint64_t sub_1D42A9D18()
{
  objc_msgSend(v0, sel_coordinate);
  double v2 = round(v1 * 10000.0) / 10000.0;
  objc_msgSend(v0, sel_coordinate);
  double v4 = round(v3 * 10000.0) / 10000.0;
  sub_1D42D5DA0(&qword_1EA6C98E0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D446F9F0;
  uint64_t v6 = MEMORY[0x1E4FBB3D0];
  uint64_t v7 = MEMORY[0x1E4FBB460];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB3D0];
  *(void *)(v5 + 64) = v7;
  *(double *)(v5 + 32) = v2;
  *(void *)(v5 + 96) = v6;
  *(void *)(v5 + 104) = v7;
  *(double *)(v5 + 72) = v4;
  unsigned int v8 = objc_msgSend(v0, sel_referenceFrame);
  uint64_t v9 = MEMORY[0x1E4FBC530];
  *(void *)(v5 + 136) = MEMORY[0x1E4FBC4C0];
  *(void *)(v5 + 144) = v9;
  *(_DWORD *)(v5 + 112) = v8;
  objc_msgSend(v0, sel_horizontalAccuracy);
  if (v10 >= 5.0)
  {
    if (v10 >= 10.0)
    {
      if (v10 >= 25.0)
      {
        uint64_t v11 = 50;
        uint64_t v12 = 100;
        uint64_t v13 = 1000;
        if (v10 < 250.0) {
          uint64_t v13 = 250;
        }
        if (v10 >= 100.0) {
          uint64_t v12 = v13;
        }
        if (v10 >= 50.0) {
          uint64_t v11 = v12;
        }
      }
      else
      {
        uint64_t v11 = 25;
      }
    }
    else
    {
      uint64_t v11 = 10;
    }
  }
  else
  {
    uint64_t v11 = 5;
  }
  uint64_t v14 = MEMORY[0x1E4FBB5C8];
  *(void *)(v5 + 176) = MEMORY[0x1E4FBB550];
  *(void *)(v5 + 184) = v14;
  *(void *)(v5 + 152) = v11;

  return sub_1D4469B58();
}

uint64_t sub_1D42A9EC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPItemGroup.init(from:)(a1, a2);
}

uint64_t FMIPItemGroup.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7E710);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1D42D5DA0(&qword_1EA6CA000);
  uint64_t v7 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPItemGroup();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v54 = a1;
  sub_1D42C26F4(a1, v13);
  sub_1D42AA628();
  uint64_t v52 = v9;
  sub_1D446A8C8();
  if (!v2)
  {
    uint64_t v49 = v12;
    uint64_t v50 = v6;
    uint64_t v14 = v7;
    uint64_t v15 = v51;
    char v55 = 0;
    sub_1D4347668();
    sub_1D446A5D8();
    uint64_t v16 = v56;
    LOBYTE(v56) = 1;
    uint64_t v17 = sub_1D446A598();
    uint64_t v19 = v18;
    uint64_t v47 = v17;
    uint64_t v48 = v16;
    sub_1D42D5DA0(&qword_1EA6C9EB0);
    char v55 = 2;
    sub_1D43476BC();
    sub_1D446A5D8();
    uint64_t v46 = v19;
    uint64_t v20 = v56;
    sub_1D42D5DA0(&qword_1EA6CA018);
    char v55 = 3;
    sub_1D4352FD0(&qword_1EA6CA020, &qword_1EA6CA018, (void (*)(void))sub_1D4347760);
    sub_1D446A5D8();
    uint64_t v45 = v20;
    uint64_t v21 = v56;
    sub_1D42D5DA0(&qword_1EA6CA030);
    char v55 = 4;
    sub_1D4347804();
    sub_1D446A5D8();
    uint64_t v44 = v21;
    uint64_t v23 = v56;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6CA520);
    char v55 = 5;
    sub_1D43478B0();
    sub_1D446A5D8();
    uint64_t v43 = v23;
    uint64_t v24 = v56;
    sub_1D42D5DA0(&qword_1EA6CA050);
    char v55 = 6;
    sub_1D4352FD0(&qword_1EA6CA058, &qword_1EA6CA050, (void (*)(void))sub_1D4347954);
    sub_1D446A5D8();
    uint64_t v42 = v24;
    uint64_t v25 = v56;
    LOBYTE(v56) = 7;
    uint64_t v39 = sub_1D446A598();
    uint64_t v40 = v26;
    uint64_t v41 = v25;
    LOBYTE(v56) = 8;
    uint64_t v27 = sub_1D446A5C8();
    char v28 = v49;
    uint64_t v29 = v47;
    *uint64_t v49 = v48;
    v28[1] = v29;
    uint64_t v30 = v45;
    v28[2] = v46;
    *(void *)((char *)v28 + *(int *)(v10 + 52)) = v30;
    uint64_t v31 = v41;
    v28[5] = v42;
    v28[6] = v31;
    uint64_t v32 = v43;
    v28[8] = v27;
    v28[9] = v32;
    uint64_t v33 = v40;
    v28[3] = v39;
    v28[4] = v33;
    v28[7] = v44;
    uint64_t v34 = type metadata accessor for FMIPItemLostModeMetadata();
    LOBYTE(v56) = 9;
    sub_1D42AAE28(&qword_1EA6CA068, (void (*)(uint64_t))type metadata accessor for FMIPItemLostModeMetadata);
    sub_1D446A5D8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v52, v53);
    uint64_t v35 = (uint64_t)v50;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v50, 0, 1, v34);
    uint64_t v36 = *(int *)(v10 + 48);
    uint64_t v37 = (uint64_t)v49;
    sub_1D43479F8(v35, (uint64_t)v49 + v36);
    sub_1D42CAA68(v37, v15, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  }
  return sub_1D42BEC64((uint64_t)v54);
}

unint64_t sub_1D42AA628()
{
  unint64_t result = qword_1EA6CA008;
  if (!qword_1EA6CA008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA008);
  }
  return result;
}

uint64_t FMLocationShifter.init()()
{
  uint64_t v0 = sub_1D446A088();
  uint64_t v13 = v0;
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  double v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D446A068();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1D44699B8();
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v16 = sub_1D42AADA4();
  sub_1D44699A8();
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v15 = sub_1D42DDA8C((unint64_t *)&qword_1EBD7FDB0, MEMORY[0x1E4FBCC10]);
  uint64_t v14 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FDA0, (uint64_t *)&unk_1EBD7FD90);
  sub_1D446A1F8();
  uint64_t v6 = *MEMORY[0x1E4FBCC58];
  uint64_t v7 = v1 + 104;
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v12[1] = v7;
  v8(v3, v6, v0);
  uint64_t v9 = sub_1D446A0C8();
  uint64_t v10 = v17;
  *(void *)(v17 + 24) = v9;
  sub_1D44699A8();
  uint64_t v18 = MEMORY[0x1E4FBC860];
  sub_1D446A1F8();
  v8(v3, v6, v13);
  *(void *)(v10 + 32) = sub_1D446A0C8();
  *(void *)(v10 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F64670]), sel_init);
  return v10;
}

uint64_t sub_1D42AA98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D4466FE4);
}

void *sub_1D42AA9A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v7 = v6;
  unint64_t v24 = a4;
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v8 = sub_1D446A088();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D446A068();
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = sub_1D44699B8();
  MEMORY[0x1F4188790](v13 - 8);
  v23[1] = sub_1D42AADA4();
  sub_1D4469988();
  uint64_t v31 = MEMORY[0x1E4FBC860];
  sub_1D42AAE70((unint64_t *)&qword_1EBD7FDB0, MEMORY[0x1E4FBCC10]);
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FDA0, (uint64_t *)&unk_1EBD7FD90);
  sub_1D446A1F8();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCC58], v8);
  v6[2] = sub_1D446A0C8();
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D4469928();
  sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
  unint64_t v15 = v24;
  swift_bridgeObjectRetain_n();
  unint64_t v16 = sub_1D44698F8();
  os_log_type_t v17 = sub_1D446A038();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v31 = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v20 = v27;
    uint64_t v30 = sub_1D42CB9EC(v27, v15, &v31);
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D4271000, v16, v17, "FMDiskIO: init with file name: %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v19, -1, -1);
    MEMORY[0x1D9447730](v18, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v20 = v27;
  }
  uint64_t v21 = v26;
  v7[3] = v25;
  v7[4] = v21;
  v7[5] = v20;
  v7[6] = v15;
  sub_1D4276C98(v28, (uint64_t)v7 + *(void *)(*v7 + 128), v29);
  return v7;
}

unint64_t sub_1D42AADA4()
{
  unint64_t result = qword_1EBD7E860;
  if (!qword_1EBD7E860)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBD7E860);
  }
  return result;
}

uint64_t sub_1D42AADE4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D4469688();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42AAE28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42AAE70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42AAEB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42AAF00(void *a1, long long *a2)
{
  id v55 = a1;
  uint64_t v56 = a2;
  uint64_t v52 = sub_1D446A088();
  uint64_t v2 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v4 = (char *)v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D446A068();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1D44699B8();
  MEMORY[0x1F4188790](v6 - 8);
  sub_1D4469678();
  uint64_t v53 = OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshQueue;
  v51[0] = sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7E860);
  sub_1D4469988();
  *(void *)&long long v58 = MEMORY[0x1E4FBC860];
  v51[3] = sub_1D444A534((unint64_t *)&qword_1EBD7FDB0, MEMORY[0x1E4FBCC10]);
  void v51[2] = sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FDA0, (uint64_t *)&unk_1EBD7FD90);
  sub_1D446A1F8();
  uint64_t v7 = *MEMORY[0x1E4FBCC58];
  uint64_t v8 = v2 + 104;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v51[1] = v8;
  uint64_t v10 = v52;
  v9(v4, v7, v52);
  uint64_t v11 = sub_1D446A0C8();
  uint64_t v12 = v54;
  *(void *)(v54 + v53) = v11;
  uint64_t v53 = OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_filterQueue;
  sub_1D4469988();
  *(void *)&long long v58 = MEMORY[0x1E4FBC860];
  sub_1D446A1F8();
  v9(v4, v7, v10);
  *(void *)(v12 + v53) = sub_1D446A0C8();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_spBeacons) = MEMORY[0x1E4FBC860];
  *(void *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_appBeacons) = v13;
  *(void *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_unknownBeacons) = v13;
  *(void *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_itemGroups) = v13;
  *(unsigned char *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_currentlyRefreshing) = 0;
  *(unsigned char *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_nextRefreshQueued) = 0;
  sub_1D4469548();
  *(void *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  sub_1D4469608();
  *(void *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_callbackInterval) = 0x40CD4C0000000000;
  *(void *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_defaultCallbackInterval) = 0x40DD4C0000000000;
  *(void *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_initialCallbackInterval) = 0x40CD4C0000000000;
  *(void *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshTimer) = 0;
  *(unsigned char *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_utAlertState) = 1;
  *(unsigned char *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_separationMonitoringState) = 7;
  *(unsigned char *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_clientConfiguration) = 2;
  uint64_t v14 = v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy;
  unint64_t v15 = sub_1D42E2C58(v13);
  *(unsigned char *)uint64_t v14 = 0;
  uint64_t v16 = MEMORY[0x1E4FBC870];
  *(void *)(v14 + 8) = 3;
  *(void *)(v14 + 16) = v16;
  *(void *)(v14 + 24) = v15;
  *(unsigned char *)(v14 + 32) = 0;
  *(unsigned char *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_isThrottledOverride) = 0;
  *(unsigned char *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_isThrottled) = 0;
  *(unsigned char *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_isRefreshing) = 0;
  id v17 = v55;
  uint64_t v18 = v56;
  *(void *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_ownerSession) = v55;
  uint64_t v19 = *((void *)v18 + 2);
  uint64_t v61 = *((void *)v18 + 3);
  uint64_t v62 = v19;
  long long v20 = v18[1];
  *(_OWORD *)uint64_t v14 = *v18;
  *(_OWORD *)(v14 + 16) = v20;
  *(unsigned char *)(v14 + 32) = *((unsigned char *)v18 + 32);
  id v21 = v17;
  sub_1D42AB8DC((uint64_t)&v62);
  sub_1D42AB8DC((uint64_t)&v61);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1D4469108();
  *((void *)&v59 + 1) = v22;
  uint64_t v60 = sub_1D444A534(&qword_1EBD7E550, MEMORY[0x1E4F619E0]);
  uint64_t v23 = sub_1D42BECB4((uint64_t *)&v58);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v23, *MEMORY[0x1E4F619D0], v22);
  LOBYTE(v22) = MEMORY[0x1D9445460](&v58);
  sub_1D42BEC64((uint64_t)&v58);
  if ((v22 & 1) == 0)
  {
    *(unsigned char *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_shouldUseBeaconsOptimizationSPI) = 0;
    goto LABEL_15;
  }
  id v24 = objc_msgSend(self, sel_mainBundle);
  id v25 = objc_msgSend(v24, sel_bundleIdentifier);

  if (!v25) {
    goto LABEL_9;
  }
  uint64_t v26 = sub_1D4469B38();
  uint64_t v28 = v27;

  if (v26 != 0xD000000000000010 || v28 != 0x80000001D447D560)
  {
    char v30 = sub_1D446A758();
    swift_bridgeObjectRelease();
    if (v30)
    {
      char v29 = 1;
      goto LABEL_10;
    }
LABEL_9:
    char v29 = 0;
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  char v29 = 1;
LABEL_10:
  *(unsigned char *)(v12 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_shouldUseBeaconsOptimizationSPI) = v29;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1D4469928();
  sub_1D42D7FAC(v31, (uint64_t)qword_1EBD83228);
  swift_retain();
  uint64_t v32 = sub_1D44698F8();
  os_log_type_t v33 = sub_1D446A038();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 67109120;
    LODWORD(v58) = *(unsigned __int8 *)(v12
                                      + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_shouldUseBeaconsOptimizationSPI);
    sub_1D446A188();
    swift_release();
    _os_log_impl(&dword_1D4271000, v32, v33, "FMIPBeaconRefreshingController: shouldUseBeaconsOptimizationSPI: %{BOOL}d", v34, 8u);
    MEMORY[0x1D9447730](v34, -1, -1);
  }
  else
  {

    swift_release();
  }
LABEL_15:
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_1D4469928();
  sub_1D42D7FAC(v35, (uint64_t)qword_1EBD83228);
  swift_retain();
  sub_1D42AB8DC((uint64_t)&v62);
  sub_1D42AB8DC((uint64_t)&v61);
  swift_retain();
  uint64_t v36 = sub_1D44698F8();
  os_log_type_t v37 = sub_1D446A038();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    id v55 = v21;
    uint64_t v40 = v39;
    uint64_t v57 = v39;
    *(_DWORD *)uint64_t v38 = 136315394;
    uint64_t v41 = sub_1D4469638();
    unint64_t v43 = sub_1D427A0D0(0xCuLL, v41, v42);
    uint64_t v44 = MEMORY[0x1D9445EF0](v43);
    unint64_t v46 = v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long v58 = sub_1D42CB9EC(v44, v46, &v57);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    long long v47 = v56[1];
    long long v58 = *v56;
    long long v59 = v47;
    LOBYTE(v60) = *((unsigned char *)v56 + 32);
    sub_1D42AB8DC((uint64_t)&v62);
    sub_1D42AB8DC((uint64_t)&v61);
    uint64_t v48 = sub_1D4469B68();
    *(void *)&long long v58 = sub_1D42CB9EC(v48, v49, &v57);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42ABDA4((uint64_t)&v62);
    sub_1D42ABDA4((uint64_t)&v61);
    sub_1D42ABDA4((uint64_t)&v62);
    sub_1D42ABDA4((uint64_t)&v61);
    _os_log_impl(&dword_1D4271000, v36, v37, "FMIPBeaconRefreshingController<%s>.init %s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v40, -1, -1);
    MEMORY[0x1D9447730](v38, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_1D42ABDA4((uint64_t)&v62);
    sub_1D42ABDA4((uint64_t)&v61);
    sub_1D42ABDA4((uint64_t)&v62);
    sub_1D42ABDA4((uint64_t)&v61);
  }
  return v12;
}

uint64_t sub_1D42AB8DC(uint64_t a1)
{
  return a1;
}

void sub_1D42AB908()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy;
  long long v3 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy + 16);
  long long v37 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy);
  long long v38 = v3;
  char v39 = *(unsigned char *)(v0 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy + 32);
  uint64_t v40 = *((void *)&v3 + 1);
  uint64_t v41 = v3;
  sub_1D42AB8DC((uint64_t)&v41);
  sub_1D42AB8DC((uint64_t)&v40);
  uint64_t v28 = sub_1D42ABDD0();
  sub_1D42ABDA4((uint64_t)&v41);
  sub_1D42ABDA4((uint64_t)&v40);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v5 = sub_1D44698F8();
  os_log_type_t v6 = sub_1D446A038();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    *(void *)&v35[0] = v8;
    uint64_t v9 = *(void (**)(uint64_t, void *))(v2 + 16);
    uint64_t v10 = *(void **)(v2 + 24);
    char v11 = *(unsigned char *)(v2 + 32);
    uint64_t v30 = *(void *)(v2 + 8);
    uint64_t v31 = v9;
    uint64_t v32 = v10;
    LOBYTE(v33) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1D4469B68();
    uint64_t aBlock = sub_1D42CB9EC(v12, v13, (uint64_t *)v35);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v5, v6, "FMIPBeaconRefreshingController: Updating refresh policy to: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v8, -1, -1);
    MEMORY[0x1D9447730](v7, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v14 = OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_ownerSession;
  unint64_t v15 = *(void **)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_ownerSession);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  os_log_type_t v33 = sub_1D444D814;
  uint64_t v34 = v16;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v30 = 1107296256;
  uint64_t v31 = (void (*)(uint64_t, void *))sub_1D4275DE8;
  uint64_t v32 = &unk_1F2C125E8;
  id v17 = _Block_copy(&aBlock);
  id v18 = v15;
  swift_release();
  objc_msgSend(v18, sel_setLocationUpdateBlock_, v17);
  _Block_release(v17);

  uint64_t v19 = *(void **)(v1 + v14);
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  os_log_type_t v33 = sub_1D444D81C;
  uint64_t v34 = v20;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v30 = 1107296256;
  uint64_t v31 = (void (*)(uint64_t, void *))sub_1D4275DE8;
  uint64_t v32 = &unk_1F2C12610;
  id v21 = _Block_copy(&aBlock);
  id v22 = v19;
  swift_release();
  objc_msgSend(v22, sel_setDeviceEventUpdateBlock_, v21);
  _Block_release(v21);

  uint64_t v23 = *(void **)(v1 + v14);
  long long v24 = *(_OWORD *)(v2 + 16);
  v35[0] = *(_OWORD *)v2;
  v35[1] = v24;
  char v36 = *(unsigned char *)(v2 + 32);
  uint64_t v42 = *((void *)&v24 + 1);
  v43[0] = v24;
  id v25 = v23;
  sub_1D42AB8DC((uint64_t)v43);
  sub_1D42AB8DC((uint64_t)&v42);
  uint64_t v26 = sub_1D42ABDD0();
  sub_1D42ABDA4((uint64_t)v43);
  sub_1D42ABDA4((uint64_t)&v42);
  os_log_type_t v33 = sub_1D444D824;
  uint64_t v34 = v1;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v30 = 1107296256;
  uint64_t v31 = sub_1D42E1B08;
  uint64_t v32 = &unk_1F2C12638;
  uint64_t v27 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v25, sel_subscribeAndFetchLocationForContext_completion_, v26, v27);
  _Block_release(v27);
}

uint64_t sub_1D42ABDA4(uint64_t a1)
{
  return a1;
}

void *sub_1D42ABDD0()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F97C48]), sel_init);
  objc_msgSend(v1, sel_setSubscribe_, 1);
  objc_msgSend(v1, sel_setReportDeviceEvents_, 1);
  uint64_t v2 = (void *)MEMORY[0x1E4F97DE0];
  if (!*(unsigned char *)v0) {
    uint64_t v2 = (void *)MEMORY[0x1E4F97DE8];
  }
  objc_msgSend(v1, sel_setCachePolicy_, *v2);
  sub_1D42AC60C(*(void **)(v0 + 8));
  type metadata accessor for SPBeaconType(0);
  long long v3 = (void *)sub_1D4469D58();
  swift_bridgeObjectRelease();
  unint64_t v49 = v1;
  objc_msgSend(v1, sel_setSearchTypes_, v3);

  uint64_t v4 = swift_bridgeObjectRetain();
  sub_1D42AC4B8(v4);
  swift_bridgeObjectRelease();
  sub_1D4469688();
  uint64_t v5 = (void *)sub_1D4469D58();
  swift_release();
  objc_msgSend(v1, sel_setSearchIdentifiers_, v5);

  sub_1D42D5DA0(&qword_1EA6CA950);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1D44762D0;
  uint64_t v7 = (void *)*MEMORY[0x1E4F97CA8];
  uint64_t v8 = (void *)*MEMORY[0x1E4F97CB0];
  *(void *)(v6 + 32) = *MEMORY[0x1E4F97CA8];
  *(void *)(v6 + 40) = v8;
  uint64_t v9 = (void *)*MEMORY[0x1E4F97CD0];
  uint64_t v10 = (void *)*MEMORY[0x1E4F97CD8];
  *(void *)(v6 + 48) = *MEMORY[0x1E4F97CD0];
  *(void *)(v6 + 56) = v10;
  char v11 = (void *)*MEMORY[0x1E4F97CE0];
  uint64_t v12 = (void *)*MEMORY[0x1E4F97CE8];
  *(void *)(v6 + 64) = *MEMORY[0x1E4F97CE0];
  *(void *)(v6 + 72) = v12;
  unint64_t v13 = (void *)*MEMORY[0x1E4F97CF0];
  uint64_t v14 = (void *)*MEMORY[0x1E4F97CF8];
  *(void *)(v6 + 80) = *MEMORY[0x1E4F97CF0];
  *(void *)(v6 + 88) = v14;
  uint64_t v44 = (void *)*MEMORY[0x1E4F97D00];
  unint64_t v45 = (void *)*MEMORY[0x1E4F97D10];
  uint64_t v15 = *MEMORY[0x1E4F97D10];
  *(void *)(v6 + 96) = *MEMORY[0x1E4F97D00];
  *(void *)(v6 + 104) = v15;
  uint64_t v16 = (void *)*MEMORY[0x1E4F97D18];
  long long v47 = (void *)*MEMORY[0x1E4F97CB8];
  uint64_t v17 = *MEMORY[0x1E4F97CB8];
  *(void *)(v6 + 112) = *MEMORY[0x1E4F97D18];
  *(void *)(v6 + 120) = v17;
  unint64_t v46 = (void *)*MEMORY[0x1E4F97CC0];
  uint64_t v48 = (void *)*MEMORY[0x1E4F97CC8];
  uint64_t v18 = *MEMORY[0x1E4F97CC8];
  *(void *)(v6 + 128) = *MEMORY[0x1E4F97CC0];
  *(void *)(v6 + 136) = v18;
  type metadata accessor for SPBeaconLocationSource(0);
  id v19 = v7;
  id v20 = v8;
  id v21 = v9;
  id v22 = v10;
  id v23 = v11;
  id v24 = v12;
  id v25 = v13;
  id v26 = v14;
  id v27 = v44;
  id v28 = v45;
  id v29 = v16;
  id v30 = v47;
  id v31 = v46;
  id v32 = v48;
  os_log_type_t v33 = (void *)sub_1D4469D58();
  swift_bridgeObjectRelease();
  objc_msgSend(v49, sel_setSearchLocationSources_, v33);

  uint64_t v34 = sub_1D4469108();
  v50[3] = v34;
  v50[4] = sub_1D42AC45C(&qword_1EBD7E550, MEMORY[0x1E4F619E0]);
  uint64_t v35 = sub_1D42BECB4(v50);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v34 - 8) + 104))(v35, *MEMORY[0x1E4F619D8], v34);
  LOBYTE(v34) = MEMORY[0x1D9445460](v50);
  sub_1D42BEC64((uint64_t)v50);
  if (v34)
  {
    id v36 = (id)*MEMORY[0x1E4F97D08];
    id v37 = objc_msgSend(v49, sel_searchLocationSources);
    long long v38 = (void *)sub_1D4469D78();

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v38 = sub_1D42AC5EC(0, v38[2] + 1, 1, v38);
    }
    unint64_t v40 = v38[2];
    unint64_t v39 = v38[3];
    if (v40 >= v39 >> 1) {
      long long v38 = sub_1D42AC5EC((void *)(v39 > 1), v40 + 1, 1, v38);
    }
    void v38[2] = v40 + 1;
    v38[v40 + 4] = v36;
    uint64_t v41 = (void *)sub_1D4469D58();
    swift_bridgeObjectRelease();
    objc_msgSend(v49, sel_setSearchLocationSources_, v41);
  }
  sub_1D4275AD0(0, &qword_1EA6CAFB0);
  sub_1D42AC45C(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
  uint64_t v42 = (void *)sub_1D4469A38();
  objc_msgSend(v49, sel_setLastOnlineLocationInfo_, v42);

  return v49;
}

uint64_t sub_1D42AC2AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      a5(0);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

void sub_1D42AC3B8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void type metadata accessor for SPBeaconType(uint64_t a1)
{
}

uint64_t sub_1D42AC414(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42AC45C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for SPBeaconLocationSource(uint64_t a1)
{
}

size_t sub_1D42AC4B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1D42D5DA0(&qword_1EA6CA590);
  uint64_t v3 = *(void *)(sub_1D4469688() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1D4386680(&v10, (char *)v6 + v5, v1, a1);
      sub_1D42F9364();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1D42AC5EC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D43B0654(a1, a2, a3, a4, &qword_1EA6CA950, type metadata accessor for SPBeaconLocationSource);
}

void *sub_1D42AC60C(void *a1)
{
  id v3 = a1;
  uint64_t v4 = (id *)MEMORY[0x1E4F97D98];
  if ((a1 & 1) == 0)
  {
    unint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    if ((a1 & 2) == 0) {
      return v5;
    }
LABEL_13:
    int64_t v23 = v5[2];
    int64_t v24 = v23 + 2;
    if (__OFADD__(v23, 2))
    {
      __break(1u);
    }
    else
    {
      id v25 = (void *)*MEMORY[0x1E4F97DA0];
      id v26 = *v4;
      id v3 = v25;
      char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v24 > v5[3] >> 1)
      {
        if (v23 <= v24) {
          int64_t v28 = v23 + 2;
        }
        else {
          int64_t v28 = v23;
        }
        unint64_t v5 = sub_1D42AC8EC(isUniquelyReferenced_nonNull_native, v28, 1, v5);
      }
      int64_t v24 = v5[2];
      unint64_t v2 = v5[3];
      int64_t v23 = v24 + 1;
      id v1 = v26;
      if (v24 < v2 >> 1) {
        goto LABEL_21;
      }
    }
    unint64_t v5 = sub_1D42AC8EC((void *)(v2 > 1), v23, 1, v5);
LABEL_21:
    v5[2] = v23;
    v5[v24 + 4] = v1;
    unint64_t v29 = v5[3];
    int64_t v30 = v24 + 2;
    id v31 = v3;
    if (v30 > (uint64_t)(v29 >> 1)) {
      unint64_t v5 = sub_1D42AC8EC((void *)(v29 > 1), v30, 1, v5);
    }
    v5[2] = v30;
    v5[v23 + 4] = v31;

    return v5;
  }
  unint64_t v6 = (void *)*MEMORY[0x1E4F97DC0];
  unint64_t v7 = (void *)*MEMORY[0x1E4F97D98];
  uint64_t v8 = (void *)*MEMORY[0x1E4F97DB0];
  id v9 = (id)*MEMORY[0x1E4F97DA8];
  id v10 = v6;
  id v11 = v7;
  id v12 = v8;
  unint64_t v5 = sub_1D42AC8EC(0, 4, 1, MEMORY[0x1E4FBC860]);
  unint64_t v14 = v5[2];
  unint64_t v13 = v5[3];
  unint64_t v15 = v14 + 1;
  id v16 = v9;
  if (v14 >= v13 >> 1) {
    unint64_t v5 = sub_1D42AC8EC((void *)(v13 > 1), v14 + 1, 1, v5);
  }
  v5[2] = v15;
  v5[v14 + 4] = v16;
  unint64_t v17 = v5[3];
  unint64_t v18 = v14 + 2;
  id v19 = v10;
  if ((uint64_t)(v14 + 2) > (uint64_t)(v17 >> 1)) {
    unint64_t v5 = sub_1D42AC8EC((void *)(v17 > 1), v14 + 2, 1, v5);
  }
  v5[2] = v18;
  v5[v15 + 4] = v19;
  unint64_t v20 = v5[3];
  unint64_t v21 = v14 + 3;
  unint64_t v2 = (unint64_t)v11;
  if ((uint64_t)(v14 + 3) > (uint64_t)(v20 >> 1)) {
    unint64_t v5 = sub_1D42AC8EC((void *)(v20 > 1), v14 + 3, 1, v5);
  }
  v5[2] = v21;
  v5[v18 + 4] = v2;
  unint64_t v22 = v5[3];
  id v1 = v12;
  if ((uint64_t)(v14 + 4) > (uint64_t)(v22 >> 1)) {
    unint64_t v5 = sub_1D42AC8EC((void *)(v22 > 1), v14 + 4, 1, v5);
  }
  v5[2] = v14 + 4;
  v5[v21 + 4] = v1;

  uint64_t v4 = (id *)MEMORY[0x1E4F97D98];
  if ((v3 & 2) != 0) {
    goto LABEL_13;
  }
  return v5;
}

void *sub_1D42AC8EC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D43B0654(a1, a2, a3, a4, &qword_1EA6CA958, type metadata accessor for SPBeaconType);
}

uint64_t sub_1D42AC90C(unint64_t a1, uint64_t a2)
{
  uint64_t v56 = a2;
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v3 - 8);
  id v55 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA1F8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v60 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v59 = (uint64_t)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v70 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1D4469688();
  uint64_t v11 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v61 = (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMIPDevice();
  uint64_t v64 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v58 = (uint64_t)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)&v49 - v17;
  MEMORY[0x1F4188790](v16);
  id v19 = (char *)&v49 - v18;
  uint64_t v20 = sub_1D42D5DA0(&qword_1EBD7D920);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v63 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1D42D5DA0(&qword_1EBD7D928);
  uint64_t v24 = MEMORY[0x1F4188790](v23 - 8);
  id v26 = (unint64_t *)((char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v24);
  int64_t v28 = (unint64_t *)((char *)&v49 - v27);
  unint64_t v29 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v21 + 48);
  unint64_t v30 = *(void *)(a1 + 16);
  uint64_t v68 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  unint64_t v69 = v30;
  uint64_t v66 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t v53 = v19 + 304;
  uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  uint64_t v52 = (void (**)(uint64_t, uint64_t))(v11 + 8);
  uint64_t result = swift_bridgeObjectRetain_n();
  unint64_t v32 = 0;
  unint64_t v65 = a1;
  unint64_t v62 = a1;
  while (1)
  {
    if (v32 == v69)
    {
      uint64_t v33 = 1;
      unint64_t v32 = v69;
      goto LABEL_7;
    }
    if (v32 >= v69) {
      break;
    }
    uint64_t v34 = (uint64_t)&v63[*(int *)(v20 + 48)];
    sub_1D42D22A0(v65+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v32, v34, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v35 = (uint64_t)v26 + *(int *)(v20 + 48);
    *id v26 = v32;
    sub_1D42BB578(v34, v35, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v33 = 0;
    ++v32;
LABEL_7:
    (*v68)(v26, v33, 1, v20);
    sub_1D4276C98((uint64_t)v26, (uint64_t)v28, &qword_1EBD7D928);
    if ((*v29)(v28, 1, v20) == 1) {
      goto LABEL_21;
    }
    unint64_t v36 = *v28;
    sub_1D42BB578((uint64_t)v28 + *(int *)(v20 + 48), (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (!*((void *)v19 + 3)) {
      goto LABEL_2;
    }
    swift_bridgeObjectRetain();
    uint64_t v37 = (uint64_t)v70;
    sub_1D4469628();
    swift_bridgeObjectRelease();
    if ((*v66)(v37, 1, v67) == 1)
    {
      sub_1D42D20B8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t result = sub_1D4276C3C(v37, (uint64_t *)&unk_1EBD7E930);
    }
    else
    {
      (*v54)(v61, v37, v67);
      uint64_t v38 = v56;
      if (*(void *)(v56 + 16) && (unint64_t v39 = sub_1D43AEE98(v61), (v40 & 1) != 0)) {
        int v51 = *(unsigned __int8 *)(*(void *)(v38 + 56) + v39);
      }
      else {
        int v51 = 0;
      }
      sub_1D42D22A0((uint64_t)v19, v58, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v50 = *((void *)v19 + 31);
      sub_1D4276C98((uint64_t)v53, (uint64_t)v77, &qword_1EBD7CC10);
      sub_1D4276C98((uint64_t)v77, (uint64_t)v76, &qword_1EBD7CC10);
      uint64_t v74 = *((void *)v19 + 35);
      long long v49 = *((_OWORD *)v19 + 18);
      long long v75 = v49;
      memset(v73, 0, sizeof(v73));
      uint64_t v41 = type metadata accessor for FMIPItemGroup();
      memset(v72, 0, sizeof(v72));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v59, 1, 1, v41);
      unsigned __int8 v71 = 7;
      uint64_t v42 = type metadata accessor for FMIPDeviceConnectedState(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v60, 1, 1, v42);
      uint64_t v43 = type metadata accessor for FMIPDeviceLostModeMetadata();
      uint64_t v44 = (uint64_t)v55;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v55, 1, 1, v43);
      unint64_t v45 = v50;
      swift_bridgeObjectRetain();
      sub_1D42FAC78((uint64_t)v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
      id v46 = (id)v49;
      FMIPDevice.init(device:historicalLocations:address:crowdSourcedLocation:location:shiftedLocation:crowdSourcedLocating:itemGroup:deviceWithYou:findingCapable:beaconType:deviceConnectedState:lostModeMetadata:)(v58, v45, v76, &v74, v73, (uint64_t)v72, 2, v59, v57, 2u, v51, &v71, v60, v44);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v47 = v61;
        uint64_t result = v62;
        if ((v36 & 0x8000000000000000) != 0) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t result = sub_1D439948C(v62);
        uint64_t v47 = v61;
        if ((v36 & 0x8000000000000000) != 0)
        {
LABEL_20:
          __break(1u);
LABEL_21:
          swift_bridgeObjectRelease();
          return v62;
        }
      }
      if (v36 >= *(void *)(result + 16)) {
        goto LABEL_23;
      }
      unint64_t v48 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
      unint64_t v62 = result;
      sub_1D439ED88(v57, result + v48 + *(void *)(v64 + 72) * v36, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      (*v52)(v47, v67);
LABEL_2:
      uint64_t result = sub_1D42D20B8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1D42AD154(unint64_t a1, uint64_t a2)
{
  uint64_t v56 = a2;
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v3 - 8);
  id v55 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA1F8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v60 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v59 = (uint64_t)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v70 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1D4469688();
  uint64_t v11 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v61 = (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMIPDevice();
  uint64_t v64 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v58 = (uint64_t)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)&v49 - v17;
  MEMORY[0x1F4188790](v16);
  id v19 = (char *)&v49 - v18;
  uint64_t v20 = sub_1D42D5DA0(&qword_1EBD7D920);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v63 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1D42D5DA0(&qword_1EBD7D928);
  uint64_t v24 = MEMORY[0x1F4188790](v23 - 8);
  id v26 = (unint64_t *)((char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v24);
  int64_t v28 = (unint64_t *)((char *)&v49 - v27);
  unint64_t v29 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v21 + 48);
  unint64_t v30 = *(void *)(a1 + 16);
  uint64_t v68 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  unint64_t v69 = v30;
  uint64_t v66 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t v53 = v19 + 304;
  uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  uint64_t v52 = (void (**)(uint64_t, uint64_t))(v11 + 8);
  uint64_t result = swift_bridgeObjectRetain_n();
  unint64_t v32 = 0;
  unint64_t v65 = a1;
  unint64_t v62 = a1;
  while (1)
  {
    if (v32 == v69)
    {
      uint64_t v33 = 1;
      unint64_t v32 = v69;
      goto LABEL_7;
    }
    if (v32 >= v69) {
      break;
    }
    uint64_t v34 = (uint64_t)&v63[*(int *)(v20 + 48)];
    sub_1D42D22A0(v65+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v32, v34, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v35 = (uint64_t)v26 + *(int *)(v20 + 48);
    *id v26 = v32;
    sub_1D42BB578(v34, v35, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v33 = 0;
    ++v32;
LABEL_7:
    (*v68)(v26, v33, 1, v20);
    sub_1D4276C98((uint64_t)v26, (uint64_t)v28, &qword_1EBD7D928);
    if ((*v29)(v28, 1, v20) == 1) {
      goto LABEL_21;
    }
    unint64_t v36 = *v28;
    sub_1D42BB578((uint64_t)v28 + *(int *)(v20 + 48), (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (!*((void *)v19 + 3)) {
      goto LABEL_2;
    }
    swift_bridgeObjectRetain();
    uint64_t v37 = (uint64_t)v70;
    sub_1D4469628();
    swift_bridgeObjectRelease();
    if ((*v66)(v37, 1, v67) == 1)
    {
      sub_1D42D20B8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t result = sub_1D4276C3C(v37, (uint64_t *)&unk_1EBD7E930);
    }
    else
    {
      (*v54)(v61, v37, v67);
      uint64_t v38 = v56;
      if (*(void *)(v56 + 16) && (unint64_t v39 = sub_1D43AEE98(v61), (v40 & 1) != 0)) {
        int v51 = *(unsigned __int8 *)(*(void *)(v38 + 56) + v39);
      }
      else {
        int v51 = 0;
      }
      sub_1D42D22A0((uint64_t)v19, v58, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v50 = *((void *)v19 + 31);
      sub_1D4276C98((uint64_t)v53, (uint64_t)v77, &qword_1EBD7CC10);
      sub_1D4276C98((uint64_t)v77, (uint64_t)v76, &qword_1EBD7CC10);
      uint64_t v74 = *((void *)v19 + 35);
      long long v49 = *((_OWORD *)v19 + 18);
      long long v75 = v49;
      memset(v73, 0, sizeof(v73));
      uint64_t v41 = type metadata accessor for FMIPItemGroup();
      memset(v72, 0, sizeof(v72));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v59, 1, 1, v41);
      unsigned __int8 v71 = 7;
      uint64_t v42 = type metadata accessor for FMIPDeviceConnectedState(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v60, 1, 1, v42);
      uint64_t v43 = type metadata accessor for FMIPDeviceLostModeMetadata();
      uint64_t v44 = (uint64_t)v55;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v55, 1, 1, v43);
      unint64_t v45 = v50;
      swift_bridgeObjectRetain();
      sub_1D42FAC78((uint64_t)v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
      id v46 = (id)v49;
      FMIPDevice.init(device:historicalLocations:address:crowdSourcedLocation:location:shiftedLocation:crowdSourcedLocating:itemGroup:deviceWithYou:findingCapable:beaconType:deviceConnectedState:lostModeMetadata:)(v58, v45, v76, &v74, v73, (uint64_t)v72, v51, v59, v57, 2u, 2, &v71, v60, v44);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v47 = v61;
        uint64_t result = v62;
        if ((v36 & 0x8000000000000000) != 0) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t result = sub_1D439948C(v62);
        uint64_t v47 = v61;
        if ((v36 & 0x8000000000000000) != 0)
        {
LABEL_20:
          __break(1u);
LABEL_21:
          swift_bridgeObjectRelease();
          return v62;
        }
      }
      if (v36 >= *(void *)(result + 16)) {
        goto LABEL_23;
      }
      unint64_t v48 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
      unint64_t v62 = result;
      sub_1D439ED88(v57, result + v48 + *(void *)(v64 + 72) * v36, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      (*v52)(v47, v67);
LABEL_2:
      uint64_t result = sub_1D42D20B8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1D42AD994(unint64_t a1, uint64_t a2)
{
  uint64_t v56 = a2;
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v3 - 8);
  id v55 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA1F8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v60 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v59 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v70 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1D4469688();
  uint64_t v11 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v61 = (uint64_t)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMIPDevice();
  uint64_t v64 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v58 = (uint64_t)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)&v50 - v17;
  MEMORY[0x1F4188790](v16);
  id v19 = (char *)&v50 - v18;
  uint64_t v20 = sub_1D42D5DA0(&qword_1EBD7D920);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v63 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1D42D5DA0(&qword_1EBD7D928);
  uint64_t v24 = MEMORY[0x1F4188790](v23 - 8);
  id v26 = (unint64_t *)((char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v24);
  int64_t v28 = (unint64_t *)((char *)&v50 - v27);
  unint64_t v29 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v21 + 48);
  unint64_t v30 = *(void *)(a1 + 16);
  uint64_t v68 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  unint64_t v69 = v30;
  uint64_t v66 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t v53 = v19 + 304;
  uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  uint64_t v52 = (void (**)(uint64_t, uint64_t))(v11 + 8);
  uint64_t result = swift_bridgeObjectRetain_n();
  unint64_t v32 = 0;
  unint64_t v65 = a1;
  unint64_t v62 = a1;
  while (1)
  {
    if (v32 == v69)
    {
      uint64_t v33 = 1;
      unint64_t v32 = v69;
      goto LABEL_7;
    }
    if (v32 >= v69) {
      break;
    }
    uint64_t v34 = (uint64_t)&v63[*(int *)(v20 + 48)];
    sub_1D42D22A0(v65+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v32, v34, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v35 = (uint64_t)v26 + *(int *)(v20 + 48);
    *id v26 = v32;
    sub_1D42BB578(v34, v35, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v33 = 0;
    ++v32;
LABEL_7:
    (*v68)(v26, v33, 1, v20);
    sub_1D4276C98((uint64_t)v26, (uint64_t)v28, &qword_1EBD7D928);
    if ((*v29)(v28, 1, v20) == 1) {
      goto LABEL_21;
    }
    unint64_t v36 = *v28;
    sub_1D42BB578((uint64_t)v28 + *(int *)(v20 + 48), (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (!*((void *)v19 + 3)) {
      goto LABEL_2;
    }
    swift_bridgeObjectRetain();
    uint64_t v37 = (uint64_t)v70;
    sub_1D4469628();
    swift_bridgeObjectRelease();
    if ((*v66)(v37, 1, v67) == 1)
    {
      sub_1D42D20B8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t result = sub_1D4276C3C(v37, (uint64_t *)&unk_1EBD7E930);
    }
    else
    {
      (*v54)(v61, v37, v67);
      uint64_t v38 = v56;
      if (*(void *)(v56 + 16) && (unint64_t v39 = sub_1D43AEE98(v61), (v40 & 1) != 0)) {
        unsigned __int8 v41 = *(unsigned char *)(*(void *)(v38 + 56) + v39);
      }
      else {
        unsigned __int8 v41 = 7;
      }
      sub_1D42D22A0((uint64_t)v19, v58, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      int v51 = *((void *)v19 + 31);
      sub_1D4276C98((uint64_t)v53, (uint64_t)v77, &qword_1EBD7CC10);
      sub_1D4276C98((uint64_t)v77, (uint64_t)v76, &qword_1EBD7CC10);
      uint64_t v74 = *((void *)v19 + 35);
      long long v50 = *((_OWORD *)v19 + 18);
      long long v75 = v50;
      memset(v73, 0, sizeof(v73));
      uint64_t v42 = type metadata accessor for FMIPItemGroup();
      memset(v72, 0, sizeof(v72));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v59, 1, 1, v42);
      unsigned __int8 v71 = v41;
      uint64_t v43 = type metadata accessor for FMIPDeviceConnectedState(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v60, 1, 1, v43);
      uint64_t v44 = type metadata accessor for FMIPDeviceLostModeMetadata();
      uint64_t v45 = (uint64_t)v55;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v55, 1, 1, v44);
      id v46 = v51;
      swift_bridgeObjectRetain();
      sub_1D42FAC78((uint64_t)v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
      id v47 = (id)v50;
      FMIPDevice.init(device:historicalLocations:address:crowdSourcedLocation:location:shiftedLocation:crowdSourcedLocating:itemGroup:deviceWithYou:findingCapable:beaconType:deviceConnectedState:lostModeMetadata:)(v58, v46, v76, &v74, v73, (uint64_t)v72, 2, v59, v57, 2u, 2, &v71, v60, v45);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v48 = v61;
        uint64_t result = v62;
        if ((v36 & 0x8000000000000000) != 0) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t result = sub_1D439948C(v62);
        uint64_t v48 = v61;
        if ((v36 & 0x8000000000000000) != 0)
        {
LABEL_20:
          __break(1u);
LABEL_21:
          swift_bridgeObjectRelease();
          return v62;
        }
      }
      if (v36 >= *(void *)(result + 16)) {
        goto LABEL_23;
      }
      unint64_t v49 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
      unint64_t v62 = result;
      sub_1D439ED88(v57, result + v49 + *(void *)(v64 + 72) * v36, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      (*v52)(v48, v67);
LABEL_2:
      uint64_t result = sub_1D42D20B8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

id sub_1D42AE214()
{
  id v1 = v0;
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D4469498();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v47 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v47 - v12;
  uint64_t v14 = (objc_class *)type metadata accessor for FMIPDeviceImageCacheOperation();
  v64.receiver = v0;
  v64.super_class = v14;
  objc_msgSendSuper2(&v64, sel_start);
  uint64_t v15 = *(uint64_t (**)(uint64_t, void *, void *, void *))&v0[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation_request
                                                                     + 16];
  uint64_t v16 = *(void **)&v0[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation_request + 24];
  char v17 = v0[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation_request + 48];
  char v18 = v0[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation_request + 49];
  uint64_t v19 = *(void *)&v0[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation_request + 56];
  long long aBlock = *(_OWORD *)&v0[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation_request];
  uint64_t v58 = v15;
  uint64_t v59 = v16;
  long long v60 = *(_OWORD *)&v0[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation_request + 32];
  char v61 = v17;
  char v62 = v18;
  uint64_t v63 = v19;
  sub_1D42AE858((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1D4304ECC((uint64_t)v4);
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1D4469928();
    sub_1D42D7FAC(v20, (uint64_t)qword_1EBD83228);
    uint64_t v21 = sub_1D44698F8();
    os_log_type_t v22 = sub_1D446A018();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_1D4271000, v21, v22, "FMIPDeviceImageDownloadOperation: operation cannot start without URL", v23, 2u);
      MEMORY[0x1D9447730](v23, -1, -1);
    }

    return objc_msgSend(v1, sel_setFinished_, 1);
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v53 = v6 + 32;
    v52(v13, v4, v5);
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v54 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v55 = v0;
    uint64_t v25 = sub_1D4469928();
    sub_1D42D7FAC(v25, (uint64_t)qword_1EBD83228);
    unint64_t v49 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v49(v11, v13, v5);
    id v26 = sub_1D44698F8();
    os_log_type_t v27 = sub_1D446A038();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v48 = v13;
      uint64_t v28 = swift_slowAlloc();
      v47[1] = v6 + 16;
      unint64_t v29 = (uint8_t *)v28;
      v47[0] = swift_slowAlloc();
      *(void *)&long long aBlock = v47[0];
      *(_DWORD *)unint64_t v29 = 136315138;
      uint64_t v30 = sub_1D44693F8();
      uint64_t v56 = sub_1D42CB9EC(v30, v31, (uint64_t *)&aBlock);
      uint64_t v13 = v48;
      sub_1D446A188();
      swift_bridgeObjectRelease();
      unint64_t v32 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
      uint64_t v50 = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      int v51 = v32;
      v32(v11, v5);
      _os_log_impl(&dword_1D4271000, v26, v27, "FMIPDeviceImageDownloadOperation: started for URL: %s", v29, 0xCu);
      uint64_t v33 = v47[0];
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v33, -1, -1);
      MEMORY[0x1D9447730](v29, -1, -1);
    }
    else
    {
      uint64_t v34 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
      uint64_t v50 = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      int v51 = v34;
      v34(v11, v5);
    }

    id v35 = objc_msgSend(self, sel_defaultSessionConfiguration);
    objc_msgSend(v35, sel_setHTTPShouldUsePipelining_, 1);
    id v36 = objc_msgSend(self, sel_sessionWithConfiguration_, v35);
    uint64_t v37 = (void *)sub_1D4469428();
    uint64_t v38 = v54;
    v49(v54, v13, v5);
    unint64_t v39 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v40 = (v7 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
    unsigned __int8 v41 = v13;
    uint64_t v42 = swift_allocObject();
    v52((char *)(v42 + v39), v38, v5);
    uint64_t v43 = v55;
    *(void *)(v42 + v40) = v55;
    *(void *)&long long v60 = sub_1D42DC8E8;
    *((void *)&v60 + 1) = v42;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v58 = sub_1D42DC820;
    uint64_t v59 = &unk_1F2C057F0;
    uint64_t v44 = _Block_copy(&aBlock);
    id v45 = v43;
    swift_release();
    id v46 = objc_msgSend(v36, sel_dataTaskWithURL_completionHandler_, v37, v44);
    _Block_release(v44);

    objc_msgSend(v46, sel_resume);
    return (id)v51(v41, v5);
  }
}

uint64_t sub_1D42AE858@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v2 = sub_1D44691F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = *(void *)v1;
  unint64_t v6 = *(void *)(v1 + 8);
  unint64_t v8 = *(void *)(v1 + 16);
  unint64_t v9 = *(void *)(v1 + 24);
  unint64_t v35 = *(void *)(v1 + 32);
  unint64_t v36 = v8;
  unint64_t v10 = *(void *)(v1 + 40);
  int v39 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v11 = *(unsigned __int8 *)(v1 + 49);
  unint64_t v37 = v10;
  uint64_t v38 = v11;
  double v12 = *(double *)(v1 + 56);
  unint64_t v43 = 0xD000000000000037;
  unint64_t v44 = 0x80000001D44850B0;
  unint64_t v41 = v7;
  unint64_t v42 = v6;
  swift_bridgeObjectRetain();
  sub_1D4469198();
  sub_1D42CB768();
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  uint64_t v14 = sub_1D446A1C8();
  uint64_t v16 = v15;
  char v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v5, v2);
  swift_bridgeObjectRelease();
  char v18 = (_OWORD *)&unk_1D446E000;
  if (v16)
  {
    sub_1D42D5DA0(&qword_1EA6C98E0);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1D446E050;
    *(void *)(v19 + 56) = v13;
    *(void *)(v19 + 64) = sub_1D42CB714();
    *(void *)(v19 + 32) = v14;
    *(void *)(v19 + 40) = v16;
    sub_1D4469B58();
    sub_1D4469C08();
    char v18 = &unk_1D446E000;
    swift_bridgeObjectRelease();
  }
  unint64_t v41 = v36;
  unint64_t v42 = v9;
  swift_bridgeObjectRetain();
  sub_1D4469198();
  uint64_t v20 = MEMORY[0x1E4FBB1A0];
  uint64_t v21 = sub_1D446A1C8();
  uint64_t v23 = v22;
  v17(v5, v2);
  swift_bridgeObjectRelease();
  uint64_t v24 = v18;
  if (v23)
  {
    sub_1D42D5DA0(&qword_1EA6C98E0);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = v24[5];
    *(void *)(v25 + 56) = v20;
    *(void *)(v25 + 64) = sub_1D42CB714();
    *(void *)(v25 + 32) = v21;
    *(void *)(v25 + 40) = v23;
    sub_1D4469B58();
    sub_1D4469C08();
    swift_bridgeObjectRelease();
  }
  if (v37)
  {
    unint64_t v41 = v35;
    unint64_t v42 = v37;
    swift_bridgeObjectRetain();
    sub_1D4469198();
    uint64_t v26 = sub_1D446A1C8();
    uint64_t v28 = v27;
    v17(v5, v2);
    swift_bridgeObjectRelease();
    if (v28)
    {
      sub_1D42D5DA0(&qword_1EA6C98E0);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = v24[5];
      *(void *)(v29 + 56) = v20;
      *(void *)(v29 + 64) = sub_1D42CB714();
      *(void *)(v29 + 32) = v26;
      *(void *)(v29 + 40) = v28;
      sub_1D4469B58();
      sub_1D4469C08();
      swift_bridgeObjectRelease();
    }
  }
  sub_1D4469C08();
  unint64_t v30 = 0xE600000000000000;
  unint64_t v31 = 0x656E696C6E6FLL;
  switch(v38)
  {
    case 1:
      unint64_t v30 = 0xE700000000000000;
      unint64_t v31 = 0x656E696C66666FLL;
      break;
    case 2:
      unint64_t v31 = 0x64656B636F6CLL;
      break;
    case 3:
      unint64_t v30 = 0xE700000000000000;
      unint64_t v31 = 0x6475427466656CLL;
      break;
    case 4:
      unint64_t v30 = 0xE800000000000000;
      unint64_t v31 = 0x6475427468676972;
      break;
    case 5:
      unint64_t v31 = 0xD00000000000001ALL;
      unint64_t v32 = "caseLidOpenLeftRightInside";
      goto LABEL_17;
    case 6:
      unint64_t v30 = 0xED00006465736F6CLL;
      unint64_t v31 = 0x4364694C65736163;
      break;
    case 7:
      unint64_t v30 = 0x80000001D447E0C0;
      unint64_t v31 = 0xD000000000000015;
      break;
    case 8:
      unint64_t v31 = 0xD000000000000016;
      unint64_t v32 = "caseLidOpenRightInside";
LABEL_17:
      unint64_t v30 = (unint64_t)(v32 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v41 = v31;
  unint64_t v42 = v30;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  if (v12 != 1.0)
  {
    sub_1D42D5DA0(&qword_1EA6C98E0);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = v24[5];
    *(void *)(v33 + 56) = MEMORY[0x1E4FBC958];
    *(void *)(v33 + 64) = sub_1D42CB7BC();
    *(double *)(v33 + 32) = v12;
    sub_1D4469B58();
  }
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D4469488();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42AEDE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1D42AEE0C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1D42AEE34()
{
  return sub_1D42AEE3C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1D42AEE3C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D42AEE64()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1D42AEE74()
{
  return sub_1D42AEE7C(*(void *)(v0 + 16));
}

uint64_t sub_1D42AEE7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_1D42AEE8C()
{
  uint64_t v1 = *(void *)(sub_1D4469688() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + v3);
  uint64_t v6 = *(void *)(v0 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = *(void *)(v0 + v4 + 8);

  return sub_1D42AEF34(v0 + v2, v5, v7, v8, v6);
}

uint64_t sub_1D42AEF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v38 = a2;
  uint64_t v9 = sub_1D4469958();
  uint64_t v43 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v41 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1D44699B8();
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  int v39 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D4469688();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1D4469928();
  sub_1D42D7FAC(v16, (uint64_t)qword_1EBD83228);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  char v17 = sub_1D44698F8();
  os_log_type_t v18 = sub_1D446A038();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v36 = a4;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v37 = v9;
    uint64_t v22 = v21;
    aBlock[0] = v21;
    uint64_t v34 = a5;
    uint64_t v35 = a3;
    *(_DWORD *)uint64_t v20 = 136315138;
    uint64_t v23 = sub_1D4469638();
    uint64_t v44 = sub_1D42CB9EC(v23, v24, aBlock);
    a5 = v34;
    a3 = v35;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    _os_log_impl(&dword_1D4271000, v17, v18, "FMIPBeaconRefreshingController: Refreshing beacon groups %s", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v25 = v22;
    uint64_t v9 = v37;
    MEMORY[0x1D9447730](v25, -1, -1);
    uint64_t v26 = v20;
    a4 = v36;
    MEMORY[0x1D9447730](v26, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }

  uint64_t v27 = v38;
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = v27;
  v28[3] = a3;
  v28[4] = a4;
  v28[5] = a5;
  aBlock[4] = (uint64_t)sub_1D42BDC74;
  void aBlock[5] = (uint64_t)v28;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D42BD950;
  uint64_t aBlock[3] = (uint64_t)&unk_1F2C12C50;
  uint64_t v29 = _Block_copy(aBlock);
  swift_retain();
  sub_1D42972D4(a3);
  unint64_t v30 = v39;
  sub_1D4469988();
  uint64_t v44 = MEMORY[0x1E4FBC860];
  sub_1D444A534((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  unint64_t v31 = v41;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v30, v31, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v9);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v42);
  return swift_release();
}

void sub_1D42AF458()
{
  sub_1D42AF460(v0);
}

void sub_1D42AF460(uint64_t *a1)
{
  unint64_t v2 = (void *)MEMORY[0x1D9446F50]();
  sub_1D42AF4B8(a1);
}

void sub_1D42AF4B8(uint64_t *a1)
{
  uint64_t v1 = OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_isInitializing;
  if ((*((unsigned char *)a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_isInitializing) & 1) == 0)
  {
    unint64_t v3 = (char *)a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_itemCounts;
    long long v41 = *(_OWORD *)((char *)a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_itemCounts);
    long long v40 = *(_OWORD *)((char *)a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_itemCounts + 16);
    uint64_t v4 = *(uint64_t *)((char *)a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_itemCounts + 32);
    uint64_t v5 = *(uint64_t *)((char *)a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_itemCounts + 40);
    char v6 = *((unsigned char *)a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_itemCounts + 48);
    type metadata accessor for FMIPInitClientRequest();
    uint64_t v7 = swift_allocObject() + qword_1EA6E48C8;
    *(_OWORD *)uint64_t v7 = v41;
    *(_OWORD *)(v7 + 16) = v40;
    *(void *)(v7 + 32) = v4;
    *(void *)(v7 + 40) = v5;
    *(unsigned char *)(v7 + 48) = v6;
    uint64_t v8 = sub_1D4332A24(0x65696C4374696E69, 0xEA0000000000746ELL, 0, 0, 1);
    *((unsigned char *)a1 + v1) = 1;
    uint64_t v9 = sub_1D4295E0C();
    uint64_t v10 = (uint64_t *)((char *)a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_ownerPhoneNumber);
    *uint64_t v10 = v9;
    v10[1] = v11;
    swift_bridgeObjectRelease();
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1D4469928();
    sub_1D42D7FAC(v12, (uint64_t)qword_1EBD83228);
    swift_retain_n();
    uint64_t v13 = sub_1D44698F8();
    os_log_type_t v14 = sub_1D446A038();
    uint64_t v42 = v8;
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(void *)&v43[0] = v16;
      *(_DWORD *)uint64_t v15 = 136446210;
      uint64_t v45 = *a1;
      sub_1D42D5DA0(&qword_1EA6CB360);
      uint64_t v17 = sub_1D4469B68();
      uint64_t v45 = sub_1D42CB9EC(v17, v18, (uint64_t *)v43);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v13, v14, "%{public}s: sending initClient request…", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v16, -1, -1);
      MEMORY[0x1D9447730](v15, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    swift_retain_n();
    uint64_t v19 = sub_1D44698F8();
    os_log_type_t v20 = sub_1D446A038();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v45 = v22;
      *(_DWORD *)uint64_t v21 = 136446466;
      *(void *)&v43[0] = *a1;
      sub_1D42D5DA0(&qword_1EA6CB360);
      uint64_t v23 = sub_1D4469B68();
      *(void *)&v43[0] = sub_1D42CB9EC(v23, v24, &v45);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      char v25 = v3[48];
      long long v26 = *((_OWORD *)v3 + 1);
      v43[0] = *(_OWORD *)v3;
      v43[1] = v26;
      void v43[2] = *((_OWORD *)v3 + 2);
      char v44 = v25;
      sub_1D42D5DA0(&qword_1EA6CB358);
      uint64_t v27 = sub_1D446A158();
      *(void *)&v43[0] = sub_1D42CB9EC(v27, v28, &v45);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v19, v20, "%{public}s: initClient request itemCounts: %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v22, -1, -1);
      MEMORY[0x1D9447730](v21, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v29 = *(uint64_t *)((char *)a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_interactionController + 24);
    uint64_t v30 = *(uint64_t *)((char *)a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_interactionController + 32);
    sub_1D42C26F4((uint64_t *)((char *)a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_interactionController), v29);
    uint64_t v31 = swift_allocObject();
    swift_weakInit();
    unint64_t v32 = *(void (**)(void *, uint64_t (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
    uint64_t v33 = type metadata accessor for FMIPInitClientResponse();
    v32(v42, sub_1D42E4B2C, v31, v33, v29, v30);
    swift_release();
    swift_retain_n();
    uint64_t v34 = sub_1D44698F8();
    os_log_type_t v35 = sub_1D446A038();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(void *)&v43[0] = v37;
      *(_DWORD *)uint64_t v36 = 136446210;
      uint64_t v45 = *a1;
      sub_1D42D5DA0(&qword_1EA6CB360);
      uint64_t v38 = sub_1D4469B68();
      uint64_t v45 = sub_1D42CB9EC(v38, v39, (uint64_t *)v43);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v34, v35, "%{public}s: received snapshot initClient response", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v37, -1, -1);
      MEMORY[0x1D9447730](v36, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
      swift_release_n();
    }
  }
}

uint64_t sub_1D42AFB44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPEraseMetadata.init(from:)(a1, a2);
}

uint64_t FMIPEraseMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v3 = sub_1D4469618();
  unint64_t v4 = *(void *)(v3 - 8);
  uint64_t v76 = v3;
  unint64_t v77 = v4;
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EBD7D9B8);
  uint64_t v78 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPEraseMetadata();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42B04E8();
  uint64_t v13 = v79;
  sub_1D446A8C8();
  if (v13) {
    return sub_1D42BEC64((uint64_t)a1);
  }
  uint64_t v73 = (int *)v10;
  uint64_t v74 = v12;
  uint64_t v79 = v6;
  uint64_t v14 = v78;
  LOBYTE(v80[0]) = 2;
  uint64_t v15 = sub_1D446A5E8();
  LOBYTE(v80[0]) = 3;
  uint64_t v16 = sub_1D446A598();
  unint64_t v18 = v17;
  uint64_t v72 = v16;
  id v19 = objc_msgSend(self, sel_fm_dateFromEpoch_, v15);
  sub_1D44695D8();

  LOBYTE(v80[0]) = 0;
  uint64_t v69 = sub_1D446A598();
  uint64_t v70 = v20;
  unint64_t v71 = v18;
  LOBYTE(v80[0]) = 1;
  uint64_t v21 = sub_1D446A598();
  uint64_t v22 = v14;
  unint64_t v23 = v77;
  uint64_t v66 = v21;
  uint64_t v67 = v24;
  LOBYTE(v80[0]) = 4;
  uint64_t result = sub_1D446A5A8();
  uint64_t v68 = 0;
  unint64_t v26 = HIBYTE(v71) & 0xF;
  uint64_t v27 = v72 & 0xFFFFFFFFFFFFLL;
  if ((v71 & 0x2000000000000000) != 0) {
    unint64_t v28 = HIBYTE(v71) & 0xF;
  }
  else {
    unint64_t v28 = v72 & 0xFFFFFFFFFFFFLL;
  }
  int v65 = result;
  objc_super v64 = a1;
  if (v28)
  {
    if ((v71 & 0x1000000000000000) != 0)
    {
      uint64_t v72 = (uint64_t)sub_1D430B5A4(v72, v71, 10);
      char v51 = v50;
      swift_bridgeObjectRelease();
      uint64_t v30 = v76;
      unint64_t v32 = v73;
      uint64_t v31 = v74;
      if ((v51 & 1) == 0)
      {
LABEL_58:
        FMIPActionStatus.init(rawValue:)(v72);
        if (LOBYTE(v80[0]) == 18) {
          char v49 = 1;
        }
        else {
          char v49 = v80[0];
        }
        goto LABEL_64;
      }
      goto LABEL_63;
    }
    if ((v71 & 0x2000000000000000) == 0)
    {
      if ((v72 & 0x1000000000000000) != 0) {
        uint64_t v29 = (unsigned __int8 *)((v71 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v29 = (unsigned __int8 *)sub_1D446A3E8();
      }
      uint64_t v30 = v76;
      unint64_t v32 = v73;
      uint64_t v31 = v74;
      uint64_t v33 = v68;
      uint64_t v72 = (uint64_t)sub_1D430B6F0(v29, v27, 10);
      uint64_t v68 = v33;
      char v35 = v34 & 1;
LABEL_57:
      swift_bridgeObjectRelease();
      if ((v35 & 1) == 0) {
        goto LABEL_58;
      }
LABEL_63:
      char v49 = 1;
      goto LABEL_64;
    }
    v80[0] = v72;
    v80[1] = v71 & 0xFFFFFFFFFFFFFFLL;
    if (v72 == 43)
    {
      if (!v26) {
        goto LABEL_72;
      }
      if (v26 == 1 || (BYTE1(v72) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v36 = (BYTE1(v72) - 48);
      if (v26 == 2) {
        goto LABEL_36;
      }
      if ((BYTE2(v72) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v72 = 10 * (BYTE1(v72) - 48) + (BYTE2(v72) - 48);
      unint64_t v37 = v26 - 3;
      if (v37)
      {
        uint64_t v38 = (unsigned __int8 *)v80 + 3;
        while (1)
        {
          unsigned int v39 = *v38 - 48;
          if (v39 > 9) {
            goto LABEL_54;
          }
          uint64_t v40 = 10 * v72;
          if ((unsigned __int128)(v72 * (__int128)10) >> 64 != (10 * v72) >> 63) {
            goto LABEL_54;
          }
          uint64_t v72 = v40 + v39;
          if (__OFADD__(v40, v39)) {
            goto LABEL_54;
          }
          char v35 = 0;
          ++v38;
          if (!--v37) {
            goto LABEL_55;
          }
        }
      }
    }
    else
    {
      if (v72 == 45)
      {
        if (v26)
        {
          if (v26 != 1 && (BYTE1(v72) - 48) <= 9u)
          {
            if (v26 == 2)
            {
              char v35 = 0;
              uint64_t v72 = -(uint64_t)(BYTE1(v72) - 48);
LABEL_56:
              uint64_t v30 = v76;
              unint64_t v32 = v73;
              uint64_t v31 = v74;
              goto LABEL_57;
            }
            if ((BYTE2(v72) - 48) <= 9u)
            {
              uint64_t v72 = -10 * (BYTE1(v72) - 48) - (BYTE2(v72) - 48);
              unint64_t v45 = v26 - 3;
              if (!v45) {
                goto LABEL_47;
              }
              id v46 = (unsigned __int8 *)v80 + 3;
              while (1)
              {
                unsigned int v47 = *v46 - 48;
                if (v47 > 9) {
                  break;
                }
                uint64_t v48 = 10 * v72;
                if ((unsigned __int128)(v72 * (__int128)10) >> 64 != (10 * v72) >> 63) {
                  break;
                }
                uint64_t v72 = v48 - v47;
                if (__OFSUB__(v48, v47)) {
                  break;
                }
                char v35 = 0;
                ++v46;
                if (!--v45) {
                  goto LABEL_55;
                }
              }
LABEL_54:
              uint64_t v72 = 0;
              char v35 = 1;
              goto LABEL_55;
            }
          }
LABEL_34:
          uint64_t v72 = 0;
          char v35 = 1;
          goto LABEL_56;
        }
        __break(1u);
LABEL_72:
        __break(1u);
        return result;
      }
      if (!v26 || (v72 - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v36 = (v72 - 48);
      if (v26 == 1)
      {
LABEL_36:
        uint64_t v72 = v36;
        char v35 = 0;
        goto LABEL_56;
      }
      if ((BYTE1(v72) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v72 = 10 * (v72 - 48) + (BYTE1(v72) - 48);
      unint64_t v41 = v26 - 2;
      if (v41)
      {
        uint64_t v42 = (unsigned __int8 *)v80 + 2;
        while (1)
        {
          unsigned int v43 = *v42 - 48;
          if (v43 > 9) {
            goto LABEL_54;
          }
          uint64_t v44 = 10 * v72;
          if ((unsigned __int128)(v72 * (__int128)10) >> 64 != (10 * v72) >> 63) {
            goto LABEL_54;
          }
          uint64_t v72 = v44 + v43;
          if (__OFADD__(v44, v43)) {
            goto LABEL_54;
          }
          char v35 = 0;
          ++v42;
          if (!--v41) {
            goto LABEL_55;
          }
        }
      }
    }
LABEL_47:
    char v35 = 0;
LABEL_55:
    uint64_t v22 = v14;
    unint64_t v23 = v77;
    goto LABEL_56;
  }
  swift_bridgeObjectRelease();
  char v49 = 1;
  uint64_t v30 = v76;
  unint64_t v32 = v73;
  uint64_t v31 = v74;
LABEL_64:
  uint64_t v52 = v70;
  uint64_t v54 = v66;
  uint64_t v53 = v67;
  id v55 = (uint64_t *)&v31[v32[7]];
  *id v55 = v69;
  v55[1] = v52;
  uint64_t v56 = &v31[v32[6]];
  *(void *)uint64_t v56 = v54;
  *((void *)v56 + 1) = v53;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(&v31[v32[5]], v79, v30);
  *uint64_t v31 = v49;
  v31[v32[8]] = v65 & 1;
  unint64_t v77 = FMIPEraseMetadata.debugDescription.getter();
  unint64_t v58 = v57;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v59 = sub_1D4469928();
  sub_1D42D7FAC(v59, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  long long v60 = sub_1D44698F8();
  os_log_type_t v61 = sub_1D4469FF8();
  if (os_log_type_enabled(v60, v61))
  {
    char v62 = (uint8_t *)swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    v80[0] = v63;
    uint64_t v76 = v7;
    *(_DWORD *)char v62 = 136315138;
    uint64_t v73 = (int *)(v62 + 4);
    swift_bridgeObjectRetain();
    v80[3] = sub_1D42CB9EC(v77, v58, v80);
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D4271000, v60, v61, "FMIPEraseMetadata: initialized %s", v62, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v63, -1, -1);
    MEMORY[0x1D9447730](v62, -1, -1);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v79, v30);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v9, v76);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v23 + 8))(v79, v30);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
  }
  sub_1D430B68C((uint64_t)v74, v75);
  return sub_1D42BEC64((uint64_t)v64);
}

unint64_t sub_1D42B04E8()
{
  unint64_t result = qword_1EBD7CE10;
  if (!qword_1EBD7CE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CE10);
  }
  return result;
}

Swift::Void __swiftcall FMIPManager.initialize()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D4469958();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D44699B8();
  uint64_t v33 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration);
  uint64_t v10 = OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems;
  uint64_t v11 = *(void *)(v9 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems);
  unint64_t v32 = v8;
  if ((v11 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_refreshingController);
  if (!v12) {
    goto LABEL_8;
  }
  unint64_t v26 = v5;
  uint64_t v27 = v6;
  uint64_t v28 = v3;
  uint64_t v29 = v2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1D42AF458;
  *(void *)(v13 + 24) = v12;
  unsigned int v39 = sub_1D42AEE34;
  uint64_t v40 = v13;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v36 = 1107296256;
  unint64_t v37 = sub_1D42AEDE4;
  uint64_t v38 = &unk_1F2C0AA68;
  uint64_t v31 = _Block_copy(&aBlock);
  uint64_t v14 = _Block_copy(v31);
  uint64_t v15 = qword_1EBD7E6F0;
  swift_retain_n();
  swift_retain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_1EBD7E6E8;
  swift_unknownObjectRetain();
  os_activity_t v30 = _os_activity_create(&dword_1D4271000, "FMIPRefreshingController.initialize", v16, OS_ACTIVITY_FLAG_DEFAULT);
  swift_unknownObjectRelease();
  unint64_t v17 = _Block_copy(v14);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1D42AEE74;
  *(void *)(v19 + 24) = v18;
  v34[4] = sub_1D42AEE88;
  v34[5] = v19;
  v34[0] = MEMORY[0x1E4F143A8];
  v34[1] = 1107296256;
  uint64_t v34[2] = sub_1D42AEDE4;
  v34[3] = &unk_1F2C0AAE0;
  uint64_t v20 = _Block_copy(v34);
  swift_retain();
  swift_release();
  os_activity_apply(v30, v20);
  _Block_release(v20);
  LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v14);
  swift_unknownObjectRelease();
  _Block_release(v31);
  if (v20)
  {
    __break(1u);
    goto LABEL_15;
  }
  swift_release();
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t v3 = v28;
  uint64_t v2 = v29;
  if (isEscapingClosureAtFileLocation)
  {
LABEL_15:
    __break(1u);
    return;
  }
  uint64_t v11 = *(void *)(v9 + v10);
  uint64_t v6 = v27;
  uint64_t v5 = v26;
LABEL_8:
  if ((v11 & 3) != 0)
  {
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    swift_retain();
    sub_1D42BF230((uint64_t)sub_1D42B34B0, v22);
    swift_release();
    swift_release_n();
    swift_retain();
    sub_1D42B0BC0(0, 0);
    swift_release();
  }
  if (*(unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager) + 64) == 1)
  {
    unint64_t v23 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_initializedSubsystems);
    swift_beginAccess();
    if (*v23 != *(void *)(v9 + v10))
    {
      unsigned int v39 = sub_1D4385818;
      uint64_t v40 = v1;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v36 = 1107296256;
      unint64_t v37 = sub_1D42BD950;
      uint64_t v38 = &unk_1F2C0A9F0;
      uint64_t v24 = _Block_copy(&aBlock);
      swift_retain();
      char v25 = v32;
      sub_1D4469988();
      v34[6] = MEMORY[0x1E4FBC860];
      sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
      sub_1D42D5DA0(&qword_1EBD7FD78);
      sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
      sub_1D446A1F8();
      MEMORY[0x1D9446420](0, v25, v5, v24);
      _Block_release(v24);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v6);
      swift_release();
    }
  }
}

uint64_t sub_1D42B0BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D4469958();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1D44699B8();
  uint64_t v10 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshQueue);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v13;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_1D42BDA24;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C13420;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1D42972D4(a1);
  sub_1D4469988();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1D444A534((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v12, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  swift_release();
  return swift_release();
}

uint64_t sub_1D42B0ED0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPDeviceLostModeMetadata.init(from:)(a1, a2);
}

uint64_t FMIPDeviceLostModeMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v3 = sub_1D4469618();
  uint64_t v77 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7D9C8);
  uint64_t v78 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPDeviceLostModeMetadata();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v80 = a1;
  sub_1D42C26F4(a1, v12);
  sub_1D42B1854();
  uint64_t v13 = v79;
  sub_1D446A8C8();
  if (v13) {
    return sub_1D42BEC64((uint64_t)v80);
  }
  uint64_t v74 = v11;
  uint64_t v75 = v5;
  uint64_t v79 = v3;
  LOBYTE(v81[0]) = 8;
  uint64_t v14 = sub_1D446A5E8();
  LOBYTE(v81[0]) = 4;
  uint64_t v15 = sub_1D446A598();
  unint64_t v17 = v16;
  uint64_t v73 = v15;
  id v18 = objc_msgSend(self, sel_fm_dateFromEpoch_, v14);
  sub_1D44695D8();

  LOBYTE(v81[0]) = 6;
  uint64_t v70 = sub_1D446A598();
  uint64_t v71 = v19;
  unint64_t v72 = v17;
  LOBYTE(v81[0]) = 1;
  uint64_t v68 = sub_1D446A598();
  uint64_t v69 = v20;
  LOBYTE(v81[0]) = 2;
  uint64_t v21 = sub_1D446A558();
  if (v22) {
    uint64_t v23 = v21;
  }
  else {
    uint64_t v23 = 0;
  }
  unint64_t v24 = 0xE000000000000000;
  if (v22) {
    unint64_t v24 = v22;
  }
  uint64_t v66 = v23;
  unint64_t v67 = v24;
  LOBYTE(v81[0]) = 0;
  int v65 = sub_1D446A5A8();
  LOBYTE(v81[0]) = 3;
  int v64 = sub_1D446A5A8();
  LOBYTE(v81[0]) = 5;
  int v63 = sub_1D446A5A8();
  LOBYTE(v81[0]) = 7;
  uint64_t result = sub_1D446A5A8();
  uint64_t v61 = v6;
  int v62 = result;
  unint64_t v26 = HIBYTE(v72) & 0xF;
  uint64_t v27 = v73 & 0xFFFFFFFFFFFFLL;
  if ((v72 & 0x2000000000000000) != 0) {
    unint64_t v28 = HIBYTE(v72) & 0xF;
  }
  else {
    unint64_t v28 = v73 & 0xFFFFFFFFFFFFLL;
  }
  if (!v28)
  {
    swift_bridgeObjectRelease();
    goto LABEL_64;
  }
  if ((v72 & 0x1000000000000000) != 0)
  {
    Swift::Int v30 = (Swift::Int)sub_1D430B5A4(v73, v72, 10);
    char v47 = v46;
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0)
    {
LABEL_53:
      FMIPActionStatus.init(rawValue:)(v30);
      if (LOBYTE(v81[0]) == 18) {
        char v42 = 1;
      }
      else {
        char v42 = v81[0];
      }
      goto LABEL_65;
    }
LABEL_64:
    char v42 = 1;
LABEL_65:
    uint64_t v48 = v74;
    unsigned char *v74 = v63 & 1;
    v48[1] = v65 & 1;
    v48[2] = v64 & 1;
    v48[3] = v62 & 1;
    uint64_t v49 = v71;
    *((void *)v48 + 5) = v70;
    *((void *)v48 + 6) = v49;
    uint64_t v50 = v69;
    *((void *)v48 + 1) = v68;
    *((void *)v48 + 2) = v50;
    unint64_t v51 = v67;
    *((void *)v48 + 3) = v66;
    *((void *)v48 + 4) = v51;
    (*(void (**)(unsigned char *, char *, uint64_t))(v77 + 16))(&v48[*(int *)(v9 + 48)], v75, v79);
    v48[56] = v42;
    unint64_t v52 = FMIPDeviceLostModeMetadata.debugDescription.getter();
    unint64_t v54 = v53;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_1D4469928();
    sub_1D42D7FAC(v55, (uint64_t)qword_1EBD83228);
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_1D44698F8();
    os_log_type_t v57 = sub_1D4469FF8();
    if (os_log_type_enabled(v56, v57))
    {
      unint64_t v58 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      v81[0] = v59;
      *(_DWORD *)unint64_t v58 = 136315138;
      uint64_t v73 = (uint64_t)(v58 + 4);
      swift_bridgeObjectRetain();
      v81[4] = sub_1D42CB9EC(v52, v54, v81);
      sub_1D446A188();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D4271000, v56, v57, "FMIPDeviceLostModeMetadata: initialized %s", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v59, -1, -1);
      MEMORY[0x1D9447730](v58, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v77 + 8))(v75, v79);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v8, v61);
    sub_1D42B18A8((uint64_t)v74, v76);
    return sub_1D42BEC64((uint64_t)v80);
  }
  if ((v72 & 0x2000000000000000) == 0)
  {
    if ((v73 & 0x1000000000000000) != 0) {
      uint64_t v29 = (unsigned __int8 *)((v72 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v29 = (unsigned __int8 *)sub_1D446A3E8();
    }
    Swift::Int v30 = (Swift::Int)sub_1D430B58C(v29, v27, 10);
    char v32 = v31 & 1;
LABEL_52:
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0) {
      goto LABEL_53;
    }
    goto LABEL_64;
  }
  v81[0] = v73;
  v81[1] = v72 & 0xFFFFFFFFFFFFFFLL;
  if (v73 == 43)
  {
    if (!v26) {
      goto LABEL_73;
    }
    if (v26 == 1 || (BYTE1(v73) - 48) > 9u) {
      goto LABEL_39;
    }
    Swift::Int v30 = (BYTE1(v73) - 48);
    if (v26 != 2)
    {
      if ((BYTE2(v73) - 48) > 9u) {
        goto LABEL_39;
      }
      Swift::Int v30 = 10 * (BYTE1(v73) - 48) + (BYTE2(v73) - 48);
      unint64_t v33 = v26 - 3;
      if (v33)
      {
        char v34 = (unsigned __int8 *)v81 + 3;
        while (1)
        {
          unsigned int v35 = *v34 - 48;
          if (v35 > 9) {
            goto LABEL_39;
          }
          uint64_t v36 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63) {
            goto LABEL_39;
          }
          Swift::Int v30 = v36 + v35;
          if (__OFADD__(v36, v35)) {
            goto LABEL_39;
          }
          char v32 = 0;
          ++v34;
          if (!--v33) {
            goto LABEL_52;
          }
        }
      }
    }
LABEL_51:
    char v32 = 0;
    goto LABEL_52;
  }
  if (v73 != 45)
  {
    if (!v26 || (v73 - 48) > 9u) {
      goto LABEL_39;
    }
    Swift::Int v30 = (v73 - 48);
    if (v26 != 1)
    {
      if ((BYTE1(v73) - 48) > 9u) {
        goto LABEL_39;
      }
      Swift::Int v30 = 10 * (v73 - 48) + (BYTE1(v73) - 48);
      unint64_t v37 = v26 - 2;
      if (v37)
      {
        uint64_t v38 = (unsigned __int8 *)v81 + 2;
        while (1)
        {
          unsigned int v39 = *v38 - 48;
          if (v39 > 9) {
            goto LABEL_39;
          }
          uint64_t v40 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63) {
            goto LABEL_39;
          }
          Swift::Int v30 = v40 + v39;
          if (__OFADD__(v40, v39)) {
            goto LABEL_39;
          }
          char v32 = 0;
          ++v38;
          if (!--v37) {
            goto LABEL_52;
          }
        }
      }
    }
    goto LABEL_51;
  }
  if (v26)
  {
    if (v26 != 1 && (BYTE1(v73) - 48) <= 9u)
    {
      if (v26 == 2)
      {
        char v32 = 0;
        Swift::Int v30 = -(uint64_t)(BYTE1(v73) - 48);
        goto LABEL_52;
      }
      if ((BYTE2(v73) - 48) <= 9u)
      {
        Swift::Int v30 = -10 * (BYTE1(v73) - 48) - (BYTE2(v73) - 48);
        unint64_t v41 = v26 - 3;
        if (!v41) {
          goto LABEL_51;
        }
        unsigned int v43 = (unsigned __int8 *)v81 + 3;
        while (1)
        {
          unsigned int v44 = *v43 - 48;
          if (v44 > 9) {
            break;
          }
          uint64_t v45 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63) {
            break;
          }
          Swift::Int v30 = v45 - v44;
          if (__OFSUB__(v45, v44)) {
            break;
          }
          char v32 = 0;
          ++v43;
          if (!--v41) {
            goto LABEL_52;
          }
        }
      }
    }
LABEL_39:
    Swift::Int v30 = 0;
    char v32 = 1;
    goto LABEL_52;
  }
  __break(1u);
LABEL_73:
  __break(1u);
  return result;
}

unint64_t sub_1D42B1854()
{
  unint64_t result = qword_1EBD7D4B0;
  if (!qword_1EBD7D4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7D4B0);
  }
  return result;
}

uint64_t sub_1D42B18A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPDeviceLostModeMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t FMIPDeviceLostModeMetadata.debugDescription.getter()
{
  uint64_t v0 = self;
  type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v1 = (void *)sub_1D4469578();
  id v2 = objc_msgSend(v0, sel_localizedStringFromDate_dateStyle_timeStyle_, v1, 1, 4);

  sub_1D4469B38();
  sub_1D446A378();
  swift_bridgeObjectRelease();
  FMIPActionStatus.description.getter();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  return 0xD000000000000025;
}

uint64_t sub_1D42B1A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FMIPDevice() - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v26 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v24 = a2;
    uint64_t v25 = v3;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v14 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1D42B2458(v13, (uint64_t)v10);
      uint64_t v15 = (void *)v10[33];
      if (v15)
      {
        uint64_t v17 = *v10;
        uint64_t v16 = v10[1];
        type metadata accessor for FMLocationShiftingRequest();
        id v18 = (void *)swift_allocObject();
        void v18[2] = v15;
        v18[3] = v17;
        v18[4] = v16;
        id v19 = v15;
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_1D42B24BC((uint64_t)v10);
        MEMORY[0x1D94460A0](v20);
        if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D4469DB8();
        }
        sub_1D4469E08();
        sub_1D4469D98();
      }
      else
      {
        sub_1D42B24BC((uint64_t)v10);
      }
      v13 += v14;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    uint64_t v11 = v26;
    a2 = v24;
  }
  uint64_t v21 = (void *)swift_allocObject();
  _OWORD v21[2] = a1;
  v21[3] = a2;
  v21[4] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D42DD324(v11, (uint64_t)sub_1D42E5938, (uint64_t)v21);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1D42B1C68(unint64_t a1, double *a2, void (*a3)(unint64_t), uint64_t a4)
{
  uint64_t v8 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v71 = (char *)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D42D5DA0(&qword_1EA6CA1F8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v70 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v69 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMIPDevice();
  uint64_t v15 = *(void **)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14 - 8);
  id v18 = (char *)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v78 = (uint64_t)v66 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v77 = (uint64_t)v66 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v76 = (uint64_t)v66 - v24;
  MEMORY[0x1F4188790](v23);
  unint64_t v72 = (double *)((char *)v66 - v25);
  uint64_t v26 = (void *)*((void *)a2 + 2);
  if (!v26)
  {
    a3(MEMORY[0x1E4FBC860]);
    return swift_bridgeObjectRelease();
  }
  v66[1] = a4;
  unint64_t v67 = a3;
  if (a1 >> 62)
  {
LABEL_59:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v83 = sub_1D446A498();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v83 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  unint64_t v27 = a1;
  a1 = 0;
  uint64_t v28 = *((unsigned __int8 *)v15 + 80);
  v66[0] = a2;
  uint64_t v81 = (v28 + 32) & ~v28;
  uint64_t v82 = (char *)a2 + v81;
  uint64_t v29 = v15[9];
  unint64_t v30 = MEMORY[0x1E4FBC860];
  unint64_t v79 = v27 & 0xC000000000000001;
  uint64_t v80 = v29;
  uint64_t v73 = v18;
  a2 = v72;
  unint64_t v68 = v27;
  uint64_t v75 = v26;
  do
  {
    if ((void *)a1 == v26)
    {
      __break(1u);
      goto LABEL_57;
    }
    sub_1D42B2458((uint64_t)&v82[v29 * a1], (uint64_t)a2);
    if (v83)
    {
      if (v79)
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = (void *)MEMORY[0x1D9446710](0, v27);
      }
      else
      {
        uint64_t v26 = *(void **)(v27 + 32);
        swift_bridgeObjectRetain();
        swift_retain();
      }
      double v31 = *a2;
      uint64_t v15 = (void *)*((void *)a2 + 1);
      if (v26[3] == *(void *)a2 && (void *)v26[4] == v15 || (sub_1D446A758() & 1) != 0)
      {
LABEL_14:
        swift_bridgeObjectRelease();
        uint64_t v29 = v80;
        char v32 = (void *)*((void *)a2 + 33);
        if (v32)
        {
          double v33 = a2[34];
          unint64_t v34 = *((void *)a2 + 32);
          char v35 = v34 & 1;
          uint64_t v36 = (v34 >> 8) & 1;
          uint64_t v37 = (v34 >> 16) & 1;
          uint64_t v38 = (void *)v26[2];
          v88[0] = BYTE3(v34);
          id v74 = v32;
          sub_1D42B7188(v38, v88, v35, v36, v37, (uint64_t)&v89, v33);
          uint64_t v39 = v89;
          LODWORD(v37) = BYTE1(v89);
          int v40 = BYTE2(v89);
          uint64_t v41 = (uint64_t)a2;
          uint64_t v42 = BYTE3(v89);
          unsigned int v43 = (void *)*((void *)&v89 + 1);
          uint64_t v44 = v90;
          sub_1D42B2458(v41, v77);
          sub_1D42FB494(&v89);
          sub_1D42FABAC((uint64_t)&v89, (uint64_t)v88);
          memset(v87, 0, sizeof(v87));
          uint64_t v45 = 256;
          if (!v37) {
            uint64_t v45 = 0;
          }
          uint64_t v46 = v45 | v39;
          uint64_t v47 = 0x10000;
          if (!v40) {
            uint64_t v47 = 0;
          }
          memset(v86, 0, sizeof(v86));
          v85[0] = v46 | v47 | (v42 << 24);
          v85[1] = v43;
          v85[2] = v44;
          uint64_t v48 = type metadata accessor for FMIPItemGroup();
          uint64_t v49 = (uint64_t)v69;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v69, 1, 1, v48);
          unsigned __int8 v84 = 7;
          uint64_t v50 = type metadata accessor for FMIPDeviceConnectedState(0);
          uint64_t v51 = (uint64_t)v70;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v70, 1, 1, v50);
          uint64_t v52 = type metadata accessor for FMIPDeviceLostModeMetadata();
          unint64_t v53 = v71;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v71, 1, 1, v52);
          uint64_t v15 = v43;
          uint64_t v65 = (uint64_t)v53;
          uint64_t v54 = v76;
          FMIPDevice.init(device:historicalLocations:address:crowdSourcedLocation:location:shiftedLocation:crowdSourcedLocating:itemGroup:deviceWithYou:findingCapable:beaconType:deviceConnectedState:lostModeMetadata:)(v77, 0, v88, v87, v86, (uint64_t)v85, 2, v49, v76, 2u, 2, &v84, v51, v65);
          sub_1D42B2458(v54, v78);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v30 = sub_1D42CAE20(0, *(void *)(v30 + 16) + 1, 1, v30);
          }
          unint64_t v56 = *(void *)(v30 + 16);
          unint64_t v55 = *(void *)(v30 + 24);
          unint64_t v27 = v68;
          a2 = v72;
          uint64_t v29 = v80;
          if (v56 >= v55 >> 1) {
            unint64_t v30 = sub_1D42CAE20(v55 > 1, v56 + 1, 1, v30);
          }
          *(void *)(v30 + 16) = v56 + 1;
          sub_1D42B2518(v78, v30 + v81 + v56 * v29);

          swift_release();
          sub_1D42B24BC(v76);
          sub_1D42B24BC((uint64_t)a2);
          id v18 = v73;
          uint64_t v26 = v75;
          goto LABEL_6;
        }
        swift_release();
        id v18 = v73;
        uint64_t v26 = v75;
      }
      else
      {
        swift_release();
        if (v83 != 1)
        {
          if (v79)
          {
            uint64_t v57 = 1;
            while (1)
            {
              uint64_t v58 = MEMORY[0x1D9446710](v57, v27);
              id v18 = (char *)(v57 + 1);
              if (__OFADD__(v57, 1)) {
                break;
              }
              uint64_t v26 = (void *)v58;
              BOOL v59 = *(void *)(v58 + 24) == *(void *)&v31 && *(void *)(v58 + 32) == (void)v15;
              if (v59 || (sub_1D446A758() & 1) != 0) {
                goto LABEL_14;
              }
              swift_unknownObjectRelease();
              ++v57;
              if (v18 == (char *)v83) {
                goto LABEL_45;
              }
            }
LABEL_57:
            __break(1u);
          }
          else
          {
            uint64_t v60 = 5;
            while (1)
            {
              id v18 = (char *)(v60 - 3);
              if (__OFADD__(v60 - 4, 1)) {
                break;
              }
              uint64_t v26 = *(void **)(v27 + 8 * v60);
              BOOL v61 = v26[3] == *(void *)&v31 && v26[4] == (void)v15;
              if (v61 || (sub_1D446A758() & 1) != 0)
              {
                swift_retain();
                goto LABEL_14;
              }
              ++v60;
              if (v18 == (char *)v83)
              {
LABEL_45:
                swift_bridgeObjectRelease();
                id v18 = v73;
                goto LABEL_46;
              }
            }
          }
          __break(1u);
          goto LABEL_59;
        }
        swift_bridgeObjectRelease();
LABEL_46:
        uint64_t v26 = v75;
        uint64_t v29 = v80;
      }
    }
    sub_1D42B2458((uint64_t)a2, (uint64_t)v18);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v30 = sub_1D42CAE20(0, *(void *)(v30 + 16) + 1, 1, v30);
    }
    unint64_t v63 = *(void *)(v30 + 16);
    unint64_t v62 = *(void *)(v30 + 24);
    uint64_t v15 = (void *)(v63 + 1);
    if (v63 >= v62 >> 1) {
      unint64_t v30 = sub_1D42CAE20(v62 > 1, v63 + 1, 1, v30);
    }
    *(void *)(v30 + 16) = v15;
    sub_1D42B2518((uint64_t)v18, v30 + v81 + v63 * v29);
    sub_1D42B24BC((uint64_t)a2);
LABEL_6:
    ++a1;
  }
  while ((void *)a1 != v26);
  swift_bridgeObjectRelease();
  v67(v30);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42B2458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPDevice();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D42B24BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPDevice();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D42B2518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPDevice();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D42B257C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v7 = *(void (**)(uint64_t))(a1 + 32);
  sub_1D4275AD0(0, a3);
  sub_1D42B2630(a5, a3);
  uint64_t v8 = sub_1D4469ED8();
  swift_retain();
  v7(v8);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42B2630(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D4275AD0(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42B2680(uint64_t a1)
{
  return sub_1D42B268C(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1D42B268C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7 = sub_1D4469958();
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  MEMORY[0x1F4188790](v7);
  char v35 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1D44699B8();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  double v33 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPItemGroup();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (void *)((char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_1D42B2D58(v14);
  swift_bridgeObjectRelease();
  if (v15 < 0 || (v15 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1D446A498();
    swift_release();
  }
  else
  {
    uint64_t v16 = *(void *)(v15 + 16);
  }
  if (v16)
  {
    aBlock[0] = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1D4337294(0, v16 & ~(v16 >> 63), 0);
    if (v16 < 0)
    {
      __break(1u);
      return result;
    }
    v31[0] = a2;
    v31[1] = a4;
    char v32 = a3;
    uint64_t v18 = 0;
    uint64_t v19 = aBlock[0];
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v20 = (id)MEMORY[0x1D9446710](v18, v15);
      }
      else {
        id v20 = *(id *)(v15 + 8 * v18 + 32);
      }
      sub_1D4343304((uint64_t)v20, v13);
      aBlock[0] = v19;
      unint64_t v22 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1D4337294(v21 > 1, v22 + 1, 1);
        uint64_t v19 = aBlock[0];
      }
      ++v18;
      *(void *)(v19 + 16) = v22 + 1;
      sub_1D444E76C((uint64_t)v13, v19+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v22, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    }
    while (v16 != v18);
    swift_release();
    a3 = v32;
    a2 = v31[0];
  }
  else
  {
    swift_release();
    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  *(void *)(a2 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_itemGroups) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (MEMORY[0x1D9447840](a2 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_delegate))
  {
    sub_1D42B30A8(v19);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1D4469928();
  sub_1D42D7FAC(v23, (uint64_t)qword_1EBD83228);
  uint64_t v24 = sub_1D44698F8();
  os_log_type_t v25 = sub_1D446A038();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_1D4271000, v24, v25, "FMIPBeaconRefreshingController: beacon groups updated", v26, 2u);
    MEMORY[0x1D9447730](v26, -1, -1);
  }

  aBlock[4] = sub_1D42BDC6C;
  void aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C12CC8;
  unint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v28 = v33;
  sub_1D4469988();
  uint64_t v39 = MEMORY[0x1E4FBC860];
  sub_1D444A534((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  uint64_t v29 = v35;
  uint64_t v30 = v38;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v28, v29, v27);
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v30);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v36);
  uint64_t result = swift_release();
  if (a3) {
    return a3(result);
  }
  return result;
}

uint64_t sub_1D42B2C34(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = sub_1D446A278();
    if (v8) {
      goto LABEL_3;
    }
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_3:
  if (v8 <= 0)
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1D42D5DA0(&qword_1EA6CA350);
    uint64_t v9 = (void *)swift_allocObject();
    int64_t v10 = j__malloc_size(v9);
    uint64_t v11 = v10 - 32;
    if (v10 < 32) {
      uint64_t v11 = v10 - 25;
    }
    v9[2] = v8;
    v9[3] = (2 * (v11 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1D4386A74(&v14, v9 + 4, v8, a1, a2, a3, a4);
  uint64_t result = sub_1D42F9364();
  if (v12 == (void *)v8) {
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D42B2D58(uint64_t a1)
{
  return sub_1D42B2C34(a1, &qword_1EA6CA360, 0x1E4F97BF0, &qword_1EA6CA368);
}

uint64_t sub_1D42B2D74()
{
  return sub_1D42B2D80(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1D42B2D80(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result = MEMORY[0x1D9447840](a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_delegate);
  if (result)
  {
    sub_1D42B2DE0();
    uint64_t result = swift_unknownObjectRelease();
  }
  if (a2) {
    return a2(result);
  }
  return result;
}

uint64_t sub_1D42B2DE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D44699B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D4469958();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D4469928();
  sub_1D42D7FAC(v10, (uint64_t)qword_1EBD83228);
  uint64_t v11 = sub_1D44698F8();
  os_log_type_t v12 = sub_1D446A038();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1D4271000, v11, v12, "FMIPManager: refreshingControllerDidInitialize didInitialize", v13, 2u);
    MEMORY[0x1D9447730](v13, -1, -1);
  }

  sub_1D4469948();
  aBlock[4] = sub_1D42BF6D4;
  void aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C0C580;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v5, v9, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

uint64_t sub_1D42B30A8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D44699B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D4469958();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v35 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1D4469928();
  sub_1D42D7FAC(v11, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain_n();
  os_log_type_t v12 = sub_1D44698F8();
  os_log_type_t v13 = sub_1D446A038();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v34 = v4;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    aBlock[0] = v31;
    uint64_t v33 = v2;
    *(_DWORD *)uint64_t v14 = 136315138;
    v30[1] = v14 + 4;
    uint64_t v15 = type metadata accessor for FMIPItemGroup();
    uint64_t v32 = v9;
    uint64_t v16 = v7;
    uint64_t v17 = v8;
    uint64_t v18 = v5;
    uint64_t v19 = v15;
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = MEMORY[0x1D94460F0](v20, v19);
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v24 = v21;
    uint64_t v5 = v18;
    uint64_t v8 = v17;
    uint64_t v7 = v16;
    uint64_t v9 = v32;
    uint64_t v36 = sub_1D42CB9EC(v24, v23, aBlock);
    uint64_t v2 = v33;
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    uint64_t v4 = v34;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v12, v13, "FMIPManager: didReceive itemsGroup: %s", v14, 0xCu);
    uint64_t v25 = v31;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v25, -1, -1);
    MEMORY[0x1D9447730](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v26 = v35;
  sub_1D4469948();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a1;
  *(void *)(v27 + 24) = v2;
  aBlock[4] = (uint64_t)sub_1D42BF73C;
  void aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D42BD950;
  uint64_t aBlock[3] = (uint64_t)&unk_1F2C0B8B0;
  uint64_t v28 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v7, v26, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v26, v8);
  return swift_release();
}

uint64_t sub_1D42B34B0()
{
  return sub_1D42B34B8();
}

uint64_t sub_1D42B34B8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result + OBJC_IVAR____TtC8FMIPCore11FMIPManager_siriDelegate;
    swift_beginAccess();
    if (MEMORY[0x1D9447840](v2))
    {
      uint64_t v3 = *(void *)(v2 + 8);
      uint64_t ObjectType = swift_getObjectType();
      sub_1D42D5DA0((uint64_t *)&unk_1EA6CA520);
      sub_1D446A0A8();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 24))(v1, v5, ObjectType, v3);
      swift_bridgeObjectRelease();
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1D42B35E0(void *a1)
{
  return FMIPBeaconType.encode(to:)(a1);
}

uint64_t FMIPBeaconType.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6CB3C0);
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v45 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CB3C8);
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EA6CB3D0);
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v39 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D42D5DA0(&qword_1EA6CB3D8);
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v36 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D42D5DA0(&qword_1EA6CB3E0);
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v33 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D42D5DA0(&qword_1EA6CB3E8);
  uint64_t v31 = *(void *)(v13 - 8);
  uint64_t v32 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1D42D5DA0(&qword_1EA6CB3F0);
  uint64_t v30 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1D42D5DA0(&qword_1EA6CB3F8);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v48 = v19;
  uint64_t v49 = v20;
  MEMORY[0x1F4188790](v19);
  unint64_t v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *v1;
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42B44F8();
  sub_1D446A8E8();
  switch(v23)
  {
    case 1:
      char v51 = 1;
      sub_1D441CE60();
      uint64_t v26 = v48;
      sub_1D446A618();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
      goto LABEL_10;
    case 2:
      char v52 = 2;
      sub_1D441CE0C();
      uint64_t v27 = v33;
      uint64_t v26 = v48;
      sub_1D446A618();
      uint64_t v29 = v34;
      uint64_t v28 = v35;
      goto LABEL_9;
    case 3:
      char v53 = 3;
      sub_1D441CDB8();
      uint64_t v27 = v36;
      uint64_t v26 = v48;
      sub_1D446A618();
      uint64_t v29 = v37;
      uint64_t v28 = v38;
      goto LABEL_9;
    case 4:
      char v54 = 4;
      sub_1D441CD64();
      uint64_t v27 = v39;
      uint64_t v26 = v48;
      sub_1D446A618();
      uint64_t v29 = v40;
      uint64_t v28 = v41;
      goto LABEL_9;
    case 5:
      char v55 = 5;
      sub_1D441CD10();
      uint64_t v27 = v42;
      uint64_t v26 = v48;
      sub_1D446A618();
      uint64_t v29 = v43;
      uint64_t v28 = v44;
      goto LABEL_9;
    case 6:
      char v56 = 6;
      sub_1D441CCBC();
      uint64_t v27 = v45;
      uint64_t v26 = v48;
      sub_1D446A618();
      uint64_t v29 = v46;
      uint64_t v28 = v47;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
LABEL_10:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v22, v26);
      break;
    default:
      char v50 = 0;
      sub_1D42B44A4();
      uint64_t v24 = v48;
      sub_1D446A618();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v16);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v22, v24);
      break;
  }
  return result;
}

uint64_t FMIPBeaconType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  int v64 = a2;
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6CB440);
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v60 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CB448);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  uint64_t v56 = v6;
  MEMORY[0x1F4188790](v5);
  unint64_t v63 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D42D5DA0(&qword_1EA6CB450);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  uint64_t v54 = v9;
  MEMORY[0x1F4188790](v8);
  unint64_t v62 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D42D5DA0(&qword_1EA6CB458);
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v52 = v11;
  MEMORY[0x1F4188790](v11);
  BOOL v61 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D42D5DA0(&qword_1EA6CB460);
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  MEMORY[0x1F4188790](v13);
  BOOL v59 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D42D5DA0(&qword_1EA6CB468);
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v48 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1D42D5DA0(&qword_1EA6CB470);
  uint64_t v46 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1D42D5DA0(&qword_1EA6CB478);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  uint64_t v65 = a1;
  sub_1D42C26F4(a1, v25);
  sub_1D42B44F8();
  uint64_t v26 = v66;
  sub_1D446A8C8();
  if (!v26)
  {
    uint64_t v44 = v20;
    uint64_t v43 = v18;
    uint64_t v45 = v17;
    uint64_t v28 = v61;
    uint64_t v27 = v62;
    uint64_t v29 = v63;
    uint64_t v30 = v64;
    uint64_t v66 = v22;
    uint64_t v31 = v24;
    uint64_t v32 = sub_1D446A5F8();
    if (*(void *)(v32 + 16) == 1)
    {
      char v33 = *(unsigned char *)(v32 + 32);
      switch(v33)
      {
        case 1:
          char v68 = 1;
          sub_1D441CE60();
          uint64_t v27 = v45;
          sub_1D446A528();
          uint64_t v40 = v47;
          uint64_t v39 = v48;
          goto LABEL_13;
        case 2:
          char v69 = 2;
          sub_1D441CE0C();
          uint64_t v27 = v59;
          sub_1D446A528();
          uint64_t v40 = v49;
          uint64_t v39 = v50;
          goto LABEL_13;
        case 3:
          char v70 = 3;
          sub_1D441CDB8();
          uint64_t v27 = v28;
          sub_1D446A528();
          uint64_t v40 = v51;
          uint64_t v39 = v52;
          goto LABEL_13;
        case 4:
          char v71 = 4;
          sub_1D441CD64();
          sub_1D446A528();
          uint64_t v39 = v53;
          uint64_t v40 = v54;
          goto LABEL_13;
        case 5:
          char v72 = 5;
          sub_1D441CD10();
          sub_1D446A528();
          (*(void (**)(char *, uint64_t))(v56 + 8))(v29, v55);
          break;
        case 6:
          char v73 = 6;
          sub_1D441CCBC();
          uint64_t v27 = v60;
          sub_1D446A528();
          uint64_t v40 = v57;
          uint64_t v39 = v58;
LABEL_13:
          (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v39);
          break;
        default:
          char v67 = 0;
          sub_1D42B44A4();
          uint64_t v34 = v44;
          sub_1D446A528();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v43);
          break;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v31, v21);
      *uint64_t v30 = v33;
    }
    else
    {
      uint64_t v35 = sub_1D446A3D8();
      swift_allocError();
      uint64_t v36 = v21;
      uint64_t v38 = v37;
      sub_1D42D5DA0(&qword_1EA6CB480);
      *uint64_t v38 = &type metadata for FMIPBeaconType;
      sub_1D446A538();
      sub_1D446A3C8();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v35 - 8) + 104))(v38, *MEMORY[0x1E4FBBA70], v35);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v24, v36);
    }
  }
  return sub_1D42BEC64((uint64_t)v65);
}

unint64_t sub_1D42B44A4()
{
  unint64_t result = qword_1EA6CB438;
  if (!qword_1EA6CB438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB438);
  }
  return result;
}

unint64_t sub_1D42B44F8()
{
  unint64_t result = qword_1EA6CB400;
  if (!qword_1EA6CB400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB400);
  }
  return result;
}

uint64_t sub_1D42B454C()
{
  return sub_1D446A888();
}

uint64_t FMIPDeviceImageCacheRequest.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  sub_1D446A848();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
  }
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  sub_1D42B4708();
  return sub_1D446A868();
}

uint64_t sub_1D42B4708()
{
  sub_1D4469BC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42B4844@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v112 = a3;
  double v128 = a2;
  uint64_t v4 = type metadata accessor for FMIPDevice();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v110 = (uint64_t)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  id v114 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v117 = (char *)&v106 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v118 = (char *)&v106 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v106 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v106 - v17;
  uint64_t v19 = sub_1D4469688();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  double v115 = (char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v108 = (char *)&v106 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v109 = (char *)&v106 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  id v119 = (char *)&v106 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&v106 - v29;
  uint64_t v31 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v31 - 8);
  char v33 = (char *)&v106 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42A3A74(a1 + *(int *)(v5 + 136), (uint64_t)v33, &qword_1EBD7E670);
  uint64_t v34 = type metadata accessor for FMIPItemGroup();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v33, 1, v34) == 1)
  {
    sub_1D4276C3C((uint64_t)v33, &qword_1EBD7E670);
    if (!*(void *)(a1 + 24))
    {
LABEL_5:
      unint64_t v35 = MEMORY[0x1E4FBC860];
      goto LABEL_8;
    }
    sub_1D4469628();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    {
      sub_1D4276C3C((uint64_t)v18, (uint64_t *)&unk_1EBD7E930);
      goto LABEL_5;
    }
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    uint64_t v40 = v30;
    v39(v30, v18, v19);
    sub_1D42D5DA0(&qword_1EA6CA590);
    unint64_t v41 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    unint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1D446E050;
    v39((char *)(v35 + v41), v40, v19);
  }
  else
  {
    uint64_t v36 = *((void *)v33 + 5);
    swift_bridgeObjectRetain();
    sub_1D42D20B8((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v37 = v113;
    uint64_t v38 = sub_1D4373EB0(v36);
    swift_bridgeObjectRelease();
    unint64_t v35 = sub_1D438C8B0(v38);
    uint64_t v113 = v37;
    swift_bridgeObjectRelease();
  }
LABEL_8:
  uint64_t v42 = v119;
  uint64_t v43 = v112;
  uint64_t v44 = *(void *)(v35 + 16);
  if (v44)
  {
    uint64_t v107 = a1;
    uint64_t v46 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 16);
    uint64_t v45 = v20 + 16;
    unint64_t v47 = v35 + ((*(unsigned __int8 *)(v45 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 64));
    uint64_t v48 = *(void *)(v45 + 56);
    uint64_t v127 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 40);
    unint64_t v124 = (unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 32);
    uint64_t v125 = v46;
    uint64_t v123 = (void (**)(char *, char *, uint64_t))(v45 + 16);
    uint64_t v121 = v48;
    uint64_t v122 = (void (**)(uint64_t, uint64_t))(v45 - 8);
    swift_retain();
    unint64_t v116 = v35;
    swift_bridgeObjectRetain();
    uint64_t v49 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v111 = v47;
    uint64_t v120 = v45;
    while (1)
    {
      v125(v16, v47, v19);
      unint64_t v126 = *v127;
      v126(v16, 0, 1, v19);
      uint64_t v50 = *v124;
      if ((*v124)(v16, 1, v19) == 1) {
        break;
      }
      (*v123)(v42, v16, v19);
      uint64_t v51 = (uint64_t)v42;
      uint64_t v52 = v128[32];
      if (*(void *)(v52 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v53 = sub_1D43AEE98(v51);
        if (v54)
        {
          char v55 = *(unsigned char *)(*(void *)(v52 + 56) + v53);
          swift_bridgeObjectRelease();
          (*v122)(v51, v19);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v49 = sub_1D43B0524(0, *((void *)v49 + 2) + 1, 1, v49);
          }
          unint64_t v57 = *((void *)v49 + 2);
          unint64_t v56 = *((void *)v49 + 3);
          if (v57 >= v56 >> 1) {
            uint64_t v49 = sub_1D43B0524((char *)(v56 > 1), v57 + 1, 1, v49);
          }
          *((void *)v49 + 2) = v57 + 1;
          v49[v57 + 32] = v55;
          uint64_t v42 = v119;
          goto LABEL_12;
        }
        swift_bridgeObjectRelease();
      }
      (*v122)(v51, v19);
      uint64_t v42 = (char *)v51;
LABEL_12:
      v47 += v121;
      if (!--v44)
      {
        v126(v16, 1, 1, v19);
        break;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    BOOL v59 = v118;
    uint64_t v60 = (uint64_t)v109;
    if (*((void *)v49 + 2)) {
      LODWORD(v109) = v49[32];
    }
    else {
      LODWORD(v109) = 0;
    }
    swift_bridgeObjectRelease();
    uint64_t v61 = *(void *)(v116 + 16);
    if (v61)
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
      unint64_t v62 = v111;
      unint64_t v63 = v115;
      while (1)
      {
        v125(v59, v62, v19);
        v126(v59, 0, 1, v19);
        if (v50(v59, 1, v19) == 1) {
          break;
        }
        (*v123)((char *)v60, v59, v19);
        uint64_t v64 = v128[33];
        if (!*(void *)(v64 + 16)) {
          goto LABEL_38;
        }
        swift_bridgeObjectRetain();
        unint64_t v65 = sub_1D43AEE98(v60);
        if ((v66 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_38:
          (*v122)(v60, v19);
LABEL_39:
          swift_release();
          LODWORD(v118) = 0;
          char v68 = v117;
          goto LABEL_40;
        }
        char v67 = *(unsigned char *)(*(void *)(v64 + 56) + v65);
        swift_bridgeObjectRelease();
        (*v122)(v60, v19);
        if ((v67 & 1) == 0) {
          goto LABEL_39;
        }
        v62 += v121;
        --v61;
        BOOL v59 = v118;
        if (!v61) {
          goto LABEL_35;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
      unint64_t v63 = v115;
LABEL_35:
      v126(v59, 1, 1, v19);
    }
    char v68 = v117;
    swift_release();
    LODWORD(v118) = 1;
LABEL_40:
    unint64_t v69 = v116;
    swift_bridgeObjectRelease_n();
    uint64_t v70 = *(void *)(v69 + 16);
    if (v70)
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
      unint64_t v71 = v111;
      uint64_t v72 = (uint64_t)v108;
      while (1)
      {
        v125(v68, v71, v19);
        v126(v68, 0, 1, v19);
        if (v50(v68, 1, v19) == 1) {
          break;
        }
        (*v123)((char *)v72, v68, v19);
        uint64_t v73 = v128[34];
        if (!*(void *)(v73 + 16)) {
          goto LABEL_52;
        }
        swift_bridgeObjectRetain();
        unint64_t v74 = sub_1D43AEE98(v72);
        if ((v75 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_52:
          (*v122)(v72, v19);
LABEL_53:
          swift_release();
          LODWORD(v119) = 0;
          uint64_t v77 = v114;
          goto LABEL_54;
        }
        char v76 = *(unsigned char *)(*(void *)(v73 + 56) + v74);
        swift_bridgeObjectRelease();
        (*v122)(v72, v19);
        if ((v76 & 1) == 0) {
          goto LABEL_53;
        }
        v71 += v121;
        --v70;
        char v68 = v117;
        if (!v70) {
          goto LABEL_49;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
LABEL_49:
      v126(v68, 1, 1, v19);
    }
    uint64_t v77 = v114;
    swift_release();
    LODWORD(v119) = 1;
LABEL_54:
    unint64_t v78 = v116;
    swift_bridgeObjectRelease_n();
    uint64_t v79 = *(void *)(v78 + 16);
    if (v79)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v80 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v81 = v111;
      while (1)
      {
        unint64_t v84 = v81;
        ((void (*)(char *))v125)(v77);
        v126(v77, 0, 1, v19);
        if (v50(v77, 1, v19) == 1) {
          goto LABEL_69;
        }
        (*v123)(v63, v77, v19);
        uint64_t v85 = (uint64_t)v63;
        uint64_t v86 = v128[31];
        if (*(void *)(v86 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v87 = sub_1D43AEE98(v85);
          if (v88)
          {
            uint64_t v89 = *(void *)(*(void *)(v86 + 56) + 8 * v87);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            (*v122)(v85, v19);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v80 = sub_1D43B03F4(0, v80[2] + 1, 1, v80);
            }
            unint64_t v82 = v84;
            unint64_t v91 = v80[2];
            unint64_t v90 = v80[3];
            if (v91 >= v90 >> 1)
            {
              uint64_t v92 = sub_1D43B03F4((void *)(v90 > 1), v91 + 1, 1, v80);
              unint64_t v82 = v84;
              uint64_t v80 = v92;
            }
            uint64_t v83 = v121;
            v80[2] = v91 + 1;
            v80[v91 + 4] = v89;
            uint64_t v77 = v114;
            unint64_t v63 = v115;
            goto LABEL_58;
          }
          swift_bridgeObjectRelease();
        }
        (*v122)(v85, v19);
        unint64_t v63 = (char *)v85;
        unint64_t v82 = v84;
        uint64_t v83 = v121;
LABEL_58:
        unint64_t v81 = v82 + v83;
        if (!--v79) {
          goto LABEL_68;
        }
      }
    }
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v80 = (void *)MEMORY[0x1E4FBC860];
LABEL_68:
    v126(v77, 1, 1, v19);
LABEL_69:
    uint64_t v93 = v112;
    uint64_t v94 = v107;
    uint64_t v95 = MEMORY[0x1E4FBC860];
    char v96 = (char)v109;
    int v97 = (int)v118;
    swift_release();
    swift_bridgeObjectRelease_n();
    uint64_t v129 = v95;
    uint64_t v98 = v80[2];
    if (v98)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v98; ++i)
      {
        uint64_t v100 = swift_bridgeObjectRetain();
        sub_1D43AEBEC(v100);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v101 = sub_1D438CB70(v129);
    swift_bridgeObjectRelease();
    uint64_t v102 = sub_1D43521C0(v101);
    swift_bridgeObjectRelease();
    uint64_t v103 = swift_bridgeObjectRetain();
    uint64_t v104 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D43997FC(v103, v102);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v105 = v110;
    sub_1D42D22A0(v94, v110, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    LOBYTE(v129) = v96;
    return FMIPDevice.init(device:separationMonitoringState:separationSupported:canBeLeashedByHost:safeLocations:)(v105, (unsigned __int8 *)&v129, v97, (int)v119, v104, v93);
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_1D42D22A0(a1, v43, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  }
}

uint64_t sub_1D42B55C4(unint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v87 = (char *)v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6CA1F8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v86 = (char *)v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v85 = (char *)v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v103 = (uint64_t)v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v83 - v11;
  uint64_t v13 = sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4A0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v102 = (void *)((char *)v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v100 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v15 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  uint64_t v90 = (uint64_t)v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for FMIPDevice();
  uint64_t v93 = *(void *)(v99 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v99);
  uint64_t v84 = (uint64_t)v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v88 = (uint64_t)v83 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)v83 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)v83 - v24;
  uint64_t v26 = sub_1D42D5DA0(&qword_1EBD7D920);
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v92 = (char *)v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1D42D5DA0(&qword_1EBD7D928);
  uint64_t v30 = MEMORY[0x1F4188790](v29 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)v83 - v31;
  unint64_t v33 = *(void *)(a1 + 16);
  uint64_t v107 = OBJC_IVAR____TtC8FMIPCore15FMIPDataManager_geocodingCache;
  uint64_t v110 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v27 + 48);
  unint64_t v111 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
  uint64_t v34 = v91;
  int v97 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v98 = (long long *)(v23 + 280);
  char v96 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  uint64_t v36 = v35;
  uint64_t result = swift_bridgeObjectRetain_n();
  unint64_t v38 = 0;
  uint64_t v95 = 0;
  v83[6] = "edLocation";
  v83[7] = "rk";
  v83[4] = "lastDisconnected";
  v83[5] = "lastConnectionMaintenance";
  void v83[2] = "lter";
  v83[3] = "xied";
  v83[1] = "intentLocationUpdate";
  unint64_t v94 = a1;
  unint64_t v89 = a1;
  uint64_t v108 = v12;
  uint64_t v109 = v26;
  unint64_t v39 = v33;
  uint64_t v40 = (unint64_t *)v32;
  uint64_t v41 = (uint64_t)v23;
  uint64_t v42 = (uint64_t)v102;
  uint64_t v113 = (void *)v36;
  unint64_t v105 = v39;
  uint64_t v101 = v25;
  while (1)
  {
    if (v38 == v39)
    {
      uint64_t v43 = 1;
      unint64_t v112 = v39;
      goto LABEL_8;
    }
    if (v38 >= v39) {
      break;
    }
    uint64_t v44 = v34;
    unint64_t v45 = v38 + 1;
    unint64_t v46 = v38;
    uint64_t v47 = (uint64_t)&v92[*(int *)(v26 + 48)];
    sub_1D42D22A0(v94+ ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80))+ *(void *)(v93 + 72) * v38, v47, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v48 = (uint64_t)v113 + *(int *)(v26 + 48);
    *uint64_t v113 = v46;
    uint64_t v49 = v47;
    uint64_t v36 = (uint64_t)v113;
    sub_1D42BB578(v49, v48, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v43 = 0;
    unint64_t v112 = v45;
    uint64_t v34 = v44;
    unint64_t v39 = v105;
LABEL_8:
    (*v111)(v36, v43, 1, v26);
    sub_1D4276C98(v36, (uint64_t)v40, &qword_1EBD7D928);
    if ((*v110)(v40, 1, v26) == 1)
    {
      swift_bridgeObjectRelease();
      return v89;
    }
    unint64_t v106 = *v40;
    sub_1D42BB578((uint64_t)v40 + *(int *)(v26 + 48), (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (*(void *)(v34 + v107))
    {
      uint64_t v50 = v42;
      unint64_t v51 = v39;
      uint64_t v52 = *(void *)(v34 + v107);
      sub_1D42D22A0((uint64_t)v25, v41, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      *(void *)&long long v104 = v52;
      uint64_t v53 = (uint64_t)v108;
      sub_1D42A3A74(v52 + qword_1EA6E49F8, (uint64_t)v108, (uint64_t *)&unk_1EBD7E560);
      uint64_t v54 = *(void *)(v41 + 272);
      long long v121 = *(_OWORD *)(v41 + 256);
      uint64_t v122 = v54;
      uint64_t v55 = *(void *)(v41 + 296);
      long long v119 = *v98;
      uint64_t v120 = v55;
      uint64_t v56 = (*(void *)(v41 + 216) >> 5) & 1;
      uint64_t v57 = v41 + *(int *)(v99 + 128);
      LOBYTE(v117) = *(unsigned char *)(v41 + 80);
      sub_1D42D248C((uint64_t *)&v121, (uint64_t *)&v119, v56, v57, (unsigned __int8 *)&v117, (double *)v123);
      uint64_t v58 = *((void *)&v123[0] + 1);
      if (*((void *)&v123[0] + 1))
      {
        uint64_t v59 = BYTE3(v123[0]);
        uint64_t v61 = *(void *)v41;
        uint64_t v60 = *(void *)(v41 + 8);
        sub_1D42A3A74(v53, v103, (uint64_t *)&unk_1EBD7E560);
        char v62 = 1;
        switch(v59)
        {
          case 6:
            break;
          default:
            char v62 = sub_1D446A758();
            break;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1D4276C3C((uint64_t)v108, (uint64_t *)&unk_1EBD7E560);
        sub_1D42D20B8(v41, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v42 = (uint64_t)v102;
        uint64_t v65 = v103;
        *uint64_t v102 = v61;
        *(void *)(v42 + 8) = v60;
        uint64_t v66 = v100;
        *(unsigned char *)(v42 + *(int *)(v100 + 32)) = 0;
        *(unsigned char *)(v42 + *(int *)(v66 + 28)) = v62 & 1;
        *(void *)(v42 + 16) = v58;
        uint64_t v64 = v66;
        sub_1D4276C98(v65, v42 + *(int *)(v66 + 24), (uint64_t *)&unk_1EBD7E560);
        uint64_t v63 = 0;
        uint64_t v34 = v91;
        unint64_t v39 = v105;
      }
      else
      {
        sub_1D4276C3C(v53, (uint64_t *)&unk_1EBD7E560);
        sub_1D42D20B8(v41, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v63 = 1;
        uint64_t v64 = v100;
        unint64_t v39 = v51;
        uint64_t v42 = v50;
      }
      (*v97)(v42, v63, 1, v64);
      if ((*v96)(v42, 1, v64) == 1)
      {
        sub_1D4276C3C(v42, (uint64_t *)&unk_1EA6CA4A0);
        sub_1D42FB494(v123);
        sub_1D4276C98((uint64_t)v123, (uint64_t)v124, &qword_1EBD7CC10);
      }
      else
      {
        uint64_t v67 = v90;
        uint64_t v68 = sub_1D42BB578(v42, v90, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        MEMORY[0x1F4188790](v68);
        sub_1D42D5DA0(&qword_1EBD7CC10);
        uint64_t v69 = v34;
        uint64_t v70 = v95;
        sub_1D446A0A8();
        uint64_t v95 = v70;
        uint64_t v34 = v69;
        uint64_t v42 = (uint64_t)v102;
        sub_1D42D20B8(v67, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      }
      uint64_t v25 = v101;
      uint64_t v26 = v109;
      uint64_t v36 = (uint64_t)v113;
      sub_1D4276C98((uint64_t)v124, (uint64_t)&v121, &qword_1EBD7CC10);
      sub_1D4276C98((uint64_t)&v121, (uint64_t)v123, &qword_1EBD7CC10);
      if (sub_1D42FE02C((uint64_t)v123) != 1)
      {
        uint64_t v71 = (uint64_t)v25;
        uint64_t v72 = v25;
        uint64_t v73 = v84;
        sub_1D42D22A0(v71, v84, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        unint64_t v74 = *((void *)v72 + 31);
        sub_1D4276C98((uint64_t)&v121, (uint64_t)&v119, &qword_1EBD7CC10);
        uint64_t v117 = *((void *)v72 + 35);
        long long v104 = *((_OWORD *)v72 + 18);
        long long v118 = v104;
        memset(v116, 0, sizeof(v116));
        uint64_t v75 = type metadata accessor for FMIPItemGroup();
        memset(v115, 0, sizeof(v115));
        uint64_t v76 = (uint64_t)v85;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v85, 1, 1, v75);
        unsigned __int8 v114 = 7;
        uint64_t v77 = type metadata accessor for FMIPDeviceConnectedState(0);
        uint64_t v78 = (uint64_t)v86;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v86, 1, 1, v77);
        uint64_t v79 = type metadata accessor for FMIPDeviceLostModeMetadata();
        uint64_t v80 = (uint64_t)v87;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v87, 1, 1, v79);
        id v81 = (id)v104;
        swift_bridgeObjectRetain();
        FMIPDevice.init(device:historicalLocations:address:crowdSourcedLocation:location:shiftedLocation:crowdSourcedLocating:itemGroup:deviceWithYou:findingCapable:beaconType:deviceConnectedState:lostModeMetadata:)(v73, v74, (char *)&v119, &v117, v116, (uint64_t)v115, 2, v76, v88, 2u, 2, &v114, v78, v80);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t result = v89;
        }
        else {
          uint64_t result = sub_1D439948C(v89);
        }
        uint64_t v25 = v101;
        uint64_t v26 = v109;
        uint64_t v36 = (uint64_t)v113;
        uint64_t v34 = v91;
        if ((v106 & 0x8000000000000000) != 0) {
          goto LABEL_27;
        }
        if (v106 >= *(void *)(result + 16)) {
          goto LABEL_28;
        }
        unint64_t v82 = (*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
        unint64_t v89 = result;
        sub_1D439ED88(v88, result + v82 + *(void *)(v93 + 72) * v106, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      }
    }
    else
    {
      uint64_t v26 = v109;
    }
    uint64_t result = sub_1D42D20B8((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    unint64_t v38 = v112;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for FMReverseGeocodingRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D432B72C);
}

uint64_t storeEnumTagSinglePayload for FMReverseGeocodingRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D432B7E0);
}

uint64_t sub_1D42B63C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469868();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 44);
  uint64_t v6 = sub_1D4469898();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_1D42B6470(void *a1)
{
  return FMIPFeatures.encode(to:)(a1);
}

uint64_t FMIPFeatures.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7D9E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42D7FE4();
  sub_1D446A8E8();
  char v9 = 0;
  sub_1D446A668();
  if (!v1)
  {
    char v9 = 1;
    sub_1D446A668();
    char v9 = 2;
    sub_1D446A668();
    char v9 = 3;
    sub_1D446A668();
    char v9 = 4;
    sub_1D446A668();
    char v9 = 5;
    sub_1D446A668();
    char v9 = 6;
    sub_1D446A668();
    char v9 = 7;
    sub_1D446A668();
    char v9 = 8;
    sub_1D446A668();
    char v9 = 9;
    sub_1D446A668();
    char v9 = 10;
    sub_1D446A668();
    char v9 = 11;
    sub_1D446A668();
    char v9 = 12;
    sub_1D446A668();
    char v9 = 13;
    sub_1D446A668();
    char v9 = 14;
    sub_1D446A668();
    char v9 = 15;
    sub_1D446A668();
    char v9 = 16;
    sub_1D446A668();
    char v9 = 17;
    sub_1D446A668();
    char v9 = 18;
    sub_1D446A668();
    char v9 = 19;
    sub_1D446A668();
    char v9 = 20;
    sub_1D446A668();
    char v9 = 21;
    sub_1D446A668();
    char v9 = 22;
    sub_1D446A668();
    char v9 = 23;
    sub_1D446A668();
    char v9 = 24;
    sub_1D446A668();
    char v9 = 25;
    sub_1D446A668();
    char v9 = 26;
    sub_1D446A668();
    char v9 = 27;
    sub_1D446A668();
    char v9 = 28;
    sub_1D446A668();
    char v9 = 29;
    sub_1D446A668();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1D42B6AD8(unint64_t a1)
{
  uint64_t v3 = sub_1D4469618();
  id v4 = *(id *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint8_t *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D4469928();
  uint64_t v8 = sub_1D42D7FAC(v7, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain_n();
  char v9 = sub_1D44698F8();
  os_log_type_t v10 = sub_1D446A038();
  unint64_t v11 = a1 >> 62;
  if (!os_log_type_enabled(v9, v10))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  v58[1] = v8;
  uint64_t v59 = v6;
  uint64_t v6 = (uint8_t *)swift_slowAlloc();
  uint64_t v1 = swift_slowAlloc();
  v62[0] = v1;
  *(_DWORD *)uint64_t v6 = 136315138;
  if (!v11)
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    id v60 = v4;
    if (v12) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t v13 = v3;
    swift_bridgeObjectRelease();
    uint64_t v17 = 0;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1D446A498();
  id v60 = v4;
  if (!v12) {
    goto LABEL_12;
  }
LABEL_6:
  if ((a1 & 0xC000000000000001) != 0) {
    goto LABEL_32;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v13 = v3;
    for (id i = *(id *)(a1 + 32); ; id i = (id)MEMORY[0x1D9446710](0, a1))
    {
      uint64_t v15 = i;
      swift_bridgeObjectRelease();
      id v16 = objc_msgSend(v15, sel_debugDescription);

      uint64_t v17 = sub_1D4469B38();
      uint64_t v12 = v18;

LABEL_13:
      uint64_t v63 = v17;
      uint64_t v64 = (void *)v12;
      sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
      uint64_t v19 = sub_1D4469B68();
      uint64_t v63 = sub_1D42CB9EC(v19, v20, v62);
      sub_1D446A188();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v9, v10, "FMIPLocationController: location manager didUpdateLocations: %s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v1, -1, -1);
      MEMORY[0x1D9447730](v6, -1, -1);

      uint64_t v3 = v13;
      uint64_t v6 = v59;
      id v4 = v60;
LABEL_14:
      if (v11)
      {
        swift_bridgeObjectRetain();
        if (!sub_1D446A498())
        {
LABEL_29:
          swift_bridgeObjectRelease();
          return;
        }
      }
      else
      {
        uint64_t v21 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v21) {
          goto LABEL_29;
        }
      }
      if ((a1 & 0xC000000000000001) != 0) {
        break;
      }
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v22 = *(id *)(a1 + 32);
        goto LABEL_19;
      }
      __break(1u);
LABEL_32:
      uint64_t v13 = v3;
    }
    id v22 = (id)MEMORY[0x1D9446710](0, a1);
LABEL_19:
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();
    objc_msgSend(v23, sel_coordinate);
    double v25 = v24;
    objc_msgSend(v23, sel_coordinate);
    double v27 = v26;
    uint64_t v28 = sub_1D42B79A4();
    if (v28
      && (uint64_t v29 = v28,
          unsigned __int8 v30 = objc_msgSend(v28, sel_containsCoordinate_, v25, v27),
          v29,
          (v30 & 1) != 0))
    {
      uint64_t v31 = sub_1D44698F8();
      os_log_type_t v32 = sub_1D446A038();
      if (os_log_type_enabled(v31, v32))
      {
        unint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v33 = 0;
        _os_log_impl(&dword_1D4271000, v31, v32, "FMIPLocationController: not updating location because it's in a denylist region", v33, 2u);
        MEMORY[0x1D9447730](v33, -1, -1);
      }
      else
      {
      }
    }
    else
    {
      LOBYTE(v62[0]) = 6;
      id v34 = v23;
      id v35 = objc_msgSend(v34, sel_timestamp);
      sub_1D44695D8();

      sub_1D44695A8();
      double v37 = v36;
      (*((void (**)(uint8_t *, uint64_t))v4 + 1))(v6, v3);
      id v38 = objc_msgSend(v34, sel_floor);
      if (v38)
      {
        unint64_t v39 = v38;
        id v40 = objc_msgSend(v38, sel_level);

        double v41 = (double)(uint64_t)v40;
      }
      else
      {
        double v41 = -1.0;
      }
      sub_1D42B7188(v34, (char *)v62, v37 < -3600.0, 0, 1, (uint64_t)&v63, v41);
      char v42 = v63;
      char v43 = BYTE1(v63);
      char v44 = BYTE2(v63);
      char v45 = BYTE3(v63);
      unint64_t v46 = v64;
      uint64_t v47 = v65;
      uint64_t v48 = v61;
      sub_1D42D5DA0(&qword_1EA6CB1C0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D446E050;
      strcpy((char *)(inited + 32), "localLocation");
      *(_WORD *)(inited + 46) = -4864;
      *(unsigned char *)(inited + 48) = v42;
      *(unsigned char *)(inited + 49) = v43;
      *(unsigned char *)(inited + 50) = v44;
      *(unsigned char *)(inited + 51) = v45;
      *(void *)(inited + 56) = v46;
      *(void *)(inited + 64) = v47;
      id v50 = v46;
      unint64_t v51 = sub_1D42B7838(inited);
      id v60 = v34;
      uint64_t v52 = v51;
      uint64_t v53 = swift_allocObject();
      *(unsigned char *)(v53 + 16) = v42;
      *(unsigned char *)(v53 + 17) = v43;
      *(unsigned char *)(v53 + 18) = v44;
      *(unsigned char *)(v53 + 19) = v45;
      *(void *)(v53 + 24) = v50;
      *(void *)(v53 + 32) = v47;
      *(void *)(v53 + 40) = v48;
      id v54 = v50;
      id v55 = v48;
      uint64_t v56 = sub_1D4373634(v52);
      uint64_t v57 = (void *)swift_allocObject();
      v57[2] = v52;
      v57[3] = sub_1D42C28B8;
      uint64_t v57[4] = v53;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1D42DD324(v56, (uint64_t)sub_1D42C12EC, (uint64_t)v57);

      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1D42B7188(void *a1@<X0>, char *a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>, double a7@<D0>)
{
  char v10 = *a2;
  char v11 = a3 & 1;
  char v29 = a3;
  char v12 = a4 & 1;
  char v28 = a4;
  char v13 = a5 & 1;
  char v27 = a5;
  if (qword_1EA6C8FC0 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_1EA6CAA80;
  if (qword_1EA6CAA80)
  {
    id v15 = (id)qword_1EA6CAA80;
  }
  else
  {
    id v15 = a1;
    uint64_t v14 = 0;
  }
  LOBYTE(v26[0]) = v11;
  BYTE1(v26[0]) = v12;
  BYTE2(v26[0]) = v13;
  BYTE3(v26[0]) = v10;
  id v25 = v15;
  v26[1] = (uint64_t)v15;
  *(double *)&void v26[2] = a7;
  id v16 = v14;
  uint64_t v17 = FMIPLocation.debugDescription.getter();
  unint64_t v19 = v18;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1D4469928();
  sub_1D42D7FAC(v20, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1D44698F8();
  os_log_type_t v22 = sub_1D4469FF8();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)uint64_t v23 = 136380675;
    swift_bridgeObjectRetain();
    sub_1D42CB9EC(v17, v19, v26);
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D4271000, v21, v22, "FMIPLocation: initialized %{private}s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v24, -1, -1);
    MEMORY[0x1D9447730](v23, -1, -1);

    char v11 = v29;
    char v12 = v28;
    char v13 = v27;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(unsigned char *)a6 = v11;
  *(unsigned char *)(a6 + 1) = v12;
  *(unsigned char *)(a6 + 2) = v13;
  *(unsigned char *)(a6 + 3) = v10;
  *(void *)(a6 + 8) = v25;
  *(double *)(a6 + 16) = a7;
}

uint64_t FMIPLocation.debugDescription.getter()
{
  uint64_t v1 = sub_1D4469618();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790]();
  id v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v3) = v0[1];
  v12[0] = *v0;
  v12[1] = v3;
  int v13 = v0[3];
  uint64_t v5 = (void *)*((void *)v0 + 1);
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_1D4469C08();
  sub_1D4469C08();
  sub_1D4469C08();
  objc_msgSend(v5, sel_coordinate);
  sub_1D4469EA8();
  sub_1D4469C08();
  uint64_t v7 = v15;
  unint64_t v6 = v16;
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_1D446A378();
  sub_1D4469C08();
  objc_msgSend(v5, sel_coordinate);
  sub_1D4469EA8();
  sub_1D4469C08();
  objc_msgSend(v5, sel_horizontalAccuracy);
  sub_1D4469EA8();
  sub_1D4469C08();
  id v8 = objc_msgSend(v5, sel_timestamp);
  sub_1D44695D8();

  sub_1D42B77E0();
  sub_1D446A6D8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1D4469C08();
  uint64_t v15 = v7;
  unint64_t v16 = v6;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v15;
  unint64_t v9 = v16;
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_1D446A378();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  char v14 = v13;
  sub_1D446A458();
  sub_1D4469C08();
  uint64_t v15 = v10;
  unint64_t v16 = v9;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_1D42B77E0()
{
  unint64_t result = qword_1EA6CAA88;
  if (!qword_1EA6CAA88)
  {
    sub_1D4469618();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAA88);
  }
  return result;
}

unint64_t sub_1D42B7838(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1D42D5DA0(&qword_1EA6CA340);
  uint64_t v2 = sub_1D446A4C8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v22 = v2 + 64;
  swift_retain();
  uint64_t v5 = (void *)(a1 + 64);
  while (1)
  {
    uint64_t v6 = *(v5 - 4);
    uint64_t v7 = *(v5 - 3);
    char v8 = *((unsigned char *)v5 - 16);
    char v9 = *((unsigned char *)v5 - 15);
    char v10 = *((unsigned char *)v5 - 14);
    char v11 = *((unsigned char *)v5 - 13);
    char v12 = (void *)*(v5 - 1);
    uint64_t v13 = *v5;
    swift_bridgeObjectRetain();
    id v14 = v12;
    unint64_t result = sub_1D42C4FCC(v6, v7);
    if (v16) {
      break;
    }
    *(void *)(v22 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v17 = v6;
    v17[1] = v7;
    uint64_t v18 = v3[7] + 24 * result;
    *(unsigned char *)uint64_t v18 = v8;
    *(unsigned char *)(v18 + 1) = v9;
    *(unsigned char *)(v18 + 2) = v10;
    *(unsigned char *)(v18 + 3) = v11;
    *(void *)(v18 + 8) = v14;
    *(void *)(v18 + 16) = v13;
    uint64_t v19 = v3[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v3[2] = v21;
    v5 += 5;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void *sub_1D42B79A4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F64700]), sel_init);
  if (v0)
  {
    uint64_t v1 = v0;
    for (uint64_t i = 0; i != 576; i += 16)
    {
      id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F64638]), sel_initWithLatitude_longitude_, *(double *)((char *)&unk_1F2C03148 + i + 40), *(double *)((char *)&unk_1F2C03148 + i + 32));
      objc_msgSend(v1, sel_addVertex_, v3);
    }
  }
  else
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1D4469928();
    sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
    uint64_t v5 = sub_1D44698F8();
    os_log_type_t v6 = sub_1D446A018();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1D4271000, v5, v6, "Unable to instantiate GEOMapRegion for denylist region.", v7, 2u);
      MEMORY[0x1D9447730](v7, -1, -1);
    }

    return 0;
  }
  return v1;
}

uint64_t type metadata accessor for FMLocationShiftingRequest()
{
  return self;
}

uint64_t sub_1D42B7B40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPPlaySoundMetadata.init(from:)(a1, a2);
}

uint64_t FMIPPlaySoundMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v92 = a2;
  uint64_t v3 = sub_1D4469618();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v93 = v3;
  uint64_t v94 = v4;
  MEMORY[0x1F4188790](v3);
  os_log_type_t v6 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EBD7D9C0);
  uint64_t v95 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPPlaySoundMetadata();
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42B84C4();
  uint64_t v13 = v96;
  sub_1D446A8C8();
  if (v13)
  {
    uint64_t v16 = (uint64_t)a1;
    return sub_1D42BEC64(v16);
  }
  unint64_t v89 = v12;
  unint64_t v90 = v10;
  uint64_t v91 = v6;
  char v96 = a1;
  uint64_t v14 = v94;
  LOBYTE(v97[0]) = 0;
  uint64_t v15 = sub_1D446A5E8();
  LOBYTE(v97[0]) = 1;
  uint64_t v87 = sub_1D446A598();
  unint64_t v88 = v17;
  id v18 = objc_msgSend(self, sel_fm_dateFromEpoch_, v15);
  uint64_t v19 = v91;
  sub_1D44695D8();

  LOBYTE(v97[0]) = 2;
  uint64_t v80 = sub_1D446A598();
  unint64_t v86 = (unint64_t)v20;
  LOBYTE(v97[0]) = 3;
  uint64_t v21 = v14;
  uint64_t v84 = sub_1D446A598();
  unint64_t v85 = v22;
  uint64_t v23 = v89;
  LOBYTE(v97[0]) = 4;
  uint64_t v82 = sub_1D446A598();
  unint64_t v83 = v24;
  LOBYTE(v97[0]) = 5;
  uint64_t result = sub_1D446A598();
  unint64_t v27 = v26;
  unint64_t v28 = HIBYTE(v88) & 0xF;
  uint64_t v29 = v87 & 0xFFFFFFFFFFFFLL;
  if ((v88 & 0x2000000000000000) != 0) {
    unint64_t v30 = HIBYTE(v88) & 0xF;
  }
  else {
    unint64_t v30 = v87 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v79 = result;
  unint64_t v81 = v27;
  if (!v30)
  {
    swift_bridgeObjectRelease();
    goto LABEL_59;
  }
  if ((v88 & 0x1000000000000000) != 0)
  {
    Swift::Int v32 = (Swift::Int)sub_1D430B5A4(v87, v88, 10);
    char v34 = v77;
    goto LABEL_48;
  }
  if ((v88 & 0x2000000000000000) == 0)
  {
    if ((v87 & 0x1000000000000000) != 0) {
      uint64_t v31 = (unsigned __int8 *)((v88 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v31 = (unsigned __int8 *)sub_1D446A3E8();
    }
    Swift::Int v32 = (Swift::Int)sub_1D430B58C(v31, v29, 10);
    char v34 = v33 & 1;
LABEL_48:
    swift_bridgeObjectRelease();
    if ((v34 & 1) == 0)
    {
      FMIPActionStatus.init(rawValue:)(v32);
      if (LOBYTE(v97[0]) == 18) {
        char v44 = 1;
      }
      else {
        char v44 = v97[0];
      }
LABEL_60:
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(&v23[*(int *)(v90 + 20)], v19, v93);
      *uint64_t v23 = v44;
      uint64_t v48 = v86;
      if (v86)
      {
        uint64_t v49 = HIBYTE(v86) & 0xF;
        if ((v86 & 0x2000000000000000) == 0) {
          uint64_t v49 = v80 & 0xFFFFFFFFFFFFLL;
        }
        if (v49)
        {
          id v50 = (int *)v90;
          unint64_t v51 = (uint64_t *)&v23[*(int *)(v90 + 24)];
          *unint64_t v51 = v80;
          v51[1] = v48;
          goto LABEL_67;
        }
        swift_bridgeObjectRelease();
      }
      id v50 = (int *)v90;
      uint64_t v52 = &v23[*(int *)(v90 + 24)];
      *(void *)uint64_t v52 = 0;
      *((void *)v52 + 1) = 0;
LABEL_67:
      uint64_t v53 = v85;
      if (v85)
      {
        uint64_t v54 = HIBYTE(v85) & 0xF;
        if ((v85 & 0x2000000000000000) == 0) {
          uint64_t v54 = v84 & 0xFFFFFFFFFFFFLL;
        }
        if (v54)
        {
          id v55 = (uint64_t *)&v23[v50[7]];
          *id v55 = v84;
          v55[1] = v53;
          goto LABEL_74;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v56 = &v23[v50[7]];
      *(void *)uint64_t v56 = 0;
      *((void *)v56 + 1) = 0;
LABEL_74:
      uint64_t v57 = v83;
      if (v83)
      {
        uint64_t v58 = HIBYTE(v83) & 0xF;
        if ((v83 & 0x2000000000000000) == 0) {
          uint64_t v58 = v82 & 0xFFFFFFFFFFFFLL;
        }
        if (v58)
        {
          uint64_t v59 = (uint64_t *)&v23[v50[8]];
          *uint64_t v59 = v82;
          v59[1] = v57;
          goto LABEL_81;
        }
        swift_bridgeObjectRelease();
      }
      id v60 = &v23[v50[8]];
      *(void *)id v60 = 0;
      *((void *)v60 + 1) = 0;
LABEL_81:
      uint64_t v61 = v81;
      if (v81)
      {
        uint64_t v62 = HIBYTE(v81) & 0xF;
        if ((v81 & 0x2000000000000000) == 0) {
          uint64_t v62 = v79 & 0xFFFFFFFFFFFFLL;
        }
        if (v62)
        {
          uint64_t v63 = (uint64_t *)&v23[v50[9]];
          uint64_t *v63 = v79;
          v63[1] = v61;
LABEL_88:
          unint64_t v90 = FMIPPlaySoundMetadata.debugDescription.getter();
          unint64_t v66 = v65;
          if (qword_1EBD80068 != -1) {
            swift_once();
          }
          uint64_t v67 = sub_1D4469928();
          sub_1D42D7FAC(v67, (uint64_t)qword_1EBD83228);
          swift_bridgeObjectRetain();
          uint64_t v68 = sub_1D44698F8();
          os_log_type_t v69 = sub_1D4469FF8();
          if (os_log_type_enabled(v68, v69))
          {
            uint64_t v70 = (uint8_t *)swift_slowAlloc();
            uint64_t v71 = swift_slowAlloc();
            unint64_t v88 = (unint64_t)v9;
            uint64_t v72 = v21;
            uint64_t v73 = v71;
            v97[0] = v71;
            uint64_t v87 = v7;
            uint64_t v74 = v95;
            uint64_t v75 = v70;
            *(_DWORD *)uint64_t v70 = 136315138;
            unint64_t v86 = (unint64_t)(v70 + 4);
            swift_bridgeObjectRetain();
            v97[4] = sub_1D42CB9EC(v90, v66, v97);
            uint64_t v23 = v89;
            sub_1D446A188();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1D4271000, v68, v69, "FMIPPlaySoundMetadata: initialized %s", v75, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1D9447730](v73, -1, -1);
            MEMORY[0x1D9447730](v75, -1, -1);

            (*(void (**)(char *, uint64_t))(v72 + 8))(v91, v93);
            (*(void (**)(unint64_t, uint64_t))(v74 + 8))(v88, v87);
          }
          else
          {
            swift_bridgeObjectRelease_n();

            (*(void (**)(char *, uint64_t))(v21 + 8))(v91, v93);
            (*(void (**)(char *, uint64_t))(v95 + 8))(v9, v7);
          }
          uint64_t v76 = (uint64_t)v96;
          sub_1D42B8670((uint64_t)v23, v92);
          uint64_t v16 = v76;
          return sub_1D42BEC64(v16);
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v64 = &v23[v50[9]];
      *(void *)uint64_t v64 = 0;
      *((void *)v64 + 1) = 0;
      goto LABEL_88;
    }
LABEL_59:
    char v44 = 1;
    goto LABEL_60;
  }
  v97[0] = v87;
  v97[1] = v88 & 0xFFFFFFFFFFFFFFLL;
  if (v87 == 43)
  {
    if (!v28) {
      goto LABEL_97;
    }
    if (v28 == 1 || (BYTE1(v87) - 48) > 9u) {
      goto LABEL_35;
    }
    Swift::Int v32 = (BYTE1(v87) - 48);
    if (v28 != 2)
    {
      if ((BYTE2(v87) - 48) > 9u) {
        goto LABEL_35;
      }
      Swift::Int v32 = 10 * (BYTE1(v87) - 48) + (BYTE2(v87) - 48);
      unint64_t v35 = v28 - 3;
      if (v35)
      {
        double v36 = (unsigned __int8 *)v97 + 3;
        while (1)
        {
          unsigned int v37 = *v36 - 48;
          if (v37 > 9) {
            goto LABEL_35;
          }
          uint64_t v38 = 10 * v32;
          if ((unsigned __int128)(v32 * (__int128)10) >> 64 != (10 * v32) >> 63) {
            goto LABEL_35;
          }
          Swift::Int v32 = v38 + v37;
          if (__OFADD__(v38, v37)) {
            goto LABEL_35;
          }
          char v34 = 0;
          ++v36;
          if (!--v35) {
            goto LABEL_48;
          }
        }
      }
    }
LABEL_47:
    char v34 = 0;
    goto LABEL_48;
  }
  if (v87 != 45)
  {
    if (!v28 || (v87 - 48) > 9u) {
      goto LABEL_35;
    }
    Swift::Int v32 = (v87 - 48);
    if (v28 != 1)
    {
      if ((BYTE1(v87) - 48) > 9u) {
        goto LABEL_35;
      }
      Swift::Int v32 = 10 * (v87 - 48) + (BYTE1(v87) - 48);
      unint64_t v39 = v28 - 2;
      if (v39)
      {
        id v40 = (unsigned __int8 *)v97 + 2;
        while (1)
        {
          unsigned int v41 = *v40 - 48;
          if (v41 > 9) {
            goto LABEL_35;
          }
          uint64_t v42 = 10 * v32;
          if ((unsigned __int128)(v32 * (__int128)10) >> 64 != (10 * v32) >> 63) {
            goto LABEL_35;
          }
          Swift::Int v32 = v42 + v41;
          if (__OFADD__(v42, v41)) {
            goto LABEL_35;
          }
          char v34 = 0;
          ++v40;
          if (!--v39) {
            goto LABEL_48;
          }
        }
      }
    }
    goto LABEL_47;
  }
  if (v28)
  {
    if (v28 != 1 && (BYTE1(v87) - 48) <= 9u)
    {
      if (v28 == 2)
      {
        char v34 = 0;
        Swift::Int v32 = -(uint64_t)(BYTE1(v87) - 48);
        goto LABEL_48;
      }
      if ((BYTE2(v87) - 48) <= 9u)
      {
        Swift::Int v32 = -10 * (BYTE1(v87) - 48) - (BYTE2(v87) - 48);
        unint64_t v43 = v28 - 3;
        if (!v43) {
          goto LABEL_47;
        }
        char v45 = (unsigned __int8 *)v97 + 3;
        while (1)
        {
          unsigned int v46 = *v45 - 48;
          if (v46 > 9) {
            break;
          }
          uint64_t v47 = 10 * v32;
          if ((unsigned __int128)(v32 * (__int128)10) >> 64 != (10 * v32) >> 63) {
            break;
          }
          Swift::Int v32 = v47 - v46;
          if (__OFSUB__(v47, v46)) {
            break;
          }
          char v34 = 0;
          ++v45;
          if (!--v43) {
            goto LABEL_48;
          }
        }
      }
    }
LABEL_35:
    Swift::Int v32 = 0;
    char v34 = 1;
    goto LABEL_48;
  }
  __break(1u);
LABEL_97:
  __break(1u);
  return result;
}

unint64_t sub_1D42B84C4()
{
  unint64_t result = qword_1EBD7CE78;
  if (!qword_1EBD7CE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CE78);
  }
  return result;
}

FMIPCore::FMIPActionStatus_optional __swiftcall FMIPActionStatus.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue > 500)
  {
    if (rawValue > 2203)
    {
      switch(rawValue)
      {
        case 2204:
          *uint64_t v1 = 15;
          return (FMIPCore::FMIPActionStatus_optional)rawValue;
        case 2403:
          *uint64_t v1 = 16;
          return (FMIPCore::FMIPActionStatus_optional)rawValue;
        case 2406:
          *uint64_t v1 = 17;
          return (FMIPCore::FMIPActionStatus_optional)rawValue;
      }
    }
    else
    {
      switch(rawValue)
      {
        case 501:
          *uint64_t v1 = 12;
          return (FMIPCore::FMIPActionStatus_optional)rawValue;
        case 2200:
          *uint64_t v1 = 13;
          return (FMIPCore::FMIPActionStatus_optional)rawValue;
        case 2201:
          *uint64_t v1 = 14;
          return (FMIPCore::FMIPActionStatus_optional)rawValue;
      }
    }
LABEL_16:
    *uint64_t v1 = 18;
    return (FMIPCore::FMIPActionStatus_optional)rawValue;
  }
  switch(rawValue)
  {
    case 200:
      *uint64_t v1 = 2;
      return (FMIPCore::FMIPActionStatus_optional)rawValue;
    case 201:
    case 202:
    case 204:
    case 210:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 219:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
      goto LABEL_16;
    case 203:
      *uint64_t v1 = 3;
      return (FMIPCore::FMIPActionStatus_optional)rawValue;
    case 205:
      *uint64_t v1 = 4;
      return (FMIPCore::FMIPActionStatus_optional)rawValue;
    case 206:
      *uint64_t v1 = 5;
      return (FMIPCore::FMIPActionStatus_optional)rawValue;
    case 207:
      *uint64_t v1 = 6;
      return (FMIPCore::FMIPActionStatus_optional)rawValue;
    case 208:
      *uint64_t v1 = 7;
      return (FMIPCore::FMIPActionStatus_optional)rawValue;
    case 209:
      *uint64_t v1 = 8;
      return (FMIPCore::FMIPActionStatus_optional)rawValue;
    case 211:
      *uint64_t v1 = 9;
      return (FMIPCore::FMIPActionStatus_optional)rawValue;
    case 220:
      *uint64_t v1 = 11;
      return (FMIPCore::FMIPActionStatus_optional)rawValue;
    case 230:
      *uint64_t v1 = 10;
      return (FMIPCore::FMIPActionStatus_optional)rawValue;
    default:
      if (rawValue == -1)
      {
        *uint64_t v1 = 0;
      }
      else
      {
        if (rawValue) {
          goto LABEL_16;
        }
        *uint64_t v1 = 1;
      }
      break;
  }
  return (FMIPCore::FMIPActionStatus_optional)rawValue;
}

uint64_t sub_1D42B8670(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPPlaySoundMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t FMIPPlaySoundMetadata.debugDescription.getter()
{
  id v0 = self;
  type metadata accessor for FMIPPlaySoundMetadata();
  uint64_t v1 = (void *)sub_1D4469578();
  id v2 = objc_msgSend(v0, sel_localizedStringFromDate_dateStyle_timeStyle_, v1, 1, 4);

  sub_1D4469B38();
  sub_1D446A378();
  swift_bridgeObjectRelease();
  FMIPActionStatus.description.getter();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  return 0xD000000000000020;
}

unint64_t FMIPActionStatus.description.getter()
{
  switch(*v0)
  {
    case 1:
    case 2:
    case 4:
      sub_1D446A378();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000013;
      break;
    case 3:
    case 0xD:
      sub_1D446A378();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD00000000000001ELL;
      break;
    case 5:
      sub_1D446A378();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000012;
      break;
    case 6:
    case 7:
    case 0xB:
      sub_1D446A378();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD00000000000001FLL;
      break;
    case 8:
      sub_1D446A378();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000023;
      break;
    case 9:
    case 0xE:
      sub_1D446A378();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000025;
      break;
    case 0xA:
      sub_1D446A378();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000019;
      break;
    case 0xC:
      sub_1D446A378();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD00000000000001ALL;
      break;
    case 0xF:
      sub_1D446A378();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000020;
      break;
    case 0x10:
      sub_1D446A378();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000026;
      break;
    case 0x11:
      sub_1D446A378();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000028;
      break;
    default:
      sub_1D446A378();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000011;
      break;
  }
  sub_1D446A6D8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  return v2;
}

uint64_t sub_1D42B8E0C(unint64_t a1, uint64_t a2)
{
  uint64_t v56 = a2;
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v3 - 8);
  id v55 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA1F8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v60 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v59 = (uint64_t)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v70 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1D4469688();
  uint64_t v11 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v61 = (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMIPDevice();
  uint64_t v64 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v58 = (uint64_t)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)&v49 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v49 - v18;
  uint64_t v20 = sub_1D42D5DA0(&qword_1EBD7D920);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v63 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1D42D5DA0(&qword_1EBD7D928);
  uint64_t v24 = MEMORY[0x1F4188790](v23 - 8);
  unint64_t v26 = (unint64_t *)((char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v24);
  unint64_t v28 = (unint64_t *)((char *)&v49 - v27);
  uint64_t v29 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v21 + 48);
  unint64_t v30 = *(void *)(a1 + 16);
  uint64_t v68 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  unint64_t v69 = v30;
  unint64_t v66 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t v53 = v19 + 304;
  uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  uint64_t v52 = (void (**)(uint64_t, uint64_t))(v11 + 8);
  uint64_t result = swift_bridgeObjectRetain_n();
  unint64_t v32 = 0;
  unint64_t v65 = a1;
  unint64_t v62 = a1;
  while (1)
  {
    if (v32 == v69)
    {
      uint64_t v33 = 1;
      unint64_t v32 = v69;
      goto LABEL_7;
    }
    if (v32 >= v69) {
      break;
    }
    uint64_t v34 = (uint64_t)&v63[*(int *)(v20 + 48)];
    sub_1D42D22A0(v65+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v32, v34, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v35 = (uint64_t)v26 + *(int *)(v20 + 48);
    *unint64_t v26 = v32;
    sub_1D42BB578(v34, v35, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v33 = 0;
    ++v32;
LABEL_7:
    (*v68)(v26, v33, 1, v20);
    sub_1D4276C98((uint64_t)v26, (uint64_t)v28, &qword_1EBD7D928);
    if ((*v29)(v28, 1, v20) == 1) {
      goto LABEL_21;
    }
    unint64_t v36 = *v28;
    sub_1D42BB578((uint64_t)v28 + *(int *)(v20 + 48), (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (!*((void *)v19 + 3)) {
      goto LABEL_2;
    }
    swift_bridgeObjectRetain();
    uint64_t v37 = (uint64_t)v70;
    sub_1D4469628();
    swift_bridgeObjectRelease();
    if ((*v66)(v37, 1, v67) == 1)
    {
      sub_1D42D20B8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t result = sub_1D4276C3C(v37, (uint64_t *)&unk_1EBD7E930);
    }
    else
    {
      (*v54)(v61, v37, v67);
      uint64_t v38 = v56;
      if (*(void *)(v56 + 16) && (unint64_t v39 = sub_1D43AEE98(v61), (v40 & 1) != 0)) {
        int v51 = *(unsigned __int8 *)(*(void *)(v38 + 56) + v39);
      }
      else {
        int v51 = 0;
      }
      sub_1D42D22A0((uint64_t)v19, v58, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      id v50 = *((void *)v19 + 31);
      sub_1D4276C98((uint64_t)v53, (uint64_t)v77, &qword_1EBD7CC10);
      sub_1D4276C98((uint64_t)v77, (uint64_t)v76, &qword_1EBD7CC10);
      uint64_t v74 = *((void *)v19 + 35);
      long long v49 = *((_OWORD *)v19 + 18);
      long long v75 = v49;
      memset(v73, 0, sizeof(v73));
      uint64_t v41 = type metadata accessor for FMIPItemGroup();
      memset(v72, 0, sizeof(v72));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v59, 1, 1, v41);
      unsigned __int8 v71 = 7;
      uint64_t v42 = type metadata accessor for FMIPDeviceConnectedState(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v60, 1, 1, v42);
      uint64_t v43 = type metadata accessor for FMIPDeviceLostModeMetadata();
      uint64_t v44 = (uint64_t)v55;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v55, 1, 1, v43);
      char v45 = v50;
      swift_bridgeObjectRetain();
      sub_1D42FAC78((uint64_t)v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
      id v46 = (id)v49;
      FMIPDevice.init(device:historicalLocations:address:crowdSourcedLocation:location:shiftedLocation:crowdSourcedLocating:itemGroup:deviceWithYou:findingCapable:beaconType:deviceConnectedState:lostModeMetadata:)(v58, v45, v76, &v74, v73, (uint64_t)v72, 2, v59, v57, v51, 2, &v71, v60, v44);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v47 = v61;
        uint64_t result = v62;
        if ((v36 & 0x8000000000000000) != 0) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t result = sub_1D439948C(v62);
        uint64_t v47 = v61;
        if ((v36 & 0x8000000000000000) != 0)
        {
LABEL_20:
          __break(1u);
LABEL_21:
          swift_bridgeObjectRelease();
          return v62;
        }
      }
      if (v36 >= *(void *)(result + 16)) {
        goto LABEL_23;
      }
      unint64_t v48 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
      unint64_t v62 = result;
      sub_1D439ED88(v57, result + v48 + *(void *)(v64 + 72) * v36, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      (*v52)(v47, v67);
LABEL_2:
      uint64_t result = sub_1D42D20B8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1D42B9654(unint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v2 - 8);
  id v55 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6CA1F8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v54 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7E670);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v53 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v52 - v9;
  uint64_t v67 = type metadata accessor for FMIPItemGroup();
  uint64_t v11 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67 - 8);
  uint64_t v57 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMIPDevice();
  uint64_t v62 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v58 = (uint64_t)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v56 = (uint64_t)&v52 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v52 - v18;
  uint64_t v20 = sub_1D42D5DA0(&qword_1EBD7D920);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v61 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1D42D5DA0(&qword_1EBD7D928);
  uint64_t v24 = MEMORY[0x1F4188790](v23 - 8);
  unint64_t v26 = (unint64_t *)((char *)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v24);
  unint64_t v28 = (unint64_t *)((char *)&v52 - v27);
  unint64_t v29 = *(void *)(a1 + 16);
  uint64_t v72 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  unint64_t v73 = v29;
  uint64_t v70 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  unsigned __int8 v71 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v60 = v11;
  unint64_t v65 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t result = swift_bridgeObjectRetain_n();
  unint64_t v31 = 0;
  unint64_t v63 = a1;
  unint64_t v59 = a1;
  uint64_t v68 = v10;
  unint64_t v66 = v26;
  while (1)
  {
    if (v31 == v73)
    {
      uint64_t v32 = 1;
      unint64_t v31 = v73;
      goto LABEL_7;
    }
    if (v31 >= v73) {
      break;
    }
    uint64_t v33 = (uint64_t)&v61[*(int *)(v20 + 48)];
    sub_1D42D22A0(v63+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v31, v33, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v34 = (uint64_t)v26 + *(int *)(v20 + 48);
    *unint64_t v26 = v31;
    sub_1D42BB578(v33, v34, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v32 = 0;
    ++v31;
LABEL_7:
    (*v72)(v26, v32, 1, v20);
    sub_1D4276C98((uint64_t)v26, (uint64_t)v28, &qword_1EBD7D928);
    if ((*v71)(v28, 1, v20) == 1)
    {
      swift_bridgeObjectRelease();
      return v59;
    }
    unint64_t v35 = *v28;
    sub_1D42BB578((uint64_t)v28 + *(int *)(v20 + 48), (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v36 = *((void *)v19 + 4);
    if (v36 != 0x72656E776FLL || *((void *)v19 + 5) != 0xE500000000000000)
    {
      uint64_t v36 = sub_1D446A758();
      if ((v36 & 1) == 0) {
        goto LABEL_2;
      }
    }
    unint64_t v64 = v35;
    uint64_t v37 = *(void *)(v69 + 288);
    MEMORY[0x1F4188790](v36);
    int v51 = v19;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1D42B9F0C((uint64_t (*)(char *))sub_1D439E2B8, (uint64_t)&v50, v37);
    if (*(void *)(v38 + 16))
    {
      uint64_t v39 = v60;
      uint64_t v40 = (uint64_t)v68;
      sub_1D42D22A0(v38 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80)), (uint64_t)v68, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
      uint64_t v42 = v67;
      v41(v40, 0, 1, v67);
    }
    else
    {
      uint64_t v41 = *v70;
      uint64_t v42 = v67;
      uint64_t v40 = (uint64_t)v68;
      (*v70)((uint64_t)v68, 1, 1, v67);
    }
    swift_bridgeObjectRelease();
    if ((*v65)(v40, 1, v42) == 1)
    {
      sub_1D42D20B8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t result = sub_1D4276C3C(v40, &qword_1EBD7E670);
      unint64_t v26 = v66;
    }
    else
    {
      uint64_t v43 = v57;
      sub_1D42BB578(v40, v57, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      sub_1D42D22A0((uint64_t)v19, v58, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      sub_1D42FB494(v79);
      sub_1D4276C98((uint64_t)v79, (uint64_t)v78, &qword_1EBD7CC10);
      memset(v77, 0, sizeof(v77));
      memset(v76, 0, sizeof(v76));
      memset(v75, 0, sizeof(v75));
      uint64_t v44 = v53;
      sub_1D42D22A0(v43, v53, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      v41(v44, 0, 1, v42);
      unsigned __int8 v74 = 7;
      uint64_t v45 = type metadata accessor for FMIPDeviceConnectedState(0);
      uint64_t v46 = (uint64_t)v54;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v54, 1, 1, v45);
      uint64_t v47 = type metadata accessor for FMIPDeviceLostModeMetadata();
      uint64_t v48 = (uint64_t)v55;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v55, 1, 1, v47);
      FMIPDevice.init(device:historicalLocations:address:crowdSourcedLocation:location:shiftedLocation:crowdSourcedLocating:itemGroup:deviceWithYou:findingCapable:beaconType:deviceConnectedState:lostModeMetadata:)(v58, 0, v78, v77, v76, (uint64_t)v75, 2, v44, v56, 2u, 2, &v74, v46, v48);
      unint64_t v49 = v59;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1D439948C(v49);
        unint64_t v59 = result;
      }
      unint64_t v26 = v66;
      if ((v64 & 0x8000000000000000) != 0) {
        goto LABEL_23;
      }
      if (v64 >= *(void *)(v59 + 16)) {
        goto LABEL_24;
      }
      sub_1D439ED88(v56, v59+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v64, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      sub_1D42D20B8(v57, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
LABEL_2:
      uint64_t result = sub_1D42D20B8((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1D42B9F0C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FMIPItemGroup();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = MEMORY[0x1E4FBC860];
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void *)(v24 + 72);
      sub_1D42D22A0(a3 + v16 + v13 * v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      char v17 = a1(v12);
      if (v3)
      {
        sub_1D42D20B8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if (v17)
      {
        sub_1D42BB578((uint64_t)v12, v23, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1D4337294(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1D4337294(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        *(void *)(v15 + 16) = v19 + 1;
        uint64_t result = sub_1D42BB578(v23, v15 + v16 + v19 * v13, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_1D42D20B8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_1D42BA1A4(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v61 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D42D5DA0(&qword_1EA6CA1F8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v65 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v64 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPDevice();
  uint64_t v68 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v63 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v62 = (uint64_t)&v56 - v14;
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (uint64_t *)((char *)&v56 - v15);
  uint64_t v17 = sub_1D42D5DA0(&qword_1EBD7D920);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v67 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1D42D5DA0(&qword_1EBD7D928);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v23 = (unint64_t *)((char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (unint64_t *)((char *)&v56 - v24);
  unint64_t v26 = a1;
  unint64_t v27 = *(void *)(a1 + 16);
  uint64_t v72 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  unint64_t v28 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v60 = v16 + 38;
  unint64_t v29 = v26;
  uint64_t result = swift_bridgeObjectRetain_n();
  unint64_t v31 = 0;
  unint64_t v69 = v29;
  unint64_t v70 = v27;
  unint64_t v66 = v29;
  while (1)
  {
    if (v31 == v27)
    {
      uint64_t v32 = 1;
      unint64_t v31 = v27;
      goto LABEL_8;
    }
    if (v31 >= v27) {
      break;
    }
    uint64_t v33 = (uint64_t)&v67[*(int *)(v17 + 48)];
    sub_1D42D22A0(v69+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v31, v33, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v34 = (uint64_t)v23 + *(int *)(v17 + 48);
    *uint64_t v23 = v31;
    sub_1D42BB578(v33, v34, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v32 = 0;
    ++v31;
    unint64_t v27 = v70;
LABEL_8:
    (*v72)(v23, v32, 1, v17);
    sub_1D4276C98((uint64_t)v23, (uint64_t)v25, &qword_1EBD7D928);
    if ((*v28)(v25, 1, v17) == 1) {
      goto LABEL_22;
    }
    unint64_t v71 = *v25;
    sub_1D42BB578((uint64_t)v25 + *(int *)(v17 + 48), (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v35 = v16[3];
    if (v35 && *(void *)(a2 + 16))
    {
      uint64_t v36 = v16[2];
      swift_bridgeObjectRetain();
      unint64_t v37 = sub_1D42C4FCC(v36, v35);
      if (v38)
      {
        uint64_t v39 = (unsigned __int8 *)(*(void *)(a2 + 56) + 24 * v37);
        uint64_t v40 = *v39;
        int v41 = v39[1];
        int v42 = v39[2];
        uint64_t v43 = v39[3];
        uint64_t v44 = (void *)*((void *)v39 + 1);
        uint64_t v57 = *((void *)v39 + 2);
        uint64_t v45 = 256;
        if (!v41) {
          uint64_t v45 = 0;
        }
        uint64_t v46 = v45 | v40;
        uint64_t v47 = 0x10000;
        if (!v42) {
          uint64_t v47 = 0;
        }
        uint64_t v56 = v46 | v47 | (v43 << 24);
        id v59 = v44;
        swift_bridgeObjectRelease();
        sub_1D42D22A0((uint64_t)v16, v63, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v58 = v16[31];
        sub_1D4276C98((uint64_t)v60, (uint64_t)v78, &qword_1EBD7CC10);
        sub_1D4276C98((uint64_t)v78, (uint64_t)v77, &qword_1EBD7CC10);
        v76[0] = v56;
        v76[1] = (uint64_t)v44;
        v76[2] = v57;
        memset(v75, 0, sizeof(v75));
        uint64_t v48 = type metadata accessor for FMIPItemGroup();
        memset(v74, 0, sizeof(v74));
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v64, 1, 1, v48);
        unsigned __int8 v73 = 7;
        uint64_t v49 = type metadata accessor for FMIPDeviceConnectedState(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v65, 1, 1, v49);
        uint64_t v50 = type metadata accessor for FMIPDeviceLostModeMetadata();
        uint64_t v51 = (uint64_t)v61;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v61, 1, 1, v50);
        uint64_t v52 = v58;
        swift_bridgeObjectRetain();
        id v59 = v59;
        sub_1D42FAC78((uint64_t)v78, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
        FMIPDevice.init(device:historicalLocations:address:crowdSourcedLocation:location:shiftedLocation:crowdSourcedLocating:itemGroup:deviceWithYou:findingCapable:beaconType:deviceConnectedState:lostModeMetadata:)(v63, v52, v77, v76, v75, (uint64_t)v74, 2, v64, v62, 2u, 2, &v73, v65, v51);
        unint64_t v53 = v66;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if (result)
        {
          unint64_t v27 = v70;
          unint64_t v54 = v71;
          if ((v71 & 0x8000000000000000) != 0) {
            goto LABEL_21;
          }
        }
        else
        {
          uint64_t result = sub_1D439948C(v53);
          unint64_t v53 = result;
          unint64_t v27 = v70;
          unint64_t v54 = v71;
          if ((v71 & 0x8000000000000000) != 0)
          {
LABEL_21:
            __break(1u);
LABEL_22:
            swift_bridgeObjectRelease();
            return v66;
          }
        }
        if (v54 >= *(void *)(v53 + 16)) {
          goto LABEL_24;
        }
        unint64_t v55 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
        unint64_t v66 = v53;
        sub_1D439ED88(v62, v53 + v55 + *(void *)(v68 + 72) * v54, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v27 = v70;
      }
    }
    uint64_t result = sub_1D42D20B8((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  }
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPDevice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D4421E6C);
}

uint64_t sub_1D42BA8DC(unint64_t a1, uint64_t a2)
{
  uint64_t v114 = a2;
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v91 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA1F8);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v90 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v89 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPDevice();
  uint64_t v109 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v88 = (uint64_t)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v92 = (uint64_t)&v86 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v98 = (uint64_t)&v86 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  int v97 = (uint64_t *)((char *)&v86 - v17);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (uint64_t *)((char *)&v86 - v19);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v96 = (uint64_t)&v86 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v105 = (uint64_t)&v86 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  unint64_t v27 = (uint64_t *)((char *)&v86 - v26);
  MEMORY[0x1F4188790](v25);
  unint64_t v29 = (char *)&v86 - v28;
  uint64_t v30 = sub_1D42D5DA0(&qword_1EBD7D920);
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v101 = (char *)&v86 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1D42D5DA0(&qword_1EBD7D928);
  uint64_t v34 = MEMORY[0x1F4188790](v33 - 8);
  uint64_t v36 = (unint64_t *)((char *)&v86 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v34);
  char v38 = (uint64_t *)((char *)&v86 - v37);
  unint64_t v39 = *(void *)(a1 + 16);
  unint64_t v112 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  unint64_t v113 = v39;
  unint64_t v111 = (unsigned int (**)(void *, uint64_t, uint64_t))(v31 + 48);
  uint64_t v87 = v29 + 304;
  uint64_t result = swift_bridgeObjectRetain_n();
  *(void *)&long long v41 = 136315138;
  long long v100 = v41;
  uint64_t v99 = MEMORY[0x1E4FBC840] + 8;
  unint64_t v102 = a1;
  uint64_t v103 = v30;
  unint64_t v93 = a1;
  unint64_t v42 = 0;
  uint64_t v107 = v27;
  uint64_t v108 = v38;
  long long v104 = v36;
  while (2)
  {
    unint64_t v43 = v113;
    BOOL v44 = v42 >= v113;
    if (v42 == v113)
    {
LABEL_5:
      uint64_t v45 = 1;
      unint64_t v42 = v43;
      goto LABEL_8;
    }
    while (1)
    {
      while (1)
      {
        if (v44)
        {
          __break(1u);
          goto LABEL_40;
        }
        uint64_t v46 = (uint64_t)&v101[*(int *)(v30 + 48)];
        sub_1D42D22A0(v102+ ((*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80))+ *(void *)(v109 + 72) * v42, v46, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v47 = (uint64_t)v36 + *(int *)(v30 + 48);
        *uint64_t v36 = v42;
        uint64_t v48 = v46;
        unint64_t v43 = v113;
        sub_1D42BB578(v48, v47, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v45 = 0;
        ++v42;
LABEL_8:
        (*v112)(v36, v45, 1, v30);
        sub_1D4276C98((uint64_t)v36, (uint64_t)v38, &qword_1EBD7D928);
        if ((*v111)(v38, 1, v30) == 1)
        {
          swift_bridgeObjectRelease();
          return v93;
        }
        unint64_t v49 = *v38;
        sub_1D42BB578((uint64_t)v38 + *(int *)(v30 + 48), (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        if ((v29[216] & 2) != 0) {
          break;
        }
        uint64_t result = sub_1D42D20B8((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        BOOL v44 = v42 >= v43;
        if (v42 == v43) {
          goto LABEL_5;
        }
      }
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      unint64_t v110 = v42;
      uint64_t v50 = sub_1D4469928();
      sub_1D42D7FAC(v50, (uint64_t)qword_1EBD83228);
      sub_1D42D22A0((uint64_t)v29, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v51 = sub_1D44698F8();
      os_log_type_t v52 = sub_1D446A038();
      BOOL v53 = os_log_type_enabled(v51, v52);
      unint64_t v106 = v49;
      if (v53)
      {
        uint64_t v54 = swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        v120[0] = v55;
        *(_DWORD *)uint64_t v54 = v100;
        uint64_t v56 = *v27;
        unint64_t v57 = v107[1];
        swift_bridgeObjectRetain();
        *(void *)(v54 + 4) = sub_1D42CB9EC(v56, v57, v120);
        unint64_t v27 = v107;
        swift_bridgeObjectRelease();
        sub_1D42D20B8((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        _os_log_impl(&dword_1D4271000, v51, v52, "FMIPDataManager: Trying to preserve historical locations for device %s", (uint8_t *)v54, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v55, -1, -1);
        uint64_t v58 = v54;
        uint64_t v30 = v103;
        MEMORY[0x1D9447730](v58, -1, -1);
      }
      else
      {
        sub_1D42D20B8((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      }

      uint64_t v59 = *(void *)(v114 + 16);
      uint64_t v36 = v104;
      char v38 = v108;
      if (!v59) {
        goto LABEL_31;
      }
      uint64_t v60 = v109;
      unint64_t v61 = (*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
      uint64_t v62 = v114 + v61;
      swift_bridgeObjectRetain();
      uint64_t v63 = *(void *)(v60 + 72);
      while (1)
      {
        sub_1D42D22A0(v62, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        BOOL v64 = *v20 == *(void *)v29 && v20[1] == *((void *)v29 + 1);
        if (v64 || (sub_1D446A758() & 1) != 0) {
          break;
        }
        sub_1D42D20B8((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        v62 += v63;
        if (!--v59)
        {
          swift_bridgeObjectRelease();
          unint64_t v27 = v107;
          char v38 = v108;
          uint64_t v30 = v103;
          goto LABEL_31;
        }
      }
      unint64_t v95 = v61;
      swift_bridgeObjectRelease();
      uint64_t v65 = v96;
      sub_1D42BB578((uint64_t)v20, v96, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      sub_1D42BB578(v65, v105, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      unint64_t v66 = v97;
      sub_1D42D22A0((uint64_t)v29, (uint64_t)v97, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v67 = sub_1D44698F8();
      os_log_type_t v68 = sub_1D446A038();
      if (os_log_type_enabled(v67, v68))
      {
        uint64_t v69 = swift_slowAlloc();
        uint64_t v94 = swift_slowAlloc();
        v120[0] = v94;
        *(_DWORD *)uint64_t v69 = v100;
        uint64_t v70 = *v66;
        unint64_t v71 = v66[1];
        swift_bridgeObjectRetain();
        *(void *)(v69 + 4) = sub_1D42CB9EC(v70, v71, v120);
        uint64_t v36 = v104;
        swift_bridgeObjectRelease();
        sub_1D42D20B8((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        _os_log_impl(&dword_1D4271000, v67, v68, "FMIPDataManager: Preserving historical locations for device %s", (uint8_t *)v69, 0xCu);
        uint64_t v72 = v94;
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v72, -1, -1);
        MEMORY[0x1D9447730](v69, -1, -1);
      }
      else
      {
        sub_1D42D20B8((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      }

      uint64_t v73 = v98;
      uint64_t v30 = v103;
      char v38 = v108;
      unint64_t v74 = v106;
      uint64_t v75 = *((void *)v29 + 31);
      sub_1D42D22A0(v105, v98, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      if (!v75) {
        break;
      }
      sub_1D42D20B8(v73, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_30:
      sub_1D42D20B8(v105, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      unint64_t v27 = v107;
LABEL_31:
      uint64_t result = sub_1D42D20B8((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      unint64_t v43 = v113;
      unint64_t v42 = v110;
      BOOL v44 = v110 >= v113;
      if (v110 == v113) {
        goto LABEL_5;
      }
    }
    uint64_t v76 = *(void *)(v73 + 248);
    sub_1D42D20B8(v73, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (!v76) {
      goto LABEL_30;
    }
    uint64_t v77 = v88;
    sub_1D42D22A0((uint64_t)v29, v88, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v78 = *(NSObject **)(v105 + 248);
    sub_1D4276C98((uint64_t)v87, (uint64_t)v120, &qword_1EBD7CC10);
    sub_1D4276C98((uint64_t)v120, (uint64_t)v119, &qword_1EBD7CC10);
    memset(v118, 0, sizeof(v118));
    memset(v117, 0, sizeof(v117));
    uint64_t v79 = type metadata accessor for FMIPItemGroup();
    memset(v116, 0, sizeof(v116));
    uint64_t v80 = (uint64_t)v89;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v89, 1, 1, v79);
    unsigned __int8 v115 = 7;
    uint64_t v81 = type metadata accessor for FMIPDeviceConnectedState(0);
    uint64_t v82 = (uint64_t)v90;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v90, 1, 1, v81);
    uint64_t v83 = type metadata accessor for FMIPDeviceLostModeMetadata();
    uint64_t v84 = (uint64_t)v91;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v91, 1, 1, v83);
    swift_bridgeObjectRetain();
    sub_1D42FAC78((uint64_t)v120, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
    FMIPDevice.init(device:historicalLocations:address:crowdSourcedLocation:location:shiftedLocation:crowdSourcedLocating:itemGroup:deviceWithYou:findingCapable:beaconType:deviceConnectedState:lostModeMetadata:)(v77, v78, v119, v118, v117, (uint64_t)v116, 2, v80, v92, 2u, 2, &v115, v82, v84);
    unint64_t v85 = v93;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1D439948C(v85);
      unint64_t v85 = result;
    }
    uint64_t v30 = v103;
    uint64_t v36 = v104;
    char v38 = v108;
    unint64_t v42 = v110;
    if ((v74 & 0x8000000000000000) != 0)
    {
LABEL_40:
      __break(1u);
      break;
    }
    if (v74 < *(void *)(v85 + 16))
    {
      unint64_t v93 = v85;
      sub_1D439ED88(v92, v85 + v95 + v63 * v74, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      sub_1D42D20B8(v105, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t result = sub_1D42D20B8((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      unint64_t v27 = v107;
      continue;
    }
    break;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D42BB510(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42BB578(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42BB5E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42BB648(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *sub_1D42BB6B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1D4469688();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1D4469678();
  uint64_t v14 = sub_1D4469638();
  uint64_t v16 = v15;
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  v5[2] = v14;
  v5[3] = v16;
  v5[5] = 0;
  type metadata accessor for FMIPDeviceActionsController.CommandFutures();
  uint64_t v17 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v17 + 112) = MEMORY[0x1E4FBC860];
  v5[21] = v17;
  v5[4] = a1;
  sub_1D42A4D5C(a2, (uint64_t)(v5 + 6));
  sub_1D42A3A74(a3, (uint64_t)(v5 + 11), &qword_1EBD7F828);
  sub_1D42A3A74(a4, (uint64_t)(v5 + 16), &qword_1EBD7D4F8);
  sub_1D42A3A74((uint64_t)(v5 + 16), (uint64_t)v28, &qword_1EBD7D4F8);
  uint64_t v18 = v29;
  id v19 = a1;
  sub_1D4276C3C((uint64_t)v28, &qword_1EBD7D4F8);
  if (v18)
  {
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1D4469928();
    sub_1D42D7FAC(v20, (uint64_t)qword_1EA6E4710);
    uint64_t v21 = sub_1D44698F8();
    os_log_type_t v22 = sub_1D446A038();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      uint64_t v24 = "FMIPDeviceActionsController: initialized for testing";
LABEL_10:
      _os_log_impl(&dword_1D4271000, v21, v22, v24, v23, 2u);
      MEMORY[0x1D9447730](v23, -1, -1);
    }
  }
  else
  {
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1D4469928();
    sub_1D42D7FAC(v25, (uint64_t)qword_1EA6E4710);
    uint64_t v21 = sub_1D44698F8();
    os_log_type_t v22 = sub_1D446A038();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      uint64_t v24 = "FMIPDeviceActionsController: initialized";
      goto LABEL_10;
    }
  }

  sub_1D4276C3C(a4, &qword_1EBD7D4F8);
  sub_1D4276C3C(a3, &qword_1EBD7F828);
  sub_1D42BEC64(a2);
  return v5;
}

uint64_t static FMIPDeviceImageCacheRequest.allRequests(for:scale:)(uint64_t a1, double a2)
{
  uint64_t v4 = type metadata accessor for FMIPDevice();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(int *)(v5 + 136);
  uint64_t v55 = a1;
  sub_1D42A3A74(a1 + v11, (uint64_t)v10, &qword_1EBD7E670);
  uint64_t v12 = type metadata accessor for FMIPItemGroup();
  LODWORD(v5) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12);
  sub_1D4276C3C((uint64_t)v10, &qword_1EBD7E670);
  if (v5 == 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      int v15 = byte_1F2C04520[v13 + 32];
      int v53 = byte_1F2C04568;
      int v54 = v15;
      sub_1D42D2238(v55, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v16 = v7[14];
      uint64_t v52 = v7[13];
      uint64_t v18 = v7[17];
      uint64_t v17 = v7[18];
      uint64_t v20 = v7[11];
      uint64_t v19 = v7[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D42D21D8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1D42BBF14(0, v14[2] + 1, 1, v14);
        uint64_t v14 = (void *)result;
      }
      unint64_t v23 = v14[2];
      unint64_t v22 = v14[3];
      if (v23 >= v22 >> 1)
      {
        uint64_t result = (uint64_t)sub_1D42BBF14((void *)(v22 > 1), v23 + 1, 1, v14);
        uint64_t v14 = (void *)result;
      }
      void v14[2] = v23 + 1;
      uint64_t v24 = &v14[8 * v23];
      v24[4] = v52;
      uint64_t v24[5] = v16;
      v24[6] = v18;
      v24[7] = v17;
      v24[8] = v20;
      v24[9] = v19;
      *((unsigned char *)v24 + 80) = v53;
      *((unsigned char *)v24 + 81) = v54;
      *((double *)v24 + 11) = a2;
      if ((unint64_t)qword_1F2C04558 < 2) {
        break;
      }
      int v53 = byte_1F2C04569;
      sub_1D42D2238(v55, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v26 = v7[13];
      uint64_t v25 = v7[14];
      uint64_t v28 = v7[17];
      uint64_t v27 = v7[18];
      uint64_t v29 = v7[12];
      uint64_t v52 = v7[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D42D21D8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      unint64_t v31 = v14[2];
      unint64_t v30 = v14[3];
      if (v31 >= v30 >> 1) {
        uint64_t v14 = sub_1D42BBF14((void *)(v30 > 1), v31 + 1, 1, v14);
      }
      ++v13;
      void v14[2] = v31 + 1;
      uint64_t v32 = &v14[8 * v31];
      v32[4] = v26;
      v32[5] = v25;
      v32[6] = v28;
      v32[7] = v27;
      v32[8] = v52;
      v32[9] = v29;
      *((unsigned char *)v32 + 80) = v53;
      *((unsigned char *)v32 + 81) = v54;
      *((double *)v32 + 11) = a2;
      if (v13 == 3) {
        return (uint64_t)v14;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      int v34 = byte_1F2C044D0[v33 + 32];
      int v53 = byte_1F2C04518;
      int v54 = v34;
      sub_1D42D2238(v55, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v35 = v7[14];
      uint64_t v52 = v7[13];
      uint64_t v37 = v7[17];
      uint64_t v36 = v7[18];
      uint64_t v39 = v7[11];
      uint64_t v38 = v7[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D42D21D8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1D42BBF14(0, v14[2] + 1, 1, v14);
        uint64_t v14 = (void *)result;
      }
      unint64_t v41 = v14[2];
      unint64_t v40 = v14[3];
      if (v41 >= v40 >> 1)
      {
        uint64_t result = (uint64_t)sub_1D42BBF14((void *)(v40 > 1), v41 + 1, 1, v14);
        uint64_t v14 = (void *)result;
      }
      void v14[2] = v41 + 1;
      unint64_t v42 = &v14[8 * v41];
      v42[4] = v52;
      void v42[5] = v35;
      v42[6] = v37;
      v42[7] = v36;
      v42[8] = v39;
      v42[9] = v38;
      *((unsigned char *)v42 + 80) = v53;
      *((unsigned char *)v42 + 81) = v54;
      *((double *)v42 + 11) = a2;
      if ((unint64_t)qword_1F2C04508 < 2) {
        break;
      }
      int v53 = byte_1F2C04519;
      sub_1D42D2238(v55, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v44 = v7[13];
      uint64_t v43 = v7[14];
      uint64_t v46 = v7[17];
      uint64_t v45 = v7[18];
      uint64_t v47 = v7[12];
      uint64_t v52 = v7[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D42D21D8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      unint64_t v49 = v14[2];
      unint64_t v48 = v14[3];
      if (v49 >= v48 >> 1) {
        uint64_t v14 = sub_1D42BBF14((void *)(v48 > 1), v49 + 1, 1, v14);
      }
      ++v33;
      void v14[2] = v49 + 1;
      uint64_t v50 = &v14[8 * v49];
      v50[4] = v44;
      uint64_t v50[5] = v43;
      v50[6] = v46;
      v50[7] = v45;
      v50[8] = v52;
      v50[9] = v47;
      *((unsigned char *)v50 + 80) = v53;
      *((unsigned char *)v50 + 81) = v54;
      *((double *)v50 + 11) = a2;
      if (v33 == 6) {
        return (uint64_t)v14;
      }
    }
  }
  __break(1u);
  return result;
}

void *sub_1D42BBF14(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1D42D5DA0(&qword_1EA6CA9F8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D42BC024(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D42BC024(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D42BC118(void *a1)
{
  return FMIPDevice.encode(to:)(a1);
}

uint64_t FMIPDevice.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7CB80);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v52 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v54 = (uint64_t)&v43 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v53 = (uint64_t)&v43 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v56 = (uint64_t)&v43 - v11;
  uint64_t v57 = sub_1D4469618();
  uint64_t v55 = *(void *)(v57 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v57);
  uint64_t v51 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v50 = (char *)&v43 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  unint64_t v49 = (char *)&v43 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v43 - v18;
  uint64_t v20 = sub_1D42D5DA0(&qword_1EBD7D9E0);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  unint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42D6780();
  sub_1D446A8E8();
  uint64_t v58 = v2;
  LOBYTE(v62) = 14;
  uint64_t v67 = v20;
  uint64_t v24 = v23;
  uint64_t v25 = v59;
  sub_1D446A658();
  if (v25) {
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v67);
  }
  unint64_t v48 = v19;
  uint64_t v59 = v21;
  long long v62 = *(_OWORD *)(v58 + 16);
  LOBYTE(v61[0]) = 4;
  uint64_t v26 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
  unint64_t v27 = sub_1D42BD508();
  sub_1D446A698();
  unint64_t v47 = v27;
  LOBYTE(v62) = 39;
  sub_1D446A658();
  long long v62 = *(_OWORD *)(v58 + 48);
  LOBYTE(v61[0]) = 12;
  sub_1D446A698();
  LOBYTE(v62) = 38;
  sub_1D446A658();
  LOBYTE(v62) = 46;
  sub_1D446A658();
  swift_bridgeObjectRelease();
  long long v62 = *(_OWORD *)(v58 + 88);
  LOBYTE(v61[0]) = 10;
  sub_1D446A698();
  LOBYTE(v62) = 9;
  sub_1D446A658();
  LOBYTE(v62) = 36;
  sub_1D446A658();
  LOBYTE(v62) = 41;
  sub_1D446A658();
  uint64_t v45 = v26;
  LOBYTE(v62) = 37;
  uint64_t v46 = v24;
  sub_1D446A658();
  LOBYTE(v62) = 11;
  sub_1D446A658();
  LOBYTE(v62) = 2;
  sub_1D446A678();
  LOBYTE(v62) = 3;
  sub_1D446A658();
  swift_bridgeObjectRelease();
  LOBYTE(v62) = 40;
  sub_1D446A688();
  LOBYTE(v62) = 33;
  sub_1D446A688();
  uint64_t v44 = 0;
  uint64_t v29 = (int *)type metadata accessor for FMIPDevice();
  uint64_t v30 = v56;
  sub_1D42A3A74(v58 + v29[38], v56, &qword_1EBD7CB80);
  unint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  int v32 = v31(v30, 1, v57);
  if (v32 == 1)
  {
    sub_1D4276C3C(v56, &qword_1EBD7CB80);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v48, v56, v57);
    sub_1D44695B8();
    LOBYTE(v62) = 32;
    uint64_t v33 = v44;
    sub_1D446A678();
    uint64_t v44 = v33;
    if (v33)
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v48, v57);
      return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v46, v67);
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v48, v57);
  }
  uint64_t v34 = v53;
  sub_1D42A3A74(v58 + v29[39], v53, &qword_1EBD7CB80);
  if (v31(v34, 1, v57) == 1)
  {
    sub_1D4276C3C(v53, &qword_1EBD7CB80);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v49, v53, v57);
    sub_1D44695B8();
    LOBYTE(v62) = 30;
    uint64_t v35 = v44;
    sub_1D446A678();
    uint64_t v44 = v35;
    if (v35)
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v49, v57);
      return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v46, v67);
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v49, v57);
  }
  uint64_t v36 = v54;
  sub_1D42A3A74(v58 + v29[40], v54, &qword_1EBD7CB80);
  if (v31(v36, 1, v57) == 1)
  {
    sub_1D4276C3C(v54, &qword_1EBD7CB80);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v50, v54, v57);
    sub_1D44695B8();
    LOBYTE(v62) = 48;
    uint64_t v37 = v44;
    sub_1D446A678();
    uint64_t v44 = v37;
    if (v37)
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v50, v57);
      return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v46, v67);
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v50, v57);
  }
  uint64_t v38 = v52;
  sub_1D42A3A74(v58 + v29[41], v52, &qword_1EBD7CB80);
  if (v31(v38, 1, v57) == 1)
  {
    sub_1D4276C3C(v52, &qword_1EBD7CB80);
    goto LABEL_26;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v51, v52, v57);
  sub_1D44695B8();
  LOBYTE(v62) = 53;
  uint64_t v39 = v44;
  sub_1D446A678();
  uint64_t v44 = v39;
  if (!v39)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v51, v57);
LABEL_26:
    LOBYTE(v62) = 51;
    uint64_t v40 = v44;
    sub_1D446A688();
    if (!v40)
    {
      LOBYTE(v62) = 8;
      sub_1D446A668();
      LOBYTE(v62) = 5;
      sub_1D446A668();
      LOBYTE(v62) = 7;
      sub_1D446A668();
      *(void *)&long long v62 = *(void *)(v58 + 232);
      LOBYTE(v61[0]) = 1;
      sub_1D42D5DA0(&qword_1EBD7D8D8);
      sub_1D42D66D8(&qword_1EBD7D8E0, &qword_1EBD7D8D8, (void (*)(void))sub_1D42E5DD4);
      sub_1D446A698();
      *(void *)&long long v62 = *(void *)(v58 + 248);
      LOBYTE(v61[0]) = 47;
      sub_1D42D5DA0(&qword_1EBD7D908);
      sub_1D42D66D8((unint64_t *)&unk_1EBD7D910, &qword_1EBD7D908, (void (*)(void))sub_1D42E21F0);
      sub_1D446A698();
      uint64_t v41 = *(void *)(v58 + 272);
      long long v62 = *(_OWORD *)(v58 + 256);
      uint64_t v63 = v41;
      LOBYTE(v61[0]) = 29;
      sub_1D42D5DA0(&qword_1EBD7CC70);
      sub_1D42D66D8(&qword_1EBD7CC78, &qword_1EBD7CC70, (void (*)(void))sub_1D42E6A58);
      sub_1D446A698();
      uint64_t v42 = *(void *)(v58 + 296);
      long long v65 = *(_OWORD *)(v58 + 280);
      uint64_t v66 = v42;
      char v64 = 6;
      sub_1D446A698();
      sub_1D4276C98(v58 + 304, (uint64_t)&v62, &qword_1EBD7CC10);
      sub_1D4276C98((uint64_t)&v62, (uint64_t)v61, &qword_1EBD7CC10);
      char v60 = 0;
      sub_1D42D5DA0(&qword_1EBD7CC10);
      sub_1D42D66D8((unint64_t *)&qword_1EBD7CC18, &qword_1EBD7CC10, (void (*)(void))sub_1D42E7BC4);
      sub_1D446A698();
      *(void *)&v61[0] = *(void *)(v58 + 240);
      char v60 = 13;
      sub_1D42BD710();
      sub_1D446A698();
      LOBYTE(v61[0]) = 45;
      sub_1D42D5DA0(&qword_1EBD7CEA0);
      sub_1D42BD574();
      sub_1D446A698();
      LOBYTE(v61[0]) = 31;
      sub_1D42D5DA0(&qword_1EBD7D4E0);
      sub_1D42BD764();
      sub_1D446A698();
      LOBYTE(v61[0]) = 42;
      sub_1D42D5DA0(&qword_1EBD7CDF8);
      sub_1D42BD8AC();
      sub_1D446A698();
      LOBYTE(v61[0]) = 43;
      sub_1D42D5DA0(&qword_1EBD7CE38);
      sub_1D42BD808();
      sub_1D446A698();
      *(void *)&v61[0] = *(void *)(v58 + 224);
      char v60 = 44;
      sub_1D42D5DA0(&qword_1EA6CA3F0);
      sub_1D42D66D8(&qword_1EA6CA460, &qword_1EA6CA3F0, (void (*)(void))sub_1D42E5B1C);
      sub_1D446A698();
      LOBYTE(v61[0]) = 28;
      sub_1D446A668();
      LOBYTE(v61[0]) = 20;
      sub_1D446A668();
      LOBYTE(v61[0]) = 15;
      sub_1D446A668();
      LOBYTE(v61[0]) = 52;
      sub_1D446A668();
      LOBYTE(v61[0]) = 21;
      sub_1D446A668();
      LOBYTE(v61[0]) = 19;
      sub_1D446A668();
      LOBYTE(v61[0]) = 23;
      sub_1D446A668();
      LOBYTE(v61[0]) = 24;
      sub_1D446A668();
      LOBYTE(v61[0]) = 25;
      sub_1D446A668();
      LOBYTE(v61[0]) = 26;
      sub_1D446A668();
      LOBYTE(v61[0]) = 16;
      sub_1D446A668();
      LOBYTE(v61[0]) = 18;
      sub_1D446A668();
      LOBYTE(v61[0]) = 22;
      sub_1D446A668();
      LOBYTE(v61[0]) = 27;
      sub_1D446A668();
      LOBYTE(v61[0]) = 57;
      sub_1D446A668();
      LOBYTE(v61[0]) = 49;
      sub_1D42D5DA0(&qword_1EBD7E670);
      sub_1D42BD66C();
      sub_1D446A698();
      LOBYTE(v61[0]) = 50;
      sub_1D446A668();
      LOBYTE(v61[0]) = *(unsigned char *)(v58 + v29[34]);
      char v60 = 54;
      sub_1D42BD618();
      sub_1D446A698();
      LOBYTE(v61[0]) = *(unsigned char *)(v58 + v29[35]);
      char v60 = 55;
      sub_1D441CF08();
      sub_1D446A698();
      v61[0] = *(_OWORD *)(v58 + v29[36]);
      char v60 = 56;
      sub_1D446A698();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v46, v67);
  }
  (*(void (**)(char *, uint64_t))(v55 + 8))(v51, v57);
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v46, v67);
}

unint64_t sub_1D42BD508()
{
  unint64_t result = qword_1EBD7D8B8;
  if (!qword_1EBD7D8B8)
  {
    sub_1D42DB55C((uint64_t *)&unk_1EBD7FD68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7D8B8);
  }
  return result;
}

unint64_t sub_1D42BD574()
{
  unint64_t result = qword_1EBD7CEB0;
  if (!qword_1EBD7CEB0)
  {
    sub_1D42DB55C(&qword_1EBD7CEA0);
    sub_1D42D6690(&qword_1EBD7CE90, (void (*)(uint64_t))type metadata accessor for FMIPPlaySoundMetadata);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CEB0);
  }
  return result;
}

unint64_t sub_1D42BD618()
{
  unint64_t result = qword_1EA6CB4A0;
  if (!qword_1EA6CB4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB4A0);
  }
  return result;
}

unint64_t sub_1D42BD66C()
{
  unint64_t result = qword_1EA6CB498;
  if (!qword_1EA6CB498)
  {
    sub_1D42DB55C(&qword_1EBD7E670);
    sub_1D42D6690(&qword_1EA6CA500, (void (*)(uint64_t))type metadata accessor for FMIPItemGroup);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB498);
  }
  return result;
}

unint64_t sub_1D42BD710()
{
  unint64_t result = qword_1EBD7CC38;
  if (!qword_1EBD7CC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CC38);
  }
  return result;
}

unint64_t sub_1D42BD764()
{
  unint64_t result = qword_1EBD7D4F0;
  if (!qword_1EBD7D4F0)
  {
    sub_1D42DB55C(&qword_1EBD7D4E0);
    sub_1D42D6690(&qword_1EBD7D4C8, (void (*)(uint64_t))type metadata accessor for FMIPDeviceLostModeMetadata);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7D4F0);
  }
  return result;
}

unint64_t sub_1D42BD808()
{
  unint64_t result = qword_1EBD7CE48[0];
  if (!qword_1EBD7CE48[0])
  {
    sub_1D42DB55C(&qword_1EBD7CE38);
    sub_1D42D6690(&qword_1EBD7CE28, (void (*)(uint64_t))type metadata accessor for FMIPEraseMetadata);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBD7CE48);
  }
  return result;
}

unint64_t sub_1D42BD8AC()
{
  unint64_t result = qword_1EBD7CE08;
  if (!qword_1EBD7CE08)
  {
    sub_1D42DB55C(&qword_1EBD7CDF8);
    sub_1D42D6690(&qword_1EBD7CDE8, (void (*)(uint64_t))type metadata accessor for FMIPLockMetadata);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CE08);
  }
  return result;
}

uint64_t sub_1D42BD950(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_1D42BD994()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80);
  unint64_t v2 = (*(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64) + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1D42DB5A4(v0 + v1, *(uint8_t **)(v0 + v2), *(uint8_t **)(v0 + v2 + 8));
}

void sub_1D42BDA24()
{
  sub_1D42BDA30(v0[2], v0[3], v0[4]);
}

void sub_1D42BDA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D4469928();
  sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
  uint64_t v6 = sub_1D44698F8();
  os_log_type_t v7 = sub_1D446A038();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D4271000, v6, v7, "FMIPBeaconRefreshingController: refreshing UT alert state", v8, 2u);
    MEMORY[0x1D9447730](v8, -1, -1);
  }

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v10 = *(id *)(Strong + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_ownerSession);
    swift_release();
    uint64_t v11 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    uint64_t v12 = (void *)swift_allocObject();
    _DWORD v12[2] = v11;
    v12[3] = a2;
    v12[4] = a3;
    v14[4] = sub_1D42A71D8;
    v14[5] = v12;
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 1107296256;
    void v14[2] = sub_1D42A7184;
    v14[3] = &unk_1F2C13470;
    uint64_t v13 = _Block_copy(v14);
    sub_1D42972D4(a2);
    swift_release();
    objc_msgSend(v10, sel_isUTAppAlertDisabled_, v13);
    _Block_release(v13);
  }
}

uint64_t sub_1D42BDC6C()
{
  return sub_1D4444744(v0);
}

void sub_1D42BDC74()
{
  sub_1D42BDC80(v0[2], v0[3], v0[4]);
}

void sub_1D42BDC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4469618();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  id v10 = &v43[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v43[-v11];
  sub_1D4469608();
  uint64_t v49 = a1;
  uint64_t v13 = a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_lastRefreshTime;
  swift_beginAccess();
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v46 = v13;
  v14(v10, v13, v6);
  sub_1D4469558();
  double v16 = v15;
  uint64_t v47 = v7;
  uint64_t v17 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
  v17(v10, v6);
  v17(v12, v6);
  int v18 = 0;
  uint64_t v48 = a2;
  if (!a2 && v16 <= 30.0) {
    int v18 = *(unsigned __int8 *)(v49 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_currentlyRefreshing);
  }
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1D4469928();
  sub_1D42D7FAC(v19, (uint64_t)qword_1EBD83228);
  swift_retain();
  uint64_t v20 = sub_1D44698F8();
  os_log_type_t v21 = sub_1D446A038();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (_DWORD *)swift_slowAlloc();
    uint64_t v45 = a3;
    unint64_t v23 = v22;
    *uint64_t v22 = 67109632;
    LODWORD(aBlock[0]) = v18;
    int v44 = v18;
    sub_1D446A188();
    *((_WORD *)v23 + 4) = 1024;
    LODWORD(aBlock[0]) = v16 > 30.0;
    uint64_t v24 = v49;
    sub_1D446A188();
    *((_WORD *)v23 + 7) = 1024;
    LODWORD(aBlock[0]) = *(unsigned __int8 *)(v24
                                            + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_currentlyRefreshing);
    int v25 = v44;
    sub_1D446A188();
    swift_release();
    _os_log_impl(&dword_1D4271000, v20, v21, "FMIPBeaconRefreshingController: Should rate limit? %{BOOL}d, possibly stuck? %{BOOL}d, currentlyRefreshing? %{BOOL}d", (uint8_t *)v23, 0x14u);
    uint64_t v26 = v23;
    a3 = v45;
    MEMORY[0x1D9447730](v26, -1, -1);

    if (!v25) {
      goto LABEL_14;
    }
  }
  else
  {

    swift_release();
    if (!v18)
    {
LABEL_14:
      *(unsigned char *)(v49 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_currentlyRefreshing) = 1;
      sub_1D4469608();
      uint64_t v31 = v46;
      swift_beginAccess();
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(v47 + 40))(v31, v12, v6);
      swift_endAccess();
      int v32 = sub_1D44698F8();
      os_log_type_t v33 = sub_1D446A038();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v34 = 0;
        _os_log_impl(&dword_1D4271000, v32, v33, "FMIPBeaconRefreshingController: Will call Refresh Beacon Groups", v34, 2u);
        MEMORY[0x1D9447730](v34, -1, -1);
      }

      uint64_t v35 = v49;
      uint64_t v36 = *(void **)(v49 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_ownerSession);
      sub_1D4469688();
      id v37 = v36;
      uint64_t v38 = (void *)sub_1D4469D58();
      uint64_t v39 = (void *)swift_allocObject();
      uint64_t v40 = v48;
      v39[2] = v35;
      v39[3] = v40;
      v39[4] = a3;
      aBlock[4] = sub_1D42B2680;
      void aBlock[5] = v39;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1D42E0280;
      uint64_t aBlock[3] = &unk_1F2C12CA0;
      uint64_t v41 = _Block_copy(aBlock);
      swift_retain();
      sub_1D42972D4(v40);
      swift_release();
      objc_msgSend(v37, sel_beaconGroupsForUUIDs_completion_, v38, v41);
      _Block_release(v41);

      return;
    }
  }
  unint64_t v27 = sub_1D44698F8();
  os_log_type_t v28 = sub_1D446A038();
  BOOL v29 = os_log_type_enabled(v27, v28);
  if (v16 > 30.0)
  {
    if (v29)
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 134217984;
      *(double *)uint64_t aBlock = v16;
      sub_1D446A188();
      _os_log_impl(&dword_1D4271000, v27, v28, "FMIPBeaconRefreshingController: Refresh queue seemed stuck (for %f sec), allowing refresh.", v30, 0xCu);
      MEMORY[0x1D9447730](v30, -1, -1);
    }

    goto LABEL_14;
  }
  if (v29)
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 134217984;
    *(double *)uint64_t aBlock = v16;
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v27, v28, "FMIPBeaconRefreshingController: Ignoring refresh, the previous one didn't finish, %fs ago", v42, 0xCu);
    MEMORY[0x1D9447730](v42, -1, -1);
  }

  *(unsigned char *)(v49 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_nextRefreshQueued) = 1;
}

uint64_t sub_1D42BE298()
{
  return sub_1D42BE2A4(v0[2], v0[3], v0[4]);
}

uint64_t sub_1D42BE2A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  swift_retain();
  sub_1D42972D4(a2);
  sub_1D42BE33C(sub_1D42B2D74, (uint64_t)v6);

  return swift_release();
}

void sub_1D42BE33C(NSObject *a1, uint64_t isEscapingClosureAtFileLocation)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v67 = v6;
  uint64_t v68 = v7;
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  char v64 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v57 - v10;
  uint64_t v69 = sub_1D4469618();
  uint64_t v66 = *(void *)(v69 - 8);
  uint64_t v12 = *(void *)(v66 + 64);
  uint64_t v13 = MEMORY[0x1F4188790](v69);
  MEMORY[0x1F4188790](v13);
  double v15 = (char *)&v57 - v14;
  uint64_t v16 = sub_1D4469108();
  uint64_t v72 = (void *)v16;
  uint64_t v73 = sub_1D444A534(&qword_1EBD7E550, MEMORY[0x1E4F619E0]);
  uint64_t v17 = sub_1D42BECB4(aBlock);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v17, *MEMORY[0x1E4F619D0], v16);
  LOBYTE(v16) = MEMORY[0x1D9445460](aBlock);
  sub_1D42BEC64((uint64_t)aBlock);
  if ((v16 & 1) == 0
    || *((unsigned char *)v2 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_shouldUseBeaconsOptimizationSPI) != 1)
  {
    unint64_t v61 = v2;
    long long v62 = a1;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    long long v65 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v60 = v5;
    uint64_t v63 = isEscapingClosureAtFileLocation;
    uint64_t v23 = sub_1D4469928();
    sub_1D42D7FAC(v23, (uint64_t)qword_1EBD83228);
    uint64_t v24 = sub_1D44698F8();
    os_log_type_t v25 = sub_1D446A038();
    BOOL v26 = os_log_type_enabled(v24, v25);
    uint64_t v27 = v68;
    if (v26)
    {
      os_log_type_t v28 = v15;
      BOOL v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      aBlock[0] = v30;
      *(_DWORD *)BOOL v29 = 136315138;
      v70[0] = sub_1D42CB9EC(0xD00000000000001BLL, 0x80000001D4484BB0, aBlock);
      sub_1D446A188();
      _os_log_impl(&dword_1D4271000, v24, v25, "FMIPBeaconRefreshingController: %s - Legacy SPI", v29, 0xCu);
      swift_arrayDestroy();
      uint64_t v27 = v68;
      MEMORY[0x1D9447730](v30, -1, -1);
      uint64_t v31 = v29;
      double v15 = v28;
      MEMORY[0x1D9447730](v31, -1, -1);
    }

    sub_1D4469608();
    sub_1D4469678();
    int v32 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    os_log_type_t v33 = v64;
    uint64_t v59 = v11;
    uint64_t v34 = v11;
    uint64_t v35 = v67;
    v32(v64, v34, v67);
    uint64_t v36 = v66;
    id v37 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
    uint64_t v58 = v15;
    v37(v65, v15, v69);
    uint64_t v38 = v27;
    unint64_t v39 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    unint64_t v40 = (v8 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v42 = (*(unsigned __int8 *)(v36 + 80) + v41 + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v43 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v43 + v39, v33, v35);
    *(void *)(v43 + v40) = v61;
    int v44 = (NSObject **)(v43 + v41);
    uint64_t v45 = (uint64_t)v62;
    uint64_t v46 = v63;
    *int v44 = v62;
    v44[1] = v46;
    (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v43 + v42, v65, v69);
    *(void *)(v43 + ((v12 + v42 + 7) & 0xFFFFFFFFFFFFFFF8)) = v60;
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = sub_1D444E8F0;
    *(void *)(v47 + 24) = v43;
    uint64_t v73 = (uint64_t)sub_1D42AEE88;
    uint64_t v74 = v47;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1D42AEDE4;
    uint64_t v72 = &unk_1F2C12E30;
    uint64_t v48 = _Block_copy(aBlock);
    uint64_t v49 = _Block_copy(v48);
    swift_retain();
    sub_1D42972D4(v45);
    uint64_t v50 = qword_1EBD7E6F0;
    swift_retain();
    if (v50 != -1) {
      swift_once();
    }
    uint64_t v51 = qword_1EBD7E6E8;
    swift_unknownObjectRetain();
    a1 = _os_activity_create(&dword_1D4271000, "FMIPBeaconRefreshingController.refreshBeacons", v51, OS_ACTIVITY_FLAG_DEFAULT);
    swift_unknownObjectRelease();
    uint64_t v52 = _Block_copy(v49);
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = v52;
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = sub_1D438C100;
    *(void *)(v54 + 24) = v53;
    v70[4] = sub_1D42AEE88;
    v70[5] = v54;
    v70[0] = MEMORY[0x1E4F143A8];
    v70[1] = 1107296256;
    v70[2] = sub_1D42AEDE4;
    v70[3] = &unk_1F2C12EA8;
    uint64_t v55 = _Block_copy(v70);
    swift_retain();
    swift_release();
    os_activity_apply(a1, v55);
    _Block_release(v55);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    _Block_release(v49);
    swift_unknownObjectRelease();
    _Block_release(v48);
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v68 + 8))(v59, v67);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v58, v69);
      swift_release();
      swift_release();
      char v56 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v56 & 1) == 0) {
        return;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
  if (qword_1EBD80068 != -1) {
LABEL_18:
  }
    swift_once();
  uint64_t v18 = sub_1D4469928();
  sub_1D42D7FAC(v18, (uint64_t)qword_1EBD83228);
  uint64_t v19 = sub_1D44698F8();
  os_log_type_t v20 = sub_1D446A038();
  if (os_log_type_enabled(v19, v20))
  {
    os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    aBlock[0] = v22;
    *(_DWORD *)os_log_type_t v21 = 136315138;
    v70[0] = sub_1D42CB9EC(0xD00000000000001BLL, 0x80000001D4484BB0, aBlock);
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v19, v20, "FMIPBeaconRefreshingController: %s - Optimized SPI", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v22, -1, -1);
    MEMORY[0x1D9447730](v21, -1, -1);
  }

  sub_1D42BED18((uint64_t)a1, isEscapingClosureAtFileLocation);
}

uint64_t sub_1D42BEC64(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t *sub_1D42BECB4(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void sub_1D42BED18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v36 = *v2;
  uint64_t v37 = a2;
  uint64_t v38 = sub_1D4469688();
  uint64_t v5 = *(void *)(v38 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v38);
  uint64_t v8 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v35 - v9;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1D4469928();
  sub_1D42D7FAC(v11, (uint64_t)qword_1EBD83228);
  uint64_t v12 = sub_1D44698F8();
  os_log_type_t v13 = sub_1D446A038();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_1D4271000, v12, v13, "FMIPBeaconRefreshingController: Refresh Beacon Groups", v14, 2u);
    MEMORY[0x1D9447730](v14, -1, -1);
  }

  sub_1D4469678();
  double v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  uint64_t v35 = v10;
  uint64_t v16 = v38;
  v15(v8, v10, v38);
  unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v18 = (v6 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v20 + v17, v8, v16);
  *(void *)(v20 + v18) = v3;
  os_log_type_t v21 = (uint64_t *)(v20 + v19);
  uint64_t v22 = v37;
  *os_log_type_t v21 = a1;
  v21[1] = v22;
  *(void *)(v20 + ((v19 + 23) & 0xFFFFFFFFFFFFFFF8)) = v36;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_1D42AEE8C;
  *(void *)(v23 + 24) = v20;
  aBlock[4] = sub_1D42AEE88;
  void aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42AEDE4;
  uint64_t aBlock[3] = &unk_1F2C12B88;
  uint64_t v24 = _Block_copy(aBlock);
  os_log_type_t v25 = _Block_copy(v24);
  swift_retain();
  sub_1D42972D4(a1);
  uint64_t v26 = qword_1EBD7E6F0;
  swift_retain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = qword_1EBD7E6E8;
  swift_unknownObjectRetain();
  os_log_type_t v28 = _os_activity_create(&dword_1D4271000, "FMIPBeaconRefreshingController.refreshBeaconGroups", v27, OS_ACTIVITY_FLAG_DEFAULT);
  swift_unknownObjectRelease();
  BOOL v29 = _Block_copy(v25);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v29;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_1D438C100;
  *(void *)(v31 + 24) = v30;
  v39[4] = sub_1D42AEE88;
  v39[5] = v31;
  v39[0] = MEMORY[0x1E4F143A8];
  v39[1] = 1107296256;
  v39[2] = sub_1D42AEDE4;
  v39[3] = &unk_1F2C12C00;
  int v32 = _Block_copy(v39);
  swift_retain();
  swift_release();
  os_activity_apply(v28, v32);
  _Block_release(v32);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v25);
  swift_unknownObjectRelease();
  _Block_release(v24);
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v35, v38);
  swift_release();
  swift_release();
  char v34 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v34) {
LABEL_11:
  }
    __break(1u);
}

uint64_t sub_1D42BF230(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D4469958();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D44699B8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshQueue);
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v3;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_1D42BE298;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C134C0;
  double v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1D42972D4(a1);
  sub_1D4469988();
  v17[1] = MEMORY[0x1E4FBC860];
  sub_1D444A534((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_1D42BF510(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42BF558(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42BF5A0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D42DB55C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42BF5F0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D42DB55C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1D42BF634()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80);
  unint64_t v2 = (*(void *)(*(void *)(v0[2] - 8) + 64) + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D42DA1F8((uint64_t)v0 + v1, *(uint64_t *)((char *)v0 + v2), *(void **)((char *)v0 + ((v2 + 15) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t *)((char *)v0 + ((v2 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *((unsigned __int8 *)v0 + ((v2 + 15) & 0xFFFFFFFFFFFFFFF8) + 16), v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1D42BF6D4()
{
  return sub_1D42BF6DC(v0);
}

uint64_t sub_1D42BF6DC(uint64_t a1)
{
  unint64_t v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_initializedSubsystems);
  swift_beginAccess();
  uint64_t v2 = *v1;
  *v1 |= 2uLL;
  uint64_t v4 = v2;
  return sub_1D4375E68(&v4);
}

uint64_t sub_1D42BF73C()
{
  return sub_1D42BF744(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D42BF744(uint64_t a1, uint64_t a2)
{
  uint64_t v112 = sub_1D4469958();
  uint64_t v111 = *(void *)(v112 - 8);
  MEMORY[0x1F4188790](v112);
  uint64_t v109 = (char *)v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1D44699B8();
  uint64_t v108 = *(void *)(v110 - 8);
  MEMORY[0x1F4188790](v110);
  uint64_t v107 = (char *)v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7E710);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v121 = (uint64_t)v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  unint64_t v143 = (char *)v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v106 - v11;
  uint64_t v13 = sub_1D4469688();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  unint64_t v142 = (char *)v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v149 = (char *)v106 - v17;
  uint64_t v18 = type metadata accessor for FMIPItem();
  uint64_t v113 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v131 = (uint64_t)v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v135 = (uint64_t)v106 - v21;
  uint64_t v128 = type metadata accessor for FMIPItemGroup();
  uint64_t v22 = MEMORY[0x1F4188790](v128);
  uint64_t v126 = (uint64_t)v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v120 = (char *)v106 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v127 = (void *)((char *)v106 - v27);
  MEMORY[0x1F4188790](v26);
  uint64_t v125 = (uint64_t)v106 - v29;
  unint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v119 = *(void *)(a1 + 16);
  if (!v119)
  {
    uint64_t v96 = MEMORY[0x1E4FBC860];
LABEL_45:
    uint64_t v97 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager;
    swift_retain();
    BOOL v98 = sub_1D42C0758(v96);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v98)
    {
      uint64_t v99 = *(void *)(*(void *)(a2 + v97) + 288);
      uint64_t v100 = swift_allocObject();
      *(void *)(v100 + 16) = a2;
      *(void *)(v100 + 24) = v99;
      aBlock[4] = sub_1D438A040;
      void aBlock[5] = v100;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1D42BD950;
      uint64_t aBlock[3] = &unk_1F2C0B900;
      uint64_t v101 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      unint64_t v102 = v30;
      uint64_t v103 = v107;
      sub_1D4469988();
      unint64_t v151 = v102;
      sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
      sub_1D42D5DA0(&qword_1EBD7FD78);
      sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
      long long v104 = v109;
      uint64_t v105 = v112;
      sub_1D446A1F8();
      MEMORY[0x1D9446420](0, v103, v104, v101);
      _Block_release(v101);
      (*(void (**)(char *, uint64_t))(v111 + 8))(v104, v105);
      (*(void (**)(char *, uint64_t))(v108 + 8))(v103, v110);
      return swift_release();
    }
    return result;
  }
  uint64_t v118 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager;
  unint64_t v115 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v117 = a1 + v115;
  uint64_t v150 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v31 = *(void *)(v28 + 72);
  uint64_t v144 = v14 + 16;
  uint64_t v147 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v148 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  unint64_t v146 = (void (**)(char *, uint64_t))(v14 + 8);
  v106[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  uint64_t v141 = 0;
  unint64_t v130 = v30;
  uint64_t v116 = a2;
  uint64_t v133 = v12;
  uint64_t v137 = v14;
  uint64_t v114 = v31;
  while (1)
  {
    uint64_t v124 = v32;
    uint64_t v33 = v117 + v31 * v32;
    char v34 = v127;
    sub_1D42CA6F0(v33, (uint64_t)v127, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v35 = *(void *)(a2 + v118);
    swift_beginAccess();
    uint64_t v36 = *(void *)(v35 + 280);
    uint64_t v37 = *(void *)((char *)v34 + *(int *)(v128 + 52));
    uint64_t v38 = v34[7];
    aBlock[0] = v30;
    uint64_t v39 = *(void *)(v36 + 16);
    uint64_t v140 = v37;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39)
    {
      uint64_t v123 = v38;
      uint64_t v40 = 0;
      unint64_t v41 = (*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
      uint64_t v42 = *(void *)(v113 + 72);
      uint64_t v122 = v36;
      unint64_t v129 = v41;
      uint64_t v43 = v36 + v41;
      int v44 = v143;
      uint64_t v45 = v135;
      uint64_t v132 = v39;
      uint64_t v136 = v42;
      uint64_t v138 = v43;
      while (1)
      {
        sub_1D42CA6F0(v43 + v42 * v40, v45, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        sub_1D4469628();
        uint64_t v46 = *v150;
        if ((*v150)(v12, 1, v13) == 1)
        {
          sub_1D4276C3C((uint64_t)v12, (uint64_t *)&unk_1EBD7E930);
        }
        else
        {
          uint64_t v47 = *v147;
          (*v147)(v149, v12, v13);
          uint64_t v48 = *(void *)(v140 + 16);
          if (v48)
          {
            unint64_t v134 = (unint64_t)v148 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
            uint64_t v139 = v40;
            uint64_t v49 = v140 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
            uint64_t v145 = *(void *)(v14 + 72);
            uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
            swift_bridgeObjectRetain();
            while (1)
            {
              v50(v44, v49, v13);
              uint64_t v51 = *v148;
              (*v148)(v44, 0, 1, v13);
              if (v46(v44, 1, v13) == 1)
              {
                uint64_t v12 = v133;
                uint64_t v14 = v137;
                uint64_t v45 = v135;
                uint64_t v39 = v132;
                uint64_t v40 = v139;
                uint64_t v42 = v136;
                uint64_t v43 = v138;
                goto LABEL_18;
              }
              uint64_t v52 = v13;
              uint64_t v53 = v142;
              v47(v142, v44, v52);
              sub_1D42C61DC(&qword_1EA6CA0E8, MEMORY[0x1E4F27990]);
              char v54 = sub_1D4469AF8();
              uint64_t v55 = *v146;
              char v56 = v53;
              uint64_t v13 = v52;
              (*v146)(v56, v52);
              if (v54) {
                break;
              }
              v49 += v145;
              --v48;
              int v44 = v143;
              if (!v48)
              {
                uint64_t v12 = v133;
                uint64_t v45 = v135;
                uint64_t v39 = v132;
                uint64_t v40 = v139;
                uint64_t v42 = v136;
                uint64_t v43 = v138;
                goto LABEL_16;
              }
            }
            swift_bridgeObjectRelease();
            v55(v149, v52);
            sub_1D42CAAD0(v135, v131, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            uint64_t v57 = aBlock[0];
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v40 = v139;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1D4337258(0, *(void *)(v57 + 16) + 1, 1);
              uint64_t v57 = aBlock[0];
            }
            uint64_t v12 = v133;
            uint64_t v14 = v137;
            uint64_t v42 = v136;
            unint64_t v60 = *(void *)(v57 + 16);
            unint64_t v59 = *(void *)(v57 + 24);
            if (v60 >= v59 >> 1)
            {
              sub_1D4337258(v59 > 1, v60 + 1, 1);
              uint64_t v57 = aBlock[0];
            }
            *(void *)(v57 + 16) = v60 + 1;
            sub_1D42CAAD0(v131, v57 + v129 + v60 * v42, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            int v44 = v143;
            uint64_t v45 = v135;
            uint64_t v39 = v132;
            uint64_t v43 = v138;
            goto LABEL_7;
          }
          uint64_t v51 = *v148;
          swift_bridgeObjectRetain();
          uint64_t v42 = v136;
          uint64_t v43 = v138;
LABEL_16:
          v51(v44, 1, 1, v13);
          uint64_t v14 = v137;
LABEL_18:
          swift_bridgeObjectRelease();
          (*v146)(v149, v13);
        }
        sub_1D42CA8E8(v45, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_7:
        if (++v40 == v39)
        {
          uint64_t v61 = aBlock[0];
          uint64_t v38 = v123;
          goto LABEL_26;
        }
      }
    }
    uint64_t v61 = v30;
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v62 = *(void *)(v38 + 16);
    if (v62) {
      break;
    }
    uint64_t v78 = v38;
    uint64_t v63 = MEMORY[0x1E4FBC860];
LABEL_37:
    uint64_t v79 = v61;
    uint64_t v80 = sub_1D4351F50(v63);
    swift_bridgeObjectRelease();
    uint64_t v81 = v127;
    uint64_t v83 = v127[2];
    uint64_t v82 = v127[3];
    uint64_t v84 = *v127;
    unint64_t v85 = v120;
    *((void *)v120 + 1) = v127[1];
    v85[2] = v83;
    uint64_t v86 = v128;
    *(void *)((char *)v85 + *(int *)(v128 + 52)) = v140;
    uint64_t v87 = v81[4];
    void v85[3] = v82;
    v85[4] = v87;
    v85[5] = v79;
    v85[6] = v80;
    uint64_t v88 = v81[9];
    v85[8] = v81[8];
    v85[9] = v88;
    v85[7] = v78;
    *unint64_t v85 = v84;
    uint64_t v89 = v121;
    sub_1D42A3A74((uint64_t)v81 + *(int *)(v86 + 48), v121, &qword_1EBD7E710);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D42CA8E8((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D4276C98(v89, (uint64_t)v85 + *(int *)(v86 + 48), &qword_1EBD7E710);
    uint64_t v90 = v125;
    sub_1D42CAAD0((uint64_t)v85, v125, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA6F0(v90, v126, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      uint64_t v14 = v137;
      unint64_t v91 = v130;
    }
    else
    {
      unint64_t v91 = sub_1D43B038C(0, *(void *)(v130 + 16) + 1, 1, v130);
      uint64_t v14 = v137;
    }
    unint64_t v93 = *(void *)(v91 + 16);
    unint64_t v92 = *(void *)(v91 + 24);
    a2 = v116;
    unint64_t v30 = MEMORY[0x1E4FBC860];
    if (v93 >= v92 >> 1) {
      unint64_t v91 = sub_1D43B038C(v92 > 1, v93 + 1, 1, v91);
    }
    uint64_t v94 = v124 + 1;
    *(void *)(v91 + 16) = v93 + 1;
    unint64_t v130 = v91;
    uint64_t v95 = v91 + v115 + v93 * v114;
    uint64_t v31 = v114;
    sub_1D42CAAD0(v126, v95, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA8E8(v125, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v32 = v94;
    if (v94 == v119)
    {
      swift_bridgeObjectRelease();
      uint64_t v96 = v130;
      goto LABEL_45;
    }
  }
  aBlock[0] = MEMORY[0x1E4FBC860];
  swift_retain();
  sub_1D4337228(0, v62, 0);
  uint64_t v63 = aBlock[0];
  uint64_t result = sub_1D4386D74(v38);
  uint64_t v65 = result;
  uint64_t v67 = v66;
  int v69 = v68 & 1;
  uint64_t v139 = v38 + 56;
  uint64_t v138 = v61;
  while ((v65 & 0x8000000000000000) == 0 && v65 < 1 << *(unsigned char *)(v38 + 32))
  {
    if (((*(void *)(v139 + (((unint64_t)v65 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v65) & 1) == 0) {
      goto LABEL_49;
    }
    if (*(_DWORD *)(v38 + 36) != v67) {
      goto LABEL_50;
    }
    LODWORD(v145) = v69;
    swift_retain();
    uint64_t v70 = swift_bridgeObjectRetain();
    uint64_t v71 = v141;
    uint64_t v72 = sub_1D4387714(v70, v61);
    uint64_t v141 = v71;
    swift_release();
    uint64_t v73 = sub_1D4352030(v72);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    aBlock[0] = v63;
    unint64_t v75 = *(void *)(v63 + 16);
    unint64_t v74 = *(void *)(v63 + 24);
    if (v75 >= v74 >> 1)
    {
      sub_1D4337228(v74 > 1, v75 + 1, 1);
      uint64_t v63 = aBlock[0];
    }
    *(void *)(v63 + 16) = v75 + 1;
    *(void *)(v63 + 8 * v75 + 32) = v73;
    uint64_t result = sub_1D4449D08(v65, v67, v145 & 1, v38);
    uint64_t v65 = result;
    uint64_t v67 = v76;
    int v69 = v77 & 1;
    --v62;
    uint64_t v61 = v138;
    if (!v62)
    {
      uint64_t v78 = v38;
      sub_1D4329478(result, v76, v69);
      swift_release();
      uint64_t v12 = v133;
      goto LABEL_37;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

BOOL sub_1D42C0758(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 288);
  swift_bridgeObjectRetain();
  char v5 = sub_1D42C0A74(a1, v4);
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    *(void *)(v2 + 288) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = sub_1D42801AC(v6);
    swift_bridgeObjectRelease();
    *(void *)(v2 + 288) = v7;
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v2 + 24) == 1 && *(void *)(v2 + 320))
    {
      swift_retain();
      uint64_t v8 = swift_bridgeObjectRetain();
      sub_1D428ABC4(v8, (uint64_t)&unk_1F2C0CA10, (uint64_t)sub_1D439EB88, (uint64_t)&unk_1F2C0CA28);
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    unint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1D42B9654(v9);
    swift_bridgeObjectRelease();
    *(void *)(v2 + 80) = v10;
    swift_bridgeObjectRelease();
    if (MEMORY[0x1D9447840](v2 + 32))
    {
      uint64_t v11 = *(void *)(v2 + 80);
      swift_bridgeObjectRetain();
      sub_1D428CE28(v2, v11);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
  }
  return (v5 & 1) == 0;
}

uint64_t sub_1D42C08D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, char *), uint64_t (*a6)(void))
{
  uint64_t v11 = a3(0) - 8;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18 == *(void *)(a2 + 16))
  {
    if (!v18 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v28 = a2;
      uint64_t v19 = a5;
      unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v21 = *(void *)(v15 + 72);
      uint64_t v22 = v18 - 1;
      do
      {
        sub_1D42D2370(a1 + v20, (uint64_t)v17, a4);
        sub_1D42D2370(v28 + v20, (uint64_t)v14, a4);
        char v23 = v19(v17, v14);
        sub_1D42D2178((uint64_t)v14, a6);
        sub_1D42D2178((uint64_t)v17, a6);
        BOOL v25 = v22-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v20 += v21;
      }
      while (v25);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_1D42C0A74(uint64_t a1, uint64_t a2)
{
  return sub_1D42C08D8(a1, a2, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup, (uint64_t (*)(char *, char *))_s8FMIPCore13FMIPItemGroupV2eeoiySbAC_ACtFZ_0, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
}

uint64_t sub_1D42C0AC8()
{
  return sub_1D42C0AD4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1D42C0AD4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  v45[1] = a4;
  uint64_t v46 = a3;
  uint64_t v59 = a2;
  uint64_t v64 = a1;
  uint64_t v62 = sub_1D4469958();
  uint64_t v4 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v61 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1D44699B8();
  uint64_t v6 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v58 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D4469928();
  uint64_t v11 = (void *)sub_1D42D7FAC(v8, (uint64_t)qword_1EBD83228);
  unint64_t v9 = v64;
  swift_bridgeObjectRetain_n();
  uint64_t v57 = v11;
  uint64_t v10 = sub_1D44698F8();
  LOBYTE(v11) = sub_1D446A038();
  uint64_t v12 = v9 >> 62;
  if (!os_log_type_enabled(v10, (os_log_type_t)v11))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  unint64_t v9 = swift_slowAlloc();
  *(_DWORD *)unint64_t v9 = 134217984;
  if (v12) {
    goto LABEL_30;
  }
  uint64_t v13 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    aBlock[0] = v13;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v10, (os_log_type_t)v11, "FMLocationShifter: processing %ld shifting request", (uint8_t *)v9, 0xCu);
    MEMORY[0x1D9447730](v9, -1, -1);

LABEL_8:
    uint64_t v14 = swift_allocObject();
    uint64_t v63 = v14;
    *(void *)(v14 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v11 = (void *)(v14 + 16);
    if (v12)
    {
      if (v64 < 0) {
        uint64_t v10 = v64;
      }
      else {
        uint64_t v10 = (v64 & 0xFFFFFFFFFFFFFF8);
      }
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1D446A498();
      if (!v12) {
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v12) {
        goto LABEL_28;
      }
    }
    uint64_t v15 = self;
    if (v12 >= 1) {
      break;
    }
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1D446A498();
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = (void *)v15;
  uint64_t v18 = 0;
  unint64_t v19 = v64 & 0xC000000000000001;
  uint64_t v52 = v67;
  uint64_t v51 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v50 = (void (**)(char *, uint64_t))(v6 + 8);
  unint64_t v20 = (SEL *)&property descriptor for FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback;
  uint64_t v21 = (SEL *)&property descriptor for FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback;
  unint64_t v49 = 0x80000001D4480520;
  *(void *)&long long v16 = 136315138;
  long long v48 = v16;
  uint64_t v47 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v55 = v12;
  char v56 = v11;
  unint64_t v53 = v64 & 0xC000000000000001;
  char v54 = (void *)v15;
  do
  {
    if (v19)
    {
      uint64_t v29 = MEMORY[0x1D9446710](v18, v64);
    }
    else
    {
      uint64_t v29 = *(void *)(v64 + 8 * v18 + 32);
      swift_retain();
    }
    unint64_t v30 = *(void **)(v29 + 16);
    [v30 v20[256]];
    double v32 = v31;
    [v30 v20[256]];
    if (objc_msgSend(v17, v21[316], v32))
    {
      id v33 = objc_allocWithZone(MEMORY[0x1E4F61568]);
      char v34 = (void *)sub_1D4469B08();
      id v35 = objc_msgSend(v33, sel_initWithDescription_andTimeout_, v34, 60.0);

      swift_retain_n();
      uint64_t v36 = sub_1D44698F8();
      os_log_type_t v37 = sub_1D446A038();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        uint64_t v65 = v29;
        aBlock[0] = v39;
        *(_DWORD *)uint64_t v38 = v48;
        type metadata accessor for FMLocationShiftingRequest();
        swift_retain();
        uint64_t v40 = sub_1D4469B68();
        *(void *)(v38 + 4) = sub_1D42CB9EC(v40, v41, aBlock);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D4271000, v36, v37, "FMLocationShifter: processing shifting request %s", (uint8_t *)v38, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v39, -1, -1);
        MEMORY[0x1D9447730](v38, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      uint64_t v22 = v59;
      char v23 = (void *)swift_allocObject();
      void v23[2] = v22;
      v23[3] = v29;
      v23[4] = v63;
      v23[5] = v35;
      v67[2] = sub_1D4359C8C;
      v67[3] = v23;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      v67[0] = sub_1D42BD950;
      v67[1] = &unk_1F2C09798;
      uint64_t v24 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_retain();
      id v25 = v35;
      uint64_t v26 = v58;
      sub_1D4469988();
      uint64_t v65 = MEMORY[0x1E4FBC860];
      sub_1D42DDA8C((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
      sub_1D42D5DA0(&qword_1EBD7FD78);
      sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
      uint64_t v28 = v61;
      uint64_t v27 = v62;
      sub_1D446A1F8();
      MEMORY[0x1D9446420](0, v26, v28, v24);
      _Block_release(v24);
      (*v51)(v28, v27);
      (*v50)(v26, v60);
      swift_release();
      objc_msgSend(v25, sel_wait);

      uint64_t v12 = v55;
      uint64_t v11 = v56;
      unint64_t v19 = v53;
      uint64_t v17 = v54;
      unint64_t v20 = (SEL *)&property descriptor for FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback;
      uint64_t v21 = (SEL *)&property descriptor for FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback;
    }
    else
    {
      swift_beginAccess();
      uint64_t v42 = swift_retain();
      MEMORY[0x1D94460A0](v42);
      if (*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1D4469DB8();
      }
      sub_1D4469E08();
      sub_1D4469D98();
      swift_endAccess();
    }
    ++v18;
    swift_release();
  }
  while (v12 != v18);
LABEL_28:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v43 = swift_bridgeObjectRetain();
  v46(v43);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42C12EC(unint64_t a1)
{
  return sub_1D42C12F8(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_1D42C12F8(unint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  unint64_t v5 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1D446A498();
    uint64_t v6 = result;
    os_log_type_t v37 = a3;
    if (result) {
      goto LABEL_3;
    }
LABEL_22:
    uint64_t v10 = MEMORY[0x1E4FBC868];
LABEL_23:
    swift_bridgeObjectRelease();
    v37(v10);
    return swift_bridgeObjectRelease();
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  os_log_type_t v37 = a3;
  if (!v6) {
    goto LABEL_22;
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    unint64_t v9 = v5 & 0xC000000000000001;
    uint64_t v10 = MEMORY[0x1E4FBC868];
    uint64_t v39 = a2;
    unint64_t v40 = v5;
    unint64_t v38 = v5 & 0xC000000000000001;
    while (1)
    {
      if (v9)
      {
        uint64_t v11 = (void *)MEMORY[0x1D9446710](v8, v5);
        if (*(void *)(a2 + 16)) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v11 = *(void **)(v5 + 8 * v8 + 32);
        swift_retain();
        if (*(void *)(a2 + 16))
        {
LABEL_11:
          uint64_t v13 = v11[3];
          uint64_t v12 = v11[4];
          swift_bridgeObjectRetain();
          unint64_t v14 = sub_1D42C4FCC(v13, v12);
          if (v15)
          {
            uint64_t v16 = *(void *)(a2 + 56) + 24 * v14;
            char v17 = *(unsigned char *)v16;
            char v18 = *(unsigned char *)(v16 + 1);
            char v19 = *(unsigned char *)(v16 + 2);
            uint64_t v20 = v6;
            char v21 = *(unsigned char *)(v16 + 3);
            double v22 = *(double *)(v16 + 16);
            id v42 = *(id *)(v16 + 8);
            swift_bridgeObjectRelease();
            char v23 = (void *)v11[2];
            char v43 = v21;
            sub_1D42B7188(v23, &v43, v17, v18, v19, (uint64_t)v44, v22);
            int v24 = LOBYTE(v44[0]);
            int v25 = BYTE1(v44[0]);
            int v26 = BYTE2(v44[0]);
            uint64_t v27 = (void *)v44[1];
            double v28 = *(double *)&v44[2];
            int v29 = BYTE3(v44[0]);
            uint64_t v30 = v11[4];
            uint64_t v41 = v11[3];
            swift_bridgeObjectRetain();
            id v31 = v27;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v44[0] = v10;
            BOOL v33 = v25 == 0;
            uint64_t v6 = v20;
            a2 = v39;
            if (v33) {
              int v34 = 0;
            }
            else {
              int v34 = 256;
            }
            int v35 = v34 | v24;
            if (v26) {
              int v36 = 0x10000;
            }
            else {
              int v36 = 0;
            }
            sub_1D42C158C(v35 | v36 | (v29 << 24), (uint64_t)v31, v41, v30, isUniquelyReferenced_nonNull_native, v28);
            uint64_t v10 = v44[0];
            swift_release();

            unint64_t v9 = v38;
            unint64_t v5 = v40;
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_release();
          }
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
      }
      swift_release();
LABEL_6:
      if (v6 == ++v8) {
        goto LABEL_23;
      }
    }
  }
  __break(1u);
  return result;
}

void sub_1D42C158C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6)
{
  uint64_t v7 = (void **)v6;
  unint64_t v14 = (void *)*v6;
  unint64_t v16 = sub_1D42C4FCC(a3, a4);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a5 & 1) != 0)
  {
LABEL_7:
    double v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 24 * v16;

      *(unsigned char *)uint64_t v23 = a1 & 1;
      *(unsigned char *)(v23 + 1) = BYTE1(a1) & 1;
      *(unsigned char *)(v23 + 2) = BYTE2(a1) & 1;
      *(unsigned char *)(v23 + 3) = HIBYTE(a1);
      *(void *)(v23 + 8) = a2;
      *(double *)(v23 + 16) = a6;
      return;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a5 & 1) == 0)
  {
    sub_1D43D8F64();
    goto LABEL_7;
  }
  sub_1D42C1798(v19, a5 & 1);
  unint64_t v24 = sub_1D42C4FCC(a3, a4);
  if ((v20 & 1) != (v25 & 1))
  {
LABEL_15:
    sub_1D446A7A8();
    __break(1u);
    return;
  }
  unint64_t v16 = v24;
  double v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1D42C1724(v16, a3, a4, a1 & 0xFF010101, a2, v22, a6);

  swift_bridgeObjectRetain();
}

unint64_t sub_1D42C1724(unint64_t result, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void *a6, double a7)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v7 = (void *)(a6[6] + 16 * result);
  *uint64_t v7 = a2;
  v7[1] = a3;
  uint64_t v8 = a6[7] + 24 * result;
  *(unsigned char *)uint64_t v8 = a4 & 1;
  *(unsigned char *)(v8 + 1) = BYTE1(a4) & 1;
  *(unsigned char *)(v8 + 2) = BYTE2(a4) & 1;
  *(unsigned char *)(v8 + 3) = HIBYTE(a4);
  *(void *)(v8 + 8) = a5;
  *(double *)(v8 + 16) = a7;
  uint64_t v9 = a6[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a6[2] = v11;
  }
  return result;
}

uint64_t sub_1D42C1798(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1D42D5DA0(&qword_1EA6CA340);
  char v44 = a2;
  uint64_t v6 = sub_1D446A4B8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  id v42 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v40 = v2;
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v41) {
      break;
    }
    uint64_t v23 = v42;
    unint64_t v24 = v42[v22];
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v41) {
        goto LABEL_33;
      }
      unint64_t v24 = v42[v13];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v41)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v40;
          if ((v44 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v42[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v41) {
              goto LABEL_33;
            }
            unint64_t v24 = v42[v13];
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 24 * v21;
    char v34 = *(unsigned char *)v33;
    char v35 = *(unsigned char *)(v33 + 1);
    char v45 = *(unsigned char *)(v33 + 3);
    char v46 = *(unsigned char *)(v33 + 2);
    int v36 = *(void **)(v33 + 8);
    uint64_t v37 = *(void *)(v33 + 16);
    if ((v44 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v38 = v36;
    }
    sub_1D446A828();
    sub_1D4469BC8();
    uint64_t result = sub_1D446A888();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    BOOL v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *BOOL v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
    *(unsigned char *)uint64_t v19 = v34;
    *(unsigned char *)(v19 + 1) = v35;
    *(unsigned char *)(v19 + 2) = v46;
    *(unsigned char *)(v19 + 3) = v45;
    *(void *)(v19 + 8) = v36;
    *(void *)(v19 + 16) = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v23 = v42;
  if ((v44 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
  if (v39 >= 64) {
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v39;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_1D42C1B00()
{
  sub_1D42C1B10(*(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 16));
}

void sub_1D42C1B10(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1D4469618();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_allocWithZone(MEMORY[0x1E4F61568]);
  unint64_t v15 = (void *)sub_1D4469B08();
  id v16 = objc_msgSend(v14, sel_initWithDescription_andTimeout_, v15, 120.0);

  uint64_t v17 = *a2;
  if (type metadata accessor for FMIPRefreshClientRequest() != v17)
  {
    sub_1D4469608();
    uint64_t v18 = a1 + qword_1EBD831E8;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 40))(v18, v13, v10);
    swift_endAccess();
  }
  sub_1D43FB7F4((uint64_t)a2);
  uint64_t v26 = type metadata accessor for FMIPBaseRequest();
  uint64_t v27 = MEMORY[0x1E4F616D0];
  int64_t v25 = a2;
  v24[3] = v26;
  v24[4] = sub_1D42C626C(&qword_1EBD7CCA0, (void (*)(uint64_t))type metadata accessor for FMIPBaseRequest);
  v24[0] = a2;
  uint64_t v19 = self;
  swift_retain_n();
  id v20 = objc_msgSend(v19, sel_processInfo);
  id v21 = objc_msgSend(v20, sel_processName);

  sub_1D4469B38();
  int64_t v22 = (void *)swift_allocObject();
  v22[2] = a5;
  v22[3] = a1;
  v22[4] = a2;
  void v22[5] = a3;
  v22[6] = a4;
  v22[7] = v16;
  swift_retain();
  swift_retain();
  swift_retain();
  id v23 = v16;
  sub_1D44697F8();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1D42BEC64((uint64_t)v24);
  sub_1D42BEC64((uint64_t)&v25);
  objc_msgSend(v23, sel_wait);
}

uint64_t type metadata accessor for FMIPBaseRequest()
{
  uint64_t result = qword_1EBD7CCA8;
  if (!qword_1EBD7CCA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1D42C1E70()
{
  sub_1D42C1E78(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1D42C1E78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7CB80);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 64;
  uint64_t v6 = sub_1D4469618();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 64;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v46 - v11 + 64;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = Strong;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_isRefreshing) == 1)
    {
      unint64_t v15 = (double *)(a2 + 16);
      uint64_t v16 = Strong + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_lastRefreshTime;
      swift_beginAccess();
      sub_1D42A3A74(v16, (uint64_t)v5, &qword_1EBD7CB80);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      {
        sub_1D4276C3C((uint64_t)v5, &qword_1EBD7CB80);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
        swift_beginAccess();
        uint64_t v21 = OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_minCallbackInterval;
        if (*v15 >= *(double *)(v14 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_minCallbackInterval))
        {
          (*(void (**)(char *, uint64_t, double))(v7 + 8))(v12, v6, *v15);
        }
        else
        {
          sub_1D4469608();
          sub_1D44695B8();
          double v23 = v22;
          double v24 = *(double *)(v7 + 8);
          (*(void (**)(char *, uint64_t))&v24)(v10, v6);
          sub_1D44695B8();
          if (qword_1EBD80068 != -1)
          {
            double v45 = v25;
            swift_once();
            double v25 = v45;
          }
          double v26 = v23 - v25;
          uint64_t v27 = sub_1D4469928();
          sub_1D42D7FAC(v27, (uint64_t)qword_1EBD83228);
          BOOL v28 = sub_1D44698F8();
          os_log_type_t v29 = sub_1D446A038();
          if (os_log_type_enabled(v28, v29))
          {
            uint64_t v30 = (uint8_t *)swift_slowAlloc();
            double v45 = v24;
            uint64_t v31 = v30;
            *(_DWORD *)uint64_t v30 = 134217984;
            *(double *)uint64_t v47 = v26;
            sub_1D446A188();
            _os_log_impl(&dword_1D4271000, v28, v29, "FMIPRefreshingController: last refresh interval %f ms", v31, 0xCu);
            uint64_t v32 = v31;
            double v24 = v45;
            MEMORY[0x1D9447730](v32, -1, -1);
          }

          (*(void (**)(char *, uint64_t))&v24)(v12, v6);
          double v33 = *(double *)(v14 + v21);
          if (v26 < v33)
          {
            double v34 = v33 + v26 * -1000.0;
            swift_beginAccess();
            double v35 = 0.0;
            if (v34 > 0.0) {
              double v35 = v34;
            }
            *unint64_t v15 = v35;
          }
        }
      }
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1D4469928();
      sub_1D42D7FAC(v36, (uint64_t)qword_1EBD83228);
      swift_retain();
      uint64_t v37 = sub_1D44698F8();
      os_log_type_t v38 = sub_1D446A038();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v39 = 134217984;
        swift_beginAccess();
        v47[0] = *(void *)(a2 + 16);
        sub_1D446A188();
        swift_release();
        _os_log_impl(&dword_1D4271000, v37, v38, "FMIPRefreshingController: scheduling next refresh in %f ms", v39, 0xCu);
        MEMORY[0x1D9447730](v39, -1, -1);
      }
      else
      {

        swift_release();
      }
      uint64_t v40 = OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_refreshTimer;
      objc_msgSend(*(id *)(v14 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_refreshTimer), sel_invalidate);
      sub_1D4275AD0(0, &qword_1EA6CB350);
      swift_beginAccess();
      double v41 = *v15 / 1000.0;
      v47[3] = type metadata accessor for FMIPRefreshingController();
      v47[0] = v14;
      memset(v46, 0, sizeof(v46));
      swift_retain();
      id v42 = sub_1D42C2530(v47, (uint64_t)sel_refreshTimerFired, v46, 0, v41);
      id v43 = objc_msgSend(self, sel_mainRunLoop);
      objc_msgSend(v43, sel_addTimer_forMode_, v42, *MEMORY[0x1E4F1C3A0]);

      char v44 = *(void **)(v14 + v40);
      *(void *)(v14 + v40) = v42;
      swift_release();
    }
    else
    {
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_1D4469928();
      sub_1D42D7FAC(v17, (uint64_t)qword_1EBD83228);
      uint64_t v18 = sub_1D44698F8();
      os_log_type_t v19 = sub_1D446A038();
      if (os_log_type_enabled(v18, v19))
      {
        id v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v20 = 0;
        _os_log_impl(&dword_1D4271000, v18, v19, "FMIPRefreshingController: Not scheduling another refresh because refreshing is disabled", v20, 2u);
        MEMORY[0x1D9447730](v20, -1, -1);
        swift_release();
      }
      else
      {

        swift_release();
      }
    }
  }
}

id sub_1D42C2530(void *a1, uint64_t a2, void *a3, char a4, double a5)
{
  sub_1D42C26F4(a1, a1[3]);
  uint64_t v10 = sub_1D446A748();
  uint64_t v11 = a3[3];
  if (v11)
  {
    uint64_t v12 = sub_1D42C26F4(a3, a3[3]);
    v21[1] = v21;
    char v13 = a4;
    uint64_t v14 = a2;
    uint64_t v15 = *(void *)(v11 - 8);
    MEMORY[0x1F4188790](v12);
    uint64_t v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    uint64_t v18 = sub_1D446A748();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v11);
    a2 = v14;
    a4 = v13;
    sub_1D42BEC64((uint64_t)a3);
  }
  else
  {
    uint64_t v18 = 0;
  }
  id v19 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_timerWithTimeInterval_target_selector_userInfo_repeats_, v10, a2, v18, a4 & 1, a5);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1D42BEC64((uint64_t)a1);
  return v19;
}

void *sub_1D42C26F4(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t type metadata accessor for FMIPRefreshingController()
{
  uint64_t result = qword_1EBD7CFF8;
  if (!qword_1EBD7CFF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FMIPRefreshClientRequest()
{
  uint64_t result = qword_1EBD7CFC0;
  if (!qword_1EBD7CFC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D42C27D0()
{
  if (*(unsigned char *)(v0 + 25)) {
    int v1 = 256;
  }
  else {
    int v1 = 0;
  }
  int v2 = v1 | *(unsigned __int8 *)(v0 + 24);
  if (*(unsigned char *)(v0 + 26)) {
    int v3 = 0x10000;
  }
  else {
    int v3 = 0;
  }
  return sub_1D42C2814(*(char **)(v0 + 16), v2 | v3 | (*(unsigned __int8 *)(v0 + 27) << 24), *(void **)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_1D42C2814(char *a1, int a2, void *a3, double a4)
{
  uint64_t result = MEMORY[0x1D9447840](&a1[OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_delegate]);
  if (result)
  {
    __int16 v10 = a2 & 0x101;
    char v11 = BYTE2(a2) & 1;
    char v12 = HIBYTE(a2);
    char v13 = a3;
    double v14 = a4;
    id v9 = a3;
    sub_1D42C3448(a1, (unsigned __int8 *)&v10);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D42C28B8(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 17)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  int v3 = v2 | *(unsigned __int8 *)(v1 + 16);
  if (*(unsigned char *)(v1 + 18)) {
    int v4 = 0x10000;
  }
  else {
    int v4 = 0;
  }
  return sub_1D42C28FC(*(double *)(v1 + 32), a1, v3 | v4 | (*(unsigned __int8 *)(v1 + 19) << 24), *(void **)(v1 + 24), *(char **)(v1 + 40));
}

uint64_t sub_1D42C28FC(double a1, uint64_t a2, unsigned int a3, void *a4, char *a5)
{
  uint64_t v9 = sub_1D4469958();
  uint64_t v38 = *(void *)(v9 - 8);
  uint64_t v39 = v9;
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D44699B8();
  uint64_t v36 = *(void *)(v12 - 8);
  uint64_t v37 = v12;
  MEMORY[0x1F4188790](v12);
  double v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_1D42C2C8C(v15, (uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  if (v42)
  {
    a1 = *(double *)&v45;
    uint64_t v16 = v43;
    id v17 = v44;
    swift_bridgeObjectRelease();
    uint64_t v18 = ((unint64_t)v16 >> 8) & 1;
    unsigned int v19 = v16 & 1;
    uint64_t v20 = ((unint64_t)v16 >> 16) & 1;
    unint64_t v21 = (unint64_t)v16 >> 24;
  }
  else
  {
    LODWORD(v20) = HIWORD(a3) & 1;
    LODWORD(v18) = (a3 >> 8) & 1;
    unsigned int v19 = a3 & 1;
    LODWORD(v21) = HIBYTE(a3);
    id v17 = a4;
  }
  uint64_t v22 = 256;
  if (!v18) {
    uint64_t v22 = 0;
  }
  uint64_t v23 = v22 | v19;
  uint64_t v24 = 0x10000;
  if (!v20) {
    uint64_t v24 = 0;
  }
  unint64_t v25 = (v23 | v24) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v21 << 24);
  double v26 = &a5[OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_currentLocation];
  uint64_t v27 = *(void **)&a5[OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_currentLocation + 8];
  *(void *)double v26 = v25;
  *((void *)v26 + 1) = v17;
  *((double *)v26 + 2) = a1;
  id v28 = v17;

  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a5;
  *(unsigned char *)(v29 + 24) = v19;
  *(unsigned char *)(v29 + 25) = v18;
  *(unsigned char *)(v29 + 26) = v20;
  *(unsigned char *)(v29 + 27) = v21;
  *(void *)(v29 + 32) = v28;
  *(double *)(v29 + 40) = a1;
  double v45 = sub_1D42C27D0;
  uint64_t v46 = v29;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v42 = 1107296256;
  id v43 = sub_1D42BD950;
  char v44 = &unk_1F2C0FAD0;
  uint64_t v30 = _Block_copy(&aBlock);
  id v31 = v28;
  uint64_t v32 = a5;
  sub_1D4469988();
  uint64_t v40 = MEMORY[0x1E4FBC860];
  sub_1D42DDA8C((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  uint64_t v33 = v39;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v14, v11, v30);
  _Block_release(v30);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v33);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v37);
  return swift_release();
}

uint64_t sub_1D42C2C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1D42C2E10(a1);
  if (v6) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    uint64_t result = sub_1D42C2D50((uint64_t)v14, result, v5, 0, a1);
    char v7 = v14[0];
    char v8 = v14[1];
    char v9 = v14[2];
    char v10 = v14[3];
    uint64_t v11 = v15;
    uint64_t v12 = v16;
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v13;
    *(unsigned char *)(a2 + 16) = v7;
    *(unsigned char *)(a2 + 17) = v8;
    *(unsigned char *)(a2 + 18) = v9;
    *(unsigned char *)(a2 + 19) = v10;
    *(void *)(a2 + 24) = v11;
    *(void *)(a2 + 32) = v12;
  }
  return result;
}

uint64_t sub_1D42C2D50(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    uint64_t v6 = *(void *)(a5 + 56) + 24 * a2;
    char v7 = *(unsigned char *)(v6 + 1);
    char v8 = *(unsigned char *)(v6 + 2);
    char v9 = *(unsigned char *)(v6 + 3);
    char v10 = *(void **)(v6 + 8);
    uint64_t v11 = *(void *)(v6 + 16);
    *(unsigned char *)uint64_t result = *(unsigned char *)v6;
    *(unsigned char *)(result + 1) = v7;
    *(unsigned char *)(result + 2) = v8;
    *(unsigned char *)(result + 3) = v9;
    *(void *)(result + 8) = v10;
    *(void *)(result + 16) = v11;
    swift_bridgeObjectRetain();
    id v12 = v10;
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1D42C2E10(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  char v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void sub_1D42C2E98()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D4469618();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = *(void *)(v0 + qword_1EA6C9D80);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  sub_1D433313C((void *)(v9 + 16), v30);
  os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 24));
  uint64_t v10 = *(void *)&v30[0];
  swift_release();
  if (!*(void *)(v10 + 16) || (unint64_t v11 = sub_1D42C4FCC(0x6F43746E65696C63, 0xED0000747865746ELL), (v12 & 1) == 0))
  {
    long long v31 = 0u;
    long long v32 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_1D42CBAC0(*(void *)(v10 + 56) + 32 * v11, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  if (!*((void *)&v32 + 1))
  {
LABEL_11:
    sub_1D4276C3C((uint64_t)&v31, &qword_1EBD80050);
    goto LABEL_12;
  }
  sub_1D42D5DA0(&qword_1EBD7FD60);
  if (swift_dynamicCast())
  {
    uint64_t v13 = *(void *)&v30[0];
    sub_1D4469608();
    sub_1D44695B8();
    double v15 = v14;
    uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
    v16(v8, v2);
    uint64_t v17 = v1 + qword_1EBD83000;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v17, v2);
    sub_1D44695B8();
    double v19 = v18;
    v16(v6, v2);
    double v20 = v15 - v19;
    if ((~COERCE__INT64(v15 - v19) & 0x7FF0000000000000) != 0)
    {
      if (v20 > -9.22337204e18)
      {
        if (v20 < 9.22337204e18)
        {
          if ((unsigned __int128)((uint64_t)v20 * (__int128)1000) >> 64 == (1000 * (uint64_t)v20) >> 63)
          {
            *((void *)&v32 + 1) = MEMORY[0x1E4FBB550];
            *(void *)&long long v31 = 1000 * (uint64_t)v20;
            sub_1D42C5494(&v31, v30);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v29 = v13;
            sub_1D42C4E78(v30, 0x6576697463616E69, 0xEC000000656D6954, isUniquelyReferenced_nonNull_native);
            uint64_t v22 = v29;
            swift_bridgeObjectRelease();
            uint64_t v23 = (void *)(v1 + qword_1EBD7CC88);
            swift_beginAccess();
            *uint64_t v23 = v22;
            swift_bridgeObjectRelease();
            sub_1D43331A4();
            return;
          }
          goto LABEL_20;
        }
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_19;
  }
LABEL_12:
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1D4469928();
  sub_1D42D7FAC(v24, (uint64_t)qword_1EBD83228);
  unint64_t v25 = sub_1D44698F8();
  os_log_type_t v26 = sub_1D446A018();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl(&dword_1D4271000, v25, v26, "FMIPBaseRequest: inactive time not set because clientContext doesn't exist", v27, 2u);
    MEMORY[0x1D9447730](v27, -1, -1);
  }
}

uint64_t sub_1D42C32A8(__n128 a1)
{
  return sub_1D42C3910((uint64_t (*)(void, void, void, void, __n128))sub_1D42C32C0, a1);
}

uint64_t sub_1D42C32C0(uint64_t result, uint64_t a2, unsigned int a3, uint64_t a4, double a5)
{
  if ((*(unsigned char *)(result + OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_limitedPrecision) & 1) == 0
    && *(unsigned char *)(a2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_useRealtimeForItems) == 1)
  {
    unsigned int v8 = HIBYTE(a3);
    char v9 = a3 & 1;
    __int16 v17 = a3 & 0x101;
    int v10 = (a3 >> 8) & 1;
    int v11 = HIWORD(a3) & 1;
    char v18 = BYTE2(a3) & 1;
    char v19 = HIBYTE(a3);
    uint64_t v20 = a4;
    double v21 = a5;
    uint64_t v12 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager;
    uint64_t v13 = *(void *)(a2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager);
    swift_beginAccess();
    uint64_t v14 = *(void *)(v13 + 280);
    swift_bridgeObjectRetain();
    sub_1D4382280((unsigned __int8 *)&v17, v14, "FMIPManager: appending realtime location %{private}s", (uint64_t)&unk_1F2C0B618, (uint64_t)sub_1D4389EEC, (uint64_t)&unk_1F2C0B630);
    swift_bridgeObjectRelease();
    LOBYTE(v17) = v9;
    HIBYTE(v17) = v10;
    char v18 = v11;
    char v19 = v8;
    uint64_t v20 = a4;
    double v21 = a5;
    uint64_t v15 = *(void *)(a2 + v12);
    swift_beginAccess();
    uint64_t v16 = *(void *)(v15 + 80);
    swift_bridgeObjectRetain();
    sub_1D4382280((unsigned __int8 *)&v17, v16, "FMIPManager: appending realtime location to devices %{private}s", (uint64_t)&unk_1F2C0BC08, (uint64_t)sub_1D438A1C8, (uint64_t)&unk_1F2C0BC20);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D42C3448(void *a1, unsigned __int8 *a2)
{
  uint64_t v3 = v2;
  uint64_t v47 = a1;
  uint64_t v5 = sub_1D4469958();
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1D44699B8();
  uint64_t v49 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  long long v48 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *a2;
  int v44 = a2[1];
  int v10 = a2[2];
  int v46 = a2[3];
  int v11 = (void *)*((void *)a2 + 1);
  uint64_t v12 = (uint64_t (*)(uint64_t))*((void *)a2 + 2);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1D4469928();
  sub_1D42D7FAC(v13, (uint64_t)qword_1EBD83228);
  id v14 = v11;
  uint64_t v15 = sub_1D44698F8();
  os_log_type_t v16 = sub_1D446A038();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v40 = v3;
    char v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v42 = v5;
    uint64_t v20 = v19;
    uint64_t v50 = v19;
    double v41 = v7;
    *(_DWORD *)char v18 = 136380675;
    LOBYTE(aBlock) = v9;
    int v38 = v9;
    int v39 = v10;
    char v21 = v44;
    BYTE1(aBlock) = v44;
    BYTE2(aBlock) = v10;
    char v22 = v46;
    BYTE3(aBlock) = v46;
    uint64_t v52 = (uint64_t)v14;
    unint64_t v53 = v12;
    uint64_t v23 = FMIPLocation.debugDescription.getter();
    uint64_t aBlock = sub_1D42CB9EC(v23, v24, &v50);
    uint64_t v7 = v41;
    sub_1D446A188();

    char v25 = v22;
    LOBYTE(v10) = v39;
    swift_bridgeObjectRelease();
    os_log_type_t v26 = v16;
    char v27 = v38;
    _os_log_impl(&dword_1D4271000, v15, v26, "FMIPManager: didReceive locationControler %{private}s", v18, 0xCu);
    swift_arrayDestroy();
    uint64_t v28 = v20;
    uint64_t v5 = v42;
    MEMORY[0x1D9447730](v28, -1, -1);
    uint64_t v29 = v18;
    uint64_t v3 = v40;
    MEMORY[0x1D9447730](v29, -1, -1);
  }
  else
  {

    char v25 = v46;
    char v27 = v9;
    char v21 = v44;
  }
  uint64_t v30 = swift_allocObject();
  long long v31 = v47;
  *(void *)(v30 + 16) = v47;
  *(void *)(v30 + 24) = v3;
  *(unsigned char *)(v30 + 32) = v27;
  *(unsigned char *)(v30 + 33) = v21;
  *(unsigned char *)(v30 + 34) = v10;
  *(unsigned char *)(v30 + 35) = v25;
  *(void *)(v30 + 40) = v14;
  *(void *)(v30 + 48) = v12;
  uint64_t v55 = sub_1D42C32A8;
  uint64_t v56 = v30;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v52 = 1107296256;
  unint64_t v53 = sub_1D42BD950;
  char v54 = &unk_1F2C0BBD0;
  long long v32 = _Block_copy(&aBlock);
  id v33 = v14;
  id v34 = v31;
  swift_retain();
  uint64_t v35 = v48;
  sub_1D4469988();
  uint64_t v50 = MEMORY[0x1E4FBC860];
  sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v35, v7, v32);
  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v45);
  return swift_release();
}

uint64_t sub_1D42C3910(uint64_t (*a1)(void, void, void, void, __n128), __n128 a2)
{
  if (*(unsigned char *)(v2 + 33)) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  int v4 = v3 | *(unsigned __int8 *)(v2 + 32);
  if (*(unsigned char *)(v2 + 34)) {
    int v5 = 0x10000;
  }
  else {
    int v5 = 0;
  }
  a2.n128_u64[0] = *(void *)(v2 + 48);
  return a1(*(void *)(v2 + 16), *(void *)(v2 + 24), v4 | v5 | (*(unsigned __int8 *)(v2 + 35) << 24), *(void *)(v2 + 40), a2);
}

uint64_t sub_1D42C395C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7CBC0);
  MEMORY[0x1F4188790](v2 - 8);
  int v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMIPDevice();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)(v1 + qword_1EBD83028);
  if (v9)
  {
    uint64_t v30 = v6;
    uint64_t v31 = v5;
    uint64_t v10 = sub_1D42D5DA0(&qword_1EA6CB720);
    uint64_t v37 = v10;
    *(void *)&long long v36 = v9;
    uint64_t v11 = qword_1EA6C9D80;
    uint64_t v12 = *(void *)(v1 + qword_1EA6C9D80);
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v12 + 24));
    sub_1D433313C((void *)(v12 + 16), v34);
    os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 24));
    unint64_t v13 = *(void *)&v34[0];
    swift_release();
    unint64_t v35 = v13;
    long long v32 = v8;
    if (v10)
    {
      sub_1D42C5494(&v36, v34);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v33 = v13;
      unint64_t v35 = 0x8000000000000000;
      sub_1D42C4E78(v34, 0x65746E6F43706174, 0xEA00000000007478, isUniquelyReferenced_nonNull_native);
      unint64_t v15 = v33;
      uint64_t v16 = swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D4276C3C((uint64_t)&v36, &qword_1EBD80050);
      sub_1D43FC5A4(0x65746E6F43706174, 0xEA00000000007478, v34);
      uint64_t v16 = sub_1D4276C3C((uint64_t)v34, &qword_1EBD80050);
      unint64_t v15 = v35;
    }
    uint64_t v17 = *(void *)(v1 + v11);
    MEMORY[0x1F4188790](v16);
    *(&v30 - 2) = v15;
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v17 + 24));
    sub_1D4306B48((void *)(v17 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v17 + 24));
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v5 = v31;
    uint64_t v8 = v32;
    uint64_t v6 = v30;
  }
  sub_1D42E8064(v1 + qword_1EBD83030, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1D4276C3C((uint64_t)v4, &qword_1EBD7CBC0);
    if (!v9 || !*(void *)(v9 + 16))
    {
      uint64_t v37 = MEMORY[0x1E4FBB1A0];
      *(void *)&long long v36 = 7105633;
      *((void *)&v36 + 1) = 0xE300000000000000;
      swift_beginAccess();
      sub_1D42C4018((uint64_t)&v36, 0x64657463656C6573, 0xEE00656369766544);
      swift_endAccess();
      sub_1D43331A4();
    }
  }
  else
  {
    sub_1D42B2518((uint64_t)v4, (uint64_t)v8);
    uint64_t v18 = *v8;
    uint64_t v19 = v8[1];
    uint64_t v37 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v36 = v18;
    *((void *)&v36 + 1) = v19;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1D42C4018((uint64_t)&v36, 0x64657463656C6573, 0xEE00656369766544);
    swift_endAccess();
    sub_1D43331A4();
    uint64_t v37 = MEMORY[0x1E4FBB390];
    LOBYTE(v36) = 1;
    swift_beginAccess();
    sub_1D42C4018((uint64_t)&v36, 0x6F4C646C756F6873, 0xEC00000065746163);
    swift_endAccess();
    sub_1D43331A4();
    sub_1D42B24BC((uint64_t)v8);
  }
  uint64_t v20 = *(void *)(v1 + qword_1EBD83038);
  uint64_t v21 = MEMORY[0x1E4FBB550];
  uint64_t v37 = MEMORY[0x1E4FBB550];
  *(void *)&long long v36 = v20;
  swift_beginAccess();
  sub_1D42C4018((uint64_t)&v36, 0xD000000000000016, 0x80000001D4484530);
  swift_endAccess();
  uint64_t result = sub_1D43331A4();
  uint64_t v23 = (uint64_t *)(v1 + qword_1EA6E4A68);
  if ((*(unsigned char *)(v1 + qword_1EA6E4A68 + 48) & 1) == 0)
  {
    uint64_t v25 = v23[4];
    uint64_t v24 = v23[5];
    uint64_t v27 = v23[2];
    uint64_t v26 = v23[3];
    uint64_t v28 = *v23;
    uint64_t v29 = *(void *)(v1 + qword_1EA6E4A68 + 8);
    uint64_t v37 = v21;
    *(void *)&long long v36 = v28;
    swift_beginAccess();
    sub_1D42C4018((uint64_t)&v36, 0x3156676174726961, 0xE800000000000000);
    swift_endAccess();
    sub_1D43331A4();
    uint64_t v37 = v21;
    *(void *)&long long v36 = v29;
    swift_beginAccess();
    sub_1D42C4018((uint64_t)&v36, 0x3256676174726961, 0xE800000000000000);
    swift_endAccess();
    sub_1D43331A4();
    uint64_t v37 = v21;
    *(void *)&long long v36 = v27;
    swift_beginAccess();
    sub_1D42C4018((uint64_t)&v36, 0x3156616E6D66, 0xE600000000000000);
    swift_endAccess();
    sub_1D43331A4();
    uint64_t v37 = v21;
    *(void *)&long long v36 = v26;
    swift_beginAccess();
    sub_1D42C4018((uint64_t)&v36, 0x3256616E6D66, 0xE600000000000000);
    swift_endAccess();
    sub_1D43331A4();
    uint64_t v37 = v21;
    *(void *)&long long v36 = v25;
    swift_beginAccess();
    sub_1D42C4018((uint64_t)&v36, 0x6E6D66656C707061, 0xEB00000000315661);
    swift_endAccess();
    sub_1D43331A4();
    uint64_t v37 = v21;
    *(void *)&long long v36 = v24;
    swift_beginAccess();
    sub_1D42C4018((uint64_t)&v36, 0x6E6D66656C707061, 0xEB00000000325661);
    swift_endAccess();
    return sub_1D43331A4();
  }
  return result;
}

uint64_t sub_1D42C4018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_1D42C5494((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D42C4E78(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D4276C3C(a1, &qword_1EBD80050);
    sub_1D43FC5A4(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_1D4276C3C((uint64_t)v9, &qword_1EBD80050);
  }
}

uint64_t sub_1D42C40F0()
{
  uint64_t v0 = sub_1D42D5DA0(&qword_1EBD7CB80);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v91 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1D4469618();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  unint64_t v92 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  unint64_t v91 = (char *)&v91 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v91 - v9;
  sub_1D4469608();
  id v11 = objc_msgSend(self, sel_sharedInstance);
  uint64_t v12 = MEMORY[0x1E4FBB390];
  uint64_t v98 = MEMORY[0x1E4FBB390];
  LOBYTE(v97) = 1;
  sub_1D42C5494(&v97, v96);
  uint64_t v13 = MEMORY[0x1E4FBC868];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v99 = v13;
  sub_1D42C4E78(v96, 2037149030, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v15 = v99;
  swift_bridgeObjectRelease();
  uint64_t v98 = v12;
  LOBYTE(v97) = 1;
  sub_1D42C5494(&v97, v96);
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v99 = v15;
  sub_1D42C4E78(v96, 1752397168, 0xE400000000000000, v16);
  uint64_t v17 = v99;
  swift_bridgeObjectRelease();
  uint64_t v98 = MEMORY[0x1E4FBB550];
  *(void *)&long long v97 = 1;
  sub_1D42C5494(&v97, v96);
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v99 = v17;
  sub_1D42C4E78(v96, 0xD000000000000011, 0x80000001D447F8B0, v18);
  uint64_t v19 = v99;
  swift_bridgeObjectRelease();
  unint64_t v93 = v10;
  sub_1D4469518();
  uint64_t v98 = MEMORY[0x1E4FBB3D0];
  *(double *)&long long v97 = v20 * 1000.0;
  sub_1D42C5494(&v97, v96);
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v99 = v19;
  sub_1D42C4E78(v96, 0x6954746E65696C63, 0xEF706D617473656DLL, v21);
  uint64_t v22 = v99;
  swift_bridgeObjectRelease();
  uint64_t v23 = MEMORY[0x1E4FBB1A0];
  uint64_t v98 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v97 = 3157559;
  *((void *)&v97 + 1) = 0xE300000000000000;
  sub_1D42C5494(&v97, v96);
  char v24 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v95 = v22;
  sub_1D42C4E78(v96, 0x6973726556707061, 0xEA00000000006E6FLL, v24);
  uint64_t v25 = v95;
  uint64_t v99 = v95;
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v11, sel_productType);
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = sub_1D4469B38();
    uint64_t v30 = v29;

    uint64_t v98 = v23;
    *(void *)&long long v97 = v28;
    *((void *)&v97 + 1) = v30;
    sub_1D42C5494(&v97, v96);
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v95 = v25;
    sub_1D42C4E78(v96, 0x54746375646F7270, 0xEB00000000657079, v31);
    uint64_t v99 = v95;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D43FC5A4(0x54746375646F7270, 0xEB00000000657079, &v97);
    sub_1D4276C3C((uint64_t)&v97, &qword_1EBD80050);
  }
  id v32 = objc_msgSend(v11, sel_osVersion);
  if (v32)
  {
    unint64_t v33 = v32;
    uint64_t v34 = sub_1D4469B38();
    uint64_t v36 = v35;

    uint64_t v98 = v23;
    *(void *)&long long v97 = v34;
    *((void *)&v97 + 1) = v36;
    sub_1D42C5494(&v97, v96);
    uint64_t v37 = v99;
    char v38 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v95 = v37;
    sub_1D42C4E78(v96, 0x6F6973726556736FLL, 0xE90000000000006ELL, v38);
    uint64_t v99 = v95;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D43FC5A4(0x6F6973726556736FLL, 0xE90000000000006ELL, &v97);
    sub_1D4276C3C((uint64_t)&v97, &qword_1EBD80050);
  }
  id v39 = objc_msgSend(v11, sel_osBuildVersion);
  if (v39)
  {
    uint64_t v40 = v39;
    uint64_t v41 = sub_1D4469B38();
    uint64_t v43 = v42;

    uint64_t v98 = v23;
    *(void *)&long long v97 = v41;
    *((void *)&v97 + 1) = v43;
    sub_1D42C5494(&v97, v96);
    uint64_t v44 = v99;
    char v45 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v95 = v44;
    sub_1D42C4E78(v96, 0x646C697542736FLL, 0xE700000000000000, v45);
    uint64_t v99 = v95;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D43FC5A4(0x646C697542736FLL, 0xE700000000000000, &v97);
    sub_1D4276C3C((uint64_t)&v97, &qword_1EBD80050);
  }
  id v46 = objc_msgSend(v11, sel_deviceUDID);
  if (v46)
  {
    uint64_t v47 = v46;
    uint64_t v48 = sub_1D4469B38();
    uint64_t v50 = v49;

    uint64_t v98 = v23;
    *(void *)&long long v97 = v48;
    *((void *)&v97 + 1) = v50;
    sub_1D42C5494(&v97, v96);
    uint64_t v51 = v99;
    char v52 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v95 = v51;
    sub_1D42C4E78(v96, 0x4455656369766564, 0xEA00000000004449, v52);
    uint64_t v99 = v95;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D43FC5A4(0x4455656369766564, 0xEA00000000004449, &v97);
    sub_1D4276C3C((uint64_t)&v97, &qword_1EBD80050);
  }
  unint64_t v53 = self;
  char v54 = (void *)sub_1D4469B08();
  uint64_t v55 = (void *)sub_1D4469B08();
  id v56 = objc_msgSend(v53, sel_stringForKey_inDomain_, v54, v55);

  if (v56)
  {
    uint64_t v57 = sub_1D4469B38();
    uint64_t v59 = v58;

    uint64_t v98 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v97 = v57;
    *((void *)&v97 + 1) = v59;
    sub_1D42C5494(&v97, v96);
    uint64_t v60 = v99;
    char v61 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v95 = v60;
    sub_1D42C4E78(v96, 0x6E656B6F54737061, 0xE800000000000000, v61);
    uint64_t v99 = v95;
    swift_bridgeObjectRelease();
  }
  uint64_t v62 = (void *)sub_1D4469B08();
  uint64_t v63 = (void *)sub_1D4469B08();
  id v64 = objc_msgSend(v53, sel_dateForKey_inDomain_, v62, v63);

  if (!v64)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    goto LABEL_23;
  }
  uint64_t v65 = v92;
  sub_1D44695D8();

  uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v66(v2, v65, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
LABEL_23:
    sub_1D4276C3C((uint64_t)v2, &qword_1EBD7CB80);
    goto LABEL_24;
  }
  v66(v91, v2, v3);
  uint64_t v67 = (void *)sub_1D4469B08();
  char v68 = (void *)sub_1D4469B08();
  id v69 = objc_msgSend(v53, sel_integerForKey_inDomain_, v67, v68);

  uint64_t v70 = (void *)sub_1D4469B08();
  uint64_t v71 = (void *)sub_1D4469B08();
  unsigned int v72 = objc_msgSend(v53, sel_BOOLForKey_inDomain_, v70, v71);

  uint64_t v73 = (void *)sub_1D4469B08();
  unint64_t v74 = (void *)sub_1D4469B08();
  LODWORD(v92) = objc_msgSend(v53, sel_BOOLForKey_inDomain_, v73, v74);

  unint64_t v75 = v91;
  uint64_t v76 = (void *)sub_1D4469578();
  id v77 = objc_msgSend(v76, sel_fm_epoch);

  uint64_t v98 = MEMORY[0x1E4FBB550];
  *(void *)&long long v97 = v69;
  sub_1D42C5494(&v97, v96);
  uint64_t v78 = v99;
  char v79 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v95 = v78;
  sub_1D42C4E78(v96, 0x436C6C53776F6873, 0xEC000000746E756FLL, v79);
  uint64_t v80 = v95;
  uint64_t v99 = v95;
  swift_bridgeObjectRelease();
  uint64_t v98 = MEMORY[0x1E4FBC1C8];
  *(void *)&long long v97 = v77;
  sub_1D42C5494(&v97, v96);
  char v81 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v95 = v80;
  sub_1D42C4E78(v96, 0xD000000000000010, 0x80000001D447F890, v81);
  uint64_t v82 = v95;
  swift_bridgeObjectRelease();
  uint64_t v83 = 0x54554F54504FLL;
  if (v72) {
    uint64_t v83 = 0x4E4954504FLL;
  }
  unint64_t v84 = 0xE600000000000000;
  uint64_t v98 = MEMORY[0x1E4FBB1A0];
  if (v72) {
    unint64_t v84 = 0xE500000000000000;
  }
  *(void *)&long long v97 = v83;
  *((void *)&v97 + 1) = v84;
  sub_1D42C5494(&v97, v96);
  char v85 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v95 = v82;
  sub_1D42C4E78(v96, 0x73696365446C6C73, 0xEB000000006E6F69, v85);
  uint64_t v86 = v95;
  swift_bridgeObjectRelease();
  uint64_t v98 = MEMORY[0x1E4FBB390];
  LOBYTE(v97) = (_BYTE)v92;
  sub_1D42C5494(&v97, v96);
  char v87 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v95 = v86;
  sub_1D42C4E78(v96, 0xD000000000000010, 0x80000001D447F870, v87);
  uint64_t v99 = v95;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v75, v3);
LABEL_24:
  uint64_t v88 = v99;
  uint64_t v89 = (void *)(v94 + qword_1EBD7CC88);
  swift_beginAccess();
  *uint64_t v89 = v88;
  swift_bridgeObjectRelease();
  sub_1D43331A4();

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v93, v3);
}

uint64_t sub_1D42C4CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1D42C4FCC(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1D43D8D9C();
LABEL_7:
    double v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      char v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *char v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1D42C54A4(v17, a5 & 1);
  unint64_t v23 = sub_1D42C4FCC(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1D446A7A8();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  double v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *uint64_t v25 = a3;
  v25[1] = a4;
  id v26 = (void *)(v20[7] + 16 * v14);
  *id v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v29;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_1D42C4E78(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1D42C4FCC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1D42C57CC();
      goto LABEL_7;
    }
    sub_1D42C5194(v15, a4 & 1);
    unint64_t v21 = sub_1D42C4FCC(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1D446A7A8();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_1D42BEC64((uint64_t)v19);
    return sub_1D42C5494(a1, v19);
  }
LABEL_13:
  sub_1D42C5128(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

unint64_t sub_1D42C4FCC(uint64_t a1, uint64_t a2)
{
  sub_1D446A828();
  sub_1D4469BC8();
  uint64_t v4 = sub_1D446A888();

  return sub_1D42C5044(a1, a2, v4);
}

unint64_t sub_1D42C5044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1D446A758() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1D446A758() & 1) == 0);
    }
  }
  return v6;
}

_OWORD *sub_1D42C5128(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1D42C5494(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1D42C5194(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1D42D5DA0(&qword_1EBD7E870);
  uint64_t v6 = sub_1D446A4B8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      char v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_1D42C5494(v24, v35);
      }
      else
      {
        sub_1D42CBAC0((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1D446A828();
      sub_1D4469BC8();
      uint64_t result = sub_1D446A888();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_1D42C5494(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

_OWORD *sub_1D42C5494(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1D42C54A4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1D42D5DA0(&qword_1EBD7FDB8);
  char v42 = a2;
  uint64_t v6 = sub_1D446A4B8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    char v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1D446A828();
    sub_1D4469BC8();
    uint64_t result = sub_1D446A888();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    int64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *int64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  char v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_1D42C57CC()
{
  uint64_t v1 = v0;
  sub_1D42D5DA0(&qword_1EBD7E870);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D446A4A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1D42CBAC0(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_1D42C5494(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D42C59B4(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = a2;
  uint64_t v56 = sub_1D4469958();
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  char v54 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1D44699B8();
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v51 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v59 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v60 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v61 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v11 = (void *)&unk_1EBD80000;
  *(void *)&long long v12 = 136315394;
  long long v58 = v12;
  uint64_t v57 = MEMORY[0x1E4FBC840] + 8;
  while (1)
  {
    if (v8)
    {
      uint64_t v63 = (v8 - 1) & v8;
      unint64_t v13 = __clz(__rbit64(v8)) | (v10 << 6);
      goto LABEL_22;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v14 >= v60) {
      goto LABEL_34;
    }
    unint64_t v15 = *(void *)(v59 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v60) {
        goto LABEL_34;
      }
      unint64_t v15 = *(void *)(v59 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v60) {
          goto LABEL_34;
        }
        unint64_t v15 = *(void *)(v59 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v63 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_22:
    int v17 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v13);
    uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * v13);
    uint64_t v19 = v11[13];
    swift_bridgeObjectRetain();
    if (v19 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1D4469928();
    sub_1D42D7FAC(v20, (uint64_t)qword_1EBD83228);
    swift_bridgeObjectRetain_n();
    unint64_t v21 = sub_1D44698F8();
    os_log_type_t v22 = sub_1D446A038();
    BOOL v23 = os_log_type_enabled(v21, v22);
    int64_t v64 = v10;
    if (v23)
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      aBlock[0] = v25;
      *(_DWORD *)uint64_t v24 = v58;
      LOBYTE(v65) = v17;
      uint64_t v26 = sub_1D4469B68();
      *(void *)(v24 + 4) = sub_1D42CB9EC(v26, v27, aBlock);
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      sub_1D4469688();
      sub_1D42C61DC(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1D4469A68();
      unint64_t v30 = v29;
      swift_bridgeObjectRelease();
      *(void *)(v24 + 14) = sub_1D42CB9EC(v28, v30, aBlock);
      swift_bridgeObjectRelease_n();
      uint64_t v11 = &unk_1EBD80000;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v21, v22, "FMIPManager: didReceive updating state: %s: %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v25, -1, -1);
      MEMORY[0x1D9447730](v24, -1, -1);

      if (v17) {
        goto LABEL_26;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if (v17)
      {
LABEL_26:
        if (v17 == 1)
        {
          uint64_t v31 = *(void *)(v62 + v61);
          uint64_t v32 = *(void *)(v31 + 224);
          swift_retain();
          swift_bridgeObjectRetain();
          char v33 = sub_1D42C62FC(v18, v32);
          swift_bridgeObjectRelease();
          if ((v33 & 1) == 0)
          {
            swift_beginAccess();
            unint64_t v34 = swift_bridgeObjectRetain();
            uint64_t v35 = sub_1D42B8E0C(v34, v18);
            swift_bridgeObjectRelease();
            *(void *)(v31 + 80) = v35;
            swift_bridgeObjectRelease();
            *(void *)(v31 + 224) = v18;
          }
        }
        else
        {
          uint64_t v41 = *(void *)(v62 + v61);
          uint64_t v42 = *(void *)(v41 + 216);
          swift_retain();
          swift_bridgeObjectRetain();
          char v43 = sub_1D42C62FC(v18, v42);
          swift_bridgeObjectRelease();
          if ((v43 & 1) == 0)
          {
            swift_beginAccess();
            unint64_t v44 = swift_bridgeObjectRetain();
            uint64_t v45 = sub_1D42AC90C(v44, v18);
            swift_bridgeObjectRelease();
            *(void *)(v41 + 80) = v45;
            swift_bridgeObjectRelease();
            *(void *)(v41 + 216) = v18;
          }
        }
LABEL_4:
        swift_release();
        goto LABEL_5;
      }
    }
    uint64_t v36 = *(void *)(v62 + v61);
    uint64_t v37 = *(void *)(v36 + 200);
    swift_retain();
    swift_bridgeObjectRetain();
    char v38 = sub_1D42C62FC(v18, v37);
    swift_bridgeObjectRelease();
    if (v38) {
      goto LABEL_4;
    }
    swift_beginAccess();
    unint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = sub_1D42AD154(v39, v18);
    swift_bridgeObjectRelease();
    *(void *)(v36 + 80) = v40;
    swift_release();
    swift_bridgeObjectRelease();
LABEL_5:
    unint64_t v8 = v63;
    int64_t v10 = v64;
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v60)
  {
LABEL_34:
    swift_release();
    aBlock[4] = (uint64_t)sub_1D42E7900;
    void aBlock[5] = v62;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_1D42BD950;
    uint64_t aBlock[3] = (uint64_t)&unk_1F2C0B860;
    id v46 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v47 = v51;
    sub_1D4469988();
    uint64_t v65 = MEMORY[0x1E4FBC860];
    sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    uint64_t v48 = v54;
    uint64_t v49 = v56;
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v47, v48, v46);
    _Block_release(v46);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v48, v49);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v47, v53);
    return swift_release();
  }
  unint64_t v15 = *(void *)(v59 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v60) {
      goto LABEL_34;
    }
    unint64_t v15 = *(void *)(v59 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1D42C61DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42C6224(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42C626C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42C62B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42C62FC(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = sub_1D4469688();
  uint64_t v47 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v48 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EBD7CB28);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  unint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v40 - v10;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v49 = 0;
  uint64_t v44 = a1;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v13 = a1 + 64;
  uint64_t v12 = v14;
  uint64_t v15 = 1 << *(unsigned char *)(v13 - 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v12;
  uint64_t v18 = (uint64_t)v48;
  uint64_t v43 = v47 + 16;
  uint64_t v45 = (uint64_t (**)(uint64_t, uint64_t))(v47 + 8);
  id v46 = (void (**)(uint64_t, char *, uint64_t))(v47 + 32);
  uint64_t v41 = v13;
  int64_t v42 = (unint64_t)(v15 + 63) >> 6;
  int64_t v40 = v42 - 1;
  uint64_t v19 = (uint64_t *)&unk_1EA6CAFD8;
  uint64_t v50 = (char *)&v40 - v10;
  uint64_t v20 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v22 = v21 | (v49 << 6);
LABEL_8:
      uint64_t v23 = v44;
      (*(void (**)(char *, unint64_t, uint64_t))(v47 + 16))(v8, *(void *)(v44 + 48) + *(void *)(v47 + 72) * v22, v51);
      uint64_t v24 = *(void *)(v23 + 56);
      uint64_t v25 = sub_1D42D5DA0(v19);
      v8[*(int *)(v25 + 48)] = *(unsigned char *)(v24 + v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v8, 0, 1, v25);
      uint64_t v11 = v50;
      goto LABEL_30;
    }
    int64_t v26 = v49 + 1;
    if (__OFADD__(v49, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v26 < v42)
    {
      unint64_t v27 = *(void *)(v41 + 8 * v26);
      if (v27) {
        goto LABEL_12;
      }
      int64_t v28 = v49 + 2;
      ++v49;
      if (v26 + 1 < v42)
      {
        unint64_t v27 = *(void *)(v41 + 8 * v28);
        if (v27) {
          goto LABEL_15;
        }
        int64_t v49 = v26 + 1;
        if (v26 + 2 < v42)
        {
          unint64_t v27 = *(void *)(v41 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          int64_t v49 = v26 + 2;
          if (v26 + 3 < v42)
          {
            unint64_t v27 = *(void *)(v41 + 8 * (v26 + 3));
            if (v27)
            {
              v26 += 3;
              goto LABEL_12;
            }
            int64_t v28 = v26 + 4;
            int64_t v49 = v26 + 3;
            if (v26 + 4 < v42) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v29 = sub_1D42D5DA0(v19);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v8, 1, 1, v29);
    unint64_t v17 = 0;
LABEL_30:
    sub_1D4276C98((uint64_t)v8, (uint64_t)v11, &qword_1EBD7CB28);
    unint64_t v30 = v19;
    uint64_t v31 = sub_1D42D5DA0(v19);
    int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v11, 1, v31);
    BOOL v33 = v32 == 1;
    if (v32 != 1)
    {
      uint64_t v34 = *(int *)(v31 + 48);
      (*v46)(v18, v11, v20);
      int v35 = v11[v34];
      unint64_t v36 = sub_1D43AEE98(v18);
      char v38 = v37;
      uint64_t result = (*v45)(v18, v20);
      if (v38)
      {
        int v39 = *(unsigned __int8 *)(*(void *)(a2 + 56) + v36);
        uint64_t v19 = v30;
        uint64_t v11 = v50;
        if (v35 == v39) {
          continue;
        }
      }
    }
    return v33;
  }
  unint64_t v27 = *(void *)(v41 + 8 * v28);
  if (v27)
  {
LABEL_15:
    int64_t v26 = v28;
LABEL_12:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v22 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v49 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v42)
    {
      int64_t v49 = v40;
      goto LABEL_29;
    }
    unint64_t v27 = *(void *)(v41 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_1D42C678C(uint64_t a1, char *a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v109 = (char *)v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D42D5DA0(&qword_1EA6CA1F8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v108 = (char *)v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v107 = (char *)v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_1D4469618();
  uint64_t v10 = *(void *)(v113 - 8);
  MEMORY[0x1F4188790](v113);
  uint64_t v112 = (char *)v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMIPDevice();
  unint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v119 = (uint64_t)v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v106 = (uint64_t)v98 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v118 = (uint64_t)v98 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  unint64_t v22 = (char *)v98 - v21;
  MEMORY[0x1F4188790](v20);
  unint64_t v102 = (char *)v98 - v23;
  char v24 = *a2;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1D4469928();
  uint64_t v26 = sub_1D42D7FAC(v25, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  uint64_t v105 = v26;
  unint64_t v27 = sub_1D44698F8();
  os_log_type_t v28 = sub_1D446A038();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = MEMORY[0x1E4FBC840];
  uint64_t v110 = v22;
  if (v29)
  {
    uint64_t v31 = swift_slowAlloc();
    unint64_t v117 = v13;
    *(void *)&long long v116 = v10;
    uint64_t v32 = v31;
    uint64_t v33 = swift_slowAlloc();
    *(void *)&v133[0] = v33;
    *(_DWORD *)uint64_t v32 = 134218242;
    uint64_t v126 = *(void *)(a1 + 16);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2080;
    LOBYTE(v126) = v24;
    unint64_t v34 = FMIPLocationType.rawValue.getter();
    uint64_t v126 = sub_1D42CB9EC(v34, v35, (uint64_t *)v133);
    unint64_t v22 = v110;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v27, v28, "FMIPDataManager: updateDevicesLocations %ld type %s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v33, -1, -1);
    uint64_t v36 = v32;
    uint64_t v10 = v116;
    unint64_t v13 = v117;
    MEMORY[0x1D9447730](v36, -1, -1);

    uint64_t v37 = *(void *)(a1 + 16);
    if (v37) {
      goto LABEL_5;
    }
    return MEMORY[0x1E4FBC860];
  }

  swift_bridgeObjectRelease();
  uint64_t v37 = *(void *)(a1 + 16);
  if (!v37) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_5:
  unint64_t v104 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v38 = a1 + v104;
  v98[0] = a1;
  swift_bridgeObjectRetain();
  sub_1D42FB494(v133);
  uint64_t v111 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v103 = *(void *)(v13 + 72);
  uint64_t v100 = (char *)&v124 + 4;
  uint64_t v101 = &v125;
  unint64_t v39 = MEMORY[0x1E4FBC860];
  *(void *)&long long v40 = 136315650;
  long long v99 = v40;
  v98[1] = v30 + 8;
  uint64_t v41 = (uint64_t)v102;
  do
  {
    sub_1D42D22A0(v38, v41, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    long long v132 = 0uLL;
    uint64_t v131 = 0;
    long long v130 = 0uLL;
    uint64_t v129 = 0;
    int64_t v42 = *(void **)(v41 + 264);
    if (v42)
    {
      LOBYTE(v124) = 16;
      id v43 = v42;
      id v44 = objc_msgSend(v43, sel_timestamp);
      uint64_t v45 = v112;
      sub_1D44695D8();

      sub_1D44695A8();
      double v47 = v46;
      (*v111)(v45, v113);
      id v48 = objc_msgSend(v43, sel_floor);
      if (v48)
      {
        int64_t v49 = v48;
        uint64_t v50 = (uint64_t)objc_msgSend(v48, sel_level);
      }
      else
      {
        uint64_t v50 = -1;
      }
      sub_1D42B7188(v43, (char *)&v124, v47 < -3600.0, 0, 1, (uint64_t)&v126, (double)v50);
      uint64_t v51 = v127;
      uint64_t v52 = v128;
      uint64_t v53 = 256;
      if (!BYTE1(v126)) {
        uint64_t v53 = 0;
      }
      uint64_t v54 = v53 | v126;
      uint64_t v55 = 0x10000;
      if (!BYTE2(v126)) {
        uint64_t v55 = 0;
      }
      unint64_t v56 = v54 | v55 | ((unint64_t)BYTE3(v126) << 24);
      swift_beginAccess();
      uint64_t v57 = (void *)v132;
      uint64_t v131 = (void *)v56;
      *(void *)&long long v132 = v51;
      *((void *)&v132 + 1) = v52;
    }
    long long v58 = *(void **)(v41 + 288);
    if (v58)
    {
      LOBYTE(v124) = 16;
      id v59 = v58;
      id v60 = objc_msgSend(v59, sel_timestamp);
      uint64_t v61 = v112;
      sub_1D44695D8();

      sub_1D44695A8();
      double v63 = v62;
      (*v111)(v61, v113);
      id v64 = objc_msgSend(v59, sel_floor);
      if (v64)
      {
        uint64_t v65 = v64;
        uint64_t v66 = (uint64_t)objc_msgSend(v64, sel_level);
      }
      else
      {
        uint64_t v66 = -1;
      }
      sub_1D42B7188(v59, (char *)&v124, v63 < -3600.0, 0, 1, (uint64_t)&v126, (double)v66);
      uint64_t v67 = v127;
      uint64_t v68 = v128;
      uint64_t v69 = 256;
      if (!BYTE1(v126)) {
        uint64_t v69 = 0;
      }
      uint64_t v70 = v69 | v126;
      uint64_t v71 = 0x10000;
      if (!BYTE2(v126)) {
        uint64_t v71 = 0;
      }
      unint64_t v72 = v70 | v71 | ((unint64_t)BYTE3(v126) << 24);
      swift_beginAccess();
      uint64_t v73 = (void *)v130;
      uint64_t v129 = v72;
      *(void *)&long long v130 = v67;
      *((void *)&v130 + 1) = v68;
    }
    unint64_t v117 = v39;
    sub_1D42D22A0(v41, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    unint64_t v74 = sub_1D44698F8();
    os_log_type_t v75 = sub_1D446A038();
    BOOL v76 = os_log_type_enabled(v74, v75);
    uint64_t v114 = v37;
    if (v76)
    {
      uint64_t v77 = swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      uint64_t v126 = v78;
      *(_DWORD *)uint64_t v77 = v99;
      uint64_t v80 = *((void *)v22 + 8);
      unint64_t v79 = *((void *)v22 + 9);
      swift_bridgeObjectRetain();
      uint64_t v81 = v80;
      uint64_t v41 = (uint64_t)v102;
      uint64_t v124 = sub_1D42CB9EC(v81, v79, &v126);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D42D20B8((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      *(_WORD *)(v77 + 12) = 1024;
      swift_beginAccess();
      LODWORD(v124) = (void)v132 != 0;
      sub_1D446A188();
      *(_WORD *)(v77 + 18) = 1024;
      swift_beginAccess();
      LODWORD(v124) = (void)v130 != 0;
      sub_1D446A188();
      _os_log_impl(&dword_1D4271000, v74, v75, "FMIPDataManager: updateDevicesLocations device %s location: %{BOOL}d, crowdsourcedLocation: %{BOOL}d", (uint8_t *)v77, 0x18u);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v78, -1, -1);
      MEMORY[0x1D9447730](v77, -1, -1);
    }
    else
    {
      sub_1D42D20B8((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    }

    uint64_t v82 = v106;
    sub_1D42D22A0(v41, v106, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D4276C98((uint64_t)v133, (uint64_t)&v126, &qword_1EBD7CC10);
    swift_beginAccess();
    uint64_t v124 = v129;
    long long v116 = v130;
    long long v125 = v130;
    swift_beginAccess();
    uint64_t v122 = v131;
    long long v115 = v132;
    long long v123 = v132;
    uint64_t v83 = type metadata accessor for FMIPItemGroup();
    memset(v121, 0, sizeof(v121));
    uint64_t v84 = (uint64_t)v107;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v107, 1, 1, v83);
    unsigned __int8 v120 = 7;
    uint64_t v85 = type metadata accessor for FMIPDeviceConnectedState(0);
    uint64_t v86 = (uint64_t)v108;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v108, 1, 1, v85);
    uint64_t v87 = type metadata accessor for FMIPDeviceLostModeMetadata();
    uint64_t v88 = (uint64_t)v109;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v109, 1, 1, v87);
    uint64_t v89 = (void *)v116;
    id v90 = (id)v115;
    id v91 = v89;
    uint64_t v92 = v118;
    FMIPDevice.init(device:historicalLocations:address:crowdSourcedLocation:location:shiftedLocation:crowdSourcedLocating:itemGroup:deviceWithYou:findingCapable:beaconType:deviceConnectedState:lostModeMetadata:)(v82, 0, (char *)&v126, &v124, &v122, (uint64_t)v121, 2, v84, v118, 2u, 2, &v120, v86, v88);
    sub_1D42D22A0(v92, v119, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    unint64_t v39 = v117;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v39 = sub_1D42CAE20(0, *(void *)(v39 + 16) + 1, 1, v39);
    }
    uint64_t v93 = v114;
    unint64_t v95 = *(void *)(v39 + 16);
    unint64_t v94 = *(void *)(v39 + 24);
    unint64_t v22 = v110;
    if (v95 >= v94 >> 1) {
      unint64_t v39 = sub_1D42CAE20(v94 > 1, v95 + 1, 1, v39);
    }
    *(void *)(v39 + 16) = v95 + 1;
    uint64_t v96 = v103;
    sub_1D42BB578(v119, v39 + v104 + v95 * v103, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D20B8(v118, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D20B8(v41, (uint64_t (*)(void))type metadata accessor for FMIPDevice);

    v38 += v96;
    uint64_t v37 = v93 - 1;
  }
  while (v37);
  swift_bridgeObjectRelease();
  return v39;
}

void sub_1D42C73B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v196 = a2;
  uint64_t v6 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v190 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = sub_1D4469688();
  uint64_t v204 = *(void *)(v218 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v218);
  uint64_t v214 = (uint64_t)v190 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v190 - v11;
  uint64_t v13 = type metadata accessor for FMIPItem();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13 - 8);
  int v212 = (void *)((char *)v190 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_1D42D5DA0(&qword_1EBD7E670);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v200 = (uint64_t)v190 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v213 = (uint64_t)v190 - v19;
  os_log_type_t v228 = type metadata accessor for FMIPDevice();
  Class isa = v228[-1].isa;
  uint64_t v20 = MEMORY[0x1F4188790](v228);
  unint64_t v22 = (char *)v190 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v25 = (char *)v190 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  uint64_t v226 = (double *)((char *)v190 - v27);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v216 = (uint64_t)v190 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v215 = (uint64_t)v190 - v31;
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)v190 - v32;
  uint64_t v227 = sub_1D4469618();
  uint64_t v201 = *(void *)(v227 - 8);
  uint64_t v34 = MEMORY[0x1F4188790](v227);
  uint64_t v198 = (char *)v190 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  int v206 = (char *)v190 - v37;
  MEMORY[0x1F4188790](v36);
  uint64_t v225 = (char *)v190 - v38;
  uint64_t v199 = v3;
  uint64_t v39 = *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration);
  if (*(unsigned char *)(v39 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems))
  {
    uint64_t v194 = OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems;
    uint64_t v195 = v39;
    int v205 = v22;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_1D4469928();
    sub_1D42D7FAC(v44, (uint64_t)qword_1EBD83228);
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1D44698F8();
    os_log_type_t v46 = sub_1D446A038();
    BOOL v47 = os_log_type_enabled(v45, v46);
    uint64_t v192 = a3;
    uint64_t v191 = v14;
    if (v47)
    {
      id v48 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v48 = 134217984;
      uint64_t v235 = *(void **)(a1 + 16);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v45, v46, "FMIPManager: updating locating devices lastOnlineLocationInfo: %ld", v48, 0xCu);
      MEMORY[0x1D9447730](v48, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    uint64_t v49 = sub_1D4469108();
    uint64_t v238 = v49;
    uint64_t v239 = sub_1D42C61DC(&qword_1EBD7E550, MEMORY[0x1E4F619E0]);
    uint64_t v50 = sub_1D42BECB4((uint64_t *)&v235);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v49 - 8) + 104))(v50, *MEMORY[0x1E4F619D0], v49);
    LOBYTE(v49) = MEMORY[0x1D9445460](&v235);
    sub_1D42BEC64((uint64_t)&v235);
    uint64_t v203 = a1;
    uint64_t v220 = v12;
    uint64_t v51 = v216;
    uint64_t v202 = v8;
    if (v49)
    {
      uint64_t v52 = *(void *)(v199 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconRefreshingController);
      if (*(unsigned char *)(v52 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_shouldUseBeaconsOptimizationSPI) == 1)
      {
        uint64_t v53 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconRefreshingController;
        uint64_t v54 = OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy;
        uint64_t v216 = *(void *)(v52 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy + 16);
        swift_bridgeObjectRetain();
        uint64_t v55 = v53;
        goto LABEL_74;
      }
    }
    unint64_t v56 = v225;
    sub_1D4469608();
    sub_1D44695B8();
    double v58 = v57;
    id v59 = *(void (**)(char *, uint64_t))(v201 + 8);
    uint64_t v211 = v201 + 8;
    v210 = v59;
    v59(v56, v227);
    uint64_t v60 = MEMORY[0x1E4FBC860];
    uint64_t v234 = MEMORY[0x1E4FBC860];
    uint64_t v61 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    uint64_t v224 = v61;
    if (!v61) {
      goto LABEL_64;
    }
    uint64_t v62 = 0;
    uint64_t v63 = *((void *)isa + 9);
    uint64_t v221 = (char *)((*((unsigned __int8 *)isa + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)isa + 80));
    char v223 = (void (**)(uint64_t, uint64_t, double))&v221[a1];
    id v222 = (long long *)(v33 + 280);
    uint64_t v193 = (long long *)(v215 + 280);
    unint64_t v208 = (long long *)(v51 + 280);
    dispatch_queue_t v219 = v25;
    uint64_t v209 = v63;
    while (1)
    {
      sub_1D42CA6F0((uint64_t)v223 + v63 * v62, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v64 = *((void *)v33 + 34);
      long long v232 = *((_OWORD *)v33 + 16);
      uint64_t v233 = v64;
      uint64_t v65 = *((void *)v33 + 37);
      long long v230 = *v222;
      uint64_t v231 = v65;
      uint64_t v66 = (*((void *)v33 + 27) >> 5) & 1;
      uint64_t v67 = (uint64_t)&v33[SLODWORD(v228[16].isa)];
      char v229 = v33[80];
      sub_1D42D248C((uint64_t *)&v232, (uint64_t *)&v230, v66, v67, (unsigned __int8 *)&v229, (double *)&v235);
      id v68 = v236;
      if (!v236) {
        goto LABEL_57;
      }
      double v69 = v237;
      unint64_t v217 = (unint64_t)v235;
      id v70 = objc_msgSend(v236, sel_timestamp);
      uint64_t v71 = v225;
      sub_1D44695D8();

      sub_1D44695B8();
      double v73 = v72;
      v210(v71, v227);
      uint64_t v74 = v213;
      sub_1D42A3A74(v67, v213, &qword_1EBD7E670);
      uint64_t v75 = type metadata accessor for FMIPItemGroup();
      BOOL v76 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 48);
      if (v76(v74, 1, v75) == 1) {
        break;
      }
      char v79 = FMIPItemGroup.shouldDisplaySeparatedLocation.getter();
      sub_1D42CA8E8(v74, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      uint64_t v77 = v215;
      sub_1D42CA6F0((uint64_t)v33, v215, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v78 = v226;
      if ((v79 & 1) == 0) {
        goto LABEL_25;
      }
      uint64_t v80 = v77 + SLODWORD(v228[16].isa);
      uint64_t v81 = v200;
      sub_1D42A3A74(v80, v200, &qword_1EBD7E670);
      if (v76(v81, 1, v75) == 1)
      {
        sub_1D4276C3C(v81, &qword_1EBD7E670);
        goto LABEL_21;
      }
      uint64_t v97 = *(void *)(v81 + 40);
      swift_bridgeObjectRetain();
      sub_1D42CA8E8(v81, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      uint64_t v98 = *(void *)(v77 + 272);
      long long v232 = *(_OWORD *)(v77 + 256);
      uint64_t v233 = v98;
      uint64_t v99 = *(void *)(v77 + 296);
      long long v230 = *v193;
      uint64_t v231 = v99;
      uint64_t v100 = (*(void *)(v77 + 216) >> 5) & 1;
      char v229 = *(unsigned char *)(v77 + 80);
      sub_1D42D248C((uint64_t *)&v232, (uint64_t *)&v230, v100, v80, (unsigned __int8 *)&v229, (double *)&v235);
      id v101 = v236;

      if (v101)
      {
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      uint64_t v103 = *(void *)(v97 + 16);
      if (v103)
      {
        uint64_t v104 = v191;
        uint64_t v105 = v97 + ((*(unsigned __int8 *)(v191 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v191 + 80));
        v190[1] = v97;
        swift_bridgeObjectRetain();
        uint64_t v207 = *(void *)(v104 + 72);
        uint64_t v106 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          uint64_t v108 = v212;
          sub_1D42CA6F0(v105, (uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          uint64_t v109 = v108[48];
          uint64_t v110 = (void *)v108[49];
          uint64_t v111 = v108[50];
          id v112 = v110;
          sub_1D42CA8E8((uint64_t)v108, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          if (v110)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v106 = sub_1D43AFC34(0, v106[2] + 1, 1, v106);
            }
            unint64_t v114 = v106[2];
            unint64_t v113 = v106[3];
            if (v114 >= v113 >> 1) {
              uint64_t v106 = sub_1D43AFC34((void *)(v113 > 1), v114 + 1, 1, v106);
            }
            void v106[2] = v114 + 1;
            uint64_t v107 = &v106[3 * v114];
            *((unsigned char *)v107 + 32) = v109 & 1;
            *((unsigned char *)v107 + 33) = BYTE1(v109) & 1;
            *((unsigned char *)v107 + 34) = BYTE2(v109) & 1;
            *((unsigned char *)v107 + 35) = BYTE3(v109);
            v107[5] = v112;
            v107[6] = v111;
          }
          v105 += v207;
          --v103;
        }
        while (v103);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v106 = (void *)MEMORY[0x1E4FBC860];
      }
      uint64_t v82 = v216;
      uint64_t v115 = v106[2];
      swift_bridgeObjectRelease();
      sub_1D42CA8E8(v215, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      sub_1D42CA6F0((uint64_t)v33, v82, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v25 = v219;
      uint64_t v78 = v226;
      uint64_t v63 = v209;
      if (v115)
      {
        sub_1D42CA8E8(v82, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        sub_1D42CA6F0((uint64_t)v33, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v88 = (void *)*((void *)v78 + 33);
        if (!v88) {
          goto LABEL_56;
        }
        goto LABEL_28;
      }
LABEL_26:
      uint64_t v83 = *(void *)(v82 + 272);
      long long v232 = *(_OWORD *)(v82 + 256);
      uint64_t v233 = v83;
      uint64_t v84 = *(void *)(v82 + 296);
      long long v230 = *v208;
      uint64_t v231 = v84;
      uint64_t v85 = (*(void *)(v82 + 216) >> 5) & 1;
      uint64_t v86 = v82 + SLODWORD(v228[16].isa);
      char v229 = *(unsigned char *)(v82 + 80);
      sub_1D42D248C((uint64_t *)&v232, (uint64_t *)&v230, v85, v86, (unsigned __int8 *)&v229, (double *)&v235);
      id v87 = v236;

      sub_1D42CA8E8(v82, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      sub_1D42CA6F0((uint64_t)v33, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      if (!v87 || (uint64_t v88 = (void *)*((void *)v78 + 33)) == 0)
      {
LABEL_56:

        sub_1D42CA8E8((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        goto LABEL_57;
      }
LABEL_28:
      double v89 = v78[34];
      unint64_t v90 = *((void *)v78 + 32);
      sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7D970);
      id v91 = v68;
      id v92 = v88;
      if ((sub_1D446A118() & 1) == 0
        || v69 != v89
        || ((((v90 & 1) == 0) ^ v217) & 1) == 0
        || ((v90 & 0x100) == 0) == ((v217 >> 8) & 1)
        || ((v90 & 0x10000) == 0) == ((v217 >> 16) & 1))
      {

        sub_1D42CA8E8((uint64_t)v226, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v25 = v219;
LABEL_57:
        sub_1D42CAAD0((uint64_t)v33, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v116 = v234;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D42E1CF4(0, *(void *)(v116 + 16) + 1, 1);
          uint64_t v116 = v234;
        }
        unint64_t v118 = *(void *)(v116 + 16);
        unint64_t v117 = *(void *)(v116 + 24);
        if (v118 >= v117 >> 1)
        {
          sub_1D42E1CF4(v117 > 1, v118 + 1, 1);
          uint64_t v116 = v234;
        }
        *(void *)(v116 + 16) = v118 + 1;
        sub_1D42CAAD0((uint64_t)v25, (uint64_t)&v221[v116 + v118 * v63], (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        goto LABEL_62;
      }
      LOBYTE(v235) = BYTE3(v217);
      LOBYTE(v232) = BYTE3(v90);
      unint64_t v93 = FMIPLocationType.rawValue.getter();
      uint64_t v95 = v94;
      if (v93 == FMIPLocationType.rawValue.getter() && v95 == v96)
      {

        swift_bridgeObjectRelease_n();
        sub_1D42CA8E8((uint64_t)v226, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v25 = v219;
        if (v58 - v73 >= 180.0) {
          goto LABEL_57;
        }
      }
      else
      {
        char v102 = sub_1D446A758();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D42CA8E8((uint64_t)v226, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v25 = v219;
        if ((v102 & 1) == 0 || v58 - v73 >= 180.0) {
          goto LABEL_57;
        }
      }
      sub_1D42CA8E8((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_62:
      if (++v62 == v224)
      {
        uint64_t v60 = v234;
        a1 = v203;
        uint64_t v8 = v202;
LABEL_64:
        swift_bridgeObjectRelease();
        uint64_t v119 = sub_1D4373AF0(v60);
        swift_release();
        unint64_t v120 = sub_1D4373830((uint64_t)v119);
        swift_bridgeObjectRelease();
        uint64_t v121 = *(void *)(v195 + v194);
        if ((v121 & 2) != 0)
        {
          uint64_t v123 = sub_1D4373EB0(v196);
          unint64_t v122 = sub_1D4373830(v123);
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v122 = MEMORY[0x1E4FBC860];
        }
        unint64_t v124 = MEMORY[0x1E4FBC860];
        if (v121)
        {
          uint64_t v235 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v125 = *(void *)(v192 + 16);
          if (v125)
          {
            uint64_t v126 = *(void *)(type metadata accessor for FMIPItemGroup() - 8);
            unint64_t v127 = (*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80);
            uint64_t v128 = *(void *)(v126 + 72);
            swift_bridgeObjectRetain();
            unint64_t v129 = v127 + 40;
            do
            {
              uint64_t v130 = swift_bridgeObjectRetain();
              sub_1D43AEC34(v130);
              v129 += v128;
              --v125;
            }
            while (v125);
            swift_bridgeObjectRelease();
            unint64_t v124 = (unint64_t)v235;
          }
          uint64_t v131 = sub_1D4373EB0(v124);
          swift_bridgeObjectRelease();
          unint64_t v124 = sub_1D4373830(v131);
          swift_bridgeObjectRelease();
        }
        uint64_t v235 = (void *)v120;
        sub_1D43AEBEC(v122);
        sub_1D43AEBEC(v124);
        uint64_t v216 = sub_1D4351BC8((uint64_t)v235);
        swift_bridgeObjectRelease();
        uint64_t v55 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconRefreshingController;
        uint64_t v52 = *(void *)(v199 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconRefreshingController);
        uint64_t v54 = OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy;
        uint64_t v12 = v220;
LABEL_74:
        long long v132 = *(void **)(v52 + v54 + 24);
        swift_bridgeObjectRetain();
        sub_1D4469608();
        uint64_t v133 = *(void *)(a1 + 16);
        if (!v133)
        {
LABEL_106:
          uint64_t v185 = *(void *)(v199 + v55) + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy;
          unint64_t v186 = *(void **)(v185 + 8);
          double v187 = *(double *)(v185 + 16);
          uint64_t v188 = *(void *)(v185 + 24);
          char v189 = *(unsigned char *)(v185 + 32);
          LOBYTE(v235) = *(unsigned char *)v185;
          id v236 = v186;
          double v237 = v187;
          uint64_t v238 = v188;
          LOBYTE(v239) = v189;
          *(unsigned char *)uint64_t v185 = (_BYTE)v235;
          *(void *)(v185 + 16) = v216;
          *(void *)(v185 + 24) = v132;
          *(unsigned char *)(v185 + 32) = 0;
          swift_bridgeObjectRetain_n();
          swift_retain();
          swift_bridgeObjectRelease();
          sub_1D42C8EB8((unsigned __int8 *)&v235);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v201 + 8))(v206, v227);
          swift_bridgeObjectRelease();
          return;
        }
        uint64_t v215 = v55;
        uint64_t v134 = a1 + ((*((unsigned __int8 *)isa + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)isa + 80));
        uint64_t v135 = (unsigned int (**)(char *, uint64_t, uint64_t))(v204 + 48);
        uint64_t v136 = *((void *)isa + 9);
        uint64_t v226 = (double *)(v204 + 32);
        id v222 = (long long *)(v201 + 8);
        uint64_t v137 = (void (**)(uint64_t, uint64_t, double))(v204 + 8);
        uint64_t v221 = (char *)(v204 + 16);
        swift_bridgeObjectRetain();
        char v223 = v137;
        unint64_t v217 = (unint64_t)v137 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        uint64_t v138 = (uint64_t)v205;
        uint64_t v139 = v218;
        dispatch_queue_t v219 = (char *)v135;
        uint64_t v224 = v136;
        while (2)
        {
          sub_1D42CA6F0(v134, v138, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
          if (!*(void *)(v138 + 24))
          {
            sub_1D42CA8E8(v138, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
            goto LABEL_77;
          }
          sub_1D4469628();
          if ((*v135)(v8, 1, v139) == 1)
          {
            sub_1D42CA8E8(v138, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
            sub_1D4276C3C((uint64_t)v8, (uint64_t *)&unk_1EBD7E930);
            goto LABEL_77;
          }
          (*(void (**)(char *, char *, uint64_t))v226)(v12, v8, v139);
          uint64_t v140 = *(void **)(v138 + 264);
          if (v140)
          {
            os_log_type_t v228 = v140;
            id v141 = [v228 timestamp];
            unint64_t v142 = v225;
            sub_1D44695D8();

            id v143 = objc_allocWithZone(MEMORY[0x1E4F97C40]);
            uint64_t v144 = (void *)sub_1D4469578();
            uint64_t v145 = (void *)sub_1D4469578();
            id v146 = objc_msgSend(v143, sel_initWithDate_updatedOn_, v144, v145);

            uint64_t v147 = *(void (**)(char *, uint64_t))v222;
            (*(void (**)(char *, uint64_t))v222)(v142, v227);
            if (v132[2])
            {
              unint64_t v149 = sub_1D43AEE98((uint64_t)v220);
              if (v150)
              {
                id v151 = *(id *)(v132[7] + 8 * v149);
                id v152 = objc_msgSend(v146, sel_timestamp);
                uint64_t v153 = v225;
                sub_1D44695D8();

                sub_1D44695B8();
                double v155 = v154;
                uint64_t v156 = v227;
                v147(v153, v227);
                id v157 = objc_msgSend(v151, sel_timestamp);
                uint64_t v158 = v198;
                sub_1D44695D8();

                sub_1D44695B8();
                double v160 = v159;

                v147(v158, v156);
                v148.n128_f64[0] = v155 - v160;
                if (v155 - v160 < 180.0)
                {
                  uint64_t v12 = v220;
                  uint64_t v139 = v218;
                  (*v223)((uint64_t)v220, v218, v148.n128_f64[0]);

                  uint64_t v138 = (uint64_t)v205;
                  sub_1D42CA8E8((uint64_t)v205, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
                  uint64_t v8 = v202;
                  uint64_t v135 = (unsigned int (**)(char *, uint64_t, uint64_t))v219;
                  goto LABEL_100;
                }
              }
            }
            uint64_t v161 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))v221;
            uint64_t v162 = v214;
            (*(void (**)(uint64_t, char *, uint64_t, __n128))v221)(v214, v220, v218, v148);
            id v163 = v146;
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v235 = v132;
            unint64_t v166 = sub_1D43AEE98(v162);
            uint64_t v167 = v132[2];
            BOOL v168 = (v165 & 1) == 0;
            uint64_t v169 = v167 + v168;
            if (__OFADD__(v167, v168))
            {
              __break(1u);
LABEL_108:
              __break(1u);
              goto LABEL_109;
            }
            char v170 = v165;
            if (v132[3] >= v169)
            {
              uint64_t v136 = v224;
              if (isUniquelyReferenced_nonNull_native)
              {
                long long v132 = v235;
                if ((v165 & 1) == 0) {
                  goto LABEL_102;
                }
              }
              else
              {
                sub_1D43D9834();
                long long v132 = v235;
                if ((v170 & 1) == 0) {
                  goto LABEL_102;
                }
              }
            }
            else
            {
              sub_1D43D5020(v169, isUniquelyReferenced_nonNull_native);
              unint64_t v171 = sub_1D43AEE98(v214);
              uint64_t v136 = v224;
              if ((v170 & 1) != (v172 & 1))
              {
                sub_1D446A7A8();
                __break(1u);
                return;
              }
              unint64_t v166 = v171;
              long long v132 = v235;
              if ((v170 & 1) == 0)
              {
LABEL_102:
                v132[(v166 >> 6) + 8] |= 1 << v166;
                uint64_t v139 = v218;
                ((void (*)(unint64_t, uint64_t, uint64_t))v161)(v132[6] + *(void *)(v204 + 72) * v166, v214, v218);
                *(void *)(v132[7] + 8 * v166) = v163;
                uint64_t v181 = v132[2];
                BOOL v182 = __OFADD__(v181, 1);
                uint64_t v183 = v181 + 1;
                if (v182) {
                  goto LABEL_108;
                }
                v132[2] = v183;
LABEL_104:
                swift_bridgeObjectRelease();
                unint64_t v184 = *v223;
                ((void (*)(uint64_t, uint64_t))*v223)(v214, v139);

                uint64_t v12 = v220;
                ((void (*)(char *, uint64_t))v184)(v220, v139);
                uint64_t v138 = (uint64_t)v205;
                sub_1D42CA8E8((uint64_t)v205, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
                uint64_t v8 = v202;
                uint64_t v135 = (unsigned int (**)(char *, uint64_t, uint64_t))v219;
LABEL_77:
                v134 += v136;
                if (!--v133)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v55 = v215;
                  goto LABEL_106;
                }
                continue;
              }
            }
            uint64_t v180 = v132[7];

            *(void *)(v180 + 8 * v166) = v163;
            uint64_t v139 = v218;
            goto LABEL_104;
          }
          break;
        }
        swift_bridgeObjectRetain();
        unint64_t v173 = sub_1D43AEE98((uint64_t)v12);
        char v175 = v174;
        swift_bridgeObjectRelease();
        if (v175)
        {
          int v176 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v235 = v132;
          uint64_t v177 = v218;
          if (!v176)
          {
            sub_1D43D9834();
            uint64_t v177 = v218;
            long long v132 = v235;
          }
          unint64_t v178 = *(void (**)(uint64_t, uint64_t, double))(v204 + 8);
          ((void (*)(unint64_t, uint64_t))v178)(v132[6] + *(void *)(v204 + 72) * v173, v177);
          long long v132 = v235;
          uint64_t v179 = *(void **)(v235[7] + 8 * v173);
          sub_1D43FD6B4(v173, (uint64_t)v235);

          uint64_t v139 = v218;
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v178 = *v223;
          uint64_t v139 = v218;
        }
        uint64_t v12 = v220;
        ((void (*)(char *, uint64_t))v178)(v220, v139);
        uint64_t v138 = (uint64_t)v205;
        sub_1D42CA8E8((uint64_t)v205, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_100:
        uint64_t v136 = v224;
        goto LABEL_77;
      }
    }
    sub_1D4276C3C(v74, &qword_1EBD7E670);
    uint64_t v77 = v215;
    sub_1D42CA6F0((uint64_t)v33, v215, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_21:
    uint64_t v78 = v226;
LABEL_25:
    sub_1D42CA8E8(v77, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v82 = v216;
    sub_1D42CA6F0((uint64_t)v33, v216, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v25 = v219;
    uint64_t v63 = v209;
    goto LABEL_26;
  }
  if (qword_1EBD80068 != -1) {
LABEL_109:
  }
    swift_once();
  uint64_t v40 = sub_1D4469928();
  sub_1D42D7FAC(v40, (uint64_t)qword_1EBD83228);
  os_log_type_t v228 = sub_1D44698F8();
  os_log_type_t v41 = sub_1D446A008();
  if (os_log_type_enabled(v228, v41))
  {
    int64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v42 = 0;
    _os_log_impl(&dword_1D4271000, v228, v41, "FMIPManager: not calling updating locating devices", v42, 2u);
    MEMORY[0x1D9447730](v42, -1, -1);
  }
  id v43 = v228;
}

void sub_1D42C8EB8(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D4469958();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D44699B8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v2 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy;
  uint64_t v13 = &qword_1EBD83000;
  if (*(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy) == *a1
    && *((void *)a1 + 1) == *(void *)(v12 + 8))
  {
    uint64_t v32 = v5;
    uint64_t v14 = *(void *)(v12 + 16);
    uint64_t v15 = *(void *)(v12 + 24);
    int v16 = *(unsigned __int8 *)(v12 + 32);
    int v30 = a1[32];
    int v31 = v16;
    uint64_t v19 = a1 + 16;
    uint64_t v17 = *((void *)a1 + 2);
    uint64_t v18 = *((void *)v19 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_1D42C93E4(v17, v14))
    {
      sub_1D42C98CC(v18, v15);
      char v21 = v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = v32;
      uint64_t v13 = &qword_1EBD83000;
      if ((v21 & 1) != 0 && v31 == (v30 & 1)) {
        goto LABEL_10;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = v32;
      uint64_t v13 = &qword_1EBD83000;
    }
  }
  if (*(unsigned char *)(v2 + v13[59]) == 1)
  {
    uint64_t v22 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshQueue);
    aBlock[4] = (uint64_t)sub_1D444E7D4;
    void aBlock[5] = v2;
    uint64_t v32 = v22;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_1D42BD950;
    uint64_t aBlock[3] = (uint64_t)&unk_1F2C12B10;
    uint64_t v23 = _Block_copy(aBlock);
    swift_retain();
    sub_1D4469988();
    uint64_t v34 = MEMORY[0x1E4FBC860];
    sub_1D444A534((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v11, v7, v23);
    _Block_release(v23);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_release();
    return;
  }
LABEL_10:
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1D4469928();
  sub_1D42D7FAC(v24, (uint64_t)qword_1EBD83228);
  swift_retain();
  uint64_t v25 = sub_1D44698F8();
  os_log_type_t v26 = sub_1D446A008();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    aBlock[0] = v28;
    *(_DWORD *)uint64_t v27 = 136315394;
    uint64_t v34 = sub_1D42CB9EC(0xD000000000000010, 0x80000001D44849C0, aBlock);
    sub_1D446A188();
    *(_WORD *)(v27 + 12) = 1024;
    LODWORD(v34) = *(unsigned __int8 *)(v2 + v13[59]);
    sub_1D446A188();
    swift_release();
    _os_log_impl(&dword_1D4271000, v25, v26, "FMIPBeaconRefreshingController: %s - Won't update: isRefreshing: %{BOOL}d", (uint8_t *)v27, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v28, -1, -1);
    MEMORY[0x1D9447730](v27, -1, -1);
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_1D42C93E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469688();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v48 = (char *)&v35 - v9;
  uint64_t v10 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  uint64_t result = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    int64_t v14 = 0;
    uint64_t v15 = *(void *)(a1 + 56);
    uint64_t v38 = a1 + 56;
    uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v18 = v17 & v15;
    int64_t v39 = (unint64_t)(v16 + 63) >> 6;
    uint64_t v44 = v5 + 48;
    uint64_t v45 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    id v43 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v46 = a2 + 56;
    uint64_t v47 = v5 + 16;
    uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v36 = v5;
    uint64_t v37 = a1;
    uint64_t v35 = v13;
    if (!v18) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v41 = (v18 - 1) & v18;
    int64_t v42 = v14;
    for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
    {
      uint64_t v25 = *(void *)(v5 + 72);
      os_log_type_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
      uint64_t v27 = 1;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v13, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1) {
        return v27;
      }
      (*v43)(v48, v13, v4);
      sub_1D42AC45C(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
      uint64_t v28 = sub_1D4469AC8();
      uint64_t v29 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v30 = v28 & ~v29;
      if (((*(void *)(v46 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
      {
        (*v19)(v48, v4);
        return 0;
      }
      uint64_t v40 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v31 = a2;
      uint64_t v32 = ~v29;
      while (1)
      {
        v26(v8, *(void *)(v31 + 48) + v30 * v25, v4);
        sub_1D42AC45C(&qword_1EA6CA0E8, MEMORY[0x1E4F27990]);
        char v33 = sub_1D4469AF8();
        uint64_t v34 = *v19;
        (*v19)(v8, v4);
        if (v33) {
          break;
        }
        unint64_t v30 = (v30 + 1) & v32;
        if (((*(void *)(v46 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
        {
          v34(v48, v4);
          return 0;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v34)(v48, v4);
      a2 = v31;
      uint64_t v5 = v36;
      a1 = v37;
      uint64_t v13 = v35;
      unint64_t v18 = v41;
      int64_t v14 = v42;
      if (v41) {
        goto LABEL_7;
      }
LABEL_8:
      int64_t v21 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        break;
      }
      if (v21 >= v39) {
        goto LABEL_34;
      }
      unint64_t v22 = *(void *)(v38 + 8 * v21);
      int64_t v23 = v14 + 1;
      if (!v22)
      {
        int64_t v23 = v14 + 2;
        if (v14 + 2 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = *(void *)(v38 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 3;
          if (v14 + 3 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = *(void *)(v38 + 8 * v23);
          if (!v22)
          {
            uint64_t v24 = v14 + 4;
            if (v14 + 4 >= v39)
            {
LABEL_34:
              uint64_t v27 = 1;
              (*v45)(v13, 1, 1, v4);
              return v27;
            }
            unint64_t v22 = *(void *)(v38 + 8 * v24);
            if (!v22)
            {
              while (1)
              {
                int64_t v23 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_36;
                }
                if (v23 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = *(void *)(v38 + 8 * v23);
                ++v24;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v23 = v14 + 4;
          }
        }
      }
LABEL_21:
      uint64_t v41 = (v22 - 1) & v22;
      int64_t v42 = v23;
    }
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  return 0;
}

void sub_1D42C98CC(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = sub_1D4469688();
  uint64_t v52 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v53 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CAFA0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v43 - v9;
  if (a1 == a2)
  {
    BOOL v55 = 1;
    return;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
LABEL_33:
    BOOL v55 = 0;
    return;
  }
  int64_t v54 = 0;
  uint64_t v48 = a1;
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v12 = a1 + 64;
  uint64_t v11 = v13;
  uint64_t v14 = 1 << *(unsigned char *)(v12 - 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v11;
  uint64_t v17 = (uint64_t)v53;
  uint64_t v47 = v52 + 16;
  uint64_t v50 = (void (**)(uint64_t, char *, uint64_t))(v52 + 32);
  uint64_t v51 = a2;
  uint64_t v49 = (void (**)(uint64_t, uint64_t))(v52 + 8);
  uint64_t v45 = v12;
  int64_t v46 = (unint64_t)(v14 + 63) >> 6;
  int64_t v44 = v46 - 1;
  unint64_t v18 = (uint64_t *)&unk_1EA6CAFA8;
  while (1)
  {
    if (v16)
    {
      unint64_t v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v20 = v19 | (v54 << 6);
      uint64_t v21 = v51;
LABEL_8:
      uint64_t v22 = v48;
      (*(void (**)(char *, unint64_t, uint64_t))(v52 + 16))(v8, *(void *)(v48 + 48) + *(void *)(v52 + 72) * v20, v56);
      int64_t v23 = *(void **)(*(void *)(v22 + 56) + 8 * v20);
      uint64_t v24 = sub_1D42D5DA0(v18);
      *(void *)&v8[*(int *)(v24 + 48)] = v23;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 0, 1, v24);
      id v25 = v23;
      goto LABEL_27;
    }
    int64_t v26 = v54 + 1;
    uint64_t v21 = v51;
    if (__OFADD__(v54, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v26 < v46)
    {
      unint64_t v27 = *(void *)(v45 + 8 * v26);
      if (v27) {
        goto LABEL_12;
      }
      int64_t v28 = v54 + 2;
      ++v54;
      if (v26 + 1 < v46)
      {
        unint64_t v27 = *(void *)(v45 + 8 * v28);
        if (v27) {
          goto LABEL_15;
        }
        int64_t v54 = v26 + 1;
        if (v26 + 2 < v46)
        {
          unint64_t v27 = *(void *)(v45 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          int64_t v28 = v26 + 3;
          int64_t v54 = v26 + 2;
          if (v26 + 3 < v46) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v29 = sub_1D42D5DA0(v18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v8, 1, 1, v29);
    unint64_t v16 = 0;
LABEL_27:
    sub_1D4276C98((uint64_t)v8, (uint64_t)v10, &qword_1EA6CAFA0);
    uint64_t v30 = sub_1D42D5DA0(v18);
    int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v10, 1, v30);
    BOOL v55 = v31 == 1;
    if (v31 == 1) {
      return;
    }
    uint64_t v32 = v18;
    uint64_t v33 = *(int *)(v30 + 48);
    uint64_t v34 = v10;
    uint64_t v35 = v10;
    uint64_t v36 = v56;
    (*v50)(v17, v34, v56);
    uint64_t v37 = v35;
    uint64_t v38 = *(void **)&v35[v33];
    unint64_t v39 = sub_1D43AEE98(v17);
    LOBYTE(v35) = v40;
    (*v49)(v17, v36);
    if ((v35 & 1) == 0)
    {

      goto LABEL_33;
    }
    sub_1D4275AD0(0, &qword_1EA6CAFB0);
    id v41 = *(id *)(*(void *)(v21 + 56) + 8 * v39);
    char v42 = sub_1D446A118();

    unint64_t v18 = v32;
    uint64_t v10 = v37;
    if ((v42 & 1) == 0) {
      return;
    }
  }
  unint64_t v27 = *(void *)(v45 + 8 * v28);
  if (v27)
  {
LABEL_15:
    int64_t v26 = v28;
LABEL_12:
    unint64_t v16 = (v27 - 1) & v27;
    unint64_t v20 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v54 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v46)
    {
      int64_t v54 = v44;
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v45 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_1D42C9D88(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v4 - 8);
  double v69 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D42D5DA0(&qword_1EA6CA1F8);
  MEMORY[0x1F4188790](v6 - 8);
  id v68 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v67 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPDevice();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v71 = (uint64_t)&v62 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v66 = (uint64_t)&v62 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v62 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  uint64_t v24 = (char *)&v62 - v23;
  MEMORY[0x1F4188790](v22);
  int64_t v26 = (char *)&v62 - v25;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_1D4469928();
  sub_1D42D7FAC(v27, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain_n();
  int64_t v28 = sub_1D44698F8();
  os_log_type_t v29 = sub_1D446A038();
  int v30 = v29;
  BOOL v31 = os_log_type_enabled(v28, v29);
  double v72 = a2;
  double v73 = v14;
  uint64_t v65 = a1;
  if (v31)
  {
    uint64_t v32 = swift_slowAlloc();
    LODWORD(v75) = v30;
    uint64_t v33 = (uint8_t *)v32;
    uint64_t v76 = swift_slowAlloc();
    *(void *)&v82[0] = v76;
    uint64_t v74 = v33;
    *(_DWORD *)uint64_t v33 = 136315138;
    id v70 = v33 + 4;
    uint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = MEMORY[0x1D94460F0](v34, MEMORY[0x1E4FBB1A0]);
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    v81[0] = sub_1D42CB9EC(v35, v37, (uint64_t *)v82);
    a1 = v65;
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    uint64_t v14 = v73;
    swift_bridgeObjectRelease();
    uint64_t v38 = v74;
    _os_log_impl(&dword_1D4271000, v28, (os_log_type_t)v75, "FMIPRefreshingController: updating devices with discoverIds :%s", v74, 0xCu);
    uint64_t v39 = v76;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v39, -1, -1);
    MEMORY[0x1D9447730](v38, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v76 = *(void *)(a1 + 16);
  if (!v76) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v74 = (uint8_t *)((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v75 = &v74[a1];
  uint64_t v40 = *(void *)(v11 + 72);
  swift_bridgeObjectRetain();
  uint64_t v41 = 0;
  unint64_t v42 = MEMORY[0x1E4FBC860];
  uint64_t v62 = (uint8_t *)(v72 + 9);
  while (1)
  {
    sub_1D42CA6F0((uint64_t)&v75[v40 * v41], (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42CA6F0((uint64_t)v26, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v43 = *((void *)v26 + 30);
    sub_1D42CA6F0((uint64_t)v26, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if ((v43 & 0x2000000) != 0) {
      break;
    }
    sub_1D42CA8E8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_22:
    sub_1D42CA6F0((uint64_t)v24, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v42 = sub_1D42CAE20(0, *(void *)(v42 + 16) + 1, 1, v42);
    }
    unint64_t v57 = *(void *)(v42 + 16);
    unint64_t v56 = *(void *)(v42 + 24);
    if (v57 >= v56 >> 1) {
      unint64_t v42 = sub_1D42CAE20(v56 > 1, v57 + 1, 1, v42);
    }
    ++v41;
    *(void *)(v42 + 16) = v57 + 1;
    sub_1D42CAAD0((uint64_t)v14, (uint64_t)&v74[v42 + v57 * v40], (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42CA8E8((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42CA8E8((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (v41 == v76)
    {
      swift_bridgeObjectRelease();
      return v42;
    }
  }
  uint64_t v44 = *((void *)v21 + 7);
  uint64_t result = sub_1D42CA8E8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if (!v44) {
    goto LABEL_22;
  }
  uint64_t v46 = *((void *)v26 + 7);
  if (!v46) {
    goto LABEL_44;
  }
  uint64_t v47 = v72[2];
  if (!v47) {
    goto LABEL_19;
  }
  uint64_t v48 = *((void *)v26 + 6);
  if (v72[4] == v48 && v46 == v72[5] || (sub_1D446A758() & 1) != 0) {
    goto LABEL_16;
  }
  if (v47 == 1) {
    goto LABEL_19;
  }
  if (v72[6] == v48 && v46 == v72[7] || (uint64_t result = sub_1D446A758(), (result & 1) != 0))
  {
LABEL_16:
    uint64_t v14 = v73;
    if (v26[217] < 0) {
      goto LABEL_22;
    }
    LODWORD(v70) = 1;
LABEL_21:
    sub_1D42CA6F0((uint64_t)v26, v71, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42FB494(v82);
    sub_1D4276C98((uint64_t)v82, (uint64_t)v81, &qword_1EBD7CC10);
    memset(v80, 0, sizeof(v80));
    memset(v79, 0, sizeof(v79));
    uint64_t v49 = type metadata accessor for FMIPItemGroup();
    memset(v78, 0, sizeof(v78));
    uint64_t v50 = (uint64_t)v67;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v67, 1, 1, v49);
    unsigned __int8 v77 = 7;
    uint64_t v51 = type metadata accessor for FMIPDeviceConnectedState(0);
    uint64_t v52 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v68, 1, 1, v51);
    uint64_t v53 = type metadata accessor for FMIPDeviceLostModeMetadata();
    int64_t v54 = v69;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v69, 1, 1, v53);
    uint64_t v61 = (uint64_t)v54;
    uint64_t v55 = v66;
    FMIPDevice.init(device:historicalLocations:address:crowdSourcedLocation:location:shiftedLocation:crowdSourcedLocating:itemGroup:deviceWithYou:findingCapable:beaconType:deviceConnectedState:lostModeMetadata:)(v71, 0, (char *)v81, v80, v79, (uint64_t)v78, 2, v50, v66, v70, 2, &v77, v52, v61);
    sub_1D42CA8E8((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42CAAD0(v55, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v14 = v73;
    goto LABEL_22;
  }
  if (v47 == 2)
  {
LABEL_19:
    uint64_t v14 = v73;
    if ((v26[217] & 0x80) == 0) {
      goto LABEL_22;
    }
    LODWORD(v70) = 0;
    goto LABEL_21;
  }
  double v58 = v62;
  uint64_t v59 = 2;
  while (!__OFADD__(v59, 1))
  {
    if (*((void *)v58 - 1) == v48 && v46 == *(void *)v58) {
      goto LABEL_16;
    }
    id v70 = v58;
    uint64_t v63 = v59 + 1;
    uint64_t v64 = v59;
    uint64_t result = sub_1D446A758();
    if (result) {
      goto LABEL_16;
    }
    double v58 = v70 + 16;
    uint64_t v59 = v64 + 1;
    if (v63 == v47) {
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1D42CA620(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42CA688(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42CA6F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42CA758(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42CA7C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42CA828(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D42CA888(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D42CA8E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D42CA948(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D42CA9A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D42CAA08(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D42CAA68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42CAAD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42CAB38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42CABA0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1D42D5DA0(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1D446A478();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D42CAE54(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_1D42CAE20(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D42CABA0(a1, a2, a3, a4, &qword_1EBD7D9F0, (uint64_t (*)(void))type metadata accessor for FMIPDevice, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
}

uint64_t sub_1D42CAE54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

BOOL sub_1D42CAFB0()
{
  return (sub_1D42CAFE0() & 1) == 0;
}

id sub_1D42CAFE0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1D4469498();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v17 - v8;
  (*(void (**)(uint64_t))(v1 + 160))(v7);
  uint64_t v10 = *(void *)(v1 + 80);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(v10, AssociatedConformanceWitness);
  sub_1D4469448();
  swift_bridgeObjectRelease();
  unint64_t v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v6, v2);
  id v13 = objc_msgSend(self, sel_defaultManager);
  sub_1D4469478();
  uint64_t v14 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_fileExistsAtPath_, v14);

  v12(v9, v2);
  return v15;
}

uint64_t FMIPDeviceImageCacheRequest.fileName.getter()
{
  uint64_t v1 = sub_1D44691F8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = *(void *)v0;
  unint64_t v5 = *(void *)(v0 + 8);
  unint64_t v7 = *(void *)(v0 + 16);
  unint64_t v8 = *(void *)(v0 + 24);
  unint64_t v34 = *(void *)(v0 + 32);
  unint64_t v35 = v7;
  uint64_t v9 = *(unsigned __int8 *)(v0 + 49);
  unint64_t v36 = *(void *)(v0 + 40);
  uint64_t v37 = v9;
  uint64_t v10 = *(void *)(v0 + 56);
  uint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  unint64_t v39 = v6;
  unint64_t v40 = v5;
  swift_bridgeObjectRetain();
  sub_1D4469198();
  unint64_t v11 = sub_1D42CB768();
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  unint64_t v38 = v11;
  uint64_t v13 = sub_1D446A1C8();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v2 + 8);
  v16(v4, v1);
  swift_bridgeObjectRelease();
  if (v15)
  {
    sub_1D42D5DA0(&qword_1EA6C98E0);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1D446E050;
    *(void *)(v17 + 56) = v12;
    *(void *)(v17 + 64) = sub_1D42CB714();
    *(void *)(v17 + 32) = v13;
    *(void *)(v17 + 40) = v15;
    sub_1D4469B58();
    sub_1D4469C08();
    swift_bridgeObjectRelease();
  }
  unint64_t v39 = v35;
  unint64_t v40 = v8;
  swift_bridgeObjectRetain();
  sub_1D4469198();
  uint64_t v18 = MEMORY[0x1E4FBB1A0];
  uint64_t v19 = sub_1D446A1C8();
  uint64_t v21 = v20;
  v16(v4, v1);
  swift_bridgeObjectRelease();
  if (v21)
  {
    sub_1D42D5DA0(&qword_1EA6C98E0);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1D446E050;
    *(void *)(v22 + 56) = v18;
    *(void *)(v22 + 64) = sub_1D42CB714();
    *(void *)(v22 + 32) = v19;
    *(void *)(v22 + 40) = v21;
    sub_1D4469B58();
    sub_1D4469C08();
    swift_bridgeObjectRelease();
  }
  if (v36)
  {
    unint64_t v39 = v34;
    unint64_t v40 = v36;
    swift_bridgeObjectRetain();
    sub_1D4469198();
    uint64_t v23 = MEMORY[0x1E4FBB1A0];
    uint64_t v24 = sub_1D446A1C8();
    uint64_t v26 = v25;
    v16(v4, v1);
    swift_bridgeObjectRelease();
    if (v26)
    {
      sub_1D42D5DA0(&qword_1EA6C98E0);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1D446E050;
      *(void *)(v27 + 56) = v23;
      *(void *)(v27 + 64) = sub_1D42CB714();
      *(void *)(v27 + 32) = v24;
      *(void *)(v27 + 40) = v26;
      sub_1D4469B58();
      sub_1D4469C08();
      swift_bridgeObjectRelease();
    }
  }
  sub_1D4469C08();
  unint64_t v28 = 0xE600000000000000;
  unint64_t v29 = 0x656E696C6E6FLL;
  switch(v37)
  {
    case 1:
      unint64_t v28 = 0xE700000000000000;
      unint64_t v29 = 0x656E696C66666FLL;
      break;
    case 2:
      unint64_t v29 = 0x64656B636F6CLL;
      break;
    case 3:
      unint64_t v28 = 0xE700000000000000;
      unint64_t v29 = 0x6475427466656CLL;
      break;
    case 4:
      unint64_t v28 = 0xE800000000000000;
      unint64_t v29 = 0x6475427468676972;
      break;
    case 5:
      unint64_t v29 = 0xD00000000000001ALL;
      int v30 = "caseLidOpenLeftRightInside";
      goto LABEL_17;
    case 6:
      unint64_t v28 = 0xED00006465736F6CLL;
      unint64_t v29 = 0x4364694C65736163;
      break;
    case 7:
      unint64_t v28 = 0x80000001D447E0C0;
      unint64_t v29 = 0xD000000000000015;
      break;
    case 8:
      unint64_t v29 = 0xD000000000000016;
      int v30 = "caseLidOpenRightInside";
LABEL_17:
      unint64_t v28 = (unint64_t)(v30 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v39 = v29;
  unint64_t v40 = v28;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D42D5DA0(&qword_1EA6C98E0);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1D446E050;
  *(void *)(v31 + 56) = MEMORY[0x1E4FBC958];
  *(void *)(v31 + 64) = sub_1D42CB7BC();
  *(void *)(v31 + 32) = v10;
  sub_1D4469B58();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  return v41;
}

unint64_t sub_1D42CB714()
{
  unint64_t result = qword_1EA6C98E8;
  if (!qword_1EA6C98E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C98E8);
  }
  return result;
}

unint64_t sub_1D42CB768()
{
  unint64_t result = qword_1EA6CB780;
  if (!qword_1EA6CB780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB780);
  }
  return result;
}

unint64_t sub_1D42CB7BC()
{
  unint64_t result = qword_1EA6CBB18;
  if (!qword_1EA6CBB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CBB18);
  }
  return result;
}

uint64_t sub_1D42CB810()
{
  uint64_t v0 = sub_1D4469498();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42CB900();
  sub_1D4469438();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1D42CB900()
{
  if (qword_1EBD7E738 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469408();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42CB9EC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1D42CBB1C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1D42CBAC0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1D42CBAC0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_1D42BEC64((uint64_t)v12);
  return v7;
}

uint64_t sub_1D42CBAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1D42CBB1C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1D446A198();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1D42CBCD8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1D446A3E8();
  if (!v8)
  {
    sub_1D446A478();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1D446A4D8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1D42CBCD8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1D42CBD70(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1D42DD1D4(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1D42DD1D4(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1D42CBD70(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1D42CBEE8(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1D446A388();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1D446A478();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1D4469C28();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1D446A4D8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1D446A478();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_1D42CBEE8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1D42D5DA0(&qword_1EBD7E838);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t type metadata accessor for FMIPItem()
{
  uint64_t result = qword_1EBD7E7E0;
  if (!qword_1EBD7E7E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t static FMIPDevice.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1F4188790](a1);
  unint64_t v3 = v2;
  unint64_t v4 = (void *)v1;
  uint64_t v5 = type metadata accessor for FMIPItemGroup();
  uint64_t v518 = *(void *)(v5 - 8);
  uint64_t v519 = v5;
  MEMORY[0x1F4188790](v5);
  v517 = (uint64_t *)&v488[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v7 - 8);
  v520 = (uint64_t *)&v488[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v516 = sub_1D42D5DA0(&qword_1EA6CB3B0);
  MEMORY[0x1F4188790](v516);
  v521 = &v488[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for FMIPEraseMetadata();
  uint64_t v512 = *(void *)(v10 - 8);
  uint64_t v513 = v10;
  MEMORY[0x1F4188790](v10);
  v511 = &v488[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1D42D5DA0(&qword_1EBD7CE38);
  MEMORY[0x1F4188790](v12 - 8);
  v514 = &v488[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v510 = sub_1D42D5DA0(&qword_1EBD7CE40);
  MEMORY[0x1F4188790](v510);
  v515 = &v488[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for FMIPLockMetadata();
  uint64_t v503 = *(void *)(v15 - 8);
  uint64_t v504 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  v505 = &v488[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  v506 = &v488[-v19];
  MEMORY[0x1F4188790](v18);
  v507 = &v488[-v20];
  uint64_t v21 = sub_1D42D5DA0(&qword_1EBD7CDF8);
  MEMORY[0x1F4188790](v21 - 8);
  v508 = &v488[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v502 = sub_1D42D5DA0(&qword_1EBD7CE00);
  MEMORY[0x1F4188790](v502);
  v509 = &v488[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v498 = *(void *)(v24 - 8);
  uint64_t v499 = v24;
  MEMORY[0x1F4188790](v24);
  v497 = &v488[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v26 - 8);
  v500 = &v488[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v496 = sub_1D42D5DA0(&qword_1EBD7D4E8);
  MEMORY[0x1F4188790](v496);
  v501 = &v488[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = type metadata accessor for FMIPPlaySoundMetadata();
  uint64_t v492 = *(void *)(v29 - 8);
  uint64_t v493 = v29;
  MEMORY[0x1F4188790](v29);
  v491 = &v488[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v31 = sub_1D42D5DA0(&qword_1EBD7CEA0);
  MEMORY[0x1F4188790](v31 - 8);
  v494 = &v488[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v490 = sub_1D42D5DA0(&qword_1EBD7CEA8);
  MEMORY[0x1F4188790](v490);
  v495 = &v488[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v534 = sub_1D4469618();
  uint64_t v532 = *(void *)(v534 - 8);
  MEMORY[0x1F4188790](v534);
  v527 = &v488[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v35 = sub_1D42D5DA0(&qword_1EBD7CB80);
  uint64_t v36 = MEMORY[0x1F4188790](v35 - 8);
  v522 = &v488[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  v524 = &v488[-v39];
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  v525 = &v488[-v41];
  MEMORY[0x1F4188790](v40);
  v528 = &v488[-v42];
  uint64_t v530 = sub_1D42D5DA0(&qword_1EBD7CB88);
  uint64_t v43 = MEMORY[0x1F4188790](v530);
  v523 = &v488[-((v44 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  v526 = &v488[-v46];
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  v529 = &v488[-v48];
  MEMORY[0x1F4188790](v47);
  v533 = &v488[-v49];
  uint64_t v50 = type metadata accessor for FMIPDevice();
  uint64_t v51 = MEMORY[0x1F4188790](v50);
  v591 = &v488[-((v52 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v53 = MEMORY[0x1F4188790](v51);
  v592 = &v488[-v54];
  uint64_t v55 = MEMORY[0x1F4188790](v53);
  v589 = &v488[-v56];
  uint64_t v57 = MEMORY[0x1F4188790](v55);
  v590 = &v488[-v58];
  uint64_t v59 = MEMORY[0x1F4188790](v57);
  v588 = &v488[-v60];
  uint64_t v61 = MEMORY[0x1F4188790](v59);
  uint64_t v62 = MEMORY[0x1F4188790](v61);
  v586 = &v488[-v63];
  uint64_t v64 = MEMORY[0x1F4188790](v62);
  uint64_t v65 = MEMORY[0x1F4188790](v64);
  v584 = &v488[-v66];
  uint64_t v67 = MEMORY[0x1F4188790](v65);
  uint64_t v68 = MEMORY[0x1F4188790](v67);
  id v70 = &v488[-v69];
  uint64_t v71 = MEMORY[0x1F4188790](v68);
  uint64_t v72 = MEMORY[0x1F4188790](v71);
  v580 = &v488[-v73];
  uint64_t v74 = MEMORY[0x1F4188790](v72);
  v581 = &v488[-v75];
  uint64_t v76 = MEMORY[0x1F4188790](v74);
  v578 = &v488[-v77];
  uint64_t v78 = MEMORY[0x1F4188790](v76);
  v579 = &v488[-v79];
  uint64_t v80 = MEMORY[0x1F4188790](v78);
  v577 = &v488[-v81];
  uint64_t v82 = MEMORY[0x1F4188790](v80);
  v576 = &v488[-v83];
  uint64_t v84 = MEMORY[0x1F4188790](v82);
  v574 = &v488[-v85];
  uint64_t v86 = MEMORY[0x1F4188790](v84);
  v575 = &v488[-v87];
  uint64_t v88 = MEMORY[0x1F4188790](v86);
  v573 = &v488[-v89];
  uint64_t v90 = MEMORY[0x1F4188790](v88);
  id v92 = &v488[-v91];
  uint64_t v93 = MEMORY[0x1F4188790](v90);
  v572 = &v488[-v94];
  uint64_t v95 = MEMORY[0x1F4188790](v93);
  v595 = &v488[-v96];
  uint64_t v97 = MEMORY[0x1F4188790](v95);
  v570 = &v488[-v98];
  uint64_t v99 = MEMORY[0x1F4188790](v97);
  v571 = &v488[-v100];
  uint64_t v101 = MEMORY[0x1F4188790](v99);
  v569 = &v488[-v102];
  uint64_t v103 = MEMORY[0x1F4188790](v101);
  v568 = &v488[-v104];
  uint64_t v105 = MEMORY[0x1F4188790](v103);
  v566 = &v488[-v106];
  uint64_t v107 = MEMORY[0x1F4188790](v105);
  v567 = &v488[-v108];
  uint64_t v109 = MEMORY[0x1F4188790](v107);
  v564 = &v488[-v110];
  uint64_t v111 = MEMORY[0x1F4188790](v109);
  v565 = &v488[-v112];
  uint64_t v113 = MEMORY[0x1F4188790](v111);
  v593 = &v488[-v114];
  uint64_t v115 = MEMORY[0x1F4188790](v113);
  v594 = &v488[-v116];
  uint64_t v117 = MEMORY[0x1F4188790](v115);
  v597 = &v488[-v118];
  uint64_t v119 = MEMORY[0x1F4188790](v117);
  v598 = &v488[-v120];
  uint64_t v121 = MEMORY[0x1F4188790](v119);
  v599 = &v488[-v122];
  uint64_t v123 = MEMORY[0x1F4188790](v121);
  v563 = &v488[-v124];
  uint64_t v125 = MEMORY[0x1F4188790](v123);
  uint64_t v126 = MEMORY[0x1F4188790](v125);
  uint64_t v127 = MEMORY[0x1F4188790](v126);
  v560 = &v488[-v128];
  uint64_t v129 = MEMORY[0x1F4188790](v127);
  uint64_t v131 = &v488[-v130];
  uint64_t v132 = MEMORY[0x1F4188790](v129);
  v600 = &v488[-v133];
  uint64_t v134 = MEMORY[0x1F4188790](v132);
  v559 = &v488[-v135];
  uint64_t v136 = MEMORY[0x1F4188790](v134);
  v558 = &v488[-v137];
  uint64_t v138 = MEMORY[0x1F4188790](v136);
  v557 = &v488[-v139];
  uint64_t v140 = MEMORY[0x1F4188790](v138);
  v601 = &v488[-v141];
  uint64_t v142 = MEMORY[0x1F4188790](v140);
  v602 = &v488[-v143];
  uint64_t v144 = MEMORY[0x1F4188790](v142);
  v556 = &v488[-v145];
  uint64_t v146 = MEMORY[0x1F4188790](v144);
  v606 = &v488[-v147];
  uint64_t v148 = MEMORY[0x1F4188790](v146);
  v605 = &v488[-v149];
  uint64_t v150 = MEMORY[0x1F4188790](v148);
  v555 = &v488[-v151];
  uint64_t v152 = MEMORY[0x1F4188790](v150);
  v554 = &v488[-v153];
  uint64_t v154 = MEMORY[0x1F4188790](v152);
  v553 = &v488[-v155];
  uint64_t v156 = MEMORY[0x1F4188790](v154);
  v552 = &v488[-v157];
  uint64_t v158 = MEMORY[0x1F4188790](v156);
  v551 = &v488[-v159];
  uint64_t v160 = MEMORY[0x1F4188790](v158);
  v550 = (double *)&v488[-v161];
  uint64_t v162 = MEMORY[0x1F4188790](v160);
  v549 = (double *)&v488[-v163];
  uint64_t v164 = MEMORY[0x1F4188790](v162);
  v547 = &v488[-v165];
  uint64_t v166 = MEMORY[0x1F4188790](v164);
  v548 = &v488[-v167];
  uint64_t v168 = MEMORY[0x1F4188790](v166);
  v546 = &v488[-v169];
  uint64_t v170 = MEMORY[0x1F4188790](v168);
  v545 = &v488[-v171];
  uint64_t v172 = MEMORY[0x1F4188790](v170);
  v544 = &v488[-v173];
  uint64_t v174 = MEMORY[0x1F4188790](v172);
  v543 = &v488[-v175];
  uint64_t v176 = MEMORY[0x1F4188790](v174);
  v610 = &v488[-v177];
  uint64_t v178 = MEMORY[0x1F4188790](v176);
  uint64_t v611 = (uint64_t)&v488[-v179];
  uint64_t v180 = MEMORY[0x1F4188790](v178);
  v608 = &v488[-v181];
  uint64_t v182 = MEMORY[0x1F4188790](v180);
  v542 = &v488[-v183];
  uint64_t v184 = MEMORY[0x1F4188790](v182);
  v535 = &v488[-v185];
  uint64_t v186 = MEMORY[0x1F4188790](v184);
  v541 = &v488[-v187];
  uint64_t v188 = MEMORY[0x1F4188790](v186);
  v609 = &v488[-v189];
  uint64_t v190 = MEMORY[0x1F4188790](v188);
  uint64_t v614 = (uint64_t)&v488[-v191];
  uint64_t v192 = MEMORY[0x1F4188790](v190);
  v539 = &v488[-v193];
  uint64_t v194 = MEMORY[0x1F4188790](v192);
  v540 = &v488[-v195];
  uint64_t v196 = MEMORY[0x1F4188790](v194);
  v538 = &v488[-v197];
  uint64_t v198 = MEMORY[0x1F4188790](v196);
  v537 = &v488[-v199];
  uint64_t v200 = MEMORY[0x1F4188790](v198);
  v612 = &v488[-v201];
  uint64_t v202 = MEMORY[0x1F4188790](v200);
  v536 = &v488[-v203];
  uint64_t v204 = MEMORY[0x1F4188790](v202);
  uint64_t v613 = (uint64_t)&v488[-v205];
  uint64_t v206 = MEMORY[0x1F4188790](v204);
  unint64_t v208 = &v488[-v207];
  uint64_t v209 = MEMORY[0x1F4188790](v206);
  uint64_t v211 = &v488[-v210];
  MEMORY[0x1F4188790](v209);
  uint64_t v213 = &v488[-v212];
  uint64_t v214 = v4[1];
  uint64_t v215 = v3[1];
  BOOL v216 = *v4 == *v3;
  v604 = v3;
  uint64_t v587 = v217;
  uint64_t v585 = v218;
  uint64_t v583 = v219;
  v596 = v70;
  uint64_t v582 = v220;
  v603 = v92;
  v531 = (int *)v50;
  uint64_t v562 = v221;
  uint64_t v561 = v222;
  v607 = v131;
  if (v216 && v214 == v215)
  {
    sub_1D42D2370((uint64_t)v4, (uint64_t)&v488[-v212], (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370((uint64_t)v3, (uint64_t)v211, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  }
  else
  {
    int v489 = sub_1D446A758();
    sub_1D42D2370((uint64_t)v4, (uint64_t)v213, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370((uint64_t)v3, (uint64_t)v211, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if ((v489 & 1) == 0)
    {
      sub_1D42D2178((uint64_t)v211, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      sub_1D42D2178((uint64_t)v213, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_16:
      uint64_t v225 = (uint64_t)v604;
      sub_1D42D2370((uint64_t)v4, (uint64_t)v208, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v226 = v613;
      sub_1D42D2370(v225, v613, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      goto LABEL_17;
    }
  }
  uint64_t v223 = *((void *)v213 + 3);
  uint64_t v224 = *((void *)v211 + 3);
  if (!v223)
  {
    swift_bridgeObjectRetain();
    sub_1D42D2178((uint64_t)v211, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v213, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (!v224) {
      goto LABEL_12;
    }
    goto LABEL_15;
  }
  if (!v224)
  {
    swift_bridgeObjectRetain();
    sub_1D42D2178((uint64_t)v211, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v213, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  if (*((void *)v213 + 2) != *((void *)v211 + 2) || v223 != v224)
  {
    int v489 = sub_1D446A758();
    swift_bridgeObjectRetain();
    sub_1D42D2178((uint64_t)v211, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v213, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    swift_bridgeObjectRelease();
    sub_1D42D2370((uint64_t)v4, (uint64_t)v208, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v225 = (uint64_t)v604;
    uint64_t v226 = v613;
    sub_1D42D2370((uint64_t)v604, v613, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (v489) {
      goto LABEL_76;
    }
LABEL_17:
    sub_1D42D2178((uint64_t)v208, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178(v226, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v227 = v536;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v536, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    os_log_type_t v228 = v612;
    sub_1D42D2370(v225, (uint64_t)v612, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  sub_1D42D2178((uint64_t)v211, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v213, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  swift_bridgeObjectRelease();
LABEL_12:
  sub_1D42D2370((uint64_t)v4, (uint64_t)v208, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v225 = (uint64_t)v604;
  uint64_t v226 = v613;
  sub_1D42D2370((uint64_t)v604, v613, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_76:
  if (*((void *)v208 + 4) == *(void *)(v226 + 32) && *((void *)v208 + 5) == *(void *)(v226 + 40))
  {
    sub_1D42D2178((uint64_t)v208, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178(v613, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v227 = v536;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v536, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    os_log_type_t v228 = v612;
    sub_1D42D2370(v225, (uint64_t)v612, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_80;
  }
  char v312 = sub_1D446A758();
  sub_1D42D2178((uint64_t)v208, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178(v613, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v227 = v536;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v536, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  os_log_type_t v228 = v612;
  sub_1D42D2370(v225, (uint64_t)v612, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if ((v312 & 1) == 0)
  {
LABEL_18:
    sub_1D42D2178((uint64_t)v228, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v227, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    char v229 = v610;
LABEL_19:
    long long v230 = v537;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v537, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v231 = v538;
    sub_1D42D2370(v225, (uint64_t)v538, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_20;
  }
LABEL_80:
  uint64_t v313 = *((void *)v227 + 7);
  uint64_t v314 = *((void *)v228 + 7);
  uint64_t v315 = v610;
  if (!v313)
  {
    swift_bridgeObjectRetain();
    sub_1D42D2178((uint64_t)v228, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v227, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (!v314) {
      goto LABEL_87;
    }
    char v229 = v315;
    goto LABEL_89;
  }
  if (!v314)
  {
    char v229 = v610;
    swift_bridgeObjectRetain();
    sub_1D42D2178((uint64_t)v612, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v227, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_89:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (*((void *)v227 + 6) != *((void *)v612 + 6) || v313 != v314)
  {
    LODWORD(v613) = sub_1D446A758();
    swift_bridgeObjectRetain();
    sub_1D42D2178((uint64_t)v612, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    char v229 = v610;
    sub_1D42D2178((uint64_t)v227, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    swift_bridgeObjectRelease();
    long long v230 = v537;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v537, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v231 = v538;
    sub_1D42D2370(v225, (uint64_t)v538, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (v613) {
      goto LABEL_91;
    }
LABEL_20:
    sub_1D42D2178((uint64_t)v230, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v231, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    long long v232 = v540;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v540, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v233 = v539;
    sub_1D42D2370(v225, (uint64_t)v539, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  sub_1D42D2178((uint64_t)v612, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v227, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  swift_bridgeObjectRelease();
LABEL_87:
  char v229 = v315;
  long long v230 = v537;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v537, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v231 = v538;
  sub_1D42D2370(v225, (uint64_t)v538, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_91:
  if (*((void *)v230 + 8) == *((void *)v231 + 8) && *((void *)v230 + 9) == *((void *)v231 + 9))
  {
    sub_1D42D2178((uint64_t)v230, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v231, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    long long v232 = v540;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v540, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v233 = v539;
    sub_1D42D2370(v225, (uint64_t)v539, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_95;
  }
  char v316 = sub_1D446A758();
  sub_1D42D2178((uint64_t)v230, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v231, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  long long v232 = v540;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v540, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v233 = v539;
  sub_1D42D2370(v225, (uint64_t)v539, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if ((v316 & 1) == 0)
  {
LABEL_21:
    sub_1D42D2178((uint64_t)v233, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v232, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370((uint64_t)v4, v614, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v234 = v609;
    sub_1D42D2370(v225, (uint64_t)v609, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v235 = v611;
    uint64_t v236 = (uint64_t)v229;
    goto LABEL_22;
  }
LABEL_95:
  uint64_t v236 = (uint64_t)v229;
  if (qword_1D44790B8[(char)v232[80]] == qword_1D44790B8[(char)v233[80]])
  {
    swift_bridgeObjectRelease_n();
    sub_1D42D2178((uint64_t)v233, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v232, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370((uint64_t)v4, v614, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v234 = v609;
    sub_1D42D2370(v225, (uint64_t)v609, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_98;
  }
  char v317 = sub_1D446A758();
  swift_bridgeObjectRelease_n();
  sub_1D42D2178((uint64_t)v233, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v232, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2370((uint64_t)v4, v614, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v234 = v609;
  sub_1D42D2370(v225, (uint64_t)v609, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v235 = v611;
  if ((v317 & 1) == 0)
  {
LABEL_22:
    sub_1D42D2178((uint64_t)v234, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178(v614, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_23:
    double v237 = v535;
    uint64_t v238 = v541;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v541, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370(v225, (uint64_t)v237, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_24;
  }
LABEL_98:
  uint64_t v318 = *(void *)(v614 + 96);
  uint64_t v319 = *((void *)v234 + 12);
  if (!v318)
  {
    swift_bridgeObjectRetain();
    sub_1D42D2178((uint64_t)v234, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178(v614, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (!v319) {
      goto LABEL_104;
    }
    goto LABEL_106;
  }
  if (!v319)
  {
    swift_bridgeObjectRetain();
    sub_1D42D2178((uint64_t)v234, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178(v614, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_106:
    swift_bridgeObjectRelease();
    uint64_t v235 = v611;
    goto LABEL_23;
  }
  if (*(void *)(v614 + 88) != *((void *)v234 + 11) || v318 != v319)
  {
    LODWORD(v613) = sub_1D446A758();
    swift_bridgeObjectRetain();
    sub_1D42D2178((uint64_t)v609, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    double v237 = v535;
    sub_1D42D2178(v614, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    swift_bridgeObjectRelease();
    uint64_t v238 = v541;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v541, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370(v225, (uint64_t)v237, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v235 = v611;
    if (v613) {
      goto LABEL_108;
    }
LABEL_24:
    sub_1D42D2178((uint64_t)v238, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v237, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v239 = v542;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v542, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    int v240 = v608;
    sub_1D42D2370(v225, (uint64_t)v608, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  sub_1D42D2178((uint64_t)v609, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178(v614, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  swift_bridgeObjectRelease();
LABEL_104:
  uint64_t v238 = v541;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v541, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  double v237 = v535;
  sub_1D42D2370(v225, (uint64_t)v535, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v235 = v611;
LABEL_108:
  if (*((void *)v238 + 13) != *((void *)v237 + 13) || *((void *)v238 + 14) != *((void *)v237 + 14))
  {
    char v320 = sub_1D446A758();
    sub_1D42D2178((uint64_t)v238, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v237, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v239 = v542;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v542, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    int v240 = v608;
    uint64_t v235 = v611;
    sub_1D42D2370(v225, (uint64_t)v608, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (v320) {
      goto LABEL_112;
    }
LABEL_25:
    sub_1D42D2178((uint64_t)v239, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v240, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370((uint64_t)v4, v235, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370(v225, v236, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_26;
  }
  sub_1D42D2178((uint64_t)v238, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v237, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v239 = v542;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v542, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  int v240 = v608;
  sub_1D42D2370(v225, (uint64_t)v608, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_112:
  if (*((void *)v239 + 15) != *((void *)v240 + 15) || *((void *)v239 + 16) != *((void *)v240 + 16))
  {
    char v321 = sub_1D446A758();
    sub_1D42D2178((uint64_t)v239, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v608, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370((uint64_t)v4, v611, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v235 = v611;
    sub_1D42D2370(v225, v236, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (v321) {
      goto LABEL_116;
    }
LABEL_26:
    sub_1D42D2178(v235, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178(v236, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    int v241 = v543;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v543, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    unsigned __int8 v242 = v544;
    sub_1D42D2370(v225, (uint64_t)v544, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_27;
  }
  sub_1D42D2178((uint64_t)v239, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v608, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2370((uint64_t)v4, v235, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2370(v225, v236, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_116:
  if (*(void *)(v235 + 136) != *(void *)(v236 + 136) || *(void *)(v235 + 144) != *(void *)(v236 + 144))
  {
    char v322 = sub_1D446A758();
    sub_1D42D2178(v235, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178(v236, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    int v241 = v543;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v543, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    unsigned __int8 v242 = v544;
    sub_1D42D2370(v225, (uint64_t)v544, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (v322) {
      goto LABEL_120;
    }
LABEL_27:
    sub_1D42D2178((uint64_t)v241, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v242, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    unint64_t v243 = v545;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v545, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v244 = v546;
    sub_1D42D2370(v225, (uint64_t)v546, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v245 = (uint64_t)v607;
    goto LABEL_28;
  }
  sub_1D42D2178(v235, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178(v236, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  int v241 = v543;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v543, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  unsigned __int8 v242 = v544;
  sub_1D42D2370(v225, (uint64_t)v544, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_120:
  uint64_t v245 = (uint64_t)v607;
  if (*((void *)v241 + 21) != *((void *)v242 + 21) || *((void *)v241 + 22) != *((void *)v242 + 22))
  {
    char v323 = sub_1D446A758();
    sub_1D42D2178((uint64_t)v241, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v242, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    unint64_t v243 = v545;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v545, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v244 = v546;
    sub_1D42D2370(v225, (uint64_t)v546, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (v323) {
      goto LABEL_124;
    }
LABEL_28:
    sub_1D42D2178((uint64_t)v243, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v244, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    unint64_t v246 = v548;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v548, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v247 = v547;
    sub_1D42D2370(v225, (uint64_t)v547, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_29;
  }
  sub_1D42D2178((uint64_t)v241, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v242, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  unint64_t v243 = v545;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v545, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v244 = v546;
  sub_1D42D2370(v225, (uint64_t)v546, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_124:
  if (*((void *)v243 + 19) == *((void *)v244 + 19) && *((void *)v243 + 20) == *((void *)v244 + 20))
  {
    sub_1D42D2178((uint64_t)v243, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v244, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    unint64_t v246 = v548;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v548, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v247 = v547;
    sub_1D42D2370(v225, (uint64_t)v547, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_128;
  }
  char v324 = sub_1D446A758();
  sub_1D42D2178((uint64_t)v243, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v244, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  unint64_t v246 = v548;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v548, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v247 = v547;
  sub_1D42D2370(v225, (uint64_t)v547, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if ((v324 & 1) == 0)
  {
LABEL_29:
    sub_1D42D2178((uint64_t)v247, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v246, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    unint64_t v248 = v549;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v549, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v249 = v550;
    sub_1D42D2370(v225, (uint64_t)v550, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_30:
    sub_1D42D2178((uint64_t)v249, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v248, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v250 = v551;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v551, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    unint64_t v251 = v552;
    sub_1D42D2370(v225, (uint64_t)v552, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_31:
    sub_1D42D2178((uint64_t)v251, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v250, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v252 = v553;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v553, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    char v253 = v554;
    sub_1D42D2370(v225, (uint64_t)v554, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_32:
    sub_1D42D2178((uint64_t)v253, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v252, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v254 = v555;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v555, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    char v255 = v605;
    sub_1D42D2370(v225, (uint64_t)v605, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v256 = v606;
LABEL_33:
    sub_1D42D2178((uint64_t)v255, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v254, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v257 = (uint64_t)v603;
LABEL_34:
    sub_1D42D2370((uint64_t)v4, (uint64_t)v256, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v258 = v556;
    sub_1D42D2370(v225, (uint64_t)v556, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_35:
    sub_1D42D2178((uint64_t)v258, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v256, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_36:
    uint64_t v259 = v602;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v602, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v260 = v601;
    sub_1D42D2370(v225, (uint64_t)v601, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v261 = (uint64_t)v600;
LABEL_37:
    sub_1D42D2178((uint64_t)v260, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v259, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_38:
    uint64_t v262 = v257;
    v263 = v557;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v557, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    v264 = v558;
    sub_1D42D2370(v225, (uint64_t)v558, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_39:
    sub_1D42D2178((uint64_t)v264, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v263, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v265 = v559;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v559, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370(v225, v261, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_40:
    uint64_t v266 = (uint64_t)v596;
    sub_1D42D2178(v261, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v265, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370((uint64_t)v4, v245, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v267 = v560;
    sub_1D42D2370(v225, (uint64_t)v560, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_41:
    uint64_t v268 = v262;
    sub_1D42D2178((uint64_t)v267, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178(v245, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v269 = v561;
    sub_1D42D2370((uint64_t)v4, v561, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v270 = v562;
    sub_1D42D2370(v225, v562, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_42:
    sub_1D42D2178(v270, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178(v269, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v271 = v563;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v563, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v272 = v599;
    sub_1D42D2370(v225, (uint64_t)v599, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v273 = v595;
LABEL_43:
    sub_1D42D2178((uint64_t)v272, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v271, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    int v274 = v598;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v598, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    long long v275 = v597;
    sub_1D42D2370(v225, (uint64_t)v597, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_44:
    sub_1D42D2178((uint64_t)v275, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v274, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_45:
    uint64_t v276 = v594;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v594, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    v277 = v593;
    sub_1D42D2370(v225, (uint64_t)v593, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v278 = v266;
LABEL_46:
    sub_1D42D2178((uint64_t)v277, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v276, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v279 = v268;
LABEL_47:
    uint64_t v280 = v565;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v565, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v281 = v564;
    sub_1D42D2370(v225, (uint64_t)v564, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v282 = v569;
LABEL_48:
    sub_1D42D2178((uint64_t)v281, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v280, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_49:
    uint64_t v283 = v567;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v567, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v284 = v566;
    sub_1D42D2370(v225, (uint64_t)v566, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_50:
    sub_1D42D2178((uint64_t)v284, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v283, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_51:
    uint64_t v285 = v568;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v568, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370(v225, (uint64_t)v282, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    long long v286 = v589;
LABEL_52:
    sub_1D42D2178((uint64_t)v282, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v285, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v287 = v571;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v571, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    v288 = v570;
    sub_1D42D2370(v225, (uint64_t)v570, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_53:
    sub_1D42D2178((uint64_t)v288, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v287, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_54:
    sub_1D42D2370((uint64_t)v4, (uint64_t)v273, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    v289 = v572;
    sub_1D42D2370(v225, (uint64_t)v572, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_55:
    sub_1D42D2178((uint64_t)v289, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v273, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_56:
    sub_1D42D2370((uint64_t)v4, v279, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v290 = v573;
    sub_1D42D2370(v225, (uint64_t)v573, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    long long v291 = v577;
LABEL_57:
    sub_1D42D2178((uint64_t)v290, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178(v279, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_58:
    v292 = v575;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v575, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    v293 = v574;
    sub_1D42D2370(v225, (uint64_t)v574, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_59:
    sub_1D42D2178((uint64_t)v293, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v292, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_60:
    uint64_t v294 = v576;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v576, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370(v225, (uint64_t)v291, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v295 = v580;
    int64_t v296 = v581;
LABEL_61:
    sub_1D42D2178((uint64_t)v294, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v291, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    v297 = v579;
    sub_1D42D2370((uint64_t)v4, (uint64_t)v579, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    v298 = v578;
    sub_1D42D2370(v225, (uint64_t)v578, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_62:
    sub_1D42D2178((uint64_t)v298, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v297, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_63:
    sub_1D42D2370((uint64_t)v4, (uint64_t)v296, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370(v225, (uint64_t)v295, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v299 = (uint64_t)v586;
LABEL_64:
    sub_1D42D2178((uint64_t)v295, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v296, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_65:
    uint64_t v300 = v582;
    sub_1D42D2370((uint64_t)v4, v582, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370(v225, v278, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v301 = v590;
LABEL_66:
    sub_1D42D2178(v278, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178(v300, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v302 = v583;
    sub_1D42D2370((uint64_t)v4, v583, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    int v303 = v584;
    sub_1D42D2370(v225, (uint64_t)v584, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_67:
    sub_1D42D2178(v302, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v303, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v304 = v585;
    sub_1D42D2370((uint64_t)v4, v585, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370(v225, v299, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_68:
    sub_1D42D2178(v299, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178(v304, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v305 = v587;
    sub_1D42D2370((uint64_t)v4, v587, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    v306 = v588;
    sub_1D42D2370(v225, (uint64_t)v588, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_69:
    sub_1D42D2178((uint64_t)v306, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178(v305, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370((uint64_t)v4, (uint64_t)v301, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370(v225, (uint64_t)v286, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_70:
    sub_1D42D2178((uint64_t)v286, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v301, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_71:
    uint64_t v307 = (uint64_t)v4;
    uint64_t v308 = v592;
    sub_1D42D2370(v307, (uint64_t)v592, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    int v309 = v591;
    sub_1D42D2370(v225, (uint64_t)v591, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_72:
    sub_1D42D2178((uint64_t)v309, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v308, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_73;
  }
LABEL_128:
  LODWORD(v614) = sub_1D42D9544(v246[192], v247[192]);
  unint64_t v248 = v549;
  sub_1D42D2178((uint64_t)v247, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v246, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2370((uint64_t)v4, (uint64_t)v248, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v249 = v550;
  sub_1D42D2370(v225, (uint64_t)v550, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if ((v614 & 1) == 0) {
    goto LABEL_30;
  }
  double v325 = v248[23];
  sub_1D42D2178((uint64_t)v248, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  double v326 = v249[23];
  sub_1D42D2178((uint64_t)v249, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v250 = v551;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v551, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  unint64_t v251 = v552;
  sub_1D42D2370(v225, (uint64_t)v552, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if (v325 != v326) {
    goto LABEL_31;
  }
  uint64_t v327 = *((void *)v250 + 25);
  sub_1D42D2178((uint64_t)v250, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v328 = *((void *)v251 + 25);
  sub_1D42D2178((uint64_t)v251, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v252 = v553;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v553, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  char v253 = v554;
  sub_1D42D2370(v225, (uint64_t)v554, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  BOOL v216 = v327 == v328;
  uint64_t v245 = (uint64_t)v607;
  if (!v216) {
    goto LABEL_32;
  }
  uint64_t v329 = *((void *)v252 + 26);
  sub_1D42D2178((uint64_t)v252, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v330 = *((void *)v253 + 26);
  sub_1D42D2178((uint64_t)v253, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v254 = v555;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v555, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  char v255 = v605;
  sub_1D42D2370(v225, (uint64_t)v605, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  BOOL v216 = v329 == v330;
  uint64_t v245 = (uint64_t)v607;
  uint64_t v256 = v606;
  if (!v216) {
    goto LABEL_33;
  }
  uint64_t v331 = v531[38];
  v332 = &v255[v331];
  v333 = v533;
  uint64_t v334 = (uint64_t)&v533[*(int *)(v530 + 48)];
  sub_1D42A3A74((uint64_t)&v254[v331], (uint64_t)v533, &qword_1EBD7CB80);
  uint64_t v335 = (uint64_t)v332;
  uint64_t v336 = (uint64_t)v333;
  uint64_t v614 = v334;
  sub_1D42A3A74(v335, v334, &qword_1EBD7CB80);
  v337 = (unsigned char *)(v532 + 48);
  v338 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v532 + 48);
  int v339 = v338(v336, 1, v534);
  uint64_t v257 = (uint64_t)v603;
  uint64_t v613 = (uint64_t)v338;
  if (v339 == 1)
  {
    sub_1D42D2178((uint64_t)v255, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v254, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (v338(v614, 1, v534) == 1)
    {
      sub_1D4276C3C((uint64_t)v533, &qword_1EBD7CB80);
      uint64_t v256 = v606;
      sub_1D42D2370((uint64_t)v4, (uint64_t)v606, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v258 = v556;
      sub_1D42D2370(v225, (uint64_t)v556, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      v340 = v531;
      goto LABEL_141;
    }
LABEL_139:
    sub_1D4276C3C((uint64_t)v533, &qword_1EBD7CB88);
    uint64_t v245 = (uint64_t)v607;
    uint64_t v256 = v606;
    goto LABEL_34;
  }
  v341 = v528;
  sub_1D42A3A74(v336, (uint64_t)v528, &qword_1EBD7CB80);
  uint64_t v342 = v534;
  v612 = v337;
  if (v338(v614, 1, v534) == 1)
  {
    sub_1D42D2178((uint64_t)v605, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v254, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    (*(void (**)(unsigned char *, uint64_t))(v532 + 8))(v341, v342);
    goto LABEL_139;
  }
  uint64_t v343 = v532;
  v344 = v341;
  v345 = v527;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v532 + 32))(v527, v614, v342);
  sub_1D42D6690(&qword_1EA6CB3B8, MEMORY[0x1E4F27928]);
  LODWORD(v614) = sub_1D4469AF8();
  v346 = *(void (**)(unsigned char *, uint64_t))(v343 + 8);
  v346(v345, v342);
  sub_1D42D2178((uint64_t)v605, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v254, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  v346(v344, v342);
  sub_1D4276C3C((uint64_t)v533, &qword_1EBD7CB80);
  uint64_t v256 = v606;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v606, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v258 = v556;
  sub_1D42D2370(v225, (uint64_t)v556, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  v340 = v531;
  uint64_t v245 = (uint64_t)v607;
  v337 = v612;
  if ((v614 & 1) == 0) {
    goto LABEL_35;
  }
LABEL_141:
  uint64_t v347 = v340[39];
  uint64_t v348 = (uint64_t)&v256[v347];
  uint64_t v349 = (uint64_t)&v258[v347];
  v350 = v529;
  uint64_t v351 = (uint64_t)&v529[*(int *)(v530 + 48)];
  sub_1D42A3A74(v348, (uint64_t)v529, &qword_1EBD7CB80);
  uint64_t v614 = v351;
  sub_1D42A3A74(v349, v351, &qword_1EBD7CB80);
  uint64_t v352 = v534;
  v353 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v613;
  int v354 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v613)(v350, 1, v534);
  v612 = v337;
  if (v354 == 1)
  {
    sub_1D42D2178((uint64_t)v258, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v606, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (v353(v614, 1, v352) == 1)
    {
      sub_1D4276C3C((uint64_t)v529, &qword_1EBD7CB80);
      uint64_t v259 = v602;
      sub_1D42D2370((uint64_t)v4, (uint64_t)v602, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v260 = v601;
      sub_1D42D2370(v225, (uint64_t)v601, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      goto LABEL_148;
    }
LABEL_146:
    sub_1D4276C3C((uint64_t)v529, &qword_1EBD7CB88);
    uint64_t v245 = (uint64_t)v607;
    goto LABEL_36;
  }
  v355 = v525;
  sub_1D42A3A74((uint64_t)v529, (uint64_t)v525, &qword_1EBD7CB80);
  if (v353(v614, 1, v352) == 1)
  {
    sub_1D42D2178((uint64_t)v258, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v606, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    (*(void (**)(unsigned char *, uint64_t))(v532 + 8))(v355, v352);
    goto LABEL_146;
  }
  uint64_t v356 = v532;
  v357 = v527;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v532 + 32))(v527, v614, v352);
  sub_1D42D6690(&qword_1EA6CB3B8, MEMORY[0x1E4F27928]);
  LODWORD(v614) = sub_1D4469AF8();
  v358 = *(void (**)(unsigned char *, uint64_t))(v356 + 8);
  v358(v357, v352);
  sub_1D42D2178((uint64_t)v258, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v606, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  v358(v355, v352);
  sub_1D4276C3C((uint64_t)v529, &qword_1EBD7CB80);
  uint64_t v259 = v602;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v602, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v260 = v601;
  sub_1D42D2370(v225, (uint64_t)v601, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v245 = (uint64_t)v607;
  uint64_t v261 = (uint64_t)v600;
  if ((v614 & 1) == 0) {
    goto LABEL_37;
  }
LABEL_148:
  uint64_t v614 = (uint64_t)v4;
  uint64_t v359 = v531[40];
  uint64_t v360 = (uint64_t)&v260[v359];
  v361 = v526;
  uint64_t v362 = (uint64_t)&v526[*(int *)(v530 + 48)];
  sub_1D42A3A74((uint64_t)&v259[v359], (uint64_t)v526, &qword_1EBD7CB80);
  sub_1D42A3A74(v360, v362, &qword_1EBD7CB80);
  v363 = v361;
  uint64_t v364 = v534;
  v365 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v613;
  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v613)(v363, 1, v534) == 1)
  {
    sub_1D42D2178((uint64_t)v601, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v602, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (v365(v362, 1, v364) == 1)
    {
      sub_1D4276C3C((uint64_t)v526, &qword_1EBD7CB80);
      unint64_t v4 = (void *)v614;
      v263 = v557;
      sub_1D42D2370(v614, (uint64_t)v557, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v225 = (uint64_t)v604;
      v264 = v558;
      sub_1D42D2370((uint64_t)v604, (uint64_t)v558, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v262 = (uint64_t)v603;
      uint64_t v261 = (uint64_t)v600;
      goto LABEL_155;
    }
LABEL_153:
    sub_1D4276C3C((uint64_t)v526, &qword_1EBD7CB88);
    uint64_t v225 = (uint64_t)v604;
    unint64_t v4 = (void *)v614;
    uint64_t v257 = (uint64_t)v603;
    uint64_t v245 = (uint64_t)v607;
    uint64_t v261 = (uint64_t)v600;
    goto LABEL_38;
  }
  sub_1D42A3A74((uint64_t)v526, (uint64_t)v524, &qword_1EBD7CB80);
  if (v365(v362, 1, v364) == 1)
  {
    sub_1D42D2178((uint64_t)v601, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v602, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    (*(void (**)(unsigned char *, uint64_t))(v532 + 8))(v524, v534);
    goto LABEL_153;
  }
  uint64_t v366 = v532;
  v367 = v527;
  uint64_t v368 = v534;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v532 + 32))(v527, v362, v534);
  sub_1D42D6690(&qword_1EA6CB3B8, MEMORY[0x1E4F27928]);
  v369 = v524;
  char v370 = sub_1D4469AF8();
  v371 = *(void (**)(unsigned char *, uint64_t))(v366 + 8);
  v371(v367, v368);
  sub_1D42D2178((uint64_t)v601, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v602, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  v371(v369, v368);
  sub_1D4276C3C((uint64_t)v526, &qword_1EBD7CB80);
  unint64_t v4 = (void *)v614;
  v263 = v557;
  sub_1D42D2370(v614, (uint64_t)v557, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v225 = (uint64_t)v604;
  v264 = v558;
  sub_1D42D2370((uint64_t)v604, (uint64_t)v558, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v262 = (uint64_t)v603;
  uint64_t v245 = (uint64_t)v607;
  uint64_t v261 = (uint64_t)v600;
  if ((v370 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_155:
  v372 = v531;
  uint64_t v373 = *(void *)&v263[v531[37]];
  sub_1D42D2178((uint64_t)v263, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v374 = *(void *)&v264[v372[37]];
  sub_1D42D2178((uint64_t)v264, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v265 = v559;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v559, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2370(v225, v261, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  BOOL v216 = v373 == v374;
  uint64_t v245 = (uint64_t)v607;
  if (!v216) {
    goto LABEL_40;
  }
  uint64_t v266 = (uint64_t)v596;
  uint64_t v375 = v261;
  v376 = v531;
  LODWORD(v611) = v265[v531[42]];
  sub_1D42D2178((uint64_t)v265, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  LODWORD(v376) = *(unsigned __int8 *)(v375 + v376[42]);
  sub_1D42D2178(v375, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2370((uint64_t)v4, v245, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v267 = v560;
  sub_1D42D2370(v225, (uint64_t)v560, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if (v611 != v376) {
    goto LABEL_41;
  }
  uint64_t v268 = v262;
  uint64_t v377 = (uint64_t)v267;
  v378 = v531;
  LODWORD(v611) = *(unsigned __int8 *)(v245 + v531[43]);
  sub_1D42D2178(v245, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  int v379 = *(unsigned __int8 *)(v377 + v378[43]);
  sub_1D42D2178(v377, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v269 = v561;
  sub_1D42D2370((uint64_t)v4, v561, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v270 = v562;
  sub_1D42D2370(v225, v562, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if (v611 != v379) {
    goto LABEL_42;
  }
  v380 = v531;
  int v381 = *(unsigned __int8 *)(v269 + v531[44]);
  sub_1D42D2178(v269, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  LODWORD(v380) = *(unsigned __int8 *)(v270 + v380[44]);
  sub_1D42D2178(v270, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v271 = v563;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v563, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2370(v225, (uint64_t)v599, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  BOOL v216 = v381 == v380;
  uint64_t v272 = v599;
  uint64_t v273 = v595;
  if (!v216) {
    goto LABEL_43;
  }
  uint64_t v611 = *((void *)v271 + 27);
  uint64_t v382 = *((void *)v599 + 27);
  sub_1D42D2178((uint64_t)v599, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v271, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  int v274 = v598;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v598, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  long long v275 = v597;
  sub_1D42D2370(v225, (uint64_t)v597, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if (v611 != v382) {
    goto LABEL_44;
  }
  v383 = (void *)*((void *)v274 + 33);
  v384 = (void *)*((void *)v275 + 33);
  if (!v383)
  {
    id v390 = v384;
    sub_1D42D2178((uint64_t)v597, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v598, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (!v384)
    {
      uint64_t v276 = v594;
      sub_1D42D2370(v614, (uint64_t)v594, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      v277 = v593;
      sub_1D42D2370((uint64_t)v604, (uint64_t)v593, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      goto LABEL_171;
    }
    id v391 = 0;
LABEL_169:

    uint64_t v225 = (uint64_t)v604;
    unint64_t v4 = (void *)v614;
    uint64_t v266 = (uint64_t)v596;
    uint64_t v268 = (uint64_t)v603;
    uint64_t v273 = v595;
    goto LABEL_45;
  }
  uint64_t v385 = *((void *)v597 + 32);
  uint64_t v386 = *((void *)v597 + 34);
  double v387 = *((double *)v598 + 34);
  v620[0] = *((double *)v598 + 32);
  *(void *)&v620[1] = v383;
  v620[2] = v387;
  if (!v384)
  {
    id v391 = v383;
    sub_1D42D2178((uint64_t)v597, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v598, (uint64_t (*)(void))type metadata accessor for FMIPDevice);

    id v390 = 0;
    goto LABEL_169;
  }
  LOWORD(v618[0]) = v385 & 0x101;
  BYTE2(v618[0]) = BYTE2(v385) & 1;
  BYTE3(v618[0]) = BYTE3(v385);
  *((void *)&v618[0] + 1) = v384;
  *(void *)&v618[1] = v386;
  id v388 = v383;
  char v389 = _s8FMIPCore12FMIPLocationV2eeoiySbAC_ACtFZ_0(v620, (double *)v618);
  sub_1D42D2178((uint64_t)v597, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v598, (uint64_t (*)(void))type metadata accessor for FMIPDevice);

  unint64_t v4 = (void *)v614;
  uint64_t v276 = v594;
  sub_1D42D2370(v614, (uint64_t)v594, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v225 = (uint64_t)v604;
  v277 = v593;
  sub_1D42D2370((uint64_t)v604, (uint64_t)v593, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v278 = (uint64_t)v596;
  uint64_t v268 = (uint64_t)v603;
  uint64_t v273 = v595;
  if ((v389 & 1) == 0) {
    goto LABEL_46;
  }
LABEL_171:
  v392 = (void *)*((void *)v276 + 36);
  v393 = (void *)*((void *)v277 + 36);
  if (!v392)
  {
    id v398 = v393;
    sub_1D42D2178((uint64_t)v593, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v594, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (!v393)
    {
      uint64_t v280 = v565;
      sub_1D42D2370(v614, (uint64_t)v565, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v281 = v564;
      sub_1D42D2370((uint64_t)v604, (uint64_t)v564, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      goto LABEL_180;
    }
    id v399 = 0;
LABEL_178:

    uint64_t v225 = (uint64_t)v604;
    unint64_t v4 = (void *)v614;
    uint64_t v278 = (uint64_t)v596;
    uint64_t v279 = (uint64_t)v603;
    uint64_t v273 = v595;
    goto LABEL_47;
  }
  uint64_t v394 = *((void *)v593 + 35);
  uint64_t v395 = *((void *)v593 + 37);
  double v396 = *((double *)v594 + 37);
  v620[0] = *((double *)v594 + 35);
  *(void *)&v620[1] = v392;
  v620[2] = v396;
  if (!v393)
  {
    id v399 = v392;
    sub_1D42D2178((uint64_t)v593, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v594, (uint64_t (*)(void))type metadata accessor for FMIPDevice);

    id v398 = 0;
    goto LABEL_178;
  }
  LOWORD(v618[0]) = v394 & 0x101;
  BYTE2(v618[0]) = BYTE2(v394) & 1;
  BYTE3(v618[0]) = BYTE3(v394);
  *((void *)&v618[0] + 1) = v393;
  *(void *)&v618[1] = v395;
  id v397 = v392;
  LODWORD(v611) = _s8FMIPCore12FMIPLocationV2eeoiySbAC_ACtFZ_0(v620, (double *)v618);
  sub_1D42D2178((uint64_t)v593, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v594, (uint64_t (*)(void))type metadata accessor for FMIPDevice);

  unint64_t v4 = (void *)v614;
  uint64_t v280 = v565;
  sub_1D42D2370(v614, (uint64_t)v565, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v225 = (uint64_t)v604;
  uint64_t v281 = v564;
  sub_1D42D2370((uint64_t)v604, (uint64_t)v564, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v278 = (uint64_t)v596;
  uint64_t v279 = (uint64_t)v603;
  uint64_t v273 = v595;
  uint64_t v282 = v569;
  if ((v611 & 1) == 0) {
    goto LABEL_48;
  }
LABEL_180:
  uint64_t v400 = *((void *)v280 + 34);
  v618[0] = *((_OWORD *)v280 + 16);
  *(void *)&v618[1] = v400;
  double v401 = *((double *)v280 + 37);
  long long v624 = *(_OWORD *)(v280 + 280);
  double v625 = v401;
  uint64_t v402 = (*((void *)v280 + 27) >> 5) & 1;
  v403 = v531;
  uint64_t v404 = (uint64_t)&v280[v531[32]];
  LOBYTE(v622) = v280[80];
  sub_1D42D248C((uint64_t *)v618, (uint64_t *)&v624, v402, v404, (unsigned __int8 *)&v622, v620);
  double v405 = v620[0];
  double v406 = v620[1];
  double v407 = v620[2];
  double v408 = *((double *)v281 + 34);
  long long v624 = *((_OWORD *)v281 + 16);
  double v625 = v408;
  uint64_t v409 = *((void *)v281 + 37);
  long long v622 = *(_OWORD *)(v281 + 280);
  uint64_t v623 = v409;
  uint64_t v410 = (*((void *)v281 + 27) >> 5) & 1;
  uint64_t v411 = (uint64_t)&v281[v403[32]];
  v621[0] = v281[80];
  sub_1D42D248C((uint64_t *)&v624, (uint64_t *)&v622, v410, v411, v621, (double *)v618);
  v412 = (void *)*((void *)&v618[0] + 1);
  if (v406 == 0.0)
  {
    sub_1D42D2178((uint64_t)v564, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v565, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (!v412)
    {
      uint64_t v283 = v567;
      sub_1D42D2370(v614, (uint64_t)v567, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v284 = v566;
      sub_1D42D2370((uint64_t)v604, (uint64_t)v566, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      goto LABEL_189;
    }
    id v414 = 0;
LABEL_187:

    uint64_t v225 = (uint64_t)v604;
    unint64_t v4 = (void *)v614;
    uint64_t v278 = (uint64_t)v596;
    uint64_t v279 = (uint64_t)v603;
    uint64_t v273 = v595;
    uint64_t v282 = v569;
    goto LABEL_49;
  }
  *(double *)&long long v624 = v405;
  *((double *)&v624 + 1) = v406;
  double v625 = v407;
  if (!*((void *)&v618[0] + 1))
  {
    id v414 = *(id *)&v406;
    sub_1D42D2178((uint64_t)v564, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v565, (uint64_t (*)(void))type metadata accessor for FMIPDevice);

    goto LABEL_187;
  }
  LODWORD(v622) = v618[0] & 0xFF010101;
  *((void *)&v622 + 1) = *((void *)&v618[0] + 1);
  uint64_t v623 = *(void *)&v618[1];
  id v413 = *(id *)&v406;
  LODWORD(v611) = _s8FMIPCore12FMIPLocationV2eeoiySbAC_ACtFZ_0((double *)&v624, (double *)&v622);

  sub_1D42D2178((uint64_t)v564, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v565, (uint64_t (*)(void))type metadata accessor for FMIPDevice);

  unint64_t v4 = (void *)v614;
  uint64_t v283 = v567;
  sub_1D42D2370(v614, (uint64_t)v567, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v225 = (uint64_t)v604;
  uint64_t v284 = v566;
  sub_1D42D2370((uint64_t)v604, (uint64_t)v566, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v278 = (uint64_t)v596;
  uint64_t v279 = (uint64_t)v603;
  uint64_t v273 = v595;
  uint64_t v282 = v569;
  if ((v611 & 1) == 0) {
    goto LABEL_50;
  }
LABEL_189:
  sub_1D4276C98((uint64_t)(v283 + 304), (uint64_t)v621, &qword_1EBD7CC10);
  sub_1D4276C98((uint64_t)(v284 + 304), (uint64_t)&v622, &qword_1EBD7CC10);
  sub_1D4276C98((uint64_t)v621, (uint64_t)v620, &qword_1EBD7CC10);
  sub_1D4276C98((uint64_t)&v622, (uint64_t)&v620[36], &qword_1EBD7CC10);
  sub_1D4276C98((uint64_t)v621, (uint64_t)&v624, &qword_1EBD7CC10);
  if (sub_1D42FE02C((uint64_t)&v624) == 1)
  {
    sub_1D42FAC78((uint64_t)&v622, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
    sub_1D42D2178((uint64_t)v566, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v567, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D4276C98((uint64_t)&v620[36], (uint64_t)v619, &qword_1EBD7CC10);
    sub_1D4276C98((uint64_t)v619, (uint64_t)v618, &qword_1EBD7CC10);
    if (sub_1D42FE02C((uint64_t)v618) == 1)
    {
      sub_1D4276C98((uint64_t)v620, (uint64_t)v617, &qword_1EBD7CC10);
      sub_1D42FAC78((uint64_t)v617, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
      unint64_t v4 = (void *)v614;
      uint64_t v285 = v568;
      sub_1D42D2370(v614, (uint64_t)v568, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v225 = (uint64_t)v604;
      uint64_t v282 = v569;
      sub_1D42D2370((uint64_t)v604, (uint64_t)v569, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v278 = (uint64_t)v596;
      uint64_t v279 = (uint64_t)v603;
      uint64_t v273 = v595;
      goto LABEL_196;
    }
LABEL_194:
    memcpy(v618, v620, sizeof(v618));
    sub_1D42FE044((uint64_t)v618);
    uint64_t v225 = (uint64_t)v604;
    unint64_t v4 = (void *)v614;
    uint64_t v278 = (uint64_t)v596;
    uint64_t v279 = (uint64_t)v603;
    uint64_t v273 = v595;
    uint64_t v282 = v569;
    goto LABEL_51;
  }
  sub_1D4276C98((uint64_t)v621, (uint64_t)v619, &qword_1EBD7CC10);
  sub_1D4276C98((uint64_t)&v622, (uint64_t)v618, &qword_1EBD7CC10);
  if (sub_1D42FE02C((uint64_t)v618) == 1)
  {
    sub_1D4276C98((uint64_t)v621, (uint64_t)v615, &qword_1EBD7CC10);
    sub_1D4276C98((uint64_t)v621, (uint64_t)v616, &qword_1EBD7CC10);
    sub_1D42FC768((uint64_t)v616);
    sub_1D42FC768((uint64_t)v615);
    sub_1D42D2178((uint64_t)v566, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v567, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    memcpy(v617, v619, sizeof(v617));
    sub_1D42FC8A4((uint64_t)v617);
    goto LABEL_194;
  }
  sub_1D4276C98((uint64_t)&v622, (uint64_t)v615, &qword_1EBD7CC10);
  memcpy(v617, v615, sizeof(v617));
  char v415 = _s8FMIPCore11FMIPAddressV2eeoiySbAC_ACtFZ_0(v619, v617);
  sub_1D42FAC78((uint64_t)v621, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
  sub_1D42FAC78((uint64_t)v621, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
  sub_1D42D2178((uint64_t)v566, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v567, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  memcpy(v616, v619, sizeof(v616));
  sub_1D42FC8A4((uint64_t)v616);
  sub_1D4276C98((uint64_t)v620, (uint64_t)v617, &qword_1EBD7CC10);
  sub_1D42FAC78((uint64_t)v617, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
  unint64_t v4 = (void *)v614;
  uint64_t v285 = v568;
  sub_1D42D2370(v614, (uint64_t)v568, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v225 = (uint64_t)v604;
  uint64_t v282 = v569;
  sub_1D42D2370((uint64_t)v604, (uint64_t)v569, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  long long v286 = v589;
  uint64_t v278 = (uint64_t)v596;
  uint64_t v279 = (uint64_t)v603;
  uint64_t v273 = v595;
  if ((v415 & 1) == 0) {
    goto LABEL_52;
  }
LABEL_196:
  uint64_t v611 = *((void *)v285 + 30);
  sub_1D42D2178((uint64_t)v285, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  v416 = v273;
  uint64_t v417 = *((void *)v282 + 30);
  sub_1D42D2178((uint64_t)v282, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v287 = v571;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v571, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  v288 = v570;
  sub_1D42D2370(v225, (uint64_t)v570, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  BOOL v216 = v611 == v417;
  uint64_t v273 = v416;
  long long v286 = v589;
  if (!v216) {
    goto LABEL_53;
  }
  uint64_t v418 = v531[28];
  uint64_t v419 = (uint64_t)&v288[v418];
  v420 = v495;
  uint64_t v421 = (uint64_t)&v495[*(int *)(v490 + 48)];
  sub_1D42A3A74((uint64_t)&v287[v418], (uint64_t)v495, &qword_1EBD7CEA0);
  sub_1D42A3A74(v419, v421, &qword_1EBD7CEA0);
  v422 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v492 + 48);
  if (v422((uint64_t)v420, 1, v493) == 1)
  {
    sub_1D42D2178((uint64_t)v570, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v571, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (v422(v421, 1, v493) == 1)
    {
      sub_1D4276C3C((uint64_t)v495, &qword_1EBD7CEA0);
      uint64_t v273 = v595;
      sub_1D42D2370(v614, (uint64_t)v595, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      v289 = v572;
      sub_1D42D2370((uint64_t)v604, (uint64_t)v572, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      goto LABEL_205;
    }
LABEL_203:
    sub_1D4276C3C((uint64_t)v495, &qword_1EBD7CEA8);
    uint64_t v225 = (uint64_t)v604;
    unint64_t v4 = (void *)v614;
    long long v286 = v589;
    uint64_t v278 = (uint64_t)v596;
    uint64_t v279 = (uint64_t)v603;
    uint64_t v273 = v595;
    goto LABEL_54;
  }
  sub_1D42A3A74((uint64_t)v495, (uint64_t)v494, &qword_1EBD7CEA0);
  if (v422(v421, 1, v493) == 1)
  {
    sub_1D42D2178((uint64_t)v570, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v571, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v494, (uint64_t (*)(void))type metadata accessor for FMIPPlaySoundMetadata);
    goto LABEL_203;
  }
  v423 = v491;
  sub_1D42D6B4C(v421, (uint64_t)v491, (uint64_t (*)(void))type metadata accessor for FMIPPlaySoundMetadata);
  v424 = v494;
  char v425 = _s8FMIPCore21FMIPPlaySoundMetadataV2eeoiySbAC_ACtFZ_0((uint64_t)v494, (uint64_t)v423);
  sub_1D42D2178((uint64_t)v423, (uint64_t (*)(void))type metadata accessor for FMIPPlaySoundMetadata);
  sub_1D42D2178((uint64_t)v570, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v571, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v424, (uint64_t (*)(void))type metadata accessor for FMIPPlaySoundMetadata);
  sub_1D4276C3C((uint64_t)v495, &qword_1EBD7CEA0);
  unint64_t v4 = (void *)v614;
  uint64_t v273 = v595;
  sub_1D42D2370(v614, (uint64_t)v595, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v225 = (uint64_t)v604;
  v289 = v572;
  sub_1D42D2370((uint64_t)v604, (uint64_t)v572, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  long long v286 = v589;
  uint64_t v278 = (uint64_t)v596;
  uint64_t v279 = (uint64_t)v603;
  if ((v425 & 1) == 0) {
    goto LABEL_55;
  }
LABEL_205:
  uint64_t v426 = v531[29];
  uint64_t v427 = (uint64_t)&v289[v426];
  v428 = v501;
  uint64_t v429 = (uint64_t)&v501[*(int *)(v496 + 48)];
  sub_1D42A3A74((uint64_t)&v273[v426], (uint64_t)v501, &qword_1EBD7D4E0);
  sub_1D42A3A74(v427, v429, &qword_1EBD7D4E0);
  v430 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v498 + 48);
  if (v430((uint64_t)v428, 1, v499) == 1)
  {
    sub_1D42D2178((uint64_t)v572, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v595, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (v430(v429, 1, v499) == 1)
    {
      sub_1D4276C3C((uint64_t)v501, &qword_1EBD7D4E0);
      uint64_t v279 = (uint64_t)v603;
      sub_1D42D2370(v614, (uint64_t)v603, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v290 = v573;
      sub_1D42D2370((uint64_t)v604, (uint64_t)v573, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      goto LABEL_212;
    }
LABEL_210:
    sub_1D4276C3C((uint64_t)v501, &qword_1EBD7D4E8);
    uint64_t v225 = (uint64_t)v604;
    unint64_t v4 = (void *)v614;
    long long v286 = v589;
    uint64_t v278 = (uint64_t)v596;
    uint64_t v279 = (uint64_t)v603;
    goto LABEL_56;
  }
  sub_1D42A3A74((uint64_t)v501, (uint64_t)v500, &qword_1EBD7D4E0);
  if (v430(v429, 1, v499) == 1)
  {
    sub_1D42D2178((uint64_t)v572, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v595, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v500, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
    goto LABEL_210;
  }
  v431 = v497;
  sub_1D42D6B4C(v429, (uint64_t)v497, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
  v432 = v500;
  char v433 = _s8FMIPCore26FMIPDeviceLostModeMetadataV2eeoiySbAC_ACtFZ_0((uint64_t)v500, (uint64_t)v431);
  sub_1D42D2178((uint64_t)v431, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
  sub_1D42D2178((uint64_t)v572, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v595, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v432, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
  sub_1D4276C3C((uint64_t)v501, &qword_1EBD7D4E0);
  unint64_t v4 = (void *)v614;
  uint64_t v279 = (uint64_t)v603;
  sub_1D42D2370(v614, (uint64_t)v603, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v225 = (uint64_t)v604;
  uint64_t v290 = v573;
  sub_1D42D2370((uint64_t)v604, (uint64_t)v573, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  long long v286 = v589;
  uint64_t v278 = (uint64_t)v596;
  long long v291 = v577;
  if ((v433 & 1) == 0) {
    goto LABEL_57;
  }
LABEL_212:
  uint64_t v434 = v531[30];
  uint64_t v435 = (uint64_t)&v290[v434];
  v436 = v509;
  uint64_t v437 = (uint64_t)&v509[*(int *)(v502 + 48)];
  sub_1D42A3A74(v279 + v434, (uint64_t)v509, &qword_1EBD7CDF8);
  sub_1D42A3A74(v435, v437, &qword_1EBD7CDF8);
  v438 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v503 + 48);
  if (v438((uint64_t)v436, 1, v504) == 1)
  {
    sub_1D42D2178((uint64_t)v573, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v603, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (v438(v437, 1, v504) == 1)
    {
      sub_1D4276C3C((uint64_t)v509, &qword_1EBD7CDF8);
      v292 = v575;
      sub_1D42D2370(v614, (uint64_t)v575, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      v293 = v574;
      sub_1D42D2370((uint64_t)v604, (uint64_t)v574, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      goto LABEL_222;
    }
    goto LABEL_217;
  }
  sub_1D42A3A74((uint64_t)v509, (uint64_t)v508, &qword_1EBD7CDF8);
  if (v438(v437, 1, v504) == 1)
  {
    sub_1D42D2178((uint64_t)v573, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v603, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v508, (uint64_t (*)(void))type metadata accessor for FMIPLockMetadata);
LABEL_217:
    v439 = &qword_1EBD7CE00;
LABEL_218:
    sub_1D4276C3C((uint64_t)v509, v439);
    uint64_t v225 = (uint64_t)v604;
    unint64_t v4 = (void *)v614;
    long long v286 = v589;
    uint64_t v278 = (uint64_t)v596;
    long long v291 = v577;
    goto LABEL_58;
  }
  v440 = v507;
  sub_1D42D6B4C(v437, (uint64_t)v507, (uint64_t (*)(void))type metadata accessor for FMIPLockMetadata);
  v441 = v508;
  char v442 = sub_1D44695C8();
  sub_1D42D2370((uint64_t)v441, (uint64_t)v506, (uint64_t (*)(void))type metadata accessor for FMIPLockMetadata);
  sub_1D42D2370((uint64_t)v440, (uint64_t)v505, (uint64_t (*)(void))type metadata accessor for FMIPLockMetadata);
  if ((v442 & 1) == 0)
  {
    sub_1D42D2178((uint64_t)v505, (uint64_t (*)(void))type metadata accessor for FMIPLockMetadata);
    sub_1D42D2178((uint64_t)v506, (uint64_t (*)(void))type metadata accessor for FMIPLockMetadata);
    sub_1D42D2178((uint64_t)v507, (uint64_t (*)(void))type metadata accessor for FMIPLockMetadata);
    sub_1D42D2178((uint64_t)v573, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v603, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v508, (uint64_t (*)(void))type metadata accessor for FMIPLockMetadata);
    v439 = &qword_1EBD7CDF8;
    goto LABEL_218;
  }
  v443 = v506;
  uint64_t v444 = qword_1D4479028[*v506];
  uint64_t v445 = qword_1D4479028[*v505];
  sub_1D42D2178((uint64_t)v505, (uint64_t (*)(void))type metadata accessor for FMIPLockMetadata);
  sub_1D42D2178((uint64_t)v443, (uint64_t (*)(void))type metadata accessor for FMIPLockMetadata);
  sub_1D42D2178((uint64_t)v507, (uint64_t (*)(void))type metadata accessor for FMIPLockMetadata);
  sub_1D42D2178((uint64_t)v573, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v603, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v508, (uint64_t (*)(void))type metadata accessor for FMIPLockMetadata);
  sub_1D4276C3C((uint64_t)v509, &qword_1EBD7CDF8);
  unint64_t v4 = (void *)v614;
  v292 = v575;
  sub_1D42D2370(v614, (uint64_t)v575, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v225 = (uint64_t)v604;
  v293 = v574;
  sub_1D42D2370((uint64_t)v604, (uint64_t)v574, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  BOOL v216 = v444 == v445;
  long long v286 = v589;
  uint64_t v278 = (uint64_t)v596;
  long long v291 = v577;
  if (!v216) {
    goto LABEL_59;
  }
LABEL_222:
  uint64_t v446 = v531[31];
  uint64_t v447 = (uint64_t)&v293[v446];
  v448 = v515;
  uint64_t v449 = (uint64_t)&v515[*(int *)(v510 + 48)];
  sub_1D42A3A74((uint64_t)&v292[v446], (uint64_t)v515, &qword_1EBD7CE38);
  sub_1D42A3A74(v447, v449, &qword_1EBD7CE38);
  v450 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v512 + 48);
  if (v450((uint64_t)v448, 1, v513) == 1)
  {
    sub_1D42D2178((uint64_t)v574, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v575, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (v450(v449, 1, v513) == 1)
    {
      sub_1D4276C3C((uint64_t)v515, &qword_1EBD7CE38);
      unint64_t v4 = (void *)v614;
      uint64_t v294 = v576;
      sub_1D42D2370(v614, (uint64_t)v576, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v225 = (uint64_t)v604;
      long long v291 = v577;
      sub_1D42D2370((uint64_t)v604, (uint64_t)v577, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v278 = (uint64_t)v596;
      int64_t v296 = v581;
      uint64_t v295 = v580;
      goto LABEL_230;
    }
LABEL_227:
    sub_1D4276C3C((uint64_t)v515, &qword_1EBD7CE40);
    uint64_t v225 = (uint64_t)v604;
    unint64_t v4 = (void *)v614;
    long long v286 = v589;
    uint64_t v278 = (uint64_t)v596;
    long long v291 = v577;
    goto LABEL_60;
  }
  sub_1D42A3A74((uint64_t)v515, (uint64_t)v514, &qword_1EBD7CE38);
  if (v450(v449, 1, v513) == 1)
  {
    sub_1D42D2178((uint64_t)v574, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v575, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v514, (uint64_t (*)(void))type metadata accessor for FMIPEraseMetadata);
    goto LABEL_227;
  }
  v451 = v511;
  sub_1D42D6B4C(v449, (uint64_t)v511, (uint64_t (*)(void))type metadata accessor for FMIPEraseMetadata);
  v452 = v514;
  char v453 = _s8FMIPCore17FMIPEraseMetadataV2eeoiySbAC_ACtFZ_0((uint64_t)v514, (uint64_t)v451);
  sub_1D42D2178((uint64_t)v451, (uint64_t (*)(void))type metadata accessor for FMIPEraseMetadata);
  sub_1D42D2178((uint64_t)v574, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v575, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v452, (uint64_t (*)(void))type metadata accessor for FMIPEraseMetadata);
  sub_1D4276C3C((uint64_t)v515, &qword_1EBD7CE38);
  unint64_t v4 = (void *)v614;
  uint64_t v294 = v576;
  sub_1D42D2370(v614, (uint64_t)v576, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v225 = (uint64_t)v604;
  long long v291 = v577;
  sub_1D42D2370((uint64_t)v604, (uint64_t)v577, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  long long v286 = v589;
  uint64_t v278 = (uint64_t)v596;
  int64_t v296 = v581;
  uint64_t v295 = v580;
  if ((v453 & 1) == 0) {
    goto LABEL_61;
  }
LABEL_230:
  char v454 = sub_1D42D9768(*((void *)v294 + 29), *((void *)v291 + 29));
  sub_1D42D2178((uint64_t)v294, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v291, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  v297 = v579;
  sub_1D42D2370((uint64_t)v4, (uint64_t)v579, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  v298 = v578;
  long long v286 = v589;
  sub_1D42D2370(v225, (uint64_t)v578, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if ((v454 & 1) == 0) {
    goto LABEL_62;
  }
  uint64_t v455 = *((void *)v298 + 31);
  if (!*((void *)v297 + 31))
  {
    swift_bridgeObjectRetain();
    sub_1D42D2178((uint64_t)v578, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v579, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (!v455)
    {
      int64_t v296 = v581;
      sub_1D42D2370(v614, (uint64_t)v581, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v295 = v580;
      sub_1D42D2370((uint64_t)v604, (uint64_t)v580, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      goto LABEL_240;
    }
LABEL_238:
    swift_bridgeObjectRelease();
    uint64_t v225 = (uint64_t)v604;
    unint64_t v4 = (void *)v614;
    long long v286 = v589;
    uint64_t v278 = (uint64_t)v596;
    int64_t v296 = v581;
    uint64_t v295 = v580;
    goto LABEL_63;
  }
  if (!v455)
  {
    swift_bridgeObjectRetain();
    sub_1D42D2178((uint64_t)v578, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v579, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_238;
  }
  swift_bridgeObjectRetain();
  uint64_t v456 = swift_bridgeObjectRetain();
  char v457 = sub_1D4416590(v456, v455);
  swift_bridgeObjectRelease();
  sub_1D42D2178((uint64_t)v578, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v579, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  swift_bridgeObjectRelease();
  unint64_t v4 = (void *)v614;
  int64_t v296 = v581;
  sub_1D42D2370(v614, (uint64_t)v581, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v225 = (uint64_t)v604;
  uint64_t v295 = v580;
  sub_1D42D2370((uint64_t)v604, (uint64_t)v580, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  long long v286 = v589;
  uint64_t v299 = (uint64_t)v586;
  uint64_t v278 = (uint64_t)v596;
  if ((v457 & 1) == 0) {
    goto LABEL_64;
  }
LABEL_240:
  uint64_t v458 = v531[32];
  uint64_t v459 = (uint64_t)&v295[v458];
  v460 = v521;
  uint64_t v461 = (uint64_t)&v521[*(int *)(v516 + 48)];
  sub_1D42A3A74((uint64_t)&v296[v458], (uint64_t)v521, &qword_1EBD7E670);
  sub_1D42A3A74(v459, v461, &qword_1EBD7E670);
  v462 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v518 + 48);
  if (v462((uint64_t)v460, 1, v519) == 1)
  {
    sub_1D42D2178((uint64_t)v580, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v581, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (v462(v461, 1, v519) == 1)
    {
      sub_1D4276C3C((uint64_t)v521, &qword_1EBD7E670);
      unint64_t v4 = (void *)v614;
      uint64_t v300 = v582;
      sub_1D42D2370(v614, v582, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v225 = (uint64_t)v604;
      uint64_t v278 = (uint64_t)v596;
      sub_1D42D2370((uint64_t)v604, (uint64_t)v596, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v299 = (uint64_t)v586;
      goto LABEL_247;
    }
LABEL_245:
    sub_1D4276C3C((uint64_t)v521, &qword_1EA6CB3B0);
    uint64_t v225 = (uint64_t)v604;
    unint64_t v4 = (void *)v614;
    long long v286 = v589;
    uint64_t v299 = (uint64_t)v586;
    uint64_t v278 = (uint64_t)v596;
    goto LABEL_65;
  }
  sub_1D42A3A74((uint64_t)v521, (uint64_t)v520, &qword_1EBD7E670);
  if (v462(v461, 1, v519) == 1)
  {
    sub_1D42D2178((uint64_t)v580, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v581, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v520, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    goto LABEL_245;
  }
  v463 = v517;
  sub_1D42D6B4C(v461, (uint64_t)v517, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  v464 = v520;
  char v465 = _s8FMIPCore13FMIPItemGroupV2eeoiySbAC_ACtFZ_0(v520, v463);
  sub_1D42D2178((uint64_t)v463, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42D2178((uint64_t)v580, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v581, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v464, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D4276C3C((uint64_t)v521, &qword_1EBD7E670);
  unint64_t v4 = (void *)v614;
  uint64_t v300 = v582;
  sub_1D42D2370(v614, v582, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v225 = (uint64_t)v604;
  uint64_t v278 = (uint64_t)v596;
  sub_1D42D2370((uint64_t)v604, (uint64_t)v596, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v301 = v590;
  long long v286 = v589;
  uint64_t v299 = (uint64_t)v586;
  if ((v465 & 1) == 0) {
    goto LABEL_66;
  }
LABEL_247:
  v466 = v531;
  int v467 = *(unsigned __int8 *)(v300 + v531[33]);
  sub_1D42D2178(v300, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  LODWORD(v466) = *(unsigned __int8 *)(v278 + v466[33]);
  sub_1D42D2178(v278, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v302 = v583;
  sub_1D42D2370((uint64_t)v4, v583, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  int v303 = v584;
  sub_1D42D2370(v225, (uint64_t)v584, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  BOOL v216 = v467 == v466;
  long long v286 = v589;
  uint64_t v301 = v590;
  if (!v216) {
    goto LABEL_67;
  }
  char v468 = sub_1D42D96BC(*(void *)(v302 + 224), *((void *)v303 + 28));
  sub_1D42D2178(v302, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v303, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v304 = v585;
  sub_1D42D2370((uint64_t)v4, v585, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  long long v286 = v589;
  sub_1D42D2370(v225, v299, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if ((v468 & 1) == 0) {
    goto LABEL_68;
  }
  v469 = v531;
  int v470 = *(unsigned __int8 *)(v304 + v531[34]);
  sub_1D42D2178(v304, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  LODWORD(v469) = *(unsigned __int8 *)(v299 + v469[34]);
  sub_1D42D2178(v299, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v305 = v587;
  sub_1D42D2370((uint64_t)v4, v587, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  v306 = v588;
  sub_1D42D2370(v225, (uint64_t)v588, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  BOOL v216 = v470 == v469;
  long long v286 = v589;
  uint64_t v301 = v590;
  if (!v216) {
    goto LABEL_69;
  }
  v471 = v531;
  int v472 = *(unsigned __int8 *)(v305 + v531[35]);
  sub_1D42D2178(v305, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  LODWORD(v471) = v306[v471[35]];
  sub_1D42D2178((uint64_t)v306, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2370((uint64_t)v4, (uint64_t)v590, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2370(v225, (uint64_t)v589, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  BOOL v216 = v472 == v471;
  long long v286 = v589;
  uint64_t v301 = v590;
  if (!v216) {
    goto LABEL_70;
  }
  uint64_t v473 = v531[36];
  v474 = &v590[v473];
  uint64_t v475 = *(void *)&v590[v473 + 8];
  v476 = &v589[v473];
  uint64_t v477 = v476[1];
  if (!v475)
  {
    swift_bridgeObjectRetain();
    sub_1D42D2178((uint64_t)v589, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v590, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (!v477) {
      goto LABEL_260;
    }
LABEL_262:
    swift_bridgeObjectRelease();
    uint64_t v225 = (uint64_t)v604;
    unint64_t v4 = (void *)v614;
    goto LABEL_71;
  }
  if (!v477)
  {
    swift_bridgeObjectRetain();
    sub_1D42D2178((uint64_t)v589, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v590, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_262;
  }
  if (*v474 == *v476 && v475 == v477)
  {
    swift_bridgeObjectRetain();
    sub_1D42D2178((uint64_t)v589, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v590, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    swift_bridgeObjectRelease();
LABEL_260:
    uint64_t v308 = v592;
    sub_1D42D2370(v614, (uint64_t)v592, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    int v309 = v591;
    sub_1D42D2370((uint64_t)v604, (uint64_t)v591, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_264;
  }
  char v478 = sub_1D446A758();
  swift_bridgeObjectRetain();
  sub_1D42D2178((uint64_t)v589, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2178((uint64_t)v590, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  swift_bridgeObjectRelease();
  uint64_t v308 = v592;
  sub_1D42D2370(v614, (uint64_t)v592, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  int v309 = v591;
  sub_1D42D2370((uint64_t)v604, (uint64_t)v591, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if ((v478 & 1) == 0) {
    goto LABEL_72;
  }
LABEL_264:
  uint64_t v479 = v531[41];
  uint64_t v480 = (uint64_t)&v309[v479];
  v481 = v523;
  uint64_t v482 = (uint64_t)&v523[*(int *)(v530 + 48)];
  sub_1D42A3A74((uint64_t)&v308[v479], (uint64_t)v523, &qword_1EBD7CB80);
  sub_1D42A3A74(v480, v482, &qword_1EBD7CB80);
  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v613)(v481, 1, v534) == 1)
  {
    sub_1D42D2178((uint64_t)v591, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v592, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v613)(v482, 1, v534) == 1)
    {
      sub_1D4276C3C((uint64_t)v523, &qword_1EBD7CB80);
      char v310 = 1;
      return v310 & 1;
    }
  }
  else
  {
    sub_1D42A3A74((uint64_t)v523, (uint64_t)v522, &qword_1EBD7CB80);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v613)(v482, 1, v534) != 1)
    {
      uint64_t v483 = v532;
      v484 = v527;
      uint64_t v485 = v534;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v532 + 32))(v527, v482, v534);
      sub_1D42D6690(&qword_1EA6CB3B8, MEMORY[0x1E4F27928]);
      v486 = v522;
      char v310 = sub_1D4469AF8();
      v487 = *(void (**)(unsigned char *, uint64_t))(v483 + 8);
      v487(v484, v485);
      sub_1D42D2178((uint64_t)v591, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      sub_1D42D2178((uint64_t)v592, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      v487(v486, v485);
      sub_1D4276C3C((uint64_t)v523, &qword_1EBD7CB80);
      return v310 & 1;
    }
    sub_1D42D2178((uint64_t)v591, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178((uint64_t)v592, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    (*(void (**)(unsigned char *, uint64_t))(v532 + 8))(v522, v534);
  }
  sub_1D4276C3C((uint64_t)v523, &qword_1EBD7CB88);
LABEL_73:
  char v310 = 0;
  return v310 & 1;
}

uint64_t sub_1D42D2058(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D42D20B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D42D2118(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D42D2178(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D42D21D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D42D2238(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42D22A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42D2308(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42D2370(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42D23D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FMIPDevice()
{
  uint64_t result = qword_1EBD7E948;
  if (!qword_1EBD7E948) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1D42D248C(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, unsigned __int8 *a5@<X4>, double *a6@<X8>)
{
  uint64_t v12 = sub_1D4469618();
  uint64_t v99 = *(char **)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v101 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v92 = (char *)&v87 - v15;
  uint64_t v16 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for FMIPItemGroup();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v91 = (uint64_t)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) == 0)
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_1D4469928();
    sub_1D42D7FAC(v36, (uint64_t)qword_1EBD83228);
    uint64_t v37 = sub_1D44698F8();
    os_log_type_t v38 = sub_1D446A008();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 67109120;
      LODWORD(v102) = 0;
      sub_1D446A188();
      _os_log_impl(&dword_1D4271000, v37, v38, "FMIPDevice: isLocationEnabled: %{BOOL}d", v39, 8u);
      MEMORY[0x1D9447730](v39, -1, -1);
    }

    *a6 = 0.0;
    a6[1] = 0.0;
    a6[2] = 0.0;
    return;
  }
  uint64_t v23 = *a1;
  uint64_t v22 = (char *)a1[1];
  uint64_t v97 = a1[2];
  uint64_t v98 = v22;
  uint64_t v24 = *a2;
  uint64_t v100 = (char *)a2[1];
  uint64_t v25 = a2[2];
  int v26 = *a5;
  sub_1D42A3A74(a4, (uint64_t)v18, &qword_1EBD7E670);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) != 1)
  {
    uint64_t v40 = v91;
    sub_1D42D6B4C((uint64_t)v18, v91, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    if (FMIPItemGroup.shouldDisplaySeparatedLocation.getter())
    {
      sub_1D42D2178(v40, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      a6[1] = 0.0;
      a6[2] = 0.0;
      *a6 = 0.0;
    }
    else
    {
      uint64_t v41 = swift_bridgeObjectRetain();
      uint64_t v42 = (double *)sub_1D4415B14(v41);
      swift_bridgeObjectRelease();
      uint64_t v43 = v100;
      if (v100)
      {
        sub_1D42D5DA0(&qword_1EA6C9ED8);
        uint64_t v44 = swift_allocObject();
        uint64_t v43 = v100;
        *(_OWORD *)(v44 + 16) = xmmword_1D446E050;
        *(unsigned char *)(v44 + 32) = v24 & 1;
        *(unsigned char *)(v44 + 33) = BYTE1(v24) & 1;
        *(unsigned char *)(v44 + 34) = BYTE2(v24) & 1;
        *(unsigned char *)(v44 + 35) = BYTE3(v24);
        *(void *)(v44 + 40) = v43;
        *(void *)(v44 + 48) = v25;
      }
      else
      {
        uint64_t v44 = MEMORY[0x1E4FBC860];
      }
      uint64_t v102 = v42;
      uint64_t v47 = v43;
      sub_1D43AE7EC(v44);
      uint64_t v48 = v102;
      uint64_t v49 = *((void *)v102 + 2);
      if (v49)
      {
        uint64_t v90 = v12;
        int v50 = *((unsigned __int8 *)v102 + 32);
        int v51 = *((unsigned __int8 *)v102 + 33);
        int v52 = *((unsigned __int8 *)v102 + 34);
        unint64_t v53 = *((unsigned __int8 *)v102 + 35);
        uint64_t v54 = (void *)*((void *)v102 + 5);
        double v55 = v102[6];
        uint64_t v56 = (char *)(v49 - 1);
        if (v49 == 1)
        {
          uint64_t v57 = v54;
        }
        else
        {
          uint64_t v88 = a6;
          uint64_t v89 = (void (**)(char *, uint64_t))(v99 + 8);
          swift_bridgeObjectRetain();
          uint64_t v57 = v54;
          uint64_t v87 = v48;
          uint64_t v58 = (unsigned __int8 *)(v48 + 7);
          uint64_t v59 = v57;
          uint64_t v60 = v92;
          do
          {
            uint64_t v98 = (char *)v53;
            uint64_t v99 = v59;
            uint64_t v100 = v56;
            int v61 = *v58;
            int v96 = v58[1];
            LODWORD(v97) = v61;
            int v62 = v58[2];
            unsigned int v94 = v58[3];
            int v95 = v62;
            double v63 = *((double *)v58 + 2);
            uint64_t v64 = (char *)*((id *)v58 + 1);
            uint64_t v93 = v64;
            id v65 = objc_msgSend(v59, sel_timestamp, v87);
            sub_1D44695D8();

            id v66 = objc_msgSend(v64, sel_timestamp);
            uint64_t v67 = v101;
            sub_1D44695D8();

            char v68 = sub_1D4469598();
            int v69 = v52;
            int v70 = v50;
            int v71 = v51;
            uint64_t v72 = *v89;
            uint64_t v73 = v67;
            uint64_t v74 = v90;
            (*v89)(v73, v90);
            v72(v60, v74);
            int v51 = v71;
            int v50 = v70;
            if (v68) {
              uint64_t v75 = v57;
            }
            else {
              uint64_t v75 = v93;
            }
            if (v68)
            {
              int v50 = v97;
              int v51 = v96;
              int v52 = v95;
            }
            else
            {
              int v52 = v69;
            }
            if (v68) {
              unint64_t v53 = v94;
            }
            else {
              unint64_t v53 = v98;
            }
            BOOL v76 = (v68 & 1) == 0;
            uint64_t v59 = v99;
            uint64_t v77 = v100;
            if (!v76)
            {
              uint64_t v57 = v93;
              double v55 = v63;
              uint64_t v59 = v93;
            }

            v58 += 24;
            uint64_t v56 = v77 - 1;
          }
          while (v56);
          swift_bridgeObjectRelease();
          a6 = v88;
        }
        uint64_t v78 = 256;
        if ((v51 & 1) == 0) {
          uint64_t v78 = 0;
        }
        unint64_t v79 = v78 & 0xFFFFFFFFFFFFFFFELL | v50 & 1;
        uint64_t v80 = 0x10000;
        if ((v52 & 1) == 0) {
          uint64_t v80 = 0;
        }
        *(void *)a6 = (v79 | v80) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v53 << 24);
        *((void *)a6 + 1) = v57;
        a6[2] = v55;
        uint64_t v40 = v91;
      }
      else
      {
        *a6 = 0.0;
        a6[1] = 0.0;
        a6[2] = 0.0;
      }
      sub_1D42D2178(v40, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      swift_bridgeObjectRelease();
    }
    return;
  }
  sub_1D4276C3C((uint64_t)v18, &qword_1EBD7E670);
  uint64_t v27 = v100;
  uint64_t v28 = v101;
  if (!v100)
  {
    uint64_t v45 = v97;
    uint64_t v27 = v98;
    *(void *)a6 = v23;
    *((void *)a6 + 1) = v27;
    *((void *)a6 + 2) = v45;
LABEL_20:
    uint64_t v46 = v27;
    return;
  }
  if (!v98)
  {
    *(void *)a6 = v24 & 0xFF010101;
    *((void *)a6 + 1) = v27;
    *((void *)a6 + 2) = v25;
    goto LABEL_20;
  }
  if (v26)
  {
    char v29 = sub_1D446A758();
    uint64_t v30 = v100;
    uint64_t v31 = v98;
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {
      id v32 = objc_msgSend(v31, sel_timestamp);
      uint64_t v33 = v92;
      sub_1D44695D8();

      id v34 = objc_msgSend(v30, sel_timestamp);
      sub_1D44695D8();

      int v96 = sub_1D4469598();
      uint64_t v35 = (void (*)(char *, uint64_t))*((void *)v99 + 1);
      v35(v28, v12);
      v35(v33, v12);
      if (v96)
      {

LABEL_54:
        uint64_t v85 = v100;
        *(void *)a6 = v24 & 0xFF010101;
        *((void *)a6 + 1) = v85;
        *((void *)a6 + 2) = v25;
        return;
      }
    }
  }
  else
  {
    uint64_t v81 = v100;
    uint64_t v82 = v98;
    swift_bridgeObjectRelease();
  }
  LOBYTE(v102) = BYTE3(v24);
  if (FMIPLocationType.rawValue.getter() == 0x656D69746C616572 && v83 == 0xE800000000000000)
  {

    swift_bridgeObjectRelease();
    goto LABEL_54;
  }
  char v84 = sub_1D446A758();
  swift_bridgeObjectRelease();
  if (v84)
  {

    goto LABEL_54;
  }

  uint64_t v86 = v98;
  *(void *)a6 = v23 & 0xFF010101;
  *((void *)a6 + 1) = v86;
  *((void *)a6 + 2) = v97;
}

uint64_t FMIPDevice.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v217 = a2;
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7CB80);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v216 = (uint64_t)&v158 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v215 = (uint64_t)&v158 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v214 = (uint8_t *)&v158 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v213 = (uint64_t)&v158 - v10;
  uint64_t v11 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v218 = (uint64_t)&v158 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D42D5DA0(&qword_1EBD7CE38);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v219 = (uint64_t)&v158 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D42D5DA0(&qword_1EBD7CDF8);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v220 = (uint64_t)&v158 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v221 = (uint64_t)&v158 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1D42D5DA0(&qword_1EBD7CEA0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v158 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1D42D5DA0(&qword_1EBD7D980);
  uint64_t v222 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v158 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for FMIPDevice();
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v158 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = a1[3];
  uint64_t v224 = a1;
  sub_1D42C26F4(a1, v28);
  sub_1D42D6780();
  uint64_t v29 = (uint64_t)v223;
  sub_1D446A8C8();
  if (v29) {
    return sub_1D42BEC64((uint64_t)v224);
  }
  uint64_t v211 = (int *)v25;
  uint64_t v212 = v27;
  uint64_t v223 = v21;
  uint64_t v30 = v222;
  LOBYTE(v228[0]) = 14;
  uint64_t v31 = sub_1D446A598();
  uint64_t v33 = v32;
  LOBYTE(v228[0]) = 4;
  uint64_t v34 = sub_1D446A598();
  uint64_t v209 = v31;
  uint64_t v208 = v34;
  unint64_t v210 = v35;
  LOBYTE(v228[0]) = 39;
  uint64_t v36 = sub_1D446A598();
  unint64_t v38 = v37;
  uint64_t v207 = v36;
  LOBYTE(v228[0]) = 12;
  uint64_t v206 = sub_1D446A598();
  uint64_t v40 = v39;
  LOBYTE(v228[0]) = 38;
  uint64_t v204 = sub_1D446A598();
  unint64_t v205 = v41;
  LOBYTE(v228[0]) = 46;
  v202._uint64_t countAndFlagsBits = sub_1D446A598();
  v202._object = v43;
  LOBYTE(v228[0]) = 10;
  uint64_t v201 = sub_1D446A598();
  uint64_t v203 = v44;
  LOBYTE(v228[0]) = 9;
  uint64_t v199 = sub_1D446A598();
  uint64_t v200 = v45;
  LOBYTE(v228[0]) = 36;
  uint64_t v192 = sub_1D446A598();
  uint64_t v194 = v46;
  LOBYTE(v228[0]) = 41;
  uint64_t v191 = sub_1D446A598();
  unint64_t v195 = v47;
  LOBYTE(v228[0]) = 37;
  uint64_t v190 = sub_1D446A598();
  unint64_t v196 = v48;
  LOBYTE(v228[0]) = 11;
  uint64_t v189 = sub_1D446A598();
  unint64_t v197 = v49;
  LOBYTE(v228[0]) = 2;
  sub_1D446A5B8();
  uint64_t v51 = v50;
  LOBYTE(v228[0]) = 3;
  uint64_t v193 = sub_1D446A598();
  uint64_t v198 = v52;
  LOBYTE(v228[0]) = 40;
  uint64_t v188 = sub_1D446A5C8();
  LOBYTE(v228[0]) = 33;
  uint64_t v182 = sub_1D446A5C8();
  LOBYTE(v228[0]) = 32;
  uint64_t v53 = sub_1D446A5E8();
  uint64_t v181 = 0;
  uint64_t v177 = v53;
  LOBYTE(v228[0]) = 30;
  uint64_t v54 = sub_1D446A5E8();
  uint64_t v183 = 0;
  uint64_t v178 = v54;
  LOBYTE(v228[0]) = 48;
  uint64_t v55 = sub_1D446A5E8();
  uint64_t v184 = 0;
  uint64_t v179 = v55;
  LOBYTE(v228[0]) = 53;
  uint64_t v56 = sub_1D446A5E8();
  uint64_t v185 = 0;
  uint64_t v180 = v56;
  LOBYTE(v228[0]) = 51;
  uint64_t v186 = sub_1D446A5C8();
  LOBYTE(v228[0]) = 8;
  int v176 = sub_1D446A5A8();
  LOBYTE(v228[0]) = 5;
  int v175 = sub_1D446A5A8();
  uint64_t v173 = v33;
  unint64_t v174 = v38;
  LOBYTE(v228[0]) = 7;
  uint64_t v187 = v22;
  uint64_t v57 = v24;
  int v172 = sub_1D446A5A8();
  sub_1D42D5DA0(&qword_1EBD7D8D8);
  LOBYTE(v227[0]) = 1;
  sub_1D42D66D8(&qword_1EBD7D8E8, &qword_1EBD7D8D8, (void (*)(void))sub_1D42E5D80);
  sub_1D446A5D8();
  v227[0] = v228[0];
  swift_bridgeObjectRetain();
  sub_1D42D6BB4(v227);
  swift_bridgeObjectRelease();
  uint64_t v166 = v227[0];
  sub_1D42D5DA0(&qword_1EBD7D8F0);
  LOBYTE(v227[0]) = 47;
  sub_1D42D66D8(&qword_1EBD7D900, &qword_1EBD7D8F0, (void (*)(void))sub_1D42E5358);
  sub_1D446A5D8();
  uint64_t v167 = v228[0];
  LOBYTE(v227[0]) = 29;
  sub_1D42D75CC();
  sub_1D446A5D8();
  id v169 = (id)v228[1];
  uint64_t v58 = 256;
  if (!BYTE1(v228[0])) {
    uint64_t v58 = 0;
  }
  uint64_t v59 = v58 | LOBYTE(v228[0]);
  uint64_t v60 = 0x10000;
  if (!BYTE2(v228[0])) {
    uint64_t v60 = 0;
  }
  unint64_t v161 = v59 | v60 | ((unint64_t)BYTE3(v228[0]) << 24);
  uint64_t v162 = v228[2];
  char v229 = 6;
  sub_1D446A5D8();
  id v168 = v234;
  uint64_t v61 = 256;
  if (!v231) {
    uint64_t v61 = 0;
  }
  uint64_t v62 = v61 | v230;
  uint64_t v63 = 0x10000;
  if (!v232) {
    uint64_t v63 = 0;
  }
  unint64_t v163 = v62 | v63 | ((unint64_t)v233 << 24);
  uint64_t v164 = v235;
  char v226 = 0;
  sub_1D42D8E34();
  sub_1D446A5D8();
  memcpy(v225, v227, sizeof(v225));
  nullsub_1(v225);
  sub_1D4276C98((uint64_t)v225, (uint64_t)v228, &qword_1EBD7CC10);
  LOBYTE(v225[0]) = 13;
  sub_1D42D7620();
  sub_1D446A5D8();
  uint64_t v170 = 0;
  uint64_t v160 = v227[0];
  uint64_t v64 = type metadata accessor for FMIPPlaySoundMetadata();
  LOBYTE(v227[0]) = 45;
  sub_1D42D6690(&qword_1EBD7CE98, (void (*)(uint64_t))type metadata accessor for FMIPPlaySoundMetadata);
  sub_1D446A5D8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v223, 0, 1, v64);
  uint64_t v65 = type metadata accessor for FMIPDeviceLostModeMetadata();
  LOBYTE(v227[0]) = 31;
  sub_1D42D6690((unint64_t *)&unk_1EBD7D4D0, (void (*)(uint64_t))type metadata accessor for FMIPDeviceLostModeMetadata);
  sub_1D446A5D8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v221, 0, 1, v65);
  uint64_t v66 = type metadata accessor for FMIPLockMetadata();
  LOBYTE(v227[0]) = 42;
  sub_1D42D6690(&qword_1EBD7CDF0, (void (*)(uint64_t))type metadata accessor for FMIPLockMetadata);
  sub_1D446A5D8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v220, 0, 1, v66);
  uint64_t v67 = type metadata accessor for FMIPEraseMetadata();
  LOBYTE(v227[0]) = 43;
  sub_1D42D6690(&qword_1EBD7CE30, (void (*)(uint64_t))type metadata accessor for FMIPEraseMetadata);
  sub_1D446A5D8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v219, 0, 1, v67);
  sub_1D42D5DA0(&qword_1EA6CA3F0);
  LOBYTE(v225[0]) = 44;
  sub_1D42D66D8(&qword_1EA6CA3F8, &qword_1EA6CA3F0, (void (*)(void))sub_1D42E5AC8);
  sub_1D446A5D8();
  uint64_t v68 = v227[0];
  LOBYTE(v225[0]) = 54;
  sub_1D42D7578();
  sub_1D446A5D8();
  int v159 = LOBYTE(v227[0]);
  LOBYTE(v225[0]) = 55;
  sub_1D441CEB4();
  sub_1D446A5D8();
  int v158 = LOBYTE(v227[0]);
  LOBYTE(v227[0]) = 56;
  uint64_t v165 = sub_1D446A598();
  uint64_t v171 = v69;
  uint64_t v70 = type metadata accessor for FMIPItemGroup();
  LOBYTE(v227[0]) = 49;
  sub_1D42D6690(&qword_1EA6CA5F0, (void (*)(uint64_t))type metadata accessor for FMIPItemGroup);
  sub_1D446A5D8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v218, 0, 1, v70);
  if (v198)
  {
    v71._uint64_t countAndFlagsBits = v193;
    v71._object = v198;
    FMIPBatteryStatus.init(rawValue:)(v71);
    int v72 = LOBYTE(v227[0]);
    if (LOBYTE(v227[0]) == 4) {
      int v72 = 0;
    }
    LODWORD(v198) = v72;
  }
  else
  {
    LODWORD(v198) = 0;
  }
  FMIPDeviceStatus.init(rawValue:)(v202);
  if (LOBYTE(v227[0]) == 3) {
    char v73 = 1;
  }
  else {
    char v73 = v227[0];
  }
  LOBYTE(v227[0]) = 28;
  char v74 = sub_1D446A5A8();
  LOBYTE(v227[0]) = 20;
  LODWORD(v202._object) = sub_1D446A5A8();
  LOBYTE(v227[0]) = 15;
  LODWORD(v202._countAndFlagsBits) = sub_1D446A5A8();
  LOBYTE(v227[0]) = 21;
  LODWORD(v193) = sub_1D446A5A8();
  LOBYTE(v227[0]) = 19;
  char v75 = sub_1D446A5A8();
  uint64_t v76 = v74 & 1;
  if ((uint64_t)v202._object) {
    uint64_t v76 = v74 & 1 | 2;
  }
  if (v202._countAndFlagsBits) {
    v76 |= 4uLL;
  }
  if (v193) {
    v76 |= 8uLL;
  }
  if (v75) {
    unint64_t v77 = v76 | 0x20;
  }
  else {
    unint64_t v77 = v76;
  }
  LOBYTE(v227[0]) = 52;
  if (sub_1D446A5A8()) {
    v77 |= 0x20000uLL;
  }
  LOBYTE(v227[0]) = 57;
  if (sub_1D446A5A8()) {
    v77 |= 0x40000uLL;
  }
  LOBYTE(v227[0]) = 17;
  if ((sub_1D446A5A8() & ((v77 & 0x10) == 0)) != 0) {
    v77 |= 0x10uLL;
  }
  LOBYTE(v227[0]) = 23;
  if ((sub_1D446A5A8() & ((v77 & 0x40) == 0)) != 0) {
    v77 |= 0x40uLL;
  }
  LOBYTE(v227[0]) = 24;
  char v78 = sub_1D446A568();
  if (v78 != 2)
  {
    uint64_t v79 = (v77 >> 13) & 1;
    if ((v78 & 1) == 0) {
      LODWORD(v79) = 1;
    }
    if (!v79) {
      v77 |= 0x2000uLL;
    }
  }
  LOBYTE(v227[0]) = 25;
  char v80 = sub_1D446A568();
  if (v80 != 2)
  {
    uint64_t v81 = (v77 >> 14) & 1;
    if ((v80 & 1) == 0) {
      LODWORD(v81) = 1;
    }
    if (!v81) {
      v77 |= 0x4000uLL;
    }
  }
  LOBYTE(v227[0]) = 26;
  char v82 = sub_1D446A568();
  if (v82 != 2)
  {
    uint64_t v83 = (v77 >> 15) & 1;
    if ((v82 & 1) == 0) {
      LODWORD(v83) = 1;
    }
    if (!v83) {
      v77 |= 0x8000uLL;
    }
  }
  if (v174 && (v207 != 0x72656E776FLL || v174 != 0xE500000000000000) && !(sub_1D446A758() & 1 | (v77 >> 7) & 1)) {
    v77 |= 0x80uLL;
  }
  LOBYTE(v227[0]) = 18;
  LODWORD(v202._object) = sub_1D446A5A8();
  LOBYTE(v227[0]) = 22;
  LODWORD(v202._countAndFlagsBits) = sub_1D446A5A8();
  LOBYTE(v227[0]) = 27;
  unsigned __int8 v84 = sub_1D446A5A8();
  if (((uint64_t)v202._object & ((v77 & 0x100) == 0)) != 0) {
    uint64_t v85 = v77 | 0x100;
  }
  else {
    uint64_t v85 = v77;
  }
  if ((((v85 & 0x200) == 0) & v202._countAndFlagsBits) != 0) {
    v85 |= 0x200uLL;
  }
  if ((((v85 & 0x400) == 0) & v84) != 0) {
    v85 |= 0x400uLL;
  }
  v202._object = (void *)v85;
  if ((v85 & 0x20000) != 0)
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v86 = sub_1D4469928();
    sub_1D42D7FAC(v86, (uint64_t)qword_1EBD83228);
    uint64_t v87 = sub_1D44698F8();
    os_log_type_t v88 = sub_1D446A038();
    v202._uint64_t countAndFlagsBits = (uint64_t)v87;
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v89 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v89 = 0;
      _os_log_impl(&dword_1D4271000, (os_log_t)v202._countAndFlagsBits, v88, "FMIPDevice: Device in pending remove, remove should not be enabled", v89, 2u);
      MEMORY[0x1D9447730](v89, -1, -1);
    }

    v202._uint64_t countAndFlagsBits = 0;
  }
  else
  {
    v202._uint64_t countAndFlagsBits = 64;
  }
  uint64_t v90 = HIBYTE(v205) & 0xF;
  if ((v205 & 0x2000000000000000) == 0) {
    uint64_t v90 = v204 & 0xFFFFFFFFFFFFLL;
  }
  if (!v90 && ((uint64_t)v202._object & 0x200) != 0)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for FMLocalize();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v92 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v204 = sub_1D44692D8();
    unint64_t v205 = v93;
  }
  if (v210)
  {
    uint64_t v94 = HIBYTE(v210) & 0xF;
    if ((v210 & 0x2000000000000000) == 0) {
      uint64_t v94 = v208 & 0xFFFFFFFFFFFFLL;
    }
    if (v94) {
      goto LABEL_82;
    }
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
  }
  unint64_t v210 = 0;
LABEL_82:
  int v95 = v212;
  uint64_t v96 = v173;
  unint64_t v97 = v174;
  *uint64_t v212 = v209;
  v95[1] = v96;
  uint64_t v98 = v207;
  v95[2] = v208;
  v95[3] = v210;
  uint64_t v99 = 0x72656E776FLL;
  if (v97) {
    uint64_t v99 = v98;
  }
  unint64_t v100 = 0xE500000000000000;
  if (v97) {
    unint64_t v100 = v97;
  }
  v95[4] = v99;
  v95[5] = v100;
  v95[6] = v206;
  v95[7] = v40;
  unint64_t v101 = v205;
  v95[8] = v204;
  v95[9] = v101;
  *((unsigned char *)v95 + 80) = v73;
  uint64_t v102 = v203;
  v95[11] = v201;
  v95[12] = v102;
  uint64_t v103 = v200;
  v95[13] = v199;
  v95[14] = v103;
  uint64_t v104 = v194;
  v95[15] = v192;
  v95[16] = v104;
  unint64_t v105 = v197;
  uint64_t v106 = v189;
  if (!v197) {
    uint64_t v106 = 0;
  }
  unint64_t v107 = 0xE000000000000000;
  if (!v197) {
    unint64_t v105 = 0xE000000000000000;
  }
  v95[21] = v106;
  v95[22] = v105;
  unint64_t v108 = v195;
  uint64_t v109 = v191;
  if (!v195)
  {
    uint64_t v109 = 0;
    unint64_t v108 = 0xE000000000000000;
  }
  v95[17] = v109;
  v95[18] = v108;
  uint64_t v110 = v190;
  if (v196) {
    unint64_t v107 = v196;
  }
  else {
    uint64_t v110 = 0;
  }
  v95[19] = v110;
  v95[20] = v107;
  v95[23] = v51;
  *((unsigned char *)v95 + 192) = (_BYTE)v198;
  uint64_t v111 = v182;
  v95[25] = v188;
  v95[26] = v111;
  if (v181)
  {
    uint64_t v112 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v213, 1, 1, v112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v113 = self;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v114 = objc_msgSend(v113, sel_fm_dateFromEpoch_, v177);
    uint64_t v115 = v213;
    sub_1D44695D8();

    uint64_t v116 = sub_1D4469618();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v115, 0, 1, v116);
  }
  sub_1D4276C98(v213, (uint64_t)v212 + v211[38], &qword_1EBD7CB80);
  if (v183)
  {
    uint64_t v117 = sub_1D4469618();
    (*(void (**)(uint8_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v214, 1, 1, v117);
  }
  else
  {
    id v118 = objc_msgSend(self, sel_fm_dateFromEpoch_, v178);
    uint64_t v119 = (uint64_t)v214;
    sub_1D44695D8();

    uint64_t v120 = sub_1D4469618();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v119, 0, 1, v120);
  }
  sub_1D4276C98((uint64_t)v214, (uint64_t)v212 + v211[39], &qword_1EBD7CB80);
  if (v184)
  {
    uint64_t v121 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v215, 1, 1, v121);
  }
  else
  {
    id v122 = objc_msgSend(self, sel_fm_dateFromEpoch_, v179);
    uint64_t v123 = v215;
    sub_1D44695D8();

    uint64_t v124 = sub_1D4469618();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v123, 0, 1, v124);
  }
  sub_1D4276C98(v215, (uint64_t)v212 + v211[40], &qword_1EBD7CB80);
  swift_bridgeObjectRelease();
  if (v185)
  {
    uint64_t v125 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v216, 1, 1, v125);
  }
  else
  {
    id v126 = objc_msgSend(self, sel_fm_dateFromEpoch_, v180);
    uint64_t v127 = v216;
    sub_1D44695D8();

    uint64_t v128 = sub_1D4469618();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v127, 0, 1, v128);
  }
  uint64_t v129 = v211;
  uint64_t v130 = v212;
  sub_1D4276C98(v216, (uint64_t)v212 + v211[41], &qword_1EBD7CB80);
  *(void *)((char *)v130 + v129[37]) = v186;
  *((unsigned char *)v130 + v129[42]) = v176 & 1;
  *((unsigned char *)v130 + v129[43]) = v175 & 1;
  *((unsigned char *)v130 + v129[44]) = v172 & 1;
  v130[27] = v202._object;
  uint64_t v131 = MEMORY[0x1E4FBC860];
  uint64_t v132 = v166;
  if (!v166) {
    uint64_t v132 = MEMORY[0x1E4FBC860];
  }
  v130[29] = v132;
  v130[31] = v167;
  if (qword_1EA6C8F90 != -1) {
    swift_once();
  }
  if (byte_1EA6CA2B1)
  {
    unint64_t v161 = 0;
    uint64_t v162 = 0;
    id v133 = 0;
  }
  else
  {
    id v134 = v169;
    id v135 = v169;
    id v133 = v134;
  }
  uint64_t v136 = v212;
  v212[32] = v161;
  v136[33] = v133;
  v136[34] = v162;
  sub_1D4276C98((uint64_t)v228, (uint64_t)(v136 + 38), &qword_1EBD7CC10);
  uint64_t countAndFlagsBits = v160;
  if (v170) {
    uint64_t countAndFlagsBits = v202._countAndFlagsBits;
  }
  v136[30] = countAndFlagsBits;
  uint64_t v138 = v211;
  sub_1D42A3A74((uint64_t)v223, (uint64_t)v136 + v211[28], &qword_1EBD7CEA0);
  sub_1D42A3A74(v221, (uint64_t)v136 + v138[29], &qword_1EBD7D4E0);
  sub_1D42A3A74(v220, (uint64_t)v136 + v138[30], &qword_1EBD7CDF8);
  sub_1D42A3A74(v219, (uint64_t)v136 + v138[31], &qword_1EBD7CE38);
  if (v68) {
    uint64_t v139 = v68;
  }
  else {
    uint64_t v139 = v131;
  }
  v136[28] = v139;
  char v140 = v159;
  if (v159 == 7) {
    char v140 = 0;
  }
  *((unsigned char *)v136 + v138[34]) = v140;
  char v141 = v158;
  if (v158 == 5) {
    char v141 = 0;
  }
  *((unsigned char *)v136 + v138[35]) = v141;
  uint64_t v142 = (void *)((char *)v136 + v138[36]);
  uint64_t v143 = v171;
  *uint64_t v142 = v165;
  v142[1] = v143;
  if (qword_1EA6C8F98 != -1) {
    swift_once();
  }
  if (byte_1EA6CA2B2 == 1)
  {
    sub_1D441B8F8(v209, v173, (uint64_t)v227);
    swift_bridgeObjectRelease();
    uint64_t v144 = v227[1];
    uint64_t v145 = 256;
    if (!BYTE1(v227[0])) {
      uint64_t v145 = 0;
    }
    uint64_t v146 = v145 | LOBYTE(v227[0]);
    uint64_t v147 = 0x10000;
    if (!BYTE2(v227[0])) {
      uint64_t v147 = 0;
    }
    unint64_t v163 = v146 | v147 | ((unint64_t)BYTE3(v227[0]) << 24);
    uint64_t v164 = v227[2];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v148 = (uint64_t)v168;
    id v149 = v168;
    uint64_t v144 = v148;
  }
  uint64_t v150 = v212;
  v212[35] = v163;
  v150[36] = v144;
  v150[37] = v164;
  sub_1D42A3A74(v218, (uint64_t)v150 + v211[32], &qword_1EBD7E670);
  LOBYTE(v227[0]) = 50;
  *((unsigned char *)v212 + v211[33]) = sub_1D446A5A8() & 1;
  uint64_t v216 = FMIPDevice.debugDescription.getter();
  unint64_t v152 = v151;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v153 = sub_1D4469928();
  sub_1D42D7FAC(v153, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  uint64_t v154 = sub_1D44698F8();
  os_log_type_t v155 = sub_1D4469FF8();
  if (os_log_type_enabled(v154, v155))
  {
    uint64_t v156 = (uint8_t *)swift_slowAlloc();
    uint64_t v215 = swift_slowAlloc();
    v227[0] = v215;
    *(_DWORD *)uint64_t v156 = 136315138;
    uint64_t v214 = v156 + 4;
    swift_bridgeObjectRetain();
    v225[0] = sub_1D42CB9EC(v216, v152, v227);
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D4271000, v154, v155, "FMIPDevice: initialized %s", v156, 0xCu);
    uint64_t v157 = v215;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v157, -1, -1);
    MEMORY[0x1D9447730](v156, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1D4276C3C(v218, &qword_1EBD7E670);
  sub_1D4276C3C(v219, &qword_1EBD7CE38);
  sub_1D4276C3C(v220, &qword_1EBD7CDF8);
  sub_1D4276C3C(v221, &qword_1EBD7D4E0);
  sub_1D4276C3C((uint64_t)v223, &qword_1EBD7CEA0);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v57, v187);
  sub_1D42D6B4C((uint64_t)v212, v217, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  return sub_1D42BEC64((uint64_t)v224);
}

uint64_t initializeWithCopy for FMIPDevice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  uint64_t v16 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v16;
  uint64_t v17 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v17;
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  uint64_t v19 = *(void **)(a2 + 264);
  uint64_t v18 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = v19;
  *(void *)(a1 + 272) = v18;
  *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
  uint64_t v21 = *(void **)(a2 + 288);
  uint64_t v20 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = v21;
  *(void *)(a1 + 296) = v20;
  uint64_t v22 = *(void *)(a2 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v23 = v19;
  id v24 = v21;
  if (v22)
  {
    uint64_t v25 = *(void *)(a2 + 312);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(void *)(a1 + 312) = v25;
    uint64_t v26 = *(void *)(a2 + 328);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = v26;
    uint64_t v27 = *(void *)(a2 + 344);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = v27;
    uint64_t v28 = *(void *)(a2 + 360);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = v28;
    uint64_t v29 = *(void *)(a2 + 376);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = v29;
    uint64_t v30 = *(void *)(a2 + 392);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = v30;
    uint64_t v31 = *(void *)(a2 + 408);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(void *)(a1 + 408) = v31;
    uint64_t v32 = *(void *)(a2 + 424);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(void *)(a1 + 424) = v32;
    uint64_t v33 = *(void *)(a2 + 440);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(void *)(a1 + 440) = v33;
    uint64_t v34 = *(void *)(a2 + 456);
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    *(void *)(a1 + 456) = v34;
    *(void *)(a1 + 464) = *(void *)(a2 + 464);
    *(void *)(a1 + 472) = v22;
    uint64_t v35 = *(void *)(a2 + 488);
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(void *)(a1 + 488) = v35;
    uint64_t v36 = *(void *)(a2 + 504);
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *(void *)(a1 + 504) = v36;
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    *(void *)(a1 + 520) = *(void *)(a2 + 520);
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    *(void *)(a1 + 544) = *(void *)(a2 + 544);
    *(void *)(a1 + 552) = *(void *)(a2 + 552);
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    *(void *)(a1 + 568) = *(void *)(a2 + 568);
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + 304), (const void *)(a2 + 304), 0x120uLL);
  }
  unint64_t v37 = a3;
  uint64_t v38 = a3[28];
  uint64_t v39 = (unsigned char *)(a1 + v38);
  uint64_t v40 = (unsigned char *)(a2 + v38);
  unint64_t v41 = (int *)type metadata accessor for FMIPPlaySoundMetadata();
  uint64_t v42 = *((void *)v41 - 1);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v42 + 48))(v40, 1, v41))
  {
    uint64_t v43 = sub_1D42D5DA0(&qword_1EBD7CEA0);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    *uint64_t v39 = *v40;
    uint64_t v44 = v41[5];
    uint64_t v45 = &v39[v44];
    uint64_t v46 = &v40[v44];
    uint64_t v47 = sub_1D4469618();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = v41[6];
    unint64_t v49 = &v39[v48];
    uint64_t v50 = &v40[v48];
    uint64_t v51 = v50[1];
    *unint64_t v49 = *v50;
    v49[1] = v51;
    uint64_t v52 = v41[7];
    uint64_t v53 = &v39[v52];
    uint64_t v54 = &v40[v52];
    uint64_t v55 = v54[1];
    void *v53 = *v54;
    v53[1] = v55;
    uint64_t v56 = v41[8];
    uint64_t v57 = &v39[v56];
    uint64_t v58 = &v40[v56];
    uint64_t v59 = v58[1];
    *uint64_t v57 = *v58;
    v57[1] = v59;
    uint64_t v60 = v41[9];
    uint64_t v61 = &v39[v60];
    uint64_t v62 = &v40[v60];
    uint64_t v63 = v62[1];
    *uint64_t v61 = *v62;
    v61[1] = v63;
    uint64_t v64 = *(void (**)(unsigned char *, void, uint64_t, int *))(v42 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v64(v39, 0, 1, v41);
  }
  uint64_t v65 = a3[29];
  uint64_t v66 = (_DWORD *)(a1 + v65);
  uint64_t v67 = (_DWORD *)(a2 + v65);
  uint64_t v68 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v69 = *(void *)(v68 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
  {
    uint64_t v70 = sub_1D42D5DA0(&qword_1EBD7D4E0);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    *uint64_t v66 = *v67;
    uint64_t v71 = *((void *)v67 + 2);
    *((void *)v66 + 1) = *((void *)v67 + 1);
    *((void *)v66 + 2) = v71;
    uint64_t v72 = *((void *)v67 + 4);
    *((void *)v66 + 3) = *((void *)v67 + 3);
    *((void *)v66 + 4) = v72;
    uint64_t v73 = *((void *)v67 + 6);
    *((void *)v66 + 5) = *((void *)v67 + 5);
    *((void *)v66 + 6) = v73;
    *((unsigned char *)v66 + 56) = *((unsigned char *)v67 + 56);
    uint64_t v74 = *(int *)(v68 + 48);
    __dsta = (char *)v67 + v74;
    uint64_t v166 = (char *)v66 + v74;
    uint64_t v75 = sub_1D4469618();
    unint64_t v161 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v76 = v75;
    unint64_t v37 = a3;
    v161(v166, __dsta, v76);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
  }
  uint64_t v77 = v37[30];
  char v78 = (unsigned char *)(a1 + v77);
  uint64_t v79 = (unsigned char *)(a2 + v77);
  uint64_t v80 = type metadata accessor for FMIPLockMetadata();
  uint64_t v81 = *(void *)(v80 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
  {
    uint64_t v82 = sub_1D42D5DA0(&qword_1EBD7CDF8);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    unsigned char *v78 = *v79;
    uint64_t v83 = *(int *)(v80 + 20);
    unsigned __int8 v84 = &v78[v83];
    uint64_t v85 = &v79[v83];
    uint64_t v86 = sub_1D4469618();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
  }
  uint64_t v87 = v37[31];
  os_log_type_t v88 = (unsigned char *)(a1 + v87);
  uint64_t v89 = (unsigned char *)(a2 + v87);
  uint64_t v90 = (int *)type metadata accessor for FMIPEraseMetadata();
  uint64_t v91 = *((void *)v90 - 1);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v91 + 48))(v89, 1, v90))
  {
    uint64_t v92 = sub_1D42D5DA0(&qword_1EBD7CE38);
    memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
  }
  else
  {
    *os_log_type_t v88 = *v89;
    uint64_t v93 = v90[5];
    uint64_t v94 = &v88[v93];
    int v95 = &v89[v93];
    uint64_t v96 = sub_1D4469618();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v96 - 8) + 16))(v94, v95, v96);
    uint64_t v97 = v90[6];
    uint64_t v98 = &v88[v97];
    uint64_t v99 = &v89[v97];
    uint64_t v100 = v99[1];
    *uint64_t v98 = *v99;
    v98[1] = v100;
    uint64_t v101 = v90[7];
    uint64_t v102 = &v88[v101];
    uint64_t v103 = &v89[v101];
    uint64_t v104 = v103[1];
    *uint64_t v102 = *v103;
    v102[1] = v104;
    v88[v90[8]] = v89[v90[8]];
    unint64_t v105 = *(void (**)(unsigned char *, void, uint64_t, int *))(v91 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v105(v88, 0, 1, v90);
  }
  uint64_t v106 = v37[32];
  unint64_t v107 = (void *)(a1 + v106);
  unint64_t v108 = (void *)(a2 + v106);
  uint64_t v109 = type metadata accessor for FMIPItemGroup();
  uint64_t v110 = *(void *)(v109 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v110 + 48))(v108, 1, v109))
  {
    uint64_t v111 = sub_1D42D5DA0(&qword_1EBD7E670);
    memcpy(v107, v108, *(void *)(*(void *)(v111 - 8) + 64));
  }
  else
  {
    uint64_t v167 = v110;
    *(_OWORD *)unint64_t v107 = *(_OWORD *)v108;
    uint64_t v112 = v108[3];
    v107[2] = v108[2];
    void v107[3] = v112;
    uint64_t v113 = v108[5];
    v107[4] = v108[4];
    v107[5] = v113;
    uint64_t v162 = v108[7];
    v107[6] = v108[6];
    v107[7] = v162;
    uint64_t v114 = v108[9];
    v107[8] = v108[8];
    v107[9] = v114;
    uint64_t v115 = *(int *)(v109 + 48);
    __dst = (void *)((char *)v107 + v115);
    uint64_t v157 = (void *)((char *)v108 + v115);
    uint64_t v116 = type metadata accessor for FMIPItemLostModeMetadata();
    uint64_t v156 = *(void *)(v116 - 8);
    int v158 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v156 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v117 = v116;
    if (v158(v157, 1, v116))
    {
      uint64_t v118 = sub_1D42D5DA0(&qword_1EBD7E710);
      memcpy(__dst, v157, *(void *)(*(void *)(v118 - 8) + 64));
    }
    else
    {
      uint64_t v119 = v157[1];
      void *__dst = *v157;
      __dst[1] = v119;
      uint64_t v120 = v157[3];
      __dst[2] = v157[2];
      __dst[3] = v120;
      uint64_t v155 = v117;
      uint64_t v121 = *(int *)(v117 + 24);
      uint64_t v160 = (char *)v157 + v121;
      unint64_t v163 = (char *)__dst + v121;
      uint64_t v122 = sub_1D4469618();
      int v159 = *(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v159(v163, v160, v122);
      uint64_t v123 = *(int *)(v155 + 28);
      uint64_t v124 = (void *)((char *)__dst + v123);
      uint64_t v125 = (void *)((char *)v157 + v123);
      uint64_t v126 = v125[1];
      *uint64_t v124 = *v125;
      v124[1] = v126;
      uint64_t v127 = *(void (**)(void *, void, uint64_t, uint64_t))(v156 + 56);
      swift_bridgeObjectRetain();
      v127(__dst, 0, 1, v155);
    }
    *(void *)((char *)v107 + *(int *)(v109 + 52)) = *(void *)((char *)v108 + *(int *)(v109 + 52));
    uint64_t v128 = *(void (**)(void *, void, uint64_t, uint64_t))(v167 + 56);
    swift_bridgeObjectRetain();
    v128(v107, 0, 1, v109);
    unint64_t v37 = a3;
  }
  uint64_t v129 = v37[34];
  *(unsigned char *)(a1 + v37[33]) = *(unsigned char *)(a2 + v37[33]);
  *(unsigned char *)(a1 + v129) = *(unsigned char *)(a2 + v129);
  uint64_t v130 = v37[36];
  *(unsigned char *)(a1 + v37[35]) = *(unsigned char *)(a2 + v37[35]);
  uint64_t v131 = (void *)(a1 + v130);
  uint64_t v132 = (void *)(a2 + v130);
  uint64_t v133 = v132[1];
  *uint64_t v131 = *v132;
  v131[1] = v133;
  uint64_t v134 = v37[38];
  *(void *)(a1 + v37[37]) = *(void *)(a2 + v37[37]);
  id v135 = (void *)(a1 + v134);
  uint64_t v136 = (const void *)(a2 + v134);
  uint64_t v137 = sub_1D4469618();
  uint64_t v138 = *(void *)(v137 - 8);
  uint64_t v139 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v138 + 48);
  swift_bridgeObjectRetain();
  if (v139(v136, 1, v137))
  {
    uint64_t v140 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v135, v136, *(void *)(*(void *)(v140 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v138 + 16))(v135, v136, v137);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v138 + 56))(v135, 0, 1, v137);
  }
  uint64_t v141 = v37[39];
  uint64_t v142 = (void *)(a1 + v141);
  uint64_t v143 = (const void *)(a2 + v141);
  if (v139((const void *)(a2 + v141), 1, v137))
  {
    uint64_t v144 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v138 + 16))(v142, v143, v137);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v138 + 56))(v142, 0, 1, v137);
  }
  uint64_t v145 = v37[40];
  uint64_t v146 = (void *)(a1 + v145);
  uint64_t v147 = (const void *)(a2 + v145);
  if (v139((const void *)(a2 + v145), 1, v137))
  {
    uint64_t v148 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v146, v147, *(void *)(*(void *)(v148 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v138 + 16))(v146, v147, v137);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v138 + 56))(v146, 0, 1, v137);
  }
  uint64_t v149 = v37[41];
  uint64_t v150 = (void *)(a1 + v149);
  unint64_t v151 = (const void *)(a2 + v149);
  if (v139((const void *)(a2 + v149), 1, v137))
  {
    uint64_t v152 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v150, v151, *(void *)(*(void *)(v152 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v138 + 16))(v150, v151, v137);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v138 + 56))(v150, 0, 1, v137);
  }
  uint64_t v153 = v37[43];
  *(unsigned char *)(a1 + v37[42]) = *(unsigned char *)(a2 + v37[42]);
  *(unsigned char *)(a1 + v153) = *(unsigned char *)(a2 + v153);
  *(unsigned char *)(a1 + v37[44]) = *(unsigned char *)(a2 + v37[44]);
  return a1;
}

uint64_t sub_1D42D5DA0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t destroy for FMIPDevice(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(a1 + 472))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + a2[28];
  uint64_t v5 = type metadata accessor for FMIPPlaySoundMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = a1 + a2[29];
  uint64_t v9 = type metadata accessor for FMIPDeviceLostModeMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + *(int *)(v9 + 48);
    uint64_t v11 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = a1 + a2[30];
  uint64_t v13 = type metadata accessor for FMIPLockMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    uint64_t v14 = v12 + *(int *)(v13 + 20);
    uint64_t v15 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  uint64_t v16 = a1 + a2[31];
  uint64_t v17 = type metadata accessor for FMIPEraseMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17))
  {
    uint64_t v18 = v16 + *(int *)(v17 + 20);
    uint64_t v19 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = a1 + a2[32];
  uint64_t v21 = type metadata accessor for FMIPItemGroup();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v20, 1, v21))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v20 + *(int *)(v21 + 48);
    uint64_t v23 = type metadata accessor for FMIPItemLostModeMetadata();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v22, 1, v23))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = v22 + *(int *)(v23 + 24);
      uint64_t v25 = sub_1D4469618();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = a1 + a2[38];
  uint64_t v27 = sub_1D4469618();
  uint64_t v34 = *(void *)(v27 - 8);
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  if (!v28(v26, 1, v27)) {
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v26, v27);
  }
  uint64_t v29 = a1 + a2[39];
  if (!v28(v29, 1, v27)) {
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v29, v27);
  }
  uint64_t v30 = a1 + a2[40];
  if (!v28(v30, 1, v27)) {
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v30, v27);
  }
  uint64_t v31 = a1 + a2[41];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v28)(v31, 1, v27);
  if (!result)
  {
    uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8);
    return v33(v31, v27);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPItemGroup(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D4353FA4);
}

uint64_t type metadata accessor for FMIPItemGroup()
{
  uint64_t result = qword_1EBD7E660;
  if (!qword_1EBD7E660) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPPlaySoundMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D445FC48);
}

uint64_t getEnumTagSinglePayload for FMIPDeviceLostModeMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D4407828);
}

uint64_t type metadata accessor for FMIPPlaySoundMetadata()
{
  uint64_t result = qword_1EBD7F600;
  if (!qword_1EBD7F600) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPEraseMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D430C730);
}

uint64_t type metadata accessor for FMIPDeviceLostModeMetadata()
{
  uint64_t result = qword_1EBD7F6A8;
  if (!qword_1EBD7F6A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FMIPEraseMetadata()
{
  uint64_t result = qword_1EBD7F368;
  if (!qword_1EBD7F368) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FMIPLockMetadata()
{
  uint64_t result = qword_1EBD7F2D0;
  if (!qword_1EBD7F2D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPLockMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D433F594);
}

uint64_t storeEnumTagSinglePayload for FMIPPlaySoundMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D445FD1C);
}

uint64_t sub_1D42D6690(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42D66D8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D42DB55C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42D6744(uint64_t a1)
{
  unint64_t v2 = sub_1D42D6780();

  return MEMORY[0x1F41862A8](a1, v2);
}

unint64_t sub_1D42D6780()
{
  unint64_t result = qword_1EBD7CB98;
  if (!qword_1EBD7CB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CB98);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMIPDeviceLostModeMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D44078D8);
}

uint64_t sub_1D42D67E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  if (a22)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D42D695C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t result = a22;
  if (a22)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMIPItemGroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D4354058);
}

uint64_t sub_1D42D6AE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42D6B4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42D6BB4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1D42D6C20(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1D42D6DB0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1D42D6C20(uint64_t a1)
{
  return sub_1D42D6C34(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D42D6C34(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1D42D5DA0(&qword_1EA6C9ED0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D42D6DB0(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1D446A6C8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1D42DDC00(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v112 = result;
  uint64_t v116 = v1;
  uint64_t v109 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      size_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      uint64_t v100 = v11;
      uint64_t v111 = v8;
      if (v12 >= 2)
      {
        uint64_t v101 = *v109;
        do
        {
          unint64_t v102 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v101) {
            goto LABEL_159;
          }
          uint64_t v103 = v100;
          uint64_t v104 = *(void *)&v100[16 * v102 + 32];
          uint64_t v105 = *(void *)&v100[16 * v12 + 24];
          sub_1D441C648((char *)(v101 + 24 * v104), (char *)(v101 + 24 * *(void *)&v100[16 * v12 + 16]), v101 + 24 * v105, __dst);
          if (v116) {
            break;
          }
          if (v105 < v104) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v103 = sub_1D441CBB0((uint64_t)v103);
          }
          if (v102 >= *((void *)v103 + 2)) {
            goto LABEL_149;
          }
          uint64_t v106 = &v103[16 * v102 + 32];
          *(void *)uint64_t v106 = v104;
          *((void *)v106 + 1) = v105;
          unint64_t v107 = *((void *)v103 + 2);
          if (v12 > v107) {
            goto LABEL_150;
          }
          memmove(&v103[16 * v12 + 16], &v103[16 * v12 + 32], 16 * (v107 - v12));
          uint64_t v100 = v103;
          *((void *)v103 + 2) = v107 - 1;
          unint64_t v12 = v107 - 1;
        }
        while (v107 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v111 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v111 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1D4469DE8();
    *(void *)(v7 + 16) = v6;
    uint64_t v111 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v110 = *a1 + 8;
  uint64_t v108 = *a1 - 24;
  size_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v113 = v3;
  uint64_t v114 = *a1;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    size_t v14 = (uint64_t *)(v10 + 24 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 24 * v13);
    if (*v17 == v15 && v17[1] == v16)
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1D446A758();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v110 + 24 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 24 * v9);
      if (*v23 == *(v21 - 1) && v23[1] == *v21)
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1D446A758()))
      {
        goto LABEL_36;
      }
      v21 += 3;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 24 * v20;
        uint64_t v26 = 24 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v26;
            uint64_t v30 = v10 + v25;
            uint64_t v31 = *(void *)(v10 + v26);
            uint64_t v32 = *(void *)(v10 + v26 + 8);
            char v33 = *(unsigned char *)(v10 + v26 + 16);
            char v34 = *(unsigned char *)(v10 + v26 + 17);
            char v35 = *(unsigned char *)(v10 + v26 + 18);
            uint64_t v36 = *(void *)(v10 + v25 - 8);
            *(_OWORD *)uint64_t v29 = *(_OWORD *)(v10 + v25 - 24);
            *(void *)(v29 + 16) = v36;
            *(void *)(v30 - 24) = v31;
            *(void *)(v30 - 16) = v32;
            *(unsigned char *)(v30 - 8) = v33;
            *(unsigned char *)(v30 - 7) = v34;
            *(unsigned char *)(v30 - 6) = v35;
          }
          ++v28;
          v25 -= 24;
          v26 += 24;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v112) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      size_t v11 = sub_1D441C918(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v50 = *((void *)v11 + 2);
    unint64_t v49 = *((void *)v11 + 3);
    unint64_t v12 = v50 + 1;
    if (v50 >= v49 >> 1) {
      size_t v11 = sub_1D441C918((char *)(v49 > 1), v50 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v51 = v11 + 32;
    uint64_t v52 = &v11[16 * v50 + 32];
    *(void *)uint64_t v52 = v13;
    *((void *)v52 + 1) = v9;
    if (v50)
    {
      uint64_t v10 = v114;
      while (1)
      {
        unint64_t v53 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v58 = &v51[16 * v12];
          uint64_t v59 = *((void *)v58 - 8);
          uint64_t v60 = *((void *)v58 - 7);
          BOOL v64 = __OFSUB__(v60, v59);
          uint64_t v61 = v60 - v59;
          if (v64) {
            goto LABEL_135;
          }
          uint64_t v63 = *((void *)v58 - 6);
          uint64_t v62 = *((void *)v58 - 5);
          BOOL v64 = __OFSUB__(v62, v63);
          uint64_t v56 = v62 - v63;
          char v57 = v64;
          if (v64) {
            goto LABEL_136;
          }
          unint64_t v65 = v12 - 2;
          uint64_t v66 = &v51[16 * v12 - 32];
          uint64_t v68 = *(void *)v66;
          uint64_t v67 = *((void *)v66 + 1);
          BOOL v64 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          if (v64) {
            goto LABEL_138;
          }
          BOOL v64 = __OFADD__(v56, v69);
          uint64_t v70 = v56 + v69;
          if (v64) {
            goto LABEL_141;
          }
          if (v70 >= v61)
          {
            os_log_type_t v88 = &v51[16 * v53];
            uint64_t v90 = *(void *)v88;
            uint64_t v89 = *((void *)v88 + 1);
            BOOL v64 = __OFSUB__(v89, v90);
            uint64_t v91 = v89 - v90;
            if (v64) {
              goto LABEL_145;
            }
            BOOL v81 = v56 < v91;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v82 = *((void *)v11 + 4);
            uint64_t v83 = *((void *)v11 + 5);
            BOOL v64 = __OFSUB__(v83, v82);
            uint64_t v75 = v83 - v82;
            char v76 = v64;
            goto LABEL_99;
          }
          uint64_t v55 = *((void *)v11 + 4);
          uint64_t v54 = *((void *)v11 + 5);
          BOOL v64 = __OFSUB__(v54, v55);
          uint64_t v56 = v54 - v55;
          char v57 = v64;
        }
        if (v57) {
          goto LABEL_137;
        }
        unint64_t v65 = v12 - 2;
        uint64_t v71 = &v51[16 * v12 - 32];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v74 = __OFSUB__(v72, v73);
        uint64_t v75 = v72 - v73;
        char v76 = v74;
        if (v74) {
          goto LABEL_140;
        }
        uint64_t v77 = &v51[16 * v53];
        uint64_t v79 = *(void *)v77;
        uint64_t v78 = *((void *)v77 + 1);
        BOOL v64 = __OFSUB__(v78, v79);
        uint64_t v80 = v78 - v79;
        if (v64) {
          goto LABEL_143;
        }
        if (__OFADD__(v75, v80)) {
          goto LABEL_144;
        }
        if (v75 + v80 >= v56)
        {
          BOOL v81 = v56 < v80;
LABEL_105:
          if (v81) {
            unint64_t v53 = v65;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v76) {
          goto LABEL_139;
        }
        unsigned __int8 v84 = &v51[16 * v53];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v64 = __OFSUB__(v85, v86);
        uint64_t v87 = v85 - v86;
        if (v64) {
          goto LABEL_142;
        }
        if (v87 < v75) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v92 = v53 - 1;
        if (v53 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v93 = v11;
        uint64_t v94 = v10;
        int v95 = &v51[16 * v92];
        uint64_t v96 = *(void *)v95;
        uint64_t v97 = &v51[16 * v53];
        uint64_t v98 = *((void *)v97 + 1);
        sub_1D441C648((char *)(v94 + 24 * *(void *)v95), (char *)(v94 + 24 * *(void *)v97), v94 + 24 * v98, __dst);
        if (v116) {
          goto LABEL_115;
        }
        if (v98 < v96) {
          goto LABEL_132;
        }
        if (v53 > *((void *)v93 + 2)) {
          goto LABEL_133;
        }
        *(void *)int v95 = v96;
        *(void *)&v51[16 * v92 + 8] = v98;
        unint64_t v99 = *((void *)v93 + 2);
        if (v53 >= v99) {
          goto LABEL_134;
        }
        size_t v11 = v93;
        unint64_t v12 = v99 - 1;
        memmove(&v51[16 * v53], v97 + 16, 16 * (v99 - 1 - v53));
        *((void *)v93 + 2) = v99 - 1;
        BOOL v81 = v99 > 2;
        uint64_t v10 = v114;
        if (!v81) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v114;
LABEL_15:
    uint64_t v3 = v113;
    if (v9 >= v113)
    {
      uint64_t v8 = v111;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v112)) {
    goto LABEL_153;
  }
  if (v13 + v112 >= v3) {
    uint64_t v37 = v3;
  }
  else {
    uint64_t v37 = v13 + v112;
  }
  if (v37 >= v13)
  {
    if (v9 != v37)
    {
      uint64_t v38 = v108 + 24 * v9;
      do
      {
        uint64_t v39 = v13;
        uint64_t v40 = v38;
        do
        {
          uint64_t v41 = v40 + 24;
          BOOL v42 = *(void *)v40 == *(void *)(v40 + 24) && *(void *)(v40 + 8) == *(void *)(v40 + 32);
          if (v42 || (sub_1D446A758() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v44 = *(void *)(v40 + 24);
          uint64_t v43 = *(void *)(v40 + 32);
          char v45 = *(unsigned char *)(v40 + 40);
          char v46 = *(unsigned char *)(v40 + 41);
          char v47 = *(unsigned char *)(v40 + 42);
          uint64_t v48 = *(void *)(v40 + 16);
          *(_OWORD *)uint64_t v41 = *(_OWORD *)v40;
          *(void *)uint64_t v40 = v44;
          *(void *)(v40 + 8) = v43;
          *(unsigned char *)(v40 + 16) = v45;
          *(unsigned char *)(v40 + 17) = v46;
          *(unsigned char *)(v40 + 18) = v47;
          v40 -= 24;
          ++v39;
          *(void *)(v41 + 16) = v48;
        }
        while (v9 != v39);
        ++v9;
        v38 += 24;
      }
      while (v9 != v37);
      uint64_t v9 = v37;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1D446A478();
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for FMIPEraseMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D430C7F8);
}

uint64_t storeEnumTagSinglePayload for FMIPLockMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D433F63C);
}

FMIPCore::FMIPDeviceStatus_optional __swiftcall FMIPDeviceStatus.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1D446A518();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t sub_1D42D7578()
{
  unint64_t result = qword_1EA6CB488;
  if (!qword_1EA6CB488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB488);
  }
  return result;
}

unint64_t sub_1D42D75CC()
{
  unint64_t result = qword_1EBD7CC68;
  if (!qword_1EBD7CC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CC68);
  }
  return result;
}

unint64_t sub_1D42D7620()
{
  unint64_t result = qword_1EBD7CC40;
  if (!qword_1EBD7CC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CC40);
  }
  return result;
}

uint64_t FMIPFeatures.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EBD7D998);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42D7FE4();
  sub_1D446A8C8();
  if (!v2)
  {
    LOBYTE(v54) = 0;
    char v9 = sub_1D446A5A8();
    LOBYTE(v54) = 1;
    char v10 = sub_1D446A5A8();
    LOBYTE(v54) = 2;
    LODWORD(v52) = sub_1D446A5A8();
    LOBYTE(v54) = 3;
    LODWORD(v51) = sub_1D446A5A8();
    LOBYTE(v54) = 4;
    LODWORD(v50) = sub_1D446A5A8();
    LOBYTE(v54) = 5;
    LODWORD(v49) = sub_1D446A5A8();
    LOBYTE(v54) = 6;
    LODWORD(v48) = sub_1D446A5A8();
    LOBYTE(v54) = 7;
    LODWORD(v47) = sub_1D446A5A8();
    LOBYTE(v54) = 8;
    int v46 = sub_1D446A5A8();
    LOBYTE(v54) = 9;
    int v45 = sub_1D446A5A8();
    LOBYTE(v54) = 10;
    int v44 = sub_1D446A5A8();
    LOBYTE(v54) = 11;
    int v43 = sub_1D446A5A8();
    LOBYTE(v54) = 12;
    int v42 = sub_1D446A5A8();
    LOBYTE(v54) = 13;
    int v41 = sub_1D446A5A8();
    LOBYTE(v54) = 14;
    int v40 = sub_1D446A5A8();
    LOBYTE(v54) = 15;
    uint64_t v39 = sub_1D446A568();
    LOBYTE(v54) = 16;
    uint64_t v38 = sub_1D446A568();
    LOBYTE(v54) = 17;
    uint64_t v37 = sub_1D446A568();
    LOBYTE(v54) = 18;
    uint64_t v36 = sub_1D446A568();
    LOBYTE(v54) = 19;
    uint64_t v35 = sub_1D446A568();
    LOBYTE(v54) = 20;
    uint64_t v34 = sub_1D446A568();
    LOBYTE(v54) = 21;
    uint64_t v33 = sub_1D446A568();
    LOBYTE(v54) = 22;
    uint64_t v32 = sub_1D446A568();
    LOBYTE(v54) = 23;
    uint64_t v31 = sub_1D446A568();
    LOBYTE(v54) = 24;
    uint64_t v30 = sub_1D446A568();
    uint64_t v11 = v9 & 1;
    if (v10) {
      uint64_t v11 = v9 & 1 | 2;
    }
    if (v52) {
      v11 |= 4uLL;
    }
    if (v51) {
      v11 |= 8uLL;
    }
    if (v50) {
      v11 |= 0x10uLL;
    }
    if (v49) {
      v11 |= 0x20uLL;
    }
    if (v48) {
      v11 |= 0x40uLL;
    }
    if (v47) {
      v11 |= 0x80uLL;
    }
    if (v46) {
      v11 |= 0x100uLL;
    }
    if (v45) {
      v11 |= 0x200uLL;
    }
    if (v44) {
      v11 |= 0x400uLL;
    }
    if (v43) {
      v11 |= 0x800uLL;
    }
    if (v42) {
      v11 |= 0x1000uLL;
    }
    if (v41) {
      v11 |= 0x2000uLL;
    }
    if (v40) {
      uint64_t v12 = v11 | 0x4000;
    }
    else {
      uint64_t v12 = v11;
    }
    LOBYTE(v54) = 25;
    char v13 = sub_1D446A568();
    unint64_t v14 = ((unint64_t)(v38 & 1) << 16) & 0xFFFFFFFFFFFD7FFFLL | ((unint64_t)(v37 & 1) << 17) | ((unint64_t)(v39 & 1) << 15) | ((unint64_t)(v36 & 1) << 18) & 0xFFFFFFFFFFF7FFFFLL | ((unint64_t)(v35 & 1) << 19) | ((unint64_t)(v34 & 1) << 20) & 0xFFFFFFFFFFDFFFFFLL | ((unint64_t)(v33 & 1) << 21) | ((v32 & 1) << 25) & 0xFBFFFFFF | ((unint64_t)(v31 & 1) << 26) | v12;
    unint64_t v15 = v14 | ((unint64_t)(v30 & 1) << 22);
    if (v13 != 2)
    {
      uint64_t v16 = (v14 >> 23) & 1;
      if ((v13 & 1) == 0) {
        LODWORD(v16) = 1;
      }
      if (!v16) {
        v15 |= 0x800000uLL;
      }
    }
    LOBYTE(v54) = 26;
    char v17 = sub_1D446A568();
    if (v17 != 2)
    {
      uint64_t v18 = (v15 >> 24) & 1;
      if ((v17 & 1) == 0) {
        LODWORD(v18) = 1;
      }
      if (!v18) {
        v15 |= 0x1000000uLL;
      }
    }
    LOBYTE(v54) = 27;
    char v19 = sub_1D446A568();
    LOBYTE(v54) = 28;
    uint64_t v52 = sub_1D446A568();
    LOBYTE(v54) = 29;
    uint64_t v52 = v15 | ((unint64_t)(v19 & 1) << 27) | ((unint64_t)(v52 & 1) << 28) | ((sub_1D446A568() & 1) << 29);
    uint64_t v54 = v52;
    unint64_t v50 = FMIPFeatures.debugDescription.getter();
    unint64_t v22 = v21;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1D4469928();
    sub_1D42D7FAC(v23, (uint64_t)qword_1EBD83228);
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1D44698F8();
    os_log_type_t v25 = sub_1D4469FF8();
    uint64_t v51 = v24;
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v54 = v49;
      uint64_t v48 = v26;
      *(_DWORD *)uint64_t v26 = 136315138;
      char v47 = v26 + 4;
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_1D42CB9EC(v50, v22, &v54);
      sub_1D446A188();
      swift_bridgeObjectRelease_n();
      uint64_t v27 = v51;
      uint64_t v28 = v48;
      _os_log_impl(&dword_1D4271000, v51, v25, "FMIPFeature: initialized %s", v48, 0xCu);
      uint64_t v29 = v49;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v29, -1, -1);
      MEMORY[0x1D9447730](v28, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v52;
  }
  return sub_1D42BEC64((uint64_t)a1);
}

uint64_t sub_1D42D7FAC(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t sub_1D42D7FE4()
{
  unint64_t result = qword_1EBD7CC20;
  if (!qword_1EBD7CC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CC20);
  }
  return result;
}

void FMIPLockMetadata.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v3 = sub_1D4469618();
  unint64_t v68 = *(void *)(v3 - 8);
  uint64_t v69 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7D9B0);
  uint64_t v70 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPLockMetadata();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42D8D3C();
  uint64_t v12 = v71;
  sub_1D446A8C8();
  if (v12)
  {
    uint64_t v17 = (uint64_t)a1;
LABEL_4:
    sub_1D42BEC64(v17);
    return;
  }
  BOOL v64 = (char *)v9;
  unint64_t v65 = v11;
  uint64_t v66 = v5;
  uint64_t v71 = a1;
  unint64_t v14 = v68;
  uint64_t v13 = v69;
  LOBYTE(v72[0]) = 0;
  uint64_t v15 = v6;
  uint64_t v16 = sub_1D446A5E8();
  LOBYTE(v72[0]) = 1;
  uint64_t v18 = sub_1D446A598();
  unint64_t v20 = v19;
  id v21 = objc_msgSend(self, sel_fm_dateFromEpoch_, v16);
  sub_1D44695D8();

  uint64_t v22 = HIBYTE(v20) & 0xF;
  uint64_t v23 = v18 & 0xFFFFFFFFFFFFLL;
  if ((v20 & 0x2000000000000000) != 0) {
    uint64_t v24 = HIBYTE(v20) & 0xF;
  }
  else {
    uint64_t v24 = v18 & 0xFFFFFFFFFFFFLL;
  }
  if (!v24)
  {
    swift_bridgeObjectRelease();
    char v39 = 1;
    os_log_type_t v25 = v65;
LABEL_61:
    unint64_t v45 = v14;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(&v25[*((int *)v64 + 5)], v66, v13);
    *os_log_type_t v25 = v39;
    unint64_t v68 = FMIPLockMetadata.debugDescription.getter();
    unint64_t v47 = v46;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_1D4469928();
    sub_1D42D7FAC(v48, (uint64_t)qword_1EBD83228);
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_1D44698F8();
    os_log_type_t v50 = sub_1D4469FF8();
    uint64_t v51 = v49;
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      BOOL v64 = v8;
      unint64_t v54 = v45;
      uint64_t v55 = v53;
      v72[0] = v53;
      uint64_t v62 = v52;
      uint64_t v63 = v15;
      uint64_t v56 = v70;
      *(_DWORD *)uint64_t v52 = 136315138;
      swift_bridgeObjectRetain();
      v72[3] = sub_1D42CB9EC(v68, v47, v72);
      uint64_t v57 = (uint64_t)v65;
      sub_1D446A188();
      swift_bridgeObjectRelease_n();
      os_log_type_t v58 = v50;
      uint64_t v59 = v62;
      _os_log_impl(&dword_1D4271000, v51, v58, "FMIPLockMetadata: initialized %s", v62, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v55, -1, -1);
      MEMORY[0x1D9447730](v59, -1, -1);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v66, v69);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v64, v63);
      uint64_t v60 = v67;
      uint64_t v61 = (uint64_t)v71;
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v14 + 8))(v66, v69);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v8, v15);
      uint64_t v60 = v67;
      uint64_t v61 = (uint64_t)v71;
      uint64_t v57 = (uint64_t)v65;
    }
    sub_1D433F14C(v57, v60);
    uint64_t v17 = v61;
    goto LABEL_4;
  }
  if ((v20 & 0x1000000000000000) != 0)
  {
    Swift::Int v27 = (Swift::Int)sub_1D430B5A4(v18, v20, 10);
    char v44 = v43;
    swift_bridgeObjectRelease();
    os_log_type_t v25 = v65;
    if ((v44 & 1) == 0)
    {
LABEL_49:
      FMIPActionStatus.init(rawValue:)(v27);
      if (LOBYTE(v72[0]) == 18) {
        char v39 = 1;
      }
      else {
        char v39 = v72[0];
      }
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if ((v20 & 0x2000000000000000) == 0)
  {
    os_log_type_t v25 = v65;
    if ((v18 & 0x1000000000000000) != 0) {
      uint64_t v26 = (unsigned __int8 *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v26 = (unsigned __int8 *)sub_1D446A3E8();
    }
    Swift::Int v27 = (Swift::Int)sub_1D430B58C(v26, v23, 10);
    char v29 = v28 & 1;
LABEL_48:
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0) {
      goto LABEL_49;
    }
LABEL_60:
    char v39 = 1;
    goto LABEL_61;
  }
  v72[0] = v18;
  v72[1] = v20 & 0xFFFFFFFFFFFFFFLL;
  os_log_type_t v25 = v65;
  if (v18 == 43)
  {
    if (!v22) {
      goto LABEL_69;
    }
    if (v22 == 1 || (BYTE1(v18) - 48) > 9u) {
      goto LABEL_35;
    }
    Swift::Int v27 = (BYTE1(v18) - 48);
    if (v22 != 2)
    {
      if ((BYTE2(v18) - 48) > 9u) {
        goto LABEL_35;
      }
      Swift::Int v27 = 10 * (BYTE1(v18) - 48) + (BYTE2(v18) - 48);
      uint64_t v30 = v22 - 3;
      if (v30)
      {
        uint64_t v31 = (unsigned __int8 *)v72 + 3;
        while (1)
        {
          unsigned int v32 = *v31 - 48;
          if (v32 > 9) {
            goto LABEL_35;
          }
          uint64_t v33 = 10 * v27;
          if ((unsigned __int128)(v27 * (__int128)10) >> 64 != (10 * v27) >> 63) {
            goto LABEL_35;
          }
          Swift::Int v27 = v33 + v32;
          if (__OFADD__(v33, v32)) {
            goto LABEL_35;
          }
          char v29 = 0;
          ++v31;
          if (!--v30) {
            goto LABEL_48;
          }
        }
      }
    }
LABEL_47:
    char v29 = 0;
    goto LABEL_48;
  }
  if (v18 != 45)
  {
    if (!v22 || (v18 - 48) > 9u) {
      goto LABEL_35;
    }
    Swift::Int v27 = (v18 - 48);
    if (v22 != 1)
    {
      if ((BYTE1(v18) - 48) > 9u) {
        goto LABEL_35;
      }
      Swift::Int v27 = 10 * (v18 - 48) + (BYTE1(v18) - 48);
      uint64_t v34 = v22 - 2;
      if (v34)
      {
        uint64_t v35 = (unsigned __int8 *)v72 + 2;
        while (1)
        {
          unsigned int v36 = *v35 - 48;
          if (v36 > 9) {
            goto LABEL_35;
          }
          uint64_t v37 = 10 * v27;
          if ((unsigned __int128)(v27 * (__int128)10) >> 64 != (10 * v27) >> 63) {
            goto LABEL_35;
          }
          Swift::Int v27 = v37 + v36;
          if (__OFADD__(v37, v36)) {
            goto LABEL_35;
          }
          char v29 = 0;
          ++v35;
          if (!--v34) {
            goto LABEL_48;
          }
        }
      }
    }
    goto LABEL_47;
  }
  if (v22)
  {
    if (v22 != 1 && (BYTE1(v18) - 48) <= 9u)
    {
      if (v22 == 2)
      {
        char v29 = 0;
        Swift::Int v27 = -(uint64_t)(BYTE1(v18) - 48);
        goto LABEL_48;
      }
      if ((BYTE2(v18) - 48) <= 9u)
      {
        Swift::Int v27 = -10 * (BYTE1(v18) - 48) - (BYTE2(v18) - 48);
        uint64_t v38 = v22 - 3;
        if (!v38) {
          goto LABEL_47;
        }
        int v40 = (unsigned __int8 *)v72 + 3;
        while (1)
        {
          unsigned int v41 = *v40 - 48;
          if (v41 > 9) {
            break;
          }
          uint64_t v42 = 10 * v27;
          if ((unsigned __int128)(v27 * (__int128)10) >> 64 != (10 * v27) >> 63) {
            break;
          }
          Swift::Int v27 = v42 - v41;
          if (__OFSUB__(v42, v41)) {
            break;
          }
          char v29 = 0;
          ++v40;
          if (!--v38) {
            goto LABEL_48;
          }
        }
      }
    }
LABEL_35:
    Swift::Int v27 = 0;
    char v29 = 1;
    goto LABEL_48;
  }
  __break(1u);
LABEL_69:
  __break(1u);
}

uint64_t FMIPLocation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v4 = sub_1D4469618();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1D42D5DA0(&qword_1EBD7D9A0);
  uint64_t v8 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  unint64_t v54 = a1;
  sub_1D42C26F4(a1, v11);
  sub_1D42D8CE8();
  uint64_t v52 = v10;
  sub_1D446A8C8();
  if (!v2)
  {
    uint64_t v48 = v7;
    uint64_t v49 = v5;
    uint64_t v50 = v4;
    uint64_t v12 = v51;
    uint64_t v13 = v8;
    v56[0] = 5;
    char v14 = sub_1D446A5A8();
    v56[0] = 3;
    char v15 = sub_1D446A5A8();
    v56[0] = 4;
    int v47 = sub_1D446A5A8();
    v56[0] = 9;
    uint64_t v16 = sub_1D446A598();
    unint64_t v19 = v18;
    uint64_t v46 = v16;
    v56[0] = 1;
    sub_1D446A5B8();
    double v21 = v20;
    v56[0] = 0;
    sub_1D446A5B8();
    double v23 = v22;
    v56[0] = 6;
    sub_1D446A5B8();
    double v25 = v24;
    v56[0] = 8;
    sub_1D446A5B8();
    double v45 = v26;
    v56[0] = 2;
    sub_1D446A5B8();
    double v28 = v27;
    char v29 = v15;
    v56[0] = 11;
    sub_1D446A5B8();
    double v31 = v30;
    v56[0] = 10;
    uint64_t v32 = sub_1D446A5E8();
    id v33 = objc_msgSend(self, sel_fm_dateFromEpoch_, v32);
    uint64_t v34 = v48;
    sub_1D44695D8();

    id v35 = objc_allocWithZone(MEMORY[0x1E4F1E5F0]);
    unsigned int v36 = (void *)sub_1D4469578();
    id v37 = objc_msgSend(v35, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_speed_timestamp_, v36, v25, v45, v23, v28, v31, -1.0, -1.0);

    v38._uint64_t countAndFlagsBits = v46;
    v38._object = v19;
    FMIPLocationType.init(rawValue:)(v38);
    char v39 = v56[0];
    if (v56[0] == 20) {
      char v39 = 0;
    }
    char v55 = v39;
    sub_1D42B7188(v37, &v55, v14 & 1, v29 & 1, v47 & 1, (uint64_t)v56, v21);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v34, v50);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v52, v53);
    char v40 = v56[1];
    char v41 = v56[2];
    char v42 = v56[3];
    uint64_t v43 = v57;
    uint64_t v44 = v58;
    *(unsigned char *)uint64_t v12 = v56[0];
    *(unsigned char *)(v12 + 1) = v40;
    *(unsigned char *)(v12 + 2) = v41;
    *(unsigned char *)(v12 + 3) = v42;
    *(void *)(v12 + 8) = v43;
    *(void *)(v12 + 16) = v44;
  }
  return sub_1D42BEC64((uint64_t)v54);
}

unint64_t sub_1D42D8CE8()
{
  unint64_t result = qword_1EBD7CC48;
  if (!qword_1EBD7CC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CC48);
  }
  return result;
}

unint64_t sub_1D42D8D3C()
{
  unint64_t result = qword_1EBD7CDD0;
  if (!qword_1EBD7CDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CDD0);
  }
  return result;
}

unint64_t FMIPFeatures.debugDescription.getter()
{
  return 0xD000000000000019;
}

unint64_t sub_1D42D8E34()
{
  unint64_t result = qword_1EBD7CC08;
  if (!qword_1EBD7CC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CC08);
  }
  return result;
}

uint64_t FMIPDevice.debugDescription.getter()
{
  uint64_t v1 = v0;
  *(void *)&long long v22 = 0;
  *((void *)&v22 + 1) = 0xE000000000000000;
  sub_1D446A378();
  swift_bridgeObjectRelease();
  unint64_t v24 = 0xD000000000000019;
  unint64_t v25 = 0x80000001D4483D70;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D42D944C(10);
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  MEMORY[0x1D9445EF0](v2, v4, v6, v8);
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  *(void *)double v21 = *(void *)(v1 + 256);
  *(_OWORD *)&v21[8] = *(_OWORD *)(v1 + 264);
  uint64_t v19 = *(void *)(v1 + 280);
  long long v20 = *(_OWORD *)(v1 + 288);
  uint64_t v9 = (*(void *)(v1 + 216) >> 5) & 1;
  uint64_t v10 = v1 + *(int *)(type metadata accessor for FMIPDevice() + 128);
  unsigned __int8 v18 = *(unsigned char *)(v1 + 80);
  sub_1D42D248C((uint64_t *)v21, &v19, v9, v10, &v18, (double *)&v22);
  *(_OWORD *)double v21 = v22;
  *(void *)&v21[16] = v23;
  sub_1D42D5DA0(&qword_1EBD7CC70);
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  unint64_t v12 = v24;
  unint64_t v11 = v25;
  *(void *)&long long v22 = 0;
  *((void *)&v22 + 1) = 0xE000000000000000;
  sub_1D446A378();
  swift_bridgeObjectRelease();
  *(void *)&long long v22 = 0x3A6C65646F6DLL;
  *((void *)&v22 + 1) = 0xE600000000000000;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  *(void *)&long long v22 = v12;
  *((void *)&v22 + 1) = v11;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v13 = v22;
  *(void *)&long long v22 = 0;
  *((void *)&v22 + 1) = 0xE000000000000000;
  sub_1D446A378();
  swift_bridgeObjectRelease();
  strcpy((char *)&v22, "hasLocation: ");
  HIWORD(v22) = -4864;
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  long long v22 = v13;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v14 = v22;
  *(void *)&long long v22 = 0;
  *((void *)&v22 + 1) = 0xE000000000000000;
  sub_1D446A378();
  swift_bridgeObjectRelease();
  *(void *)&long long v22 = 0x676E697461636F6CLL;
  *((void *)&v22 + 1) = 0xEA0000000000203ALL;
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  long long v22 = v14;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v15 = v22;
  *(void *)&long long v22 = 0;
  *((void *)&v22 + 1) = 0xE000000000000000;
  sub_1D446A378();
  swift_bridgeObjectRelease();
  *(void *)&long long v22 = 0xD000000000000015;
  *((void *)&v22 + 1) = 0x80000001D4483DF0;
  uint64_t v16 = *(void *)(v1 + 248);
  if (v16) {
    uint64_t v16 = *(void *)(v16 + 16);
  }
  *(void *)double v21 = v16;
  sub_1D446A6D8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  long long v22 = v15;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1D42D944C(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D4469BF8();
    return sub_1D4469CD8();
  }
  return result;
}

FMIPCore::FMIPBatteryStatus_optional __swiftcall FMIPBatteryStatus.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1D446A518();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1D42D9544(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E55;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E55;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x64656772616843;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x676E696772616843;
      break;
    case 3:
      uint64_t v5 = 0x6772616843746F4ELL;
      unint64_t v3 = 0xEB00000000676E69;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x64656772616843) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x676E696772616843;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEB00000000676E69;
      if (v5 == 0x6772616843746F4ELL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D42D96BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v7 = 1;
    }
    else
    {
      unint64_t v3 = (char *)(a1 + 32);
      uint64_t v4 = (char *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        memcpy(__dst, v3, sizeof(__dst));
        memcpy(v9, v4, sizeof(v9));
        char v7 = _s8FMIPCore16FMIPSafeLocationV2eeoiySbAC_ACtFZ_0(__dst, v9);
        if ((v7 & 1) == 0) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 352;
        v3 += 352;
      }
      while (v6);
    }
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1D42D9768(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    unint64_t v3 = (unsigned __int8 *)(a2 + 50);
    uint64_t v4 = (unsigned __int8 *)(a1 + 50);
    do
    {
      int v5 = *(v4 - 1);
      int v6 = *v4;
      int v7 = *(v3 - 1);
      int v8 = *v3;
      int v9 = *(v4 - 2) ^ *(v3 - 2);
      if (*(void *)(v4 - 18) == *(void *)(v3 - 18) && *(void *)(v4 - 10) == *(void *)(v3 - 10))
      {
        if ((v6 ^ v8 | v5 ^ v7 | v9)) {
          return 0;
        }
      }
      else if ((v6 ^ v8) & 1 | ((sub_1D446A758() & 1) == 0) | ((v5 ^ v7) | v9) & 1)
      {
        return 0;
      }
      v3 += 24;
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t type metadata accessor for FMReverseGeocodingRequest()
{
  uint64_t result = qword_1EA6C9C98;
  if (!qword_1EA6C9C98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1D42D9898(id a1, unint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    sub_1D42DCFDC((uint64_t)a1, a2);
  }
}

uint64_t _s8FMIPCore21FMIPPlaySoundMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPPlaySoundMetadata();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v67 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v66 = (uint64_t)&v62 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  unint64_t v65 = (char *)&v62 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  long long v13 = (char *)&v62 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v64 = (uint64_t)&v62 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  unsigned __int8 v18 = (char *)&v62 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  double v21 = (char *)&v62 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  unint64_t v24 = (char *)&v62 - v23;
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  double v27 = (char *)&v62 - v26;
  MEMORY[0x1F4188790](v25);
  char v29 = (char *)&v62 - v28;
  char v30 = sub_1D44695C8();
  sub_1D42DA0A4(a1, (uint64_t)v29);
  sub_1D42DA0A4(a2, (uint64_t)v27);
  if ((v30 & 1) == 0)
  {
    sub_1D42D9F90((uint64_t)v27);
    sub_1D42D9F90((uint64_t)v29);
    sub_1D42DA0A4(a1, (uint64_t)v24);
    sub_1D42DA0A4(a2, (uint64_t)v21);
    goto LABEL_12;
  }
  uint64_t v63 = v4;
  uint64_t v31 = qword_1D447C708[*v29];
  uint64_t v32 = qword_1D447C708[*v27];
  sub_1D42D9F90((uint64_t)v27);
  sub_1D42D9F90((uint64_t)v29);
  sub_1D42DA0A4(a1, (uint64_t)v24);
  sub_1D42DA0A4(a2, (uint64_t)v21);
  if (v31 != v32)
  {
LABEL_12:
    sub_1D42D9F90((uint64_t)v21);
    sub_1D42D9F90((uint64_t)v24);
LABEL_13:
    uint64_t v40 = (uint64_t)v18;
    uint64_t v41 = v64;
    uint64_t v42 = (uint64_t)v65;
    sub_1D42DA0A4(a1, v40);
    sub_1D42DA0A4(a2, v41);
    goto LABEL_14;
  }
  uint64_t v33 = *(int *)(v63 + 24);
  uint64_t v34 = &v24[v33];
  uint64_t v35 = *(void *)&v24[v33 + 8];
  unsigned int v36 = &v21[v33];
  uint64_t v37 = *((void *)v36 + 1);
  if (!v35)
  {
    swift_bridgeObjectRetain();
    sub_1D42D9F90((uint64_t)v21);
    sub_1D42D9F90((uint64_t)v24);
    if (!v37)
    {
LABEL_26:
      uint64_t v40 = (uint64_t)v18;
      sub_1D42DA0A4(a1, (uint64_t)v18);
      uint64_t v41 = v64;
      sub_1D42DA0A4(a2, v64);
      uint64_t v42 = (uint64_t)v65;
      goto LABEL_27;
    }
    goto LABEL_24;
  }
  if (!v37)
  {
    swift_bridgeObjectRetain();
    sub_1D42D9F90((uint64_t)v21);
    sub_1D42D9F90((uint64_t)v24);
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (*(void *)v34 == *(void *)v36 && v35 == v37)
  {
    swift_bridgeObjectRetain();
    sub_1D42D9F90((uint64_t)v21);
    sub_1D42D9F90((uint64_t)v24);
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  char v39 = sub_1D446A758();
  swift_bridgeObjectRetain();
  sub_1D42D9F90((uint64_t)v21);
  sub_1D42D9F90((uint64_t)v24);
  swift_bridgeObjectRelease();
  uint64_t v40 = (uint64_t)v18;
  sub_1D42DA0A4(a1, (uint64_t)v18);
  uint64_t v41 = v64;
  sub_1D42DA0A4(a2, v64);
  uint64_t v42 = (uint64_t)v65;
  if ((v39 & 1) == 0)
  {
LABEL_14:
    sub_1D42D9F90(v41);
    sub_1D42D9F90(v40);
LABEL_15:
    sub_1D42DA0A4(a1, (uint64_t)v13);
    sub_1D42DA0A4(a2, v42);
    goto LABEL_16;
  }
LABEL_27:
  uint64_t v45 = v63;
  uint64_t v46 = *(int *)(v63 + 28);
  int v47 = (void *)(v40 + v46);
  uint64_t v48 = *(void *)(v40 + v46 + 8);
  uint64_t v49 = (void *)(v41 + v46);
  uint64_t v50 = v49[1];
  if (!v48)
  {
    swift_bridgeObjectRetain();
    sub_1D42D9F90(v41);
    sub_1D42D9F90(v40);
    if (!v50) {
      goto LABEL_33;
    }
    goto LABEL_35;
  }
  if (!v50)
  {
    swift_bridgeObjectRetain();
    sub_1D42D9F90(v41);
    sub_1D42D9F90(v40);
LABEL_35:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (*v47 == *v49 && v48 == v50)
  {
    swift_bridgeObjectRetain();
    sub_1D42D9F90(v41);
    sub_1D42D9F90(v40);
    swift_bridgeObjectRelease();
LABEL_33:
    sub_1D42DA0A4(a1, (uint64_t)v13);
    sub_1D42DA0A4(a2, v42);
    goto LABEL_37;
  }
  char v51 = sub_1D446A758();
  swift_bridgeObjectRetain();
  sub_1D42D9F90(v41);
  sub_1D42D9F90(v40);
  swift_bridgeObjectRelease();
  sub_1D42DA0A4(a1, (uint64_t)v13);
  sub_1D42DA0A4(a2, v42);
  if ((v51 & 1) == 0)
  {
LABEL_16:
    sub_1D42D9F90(v42);
    sub_1D42D9F90((uint64_t)v13);
LABEL_17:
    sub_1D42DA0A4(a1, v66);
    sub_1D42DA0A4(a2, v67);
    goto LABEL_18;
  }
LABEL_37:
  uint64_t v52 = *(int *)(v45 + 32);
  uint64_t v53 = &v13[v52];
  uint64_t v54 = *(void *)&v13[v52 + 8];
  char v55 = (void *)(v42 + v52);
  uint64_t v56 = v55[1];
  if (!v54)
  {
    swift_bridgeObjectRetain();
    sub_1D42D9F90(v42);
    sub_1D42D9F90((uint64_t)v13);
    if (!v56) {
      goto LABEL_43;
    }
    goto LABEL_45;
  }
  if (!v56)
  {
    swift_bridgeObjectRetain();
    sub_1D42D9F90(v42);
    sub_1D42D9F90((uint64_t)v13);
LABEL_45:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (*(void *)v53 == *v55 && v54 == v56)
  {
    swift_bridgeObjectRetain();
    sub_1D42D9F90(v42);
    sub_1D42D9F90((uint64_t)v13);
    swift_bridgeObjectRelease();
LABEL_43:
    sub_1D42DA0A4(a1, v66);
    sub_1D42DA0A4(a2, v67);
    goto LABEL_47;
  }
  char v57 = sub_1D446A758();
  swift_bridgeObjectRetain();
  sub_1D42D9F90(v42);
  sub_1D42D9F90((uint64_t)v13);
  swift_bridgeObjectRelease();
  sub_1D42DA0A4(a1, v66);
  sub_1D42DA0A4(a2, v67);
  if ((v57 & 1) == 0)
  {
LABEL_18:
    sub_1D42D9F90(v67);
    sub_1D42D9F90(v66);
LABEL_19:
    LOBYTE(v43) = 0;
    return v43 & 1;
  }
LABEL_47:
  uint64_t v58 = *(int *)(v45 + 36);
  uint64_t v59 = (void *)(v66 + v58);
  uint64_t v60 = *(void *)(v66 + v58 + 8);
  uint64_t v61 = (void *)(v67 + v58);
  uint64_t v43 = v61[1];
  if (!v60)
  {
    swift_bridgeObjectRetain();
    sub_1D42D9F90(v67);
    sub_1D42D9F90(v66);
    if (!v43)
    {
      LOBYTE(v43) = 1;
      return v43 & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v43)
  {
    if (*v59 == *v61 && v60 == v43) {
      LOBYTE(v43) = 1;
    }
    else {
      LOBYTE(v43) = sub_1D446A758();
    }
  }
  swift_bridgeObjectRetain();
  sub_1D42D9F90(v67);
  sub_1D42D9F90(v66);
  swift_bridgeObjectRelease();
  return v43 & 1;
}

uint64_t sub_1D42D9F90(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPPlaySoundMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for FMIPPlaySoundMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42DA0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPPlaySoundMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *initializeWithCopy for FMIPPlaySoundMetadata(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v10];
  long long v13 = &a2[v10];
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = &a1[v11];
  uint64_t v16 = &a2[v11];
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = &a1[v18];
  double v21 = &a2[v18];
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = &a1[v19];
  unint64_t v24 = &a2[v19];
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1D42DA1F8(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v142 = a7;
  LODWORD(v125) = a5;
  unint64_t v127 = a4;
  uint64_t v126 = a3;
  uint64_t v124 = sub_1D446A168();
  uint64_t v123 = *(void *)(v124 - 8);
  MEMORY[0x1F4188790](v124);
  uint64_t v128 = (char *)&v113 - v13;
  sub_1D42DB55C(&qword_1EA6C9360);
  uint64_t v134 = sub_1D446A8A8();
  uint64_t v122 = *(void *)(v134 - 8);
  MEMORY[0x1F4188790](v134);
  uint64_t v121 = (uint8_t **)((char *)&v113 - v14);
  uint64_t v15 = sub_1D446A168();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v116 = (char *)&v113 - v16;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v18 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v129 = (uint64_t *)((char *)&v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v19);
  uint64_t v119 = (uint8_t **)((char *)&v113 - v21);
  uint64_t v120 = v22;
  uint64_t v23 = sub_1D446A8A8();
  uint64_t v139 = *(void *)(v23 - 8);
  uint64_t v140 = v23;
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  uint64_t v132 = (uint8_t *)&v113 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v138 = (uint64_t *)((char *)&v113 - v27);
  uint64_t v28 = *(void *)(a6 - 8);
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  uint64_t AssociatedConformanceWitness = (char *)&v113 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v137 = (char *)&v113 - v32;
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v113 - v33;
  uint64_t v131 = (char *)(a2 + 16);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_1D4469928();
  uint64_t v36 = sub_1D42D7FAC(v35, (uint64_t)qword_1EBD83228);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  uint64_t v136 = v28 + 16;
  id v135 = v37;
  v37(v34, a1, a6);
  uint64_t v114 = v36;
  Swift::String v38 = sub_1D44698F8();
  os_log_type_t v39 = sub_1D446A038();
  BOOL v40 = os_log_type_enabled(v38, v39);
  uint64_t v141 = a1;
  uint64_t v118 = a8;
  uint64_t v130 = a9;
  uint64_t v117 = v18;
  uint64_t v115 = (void (*)(uint8_t **, char *, uint64_t))v28;
  if (v40)
  {
    uint64_t v41 = v28;
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v146 = (char *)v43;
    *(_DWORD *)uint64_t v42 = 136315138;
    uint64_t v113 = v42 + 4;
    swift_getAssociatedConformanceWitness();
    uint64_t v44 = sub_1D446A768();
    uint64_t v145 = sub_1D42CB9EC(v44, v45, (uint64_t *)&v146);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    uint64_t v46 = *(void (**)(char *, uint64_t))(v41 + 8);
    v46(v34, a6);
    _os_log_impl(&dword_1D4271000, v38, v39, "FMImageCache: Finished loading request: %s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v43, -1, -1);
    MEMORY[0x1D9447730](v42, -1, -1);
  }
  else
  {
    uint64_t v46 = *(void (**)(char *, uint64_t))(v28 + 8);
    v46(v34, a6);
  }

  swift_beginAccess();
  uint64_t result = (void *)swift_weakLoadStrong();
  uint64_t v48 = AssociatedConformanceWitness;
  uint64_t v49 = (char *)v132;
  if (result)
  {
    uint64_t v50 = result;
    char v51 = v138;
    sub_1D42DC210(v126, v127, v125 & 1, result, v138);
    (*(void (**)(char *, uint64_t *, uint64_t))(v139 + 16))(v49, v51, v140);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v52 = *(uint8_t **)v49;
      uint64_t v53 = v141;
      v135(v48, v141, a6);
      uint64_t v54 = v52;
      char v55 = v52;
      uint64_t v56 = sub_1D44698F8();
      os_log_type_t v57 = sub_1D446A038();
      int v58 = v57;
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v59 = swift_slowAlloc();
        uint64_t v132 = (uint8_t *)swift_slowAlloc();
        uint64_t v146 = (char *)v132;
        *(_DWORD *)uint64_t v59 = 136315394;
        swift_getAssociatedConformanceWitness();
        LODWORD(v131) = v58;
        uint64_t v60 = sub_1D446A768();
        uint64_t v143 = sub_1D42CB9EC(v60, v61, (uint64_t *)&v146);
        uint64_t v53 = v141;
        sub_1D446A188();
        swift_bridgeObjectRelease();
        v46(v48, a6);
        *(_WORD *)(v59 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v62 = sub_1D446A7D8();
        uint64_t v143 = sub_1D42CB9EC(v62, v63, (uint64_t *)&v146);
        sub_1D446A188();
        uint64_t v64 = v130;
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D4271000, v56, (os_log_type_t)v131, "FMImageCache: Failed to fetch image for request: %s due to: %s", (uint8_t *)v59, 0x16u);
        unint64_t v65 = v132;
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v65, -1, -1);
        MEMORY[0x1D9447730](v59, -1, -1);

        uint64_t v66 = v123;
      }
      else
      {
        v46(v48, a6);

        uint64_t v66 = v123;
        uint64_t v64 = v130;
      }
      swift_beginAccess();
      uint64_t v102 = v50[5];
      uint64_t v103 = v134;
      swift_getFunctionTypeMetadata1();
      uint64_t v104 = sub_1D4469E48();
      uint64_t v105 = v64;
      uint64_t AssociatedConformanceWitness = (char *)swift_getAssociatedConformanceWitness();
      uint64_t v106 = *((void *)AssociatedConformanceWitness + 2);
      swift_bridgeObjectRetain();
      MEMORY[0x1D9445E10](&v143, v53, v102, a6, v104, v106);
      uint64_t v107 = swift_bridgeObjectRelease();
      if (v143)
      {
        uint64_t v144 = v143;
        MEMORY[0x1F4188790](v107);
        uint64_t v108 = v142;
        *(&v113 - 6) = (uint8_t *)a6;
        *(&v113 - 5) = (uint8_t *)v108;
        *(&v113 - 4) = (uint8_t *)v118;
        *(&v113 - 3) = (uint8_t *)v105;
        *(&v113 - 2) = v52;
        swift_getWitnessTable();
        sub_1D4469CE8();
        uint64_t v103 = v134;
        swift_bridgeObjectRelease();
      }
      uint64_t v109 = v121;
      *uint64_t v121 = v52;
      swift_storeEnumTagMultiPayload();
      uint64_t v110 = *(void (**)(uint64_t, uint8_t **))(*v50 + 288);
      uint64_t v111 = v52;
      v110(v53, v109);

      (*(void (**)(uint8_t **, uint64_t))(v122 + 8))(v109, v103);
      uint64_t v101 = v124;
    }
    else
    {
      uint64_t v67 = *(int *)(v120 + 48);
      uint64_t v68 = v120;
      uint64_t v69 = v119;
      uint64_t v70 = (char *)v119 + v67;
      uint64_t v71 = &v49[v67];
      unint64_t v72 = *((void *)v49 + 1);
      uint64_t v113 = *(uint8_t **)v49;
      unint64_t v125 = v72;
      *uint64_t v119 = v113;
      v69[1] = (uint8_t *)v72;
      uint64_t v73 = v118;
      uint64_t v74 = *(void *)(v118 - 8);
      uint64_t v75 = v74;
      char v76 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
      uint64_t v77 = v74 + 32;
      v76(v70, v71, v118);
      v135(v137, v141, a6);
      uint64_t v78 = (char *)v129 + *(int *)(v68 + 48);
      uint64_t v79 = (uint8_t *)a6;
      uint64_t v80 = *(void **)(v75 + 16);
      uint64_t v131 = v70;
      unint64_t v127 = v75 + 16;
      uint64_t v126 = v80;
      ((void (*)(char *, char *, uint64_t))v80)(v78, v70, v73);
      BOOL v81 = v116;
      uint64_t v115 = (void (*)(uint8_t **, char *, uint64_t))v76;
      uint64_t v114 = v77;
      v76(v116, v78, v73);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v81, 0, 1, v73);
      swift_beginAccess();
      uint64_t v82 = (uint64_t)v113;
      sub_1D42DD034((uint64_t)v113, v72);
      uint64_t AssociatedConformanceWitness = (char *)swift_getAssociatedConformanceWitness();
      uint64_t v83 = *((void *)AssociatedConformanceWitness + 2);
      sub_1D4469A98();
      sub_1D4469AB8();
      swift_endAccess();
      uint64_t v84 = v82;
      uint64_t v85 = v141;
      sub_1D43A6850(v82, v72, v141);
      uint64_t v86 = v129;
      swift_beginAccess();
      uint64_t v87 = v50[5];
      swift_getFunctionTypeMetadata1();
      uint64_t v88 = sub_1D4469E48();
      swift_bridgeObjectRetain();
      uint64_t v89 = v85;
      uint64_t v90 = v120;
      uint64_t v132 = v79;
      MEMORY[0x1D9445E10](&v143, v89, v87, v79, v88, v83);
      swift_bridgeObjectRelease();
      uint64_t v91 = v117;
      if (v143)
      {
        uint64_t v144 = v143;
        unint64_t v92 = (char *)v86 + *(int *)(v90 + 48);
        unint64_t v93 = v125;
        *uint64_t v86 = v84;
        v86[1] = v93;
        uint64_t v94 = ((uint64_t (*)(char *, char *, uint64_t))v126)(v92, v131, v73);
        MEMORY[0x1F4188790](v94);
        uint64_t v95 = v142;
        *(&v113 - 6) = v132;
        *(&v113 - 5) = (uint8_t *)v95;
        uint64_t v96 = v130;
        *(&v113 - 4) = (uint8_t *)v73;
        *(&v113 - 3) = (uint8_t *)v96;
        *(&v113 - 2) = (uint8_t *)v86;
        sub_1D42DD034(v84, v93);
        swift_getWitnessTable();
        sub_1D4469CE8();
        uint64_t v86 = v129;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t *, uint64_t))(v91 + 8))(v86, v90);
      }
      uint64_t v97 = (char *)v86 + *(int *)(v90 + 48);
      unint64_t v98 = v125;
      *uint64_t v86 = v84;
      v86[1] = v98;
      ((void (*)(char *, char *, uint64_t))v126)(v97, v131, v73);
      sub_1D42DCFDC(v84, v98);
      unint64_t v99 = v121;
      v115(v121, v97, v73);
      uint64_t v100 = v134;
      swift_storeEnumTagMultiPayload();
      uint64_t v53 = v141;
      (*(void (**)(uint64_t, uint8_t **))(*v50 + 288))(v141, v99);
      (*(void (**)(uint8_t **, uint64_t))(v122 + 8))(v99, v100);
      (*(void (**)(uint8_t **, uint64_t))(v91 + 8))(v119, v90);
      a6 = (uint64_t)v132;
      uint64_t v101 = v124;
      uint64_t v66 = v123;
    }
    swift_beginAccess();
    sub_1D4469F68();
    uint64_t v112 = v128;
    sub_1D4469F38();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v112, v101);
    swift_endAccess();
    v135(v137, v53, a6);
    uint64_t v144 = 0;
    swift_beginAccess();
    swift_getFunctionTypeMetadata1();
    sub_1D4469E48();
    sub_1D4469A98();
    sub_1D4469AB8();
    swift_endAccess();
    swift_release();
    return (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(v139 + 8))(v138, v140);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for FMIPBeaconShareDirection(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t FMIPDeviceImageCacheRequest.debugDescription.getter()
{
  return 0;
}

uint64_t sub_1D42DB55C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void sub_1D42DB5A4(uint64_t a1, uint8_t *a2, uint8_t *a3)
{
  uint64_t v79 = a3;
  uint64_t v87 = a2;
  uint64_t v91 = a1;
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = *(void *)(*v3 + 80);
  uint64_t v92 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v86 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v78 = (char *)v75 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v90 = (char *)v75 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v77 = (char *)v75 - v13;
  uint64_t v85 = v14;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v75 - v15;
  uint64_t v17 = v4[12];
  uint64_t v18 = sub_1D446A168();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v75 - v20;
  swift_beginAccess();
  uint64_t v22 = v3[6];
  uint64_t v23 = v4[11];
  uint64_t v83 = v4[13];
  uint64_t v82 = v23;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v24 = *(void *)(AssociatedConformanceWitness + 16);
  swift_bridgeObjectRetain();
  uint64_t v25 = v91;
  MEMORY[0x1D9445E10](v91, v22, v5, v17, v24);
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v84 = v17;
  LODWORD(v25) = v27(v21, 1, v17);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t v28 = v92 + 16;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 16);
  v29(v16, v26, v5);
  uint64_t v88 = v29;
  uint64_t v89 = v28;
  BOOL v81 = v3;
  if (v25 == 1)
  {
    v75[1] = v3 + 4;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v75[2] = v24;
    char v30 = sub_1D4469F58();
    swift_bridgeObjectRelease();
    uint64_t v31 = (uint8_t *)(v92 + 8);
    uint64_t v32 = *(uint8_t **)(v92 + 8);
    ((void (*)(char *, uint64_t))v32)(v16, v5);
    if ((v30 & 1) == 0)
    {
LABEL_13:
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_1D4469928();
      sub_1D42D7FAC(v55, (uint64_t)qword_1EBD83228);
      uint64_t v56 = v77;
      v29(v77, v26, v5);
      os_log_type_t v57 = sub_1D44698F8();
      os_log_type_t v58 = sub_1D446A038();
      BOOL v59 = os_log_type_enabled(v57, v58);
      char v76 = v32;
      v75[0] = v31;
      if (v59)
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        uint64_t v61 = swift_slowAlloc();
        aBlock[0] = v61;
        *(_DWORD *)uint64_t v60 = 136315138;
        uint64_t v87 = v60 + 4;
        uint64_t v62 = sub_1D446A768();
        uint64_t v93 = sub_1D42CB9EC(v62, v63, aBlock);
        uint64_t v26 = v91;
        sub_1D446A188();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v32)(v56, v5);
        _os_log_impl(&dword_1D4271000, v57, v58, "FMImageCache: Attempting to load request: %s", v60, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v61, -1, -1);
        MEMORY[0x1D9447730](v60, -1, -1);
      }
      else
      {
        ((void (*)(char *, uint64_t))v32)(v56, v5);
      }

      uint64_t v64 = v88;
      v88(v90, v26, v5);
      uint64_t v65 = swift_allocObject();
      uint64_t v66 = v81;
      swift_weakInit();
      uint64_t v67 = v78;
      v64(v78, v26, v5);
      uint64_t v68 = v92;
      unint64_t v69 = (*(unsigned __int8 *)(v92 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
      uint64_t v70 = (char *)swift_allocObject();
      uint64_t v71 = v82;
      *((void *)v70 + 2) = v5;
      *((void *)v70 + 3) = v71;
      uint64_t v72 = v83;
      *((void *)v70 + 4) = v84;
      *((void *)v70 + 5) = v72;
      *((void *)v70 + 6) = v65;
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(&v70[v69], v67, v5);
      uint64_t v73 = v90;
      uint64_t v74 = (void *)(*(uint64_t (**)(char *, uint64_t (*)(void *, unint64_t, char), char *, uint64_t, uint64_t))(v72 + 24))(v90, sub_1D42DD168, v70, v71, v72);
      objc_msgSend((id)v66[2], sel_addOperation_, v74, v75[0]);
      v88(v67, v26, v5);
      swift_beginAccess();
      sub_1D4469F68();
      sub_1D4469F28();
      ((void (*)(char *, uint64_t))v76)(v73, v5);
      swift_endAccess();

      return;
    }
    uint64_t v33 = v32;
  }
  else
  {
    uint64_t v33 = *(uint8_t **)(v92 + 8);
    ((void (*)(char *, uint64_t))v33)(v16, v5);
  }
  uint64_t v34 = v86;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_1D4469928();
  sub_1D42D7FAC(v35, (uint64_t)qword_1EBD83228);
  v29(v34, v26, v5);
  uint64_t v36 = sub_1D44698F8();
  os_log_type_t v37 = sub_1D446A038();
  if (os_log_type_enabled(v36, v37))
  {
    Swift::String v38 = v34;
    os_log_type_t v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    char v76 = v33;
    uint64_t v41 = v40;
    aBlock[0] = v40;
    *(_DWORD *)os_log_type_t v39 = 136315138;
    uint64_t v42 = sub_1D446A768();
    uint64_t v93 = sub_1D42CB9EC(v42, v43, aBlock);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v76)(v38, v5);
    _os_log_impl(&dword_1D4271000, v36, v37, "FMImageCache: Loading declined, we are already processing similar location: %s", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v41, -1, -1);
    MEMORY[0x1D9447730](v39, -1, -1);
  }
  else
  {
    ((void (*)(char *, uint64_t))v33)(v34, v5);
  }

  uint64_t v32 = v87;
  if (v87)
  {
    uint64_t v44 = v81;
    unint64_t v45 = v81[3];
    uint64_t v46 = v90;
    v88(v90, v26, v5);
    uint64_t v47 = v92;
    unint64_t v48 = (*(unsigned __int8 *)(v92 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
    unint64_t v49 = (v85 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v50 = (char *)swift_allocObject();
    uint64_t v51 = v82;
    *((void *)v50 + 2) = v5;
    *((void *)v50 + 3) = v51;
    uint64_t v52 = v83;
    *((void *)v50 + 4) = v84;
    *((void *)v50 + 5) = v52;
    *((void *)v50 + 6) = v44;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v50[v48], v46, v5);
    uint64_t v53 = (uint8_t **)&v50[v49];
    uint64_t v31 = v79;
    char *v53 = v32;
    v53[1] = v31;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_1D43A96AC;
    *(void *)(v5 + 24) = v50;
    aBlock[4] = (uint64_t)sub_1D42AEE88;
    uint64_t v95 = (void (*)(char *, uint64_t, uint64_t))v5;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_1D42AEDE4;
    uint64_t aBlock[3] = (uint64_t)&unk_1F2C0D4B8;
    uint64_t v54 = _Block_copy(aBlock);
    uint64_t v29 = v95;
    sub_1D42972D4((uint64_t)v32);
    sub_1D42972D4((uint64_t)v32);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v45, v54);
    sub_1D42E2C6C((uint64_t)v32);
    _Block_release(v54);
    LOBYTE(v44) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v44)
    {
      __break(1u);
      goto LABEL_13;
    }
  }
}

uint64_t initializeWithCopy for FMIPDeviceImageCacheRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for FMIPDeviceImageCacheRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

__n128 initializeWithTake for FMIPDeviceImageCacheRequest(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

id sub_1D42DC13C(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (objc_class *)type metadata accessor for FMIPDeviceImageCacheOperation();
  uint64_t v7 = objc_allocWithZone(v6);
  long long v8 = *a1;
  uint64_t v9 = *((void *)a1 + 2);
  uint64_t v10 = *((void *)a1 + 3);
  char v11 = *((unsigned char *)a1 + 48);
  char v12 = *((unsigned char *)a1 + 49);
  uint64_t v13 = *((void *)a1 + 7);
  v7[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation__isFinished] = 0;
  uint64_t v14 = &v7[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation_request];
  *(_OWORD *)uint64_t v14 = v8;
  *((void *)v14 + 2) = v9;
  *((void *)v14 + 3) = v10;
  *((_OWORD *)v14 + 2) = a1[2];
  v14[48] = v11;
  v14[49] = v12;
  *((void *)v14 + 7) = v13;
  uint64_t v15 = &v7[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation_completion];
  *uint64_t v15 = a2;
  v15[1] = a3;
  v17.receiver = v7;
  v17.super_class = v6;
  return objc_msgSendSuper2(&v17, sel_init);
}

uint64_t type metadata accessor for FMIPDeviceImageCacheOperation()
{
  return self;
}

id sub_1D42DC210@<X0>(void *a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  unint64_t v27 = a2;
  uint64_t v9 = *(void *)(*a4 + 96);
  uint64_t v10 = sub_1D446A168();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v11);
  objc_super v17 = (char *)&v26 - v16;
  if (a3)
  {
    *a5 = (uint64_t)a1;
    swift_getTupleTypeMetadata2();
    sub_1D42DB55C(&qword_1EA6C9360);
    sub_1D446A8A8();
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  else
  {
    uint64_t v26 = v15;
    uint64_t v18 = (void (*)(void *, unint64_t))a4[7];
    unint64_t v19 = v27;
    sub_1D42DD034((uint64_t)a1, v27);
    v18(a1, v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v9) == 1)
    {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v10);
      sub_1D42DC590();
      uint64_t v20 = swift_allocError();
      *uint64_t v21 = 1;
      sub_1D42D9898(a1, v27, 0);
      *a5 = v20;
      swift_getTupleTypeMetadata2();
    }
    else
    {
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v23(v17, v13, v9);
      uint64_t v24 = (char *)a5 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      unint64_t v25 = v27;
      *a5 = (uint64_t)a1;
      a5[1] = v25;
      v23(v24, v17, v9);
    }
    sub_1D42DB55C(&qword_1EA6C9360);
    sub_1D446A8A8();
    return (id)swift_storeEnumTagMultiPayload();
  }
}

unint64_t sub_1D42DC590()
{
  unint64_t result = qword_1EA6C9878;
  if (!qword_1EA6C9878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9878);
  }
  return result;
}

void *initializeWithCopy for FMReverseGeocodingRequest(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (void *)a2[2];
  a1[2] = v7;
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_1D44696C8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  id v13 = v7;
  if (v12(v9, 1, v10))
  {
    uint64_t v14 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
    memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v15 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  return a1;
}

uint64_t destroy for FMReverseGeocodingRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1D44696C8();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_1D42DC820(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v6 = a2;
  uint64_t v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v8 = v6;
    uint64_t v6 = (void *)sub_1D44694E8();
    unint64_t v10 = v9;
  }
  else
  {
    swift_retain();
    unint64_t v10 = 0xF000000000000000;
  }
  id v11 = a3;
  id v12 = a4;
  v7(v6, v10, a3, a4);

  sub_1D42DD08C((uint64_t)v6, v10);

  return swift_release();
}

id sub_1D42DC8E8(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v9 = *(void *)(sub_1D4469498() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  id v11 = *(char **)(v4 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1D42DC9AC(a1, a2, a3, a4, v4 + v10, v11);
}

id sub_1D42DC9AC(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, uint64_t a5, char *a6)
{
  uint64_t v11 = sub_1D4469498();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  objc_super v17 = (char *)&v48 - v16;
  if (a2 >> 60 == 15 || a4)
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1D4469928();
    sub_1D42D7FAC(v28, (uint64_t)qword_1EBD83228);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a5, v11);
    id v29 = a4;
    id v30 = a4;
    uint64_t v31 = sub_1D44698F8();
    os_log_type_t v32 = sub_1D446A038();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v51 = a6;
      uint64_t v35 = v34;
      uint64_t v53 = v34;
      *(_DWORD *)uint64_t v33 = 136315394;
      uint64_t v36 = sub_1D44693F8();
      uint64_t v52 = sub_1D42CB9EC(v36, v37, &v53);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v52 = (uint64_t)a4;
      id v38 = a4;
      sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
      uint64_t v39 = sub_1D4469B68();
      uint64_t v52 = sub_1D42CB9EC(v39, v40, &v53);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v31, v32, "FMDeviceImageDownloadOperation: error received for URL: %s, error: %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      uint64_t v41 = v35;
      a6 = v51;
      MEMORY[0x1D9447730](v41, -1, -1);
      MEMORY[0x1D9447730](v33, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
    uint64_t v44 = *(void (**)(void *, void, uint64_t))&a6[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation_completion];
    unint64_t v45 = a4;
    if (!a4)
    {
      sub_1D42DC590();
      unint64_t v45 = (void *)swift_allocError();
      *uint64_t v46 = 0;
    }
    id v47 = a4;
    v44(v45, 0, 1);

    return objc_msgSend(a6, sel_setFinished_, 1);
  }
  else
  {
    sub_1D42DD034(a1, a2);
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1D4469928();
    sub_1D42D7FAC(v18, (uint64_t)qword_1EBD83228);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, a5, v11);
    sub_1D42DD034(a1, a2);
    sub_1D42DD034(a1, a2);
    unint64_t v19 = sub_1D44698F8();
    os_log_type_t v20 = sub_1D446A038();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v53 = v50;
      *(_DWORD *)uint64_t v21 = 136315394;
      os_log_t v49 = v19;
      uint64_t v22 = sub_1D44693F8();
      uint64_t v24 = sub_1D42CB9EC(v22, v23, &v53);
      uint64_t v51 = a6;
      uint64_t v52 = v24;
      sub_1D446A188();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      *(_WORD *)(v21 + 12) = 2080;
      uint64_t v25 = sub_1D44694B8();
      uint64_t v52 = sub_1D42CB9EC(v25, v26, &v53);
      a6 = v51;
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D42DD08C(a1, a2);
      sub_1D42DD08C(a1, a2);
      unint64_t v19 = v49;
      _os_log_impl(&dword_1D4271000, v49, v20, "FMDeviceImageDownloadOperation: response received for URL: %s, data: %s", (uint8_t *)v21, 0x16u);
      uint64_t v27 = v50;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v27, -1, -1);
      MEMORY[0x1D9447730](v21, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      sub_1D42DD08C(a1, a2);
      sub_1D42DD08C(a1, a2);
    }

    uint64_t v42 = *(void (**)(uint64_t, unint64_t, void))&a6[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation_completion];
    sub_1D42DD034(a1, a2);
    v42(a1, a2, 0);
    sub_1D42DD08C(a1, a2);
    objc_msgSend(a6, sel_setFinished_, 1);
    return (id)sub_1D42DD08C(a1, a2);
  }
}

uint64_t sub_1D42DCFDC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1D42DD034(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1D42DD08C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1D42DCFDC(a1, a2);
  }
  return a1;
}

uint64_t sub_1D42DD168(void *a1, unint64_t a2, char a3)
{
  return sub_1D42DD5F0(a1, a2, a3 & 1, v3[6], (uint64_t)v3+ ((*(unsigned __int8 *)(*(void *)(v3[2] - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3[2] - 8) + 80)), v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1D42DD1D4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1D42D5DA0(&qword_1EBD7E838);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D42DD324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1D4469958();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  size_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D44699B8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(void *)(v4 + 24);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a1;
  uint64_t v16[3] = v4;
  v16[4] = a2;
  v16[5] = a3;
  aBlock[4] = sub_1D42C0AC8;
  uint64_t aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C09720;
  objc_super v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1D4469988();
  v19[1] = MEMORY[0x1E4FBC860];
  sub_1D42DDA8C((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1D42DD5F0(void *a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v41 = a7;
  uint64_t v42 = a8;
  uint64_t v40 = a5;
  int v43 = a3;
  uint64_t v44 = a1;
  unint64_t v45 = a2;
  uint64_t v10 = sub_1D4469958();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D44699B8();
  uint64_t v47 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v46 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a6 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v37 = a9;
    id v39 = *(id *)(result + 24);
    swift_release();
    uint64_t v21 = swift_allocObject();
    id v38 = v13;
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v40, a6);
    unint64_t v22 = (*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    unint64_t v23 = (v18 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = v14;
    uint64_t v24 = v11;
    uint64_t v25 = v10;
    unint64_t v26 = (char *)swift_allocObject();
    uint64_t v27 = v41;
    *((void *)v26 + 2) = a6;
    *((void *)v26 + 3) = v27;
    uint64_t v28 = v37;
    *((void *)v26 + 4) = v42;
    *((void *)v26 + 5) = v28;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v26[v22], v19, a6);
    *(void *)&v26[v23] = v21;
    id v29 = &v26[(v23 + 15) & 0xFFFFFFFFFFFFFFF8];
    uint64_t v31 = v44;
    unint64_t v30 = v45;
    *(void *)id v29 = v44;
    *((void *)v29 + 1) = v30;
    LOBYTE(v22) = v43 & 1;
    v29[16] = v43 & 1;
    aBlock[4] = sub_1D42BF634;
    uint64_t aBlock[5] = v26;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1D42BD950;
    uint64_t aBlock[3] = &unk_1F2C0D558;
    os_log_type_t v32 = _Block_copy(aBlock);
    swift_retain();
    sub_1D42DDBF4(v31, v30, v22);
    uint64_t v33 = v46;
    sub_1D4469988();
    uint64_t v48 = MEMORY[0x1E4FBC860];
    sub_1D42DDB1C((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    uint64_t v34 = v38;
    sub_1D446A1F8();
    uint64_t v35 = v39;
    MEMORY[0x1D9446420](0, v33, v34, v32);
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v34, v25);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v40);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D42DDA8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42DDAD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42DDB1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42DDB64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42DDBAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1D42DDBF4(id a1, unint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)sub_1D42DD034((uint64_t)a1, a2);
  }
}

uint64_t sub_1D42DDC00(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 24 * a3 - 24;
LABEL_5:
    uint64_t v9 = v6;
    uint64_t v10 = v8;
    while (1)
    {
      uint64_t v11 = v10 + 24;
      uint64_t result = *(void *)v10;
      BOOL v12 = *(void *)v10 == *(void *)(v10 + 24) && *(void *)(v10 + 8) == *(void *)(v10 + 32);
      if (v12 || (uint64_t result = sub_1D446A758(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 24;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v14 = *(void *)(v10 + 24);
      uint64_t v13 = *(void *)(v10 + 32);
      char v15 = *(unsigned char *)(v10 + 40);
      char v16 = *(unsigned char *)(v10 + 41);
      char v17 = *(unsigned char *)(v10 + 42);
      uint64_t v18 = *(void *)(v10 + 16);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v10;
      *(void *)uint64_t v10 = v14;
      *(void *)(v10 + 8) = v13;
      *(unsigned char *)(v10 + 16) = v15;
      *(unsigned char *)(v10 + 17) = v16;
      *(unsigned char *)(v10 + 18) = v17;
      v10 -= 24;
      ++v9;
      *(void *)(v11 + 16) = v18;
      if (v4 == v9) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

FMIPCore::FMIPLocationType_optional __swiftcall FMIPLocationType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1D446A788();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 2;
  switch(v3)
  {
    case 0:
      goto LABEL_3;
    case 1:
      char v5 = 1;
LABEL_3:
      char v6 = v5;
      break;
    case 2:
      break;
    case 3:
      char v6 = 3;
      break;
    case 4:
      char v6 = 4;
      break;
    case 5:
      char v6 = 5;
      break;
    case 6:
      char v6 = 6;
      break;
    case 7:
      char v6 = 7;
      break;
    case 8:
      char v6 = 8;
      break;
    case 9:
      char v6 = 9;
      break;
    case 10:
      char v6 = 10;
      break;
    case 11:
      char v6 = 11;
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    default:
      char v6 = 20;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

uint64_t _s8FMIPCore12FMIPLocationV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  int v2 = *(unsigned __int8 *)a1;
  int v3 = *((unsigned __int8 *)a1 + 1);
  int v4 = *((unsigned __int8 *)a1 + 2);
  double v5 = a1[2];
  int v6 = *(unsigned __int8 *)a2;
  int v7 = *((unsigned __int8 *)a2 + 1);
  int v8 = *((unsigned __int8 *)a2 + 2);
  double v9 = a2[2];
  sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7D970);
  char v10 = 0;
  if ((sub_1D446A118() & 1) != 0 && v5 == v9 && ((v2 ^ v6) & 1) == 0 && ((v3 ^ v7) & 1) == 0 && ((v4 ^ v8) & 1) == 0)
  {
    unint64_t v11 = FMIPLocationType.rawValue.getter();
    uint64_t v13 = v12;
    if (v11 == FMIPLocationType.rawValue.getter() && v13 == v14) {
      char v10 = 1;
    }
    else {
      char v10 = sub_1D446A758();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v10 & 1;
}

unint64_t FMIPLocationType.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x756F7364776F7263;
      break;
    case 2:
      unint64_t result = 5460039;
      break;
    case 3:
      unint64_t result = 1768319319;
      break;
    case 4:
      unint64_t result = 0x61636F4C65666173;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x656D69746C616572;
      break;
    case 7:
      unint64_t result = 0x6F4C646572696170;
      break;
    case 8:
      unint64_t result = 0x6E6E6F437473616CLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000010;
      break;
    case 0xB:
      unint64_t result = 0x656E774F7261656ELL;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000018;
      break;
    case 0xD:
      unint64_t result = 0x786F725072656570;
      break;
    case 0xE:
      unint64_t result = 0x6C627550666C6573;
      break;
    case 0xF:
    case 0x12:
      unint64_t result = 0xD000000000000014;
      break;
    case 0x10:
      unint64_t result = 0x646568636163;
      break;
    case 0x11:
      unint64_t result = 0x6552746E65746E69;
      break;
    case 0x13:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for FMLocalize()
{
  return self;
}

uint64_t _s8FMIPCore26FMIPDeviceLostModeMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  int v7 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v79 = (uint64_t)&v73 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v78 = (char *)&v73 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v77 = (char *)&v73 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  char v76 = (char *)&v73 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v75 = (char *)&v73 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  BOOL v81 = (char *)&v73 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v80 = (char *)&v73 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v74 = (uint64_t)&v73 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v82 = (uint64_t)&v73 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v73 - v27;
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  uint64_t v31 = (char *)&v73 - v30;
  uint64_t v32 = MEMORY[0x1F4188790](v29);
  uint64_t v34 = (char *)&v73 - v33;
  uint64_t v35 = MEMORY[0x1F4188790](v32);
  uint64_t v37 = (char *)&v73 - v36;
  uint64_t v38 = MEMORY[0x1F4188790](v35);
  uint64_t v40 = (char *)&v73 - v39;
  MEMORY[0x1F4188790](v38);
  uint64_t v42 = (char *)&v73 - v41;
  char v43 = sub_1D44695C8();
  sub_1D42DE980(a1, (uint64_t)v42);
  sub_1D42DE980(a2, (uint64_t)v40);
  if ((v43 & 1) == 0)
  {
    sub_1D42DE89C((uint64_t)v40);
    sub_1D42DE89C((uint64_t)v42);
    sub_1D42DE980(a1, (uint64_t)v37);
    sub_1D42DE980(a2, (uint64_t)v34);
LABEL_8:
    sub_1D42DE89C((uint64_t)v37);
    sub_1D42DE89C((uint64_t)v34);
    sub_1D42DE980(a1, (uint64_t)v31);
    sub_1D42DE980(a2, (uint64_t)v28);
    uint64_t v51 = (uint64_t)v75;
    uint64_t v50 = (uint64_t)v76;
    os_log_t v49 = (unsigned __int8 *)v80;
    uint64_t v48 = (unsigned __int8 *)v81;
LABEL_9:
    sub_1D42DE89C((uint64_t)v31);
    sub_1D42DE89C((uint64_t)v28);
    uint64_t v52 = v82;
    sub_1D42DE980(a1, v82);
    uint64_t v53 = v74;
    sub_1D42DE980(a2, v74);
    uint64_t v54 = v52;
    uint64_t v56 = (uint64_t)v77;
    uint64_t v55 = (uint64_t)v78;
LABEL_10:
    sub_1D42DE89C(v54);
    sub_1D42DE89C(v53);
    sub_1D42DE980(a1, (uint64_t)v49);
    sub_1D42DE980(a2, (uint64_t)v48);
LABEL_11:
    sub_1D42DE89C((uint64_t)v48);
    sub_1D42DE89C((uint64_t)v49);
    sub_1D42DE980(a1, v51);
    sub_1D42DE980(a2, v50);
LABEL_12:
    sub_1D42DE89C(v50);
    sub_1D42DE89C(v51);
    sub_1D42DE980(a1, v56);
    sub_1D42DE980(a2, v55);
LABEL_13:
    sub_1D42DE89C(v55);
    sub_1D42DE89C(v56);
    uint64_t v57 = a1;
    uint64_t v58 = v79;
    sub_1D42DE980(v57, v79);
    sub_1D42DE980(a2, (uint64_t)v7);
    goto LABEL_14;
  }
  uint64_t v44 = v40[56];
  uint64_t v45 = qword_1D4477648[v42[56]];
  uint64_t v73 = v7;
  uint64_t v46 = qword_1D4477648[v44];
  sub_1D42DE89C((uint64_t)v40);
  sub_1D42DE89C((uint64_t)v42);
  sub_1D42DE980(a1, (uint64_t)v37);
  sub_1D42DE980(a2, (uint64_t)v34);
  BOOL v47 = v45 == v46;
  int v7 = v73;
  if (!v47) {
    goto LABEL_8;
  }
  os_log_t v49 = (unsigned __int8 *)v80;
  uint64_t v48 = (unsigned __int8 *)v81;
  if (*((void *)v37 + 5) == *((void *)v34 + 5) && *((void *)v37 + 6) == *((void *)v34 + 6))
  {
    sub_1D42DE89C((uint64_t)v37);
    sub_1D42DE89C((uint64_t)v34);
    sub_1D42DE980(a1, (uint64_t)v31);
    sub_1D42DE980(a2, (uint64_t)v28);
    uint64_t v51 = (uint64_t)v75;
    uint64_t v50 = (uint64_t)v76;
  }
  else
  {
    char v61 = sub_1D446A758();
    sub_1D42DE89C((uint64_t)v37);
    sub_1D42DE89C((uint64_t)v34);
    sub_1D42DE980(a1, (uint64_t)v31);
    sub_1D42DE980(a2, (uint64_t)v28);
    uint64_t v51 = (uint64_t)v75;
    uint64_t v50 = (uint64_t)v76;
    if ((v61 & 1) == 0) {
      goto LABEL_9;
    }
  }
  if (*((void *)v31 + 1) == *((void *)v28 + 1) && *((void *)v31 + 2) == *((void *)v28 + 2))
  {
    sub_1D42DE89C((uint64_t)v31);
    sub_1D42DE89C((uint64_t)v28);
    uint64_t v62 = v82;
    sub_1D42DE980(a1, v82);
    uint64_t v53 = v74;
    sub_1D42DE980(a2, v74);
    uint64_t v54 = v62;
    uint64_t v56 = (uint64_t)v77;
    uint64_t v55 = (uint64_t)v78;
  }
  else
  {
    LODWORD(v76) = sub_1D446A758();
    sub_1D42DE89C((uint64_t)v31);
    sub_1D42DE89C((uint64_t)v28);
    uint64_t v63 = v82;
    sub_1D42DE980(a1, v82);
    uint64_t v53 = v74;
    sub_1D42DE980(a2, v74);
    uint64_t v54 = v63;
    uint64_t v56 = (uint64_t)v77;
    uint64_t v55 = (uint64_t)v78;
    if ((v76 & 1) == 0) {
      goto LABEL_10;
    }
  }
  if (*(void *)(v54 + 24) == *(void *)(v53 + 24) && *(void *)(v54 + 32) == *(void *)(v53 + 32))
  {
    sub_1D42DE89C(v54);
    sub_1D42DE89C(v53);
    sub_1D42DE980(a1, (uint64_t)v49);
    sub_1D42DE980(a2, (uint64_t)v48);
  }
  else
  {
    LODWORD(v78) = sub_1D446A758();
    sub_1D42DE89C(v82);
    sub_1D42DE89C(v53);
    sub_1D42DE980(a1, (uint64_t)v49);
    sub_1D42DE980(a2, (uint64_t)v48);
    if ((v78 & 1) == 0) {
      goto LABEL_11;
    }
  }
  int v64 = *v49;
  sub_1D42DE89C((uint64_t)v49);
  int v65 = *v48;
  sub_1D42DE89C((uint64_t)v48);
  sub_1D42DE980(a1, v51);
  sub_1D42DE980(a2, v50);
  BOOL v47 = v64 == v65;
  int v7 = v73;
  if (!v47) {
    goto LABEL_12;
  }
  int v66 = *(unsigned __int8 *)(v51 + 1);
  sub_1D42DE89C(v51);
  int v67 = *(unsigned __int8 *)(v50 + 1);
  sub_1D42DE89C(v50);
  sub_1D42DE980(a1, v56);
  sub_1D42DE980(a2, v55);
  BOOL v47 = v66 == v67;
  int v7 = v73;
  if (!v47) {
    goto LABEL_13;
  }
  int v68 = *(unsigned __int8 *)(v56 + 2);
  sub_1D42DE89C(v56);
  int v69 = *(unsigned __int8 *)(v55 + 2);
  sub_1D42DE89C(v55);
  uint64_t v70 = a1;
  uint64_t v58 = v79;
  sub_1D42DE980(v70, v79);
  sub_1D42DE980(a2, (uint64_t)v73);
  BOOL v47 = v68 == v69;
  int v7 = v73;
  if (v47)
  {
    char v71 = *(unsigned char *)(v58 + 3);
    sub_1D42DE89C(v58);
    char v72 = v7[3];
    sub_1D42DE89C((uint64_t)v7);
    char v59 = v71 ^ v72 ^ 1;
    return v59 & 1;
  }
LABEL_14:
  sub_1D42DE89C((uint64_t)v7);
  sub_1D42DE89C(v58);
  char v59 = 0;
  return v59 & 1;
}

uint64_t sub_1D42DE89C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPDeviceLostModeMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for FMIPDeviceLostModeMetadata(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t v5 = sub_1D4469618();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1D42DE980(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPDeviceLostModeMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for FMIPDeviceLostModeMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(int *)(a3 + 48);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v10 = sub_1D4469618();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

uint64_t sub_1D42DEAB4()
{
  return sub_1D42DEABC(*v0);
}

uint64_t sub_1D42DEABC(char a1)
{
  uint64_t result = 0x73736572646461;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6168436F69647561;
      break;
    case 2:
      uint64_t result = 0x4C79726574746162;
      break;
    case 3:
      uint64_t result = 0x5379726574746162;
      break;
    case 4:
      uint64_t result = 0x444955556162;
      break;
    case 5:
      uint64_t result = 0x65646F4D74736F6CLL;
      break;
    case 6:
      uint64_t result = 0xD000000000000014;
      break;
    case 7:
      uint64_t result = 0x656B61576B726164;
      break;
    case 8:
    case 15:
    case 37:
      uint64_t result = 0xD000000000000010;
      break;
    case 9:
      uint64_t result = 0x6C43656369766564;
      break;
    case 10:
      uint64_t result = 0x6F43656369766564;
      break;
    case 11:
      uint64_t result = 0xD000000000000011;
      break;
    case 12:
      uint64_t result = 0xD000000000000011;
      break;
    case 13:
      uint64_t result = 0x7365727574616566;
      break;
    case 14:
      uint64_t result = 25705;
      break;
    case 16:
      uint64_t result = 0x72616853796C6D66;
      break;
    case 17:
      uint64_t result = 0x697461636F4C7369;
      break;
    case 18:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 19:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 20:
      uint64_t result = 0x65646F4D74736F6CLL;
      break;
    case 21:
      uint64_t result = 0x7265776F50776F6CLL;
      break;
    case 22:
      uint64_t result = 0x63614D7369;
      break;
    case 23:
      uint64_t result = 0x646E756F46636F6CLL;
      break;
    case 24:
      uint64_t result = 6584174;
      break;
    case 25:
      uint64_t result = 6579059;
      break;
    case 26:
      uint64_t result = 0x6957656369766564;
      break;
    case 27:
      unsigned int v3 = 1936287860;
      goto LABEL_33;
    case 28:
      uint64_t result = 0x72506E4965706977;
      break;
    case 29:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 30:
      uint64_t result = 0x695464656B636F6CLL;
      break;
    case 31:
      unsigned int v3 = 1953722220;
LABEL_33:
      uint64_t result = v3 | 0x6976654400000000;
      break;
    case 32:
      uint64_t result = 0x656D695474736F6CLL;
      break;
    case 33:
      uint64_t result = 0x684367734D78616DLL;
      break;
    case 34:
      uint64_t result = 6779757;
      break;
    case 35:
      uint64_t result = 1735615853;
      break;
    case 36:
      uint64_t result = 0x6F4D656369766564;
      break;
    case 38:
      uint64_t result = 1701667182;
      break;
    case 39:
      uint64_t result = 0x6449737270;
      break;
    case 40:
      uint64_t result = 0x65646F6373736170;
      break;
    case 41:
      uint64_t result = 0x6369766544776172;
      break;
    case 42:
      uint64_t result = 0x6F4C65746F6D6572;
      break;
    case 43:
      uint64_t result = 0x695765746F6D6572;
      break;
    case 44:
      uint64_t result = 0x61636F4C65666173;
      break;
    case 45:
      uint64_t result = 6581875;
      break;
    case 46:
      uint64_t result = 0x7453656369766564;
      break;
    case 47:
      uint64_t result = 0x676E696B63617274;
      break;
    case 48:
      uint64_t result = 0x6D69546465706977;
      break;
    case 49:
      uint64_t result = 0x756F72476D657469;
      break;
    case 50:
      uint64_t result = 0xD000000000000015;
      break;
    case 51:
      uint64_t result = 0x6574617453326D72;
      break;
    case 52:
      uint64_t result = 0x52676E69646E6570;
      break;
    case 53:
      uint64_t result = 0xD000000000000014;
      break;
    case 54:
      uint64_t result = 0x79546E6F63616562;
      break;
    case 55:
      uint64_t result = 0xD000000000000014;
      break;
    case 56:
      uint64_t result = 0xD000000000000019;
      break;
    case 57:
      uint64_t result = 0x6552726961706572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D42DF104()
{
  return sub_1D42DF124(*v0);
}

uint64_t sub_1D42DF124(char a1)
{
  return qword_1D4476D00[a1];
}

uint64_t getEnumTagSinglePayload for FMIPLocation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPDevice.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 57 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 57) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xC7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xC6)
  {
    unsigned int v6 = ((a2 - 199) >> 8) + 1;
    *uint64_t result = a2 + 57;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 57;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPDevice.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xC7) {
    goto LABEL_17;
  }
  if (a2 + 57 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 57) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 57;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 57;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 57;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x3A;
  int v8 = v6 - 58;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t sub_1D42DF2E0()
{
  return 0;
}

uint64_t sub_1D42DF2EC()
{
  return swift_release();
}

uint64_t sub_1D42DF2F4()
{
  return swift_release();
}

uint64_t sub_1D42DF2FC()
{
  return swift_release();
}

uint64_t sub_1D42DF304()
{
  return swift_release();
}

uint64_t sub_1D42DF30C()
{
  return swift_release();
}

uint64_t sub_1D42DF314()
{
  return swift_release();
}

uint64_t sub_1D42DF31C()
{
  return swift_release();
}

uint64_t sub_1D42DF324()
{
  return swift_release();
}

uint64_t sub_1D42DF32C()
{
  return swift_release();
}

uint64_t sub_1D42DF334()
{
  return swift_release();
}

uint64_t sub_1D42DF33C()
{
  return swift_release();
}

uint64_t sub_1D42DF344()
{
  return swift_release();
}

uint64_t sub_1D42DF34C()
{
  return swift_release();
}

uint64_t sub_1D42DF354()
{
  return swift_release();
}

uint64_t sub_1D42DF35C()
{
  return swift_release();
}

uint64_t sub_1D42DF364()
{
  return swift_release();
}

uint64_t sub_1D42DF36C()
{
  return swift_release();
}

uint64_t sub_1D42DF374()
{
  return swift_release();
}

uint64_t sub_1D42DF37C()
{
  return swift_release();
}

uint64_t sub_1D42DF384()
{
  return swift_release();
}

uint64_t sub_1D42DF38C()
{
  return swift_release();
}

uint64_t sub_1D42DF394()
{
  return swift_release();
}

uint64_t sub_1D42DF39C()
{
  return swift_release();
}

uint64_t sub_1D42DF3A4()
{
  return swift_release();
}

uint64_t sub_1D42DF3AC()
{
  return swift_release();
}

uint64_t sub_1D42DF3B4()
{
  return swift_release();
}

uint64_t sub_1D42DF3BC()
{
  return swift_release();
}

uint64_t sub_1D42DF3C4()
{
  return swift_release();
}

uint64_t sub_1D42DF3CC()
{
  return swift_release();
}

uint64_t sub_1D42DF3D4()
{
  return swift_release();
}

uint64_t sub_1D42DF3DC()
{
  return swift_release();
}

uint64_t sub_1D42DF3E4()
{
  return swift_release();
}

uint64_t sub_1D42DF3EC()
{
  return swift_release();
}

uint64_t sub_1D42DF3F4()
{
  return swift_release();
}

uint64_t sub_1D42DF3FC()
{
  return swift_release();
}

uint64_t sub_1D42DF404()
{
  return swift_release();
}

uint64_t sub_1D42DF40C()
{
  return swift_release();
}

uint64_t sub_1D42DF414(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF424(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF434(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF444(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF454(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF464(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF474(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF484(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF494(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF504(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF514(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF524(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF534(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF544(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF554(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF564(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF574(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF584(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF594(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF604(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF614(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF624(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF634(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF644(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42DF654(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

unint64_t sub_1D42DF664()
{
  return sub_1D42DF66C(*v0);
}

unint64_t sub_1D42DF66C(char a1)
{
  unint64_t result = 0x6954657461657263;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F43737574617473;
      break;
    case 2:
      unint64_t result = 0x7469547472656C61;
      break;
    case 3:
      unint64_t result = 0x7865547472656C61;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMIPDeviceImageCacheRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPDeviceImageCacheRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t getEnumTagSinglePayload for FMIPAddress(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 288)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 168);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D42DF82C(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t getEnumTagSinglePayload for FMIPItemBatteryStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t sub_1D42DF8C4()
{
  uint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x63616542666C6573;
      break;
    case 2:
      uint64_t result = 0x6E6169727564;
      break;
    case 3:
      uint64_t result = 0x726F737365636361;
      break;
    case 4:
      uint64_t result = 1701602664;
      break;
    case 5:
      uint64_t result = 0x6E69466C61636F6CLL;
      break;
    case 6:
      uint64_t result = 0x4D6C617574726976;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPDeviceImageCacheRequest()
{
  return &type metadata for FMIPDeviceImageCacheRequest;
}

unsigned char *storeEnumTagSinglePayload for FMIPPlaySoundMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void destroy for FMIPLocation(uint64_t a1)
{
}

unsigned char *_s8FMIPCore14FMIPBeaconTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMIPDevice(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D44220E0);
}

uint64_t sub_1D42DFB6C()
{
  return sub_1D42DFB74(*v0);
}

uint64_t sub_1D42DFB74(char a1)
{
  uint64_t result = 0x6470556C69616D65;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x72624E72656E776FLL;
      break;
    case 2:
      uint64_t result = 0x6C69616D65;
      break;
    case 3:
      uint64_t result = 0x646E756F73;
      break;
    case 4:
      uint64_t result = 0x6F43737574617473;
      break;
    case 5:
      uint64_t result = 0x74736F4C706F7473;
      break;
    case 6:
      uint64_t result = 1954047348;
      break;
    case 7:
      uint64_t result = 0x7478655472657375;
      break;
    case 8:
      uint64_t result = 0x6954657461657263;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D42DFC80()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E6979616C70;
      break;
    case 2:
      uint64_t result = 0x6C62616C69617661;
      break;
    case 3:
      uint64_t result = 0x646574756DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D42DFCFC()
{
  return sub_1D42DFD04(*v0);
}

uint64_t sub_1D42DFD04(char a1)
{
  uint64_t result = 0x6564757469746C61;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x76654C726F6F6C66;
      break;
    case 2:
      uint64_t result = 0xD000000000000012;
      break;
    case 3:
      uint64_t result = 0x756363616E497369;
      break;
    case 4:
    case 11:
      uint64_t result = 0xD000000000000010;
      break;
    case 5:
      uint64_t result = 0x646C4F7369;
      break;
    case 6:
      uint64_t result = 0x656475746974616CLL;
      break;
    case 7:
      unsigned int v3 = 1633906540;
      goto LABEL_10;
    case 8:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    case 9:
      unsigned int v3 = 1769172848;
LABEL_10:
      uint64_t result = v3 | 0x6E6F697400000000;
      break;
    case 10:
      uint64_t result = 0x6D617453656D6974;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D42DFE58()
{
  return sub_1D42DFE60(*v0);
}

unint64_t sub_1D42DFE60(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x65626D654D736168;
      break;
    case 3:
      unint64_t result = 0x4153487369;
      break;
    case 4:
      unint64_t result = 0x6D614E7473726966;
      break;
    case 5:
      unint64_t result = 0x656D614E7473616CLL;
      break;
    case 6:
      unint64_t result = 0x6449656C707061;
      break;
    case 7:
      unint64_t result = 0x696669746E656469;
      break;
    case 8:
      unint64_t result = 0x6D754E656E6F6870;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D42DFF88()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

__n128 initializeWithTake for FMIPLocation(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for FMIPLocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1D42E0028(uint64_t a1, uint64_t a2)
{
  return sub_1D429B798(a1, a2, MEMORY[0x1E4F27EB8]);
}

__n128 initializeWithTake for FMIPAudioChannel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

unint64_t sub_1D42E0060()
{
  return sub_1D42E0068(*v0);
}

unint64_t sub_1D42E0068(char a1)
{
  unint64_t result = 0x6C6562616CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x7972746E756F63;
      break;
    case 3:
      unint64_t result = 0x437972746E756F63;
      break;
    case 4:
      unint64_t result = 0x614E746565727473;
      break;
    case 5:
      unint64_t result = 0x6441746565727473;
      break;
    case 6:
      unint64_t result = 0x7974696C61636F6CLL;
      break;
    case 7:
      unint64_t result = 0x646F436574617473;
      break;
    case 8:
    case 10:
    case 15:
    case 17:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
      unint64_t result = 0x6E49664F61657261;
      break;
    case 12:
      unint64_t result = 0xD000000000000011;
      break;
    case 13:
      unint64_t result = 0xD000000000000013;
      break;
    case 14:
      unint64_t result = 0xD000000000000013;
      break;
    case 16:
      unint64_t result = 0xD000000000000013;
      break;
    case 18:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D42E0280(uint64_t a1, uint64_t a2)
{
  return sub_1D42B257C(a1, a2, &qword_1EA6CA360, 0x1E4F97BF0, &qword_1EA6CA368);
}

uint64_t destroy for FMIPAudioChannel()
{
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for FMDiskIO()
{
  return sub_1D429BD44();
}

uint64_t sub_1D42E02D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

ValueMetadata *type metadata accessor for FMIPSeparationMonitoringState.Reason()
{
  return &type metadata for FMIPSeparationMonitoringState.Reason;
}

uint64_t initializeBufferWithCopyOfBuffer for FMIPLocation(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  unsigned int v3 = *(void **)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  id v5 = v3;
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FMIPLocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPPerson()
{
  return &type metadata for FMIPPerson;
}

uint64_t sub_1D42E0400(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 6) {
    return v1 - 5;
  }
  else {
    return 0;
  }
}

uint64_t type metadata accessor for FMIPUnknownItem()
{
  uint64_t result = qword_1EA6CA910;
  if (!qword_1EA6CA910) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPBeaconTypeRefreshFilter()
{
  return &type metadata for FMIPBeaconTypeRefreshFilter;
}

ValueMetadata *type metadata accessor for FMIPBeaconRefreshingContext()
{
  return &type metadata for FMIPBeaconRefreshingContext;
}

unsigned char *storeEnumTagSinglePayload for FMIPDeviceLostModeMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPItemImageCacheRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for FMIPBeaconRefreshFilter()
{
  return &type metadata for FMIPBeaconRefreshFilter;
}

uint64_t getEnumTagSinglePayload for FMIPPartType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPAudioChannel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unint64_t sub_1D42E0704@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FMIPConfigValue.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t FMIPConfigValue.rawValue.getter()
{
  unint64_t result = 0xD000000000000019;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x626154736D657469;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D42E07C8()
{
  return (*(uint64_t (**)(void))(qword_1EBD83008 + **v0 + 184))() & 1;
}

uint64_t sub_1D42E082C()
{
  return 0;
}

ValueMetadata *type metadata accessor for FMIPLocation()
{
  return &type metadata for FMIPLocation;
}

ValueMetadata *type metadata accessor for FMIPAddress()
{
  return &type metadata for FMIPAddress;
}

uint64_t sub_1D42E0864()
{
  return sub_1D42E0878(*v0);
}

uint64_t sub_1D42E0878(char a1)
{
  if (a1) {
    return 0x697274656D6D7973;
  }
  else {
    return 0x4B65746176697270;
  }
}

ValueMetadata *type metadata accessor for OfflineFindingDeviceStateType()
{
  return &type metadata for OfflineFindingDeviceStateType;
}

ValueMetadata *type metadata accessor for FMIPDeviceLostModeMetadata.CodingKeys()
{
  return &type metadata for FMIPDeviceLostModeMetadata.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for FMIPItemImageCacheRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPItemImageCacheRequest()
{
  return &type metadata for FMIPItemImageCacheRequest;
}

void sub_1D42E093C()
{
  sub_1D42E0AB4(319, (unint64_t *)&qword_1EBD7EA20, (void (*)(uint64_t))type metadata accessor for FMIPDevice);
  if (v0 <= 0x3F)
  {
    sub_1D42E0AB4(319, (unint64_t *)&qword_1EBD7E920, MEMORY[0x1E4F27928]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1D42E0AB4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1D446A168();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for FMReverseGeocodingCache.FMReverseGeocodingCacheContext()
{
  return sub_1D429BD44();
}

ValueMetadata *type metadata accessor for FMIPHistoricalLocation()
{
  return &type metadata for FMIPHistoricalLocation;
}

ValueMetadata *type metadata accessor for FMIPPlaySoundMetadata.CodingKeys()
{
  return &type metadata for FMIPPlaySoundMetadata.CodingKeys;
}

unint64_t sub_1D42E0B40()
{
  sub_1D42D5DA0(&qword_1EA6CB0F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D446F9F0;
  *(unsigned char *)(inited + 32) = 1;
  uint64_t v1 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 64) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 40) = 0xD000000000000026;
  *(void *)(inited + 48) = 0x80000001D4483260;
  *(unsigned char *)(inited + 72) = 3;
  *(void *)(inited + 104) = v1;
  *(void *)(inited + 80) = 0xD000000000000025;
  *(void *)(inited + 88) = 0x80000001D4483290;
  *(unsigned char *)(inited + 112) = 2;
  *(void *)(inited + 144) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 120) = 0;
  *(unsigned char *)(inited + 152) = 0;
  *(void *)(inited + 184) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 160) = 200;
  unint64_t result = sub_1D42A3628(inited);
  qword_1EA6E49C8 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPBaseResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_1D42E0CD8()
{
  uint64_t result = 0x7472656C61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F43726576726573;
      break;
    case 2:
      uint64_t result = 0x6F666E4972657375;
      break;
    case 3:
      uint64_t result = 0x6F43737574617473;
      break;
    case 4:
      uint64_t result = 0x746E65746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMIPAudioChannel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 19) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 19) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPAudioChannel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 19)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for FMIPAudioChannel()
{
  return &type metadata for FMIPAudioChannel;
}

ValueMetadata *type metadata accessor for FMIPAudioChannel.CodingKeys()
{
  return &type metadata for FMIPAudioChannel.CodingKeys;
}

ValueMetadata *type metadata accessor for FMIPDataManager.SeparationMonitoringCache()
{
  return &type metadata for FMIPDataManager.SeparationMonitoringCache;
}

ValueMetadata *type metadata accessor for FMIPConfigValue()
{
  return &type metadata for FMIPConfigValue;
}

uint64_t sub_1D42E0E4C()
{
  return 1;
}

ValueMetadata *type metadata accessor for FMIPBeaconType.VirtualMeDeviceCodingKeys()
{
  return &type metadata for FMIPBeaconType.VirtualMeDeviceCodingKeys;
}

ValueMetadata *type metadata accessor for FMIPBeaconType.SelfBeaconingCodingKeys()
{
  return &type metadata for FMIPBeaconType.SelfBeaconingCodingKeys;
}

ValueMetadata *type metadata accessor for FMIPBeaconType.LocalFindableCodingKeys()
{
  return &type metadata for FMIPBeaconType.LocalFindableCodingKeys;
}

ValueMetadata *type metadata accessor for FMIPBeaconType.AccessoryCodingKeys()
{
  return &type metadata for FMIPBeaconType.AccessoryCodingKeys;
}

ValueMetadata *type metadata accessor for FMIPBeaconType.DurianCodingKeys()
{
  return &type metadata for FMIPBeaconType.DurianCodingKeys;
}

ValueMetadata *type metadata accessor for FMIPBeaconType.NoneCodingKeys()
{
  return &type metadata for FMIPBeaconType.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for FMIPBeaconType.HeleCodingKeys()
{
  return &type metadata for FMIPBeaconType.HeleCodingKeys;
}

ValueMetadata *type metadata accessor for FMIPBeaconType.CodingKeys()
{
  return &type metadata for FMIPBeaconType.CodingKeys;
}

uint64_t type metadata accessor for FMImageCache()
{
  return swift_getGenericMetadata();
}

uint64_t dispatch thunk of FMImageCache.preload(requests:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

ValueMetadata *type metadata accessor for FMIPLocation.CodingKeys()
{
  return &type metadata for FMIPLocation.CodingKeys;
}

ValueMetadata *type metadata accessor for FMIPFeatures.CodingKeys()
{
  return &type metadata for FMIPFeatures.CodingKeys;
}

uint64_t _s8FMIPCore11FMIPAddressV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  unsigned int v4 = (void *)a1[2];
  uint64_t v115 = a1[3];
  uint64_t v111 = a1[5];
  uint64_t v117 = a1[6];
  uint64_t v118 = a1[4];
  uint64_t v107 = a1[7];
  uint64_t v113 = a1[8];
  uint64_t v103 = a1[9];
  uint64_t v109 = a1[10];
  uint64_t v99 = a1[11];
  uint64_t v105 = a1[12];
  uint64_t v95 = a1[13];
  uint64_t v101 = a1[14];
  uint64_t v91 = a1[15];
  uint64_t v96 = a1[16];
  uint64_t v87 = a1[17];
  uint64_t v93 = a1[18];
  uint64_t v85 = a1[19];
  uint64_t v89 = a1[20];
  uint64_t v83 = (void *)a1[21];
  uint64_t v78 = a1[22];
  uint64_t v5 = a1[24];
  uint64_t v81 = a1[23];
  uint64_t v6 = a1[25];
  uint64_t v7 = a1[28];
  uint64_t v8 = a1[29];
  uint64_t v9 = a2[1];
  uint64_t v10 = (void *)a2[2];
  uint64_t v11 = a2[4];
  uint64_t v114 = a2[3];
  uint64_t v110 = a2[5];
  uint64_t v116 = a2[6];
  uint64_t v106 = a2[7];
  uint64_t v112 = a2[8];
  uint64_t v102 = a2[9];
  uint64_t v108 = a2[10];
  uint64_t v98 = a2[11];
  uint64_t v104 = a2[12];
  uint64_t v94 = a2[13];
  uint64_t v100 = a2[14];
  uint64_t v90 = a2[15];
  uint64_t v97 = a2[16];
  uint64_t v86 = a2[17];
  uint64_t v92 = a2[18];
  uint64_t v84 = a2[19];
  uint64_t v88 = a2[20];
  uint64_t v82 = (void *)a2[21];
  uint64_t v77 = a2[22];
  uint64_t v80 = a2[23];
  uint64_t v76 = a2[24];
  uint64_t v79 = a2[25];
  uint64_t v12 = a2[27];
  uint64_t v13 = a2[30];
  uint64_t v14 = a2[31];
  if (v3)
  {
    if (!v9) {
      return 0;
    }
    uint64_t v72 = a2[26];
    uint64_t v73 = a1[26];
    uint64_t v70 = a2[28];
    uint64_t v71 = a1[31];
    uint64_t v74 = a2[29];
    uint64_t v75 = a1[27];
    uint64_t v64 = a2[32];
    uint64_t v65 = a1[32];
    uint64_t v67 = a1[30];
    uint64_t v68 = a2[33];
    uint64_t v69 = a1[33];
    uint64_t v66 = a2[35];
    uint64_t v61 = a2[34];
    uint64_t v62 = a1[34];
    uint64_t v63 = a1[35];
    if (*a1 != *a2 || v3 != v9)
    {
      uint64_t v15 = a2[30];
      uint64_t v16 = a2[31];
      uint64_t v17 = a1[29];
      uint64_t v18 = a1[28];
      char v19 = sub_1D446A758();
      uint64_t v7 = v18;
      uint64_t v8 = v17;
      uint64_t v14 = v16;
      uint64_t v13 = v15;
      char v20 = v19;
      uint64_t result = 0;
      if ((v20 & 1) == 0) {
        return result;
      }
    }
  }
  else
  {
    uint64_t v72 = a2[26];
    uint64_t v73 = a1[26];
    uint64_t v70 = a2[28];
    uint64_t v71 = a1[31];
    uint64_t v74 = a2[29];
    uint64_t v75 = a1[27];
    uint64_t v64 = a2[32];
    uint64_t v65 = a1[32];
    uint64_t v67 = a1[30];
    uint64_t v68 = a2[33];
    uint64_t v69 = a1[33];
    uint64_t v66 = a2[35];
    uint64_t v61 = a2[34];
    uint64_t v62 = a1[34];
    uint64_t v63 = a1[35];
    if (v9) {
      return 0;
    }
  }
  if (v4)
  {
    if (!v10) {
      return 0;
    }
    uint64_t v22 = v4;
    uint64_t v23 = v7;
    char v24 = sub_1D42E17D4(v22, v10);
    uint64_t v7 = v23;
    if ((v24 & 1) == 0) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  if (v118)
  {
    if (!v11) {
      return 0;
    }
    if (v115 != v114 || v118 != v11)
    {
      uint64_t v25 = v7;
      char v26 = sub_1D446A758();
      uint64_t v7 = v25;
      char v27 = v26;
      uint64_t result = 0;
      if ((v27 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v11)
  {
    return 0;
  }
  if (v117)
  {
    if (!v116) {
      return 0;
    }
    if (v111 != v110 || v117 != v116)
    {
      uint64_t v28 = v7;
      char v29 = sub_1D446A758();
      uint64_t v7 = v28;
      char v30 = v29;
      uint64_t result = 0;
      if ((v30 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v116)
  {
    return 0;
  }
  if (v113)
  {
    if (!v112) {
      return 0;
    }
    if (v107 != v106 || v113 != v112)
    {
      uint64_t v31 = v7;
      char v32 = sub_1D446A758();
      uint64_t v7 = v31;
      char v33 = v32;
      uint64_t result = 0;
      if ((v33 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v112)
  {
    return 0;
  }
  if (v109)
  {
    if (!v108) {
      return 0;
    }
    if (v103 != v102 || v109 != v108)
    {
      uint64_t v34 = v7;
      char v35 = sub_1D446A758();
      uint64_t v7 = v34;
      char v36 = v35;
      uint64_t result = 0;
      if ((v36 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v108)
  {
    return 0;
  }
  if (v105)
  {
    if (!v104) {
      return 0;
    }
    if (v99 != v98 || v105 != v104)
    {
      uint64_t v37 = v7;
      char v38 = sub_1D446A758();
      uint64_t v7 = v37;
      char v39 = v38;
      uint64_t result = 0;
      if ((v39 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v104)
  {
    return 0;
  }
  if (v101)
  {
    if (!v100) {
      return 0;
    }
    if (v95 != v94 || v101 != v100)
    {
      uint64_t v40 = v7;
      char v41 = sub_1D446A758();
      uint64_t v7 = v40;
      char v42 = v41;
      uint64_t result = 0;
      if ((v42 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v100)
  {
    return 0;
  }
  if (v96)
  {
    if (!v97) {
      return 0;
    }
    if (v91 != v90 || v96 != v97)
    {
      uint64_t v43 = v7;
      char v44 = sub_1D446A758();
      uint64_t v7 = v43;
      char v45 = v44;
      uint64_t result = 0;
      if ((v45 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v97)
  {
    return 0;
  }
  if (v93)
  {
    if (!v92) {
      return 0;
    }
    if (v87 != v86 || v93 != v92)
    {
      uint64_t v46 = v7;
      char v47 = sub_1D446A758();
      uint64_t v7 = v46;
      char v48 = v47;
      uint64_t result = 0;
      if ((v48 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v92)
  {
    return 0;
  }
  if (v89)
  {
    if (!v88) {
      return 0;
    }
    if (v85 != v84 || v89 != v88)
    {
      uint64_t v49 = v7;
      char v50 = sub_1D446A758();
      uint64_t v7 = v49;
      char v51 = v50;
      uint64_t result = 0;
      if ((v51 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v88)
  {
    return 0;
  }
  uint64_t v52 = v7;
  if ((sub_1D42E17D4(v83, v82) & 1) == 0) {
    return 0;
  }
  if (v81)
  {
    if (!v80) {
      return 0;
    }
    uint64_t v53 = v6;
    if (v78 != v77 || v81 != v80)
    {
      char v54 = sub_1D446A758();
      uint64_t result = 0;
      if ((v54 & 1) == 0) {
        return result;
      }
    }
  }
  else
  {
    uint64_t v53 = v6;
    if (v80) {
      return 0;
    }
  }
  if (v53)
  {
    if (!v79) {
      return 0;
    }
    if (v5 != v76 || v6 != v79)
    {
      char v55 = sub_1D446A758();
      uint64_t result = 0;
      if ((v55 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v79)
  {
    return 0;
  }
  if (v75)
  {
    if (!v12) {
      return 0;
    }
    uint64_t v56 = v8;
    if (v73 != v72 || v75 != v12)
    {
      char v57 = sub_1D446A758();
      uint64_t result = 0;
      if ((v57 & 1) == 0) {
        return result;
      }
    }
  }
  else
  {
    uint64_t v56 = v8;
    if (v12) {
      return 0;
    }
  }
  if (v56)
  {
    if (!v74) {
      return 0;
    }
    if (v52 != v70 || v8 != v74)
    {
      char v58 = sub_1D446A758();
      uint64_t result = 0;
      if ((v58 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v74)
  {
    return 0;
  }
  if (v71)
  {
    if (!v14) {
      return 0;
    }
    if (v67 != v13 || v71 != v14)
    {
      char v59 = sub_1D446A758();
      uint64_t result = 0;
      if ((v59 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v14)
  {
    return 0;
  }
  if (v69)
  {
    if (v68)
    {
      if (v65 != v64 || v69 != v68)
      {
        char v60 = sub_1D446A758();
        uint64_t result = 0;
        if ((v60 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_121;
    }
    return 0;
  }
  if (v68) {
    return 0;
  }
LABEL_121:
  uint64_t result = (v63 | v66) == 0;
  if (v63 && v66)
  {
    if (v62 == v61 && v63 == v66)
    {
      return 1;
    }
    else
    {
      return sub_1D446A758();
    }
  }
  return result;
}

uint64_t sub_1D42E17D4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_1D446A758(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (unint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1D446A758() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPPerson.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPDevice.CodingKeys()
{
  return &type metadata for FMIPDevice.CodingKeys;
}

uint64_t sub_1D42E1A94(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 initializeWithTake for FMIPPerson(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

void sub_1D42E1B08(uint64_t a1, void *a2)
{
}

void sub_1D42E1B10(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

uint64_t sub_1D42E1B1C(unint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1D446A498();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (!v7) {
    return v8;
  }
  uint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1D4337350(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = v22;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v10 = 0;
      do
      {
        uint64_t v11 = MEMORY[0x1D9446710](v10, a1);
        uint64_t v22 = v8;
        unint64_t v13 = *(void *)(v8 + 16);
        unint64_t v12 = *(void *)(v8 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1D4337350(v12 > 1, v13 + 1, 1);
          uint64_t v8 = v22;
        }
        ++v10;
        uint64_t v20 = sub_1D4275AD0(0, a2);
        uint64_t v21 = a4;
        *(void *)&long long v19 = v11;
        *(void *)(v8 + 16) = v13 + 1;
        sub_1D42E4A0C(&v19, v8 + 40 * v13 + 32);
      }
      while (v7 != v10);
    }
    else
    {
      uint64_t v14 = (void **)(a1 + 32);
      do
      {
        uint64_t v15 = *v14;
        uint64_t v22 = v8;
        unint64_t v17 = *(void *)(v8 + 16);
        unint64_t v16 = *(void *)(v8 + 24);
        id v18 = v15;
        if (v17 >= v16 >> 1)
        {
          sub_1D4337350(v16 > 1, v17 + 1, 1);
          uint64_t v8 = v22;
        }
        uint64_t v20 = sub_1D4275AD0(0, a2);
        uint64_t v21 = a4;
        *(void *)&long long v19 = v18;
        *(void *)(v8 + 16) = v17 + 1;
        sub_1D42E4A0C(&v19, v8 + 40 * v17 + 32);
        ++v14;
        --v7;
      }
      while (v7);
    }
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D42E1CF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4279848(a1, a2, a3, (void *)*v3, &qword_1EBD7D9F0, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  *int v3 = result;
  return result;
}

uint64_t sub_1D42E1D30(unint64_t a1, uint64_t *a2)
{
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v5 = 0;
      unsigned int v6 = (char *)a2 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)MEMORY[0x1D9446710](v5, a1);
LABEL_9:
        uint64_t v8 = v7;
        unint64_t v9 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_15;
        }
        uint64_t v10 = v4;
        long long v11 = *((_OWORD *)v6 + 1);
        long long v18 = *(_OWORD *)v6;
        long long v19 = v11;
        char v20 = v6[32];
        uint64_t v21 = *((void *)&v11 + 1);
        uint64_t v22 = v11;
        sub_1D42AB8DC((uint64_t)&v22);
        sub_1D42AB8DC((uint64_t)&v21);
        unint64_t v12 = sub_1D42ABDD0();
        sub_1D42ABDA4((uint64_t)&v22);
        sub_1D42ABDA4((uint64_t)&v21);
        id v13 = objc_msgSend(v12, sel_searchTypes);

        type metadata accessor for SPBeaconType(0);
        a2 = (uint64_t *)sub_1D4469D78();

        id v14 = objc_msgSend(v8, sel_type);
        char v15 = sub_1D443BECC((uint64_t)v14, (uint64_t)a2);
        swift_bridgeObjectRelease();

        if (v15)
        {
          sub_1D446A418();
          sub_1D446A438();
          sub_1D446A448();
          a2 = &v17;
          sub_1D446A428();
        }
        else
        {
        }
        uint64_t v4 = v10;
        ++v5;
        if (v9 == v10) {
          return v17;
        }
      }
      if (v5 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v4 = sub_1D446A498();
      if (!v4) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v7 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

void *sub_1D42E1F48(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D43B0408(a1, a2, a3, a4, &qword_1EA6CA940, &qword_1EA6CA948);
}

uint64_t sub_1D42E1F5C(uint64_t a1, uint64_t a2)
{
  int v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1D42E1FB0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  **(void **)(*(void *)(v2 + 64) + 40) = a2;
  id v3 = a2;

  return MEMORY[0x1F41881F8](v2);
}

unint64_t sub_1D42E2004()
{
  unint64_t result = qword_1EA6CA238;
  if (!qword_1EA6CA238)
  {
    sub_1D4275AD0(255, &qword_1EA6CA230);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA238);
  }
  return result;
}

uint64_t sub_1D42E206C(uint64_t a1)
{
  objc_msgSend(v1, sel_setDelegate_, a1);

  return swift_unknownObjectRelease();
}

uint64_t sub_1D42E20B4(uint64_t a1, uint64_t a2)
{
  return sub_1D4273F28(a1, a2, &qword_1EA6CA230);
}

uint64_t sub_1D42E20C8(uint64_t a1, uint64_t a2)
{
  return sub_1D4273F28(a1, a2, &qword_1EA6C9340);
}

uint64_t sub_1D42E20DC(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1D42D5DA0(&qword_1EA6C9360);
    uint64_t v5 = swift_allocError();
    *unsigned int v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    **(unsigned char **)(*(void *)(v3 + 64) + 40) = a2;
    return MEMORY[0x1F4188200](v3);
  }
}

uint64_t sub_1D42E2190(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D42DB55C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42E21F0()
{
  return sub_1D42D66D8(&qword_1EBD7D8F8, &qword_1EBD7D8F0, (void (*)(void))sub_1D42E53AC);
}

unint64_t sub_1D42E222C()
{
  unint64_t result = qword_1EBD7D8D0;
  if (!qword_1EBD7D8D0)
  {
    sub_1D42DB55C(&qword_1EBD7D8C0);
    sub_1D4274B90(&qword_1EBD7CBB8, 255, (void (*)(uint64_t))type metadata accessor for FMIPDevice);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7D8D0);
  }
  return result;
}

unint64_t sub_1D42E22D4()
{
  unint64_t result = qword_1EBD7D8C8;
  if (!qword_1EBD7D8C8)
  {
    sub_1D42DB55C(&qword_1EBD7D8C0);
    sub_1D42AAE70(&qword_1EBD7CBB0, (void (*)(uint64_t))type metadata accessor for FMIPDevice);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7D8C8);
  }
  return result;
}

unint64_t sub_1D42E2378()
{
  unint64_t result = qword_1EBD7FD80;
  if (!qword_1EBD7FD80)
  {
    sub_1D42DB55C(&qword_1EBD7FD78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7FD80);
  }
  return result;
}

uint64_t sub_1D42E23D4(uint64_t a1, uint64_t a2)
{
  return sub_1D42C08D8(a1, a2, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem, (uint64_t (*)(char *, char *))_s8FMIPCore15FMIPUnknownItemV2eeoiySbAC_ACtFZ_0, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
}

uint64_t sub_1D42E2428(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v25 = 1;
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v2 - 1;
      do
      {
        uint64_t v7 = *(void *)(a1 + v5 + 48);
        uint64_t v8 = *(void *)(a1 + v5 + 56);
        char v9 = *(unsigned char *)(a1 + v5 + 64);
        char v10 = *(unsigned char *)(a1 + v5 + 65);
        char v11 = *(unsigned char *)(a1 + v5 + 66);
        char v12 = *(unsigned char *)(a1 + v5 + 67);
        long long v13 = *(_OWORD *)(a1 + v5 + 72);
        uint64_t v14 = *(void *)(a1 + v5 + 88);
        uint64_t v15 = *(void *)(a1 + v5 + 96);
        long long v40 = *(_OWORD *)(a1 + v5 + 32);
        uint64_t v41 = v7;
        uint64_t v42 = v8;
        char v43 = v9;
        char v44 = v10;
        char v45 = v11;
        char v46 = v12;
        long long v47 = v13;
        uint64_t v48 = v14;
        uint64_t v49 = v15;
        long long v50 = *(_OWORD *)(a1 + v5 + 104);
        uint64_t v16 = *(void *)(a2 + v5 + 48);
        uint64_t v17 = *(void *)(a2 + v5 + 56);
        char v18 = *(unsigned char *)(a2 + v5 + 64);
        char v19 = *(unsigned char *)(a2 + v5 + 65);
        char v20 = *(unsigned char *)(a2 + v5 + 66);
        char v21 = *(unsigned char *)(a2 + v5 + 67);
        long long v22 = *(_OWORD *)(a2 + v5 + 72);
        uint64_t v23 = *(void *)(a2 + v5 + 88);
        uint64_t v24 = *(void *)(a2 + v5 + 96);
        long long v29 = *(_OWORD *)(a2 + v5 + 32);
        uint64_t v30 = v16;
        uint64_t v31 = v17;
        char v32 = v18;
        char v33 = v19;
        char v34 = v20;
        char v35 = v21;
        long long v36 = v22;
        uint64_t v37 = v23;
        uint64_t v38 = v24;
        long long v39 = *(_OWORD *)(a2 + v5 + 104);
        char v25 = _s8FMIPCore10FMIPPersonV2eeoiySbAC_ACtFZ_0((uint64_t)&v40, (uint64_t)&v29);
        BOOL v27 = v6-- != 0;
        if ((v25 & 1) == 0) {
          break;
        }
        v5 += 88;
      }
      while (v27);
    }
  }
  else
  {
    char v25 = 0;
  }
  return v25 & 1;
}

unint64_t sub_1D42E2558()
{
  unint64_t result = qword_1EBD7D8B0;
  if (!qword_1EBD7D8B0)
  {
    sub_1D42DB55C(&qword_1EBD7D8A8);
    sub_1D42E7E24();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7D8B0);
  }
  return result;
}

uint64_t sub_1D42E25D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469688();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v64 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  char v10 = (char *)&v49 - v9;
  MEMORY[0x1F4188790](v8);
  char v12 = (char *)&v49 - v11;
  uint64_t v13 = sub_1D42D5DA0(&qword_1EA6CAFE0);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v14);
  char v19 = (char *)&v49 - v18;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v53 = a1 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  char v59 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  int64_t v60 = 0;
  uint64_t v65 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v66 = v5 + 16;
  int64_t v54 = (unint64_t)(v21 + 63) >> 6;
  char v55 = (char *)&v49 - v18;
  int64_t v50 = v54 - 1;
  uint64_t v51 = v5;
  uint64_t v52 = a2;
  char v57 = v12;
  uint64_t v58 = a1;
  uint64_t v56 = v16;
  if (!v23) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v61 = (v23 - 1) & v23;
  unint64_t v24 = __clz(__rbit64(v23)) | (v60 << 6);
  while (2)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v16, *(void *)(a1 + 48) + *(void *)(v5 + 72) * v24, v4);
    uint64_t v25 = *(void *)(a1 + 56);
    uint64_t v26 = sub_1D42D5DA0(&qword_1EA6CAFE8);
    *(void *)&v16[*(int *)(v26 + 48)] = *(void *)(v25 + 8 * v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v16, 0, 1, v26);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1D4276C98((uint64_t)v16, (uint64_t)v19, &qword_1EA6CAFE0);
      uint64_t v31 = sub_1D42D5DA0(&qword_1EA6CAFE8);
      uint64_t v32 = 1;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v19, 1, v31) == 1) {
        return v32;
      }
      uint64_t v33 = *(int *)(v31 + 48);
      (*v59)(v12, v19, v4);
      uint64_t v34 = *(void *)&v19[v33];
      unint64_t v35 = sub_1D43AEE98((uint64_t)v12);
      char v37 = v36;
      uint64_t v38 = *v65;
      (*v65)(v12, v4);
      if ((v37 & 1) == 0
        || (uint64_t v39 = *(void *)(*(void *)(a2 + 56) + 8 * v35), v40 = *(void *)(v39 + 16), v40 != *(void *)(v34 + 16)))
      {
LABEL_44:
        swift_bridgeObjectRelease();
        return 0;
      }
      if (!v40 || v39 == v34)
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v16 = v56;
        char v12 = v57;
        char v19 = v55;
        a1 = v58;
        unint64_t v23 = v61;
        if (v61) {
          goto LABEL_6;
        }
      }
      else
      {
        unint64_t v41 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        uint64_t v62 = *(void *)(v5 + 72);
        uint64_t v63 = v39;
        uint64_t v42 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v5 + 16);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v40; ++i)
        {
          uint64_t result = v42(v10, v63 + v41, v4);
          if (i >= *(void *)(v34 + 16))
          {
            __break(1u);
            goto LABEL_48;
          }
          uint64_t v44 = v4;
          char v45 = v10;
          char v46 = v64;
          v42(v64, v34 + v41, v44);
          sub_1D42AC45C(&qword_1EA6CA0E8, MEMORY[0x1E4F27990]);
          char v47 = sub_1D4469AF8();
          uint64_t v48 = v46;
          char v10 = v45;
          uint64_t v4 = v44;
          v38(v48, v44);
          v38(v10, v44);
          if ((v47 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_44;
          }
          v41 += v62;
        }
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v5 = v51;
        a2 = v52;
        char v12 = v57;
        a1 = v58;
        char v19 = v55;
        uint64_t v16 = v56;
        unint64_t v23 = v61;
        if (v61) {
          goto LABEL_6;
        }
      }
LABEL_8:
      int64_t v27 = v60 + 1;
      if (__OFADD__(v60, 1))
      {
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      if (v27 < v54)
      {
        unint64_t v28 = *(void *)(v53 + 8 * v27);
        if (v28) {
          goto LABEL_11;
        }
        int64_t v29 = v60 + 2;
        ++v60;
        if (v27 + 1 < v54)
        {
          unint64_t v28 = *(void *)(v53 + 8 * v29);
          if (v28) {
            goto LABEL_14;
          }
          int64_t v60 = v27 + 1;
          if (v27 + 2 < v54)
          {
            unint64_t v28 = *(void *)(v53 + 8 * (v27 + 2));
            if (v28)
            {
              v27 += 2;
              goto LABEL_11;
            }
            int64_t v60 = v27 + 2;
            if (v27 + 3 < v54)
            {
              unint64_t v28 = *(void *)(v53 + 8 * (v27 + 3));
              if (v28)
              {
                v27 += 3;
                goto LABEL_11;
              }
              int64_t v29 = v27 + 4;
              int64_t v60 = v27 + 3;
              if (v27 + 4 < v54) {
                break;
              }
            }
          }
        }
      }
LABEL_28:
      uint64_t v30 = sub_1D42D5DA0(&qword_1EA6CAFE8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v16, 1, 1, v30);
      uint64_t v61 = 0;
    }
    unint64_t v28 = *(void *)(v53 + 8 * v29);
    if (v28)
    {
LABEL_14:
      int64_t v27 = v29;
LABEL_11:
      int64_t v60 = v27;
      uint64_t v61 = (v28 - 1) & v28;
      unint64_t v24 = __clz(__rbit64(v28)) + (v27 << 6);
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v54)
    {
      int64_t v60 = v50;
      goto LABEL_28;
    }
    unint64_t v28 = *(void *)(v53 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_11;
    }
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1D42E2C30(uint64_t a1, uint64_t a2)
{
  return sub_1D4278E88(a1, a2, &qword_1EA6CAFF0, &qword_1EA6CAFF8);
}

uint64_t sub_1D42E2C44(uint64_t a1, uint64_t a2)
{
  return sub_1D4278E88(a1, a2, &qword_1EA6CAFC8, &qword_1EA6CAFD0);
}

unint64_t sub_1D42E2C58(uint64_t a1)
{
  return sub_1D427937C(a1, &qword_1EBD7E558, &qword_1EA6CA970);
}

uint64_t sub_1D42E2C6C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void *sub_1D42E2C7C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for FMIPAlert();
  uint64_t v5 = swift_allocObject();
  uint64_t result = FMIPAlert.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void sub_1D42E2CD8()
{
  sub_1D4275CC4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for FMIPAlert()
{
  uint64_t result = qword_1EBD7D7B0;
  if (!qword_1EBD7D7B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPAlert.CodingKeys()
{
  return &type metadata for FMIPAlert.CodingKeys;
}

unint64_t sub_1D42E2DE8()
{
  unint64_t result = qword_1EBD7D7A0;
  if (!qword_1EBD7D7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7D7A0);
  }
  return result;
}

unint64_t sub_1D42E2E3C()
{
  unint64_t result = qword_1EBD7D798;
  if (!qword_1EBD7D798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7D798);
  }
  return result;
}

unint64_t sub_1D42E2E90()
{
  unint64_t result = qword_1EBD7D790;
  if (!qword_1EBD7D790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7D790);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMIPItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D43E110C);
}

uint64_t getEnumTagSinglePayload for FMIPItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D43E0FDC);
}

void sub_1D42E2F0C()
{
  sub_1D42E4DE0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for FMIPProductType();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1D42E3068@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMDiskIO.KeyPair.init(from:)(a1, a2);
}

uint64_t sub_1D42E308C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D42E30A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D42E30C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t type metadata accessor for FMDiskIO.KeyPair.CodingKeys()
{
  return sub_1D429BD44();
}

void sub_1D42E30E4(void *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, void (*a6)(void))
{
  uint64_t v11 = *a2;
  char v12 = (void *)MEMORY[0x1D9446F50]();
  sub_1D4299E6C(a1, v11, a3, a4, a5, a6);
}

void sub_1D42E3174()
{
  sub_1D43996C0(*(void **)(v0 + 16), (uint64_t *)(v0 + 24));
}

void sub_1D42E3180()
{
  sub_1D42E30E4(*(void **)(v0 + 16), (uint64_t *)(v0 + 24), &qword_1EA6CA560, (uint64_t *)&unk_1EA6CA568, &qword_1EBD7D8C0, (void (*)(void))sub_1D42E22D4);
}

void sub_1D42E31CC()
{
  sub_1D42A1E20(*(void **)(v0 + 16), *(void **)(v0 + 24), &qword_1EA6CA510, &qword_1EA6CA518, (uint64_t *)&unk_1EA6CA520, (void (*)(void))sub_1D43478B0);
}

void sub_1D42E3214()
{
  sub_1D4297700(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1D42E321C()
{
  sub_1D42A1E20(*(void **)(v0 + 16), *(void **)(v0 + 24), &qword_1EA6CA560, (uint64_t *)&unk_1EA6CA568, &qword_1EBD7D8C0, (void (*)(void))sub_1D42E222C);
}

void sub_1D42E3264()
{
  sub_1D429D884(*(void **)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1D42E326C(uint64_t a1)
{
  return sub_1D427532C(a1, qword_1EA6E46D0);
}

uint64_t sub_1D42E3290(uint64_t a1)
{
  return sub_1D427532C(a1, qword_1EBD831A0);
}

uint64_t sub_1D42E32BC(uint64_t a1)
{
  return sub_1D427532C(a1, qword_1EA6E4710);
}

uint64_t sub_1D42E32E4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FMIPBeaconRefreshingControllerClientConfiguration.init(from:)(a1, a2);
}

unint64_t sub_1D42E32FC()
{
  unint64_t result = qword_1EA6CBA80;
  if (!qword_1EA6CBA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CBA80);
  }
  return result;
}

unint64_t sub_1D42E3350()
{
  return 0xD000000000000015;
}

ValueMetadata *type metadata accessor for FMIPBeaconRefreshingControllerClientConfiguration.CodingKeys()
{
  return &type metadata for FMIPBeaconRefreshingControllerClientConfiguration.CodingKeys;
}

unint64_t sub_1D42E3384()
{
  unint64_t result = qword_1EA6CBA08;
  if (!qword_1EA6CBA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CBA08);
  }
  return result;
}

unint64_t sub_1D42E33D8()
{
  unint64_t result = qword_1EA6CBA10;
  if (!qword_1EA6CBA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CBA10);
  }
  return result;
}

unint64_t sub_1D42E342C()
{
  unint64_t result = qword_1EA6CB7D0;
  if (!qword_1EA6CB7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB7D0);
  }
  return result;
}

uint64_t type metadata accessor for FMIPSafeLocationRefreshingController()
{
  return self;
}

void sub_1D42E34A4()
{
  sub_1D428AF70(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1D42E34B0(uint64_t a1)
{
  return sub_1D42763C4(a1);
}

ValueMetadata *type metadata accessor for FMIPBeaconSeparationMonitoringState()
{
  return &type metadata for FMIPBeaconSeparationMonitoringState;
}

uint64_t type metadata accessor for FMIPDeviceConnectionStateProvider()
{
  return self;
}

void sub_1D42E34EC(void *a1, uint64_t a2)
{
  sub_1D4278080(a1, a2, v2);
}

void sub_1D42E34F4(uint64_t a1)
{
}

uint64_t type metadata accessor for FMIPServerInteractionController(uint64_t a1)
{
  return sub_1D42A1DE8(a1, qword_1EBD7FC88);
}

uint64_t sub_1D42E3538(uint64_t a1, uint64_t a2)
{
  *(void *)(*v2 + qword_1EBD7FC80 + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t sub_1D42E3588()
{
  return sub_1D42A2CC0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

id sub_1D42E3590(uint64_t a1, unint64_t a2, void *a3)
{
  return sub_1D427C9B0(a1, a2, a3, *(void *)(v3 + 24), *(uint64_t **)(v3 + 32), *(void (**)(void, void))(v3 + 40), *(void *)(v3 + 48), *(void **)(v3 + 56), *(void *)(v3 + 16));
}

ValueMetadata *type metadata accessor for FMIPNotificationAuthLaunchEvent()
{
  return &type metadata for FMIPNotificationAuthLaunchEvent;
}

uint64_t FMIPNotificationAuthLaunchEvent.init(findMyNotificationAuthStatus:utAlertAuthStatus:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void sub_1D42E35D8()
{
  if (!qword_1EA6C9D58)
  {
    type metadata accessor for FMIPUnknownItemProductMetadata();
    unint64_t v0 = sub_1D446A168();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA6C9D58);
    }
  }
}

void sub_1D42E3630()
{
  sub_1D4275CC4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for FMIPUnknownItemProductMetadata()
{
  uint64_t result = qword_1EA6CAF60;
  if (!qword_1EA6CAF60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FMIPBeaconRefreshingController(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EBD7F830);
}

uint64_t sub_1D42E374C()
{
  return sub_1D4276B7C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1D42E3758()
{
  return sub_1D4292B40(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_1D42E3764(uint64_t a1, unint64_t a2)
{
  sub_1D4282708(a1, a2, v2);
}

uint64_t sub_1D42E376C(unint64_t a1)
{
  return sub_1D428F370(a1, v1[2], v1[3], v1[4]);
}

void sub_1D42E3778()
{
  sub_1D428A0F4(v0[2], v0[3], v0[4]);
}

uint64_t sub_1D42E3784()
{
  return sub_1D428EBB4(v0[2], v0[3], v0[4]);
}

uint64_t sub_1D42E3790()
{
  return sub_1D42894E0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D42E3798()
{
  return sub_1D428EFA0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D42E37A0()
{
  sub_1D42D5DA0(&qword_1EA6CBA48);
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);

  return sub_1D4275538(v1, v2);
}

uint64_t sub_1D42E3808(uint64_t a1)
{
  return sub_1D4274D18(a1);
}

void sub_1D42E3810()
{
  sub_1D429C1CC(v0);
}

unint64_t sub_1D42E381C()
{
  unint64_t result = qword_1EA6CA390;
  if (!qword_1EA6CA390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA390);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPSeparationMonitoringState()
{
  return &type metadata for FMIPSeparationMonitoringState;
}

void sub_1D42E3880()
{
  if (!qword_1EBD7E750)
  {
    type metadata accessor for FMIPHawkeyeProductInformation();
    unint64_t v0 = sub_1D446A168();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBD7E750);
    }
  }
}

uint64_t type metadata accessor for FMIPHawkeyeProductInformation()
{
  uint64_t result = qword_1EBD7E740;
  if (!qword_1EBD7E740) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPHawkeyeProductInformation.AssetType()
{
  return &type metadata for FMIPHawkeyeProductInformation.AssetType;
}

uint64_t sub_1D42E3938@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for FMIPUserInfoResponseFragment();
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_1D428E1D0(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPUserInfoResponseFragment.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        break;
      case 2:
        *(_WORD *)uint64_t result = a2;
        break;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = 0;
        break;
      case 2:
        *(_WORD *)uint64_t result = 0;
        break;
      case 3:
LABEL_19:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)uint64_t result = 0;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPRangingParameters.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

uint64_t sub_1D42E3A7C()
{
  return 0x49737265626D656DLL;
}

ValueMetadata *type metadata accessor for FMIPUserInfoResponseFragment.CodingKeys()
{
  return &type metadata for FMIPUserInfoResponseFragment.CodingKeys;
}

unint64_t sub_1D42E3AB4()
{
  unint64_t result = qword_1EBD7D6D0;
  if (!qword_1EBD7D6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7D6D0);
  }
  return result;
}

unint64_t sub_1D42E3B08()
{
  unint64_t result = qword_1EBD7D6C8;
  if (!qword_1EBD7D6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7D6C8);
  }
  return result;
}

unint64_t sub_1D42E3B5C()
{
  unint64_t result = qword_1EBD7D6C0;
  if (!qword_1EBD7D6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7D6C0);
  }
  return result;
}

uint64_t sub_1D42E3BB0()
{
  uint64_t result = type metadata accessor for FMReverseGeocodingRequest();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for FMReverseGeocodingOperation()
{
  uint64_t result = qword_1EA6CAB80;
  if (!qword_1EA6CAB80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FMIPItemImageCacheOperation()
{
  return self;
}

unint64_t sub_1D42E3D28()
{
  unint64_t result = qword_1EA6C9870;
  if (!qword_1EA6C9870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9870);
  }
  return result;
}

unint64_t sub_1D42E3D7C()
{
  unint64_t result = qword_1EA6CBB50;
  if (!qword_1EA6CBB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CBB50);
  }
  return result;
}

unint64_t sub_1D42E3DD0()
{
  unint64_t result = qword_1EA6CBB60;
  if (!qword_1EA6CBB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CBB60);
  }
  return result;
}

unint64_t sub_1D42E3E24()
{
  unint64_t result = qword_1EA6CBB58;
  if (!qword_1EA6CBB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CBB58);
  }
  return result;
}

unint64_t sub_1D42E3E78(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1D42E3D7C();
  unint64_t result = sub_1D42E3E24();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for FMIPDeviceActionsController()
{
  return self;
}

uint64_t type metadata accessor for FMIPDeviceActionsController.CommandFutures()
{
  return self;
}

uint64_t type metadata accessor for FMIPBeaconSharingController()
{
  return self;
}

uint64_t sub_1D42E3F14(uint64_t a1)
{
  return sub_1D427AB04(a1, v1);
}

uint64_t sub_1D42E3F1C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1D42E4010()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 272) = v2;
  uint64_t v3 = *(void *)(v1 + 248);
  if (v2) {
    uint64_t v4 = sub_1D42EA7C4;
  }
  else {
    uint64_t v4 = sub_1D427E194;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1D42E4130()
{
  *(void *)(v1 + 248) = v0;
  return MEMORY[0x1F4188298](sub_1D4284C94, v0, 0);
}

uint64_t sub_1D42E4150(uint64_t a1)
{
  uint64_t v3 = swift_bridgeObjectRetain();
  char v4 = sub_1D42E20C8(v3, a1);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    *(void *)(v1 + 128) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (qword_1EBD7E7C0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1D4469928();
    sub_1D42D7FAC(v6, (uint64_t)qword_1EBD831A0);
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_1D44698F8();
    os_log_type_t v8 = sub_1D446A038();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v14 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      sub_1D4275AD0(0, &qword_1EA6C9340);
      sub_1D42B2630((unint64_t *)&unk_1EA6C9348, &qword_1EA6C9340);
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1D4469EE8();
      unint64_t v13 = v12;
      swift_bridgeObjectRelease();
      sub_1D42CB9EC(v11, v13, &v14);
      sub_1D446A188();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v7, v8, "FMIPBeaconSharingController: Did receive shares update: %s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v10, -1, -1);
      MEMORY[0x1D9447730](v9, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return sub_1D42EB060();
  }
  return result;
}

uint64_t sub_1D42E43A8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128);
  return MEMORY[0x1F4188298](sub_1D42771B8, v1, 0);
}

uint64_t type metadata accessor for FMSystemDirectoryUtilities()
{
  return self;
}

void sub_1D42E44C0(void *a1)
{
}

unint64_t sub_1D42E44E0()
{
  unint64_t result = qword_1EBD7D4C0;
  if (!qword_1EBD7D4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7D4C0);
  }
  return result;
}

unint64_t sub_1D42E4534()
{
  unint64_t result = qword_1EBD7D4B8;
  if (!qword_1EBD7D4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7D4B8);
  }
  return result;
}

uint64_t sub_1D42E4588(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1D42E45E8()
{
  sub_1D4276B24();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1D42E4698()
{
  if (!qword_1EA6CA920)
  {
    type metadata accessor for FMIPUnknownItemUTMetadata();
    unint64_t v0 = sub_1D446A168();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA6CA920);
    }
  }
}

void sub_1D42E46F0()
{
  sub_1D42E35D8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for FMIPUnknownItemUTMetadata()
{
  uint64_t result = qword_1EA6C9D48;
  if (!qword_1EA6C9D48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D42E47D4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FMIPReverseGeocodingCache()
{
  uint64_t result = qword_1EA6CB7B8;
  if (!qword_1EA6CB7B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1D42E4868()
{
  unint64_t result = qword_1EA6CB700;
  if (!qword_1EA6CB700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB700);
  }
  return result;
}

unint64_t sub_1D42E48BC()
{
  unint64_t result = qword_1EA6C9E50;
  if (!qword_1EA6C9E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9E50);
  }
  return result;
}

unint64_t sub_1D42E4910()
{
  unint64_t result = qword_1EA6C9E60;
  if (!qword_1EA6C9E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9E60);
  }
  return result;
}

unint64_t sub_1D42E4964()
{
  unint64_t result = qword_1EA6C9E58;
  if (!qword_1EA6C9E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9E58);
  }
  return result;
}

unint64_t sub_1D42E49B8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1D42E48BC();
  unint64_t result = sub_1D42E4964();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for FMIPItemActionsController()
{
  return self;
}

uint64_t sub_1D42E4A0C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1D42E4A24(uint64_t a1, uint64_t a2)
{
  return sub_1D428B928(a2);
}

void sub_1D42E4A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_1D42E4A40()
{
  sub_1D427C174(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_1D42E4A4C()
{
}

uint64_t sub_1D42E4A90()
{
  return sub_1D42E4A98(v0);
}

uint64_t sub_1D42E4A98(uint64_t a1)
{
  *(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_isRefreshing) = 1;
  sub_1D4283F78();
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_interactionController + 24);
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_interactionController + 32);
  sub_1D42C26F4((void *)(a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_interactionController), v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 64))(v2, v3);
  sub_1D42E5410();
  return sub_1D4294C8C(0.0);
}

uint64_t sub_1D42E4B2C(uint64_t a1, void *a2)
{
  return sub_1D42972E4(a1, a2);
}

void sub_1D42E4B34()
{
  sub_1D42E80CC();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t type metadata accessor for FMIPManagerConfiguration()
{
  uint64_t result = qword_1EBD7DA50;
  if (!qword_1EBD7DA50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1D42E4C38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_snapshotHandlers);
  if (v3)
  {
    uint64_t v4 = *(void *)(v3 + 64);
    uint64_t v5 = *(void *)(v3 + 32);
    unint64_t result = sub_1D42E2C58(MEMORY[0x1E4FBC860]);
    uint64_t v7 = 3;
    if (v5) {
      uint64_t v7 = 1;
    }
    uint64_t v8 = 2;
    if (v5) {
      uint64_t v8 = 3;
    }
    if (v4) {
      uint64_t v7 = v8;
    }
  }
  else
  {
    uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems);
    if (qword_1EBD7E6E0 != -1) {
      swift_once();
    }
    if (qword_1EBD7E6D0 == v9) {
      goto LABEL_15;
    }
    if (v9 == 2)
    {
      unint64_t result = sub_1D42E2C58(MEMORY[0x1E4FBC860]);
      uint64_t v7 = 2;
      goto LABEL_17;
    }
    if (v9 != 1)
    {
LABEL_15:
      unint64_t result = sub_1D42E2C58(MEMORY[0x1E4FBC860]);
      uint64_t v7 = 3;
    }
    else
    {
      unint64_t result = sub_1D42E2C58(MEMORY[0x1E4FBC860]);
      uint64_t v7 = 1;
    }
  }
LABEL_17:
  *(unsigned char *)a1 = v3 != 0;
  uint64_t v10 = MEMORY[0x1E4FBC870];
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 32) = v3 != 0;
  return result;
}

void FMIPManagerConfiguration.enabledSubsystems.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems);
}

uint64_t FMIPManagerConfiguration.preferredLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_preferredLocale;
  uint64_t v4 = sub_1D44696C8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_1D42E4DE0()
{
  if (!qword_1EBD7E718)
  {
    type metadata accessor for FMIPItemLostModeMetadata();
    unint64_t v0 = sub_1D446A168();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBD7E718);
    }
  }
}

uint64_t type metadata accessor for FMIPItemLostModeMetadata()
{
  uint64_t result = qword_1EBD7E6F8;
  if (!qword_1EBD7E6F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FMReverseGeocodingCache()
{
  return sub_1D429BD44();
}

uint64_t sub_1D42E4E9C@<X0>(void *a1@<X8>)
{
  return sub_1D4290184(*(void *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

void sub_1D42E4EB8()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1D42A920C(v0 + v2, *(unsigned char *)(v0 + v2 + *(void *)(v1 + 64)), *(void *)(((v2 + *(void *)(v1 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0 + 8), *(void *)(((v2 + *(void *)(v1 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0 + 16));
}

uint64_t sub_1D42E4F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

void sub_1D42E4F54()
{
  sub_1D42E3880();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for FMIPDiscoveredAccessory()
{
  uint64_t result = qword_1EA6CA1C8;
  if (!qword_1EA6CA1C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPBeaconSharingLimits()
{
  return &type metadata for FMIPBeaconSharingLimits;
}

double static FMIPBeaconSharingLimits.default.getter@<D0>(_OWORD *a1@<X8>)
{
  if (qword_1EA6C8F30 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_1EA6C8F38;
  *a1 = xmmword_1EA6C8F38;
  return result;
}

uint64_t FMIPBeaconSharingLimits.maxCircleMembers.getter()
{
  return *(void *)v0;
}

uint64_t sub_1D42E50BC()
{
  qword_1EBD7E6E8 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");

  return swift_unknownObjectRetain();
}

uint64_t storeEnumTagSinglePayload for FMIPSeparationLocation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D44628D0);
}

uint64_t sub_1D42E510C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1D42E5174()
{
  sub_1D42E8364();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for FMIPSeparationLocation()
{
  uint64_t result = qword_1EA6CBB98;
  if (!qword_1EA6CBB98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D42E5284()
{
  return sub_1D429F0AC();
}

uint64_t sub_1D42E52A8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1D4274B90(&qword_1EA6C9C70, a2, (void (*)(uint64_t))type metadata accessor for FMIPInitClientResponse);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D42E5300()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D42E530C(void *a1)
{
  return sub_1D429306C(a1);
}

unint64_t sub_1D42E5358()
{
  unint64_t result = qword_1EBD7CEC0;
  if (!qword_1EBD7CEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CEC0);
  }
  return result;
}

unint64_t sub_1D42E53AC()
{
  unint64_t result = qword_1EBD7CEB8;
  if (!qword_1EBD7CEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CEB8);
  }
  return result;
}

void sub_1D42E5400()
{
  sub_1D42985E8(*(char **)(v0 + 16));
}

uint64_t sub_1D42E5408()
{
  return sub_1D4279FD4(*(void *)(v0 + 16));
}

uint64_t sub_1D42E5410()
{
  return sub_1D427EE1C((uint64_t)&unk_1F2C0DBB8, (uint64_t)sub_1D42E5408, (uint64_t)&unk_1F2C0DBD0);
}

uint64_t sub_1D42E5438()
{
  return sub_1D42748E0(v0[2], v0[3], v0[4], &OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_publicAPSToken, (uint64_t (*)(uint64_t))sub_1D428AA1C);
}

unint64_t sub_1D42E547C()
{
  unint64_t result = qword_1EBD7CE88;
  if (!qword_1EBD7CE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CE88);
  }
  return result;
}

unint64_t sub_1D42E54D0()
{
  unint64_t result = qword_1EBD7CE80;
  if (!qword_1EBD7CE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CE80);
  }
  return result;
}

uint64_t FMIPItemUpdateContext.__deallocating_deinit()
{
  sub_1D42E5800(v0 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_type);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_timestamp;
  uint64_t v2 = sub_1D4469618();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_creationTimestamp, v2);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMIPItemUpdateContext(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6CAF90);
}

uint64_t sub_1D42E5624()
{
  sub_1D427B074();

  return swift_deallocClassInstance();
}

uint64_t sub_1D42E5678()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FMIPInitClientRequest()
{
  uint64_t result = qword_1EBD7CB30;
  if (!qword_1EBD7CB30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPManagerSubsystem()
{
  return &type metadata for FMIPManagerSubsystem;
}

void sub_1D42E5720()
{
  uint64_t v0 = unk_1F2C020C0;
  if ((unk_1F2C020C0 & ~qword_1F2C020B8) == 0) {
    uint64_t v0 = 0;
  }
  qword_1EBD7E6D0 = v0 | qword_1F2C020B8;
}

uint64_t type metadata accessor for FMIPGarbageCollector()
{
  return self;
}

uint64_t sub_1D42E5768()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FMIPDeviceImageCache()
{
  return sub_1D429BD44();
}

uint64_t FMIPItemsTabEnabled.getter()
{
  return 1;
}

ValueMetadata *type metadata accessor for FMIPDeviceImageSize()
{
  return &type metadata for FMIPDeviceImageSize;
}

void sub_1D42E57D4(uint64_t a1)
{
}

uint64_t sub_1D42E5800(uint64_t a1)
{
  uint64_t updated = type metadata accessor for FMIPItemUpdateType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(a1, updated);
  return a1;
}

uint64_t type metadata accessor for FMIPItemUpdateType(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EBD7E6C0);
}

uint64_t type metadata accessor for FMIPItemImageCache()
{
  return sub_1D429BD44();
}

id sub_1D42E5894()
{
  id result = sub_1D427A3D8();
  qword_1EA6CAA80 = (uint64_t)result;
  return result;
}

ValueMetadata *type metadata accessor for FMIPAccessoryError()
{
  return &type metadata for FMIPAccessoryError;
}

uint64_t sub_1D42E58C4()
{
  sub_1D42D5DA0(&qword_1EA6CA1F0);

  return sub_1D42764A0();
}

uint64_t sub_1D42E5938(unint64_t a1)
{
  return sub_1D42B1C68(a1, *(double **)(v1 + 16), *(void (**)(unint64_t))(v1 + 24), *(void *)(v1 + 32));
}

ValueMetadata *type metadata accessor for FMIPEraseMetadata.CodingKeys()
{
  return &type metadata for FMIPEraseMetadata.CodingKeys;
}

unint64_t sub_1D42E595C()
{
  unint64_t result = qword_1EBD7CE20;
  if (!qword_1EBD7CE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CE20);
  }
  return result;
}

unint64_t sub_1D42E59B0()
{
  unint64_t result = qword_1EBD7CE18;
  if (!qword_1EBD7CE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CE18);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPUTAlertState()
{
  return &type metadata for FMIPUTAlertState;
}

uint64_t FMIPUTAlertState.rawValue.getter()
{
  if (*v0) {
    return 0x64656C6261736964;
  }
  else {
    return 0x64656C62616E65;
  }
}

uint64_t storeEnumTagSinglePayload for FMIPUTAlertEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 51) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 51) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPUTAlertEvent()
{
  return &type metadata for FMIPUTAlertEvent;
}

ValueMetadata *type metadata accessor for FMIPSafeLocation()
{
  return &type metadata for FMIPSafeLocation;
}

unint64_t sub_1D42E5AC8()
{
  unint64_t result = qword_1EA6CA400;
  if (!qword_1EA6CA400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA400);
  }
  return result;
}

unint64_t sub_1D42E5B1C()
{
  unint64_t result = qword_1EA6CA468;
  if (!qword_1EA6CA468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA468);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPLockMetadata.CodingKeys()
{
  return &type metadata for FMIPLockMetadata.CodingKeys;
}

unint64_t sub_1D42E5B88()
{
  unint64_t result = qword_1EBD7CDE0;
  if (!qword_1EBD7CDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CDE0);
  }
  return result;
}

unint64_t sub_1D42E5BDC()
{
  unint64_t result = qword_1EBD7CDD8;
  if (!qword_1EBD7CDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CDD8);
  }
  return result;
}

uint64_t sub_1D42E5C30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 120))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPBaseResponse.CodingKeys()
{
  return &type metadata for FMIPBaseResponse.CodingKeys;
}

unint64_t sub_1D42E5C84()
{
  unint64_t result = qword_1EBD7CD00;
  if (!qword_1EBD7CD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CD00);
  }
  return result;
}

unint64_t sub_1D42E5CD8()
{
  unint64_t result = qword_1EBD7CCF8;
  if (!qword_1EBD7CCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CCF8);
  }
  return result;
}

unint64_t sub_1D42E5D2C()
{
  unint64_t result = qword_1EBD7CCF0;
  if (!qword_1EBD7CCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CCF0);
  }
  return result;
}

unint64_t sub_1D42E5D80()
{
  unint64_t result = qword_1EBD7CCE8;
  if (!qword_1EBD7CCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CCE8);
  }
  return result;
}

unint64_t sub_1D42E5DD4()
{
  unint64_t result = qword_1EBD7CCE0;
  if (!qword_1EBD7CCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CCE0);
  }
  return result;
}

unint64_t sub_1D42E5E30()
{
  unint64_t result = qword_1EA6C9B00;
  if (!qword_1EA6C9B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9B00);
  }
  return result;
}

unint64_t sub_1D42E5E84()
{
  unint64_t result = qword_1EA6C9B08;
  if (!qword_1EA6C9B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9B08);
  }
  return result;
}

void sub_1D42E5ED8()
{
  sub_1D42E3880();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t type metadata accessor for FMIPProductType()
{
  uint64_t result = qword_1EBD7E6B0;
  if (!qword_1EBD7E6B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1D42E5FC0()
{
  sub_1D4276B24();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for FMIPDataManager()
{
  uint64_t result = qword_1EBD7E6A0;
  if (!qword_1EBD7E6A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D42E612C()
{
  return sub_1D427F0B8(v0);
}

uint64_t sub_1D42E6134()
{
  return sub_1D427ADB8(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

unsigned char *sub_1D42E6140(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

unint64_t sub_1D42E614C()
{
  unint64_t result = qword_1EA6CB0D0;
  if (!qword_1EA6CB0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB0D0);
  }
  return result;
}

uint64_t type metadata accessor for FMIPBeaconShare(uint64_t a1)
{
  return sub_1D42A1DE8(a1, qword_1EA6C90A8);
}

uint64_t type metadata accessor for FMIPURLHandler()
{
  return self;
}

ValueMetadata *type metadata accessor for FMIPBeaconType()
{
  return &type metadata for FMIPBeaconType;
}

unint64_t sub_1D42E61FC()
{
  unint64_t result = qword_1EA6CB558;
  if (!qword_1EA6CB558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB558);
  }
  return result;
}

unint64_t sub_1D42E6250()
{
  unint64_t result = qword_1EA6CB560;
  if (!qword_1EA6CB560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB560);
  }
  return result;
}

unint64_t sub_1D42E62AC()
{
  unint64_t result = qword_1EA6CB508;
  if (!qword_1EA6CB508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB508);
  }
  return result;
}

unint64_t sub_1D42E6300()
{
  unint64_t result = qword_1EA6CB510;
  if (!qword_1EA6CB510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB510);
  }
  return result;
}

unint64_t sub_1D42E635C()
{
  unint64_t result = qword_1EA6CB548;
  if (!qword_1EA6CB548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB548);
  }
  return result;
}

unint64_t sub_1D42E63B0()
{
  unint64_t result = qword_1EA6CB550;
  if (!qword_1EA6CB550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB550);
  }
  return result;
}

unint64_t sub_1D42E640C()
{
  unint64_t result = qword_1EA6CB528;
  if (!qword_1EA6CB528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB528);
  }
  return result;
}

unint64_t sub_1D42E6460()
{
  unint64_t result = qword_1EA6CB530;
  if (!qword_1EA6CB530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB530);
  }
  return result;
}

unint64_t sub_1D42E64BC()
{
  unint64_t result = qword_1EA6CB518;
  if (!qword_1EA6CB518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB518);
  }
  return result;
}

unint64_t sub_1D42E6510()
{
  unint64_t result = qword_1EA6CB520;
  if (!qword_1EA6CB520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB520);
  }
  return result;
}

unint64_t sub_1D42E656C()
{
  unint64_t result = qword_1EA6CB4F8;
  if (!qword_1EA6CB4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB4F8);
  }
  return result;
}

unint64_t sub_1D42E65C0()
{
  unint64_t result = qword_1EA6CB500;
  if (!qword_1EA6CB500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB500);
  }
  return result;
}

unint64_t sub_1D42E661C()
{
  unint64_t result = qword_1EA6CB538;
  if (!qword_1EA6CB538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB538);
  }
  return result;
}

unint64_t sub_1D42E6670()
{
  unint64_t result = qword_1EA6CB540;
  if (!qword_1EA6CB540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB540);
  }
  return result;
}

unint64_t sub_1D42E66CC()
{
  unint64_t result = qword_1EA6CB568;
  if (!qword_1EA6CB568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB568);
  }
  return result;
}

unint64_t sub_1D42E6720()
{
  unint64_t result = qword_1EA6CB570;
  if (!qword_1EA6CB570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB570);
  }
  return result;
}

void sub_1D42E6774()
{
  sub_1D42E4DE0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for FMIPItemGroup.CodingKeys()
{
  return &type metadata for FMIPItemGroup.CodingKeys;
}

unint64_t sub_1D42E6848()
{
  unint64_t result = qword_1EA6CA0D8;
  if (!qword_1EA6CA0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA0D8);
  }
  return result;
}

unint64_t sub_1D42E689C()
{
  unint64_t result = qword_1EA6CA0E0;
  if (!qword_1EA6CA0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA0E0);
  }
  return result;
}

void sub_1D42E68F0(uint64_t a1)
{
}

uint64_t static FMDemoManager.devicesDemoEnabled.getter()
{
  return sub_1D42E6A04(&qword_1EBD7E658, (unsigned __int8 *)&byte_1EBD7CB21);
}

void sub_1D42E693C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5)
{
  type metadata accessor for FMDemoManager();
  char v11 = a2;
  if (static FMDemoManager.hasDemoModeAsset(for:)(&v11))
  {
    uint64_t v7 = self;
    uint64_t v8 = (void *)sub_1D4469B08();
    uint64_t v9 = (void *)sub_1D4469B08();
    unsigned __int8 v10 = objc_msgSend(v7, sel_BOOLForKey_inDomain_, v8, v9);
  }
  else
  {
    unsigned __int8 v10 = 0;
  }
  *a5 = v10;
}

uint64_t sub_1D42E6A04(void *a1, unsigned __int8 *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *a2;
}

void sub_1D42E6A40(void *a1)
{
}

unint64_t sub_1D42E6A58()
{
  unint64_t result = qword_1EBD7CC60;
  if (!qword_1EBD7CC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CC60);
  }
  return result;
}

unint64_t sub_1D42E6AB4()
{
  unint64_t result = qword_1EBD7CC58;
  if (!qword_1EBD7CC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CC58);
  }
  return result;
}

unint64_t sub_1D42E6B08()
{
  unint64_t result = qword_1EBD7CC50;
  if (!qword_1EBD7CC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CC50);
  }
  return result;
}

unint64_t sub_1D42E6B64()
{
  unint64_t result = qword_1EBD7CC30;
  if (!qword_1EBD7CC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CC30);
  }
  return result;
}

unint64_t sub_1D42E6BB8()
{
  unint64_t result = qword_1EBD7CC28;
  if (!qword_1EBD7CC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CC28);
  }
  return result;
}

uint64_t type metadata accessor for FMIPManager()
{
  uint64_t result = qword_1EBD7E848;
  if (!qword_1EBD7E848) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void FMIPManager.enqueue(notificationLaunchEvent:)(long long *a1)
{
  long long v1 = *a1;
  _s8FMIPCore13FMIPAnalyticsV31sendNotificationAuthLaunchEvent5eventyAA016FMIPNotificationefG0V_tFZ_0((uint64_t *)&v1);
}

uint64_t sub_1D42E6C84@<X0>(void *a1@<X8>)
{
  return sub_1D4283F14(a1);
}

uint64_t FMIPManager.devices.getter()
{
  return sub_1D427931C(&qword_1EBD7D8C0);
}

uint64_t sub_1D42E6CBC@<X0>(void *a1@<X8>)
{
  return sub_1D427C94C(a1);
}

uint64_t FMIPManager.items.getter()
{
  return sub_1D427931C((uint64_t *)&unk_1EA6CA520);
}

uint64_t sub_1D42E6CF4()
{
  return sub_1D427F674(v0);
}

void sub_1D42E6CFC(uint64_t a1, id a2)
{
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isDevicesSnapshotMode) != 1) {
    return;
  }
  uint64_t v3 = v2;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_snapshotDevicesResponseReceived)) {
    return;
  }
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_snapshotDevicesResponseReceived) = 1;
  p_superclass = &OBJC_METACLASS____TtC8FMIPCore27FMIPBeaconSharingController.superclass;
  if (a2)
  {
    id v7 = a2;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1D4469928();
    sub_1D42D7FAC(v8, (uint64_t)qword_1EBD83228);
    id v9 = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    id v10 = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    char v11 = sub_1D44698F8();
    os_log_type_t v12 = sub_1D446A038();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446722;
      uint64_t v59 = v14;
      sub_1D42D5DA0(&qword_1EA6CA338);
      uint64_t v15 = sub_1D4469B68();
      sub_1D42CB9EC(v15, v16, &v59);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2048;
      swift_bridgeObjectRelease();
      sub_1D446A188();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 22) = 2080;
      swift_getErrorValue();
      uint64_t v17 = sub_1D446A7D8();
      sub_1D42CB9EC(v17, v18, &v59);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v11, v12, "%{public}s: received %ld devices (error=%s)", (uint8_t *)v13, 0x20u);
      swift_arrayDestroy();
      uint64_t v19 = v14;
      p_superclass = (__objc2_class **)(&OBJC_METACLASS____TtC8FMIPCore27FMIPBeaconSharingController + 8);
      MEMORY[0x1D9447730](v19, -1, -1);
      MEMORY[0x1D9447730](v13, -1, -1);
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v31 = *(uint64_t *)((char *)&(*(__objc2_class **)((char *)&p_superclass[178]->isa + v2))->isa
                     + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_snapshotHandlers);
    if (v31)
    {
      uint64_t v32 = *(void (**)(uint64_t, void, void, id))(v31 + 32);
      if (v32)
      {
        id v33 = a2;
        sub_1D42972D4((uint64_t)v32);
        v32(v2, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], a2);

        sub_1D42E2C6C((uint64_t)v32);
      }
    }

    return;
  }
  uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration);
  uint64_t v21 = OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_snapshotHandlers;
  uint64_t v22 = *(void *)(v20 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_snapshotHandlers);
  if (v22)
  {
    unint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 16);
    if (v23)
    {
      swift_retain();
      uint64_t v24 = v23(v2, a1);
      if (*(void *)(v24 + 16))
      {
        if (qword_1EBD80068 != -1) {
          swift_once();
        }
        uint64_t v25 = sub_1D4469928();
        sub_1D42D7FAC(v25, (uint64_t)qword_1EBD83228);
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v26 = sub_1D44698F8();
        os_log_type_t v27 = sub_1D446A038();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = swift_slowAlloc();
          uint64_t v57 = swift_slowAlloc();
          *(_DWORD *)uint64_t v28 = 136446722;
          uint64_t v59 = v57;
          sub_1D42D5DA0(&qword_1EA6CA338);
          uint64_t v29 = sub_1D4469B68();
          sub_1D42CB9EC(v29, v30, &v59);
          sub_1D446A188();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v28 + 12) = 2048;
          swift_bridgeObjectRelease();
          sub_1D446A188();
          swift_bridgeObjectRelease();
          *(_WORD *)(v28 + 22) = 2048;
          swift_bridgeObjectRelease();
          sub_1D446A188();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D4271000, v26, v27, "%{public}s: received %ld devices incl. %ld locations asked", (uint8_t *)v28, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1D9447730](v57, -1, -1);
          MEMORY[0x1D9447730](v28, -1, -1);
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        uint64_t v52 = *(void *)(v20 + v21);
        if (v52 && (uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v52 + 32)) != 0)
        {
          swift_retain();
          v53(v3, v24, v24, 0);
          sub_1D42E2C6C((uint64_t)v23);
          uint64_t v54 = (uint64_t)v53;
        }
        else
        {
          uint64_t v54 = (uint64_t)v23;
        }
        sub_1D42E2C6C(v54);
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRelease();
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_1D4469928();
      sub_1D42D7FAC(v45, (uint64_t)qword_1EBD83228);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      char v46 = sub_1D44698F8();
      os_log_type_t v47 = sub_1D446A038();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        *(_DWORD *)uint64_t v48 = 136446466;
        uint64_t v59 = v49;
        sub_1D42D5DA0(&qword_1EA6CA338);
        uint64_t v50 = sub_1D4469B68();
        sub_1D42CB9EC(v50, v51, &v59);
        sub_1D446A188();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v48 + 12) = 2048;
        swift_bridgeObjectRelease();
        sub_1D446A188();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D4271000, v46, v47, "%{public}s: received %ld devices but no location asked", (uint8_t *)v48, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v49, -1, -1);
        MEMORY[0x1D9447730](v48, -1, -1);
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      uint64_t v55 = *(void *)(v20 + v21);
      if (v55 && (uint64_t v56 = *(void (**)(uint64_t, void, void, void))(v55 + 32)) != 0)
      {
        swift_retain();
        v56(v3, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], 0);
        sub_1D42E2C6C((uint64_t)v23);
        uint64_t v44 = (uint64_t)v56;
      }
      else
      {
        uint64_t v44 = (uint64_t)v23;
      }
LABEL_44:
      sub_1D42E2C6C(v44);
      return;
    }
  }
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1D4469928();
  sub_1D42D7FAC(v34, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v35 = sub_1D44698F8();
  os_log_type_t v36 = sub_1D446A038();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v58 = v20;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136446466;
    uint64_t v59 = v38;
    sub_1D42D5DA0(&qword_1EA6CA338);
    uint64_t v39 = sub_1D4469B68();
    sub_1D42CB9EC(v39, v40, &v59);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2048;
    swift_bridgeObjectRelease();
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v35, v36, "%{public}s: received %ld devices", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v38, -1, -1);
    uint64_t v41 = v37;
    uint64_t v20 = v58;
    MEMORY[0x1D9447730](v41, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v42 = *(void *)(v20 + v21);
  if (v42)
  {
    char v43 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v42 + 32);
    if (v43)
    {
      swift_retain();
      v43(v3, a1, a1, 0);
      uint64_t v44 = (uint64_t)v43;
      goto LABEL_44;
    }
  }
}

uint64_t sub_1D42E7820()
{
  return sub_1D4385544(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)sub_1D42E7900, (uint64_t)&unk_1F2C0C490);
}

uint64_t sub_1D42E7858()
{
  return sub_1D4277EEC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1D42E7864()
{
  return sub_1D4277660(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1D42E7874()
{
  return sub_1D4277DE0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1D42E7880()
{
  return sub_1D427B2F0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D42E7888(uint64_t a1)
{
  return sub_1D4292774(a1, "FMIPManager: didReceive items %@", (uint64_t)&unk_1F2C0B5A0, (uint64_t)sub_1D42E7880, (uint64_t)&unk_1F2C0B5B8);
}

uint64_t sub_1D42E78B8()
{
  return sub_1D428509C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D42E78C0(uint64_t a1)
{
  return sub_1D427F2E4(a1, v1, (uint64_t)&unk_1F2C0B460, (uint64_t)sub_1D42E78B8, (uint64_t)&unk_1F2C0B478);
}

uint64_t sub_1D42E7900()
{
  return sub_1D4284BA8(v0);
}

uint64_t sub_1D42E7930()
{
  return sub_1D42C59B4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D42E7938()
{
  return sub_1D42772F0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D42E7940()
{
  return sub_1D42892D4(v0);
}

uint64_t sub_1D42E7948()
{
  return sub_1D4385544(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)sub_1D42E7940, (uint64_t)&unk_1F2C0C350);
}

uint64_t sub_1D42E7980()
{
  return sub_1D4274FD0(*(void *)(v0 + 16), v0 + 24, *(void *)(v0 + 112));
}

uint64_t sub_1D42E7990()
{
  return sub_1D428826C(*(void *)(v0 + 16), *(void *)(v0 + 24), v0 + 32);
}

uint64_t sub_1D42E799C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1D42E79CC()
{
  return sub_1D4296BA8(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1D42E79D8()
{
  return sub_1D4291978(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1D42E79E4(uint64_t (*a1)(uint64_t *))
{
  uint64_t v3 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration)
                 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems);
  return a1(&v3);
}

Swift::Void __swiftcall FMIPManager.startRefreshing()()
{
}

uint64_t sub_1D42E7A48()
{
  return sub_1D428BDFC(v0);
}

uint64_t sub_1D42E7AA0()
{
  return sub_1D4385458(v0);
}

uint64_t sub_1D42E7AD0()
{
  return sub_1D42876CC(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D42E7AD8()
{
  return sub_1D4282284(v0[2], v0[3], v0[4]);
}

uint64_t storeEnumTagSinglePayload for FMIPAddress(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 288) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 168) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 288) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unint64_t sub_1D42E7B70()
{
  unint64_t result = qword_1EA6CB7B0;
  if (!qword_1EA6CB7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB7B0);
  }
  return result;
}

unint64_t sub_1D42E7BC4()
{
  unint64_t result = qword_1EBD7CC00;
  if (!qword_1EBD7CC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CC00);
  }
  return result;
}

unint64_t sub_1D42E7C18(uint64_t a1)
{
  unint64_t result = sub_1D42E7B70();
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for FMIPAddress.CodingKeys()
{
  return &type metadata for FMIPAddress.CodingKeys;
}

unint64_t sub_1D42E7C58()
{
  unint64_t result = qword_1EBD7CBF8;
  if (!qword_1EBD7CBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CBF8);
  }
  return result;
}

unint64_t sub_1D42E7CAC()
{
  unint64_t result = qword_1EBD7CBF0;
  if (!qword_1EBD7CBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CBF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMIPPerson(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPPerson(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D42E7D9C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D42E7E0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPPerson.init(from:)(a1, a2);
}

unint64_t sub_1D42E7E24()
{
  unint64_t result = qword_1EBD7CBE0;
  if (!qword_1EBD7CBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CBE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPPerson.CodingKeys()
{
  return &type metadata for FMIPPerson.CodingKeys;
}

unint64_t sub_1D42E7E90()
{
  unint64_t result = qword_1EBD7CBD8;
  if (!qword_1EBD7CBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CBD8);
  }
  return result;
}

unint64_t sub_1D42E7EE4()
{
  unint64_t result = qword_1EBD7CBD0;
  if (!qword_1EBD7CBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CBD0);
  }
  return result;
}

uint64_t sub_1D42E7F38(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7CBC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D42E7F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7CBC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D42E8000(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1D42D5DA0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42E8064(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7CBC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1D42E80CC()
{
  if (!qword_1EBD7EA20)
  {
    type metadata accessor for FMIPDevice();
    unint64_t v0 = sub_1D446A168();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBD7EA20);
    }
  }
}

unint64_t sub_1D42E812C()
{
  unint64_t result = qword_1EBD7CBA8;
  if (!qword_1EBD7CBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CBA8);
  }
  return result;
}

unint64_t sub_1D42E8180()
{
  unint64_t result = qword_1EBD7CBA0;
  if (!qword_1EBD7CBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CBA0);
  }
  return result;
}

unint64_t sub_1D42E81D4()
{
  unint64_t result = qword_1EBD7E940;
  if (!qword_1EBD7E940)
  {
    sub_1D4469958();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7E940);
  }
  return result;
}

uint64_t sub_1D42E822C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD80058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D42E8294(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D42E82FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7CB80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1D42E8364()
{
  if (!qword_1EBD7E920)
  {
    sub_1D4469618();
    unint64_t v0 = sub_1D446A168();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBD7E920);
    }
  }
}

uint64_t sub_1D42E83BC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1D42DD034(a1, a2);
  }
  return a1;
}

uint64_t sub_1D42E83D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7E918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D42E8438(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7E918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL static FMIPBeaconShareDirection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FMIPBeaconShareDirection.hash(into:)()
{
  return sub_1D446A838();
}

uint64_t FMIPBeaconShareDirection.hashValue.getter()
{
  return sub_1D446A888();
}

BOOL sub_1D42E8528(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s8FMIPCore28FMIPDeviceConnectedStateTypeO9hashValueSivg_0()
{
  return sub_1D446A888();
}

uint64_t sub_1D42E8584()
{
  return sub_1D446A838();
}

uint64_t sub_1D42E85B0()
{
  return sub_1D446A888();
}

BOOL FMIPBeaconShareState.isActive.getter()
{
  return ((*v0 + 0x7FFFFFFFFFFFFFD8) & 0xFFFFFFFFFFFFFFF7) == 0 && *v0 >> 62 == 2;
}

unint64_t FMIPBeaconShareState.baseState.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *v1;
  if ((*v1 >> 62) <= 1) {
    return FMIPBeaconShareState.baseState.getter();
  }
  *a1 = v2;

  return sub_1D42E8690(v2);
}

unint64_t sub_1D42E8690(unint64_t result)
{
  if ((result >> 62) <= 1) {
    return swift_retain();
  }
  return result;
}

uint64_t FMIPBeaconShareState.hash(into:)(uint64_t a1)
{
  if ((*v1 >> 62) > 1) {
    return sub_1D446A838();
  }
  sub_1D446A838();
  return FMIPBeaconShareState.hash(into:)(a1);
}

uint64_t static FMIPBeaconShareState.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  unint64_t v4 = *a1 >> 62;
  if (!v4)
  {
    if (!(v3 >> 62))
    {
      uint64_t v5 = *(void *)(v2 + 16);
      uint64_t v6 = *(void *)(v3 + 16);
      goto LABEL_7;
    }
LABEL_24:
    sub_1D42E8690(*a2);
    sub_1D42E8690(v2);
    sub_1D42E8A94(v2);
    sub_1D42E8A94(v3);
    char v7 = 0;
    return v7 & 1;
  }
  if (v4 == 1)
  {
    if (v3 >> 62 == 1)
    {
      uint64_t v5 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v6 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
LABEL_7:
      uint64_t v11 = v6;
      uint64_t v12 = v5;
      sub_1D42E8690(v3);
      sub_1D42E8690(v2);
      char v7 = static FMIPBeaconShareState.== infix(_:_:)(&v12, &v11);
      sub_1D42E8A94(v2);
      sub_1D42E8A94(v3);
      return v7 & 1;
    }
    goto LABEL_24;
  }
  switch(__ROR8__(v2, 3) ^ 0x1000000000000000)
  {
    case 1:
      if (v3 != 0x8000000000000008) {
        goto LABEL_24;
      }
      sub_1D42E8A94(*a1);
      unint64_t v8 = 0x8000000000000008;
      break;
    case 2:
      unint64_t v9 = 0x8000000000000010;
      if (v3 != 0x8000000000000010) {
        goto LABEL_24;
      }
      goto LABEL_26;
    case 3:
      if (v3 != 0x8000000000000018) {
        goto LABEL_24;
      }
      sub_1D42E8A94(*a1);
      unint64_t v8 = 0x8000000000000018;
      break;
    case 4:
      unint64_t v9 = 0x8000000000000020;
      if (v3 != 0x8000000000000020) {
        goto LABEL_24;
      }
      goto LABEL_26;
    case 5:
      if (v3 != 0x8000000000000028) {
        goto LABEL_24;
      }
      sub_1D42E8A94(*a1);
      unint64_t v8 = 0x8000000000000028;
      break;
    case 6:
      unint64_t v9 = 0x8000000000000030;
      if (v3 != 0x8000000000000030) {
        goto LABEL_24;
      }
      goto LABEL_26;
    case 7:
      if (v3 != 0x8000000000000038) {
        goto LABEL_24;
      }
      sub_1D42E8A94(*a1);
      unint64_t v8 = 0x8000000000000038;
      break;
    case 8:
      unint64_t v9 = 0x8000000000000040;
      if (v3 != 0x8000000000000040) {
        goto LABEL_24;
      }
LABEL_26:
      sub_1D42E8A94(*a1);
      unint64_t v8 = v9;
      break;
    default:
      if (v3 != 0x8000000000000000) {
        goto LABEL_24;
      }
      sub_1D42E8A94(*a1);
      unint64_t v8 = 0x8000000000000000;
      break;
  }
  sub_1D42E8A94(v8);
  char v7 = 1;
  return v7 & 1;
}

uint64_t FMIPBeaconShareState.hashValue.getter()
{
  v2[9] = *v0;
  sub_1D446A828();
  FMIPBeaconShareState.hash(into:)((uint64_t)v2);
  return sub_1D446A888();
}

uint64_t sub_1D42E8A44()
{
  v2[9] = *v0;
  sub_1D446A828();
  FMIPBeaconShareState.hash(into:)((uint64_t)v2);
  return sub_1D446A888();
}

unint64_t sub_1D42E8A94(unint64_t result)
{
  if ((result >> 62) <= 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1D42E8AB0()
{
  v2[9] = *v0;
  sub_1D446A828();
  FMIPBeaconShareState.hash(into:)((uint64_t)v2);
  return sub_1D446A888();
}

uint64_t FMIPBeaconShare.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D4469688();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t FMIPBeaconShare.beaconIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMIPBeaconShare(0) + 20);
  uint64_t v4 = sub_1D4469688();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FMIPBeaconShare.ownerHandle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPBeaconShare(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPBeaconShare.shareeHandle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPBeaconShare(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t FMIPBeaconShare.state.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for FMIPBeaconShare(0) + 32));
  *a1 = v3;

  return sub_1D42E8690(v3);
}

uint64_t FMIPBeaconShare.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMIPBeaconShare(0) + 36);
  uint64_t v4 = sub_1D4469618();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FMIPBeaconShare.expirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMIPBeaconShare(0) + 40);
  uint64_t v4 = sub_1D4469618();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FMIPBeaconShare.delegatedSharesURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMIPBeaconShare(0) + 44);

  return sub_1D42E83D0(v3, a1);
}

uint64_t FMIPBeaconShare.visitorCount.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FMIPBeaconShare(0) + 48));
}

uint64_t FMIPBeaconShare.delegationStatus.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMIPBeaconShare(0) + 52));
}

void sub_1D42E8E24(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v6 - 8);
  char v43 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D4469498();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v42 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = *a2;
  id v11 = objc_msgSend(a1, sel_identifier);
  sub_1D4469668();

  id v12 = objc_msgSend(a1, sel_beaconIdentifier);
  uint64_t v13 = (int *)type metadata accessor for FMIPBeaconShare(0);
  sub_1D4469668();

  id v14 = objc_msgSend(a1, sel_owner);
  id v15 = objc_msgSend(v14, sel_destination);

  uint64_t v16 = sub_1D4469B38();
  uint64_t v18 = v17;

  uint64_t v19 = (uint64_t *)(a3 + v13[6]);
  *uint64_t v19 = v16;
  v19[1] = v18;
  id v20 = objc_msgSend(a1, sel_sharee);
  uint64_t v21 = v8;
  id v22 = objc_msgSend(v20, sel_destination);

  uint64_t v23 = sub_1D4469B38();
  uint64_t v25 = v24;

  uint64_t v26 = (uint64_t *)(a3 + v13[7]);
  *uint64_t v26 = v23;
  v26[1] = v25;
  *(void *)(a3 + v13[8]) = v44;
  id v27 = objc_msgSend(a1, sel_creationDate);
  sub_1D44695D8();

  id v28 = objc_msgSend(a1, sel_expirationDate);
  sub_1D44695D8();

  id v29 = objc_msgSend(a1, sel_sharee);
  id v30 = objc_msgSend(v29, sel_type);

  if (v30 != (id)2) {
    goto LABEL_4;
  }
  id v31 = objc_msgSend(a1, sel_sharee);
  id v32 = objc_msgSend(v31, sel_destination);

  sub_1D4469B38();
  uint64_t v33 = (uint64_t)v43;
  sub_1D4469488();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v33, 1, v21) == 1)
  {
    sub_1D4276C3C(v33, &qword_1EBD7E918);
LABEL_4:
    char v34 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3 + v13[11], 1, 1, v21);
    unint64_t v35 = 0;
LABEL_7:
    uint64_t v39 = a3 + v13[12];
    *(void *)uint64_t v39 = v35;
    *(unsigned char *)(v39 + 8) = v34;
    unsigned __int8 v40 = objc_msgSend(a1, sel_delegationStatus);

    *(unsigned char *)(a3 + v13[13]) = v40;
    return;
  }
  os_log_type_t v36 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v42, v33, v21);
  uint64_t v37 = a3 + v13[11];
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v37, v36, v21);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v37, 0, 1, v21);
  unint64_t v38 = (unint64_t)objc_msgSend(a1, sel_visitorCount);
  if ((v38 & 0x8000000000000000) == 0)
  {
    unint64_t v35 = v38;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v36, v21);
    char v34 = 0;
    goto LABEL_7;
  }
  sub_1D446A478();
  __break(1u);
}

uint64_t static FMIPBeaconShare.directionSort(lhs:rhs:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPBeaconShare(0);
  uint64_t v5 = *(int *)(v4 + 28);
  uint64_t v6 = (void *)(a1 + *(int *)(v4 + 24));
  BOOL v7 = *v6 == *(void *)(a1 + v5) && v6[1] == *(void *)(a1 + v5 + 8);
  if (v7 || (sub_1D446A758() & 1) != 0) {
    return 1;
  }
  uint64_t v9 = (uint64_t *)(a2 + *(int *)(v4 + 24));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  id v12 = (void *)(a2 + *(int *)(v4 + 28));
  if (v10 == *v12 && v11 == v12[1]) {
    return 0;
  }
  char v14 = sub_1D446A758();
  uint64_t result = 0;
  if ((v14 & 1) == 0)
  {
    return sub_1D4469598();
  }
  return result;
}

uint64_t FMIPBeaconShare.isDefaultOwnedShare.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPBeaconShare(0);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)(v1 + *(int *)(v3 + 28));
  if (*v6 == 0x6F6C4072656E776FLL && v6[1] == 0xEF74736F686C6163)
  {
    sub_1D42F8828(v1, (uint64_t)v5, type metadata accessor for FMIPBeaconShare);
  }
  else
  {
    char v8 = sub_1D446A758();
    sub_1D42F8828(v1, (uint64_t)v5, type metadata accessor for FMIPBeaconShare);
    if ((v8 & 1) == 0)
    {
      sub_1D42F88BC((uint64_t)v5, type metadata accessor for FMIPBeaconShare);
      return 0;
    }
  }
  uint64_t v9 = &v5[*(int *)(v2 + 24)];
  if (*(void *)v9 == 0x6F6C4072656E776FLL && *((void *)v9 + 1) == 0xEF74736F686C6163)
  {
    sub_1D42F88BC((uint64_t)v5, type metadata accessor for FMIPBeaconShare);
  }
  else
  {
    char v11 = sub_1D446A758();
    sub_1D42F88BC((uint64_t)v5, type metadata accessor for FMIPBeaconShare);
    if ((v11 & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

uint64_t FMIPBeaconShare.direction.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMIPBeaconShare(0);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v7 = (void *)(v1 + *(int *)(v4 + 28));
  if (*v7 == 0x6F6C4072656E776FLL && v7[1] == 0xEF74736F686C6163)
  {
    sub_1D42F8828(v1, (uint64_t)v6, type metadata accessor for FMIPBeaconShare);
LABEL_13:
    sub_1D42F88BC((uint64_t)v6, type metadata accessor for FMIPBeaconShare);
    goto LABEL_14;
  }
  char v9 = sub_1D446A758();
  sub_1D42F8828(v1, (uint64_t)v6, type metadata accessor for FMIPBeaconShare);
  if (v9) {
    goto LABEL_13;
  }
  uint64_t v10 = &v6[*(int *)(v3 + 24)];
  if (*(void *)v10 == 0x6F6C4072656E776FLL && *((void *)v10 + 1) == 0xEF74736F686C6163) {
    goto LABEL_13;
  }
  char v12 = sub_1D446A758();
  uint64_t result = sub_1D42F88BC((uint64_t)v6, type metadata accessor for FMIPBeaconShare);
  if ((v12 & 1) == 0)
  {
    char v14 = 2;
    goto LABEL_20;
  }
LABEL_14:
  id v15 = (uint64_t *)(v1 + *(int *)(v3 + 24));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  id v18 = objc_msgSend(self, sel_SPOwner);
  id v19 = objc_msgSend(v18, sel_destination);

  uint64_t v20 = sub_1D4469B38();
  uint64_t v22 = v21;

  if (v17 == v20 && v16 == v22)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v14 = 1;
  }
  else
  {
    char v24 = sub_1D446A758();
    uint64_t result = swift_bridgeObjectRelease();
    char v14 = v24 & 1;
  }
LABEL_20:
  *a1 = v14;
  return result;
}

uint64_t FMIPBeaconShare.shareIncludesMe.getter()
{
  uint64_t v1 = type metadata accessor for FMIPBeaconShare(0);
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)(v0 + *(int *)(v2 + 28));
  if (*v5 == 0x6F6C4072656E776FLL && v5[1] == 0xEF74736F686C6163)
  {
    sub_1D42F8828(v0, (uint64_t)v4, type metadata accessor for FMIPBeaconShare);
LABEL_12:
    char v10 = 1;
    goto LABEL_13;
  }
  char v7 = sub_1D446A758();
  sub_1D42F8828(v0, (uint64_t)v4, type metadata accessor for FMIPBeaconShare);
  if (v7) {
    goto LABEL_12;
  }
  char v8 = &v4[*(int *)(v1 + 24)];
  if (*(void *)v8 == 0x6F6C4072656E776FLL && *((void *)v8 + 1) == 0xEF74736F686C6163) {
    goto LABEL_12;
  }
  char v10 = sub_1D446A758();
LABEL_13:
  sub_1D42F88BC((uint64_t)v4, type metadata accessor for FMIPBeaconShare);
  return v10 & 1;
}

uint64_t FMIPBeaconShare.amOwner.getter()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for FMIPBeaconShare(0) + 24));
  if (*v1 == 0x6F6C4072656E776FLL && v1[1] == 0xEF74736F686C6163) {
    return 1;
  }

  return sub_1D446A758();
}

uint64_t FMIPBeaconShare.amSharee.getter()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for FMIPBeaconShare(0) + 24));
  if (*v1 == 0x6F6C4072656E776FLL && v1[1] == 0xEF74736F686C6163) {
    char v3 = 0;
  }
  else {
    char v3 = sub_1D446A758() ^ 1;
  }
  return v3 & 1;
}

uint64_t FMIPBeaconShare.otherPartyHandle.getter()
{
  FMIPBeaconShare.direction.getter(&v4);
  uint64_t v1 = qword_1D446D2A8[v4];
  uint64_t v2 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPBeaconShare(0) + 4 * v1));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FMIPBeaconShare.requiresResponse.getter()
{
  uint64_t v1 = type metadata accessor for FMIPBeaconShare(0);
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  char v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + *(int *)(v2 + 32));
  if ((v5 & 0x8000000000000000) == 0 || (char v11 = 0, ((1 << __ROR8__(v5, 3)) & 0x1EB) == 0))
  {
    uint64_t v6 = (void *)(v0 + *(int *)(v1 + 28));
    if (*v6 == 0x6F6C4072656E776FLL && v6[1] == 0xEF74736F686C6163)
    {
      sub_1D42F8828(v0, (uint64_t)v4, type metadata accessor for FMIPBeaconShare);
    }
    else
    {
      char v8 = sub_1D446A758();
      sub_1D42F8828(v0, (uint64_t)v4, type metadata accessor for FMIPBeaconShare);
      if ((v8 & 1) == 0)
      {
        char v9 = &v4[*(int *)(v1 + 24)];
        if (*(void *)v9 != 0x6F6C4072656E776FLL || *((void *)v9 + 1) != 0xEF74736F686C6163)
        {
          char v11 = sub_1D446A758();
LABEL_16:
          sub_1D42F88BC((uint64_t)v4, type metadata accessor for FMIPBeaconShare);
          return v11 & 1;
        }
      }
    }
    char v11 = 1;
    goto LABEL_16;
  }
  return v11 & 1;
}

uint64_t FMIPBeaconShare.otherShareeShouldBeHidden.getter()
{
  uint64_t v1 = type metadata accessor for FMIPBeaconShare(0);
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  char v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + *(int *)(v2 + 32));
  if ((v5 & 0x8000000000000000) == 0 || (char v12 = 0, ((1 << __ROR8__(v5, 3)) & 0x1EB) == 0))
  {
    uint64_t v6 = (void *)(v0 + *(int *)(v1 + 28));
    if (*v6 == 0x6F6C4072656E776FLL && v6[1] == 0xEF74736F686C6163)
    {
      sub_1D42F8828(v0, (uint64_t)v4, type metadata accessor for FMIPBeaconShare);
    }
    else
    {
      char v8 = sub_1D446A758();
      sub_1D42F8828(v0, (uint64_t)v4, type metadata accessor for FMIPBeaconShare);
      if ((v8 & 1) == 0)
      {
        char v9 = &v4[*(int *)(v1 + 24)];
        if (*(void *)v9 != 0x6F6C4072656E776FLL || *((void *)v9 + 1) != 0xEF74736F686C6163)
        {
          char v11 = sub_1D446A758();
          sub_1D42F88BC((uint64_t)v4, type metadata accessor for FMIPBeaconShare);
          char v12 = v11 ^ 1;
          return v12 & 1;
        }
      }
    }
    sub_1D42F88BC((uint64_t)v4, type metadata accessor for FMIPBeaconShare);
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t FMIPBeaconShare.hash(into:)(uint64_t a1)
{
  uint64_t v3 = sub_1D4469498();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v7 - 8);
  char v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4469688();
  sub_1D42AC414(&qword_1EBD7CB90, 255, MEMORY[0x1E4F27990]);
  sub_1D4469AD8();
  char v10 = (int *)type metadata accessor for FMIPBeaconShare(0);
  sub_1D4469AD8();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  v12[1] = *(void *)(v1 + v10[8]);
  FMIPBeaconShareState.hash(into:)(a1);
  sub_1D4469618();
  sub_1D42AC414(&qword_1EA6C9078, 255, MEMORY[0x1E4F27928]);
  sub_1D4469AD8();
  sub_1D4469AD8();
  sub_1D42E83D0(v1 + v10[11], (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    sub_1D446A848();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
    sub_1D446A848();
    sub_1D42AC414(&qword_1EA6C9080, 255, MEMORY[0x1E4F276F0]);
    sub_1D4469AD8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  if (*(unsigned char *)(v1 + v10[12] + 8) == 1)
  {
    sub_1D446A848();
  }
  else
  {
    sub_1D446A848();
    sub_1D446A838();
  }
  return sub_1D446A848();
}

uint64_t FMIPBeaconShare.hashValue.getter()
{
  sub_1D446A828();
  FMIPBeaconShare.hash(into:)((uint64_t)v1);
  return sub_1D446A888();
}

uint64_t sub_1D42EA294()
{
  sub_1D446A828();
  FMIPBeaconShare.hash(into:)((uint64_t)v1);
  return sub_1D446A888();
}

uint64_t sub_1D42EA2D8()
{
  sub_1D446A828();
  FMIPBeaconShare.hash(into:)((uint64_t)v1);
  return sub_1D446A888();
}

double sub_1D42EA318()
{
  *(void *)&double result = 6;
  xmmword_1EA6C8F38 = xmmword_1D446B830;
  return result;
}

uint64_t FMIPBeaconSharingLimits.maxDelegatedShares.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_1D42EA338()
{
  return 0;
}

uint64_t sub_1D42EA4D0()
{
  sub_1D446A828();
  sub_1D4469688();
  sub_1D42AC414(&qword_1EBD7CB90, 255, MEMORY[0x1E4F27990]);
  sub_1D4469AD8();
  sub_1D4469AD8();
  FMIPBeaconShareState.hash(into:)((uint64_t)v1);
  return sub_1D446A888();
}

uint64_t sub_1D42EA5A8(uint64_t a1)
{
  return FMIPBeaconShareState.hash(into:)(a1);
}

uint64_t sub_1D42EA670()
{
  sub_1D446A828();
  sub_1D4469688();
  sub_1D42AC414(&qword_1EBD7CB90, 255, MEMORY[0x1E4F27990]);
  sub_1D4469AD8();
  sub_1D4469AD8();
  FMIPBeaconShareState.hash(into:)((uint64_t)v1);
  return sub_1D446A888();
}

uint64_t sub_1D42EA744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_1D4469658() & 1) != 0 && (sub_1D4469658())
  {
    uint64_t v6 = *(int *)(a3 + 24);
    unint64_t v7 = *(void *)(a1 + v6);
    unint64_t v10 = *(void *)(a2 + v6);
    unint64_t v11 = v7;
    char v8 = static FMIPBeaconShareState.== infix(_:_:)(&v11, &v10);
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_1D42EA7C4()
{
  uint64_t v17 = v0;
  uint64_t v1 = (const void *)v0[33];
  uint64_t v2 = (void *)v0[34];
  swift_willThrow();
  _Block_release(v1);
  id v3 = v2;
  id v4 = v2;
  uint64_t v5 = sub_1D44698F8();
  os_log_type_t v6 = sub_1D446A018();
  if (os_log_type_enabled(v5, v6))
  {
    unint64_t v7 = (void *)v0[34];
    char v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v16 = v9;
    *(_DWORD *)char v8 = 136315138;
    swift_getErrorValue();
    uint64_t v10 = sub_1D446A7D8();
    v0[30] = sub_1D42CB9EC(v10, v11, &v16);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v5, v6, "FMIPBeaconSharingController: Failed to start sharing controller: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v9, -1, -1);
    MEMORY[0x1D9447730](v8, -1, -1);
  }
  else
  {
    char v12 = (void *)v0[34];
  }
  *(unsigned char *)(v0[31] + 120) = 0;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[35] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1D42E3F1C;
  uint64_t v14 = v0[31];
  v13[16] = v14;
  return MEMORY[0x1F4188298](sub_1D4276074, v14, 0);
}

uint64_t sub_1D42EAA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1D42EAA2C, a4, 0);
}

uint64_t sub_1D42EAA2C()
{
  sub_1D42E4150(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D42EAA8C()
{
  *(void *)(v1 + 152) = v0;
  return MEMORY[0x1F4188298](sub_1D42EAAAC, v0, 0);
}

uint64_t sub_1D42EAAAC()
{
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D4469928();
  v0[20] = sub_1D42D7FAC(v1, (uint64_t)qword_1EBD831A0);
  uint64_t v2 = sub_1D44698F8();
  os_log_type_t v3 = sub_1D446A038();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v4 = 0;
    _os_log_impl(&dword_1D4271000, v2, v3, "FMIPBeaconSharingController: Stoppping...", v4, 2u);
    MEMORY[0x1D9447730](v4, -1, -1);
  }
  uint64_t v5 = v0[19];

  os_log_type_t v6 = *(void **)(v5 + 112);
  v0[2] = v0;
  v0[7] = v0 + 22;
  v0[3] = sub_1D42EAC6C;
  uint64_t v7 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D42E20DC;
  v0[13] = &unk_1E69E5CB8;
  v0[14] = v7;
  objc_msgSend(v6, sel_stopRefreshingSharesWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D42EAC6C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 168) = v2;
  uint64_t v3 = *(void *)(v1 + 152);
  if (v2) {
    id v4 = sub_1D42EAE5C;
  }
  else {
    id v4 = sub_1D42EAD8C;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1D42EAD8C()
{
  uint64_t v1 = sub_1D44698F8();
  os_log_type_t v2 = sub_1D446A038();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1D4271000, v1, v2, "FMIPBeaconSharingController: Successfully stopped sharing controller", v3, 2u);
    MEMORY[0x1D9447730](v3, -1, -1);
  }

  id v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1D42EAE5C()
{
  id v15 = v0;
  uint64_t v1 = (void *)v0[21];
  swift_willThrow();
  id v2 = v1;
  id v3 = v1;
  id v4 = sub_1D44698F8();
  os_log_type_t v5 = sub_1D446A018();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[21];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_1D446A7D8();
    v0[10] = sub_1D42CB9EC(v9, v10, &v14);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v4, v5, "FMIPBeaconSharingController: Failed to stop sharing controller: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v8, -1, -1);
    MEMORY[0x1D9447730](v7, -1, -1);
  }
  else
  {
    unint64_t v11 = (void *)v0[21];
  }
  char v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1D42EB040()
{
  *(void *)(v1 + 128) = v0;
  return MEMORY[0x1F4188298](sub_1D4276074, v0, 0);
}

uint64_t sub_1D42EB060()
{
  uint64_t v97 = type metadata accessor for FMIPBeaconShare(0);
  uint64_t v1 = MEMORY[0x1F4188790](v97);
  uint64_t v104 = (uint64_t)&v96 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v103 = (uint64_t)&v96 - v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v102 = (char *)&v96 - v5;
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v12 = (char *)&v96 - v11;
  uint64_t v108 = type metadata accessor for FMIPBeaconShareStateOverride(0);
  uint64_t v13 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  id v15 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = MEMORY[0x1E4FBC870];
  swift_beginAccess();
  uint64_t v99 = v0;
  uint64_t v16 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  uint64_t v17 = (void *)sub_1D43AA158(MEMORY[0x1E4FBC860]);
  uint64_t v18 = *(void *)(v16 + 16);
  if (!v18) {
    goto LABEL_17;
  }
  uint64_t v98 = v10;
  uint64_t v19 = v16;
  uint64_t v20 = v16 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v109 = (void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v100 = v7;
  uint64_t v106 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v105 = *(void *)(v13 + 72);
  uint64_t v96 = v19;
  swift_bridgeObjectRetain();
  uint64_t v107 = v15;
  while (1)
  {
    sub_1D42F8828(v20, (uint64_t)v15, type metadata accessor for FMIPBeaconShareStateOverride);
    uint64_t v23 = v108;
    char v24 = *v109;
    uint64_t v25 = v6;
    (*v109)(v12, &v15[*(int *)(v108 + 20)], v6);
    unint64_t v26 = *(void *)&v15[*(int *)(v23 + 24)];
    sub_1D42E8690(v26);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v113 = v17;
    unint64_t v29 = sub_1D43AEE98((uint64_t)v12);
    uint64_t v30 = v17[2];
    BOOL v31 = (v28 & 1) == 0;
    uint64_t v32 = v30 + v31;
    if (__OFADD__(v30, v31)) {
      break;
    }
    char v33 = v28;
    if (v17[3] >= v32)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v17 = v113;
        if ((v28 & 1) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        sub_1D43D8950();
        uint64_t v17 = v113;
        if ((v33 & 1) == 0) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      sub_1D43D3C38(v32, isUniquelyReferenced_nonNull_native);
      unint64_t v34 = sub_1D43AEE98((uint64_t)v12);
      if ((v33 & 1) != (v35 & 1))
      {
        uint64_t result = sub_1D446A7A8();
        __break(1u);
        return result;
      }
      unint64_t v29 = v34;
      uint64_t v17 = v113;
      if ((v33 & 1) == 0)
      {
LABEL_12:
        v17[(v29 >> 6) + 8] |= 1 << v29;
        uint64_t v6 = v25;
        v24((char *)(v17[6] + *(void *)(v100 + 72) * v29), v12, v25);
        *(void *)(v17[7] + 8 * v29) = v26;
        uint64_t v36 = v17[2];
        BOOL v37 = __OFADD__(v36, 1);
        uint64_t v38 = v36 + 1;
        if (v37) {
          goto LABEL_72;
        }
        void v17[2] = v38;
        goto LABEL_4;
      }
    }
    uint64_t v21 = v17[7];
    unint64_t v22 = *(void *)(v21 + 8 * v29);
    *(void *)(v21 + 8 * v29) = v26;
    sub_1D42E8A94(v22);
    uint64_t v6 = v25;
LABEL_4:
    swift_bridgeObjectRelease();
    (*v106)(v12, v6);
    id v15 = v107;
    sub_1D42F88BC((uint64_t)v107, type metadata accessor for FMIPBeaconShareStateOverride);
    v20 += v105;
    if (!--v18)
    {
      swift_bridgeObjectRelease();
      unint64_t v10 = v98;
      uint64_t v7 = v100;
LABEL_17:
      uint64_t v109 = (void (**)(char *, char *, uint64_t))v17;
      swift_bridgeObjectRelease();
      uint64_t v39 = *(void *)(v99 + 128);
      uint64_t v101 = v6;
      if ((v39 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        sub_1D446A238();
        sub_1D4275AD0(0, &qword_1EA6C9340);
        sub_1D42B2630((unint64_t *)&unk_1EA6C9348, &qword_1EA6C9340);
        sub_1D4469F48();
        uint64_t v39 = (uint64_t)v113;
        uint64_t v107 = (char *)v114;
        uint64_t v40 = v115;
        uint64_t v41 = v116;
        unint64_t v42 = v117;
      }
      else
      {
        uint64_t v43 = -1 << *(unsigned char *)(v39 + 32);
        uint64_t v44 = *(void *)(v39 + 56);
        uint64_t v107 = (char *)(v39 + 56);
        uint64_t v40 = ~v43;
        uint64_t v45 = -v43;
        if (v45 < 64) {
          uint64_t v46 = ~(-1 << v45);
        }
        else {
          uint64_t v46 = -1;
        }
        unint64_t v42 = v46 & v44;
        swift_bridgeObjectRetain();
        uint64_t v41 = 0;
      }
      uint64_t v105 = v39 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v98 = (char *)v40;
      uint64_t v106 = (void (**)(char *, uint64_t))((unint64_t)(v40 + 64) >> 6);
      os_log_type_t v47 = (void (**)(char *, uint64_t))(v7 + 8);
      uint64_t v100 = MEMORY[0x1E4FBC838] + 8;
      uint64_t v108 = v39;
      uint64_t v48 = (uint64_t)v102;
      while (1)
      {
        if (v39 < 0)
        {
          uint64_t v57 = sub_1D446A2B8();
          if (!v57) {
            goto LABEL_52;
          }
          uint64_t v110 = v57;
          sub_1D4275AD0(0, &qword_1EA6C9340);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v58 = (id)v111[0];
          swift_unknownObjectRelease();
          uint64_t v55 = v41;
          uint64_t v53 = v42;
          uint64_t v56 = v109;
          if (!v58) {
            goto LABEL_52;
          }
        }
        else
        {
          if (v42)
          {
            uint64_t v53 = (v42 - 1) & v42;
            unint64_t v54 = __clz(__rbit64(v42)) | (v41 << 6);
            uint64_t v55 = v41;
            uint64_t v56 = v109;
          }
          else
          {
            uint64_t v59 = v41 + 1;
            uint64_t v56 = v109;
            if (__OFADD__(v41, 1)) {
              goto LABEL_73;
            }
            if (v59 >= (uint64_t)v106) {
              goto LABEL_52;
            }
            unint64_t v60 = *(void *)&v107[8 * v59];
            uint64_t v55 = v41 + 1;
            if (!v60)
            {
              uint64_t v55 = v41 + 2;
              if (v41 + 2 >= (uint64_t)v106) {
                goto LABEL_52;
              }
              unint64_t v60 = *(void *)&v107[8 * v55];
              if (!v60)
              {
                uint64_t v55 = v41 + 3;
                if (v41 + 3 >= (uint64_t)v106) {
                  goto LABEL_52;
                }
                unint64_t v60 = *(void *)&v107[8 * v55];
                if (!v60)
                {
                  uint64_t v55 = v41 + 4;
                  if (v41 + 4 >= (uint64_t)v106) {
                    goto LABEL_52;
                  }
                  unint64_t v60 = *(void *)&v107[8 * v55];
                  if (!v60)
                  {
                    uint64_t v61 = (void (**)(char *, uint64_t))(v41 + 5);
                    while (v106 != v61)
                    {
                      unint64_t v60 = *(void *)&v107[8 * (void)v61];
                      uint64_t v61 = (void (**)(char *, uint64_t))((char *)v61 + 1);
                      if (v60)
                      {
                        uint64_t v55 = (uint64_t)v61 - 1;
                        goto LABEL_45;
                      }
                    }
LABEL_52:
                    sub_1D42F9364();
                    swift_bridgeObjectRelease();
                    uint64_t v66 = v112;
                    uint64_t v67 = *(void *)(v99 + 144);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    char v68 = sub_1D43EEF90(v66, v67);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v68 & 1) == 0)
                    {
                      if (qword_1EBD7E7C0 == -1) {
                        goto LABEL_54;
                      }
                      goto LABEL_74;
                    }
                    return swift_bridgeObjectRelease();
                  }
                }
              }
            }
LABEL_45:
            uint64_t v53 = (v60 - 1) & v60;
            unint64_t v54 = __clz(__rbit64(v60)) + (v55 << 6);
          }
          id v58 = *(id *)(*(void *)(v39 + 48) + 8 * v54);
          if (!v58) {
            goto LABEL_52;
          }
        }
        id v62 = objc_msgSend(v58, sel_identifier);
        sub_1D4469668();

        if (v56[2] && (unint64_t v63 = sub_1D43AEE98((uint64_t)v10), (v64 & 1) != 0))
        {
          unint64_t v49 = *((void *)v56[7] + v63);
          sub_1D42E8690(v49);
          (*v47)(v10, v101);
        }
        else
        {
          (*v47)(v10, v101);
          uint64_t v65 = (char *)objc_msgSend(v58, sel_state);
          if ((unint64_t)(v65 - 1) <= 6) {
            unint64_t v49 = qword_1D446D2C0[(void)(v65 - 1)];
          }
          else {
            unint64_t v49 = 0x8000000000000000;
          }
        }
        v111[0] = v49;
        id v50 = v58;
        sub_1D42E8690(v49);
        sub_1D42E8E24(v50, v111, v48);
        uint64_t v51 = v104;
        sub_1D42F8828(v48, v104, type metadata accessor for FMIPBeaconShare);
        uint64_t v52 = v103;
        sub_1D4347A60(v103, v51);
        sub_1D42E8A94(v49);

        sub_1D42F88BC(v52, type metadata accessor for FMIPBeaconShare);
        sub_1D42F88BC(v48, type metadata accessor for FMIPBeaconShare);
        uint64_t v41 = v55;
        unint64_t v42 = v53;
        uint64_t v39 = v108;
      }
    }
  }
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  swift_once();
LABEL_54:
  uint64_t v69 = sub_1D4469928();
  sub_1D42D7FAC(v69, (uint64_t)qword_1EBD831A0);
  uint64_t v70 = sub_1D44698F8();
  os_log_type_t v71 = sub_1D446A038();
  if (os_log_type_enabled(v70, v71))
  {
    uint64_t v72 = (uint8_t *)swift_slowAlloc();
    uint64_t v73 = swift_slowAlloc();
    uint64_t v109 = (void (**)(char *, char *, uint64_t))v69;
    uint64_t v74 = v73;
    v111[0] = v73;
    *(_DWORD *)uint64_t v72 = 136315138;
    swift_beginAccess();
    sub_1D42AC414(&qword_1EA6C9358, 255, (void (*)(uint64_t))type metadata accessor for FMIPBeaconShare);
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_1D4469EE8();
    unint64_t v77 = v76;
    swift_bridgeObjectRelease();
    uint64_t v110 = sub_1D42CB9EC(v75, v77, v111);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v70, v71, "FMIPBeaconSharingController: Did calculate shares update: %s", v72, 0xCu);
    swift_arrayDestroy();
    uint64_t v78 = v74;
    uint64_t v69 = (uint64_t)v109;
    MEMORY[0x1D9447730](v78, -1, -1);
    MEMORY[0x1D9447730](v72, -1, -1);
  }

  uint64_t v79 = sub_1D4469108();
  v111[3] = v79;
  v111[4] = sub_1D42AC414(&qword_1EBD7E550, 255, MEMORY[0x1E4F619E0]);
  uint64_t v80 = sub_1D42BECB4(v111);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v79 - 8) + 104))(v80, *MEMORY[0x1E4F619B8], v79);
  LOBYTE(v79) = MEMORY[0x1D9445460](v111);
  sub_1D42BEC64((uint64_t)v111);
  if (v79)
  {
    uint64_t v81 = MEMORY[0x1D9447840](v99 + 152);
    if (v81)
    {
      uint64_t v82 = v81;
      swift_beginAccess();
      uint64_t v83 = qword_1EBD80068;
      swift_bridgeObjectRetain();
      if (v83 != -1) {
        swift_once();
      }
      sub_1D42D7FAC(v69, (uint64_t)qword_1EBD83228);
      uint64_t v84 = sub_1D44698F8();
      os_log_type_t v85 = sub_1D446A038();
      if (os_log_type_enabled(v84, v85))
      {
        uint64_t v86 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v86 = 0;
        _os_log_impl(&dword_1D4271000, v84, v85, "FMIPManager: beaconSharingController didUpdateShares", v86, 2u);
        MEMORY[0x1D9447730](v86, -1, -1);
      }

      uint64_t v87 = v82 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
      swift_beginAccess();
      if (MEMORY[0x1D9447840](v87))
      {
        uint64_t v88 = *(void *)(v87 + 8);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v90 = swift_bridgeObjectRetain();
        size_t v91 = sub_1D4385FAC(v90);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, size_t, uint64_t, uint64_t))(v88 + 184))(v82, v91, ObjectType, v88);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v92 = sub_1D44698F8();
    os_log_type_t v93 = sub_1D446A038();
    if (os_log_type_enabled(v92, v93))
    {
      uint64_t v94 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v94 = 0;
      _os_log_impl(&dword_1D4271000, v92, v93, "FMIPBeaconSharingController: Not forwarding share updates due to FF disabled.", v94, 2u);
      MEMORY[0x1D9447730](v94, -1, -1);
    }
  }
  swift_beginAccess();
  *(void *)(v99 + 144) = v112;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42EBE84@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FMIPBeaconShareStateOverride(0);
  uint64_t v9 = v8 - 8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v33[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v15 = (char *)&v33[-1] - v14;
  unint64_t v16 = *a2;
  uint64_t v17 = a3 + *(int *)(v9 + 28);
  uint64_t v18 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a1, v18);
  sub_1D42E8690(v16);
  sub_1D4469678();
  *(void *)(a3 + *(int *)(v9 + 32)) = v16;
  sub_1D42F8828(a3, (uint64_t)v15, type metadata accessor for FMIPBeaconShareStateOverride);
  uint64_t v19 = (unint64_t *)(v4 + 136);
  swift_beginAccess();
  unint64_t v20 = *(void *)(v4 + 136);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v4 + 136) = v20;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v20 = sub_1D43AFD5C(0, *(void *)(v20 + 16) + 1, 1, v20);
    *uint64_t v19 = v20;
  }
  unint64_t v23 = *(void *)(v20 + 16);
  unint64_t v22 = *(void *)(v20 + 24);
  if (v23 >= v22 >> 1)
  {
    unint64_t v20 = sub_1D43AFD5C(v22 > 1, v23 + 1, 1, v20);
    *uint64_t v19 = v20;
  }
  *(void *)(v20 + 16) = v23 + 1;
  sub_1D42F9638((uint64_t)v15, v20+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v23, type metadata accessor for FMIPBeaconShareStateOverride);
  swift_endAccess();
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1D4469928();
  sub_1D42D7FAC(v24, (uint64_t)qword_1EBD831A0);
  sub_1D42F8828(a3, (uint64_t)v13, type metadata accessor for FMIPBeaconShareStateOverride);
  uint64_t v25 = sub_1D44698F8();
  os_log_type_t v26 = sub_1D446A038();
  if (os_log_type_enabled(v25, v26))
  {
    id v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v33[0] = v28;
    *(_DWORD *)id v27 = 136315138;
    uint64_t v29 = sub_1D42EA338();
    uint64_t v32 = sub_1D42CB9EC(v29, v30, v33);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42F88BC((uint64_t)v13, type metadata accessor for FMIPBeaconShareStateOverride);
    _os_log_impl(&dword_1D4271000, v25, v26, "FMIPBeaconSharingController: Added beacon share state override: %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v28, -1, -1);
    MEMORY[0x1D9447730](v27, -1, -1);
  }
  else
  {
    sub_1D42F88BC((uint64_t)v13, type metadata accessor for FMIPBeaconShareStateOverride);
  }

  return sub_1D42EB060();
}

uint64_t sub_1D42EC254(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FMIPBeaconShareStateOverride(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EBD831A0);
  sub_1D42F8828(a1, (uint64_t)v5, type metadata accessor for FMIPBeaconShareStateOverride);
  uint64_t v7 = sub_1D44698F8();
  os_log_type_t v8 = sub_1D446A038();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v17[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v11 = sub_1D42EA338();
    v16[1] = sub_1D42CB9EC(v11, v12, v17);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42F88BC((uint64_t)v5, type metadata accessor for FMIPBeaconShareStateOverride);
    _os_log_impl(&dword_1D4271000, v7, v8, "FMIPBeaconSharingController: Removing beacon share state override: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v10, -1, -1);
    MEMORY[0x1D9447730](v9, -1, -1);
  }
  else
  {
    sub_1D42F88BC((uint64_t)v5, type metadata accessor for FMIPBeaconShareStateOverride);
  }

  MEMORY[0x1F4188790](v13);
  v16[-2] = a1;
  swift_beginAccess();
  uint64_t result = sub_1D42F52B4((uint64_t (*)(unint64_t))sub_1D42F90F8);
  int64_t v15 = *(void *)(*(void *)(v1 + 136) + 16);
  if (v15 < result)
  {
    __break(1u);
  }
  else
  {
    sub_1D42F9118(result, v15);
    swift_endAccess();
    return sub_1D42EB060();
  }
  return result;
}

uint64_t sub_1D42EC508(uint64_t a1, uint64_t a2)
{
  if ((sub_1D4469658() & 1) != 0
    && (uint64_t v4 = type metadata accessor for FMIPBeaconShareStateOverride(0), (sub_1D4469658() & 1) != 0))
  {
    uint64_t v5 = *(int *)(v4 + 24);
    unint64_t v6 = *(void *)(a1 + v5);
    unint64_t v9 = *(void *)(a2 + v5);
    unint64_t v10 = v6;
    char v7 = static FMIPBeaconShareState.== infix(_:_:)(&v10, &v9);
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1D42EC594(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1D42EC5B8, v2, 0);
}

uint64_t sub_1D42EC5B8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(*(void *)(v0 + 32) + 128);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  swift_bridgeObjectRetain();
  sub_1D43CB4B8(sub_1D42F90D8, v3, v2);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v5 && (unint64_t v6 = (char *)objc_msgSend(v5, sel_state), v5, (unint64_t)(v6 - 1) <= 6)) {
    unint64_t v7 = qword_1D446D2C0[(void)(v6 - 1)];
  }
  else {
    unint64_t v7 = 0x8000000000000000;
  }
  **(void **)(v0 + 16) = v7;
  os_log_type_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1D42EC6BC(id *a1)
{
  uint64_t v2 = sub_1D4469688();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*a1, sel_identifier);
  sub_1D4469668();

  char v7 = sub_1D4469658();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

uint64_t sub_1D42EC7C8(uint64_t a1, uint64_t (*a2)(uint64_t *, void), uint64_t a3)
{
  type metadata accessor for FMIPAcceptShareAction(0);
  uint64_t v5 = swift_dynamicCastClass();
  if (v5)
  {
    uint64_t v6 = v5;
    swift_retain();
    sub_1D42EDEA0(v6, (uint64_t)a2, a3);
LABEL_7:
    return swift_release();
  }
  type metadata accessor for FMIPDeclineShareAction(0);
  uint64_t v7 = swift_dynamicCastClass();
  if (v7)
  {
    uint64_t v8 = v7;
    swift_retain();
    sub_1D42EE498(v8, (uint64_t)a2, a3);
    goto LABEL_7;
  }
  type metadata accessor for FMIPWithdrawShareAction(0);
  uint64_t v9 = swift_dynamicCastClass();
  if (v9)
  {
    uint64_t v10 = v9;
    swift_retain();
    sub_1D42EDAF8(v10, (uint64_t)a2, a3);
    goto LABEL_7;
  }
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D4469928();
  sub_1D42D7FAC(v12, (uint64_t)qword_1EBD831A0);
  swift_retain_n();
  uint64_t v13 = sub_1D44698F8();
  os_log_type_t v14 = sub_1D446A018();
  if (os_log_type_enabled(v13, v14))
  {
    int64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v20 = v16;
    *(_DWORD *)int64_t v15 = 136315138;
    swift_retain();
    uint64_t v17 = sub_1D4422B60();
    unint64_t v19 = v18;
    swift_release();
    sub_1D42CB9EC(v17, v19, &v20);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1D4271000, v13, v14, "FMIPBeaconSharingController: Unknown action received: %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v16, -1, -1);
    MEMORY[0x1D9447730](v15, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  LOBYTE(v20) = 4;
  return a2(&v20, 0);
}

uint64_t sub_1D42ECA88(uint64_t a1, void (*a2)(void, void, void), uint64_t a3)
{
  uint64_t v6 = sub_1D42D5DA0((uint64_t *)&unk_1EA6C9468);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v63 = (uint64_t)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D4469688();
  uint64_t v66 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  id v62 = (char *)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore19FMIPShareItemAction_handles);
  aBlock[0] = MEMORY[0x1E4FBC860];
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v64 = v12;
  uint64_t v65 = a2;
  if (v15)
  {
    v61[0] = a1;
    uint64_t v16 = a3;
    uint64_t v17 = self;
    swift_bridgeObjectRetain_n();
    uint64_t v18 = v14 + 40;
    do
    {
      swift_bridgeObjectRetain();
      unint64_t v19 = (void *)sub_1D4469B08();
      swift_bridgeObjectRelease();
      id v20 = objc_msgSend(v17, sel_handleWithString_, v19);

      if (v20)
      {
        MEMORY[0x1D94460A0]();
        if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
          sub_1D4469DB8();
        sub_1D4469E08();
        sub_1D4469D98();
      }
      v18 += 16;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    unint64_t v21 = aBlock[0];
    a3 = v16;
    uint64_t v11 = v64;
    a2 = v65;
    a1 = v61[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v21 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1D4351A40(v21);
  swift_bridgeObjectRelease();
  uint64_t v23 = v66;
  if ((v22 & 0xC000000000000001) != 0) {
    uint64_t v24 = sub_1D446A278();
  }
  else {
    uint64_t v24 = *(void *)(v22 + 16);
  }
  if (!v24)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v25 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item + 352);
  unint64_t v26 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item + 360);
  sub_1D4469628();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1D4276C3C((uint64_t)v10, (uint64_t *)&unk_1EBD7E930);
LABEL_17:
    if (qword_1EBD7E7C0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1D4469928();
    sub_1D42D7FAC(v27, (uint64_t)qword_1EBD831A0);
    swift_retain_n();
    uint64_t v28 = sub_1D44698F8();
    os_log_type_t v29 = sub_1D446A038();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      aBlock[0] = v66;
      *(_DWORD *)uint64_t v30 = 136315394;
      uint64_t v31 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item + 352);
      unint64_t v32 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item + 360);
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_1D42CB9EC(v31, v32, aBlock);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      uint64_t v33 = swift_bridgeObjectRetain();
      uint64_t v34 = MEMORY[0x1D94460F0](v33, MEMORY[0x1E4FBB1A0]);
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
      uint64_t v68 = sub_1D42CB9EC(v34, v36, aBlock);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v28, v29, "FMIPBeaconSharingController: Failed to run a share action for item: %s to %s", (uint8_t *)v30, 0x16u);
      uint64_t v37 = v66;
      swift_arrayDestroy();
      a2 = v65;
      MEMORY[0x1D9447730](v37, -1, -1);
      MEMORY[0x1D9447730](v30, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v38 = v63;
    LOBYTE(aBlock[0]) = 4;
    sub_1D42F8828(a1 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, v63, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v39 = type metadata accessor for FMIPItem();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 0, 1, v39);
    unint64_t v40 = sub_1D43AA34C(MEMORY[0x1E4FBC860]);
    a2(aBlock, v38, v40);
    swift_bridgeObjectRelease();
    return sub_1D4276C3C(v38, (uint64_t *)&unk_1EA6C9468);
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v62, v10, v11);
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v63 = a3;
  uint64_t v42 = sub_1D4469928();
  sub_1D42D7FAC(v42, (uint64_t)qword_1EBD831A0);
  swift_retain_n();
  uint64_t v43 = sub_1D44698F8();
  os_log_type_t v44 = sub_1D446A038();
  int v45 = v44;
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v46 = swift_slowAlloc();
    LODWORD(v61[0]) = v45;
    uint64_t v47 = v46;
    uint64_t v48 = swift_slowAlloc();
    aBlock[0] = v48;
    *(_DWORD *)uint64_t v47 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_1D42CB9EC(v25, v26, aBlock);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2080;
    uint64_t v49 = swift_bridgeObjectRetain();
    uint64_t v50 = MEMORY[0x1D94460F0](v49, MEMORY[0x1E4FBB1A0]);
    uint64_t v51 = a1;
    unint64_t v53 = v52;
    swift_bridgeObjectRelease();
    uint64_t v68 = sub_1D42CB9EC(v50, v53, aBlock);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v43, v61[0], "FMIPBeaconSharingController: Sending share action for item: %s to %s", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v48, -1, -1);
    MEMORY[0x1D9447730](v47, -1, -1);
  }
  else
  {

    swift_release_n();
    uint64_t v51 = a1;
  }
  unint64_t v54 = v62;
  uint64_t v55 = *(void **)(v61[1] + 112);
  uint64_t v56 = (void *)sub_1D4469648();
  sub_1D4275AD0(0, &qword_1EA6C9478);
  sub_1D42B2630((unint64_t *)&qword_1EA6C9480, &qword_1EA6C9478);
  uint64_t v57 = (void *)sub_1D4469EC8();
  swift_bridgeObjectRelease();
  id v58 = (void *)swift_allocObject();
  uint64_t v59 = v65;
  void v58[2] = v51;
  v58[3] = v59;
  v58[4] = v63;
  aBlock[4] = (uint64_t)sub_1D42F9834;
  uint64_t aBlock[5] = (uint64_t)v58;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = (uint64_t)sub_1D42EDA20;
  uint64_t aBlock[3] = (uint64_t)&unk_1F2C04E20;
  unint64_t v60 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v55, sel_share_recipients_completion_, v56, v57, v60);
  _Block_release(v60);

  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v54, v64);
}

uint64_t sub_1D42ED3AC(int a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void))
{
  uint64_t v8 = sub_1D42D5DA0((uint64_t *)&unk_1EA6C9468);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1D4469928();
  sub_1D42D7FAC(v11, (uint64_t)qword_1EBD831A0);
  swift_retain_n();
  uint64_t v12 = sub_1D44698F8();
  os_log_type_t v13 = sub_1D446A038();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    int v33 = v14;
    uint64_t v16 = v15;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v38 = v32;
    *(_DWORD *)uint64_t v16 = 136315650;
    int v35 = a1;
    unint64_t v36 = a4;
    uint64_t v34 = a2;
    uint64_t v18 = *(void *)(a3 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item + 352);
    unint64_t v17 = *(void *)(a3 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item + 360);
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1D42CB9EC(v18, v17, &v38);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v19 = swift_bridgeObjectRetain();
    uint64_t v20 = MEMORY[0x1D94460F0](v19, MEMORY[0x1E4FBB1A0]);
    unint64_t v22 = v21;
    a2 = v34;
    swift_bridgeObjectRelease();
    uint64_t v37 = sub_1D42CB9EC(v20, v22, &v38);
    a4 = v36;
    LOBYTE(a1) = v35;
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 1024;
    LODWORD(v37) = a1 & 1;
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v12, (os_log_type_t)v33, "FMIPBeaconSharingController: Share action for item: %s sent to %s: %{BOOL}d", (uint8_t *)v16, 0x1Cu);
    uint64_t v23 = v32;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v23, -1, -1);
    MEMORY[0x1D9447730](v16, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  sub_1D42ED7CC(a2);
  if (*(void *)(v24 + 16))
  {
    sub_1D42D5DA0(&qword_1EA6C9488);
    uint64_t v25 = sub_1D446A4C8();
  }
  else
  {
    uint64_t v25 = MEMORY[0x1E4FBC868];
  }
  uint64_t v38 = v25;
  unint64_t v26 = (void *)swift_bridgeObjectRetain();
  sub_1D42F5638(v26, 1, &v38);
  swift_bridgeObjectRelease();
  if (a1) {
    char v27 = 2;
  }
  else {
    char v27 = 4;
  }
  uint64_t v28 = v38;
  LOBYTE(v38) = v27;
  sub_1D42F8828(a3 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v29 = type metadata accessor for FMIPItem();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v10, 0, 1, v29);
  a4(&v38, v10, v28);
  swift_release();
  return sub_1D4276C3C((uint64_t)v10, (uint64_t *)&unk_1EA6C9468);
}

void sub_1D42ED7CC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1D4337050(0, v1, 0);
    uint64_t v4 = sub_1D4407B88(a1);
    uint64_t v5 = 0;
    uint64_t v6 = a1 + 64;
    int64_t v24 = v1;
    int v25 = v3;
    uint64_t v26 = a1 + 64;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v9 = (unint64_t)v4 >> 6;
      if ((*(void *)(v6 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
        goto LABEL_23;
      }
      if (*(_DWORD *)(a1 + 36) != v3) {
        goto LABEL_24;
      }
      uint64_t v27 = v5;
      uint64_t v10 = *(void **)(*(void *)(a1 + 56) + 8 * v4);
      id v11 = *(id *)(*(void *)(a1 + 48) + 8 * v4);
      id v12 = v10;
      id v13 = objc_msgSend(v11, sel_destination);
      uint64_t v28 = sub_1D4469B38();
      uint64_t v15 = v14;

      unint64_t v17 = *(void *)(v29 + 16);
      unint64_t v16 = *(void *)(v29 + 24);
      if (v17 >= v16 >> 1) {
        sub_1D4337050(v16 > 1, v17 + 1, 1);
      }
      *(void *)(v29 + 16) = v17 + 1;
      uint64_t v18 = (void *)(v29 + 24 * v17);
      v18[4] = v28;
      v18[5] = v15;
      void v18[6] = v10;
      int64_t v7 = 1 << *(unsigned char *)(a1 + 32);
      if (v4 >= v7) {
        goto LABEL_25;
      }
      uint64_t v6 = a1 + 64;
      uint64_t v19 = *(void *)(v26 + 8 * v9);
      if ((v19 & (1 << v4)) == 0) {
        goto LABEL_26;
      }
      int v3 = v25;
      if (*(_DWORD *)(a1 + 36) != v25) {
        goto LABEL_27;
      }
      unint64_t v20 = v19 & (-2 << (v4 & 0x3F));
      if (v20)
      {
        int64_t v7 = __clz(__rbit64(v20)) | v4 & 0xFFFFFFFFFFFFFFC0;
        int64_t v8 = v24;
      }
      else
      {
        unint64_t v21 = v9 + 1;
        unint64_t v22 = (unint64_t)(v7 + 63) >> 6;
        int64_t v8 = v24;
        if (v9 + 1 < v22)
        {
          unint64_t v23 = *(void *)(v26 + 8 * v21);
          if (v23)
          {
LABEL_20:
            int64_t v7 = __clz(__rbit64(v23)) + (v21 << 6);
          }
          else
          {
            while (v22 - 2 != v9)
            {
              unint64_t v23 = *(void *)(a1 + 80 + 8 * v9++);
              if (v23)
              {
                unint64_t v21 = v9 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      uint64_t v5 = v27 + 1;
      uint64_t v4 = v7;
      if (v27 + 1 == v8) {
        return;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

uint64_t sub_1D42EDA20(uint64_t a1, uint64_t a2)
{
  int v3 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  sub_1D4275AD0(0, &qword_1EA6C9478);
  sub_1D42D5DA0(&qword_1EA6C9360);
  sub_1D42B2630((unint64_t *)&qword_1EA6C9480, &qword_1EA6C9478);
  uint64_t v4 = sub_1D4469A58();
  swift_retain();
  v3(a2, v4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42EDAF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D42EE4C0(a1, a2, a3, "FMIPBeaconSharingController: Withdrawing share: %s", (uint64_t)&unk_1F2C04C78, (uint64_t)&unk_1EA6C9328);
}

uint64_t sub_1D42EDB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  uint64_t v9 = *(void *)(type metadata accessor for FMIPBeaconShareStateOverride(0) - 8);
  v7[13] = v9;
  v7[14] = *(void *)(v9 + 64);
  v7[15] = swift_task_alloc();
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = OBJC_IVAR____TtC8FMIPCore21FMIPItemSharingAction_shareIdentifier;
  v7[16] = v10;
  v7[17] = v11;
  v7[8] = 0x8000000000000038;
  return MEMORY[0x1F4188298](sub_1D42EDC14, a4, 0);
}

uint64_t sub_1D42EDC14()
{
  uint64_t v1 = v0[9];
  sub_1D42EBE84(v0[10] + v0[17], v0 + 8, v0[16]);
  v0[18] = *(void *)(v1 + 112);
  return MEMORY[0x1F4188298](sub_1D42EDC90, 0, 0);
}

uint64_t sub_1D42EDC90()
{
  id v13 = *(id *)(v0 + 144);
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 72);
  long long v12 = *(_OWORD *)(v0 + 80);
  uint64_t v6 = (void *)sub_1D4469648();
  sub_1D42F8828(v1, v2, type metadata accessor for FMIPBeaconShareStateOverride);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v12;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v5;
  sub_1D42F9638(v2, v8 + v7, type metadata accessor for FMIPBeaconShareStateOverride);
  *(void *)(v0 + 48) = sub_1D42F8FC4;
  *(void *)(v0 + 56) = v8;
  *(void *)(v0 + 16) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_1D4276428;
  *(void *)(v0 + 40) = &unk_1F2C04CB8;
  uint64_t v9 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_removeShare_completion_, v6, v9);
  _Block_release(v9);

  sub_1D42F88BC(v1, type metadata accessor for FMIPBeaconShareStateOverride);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1D42EDE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1D42FA0B8, a4, 0);
}

uint64_t sub_1D42EDEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D42EE4C0(a1, a2, a3, "FMIPBeaconSharingController: Accepting share: %s", (uint64_t)&unk_1F2C04BD8, (uint64_t)&unk_1EA6C9308);
}

uint64_t sub_1D42EDEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  uint64_t v10 = *(void *)(type metadata accessor for FMIPBeaconShareStateOverride(0) - 8);
  v7[14] = v10;
  v7[15] = *(void *)(v10 + 64);
  v7[16] = swift_task_alloc();
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = OBJC_IVAR____TtC8FMIPCore21FMIPItemSharingAction_shareIdentifier;
  v7[17] = v11;
  v7[18] = v12;
  uint64_t v13 = a5 + v12;
  uint64_t v14 = (void *)swift_task_alloc();
  v7[19] = v14;
  *uint64_t v14 = v7;
  v14[3] = v13;
  v14[4] = a4;
  v14[1] = sub_1D42EE00C;
  void v14[2] = v7 + 8;
  return MEMORY[0x1F4188298](sub_1D42EC5B8, a4, 0);
}

uint64_t sub_1D42EE00C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D42EE108, 0, 0);
}

uint64_t sub_1D42EE108()
{
  uint64_t v1 = v0[10];
  unint64_t v2 = v0[8];
  v0[20] = v2;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  v0[9] = v3;
  sub_1D42E8690(v2);
  return MEMORY[0x1F4188298](sub_1D42EE198, v1, 0);
}

uint64_t sub_1D42EE198()
{
  uint64_t v1 = v0[10];
  sub_1D42EBE84(v0[11] + v0[18], v0 + 9, v0[17]);
  sub_1D42E8A94(v0[9]);
  v0[21] = *(void *)(v1 + 112);
  return MEMORY[0x1F4188298](sub_1D42EE21C, 0, 0);
}

uint64_t sub_1D42EE21C()
{
  id v13 = *(id *)(v0 + 168);
  unint64_t v14 = *(void *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 80);
  long long v12 = *(_OWORD *)(v0 + 88);
  uint64_t v6 = (void *)sub_1D4469648();
  sub_1D42F8828(v1, v2, type metadata accessor for FMIPBeaconShareStateOverride);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v12;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v5;
  sub_1D42F9638(v2, v8 + v7, type metadata accessor for FMIPBeaconShareStateOverride);
  *(void *)(v0 + 48) = sub_1D42F8C10;
  *(void *)(v0 + 56) = v8;
  *(void *)(v0 + 16) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_1D4276428;
  *(void *)(v0 + 40) = &unk_1F2C04C18;
  uint64_t v9 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_acceptShare_completion_, v6, v9);
  _Block_release(v9);

  sub_1D42E8A94(v14);
  sub_1D42F88BC(v1, type metadata accessor for FMIPBeaconShareStateOverride);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1D42EE418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1D42EE438, a4, 0);
}

uint64_t sub_1D42EE438()
{
  sub_1D42EC254(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D42EE498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D42EE4C0(a1, a2, a3, "FMIPBeaconSharingController: Declining share: %s", (uint64_t)&unk_1F2C04B10, (uint64_t)&unk_1EA6C92E8);
}

uint64_t sub_1D42EE4C0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v34 = a4;
  uint64_t v9 = v6;
  uint64_t v13 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1D4469928();
  sub_1D42D7FAC(v16, (uint64_t)qword_1EBD831A0);
  swift_retain_n();
  unint64_t v17 = sub_1D44698F8();
  os_log_type_t v18 = sub_1D446A038();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v31 = a2;
    unint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v32 = v6;
    uint64_t v22 = v21;
    v30[1] = a5;
    *(_DWORD *)unint64_t v20 = 136315138;
    uint64_t v36 = v21;
    uint64_t v33 = a6;
    v30[0] = v20 + 4;
    sub_1D4469688();
    sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
    uint64_t v23 = sub_1D446A6D8();
    uint64_t v35 = sub_1D42CB9EC(v23, v24, &v36);
    a6 = v33;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1D4271000, v17, v18, v34, v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v25 = v22;
    uint64_t v9 = v32;
    MEMORY[0x1D9447730](v25, -1, -1);
    uint64_t v26 = v20;
    a2 = v31;
    MEMORY[0x1D9447730](v26, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  uint64_t v27 = sub_1D4469E88();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v15, 1, 1, v27);
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = v9;
  v28[5] = a1;
  v28[6] = a2;
  v28[7] = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D43733DC((uint64_t)v15, a6, (uint64_t)v28);
  return swift_release();
}

uint64_t sub_1D42EE7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  uint64_t v10 = *(void *)(type metadata accessor for FMIPBeaconShareStateOverride(0) - 8);
  v7[14] = v10;
  v7[15] = *(void *)(v10 + 64);
  v7[16] = swift_task_alloc();
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = OBJC_IVAR____TtC8FMIPCore21FMIPItemSharingAction_shareIdentifier;
  v7[17] = v11;
  v7[18] = v12;
  uint64_t v13 = a5 + v12;
  uint64_t v14 = (void *)swift_task_alloc();
  v7[19] = v14;
  *uint64_t v14 = v7;
  v14[3] = v13;
  v14[4] = a4;
  v14[1] = sub_1D42EE918;
  void v14[2] = v7 + 8;
  return MEMORY[0x1F4188298](sub_1D42EC5B8, a4, 0);
}

uint64_t sub_1D42EE918()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D42EEA14, 0, 0);
}

uint64_t sub_1D42EEA14()
{
  uint64_t v1 = v0[10];
  unint64_t v2 = v0[8];
  v0[20] = v2;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  v0[9] = v3 | 0x4000000000000000;
  sub_1D42E8690(v2);
  return MEMORY[0x1F4188298](sub_1D42EEAA8, v1, 0);
}

uint64_t sub_1D42EEAA8()
{
  uint64_t v1 = v0[10];
  sub_1D42EBE84(v0[11] + v0[18], v0 + 9, v0[17]);
  sub_1D42E8A94(v0[9]);
  v0[21] = *(void *)(v1 + 112);
  return MEMORY[0x1F4188298](sub_1D42EEB2C, 0, 0);
}

uint64_t sub_1D42EEB2C()
{
  id v13 = *(id *)(v0 + 168);
  unint64_t v14 = *(void *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 80);
  long long v12 = *(_OWORD *)(v0 + 88);
  uint64_t v6 = (void *)sub_1D4469648();
  sub_1D42F8828(v1, v2, type metadata accessor for FMIPBeaconShareStateOverride);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v12;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v5;
  sub_1D42F9638(v2, v8 + v7, type metadata accessor for FMIPBeaconShareStateOverride);
  *(void *)(v0 + 48) = sub_1D42F8894;
  *(void *)(v0 + 56) = v8;
  *(void *)(v0 + 16) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_1D4276428;
  *(void *)(v0 + 40) = &unk_1F2C04B78;
  uint64_t v9 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_declineShare_completion_, v6, v9);
  _Block_release(v9);

  sub_1D42E8A94(v14);
  sub_1D42F88BC(v1, type metadata accessor for FMIPBeaconShareStateOverride);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1D42EED28(int a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, const char *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v42 = a8;
  uint64_t v45 = a5;
  uint64_t v46 = a4;
  uint64_t v44 = a2;
  int v43 = a1;
  uint64_t v12 = a10;
  uint64_t v13 = type metadata accessor for FMIPBeaconShareStateOverride(0);
  uint64_t v47 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v47 + 64);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v48 = (uint64_t)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v15 - 8);
  unint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1D4469928();
  sub_1D42D7FAC(v18, (uint64_t)qword_1EBD831A0);
  swift_retain_n();
  uint64_t v19 = sub_1D44698F8();
  os_log_type_t v20 = sub_1D446A038();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v38 = a7;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v39 = a9;
    uint64_t v24 = v23;
    uint64_t v50 = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v41 = a6;
    sub_1D4469688();
    uint64_t v40 = a10;
    sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
    uint64_t v25 = sub_1D446A6D8();
    uint64_t v49 = sub_1D42CB9EC(v25, v26, &v50);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v22 + 12) = 2080;
    char v27 = v43;
    if (v43) {
      uint64_t v28 = 0x73736563637573;
    }
    else {
      uint64_t v28 = 0x64656C696166;
    }
    if (v43) {
      unint64_t v29 = 0xE700000000000000;
    }
    else {
      unint64_t v29 = 0xE600000000000000;
    }
    uint64_t v49 = sub_1D42CB9EC(v28, v29, &v50);
    uint64_t v12 = v40;
    a6 = v41;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v19, v20, v42, (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v24, -1, -1);
    uint64_t v30 = v22;
    a7 = v38;
    MEMORY[0x1D9447730](v30, -1, -1);
  }
  else
  {
    swift_release_n();

    char v27 = v43;
  }
  if (v27) {
    char v31 = 2;
  }
  else {
    char v31 = 4;
  }
  LOBYTE(v50) = v31;
  v46(&v50, v44);
  uint64_t v32 = sub_1D4469E88();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v17, 1, 1, v32);
  uint64_t v33 = v48;
  sub_1D42F8828(a7, v48, type metadata accessor for FMIPBeaconShareStateOverride);
  unint64_t v34 = (*(unsigned __int8 *)(v47 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v35 = (void *)swift_allocObject();
  _OWORD v35[2] = 0;
  v35[3] = 0;
  v35[4] = a6;
  sub_1D42F9638(v33, (uint64_t)v35 + v34, type metadata accessor for FMIPBeaconShareStateOverride);
  swift_retain();
  sub_1D43733DC((uint64_t)v17, v12, (uint64_t)v35);
  return swift_release();
}

void sub_1D42EF180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D4469928();
  sub_1D42D7FAC(v7, (uint64_t)qword_1EBD831A0);
  swift_retain_n();
  uint64_t v8 = sub_1D44698F8();
  os_log_type_t v9 = sub_1D446A038();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    aBlock[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    sub_1D4469688();
    sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
    uint64_t v12 = sub_1D446A6D8();
    sub_1D42CB9EC(v12, v13, aBlock);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v8, v9, "FMIPBeaconSharingController: Requesting share of beacon: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v11, -1, -1);
    MEMORY[0x1D9447730](v10, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v14 = *(void **)(v3 + 112);
  uint64_t v15 = (void *)sub_1D4469648();
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a1;
  void v16[3] = a2;
  v16[4] = a3;
  aBlock[4] = (uint64_t)sub_1D42F97E4;
  uint64_t aBlock[5] = (uint64_t)v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = (uint64_t)sub_1D4276428;
  uint64_t aBlock[3] = (uint64_t)&unk_1F2C04DD0;
  unint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_requestShare_completion_, v15, v17);
  _Block_release(v17);
}

uint64_t sub_1D42EF488(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void))
{
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D4469928();
  sub_1D42D7FAC(v7, (uint64_t)qword_1EBD831A0);
  swift_retain_n();
  uint64_t v8 = sub_1D44698F8();
  os_log_type_t v9 = sub_1D446A038();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v19 = v11;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v18 = a4;
    sub_1D4469688();
    sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
    uint64_t v12 = sub_1D446A6D8();
    sub_1D42CB9EC(v12, v13, &v19);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    if (a1) {
      uint64_t v14 = 0x73736563637573;
    }
    else {
      uint64_t v14 = 0x64656C696166;
    }
    if (a1) {
      unint64_t v15 = 0xE700000000000000;
    }
    else {
      unint64_t v15 = 0xE600000000000000;
    }
    sub_1D42CB9EC(v14, v15, &v19);
    sub_1D446A188();
    a4 = v18;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v8, v9, "FMIPBeaconSharingController: Share request for beacon action completed: %s, status: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v11, -1, -1);
    MEMORY[0x1D9447730](v10, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  if (a1) {
    char v16 = 2;
  }
  else {
    char v16 = 4;
  }
  LOBYTE(v19) = v16;
  return a4(&v19, a2);
}

void sub_1D42EF744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D4469928();
  sub_1D42D7FAC(v7, (uint64_t)qword_1EBD831A0);
  swift_retain_n();
  uint64_t v8 = sub_1D44698F8();
  os_log_type_t v9 = sub_1D446A038();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v22 = a3;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    aBlock[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    sub_1D4469688();
    sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
    uint64_t v12 = sub_1D446A6D8();
    sub_1D42CB9EC(v12, v13, aBlock);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1D4271000, v8, v9, "FMIPBeaconSharingController: Requesting share of beacon: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v11, -1, -1);
    uint64_t v14 = v10;
    a3 = v22;
    MEMORY[0x1D9447730](v14, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  id v15 = objc_allocWithZone(MEMORY[0x1E4F97C00]);
  char v16 = (void *)sub_1D4469648();
  id v17 = objc_msgSend(v15, sel_initWithBeaconIdentifier_, v16);

  uint64_t v18 = *(void **)(v4 + 112);
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = a2;
  v19[3] = a3;
  v19[4] = v4;
  v19[5] = v17;
  aBlock[4] = (uint64_t)sub_1D42F9908;
  uint64_t aBlock[5] = (uint64_t)v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = (uint64_t)sub_1D42EFDF8;
  uint64_t aBlock[3] = (uint64_t)&unk_1F2C04EC0;
  os_log_type_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v21 = v17;
  swift_release();
  objc_msgSend(v18, sel_isBeaconDelegated_completion_, v21, v20);
  _Block_release(v20);
}

void sub_1D42EFA7C(uint64_t a1, uint64_t a2, void (*a3)(void *, char *, void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_1D42D5DA0(&qword_1EBD7E918);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  char v16 = (char *)aBlock - v15;
  uint64_t v17 = sub_1D4469498();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  os_log_type_t v20 = (char *)aBlock - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42E83D0(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1D4276C3C((uint64_t)v16, &qword_1EBD7E918);
    id v21 = *(void **)(a5 + 112);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a3;
    *(void *)(v22 + 24) = a4;
    aBlock[4] = sub_1D42F9914;
    uint64_t aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1D42EFDF8;
    uint64_t aBlock[3] = &unk_1F2C04F10;
    uint64_t v23 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v21, sel_delegatedShare_completion_, a6, v23);
    _Block_release(v23);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    LOBYTE(aBlock[0]) = 2;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v14, v20, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
    a3(aBlock, v14, 0);
    sub_1D4276C3C((uint64_t)v14, &qword_1EBD7E918);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
}

uint64_t sub_1D42EFD58(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, uint64_t, uint64_t))
{
  uint64_t v6 = sub_1D4469498();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(a1, 1, v6) == 1) {
    char v7 = 4;
  }
  else {
    char v7 = 2;
  }
  char v9 = v7;
  return a3(&v9, a1, a2);
}

uint64_t sub_1D42EFDF8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_1D4469468();
    uint64_t v10 = sub_1D4469498();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = sub_1D4469498();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  id v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_1D4276C3C((uint64_t)v8, &qword_1EBD7E918);
}

void sub_1D42EFF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D4469928();
  sub_1D42D7FAC(v7, (uint64_t)qword_1EBD831A0);
  swift_retain_n();
  uint64_t v8 = sub_1D44698F8();
  os_log_type_t v9 = sub_1D446A038();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v22 = a2;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    aBlock[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    sub_1D4469688();
    sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
    uint64_t v12 = sub_1D446A6D8();
    sub_1D42CB9EC(v12, v13, aBlock);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v8, v9, "FMIPBeaconSharingController: Stop delegated share of beacon: %s", v10, 0xCu);
    swift_arrayDestroy();
    uint64_t v14 = v11;
    uint64_t v4 = v3;
    MEMORY[0x1D9447730](v14, -1, -1);
    uint64_t v15 = v10;
    a2 = v22;
    MEMORY[0x1D9447730](v15, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  id v16 = objc_allocWithZone(MEMORY[0x1E4F97C00]);
  uint64_t v17 = (void *)sub_1D4469648();
  id v18 = objc_msgSend(v16, sel_initWithBeaconIdentifier_, v17);

  uint64_t v19 = *(void **)(v4 + 112);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a2;
  *(void *)(v20 + 24) = a3;
  aBlock[4] = (uint64_t)sub_1D42F9878;
  uint64_t aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = (uint64_t)sub_1D4276428;
  uint64_t aBlock[3] = (uint64_t)&unk_1F2C04E70;
  id v21 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v19, sel_stopTemporaryItemLocationShare_completion_, v18, v21);
  _Block_release(v21);
}

uint64_t sub_1D42F0260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1D4469928();
  sub_1D42D7FAC(v11, (uint64_t)qword_1EBD831A0);
  swift_retain_n();
  uint64_t v12 = sub_1D44698F8();
  os_log_type_t v13 = sub_1D446A038();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v24 = a2;
    uint64_t v15 = v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v27 = v16;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v25 = v3;
    sub_1D4469688();
    sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
    uint64_t v17 = sub_1D446A6D8();
    uint64_t v26 = sub_1D42CB9EC(v17, v18, &v27);
    uint64_t v4 = v25;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v15 + 12) = 1024;
    int v19 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_force);
    swift_release();
    LODWORD(v26) = v19;
    sub_1D446A188();
    swift_release();
    _os_log_impl(&dword_1D4271000, v12, v13, "FMIPBeaconSharingController: Stopping sharing of beacon: %s, forced? %{BOOL}d", (uint8_t *)v15, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v16, -1, -1);
    uint64_t v20 = v15;
    a2 = v24;
    MEMORY[0x1D9447730](v20, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  uint64_t v21 = sub_1D4469E88();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 1, 1, v21);
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = 0;
  v22[3] = 0;
  v22[4] = v4;
  void v22[5] = a1;
  v22[6] = a2;
  v22[7] = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D43733DC((uint64_t)v10, (uint64_t)&unk_1EA6C9448, (uint64_t)v22);
  return swift_release();
}

uint64_t sub_1D42F05A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[54] = a6;
  v7[55] = a7;
  v7[52] = a4;
  v7[53] = a5;
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  v7[56] = swift_task_alloc();
  uint64_t v9 = sub_1D4469688();
  v7[57] = v9;
  v7[58] = *(void *)(v9 - 8);
  v7[59] = swift_task_alloc();
  v7[60] = *(void *)(type metadata accessor for FMIPBeaconShareStateOverride(0) - 8);
  v7[61] = swift_task_alloc();
  v7[62] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for FMIPBeaconShare(0);
  v7[63] = v10;
  v7[64] = *(void *)(v10 - 8);
  v7[65] = swift_task_alloc();
  v7[66] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D42F0774, a4, 0);
}

uint64_t sub_1D42F0774()
{
  *(void *)(v0 + 536) = *(void *)(*(void *)(v0 + 416) + 144);
  swift_bridgeObjectRetain();
  return MEMORY[0x1F4188298](sub_1D42F07E8, 0, 0);
}

uint64_t sub_1D42F07E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(v3 + 536);
  char v6 = *(unsigned char *)(v5 + 32);
  *(unsigned char *)(v3 + 667) = v6;
  uint64_t v7 = 1 << v6;
  uint64_t v8 = *(void *)(v5 + 56);
  BOOL v9 = v7 < 64;
  uint64_t v10 = -1 << v7;
  if (v9) {
    uint64_t v11 = ~v10;
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v8;
  *(void *)(v3 + 544) = OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_beaconIdentifier;
  *(void *)(v3 + 552) = MEMORY[0x1E4FBC860];
  if ((v11 & v8) == 0) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v13 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  unint64_t v14 = v13 | (v4 << 6);
  a1 = *(void *)(v3 + 536);
  while (1)
  {
    *(void *)(v3 + 568) = v12;
    *(void *)(v3 + 560) = v4;
    uint64_t v20 = *(void *)(v3 + 528);
    uint64_t v21 = *(void *)(v3 + 520);
    sub_1D42F8828(*(void *)(a1 + 48) + *(void *)(*(void *)(v3 + 512) + 72) * v14, v20, type metadata accessor for FMIPBeaconShare);
    sub_1D42F9638(v20, v21, type metadata accessor for FMIPBeaconShare);
    if (sub_1D4469658())
    {
      uint64_t v22 = *(void *)(v3 + 416);
      (*(void (**)(void, void, void))(*(void *)(v3 + 464) + 16))(*(void *)(v3 + 472), *(void *)(v3 + 520), *(void *)(v3 + 456));
      *(void *)(v3 + 408) = 0x8000000000000038;
      a1 = (uint64_t)sub_1D42F0A8C;
      a2 = v22;
      goto LABEL_28;
    }
    a1 = sub_1D42F88BC(*(void *)(v3 + 520), type metadata accessor for FMIPBeaconShare);
    if (v12) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      return MEMORY[0x1F4188298](a1, a2, a3);
    }
    int64_t v16 = (unint64_t)((1 << *(unsigned char *)(v3 + 667)) + 63) >> 6;
    a1 = *(void *)(v3 + 536);
    if (v15 >= v16) {
      goto LABEL_24;
    }
    uint64_t v17 = a1 + 56;
    unint64_t v18 = *(void *)(a1 + 56 + 8 * v15);
    ++v4;
    if (!v18)
    {
      int64_t v4 = v15 + 1;
      if (v15 + 1 >= v16) {
        goto LABEL_24;
      }
      unint64_t v18 = *(void *)(v17 + 8 * v4);
      if (!v18)
      {
        int64_t v4 = v15 + 2;
        if (v15 + 2 >= v16) {
          goto LABEL_24;
        }
        unint64_t v18 = *(void *)(v17 + 8 * v4);
        if (!v18) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v14 = __clz(__rbit64(v18)) + (v4 << 6);
  }
  int64_t v19 = v15 + 3;
  if (v19 < v16)
  {
    unint64_t v18 = *(void *)(v17 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        int64_t v4 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_32;
        }
        if (v4 >= v16) {
          goto LABEL_24;
        }
        unint64_t v18 = *(void *)(v17 + 8 * v4);
        ++v19;
        if (v18) {
          goto LABEL_19;
        }
      }
    }
    int64_t v4 = v19;
    goto LABEL_19;
  }
LABEL_24:
  uint64_t v23 = *(void *)(v3 + 424);
  swift_release();
  a2 = *(void *)(v3 + 416);
  if (*(unsigned char *)(v23 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_force)) {
    uint64_t v24 = sub_1D42F0E88;
  }
  else {
    uint64_t v24 = sub_1D42F1698;
  }
  a1 = (uint64_t)v24;
LABEL_28:
  a3 = 0;
  return MEMORY[0x1F4188298](a1, a2, a3);
}

uint64_t sub_1D42F0A8C()
{
  uint64_t v2 = v0[58];
  uint64_t v1 = v0[59];
  uint64_t v3 = v0[57];
  sub_1D42EBE84(v1, v0 + 51, v0[62]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x1F4188298](sub_1D42F0B28, 0, 0);
}

uint64_t sub_1D42F0B28()
{
  sub_1D42F8828(*(void *)(v0 + 496), *(void *)(v0 + 488), type metadata accessor for FMIPBeaconShareStateOverride);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v2 = *(void *)(v0 + 552);
  if (isUniquelyReferenced_nonNull_native) {
    goto LABEL_2;
  }
LABEL_33:
  uint64_t v2 = sub_1D43AFD5C(0, *(void *)(v2 + 16) + 1, 1, v2);
LABEL_2:
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1D43AFD5C(v3 > 1, v4 + 1, 1, v2);
  }
  uint64_t v5 = *(void *)(v0 + 520);
  uint64_t v6 = *(void *)(v0 + 488);
  uint64_t v7 = *(void *)(v0 + 496);
  uint64_t v8 = *(void *)(v0 + 480);
  *(void *)(v2 + 16) = v4 + 1;
  sub_1D42F9638(v6, v2+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v4, type metadata accessor for FMIPBeaconShareStateOverride);
  sub_1D42F88BC(v7, type metadata accessor for FMIPBeaconShareStateOverride);
  sub_1D42F88BC(v5, type metadata accessor for FMIPBeaconShare);
  unint64_t v9 = *(void *)(v0 + 568);
  int64_t v10 = *(void *)(v0 + 560);
  *(void *)(v0 + 552) = v2;
  if (v9)
  {
LABEL_5:
    unint64_t v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v12 = v11 | (v10 << 6);
    uint64_t v13 = *(void *)(v0 + 536);
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    int64_t v15 = (unint64_t)((1 << *(unsigned char *)(v0 + 667)) + 63) >> 6;
    uint64_t v13 = *(void *)(v0 + 536);
    if (v14 >= v15) {
      goto LABEL_24;
    }
    uint64_t v16 = v13 + 56;
    unint64_t v17 = *(void *)(v13 + 56 + 8 * v14);
    ++v10;
    if (!v17)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v15) {
        goto LABEL_24;
      }
      unint64_t v17 = *(void *)(v16 + 8 * v10);
      if (!v17)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v15) {
          goto LABEL_24;
        }
        unint64_t v17 = *(void *)(v16 + 8 * v10);
        if (!v17) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v12 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_20:
    *(void *)(v0 + 568) = v9;
    *(void *)(v0 + 560) = v10;
    uint64_t v2 = *(void *)(v0 + 528);
    uint64_t v19 = *(void *)(v0 + 520);
    sub_1D42F8828(*(void *)(v13 + 48) + *(void *)(*(void *)(v0 + 512) + 72) * v12, v2, type metadata accessor for FMIPBeaconShare);
    sub_1D42F9638(v2, v19, type metadata accessor for FMIPBeaconShare);
    if (sub_1D4469658())
    {
      uint64_t v20 = *(void *)(v0 + 416);
      (*(void (**)(void, void, void))(*(void *)(v0 + 464) + 16))(*(void *)(v0 + 472), *(void *)(v0 + 520), *(void *)(v0 + 456));
      *(void *)(v0 + 408) = 0x8000000000000038;
      uint64_t v21 = sub_1D42F0A8C;
      uint64_t v22 = v20;
      goto LABEL_28;
    }
    sub_1D42F88BC(*(void *)(v0 + 520), type metadata accessor for FMIPBeaconShare);
    if (v9) {
      goto LABEL_5;
    }
  }
  int64_t v18 = v14 + 3;
  if (v18 < v15)
  {
    unint64_t v17 = *(void *)(v16 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        int64_t v10 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          goto LABEL_32;
        }
        if (v10 >= v15) {
          goto LABEL_24;
        }
        unint64_t v17 = *(void *)(v16 + 8 * v10);
        ++v18;
        if (v17) {
          goto LABEL_19;
        }
      }
    }
    int64_t v10 = v18;
    goto LABEL_19;
  }
LABEL_24:
  uint64_t v23 = *(void *)(v0 + 424);
  swift_release();
  uint64_t v22 = *(void *)(v0 + 416);
  if (*(unsigned char *)(v23 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_force)) {
    uint64_t v24 = sub_1D42F0E88;
  }
  else {
    uint64_t v24 = sub_1D42F1698;
  }
  uint64_t v21 = v24;
LABEL_28:
  return MEMORY[0x1F4188298](v21, v22, 0);
}

uint64_t sub_1D42F0E88()
{
  *(void *)(v0 + 576) = *(void *)(*(void *)(v0 + 416) + 112);
  return MEMORY[0x1F4188298](sub_1D42F0EB0, 0, 0);
}

uint64_t sub_1D42F0EB0()
{
  uint64_t v1 = (void *)v0[72];
  uint64_t v2 = sub_1D4469648();
  v0[73] = v2;
  v0[2] = v0;
  v0[7] = (char *)v0 + 665;
  v0[3] = sub_1D42F0FD0;
  uint64_t v3 = swift_continuation_init();
  v0[26] = MEMORY[0x1E4F143A8];
  v0[27] = 0x40000000;
  v0[28] = sub_1D42E20DC;
  v0[29] = &unk_1E69E5D18;
  v0[30] = v3;
  objc_msgSend(v1, sel_forceStopSharing_completion_, v2, v0 + 26);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D42F0FD0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 592) = v1;
  if (v1) {
    uint64_t v2 = sub_1D42F23F0;
  }
  else {
    uint64_t v2 = sub_1D42F10E0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D42F10E0()
{
  uint64_t v28 = v0;

  p_superclass = &OBJC_METACLASS____TtC8FMIPCore27FMIPBeaconSharingController.superclass;
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD831A0);
  swift_retain_n();
  uint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v26 = v2;
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v27 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
    uint64_t v7 = sub_1D446A6D8();
    *(void *)(v0 + 360) = sub_1D42CB9EC(v7, v8, &v27);
    p_superclass = (__objc2_class **)(&OBJC_METACLASS____TtC8FMIPCore27FMIPBeaconSharingController + 8);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v3, v4, "Force Stopped sharing for beacon: %s succeeded", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v6, -1, -1);
    unint64_t v9 = v5;
    uint64_t v2 = v26;
    MEMORY[0x1D9447730](v9, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  *(void *)(v0 + 632) = *(void *)(v0 + 576);
  *(void *)(v0 + 624) = 0;
  if (*(unsigned char *)(*(void *)(v0 + 424) + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_isDelegated) == 1)
  {
    if (p_superclass[248] != (__objc2_class *)-1) {
      swift_once();
    }
    *(void *)(v0 + 640) = sub_1D42D7FAC(v2, (uint64_t)qword_1EBD831A0);
    swift_retain_n();
    int64_t v10 = sub_1D44698F8();
    os_log_type_t v11 = sub_1D446A038();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v27 = v13;
      *(_DWORD *)unint64_t v12 = 136315138;
      sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
      uint64_t v14 = sub_1D446A6D8();
      *(void *)(v0 + 328) = sub_1D42CB9EC(v14, v15, &v27);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v10, v11, "FMIPBeaconSharingController: Stop delegated share of beacon: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v13, -1, -1);
      MEMORY[0x1D9447730](v12, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    id v24 = objc_allocWithZone(MEMORY[0x1E4F97C00]);
    uint64_t v25 = (void *)sub_1D4469648();
    *(void *)(v0 + 648) = objc_msgSend(v24, sel_initWithBeaconIdentifier_, v25);

    return MEMORY[0x1F4188298](sub_1D42F1EA8, 0, 0);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 552);
    uint64_t v17 = *(void *)(v0 + 448);
    uint64_t v18 = *(void *)(v0 + 416);
    uint64_t v19 = sub_1D4469E88();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
    uint64_t v20 = (void *)swift_allocObject();
    void v20[2] = 0;
    v20[3] = 0;
    v20[4] = v16;
    v20[5] = v18;
    swift_retain();
    sub_1D43733DC(v17, (uint64_t)&unk_1EA6C9458, (uint64_t)v20);
    swift_release();
    uint64_t v21 = *(void (**)(uint64_t *, void))(v0 + 432);
    LOBYTE(v27) = 2;
    v21(&v27, 0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
}

uint64_t sub_1D42F1698()
{
  *(void *)(v0 + 600) = *(void *)(*(void *)(v0 + 416) + 112);
  return MEMORY[0x1F4188298](sub_1D42F16C0, 0, 0);
}

uint64_t sub_1D42F16C0()
{
  uint64_t v1 = (void *)v0[75];
  uint64_t v2 = sub_1D4469648();
  v0[76] = v2;
  v0[10] = v0;
  v0[15] = v0 + 83;
  v0[11] = sub_1D42F17E0;
  uint64_t v3 = swift_continuation_init();
  v0[31] = MEMORY[0x1E4F143A8];
  v0[32] = 0x40000000;
  v0[33] = sub_1D42E20DC;
  v0[34] = &unk_1E69E5CE8;
  v0[35] = v3;
  objc_msgSend(v1, sel_stopSharing_completion_, v2, v0 + 31);
  return MEMORY[0x1F41881E8](v0 + 10);
}

uint64_t sub_1D42F17E0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 616) = v1;
  if (v1) {
    uint64_t v2 = sub_1D42F2A90;
  }
  else {
    uint64_t v2 = sub_1D42F18F0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D42F18F0()
{
  uint64_t v28 = v0;

  p_superclass = &OBJC_METACLASS____TtC8FMIPCore27FMIPBeaconSharingController.superclass;
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD831A0);
  swift_retain_n();
  uint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v26 = v2;
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v27 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
    uint64_t v7 = sub_1D446A6D8();
    *(void *)(v0 + 384) = sub_1D42CB9EC(v7, v8, &v27);
    p_superclass = (__objc2_class **)(&OBJC_METACLASS____TtC8FMIPCore27FMIPBeaconSharingController + 8);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v3, v4, "Stopped sharing for beacon: %s succeeded", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v6, -1, -1);
    unint64_t v9 = v5;
    uint64_t v2 = v26;
    MEMORY[0x1D9447730](v9, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  *(void *)(v0 + 632) = *(void *)(v0 + 600);
  *(void *)(v0 + 624) = 0;
  if (*(unsigned char *)(*(void *)(v0 + 424) + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_isDelegated) == 1)
  {
    if (p_superclass[248] != (__objc2_class *)-1) {
      swift_once();
    }
    *(void *)(v0 + 640) = sub_1D42D7FAC(v2, (uint64_t)qword_1EBD831A0);
    swift_retain_n();
    int64_t v10 = sub_1D44698F8();
    os_log_type_t v11 = sub_1D446A038();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v27 = v13;
      *(_DWORD *)unint64_t v12 = 136315138;
      sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
      uint64_t v14 = sub_1D446A6D8();
      *(void *)(v0 + 328) = sub_1D42CB9EC(v14, v15, &v27);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v10, v11, "FMIPBeaconSharingController: Stop delegated share of beacon: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v13, -1, -1);
      MEMORY[0x1D9447730](v12, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    id v24 = objc_allocWithZone(MEMORY[0x1E4F97C00]);
    uint64_t v25 = (void *)sub_1D4469648();
    *(void *)(v0 + 648) = objc_msgSend(v24, sel_initWithBeaconIdentifier_, v25);

    return MEMORY[0x1F4188298](sub_1D42F1EA8, 0, 0);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 552);
    uint64_t v17 = *(void *)(v0 + 448);
    uint64_t v18 = *(void *)(v0 + 416);
    uint64_t v19 = sub_1D4469E88();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
    uint64_t v20 = (void *)swift_allocObject();
    void v20[2] = 0;
    v20[3] = 0;
    v20[4] = v16;
    v20[5] = v18;
    swift_retain();
    sub_1D43733DC(v17, (uint64_t)&unk_1EA6C9458, (uint64_t)v20);
    swift_release();
    uint64_t v21 = *(void (**)(uint64_t *, void))(v0 + 432);
    LOBYTE(v27) = 2;
    v21(&v27, 0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
}

uint64_t sub_1D42F1EA8()
{
  uint64_t v1 = v0[81];
  uint64_t v2 = (void *)v0[79];
  v0[18] = v0;
  v0[23] = (char *)v0 + 666;
  v0[19] = sub_1D42F1FAC;
  uint64_t v3 = swift_continuation_init();
  v0[36] = MEMORY[0x1E4F143A8];
  v0[37] = 0x40000000;
  v0[38] = sub_1D42E20DC;
  v0[39] = &unk_1E69E5D00;
  v0[40] = v3;
  objc_msgSend(v2, sel_stopTemporaryItemLocationShare_completion_, v1, v0 + 36);
  return MEMORY[0x1F41881E8](v0 + 18);
}

uint64_t sub_1D42F1FAC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  *(void *)(*(void *)v0 + 656) = v1;
  if (v1) {
    uint64_t v2 = sub_1D42F312C;
  }
  else {
    uint64_t v2 = sub_1D42F20BC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D42F20BC()
{
  uint64_t v22 = v0;
  swift_retain_n();
  uint64_t v1 = sub_1D44698F8();
  os_log_type_t v2 = sub_1D446A038();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v18 = (void *)v0[81];
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v21 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
    uint64_t v5 = sub_1D446A6D8();
    v0[44] = sub_1D42CB9EC(v5, v6, &v21);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v1, v2, "Stopped delegated share for beacon: %s succeeded", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v4, -1, -1);
    MEMORY[0x1D9447730](v3, -1, -1);
  }
  else
  {
    uint64_t v7 = (void *)v0[81];

    swift_release_n();
  }
  unint64_t v8 = (void *)v0[78];
  uint64_t v9 = v0[69];
  uint64_t v10 = v0[56];
  uint64_t v11 = v0[52];
  uint64_t v12 = sub_1D4469E88();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = 0;
  v13[3] = 0;
  v13[4] = v9;
  v13[5] = v11;
  swift_retain();
  sub_1D43733DC(v10, (uint64_t)&unk_1EA6C9458, (uint64_t)v13);
  swift_release();
  uint64_t v14 = (void (*)(char *, void *))v0[54];
  if (v8)
  {
    char v20 = 4;
    id v15 = v8;
    v14(&v20, v8);
  }
  else
  {
    char v19 = 2;
    v14(&v19, 0);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1D42F23F0()
{
  uint64_t v38 = v0;
  uint64_t v1 = (void *)v0[73];
  swift_willThrow();

  p_superclass = &OBJC_METACLASS____TtC8FMIPCore27FMIPBeaconSharingController.superclass;
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)v0[74];
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD831A0);
  swift_retain();
  id v5 = v3;
  swift_retain();
  id v6 = v3;
  uint64_t v7 = sub_1D44698F8();
  os_log_type_t v8 = sub_1D446A038();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = (void *)v0[74];
  if (v9)
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v35 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    v37[0] = v36;
    *(_DWORD *)uint64_t v11 = 136315394;
    sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
    uint64_t v12 = sub_1D446A6D8();
    v0[50] = sub_1D42CB9EC(v12, v13, v37);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2114;
    id v14 = v10;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[49] = v15;
    sub_1D446A188();
    void *v35 = v15;

    _os_log_impl(&dword_1D4271000, v7, v8, "forceStopSharing for %s failed due to %{public}@", (uint8_t *)v11, 0x16u);
    sub_1D42D5DA0(&qword_1EBD7E830);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v35, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v36, -1, -1);
    uint64_t v16 = v11;
    p_superclass = (__objc2_class **)(&OBJC_METACLASS____TtC8FMIPCore27FMIPBeaconSharingController + 8);
    MEMORY[0x1D9447730](v16, -1, -1);
  }
  else
  {
    swift_release_n();
  }
  uint64_t v17 = (void *)v0[74];
  v0[79] = v0[72];
  v0[78] = v17;
  if (*(unsigned char *)(v0[53] + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_isDelegated))
  {
    if (p_superclass[248] != (__objc2_class *)-1) {
      swift_once();
    }
    v0[80] = sub_1D42D7FAC(v4, (uint64_t)qword_1EBD831A0);
    swift_retain_n();
    uint64_t v18 = sub_1D44698F8();
    os_log_type_t v19 = sub_1D446A038();
    if (os_log_type_enabled(v18, v19))
    {
      char v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      v37[0] = v21;
      *(_DWORD *)char v20 = 136315138;
      sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
      uint64_t v22 = sub_1D446A6D8();
      v0[41] = sub_1D42CB9EC(v22, v23, v37);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v18, v19, "FMIPBeaconSharingController: Stop delegated share of beacon: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v21, -1, -1);
      MEMORY[0x1D9447730](v20, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    id v31 = objc_allocWithZone(MEMORY[0x1E4F97C00]);
    uint64_t v32 = (void *)sub_1D4469648();
    v0[81] = objc_msgSend(v31, sel_initWithBeaconIdentifier_, v32);

    return MEMORY[0x1F4188298](sub_1D42F1EA8, 0, 0);
  }
  else
  {
    uint64_t v24 = v0[69];
    uint64_t v25 = v0[56];
    uint64_t v26 = v0[52];
    uint64_t v27 = sub_1D4469E88();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v25, 1, 1, v27);
    uint64_t v28 = (void *)swift_allocObject();
    v28[2] = 0;
    v28[3] = 0;
    v28[4] = v24;
    v28[5] = v26;
    swift_retain();
    sub_1D43733DC(v25, (uint64_t)&unk_1EA6C9458, (uint64_t)v28);
    swift_release();
    uint64_t v29 = (void (*)(uint64_t *, void *))v0[54];
    if (v17)
    {
      LOBYTE(v37[0]) = 4;
      id v30 = v17;
      v29(v37, v17);
    }
    else
    {
      LOBYTE(v37[0]) = 2;
      v29(v37, 0);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v33 = (uint64_t (*)(void))v0[1];
    return v33();
  }
}

uint64_t sub_1D42F2A90()
{
  uint64_t v38 = v0;
  uint64_t v1 = (void *)v0[76];
  swift_willThrow();

  p_superclass = &OBJC_METACLASS____TtC8FMIPCore27FMIPBeaconSharingController.superclass;
  if (qword_1EBD7E7C0 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)v0[77];
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD831A0);
  swift_retain();
  id v5 = v3;
  swift_retain();
  id v6 = v3;
  uint64_t v7 = sub_1D44698F8();
  os_log_type_t v8 = sub_1D446A038();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = (void *)v0[77];
  if (v9)
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v35 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    v37[0] = v36;
    *(_DWORD *)uint64_t v11 = 136315394;
    sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
    uint64_t v12 = sub_1D446A6D8();
    v0[46] = sub_1D42CB9EC(v12, v13, v37);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2114;
    id v14 = v10;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[47] = v15;
    sub_1D446A188();
    void *v35 = v15;

    _os_log_impl(&dword_1D4271000, v7, v8, "stopSharing for %s failed due to %{public}@", (uint8_t *)v11, 0x16u);
    sub_1D42D5DA0(&qword_1EBD7E830);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v35, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v36, -1, -1);
    uint64_t v16 = v11;
    p_superclass = (__objc2_class **)(&OBJC_METACLASS____TtC8FMIPCore27FMIPBeaconSharingController + 8);
    MEMORY[0x1D9447730](v16, -1, -1);
  }
  else
  {
    swift_release_n();
  }
  uint64_t v17 = (void *)v0[77];
  v0[79] = v0[75];
  v0[78] = v17;
  if (*(unsigned char *)(v0[53] + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_isDelegated))
  {
    if (p_superclass[248] != (__objc2_class *)-1) {
      swift_once();
    }
    v0[80] = sub_1D42D7FAC(v4, (uint64_t)qword_1EBD831A0);
    swift_retain_n();
    uint64_t v18 = sub_1D44698F8();
    os_log_type_t v19 = sub_1D446A038();
    if (os_log_type_enabled(v18, v19))
    {
      char v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      v37[0] = v21;
      *(_DWORD *)char v20 = 136315138;
      sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
      uint64_t v22 = sub_1D446A6D8();
      v0[41] = sub_1D42CB9EC(v22, v23, v37);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v18, v19, "FMIPBeaconSharingController: Stop delegated share of beacon: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v21, -1, -1);
      MEMORY[0x1D9447730](v20, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    id v31 = objc_allocWithZone(MEMORY[0x1E4F97C00]);
    uint64_t v32 = (void *)sub_1D4469648();
    v0[81] = objc_msgSend(v31, sel_initWithBeaconIdentifier_, v32);

    return MEMORY[0x1F4188298](sub_1D42F1EA8, 0, 0);
  }
  else
  {
    uint64_t v24 = v0[69];
    uint64_t v25 = v0[56];
    uint64_t v26 = v0[52];
    uint64_t v27 = sub_1D4469E88();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v25, 1, 1, v27);
    uint64_t v28 = (void *)swift_allocObject();
    v28[2] = 0;
    v28[3] = 0;
    v28[4] = v24;
    v28[5] = v26;
    swift_retain();
    sub_1D43733DC(v25, (uint64_t)&unk_1EA6C9458, (uint64_t)v28);
    swift_release();
    uint64_t v29 = (void (*)(uint64_t *, void *))v0[54];
    if (v17)
    {
      LOBYTE(v37[0]) = 4;
      id v30 = v17;
      v29(v37, v17);
    }
    else
    {
      LOBYTE(v37[0]) = 2;
      v29(v37, 0);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v33 = (uint64_t (*)(void))v0[1];
    return v33();
  }
}

uint64_t sub_1D42F312C()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void **)(v0 + 656);
  os_log_type_t v2 = *(void **)(v0 + 648);
  swift_willThrow();

  swift_retain();
  id v3 = v1;
  swift_retain();
  id v4 = v1;
  id v5 = sub_1D44698F8();
  os_log_type_t v6 = sub_1D446A038();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = *(void **)(v0 + 656);
    id v27 = *(id *)(v0 + 624);
    uint64_t v8 = swift_slowAlloc();
    BOOL v9 = (void *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v28[0] = v26;
    *(_DWORD *)uint64_t v8 = 136315394;
    sub_1D42AC414((unint64_t *)&qword_1EA6C92C0, 255, MEMORY[0x1E4F27990]);
    uint64_t v10 = sub_1D446A6D8();
    *(void *)(v0 + 336) = sub_1D42CB9EC(v10, v11, v28);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2114;
    id v12 = v7;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 344) = v13;
    sub_1D446A188();
    *BOOL v9 = v13;

    _os_log_impl(&dword_1D4271000, v5, v6, "stopTemporaryItemLocationShare for %s failed due to %{public}@", (uint8_t *)v8, 0x16u);
    sub_1D42D5DA0(&qword_1EBD7E830);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v26, -1, -1);
    MEMORY[0x1D9447730](v8, -1, -1);
  }
  else
  {
    id v14 = *(void **)(v0 + 656);

    swift_release_n();
  }
  uint64_t v15 = *(void **)(v0 + 656);
  uint64_t v16 = *(void *)(v0 + 552);
  uint64_t v17 = *(void *)(v0 + 448);
  uint64_t v18 = *(void *)(v0 + 416);
  uint64_t v19 = sub_1D4469E88();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  char v20 = (void *)swift_allocObject();
  void v20[2] = 0;
  v20[3] = 0;
  v20[4] = v16;
  v20[5] = v18;
  swift_retain();
  sub_1D43733DC(v17, (uint64_t)&unk_1EA6C9458, (uint64_t)v20);
  swift_release();
  if (v15)
  {
    uint64_t v21 = *(void (**)(uint64_t *, void *))(v0 + 432);
    LOBYTE(v28[0]) = 4;
    id v22 = v15;
    v21(v28, v15);
  }
  else
  {
    unint64_t v23 = *(void (**)(uint64_t *, void))(v0 + 432);
    LOBYTE(v28[0]) = 2;
    v23(v28, 0);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_1D42F3534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1D42F3554, 0, 0);
}

uint64_t sub_1D42F3554()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 16);
  *(void *)(v0 + 32) = v1;
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t v3 = *(void *)(type metadata accessor for FMIPBeaconShareStateOverride(0) - 8);
    *(_DWORD *)(v0 + 56) = *(_DWORD *)(v3 + 80);
    *(void *)(v0 + 40) = *(void *)(v3 + 72);
    *(void *)(v0 + 48) = 0;
    swift_bridgeObjectRetain();
    return MEMORY[0x1F4188298](sub_1D42F3664, v2, 0);
  }
  else
  {
    id v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1D42F3664()
{
  sub_1D42EC254(*(void *)(v0 + 16)+ ((*(unsigned __int8 *)(v0 + 56) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 56))+ *(void *)(v0 + 40) * *(void *)(v0 + 48));
  return MEMORY[0x1F4188298](sub_1D42F36E4, 0, 0);
}

uint64_t sub_1D42F36E4()
{
  uint64_t v1 = v0[6] + 1;
  if (v1 == v0[4])
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    v0[6] = v1;
    uint64_t v4 = v0[3];
    return MEMORY[0x1F4188298](sub_1D42F3664, v4, 0);
  }
}

uint64_t sub_1D42F3794()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D42F9538(v0 + 152);
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

uint64_t sub_1D42F37EC()
{
  return v0;
}

uint64_t sub_1D42F380C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D4469B38();
  *a1 = result;
  a1[1] = v3;
  return result;
}

id sub_1D42F3838()
{
  return *v0;
}

uint64_t sub_1D42F3840@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

_DWORD *sub_1D42F3848@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_1D42F3858(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_1D42F3864@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1D42F3878(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1D42F3880@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1D42F3894(void *result)
{
  *v1 &= *result;
  return result;
}

BOOL sub_1D42F38A8(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1D42F38BC(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1D42F38D0(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

uint64_t sub_1D42F3900(uint64_t a1, id *a2)
{
  uint64_t result = sub_1D4469B18();
  *a2 = 0;
  return result;
}

uint64_t sub_1D42F3978(uint64_t a1, id *a2)
{
  char v3 = sub_1D4469B28();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1D42F39F8@<X0>(uint64_t *a1@<X8>)
{
  sub_1D4469B38();
  uint64_t v2 = sub_1D4469B08();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1D42F3A3C(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C91F8, 255, type metadata accessor for SPPairingSessionError);

  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1D42F3AAC(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C91F8, 255, type metadata accessor for SPPairingSessionError);

  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1D42F3B1C(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C9230, 255, type metadata accessor for SPPairingSessionError);

  return MEMORY[0x1F40E4480](a1, v2);
}

uint64_t sub_1D42F3B8C(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C9278, 255, type metadata accessor for SPUnknownDiscoverySessionError);

  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1D42F3BFC(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C9278, 255, type metadata accessor for SPUnknownDiscoverySessionError);

  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1D42F3C6C(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C92A8, 255, type metadata accessor for SPUnknownDiscoverySessionError);

  return MEMORY[0x1F40E4480](a1, v2);
}

uint64_t sub_1D42F3CDC(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C9240, 255, type metadata accessor for SPAccessoryDiscoverySessionError);

  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1D42F3D4C(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C9240, 255, type metadata accessor for SPAccessoryDiscoverySessionError);

  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1D42F3DBC(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C9270, 255, type metadata accessor for SPAccessoryDiscoverySessionError);

  return MEMORY[0x1F40E4480](a1, v2);
}

uint64_t sub_1D42F3E2C()
{
  return sub_1D44698E8();
}

uint64_t sub_1D42F3E78()
{
  return sub_1D44698D8();
}

uint64_t sub_1D42F3ED0()
{
  return sub_1D42F4200();
}

uint64_t sub_1D42F3EE8()
{
  return sub_1D4469B38();
}

uint64_t sub_1D42F3EF8(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414((unint64_t *)&unk_1EA6C95A8, 255, type metadata accessor for CommandError);

  return MEMORY[0x1F40E44F0](a1, v2);
}

uint64_t sub_1D42F3F68(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414((unint64_t *)&unk_1EA6C95A8, 255, type metadata accessor for CommandError);

  return MEMORY[0x1F40E44A8](a1, v2);
}

uint64_t sub_1D42F3FD8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42AC414((unint64_t *)&unk_1EA6C95A8, 255, type metadata accessor for CommandError);
  id v5 = a1;

  return MEMORY[0x1F40E4498](v5, a2, v4);
}

uint64_t sub_1D42F406C()
{
  id v1 = *v0;
  uint64_t v2 = sub_1D446A138();

  return v2;
}

uint64_t sub_1D42F40A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42AC414((unint64_t *)&unk_1EA6C95A8, 255, type metadata accessor for CommandError);

  return MEMORY[0x1F40E44D8](a1, a2, v4);
}

void *sub_1D42F4128@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1D42F4138(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1D42F4144()
{
  return sub_1D44698E8();
}

uint64_t sub_1D42F4190()
{
  return sub_1D44698D8();
}

uint64_t sub_1D42F41E8()
{
  return sub_1D42F4200();
}

uint64_t sub_1D42F4200()
{
  return sub_1D446A888();
}

uint64_t sub_1D42F4264()
{
  return sub_1D4469B38();
}

uint64_t sub_1D42F4274(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C9270, 255, type metadata accessor for SPAccessoryDiscoverySessionError);

  return MEMORY[0x1F40E44F0](a1, v2);
}

uint64_t sub_1D42F42E4(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C9270, 255, type metadata accessor for SPAccessoryDiscoverySessionError);

  return MEMORY[0x1F40E44A8](a1, v2);
}

uint64_t sub_1D42F4354(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42AC414(&qword_1EA6C9270, 255, type metadata accessor for SPAccessoryDiscoverySessionError);
  id v5 = a1;

  return MEMORY[0x1F40E4498](v5, a2, v4);
}

uint64_t sub_1D42F43E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42AC414(&qword_1EA6C9270, 255, type metadata accessor for SPAccessoryDiscoverySessionError);

  return MEMORY[0x1F40E44D8](a1, a2, v4);
}

uint64_t sub_1D42F4468()
{
  return sub_1D4469B38();
}

uint64_t sub_1D42F4478(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C92A8, 255, type metadata accessor for SPUnknownDiscoverySessionError);

  return MEMORY[0x1F40E44F0](a1, v2);
}

uint64_t sub_1D42F44E8(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C92A8, 255, type metadata accessor for SPUnknownDiscoverySessionError);

  return MEMORY[0x1F40E44A8](a1, v2);
}

uint64_t sub_1D42F4558(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42AC414(&qword_1EA6C92A8, 255, type metadata accessor for SPUnknownDiscoverySessionError);
  id v5 = a1;

  return MEMORY[0x1F40E4498](v5, a2, v4);
}

uint64_t sub_1D42F45EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42AC414(&qword_1EA6C92A8, 255, type metadata accessor for SPUnknownDiscoverySessionError);

  return MEMORY[0x1F40E44D8](a1, a2, v4);
}

uint64_t sub_1D42F466C()
{
  return sub_1D4469B38();
}

uint64_t sub_1D42F467C(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C9230, 255, type metadata accessor for SPPairingSessionError);

  return MEMORY[0x1F40E44F0](a1, v2);
}

uint64_t sub_1D42F46EC(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C9230, 255, type metadata accessor for SPPairingSessionError);

  return MEMORY[0x1F40E44A8](a1, v2);
}

uint64_t sub_1D42F475C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42AC414(&qword_1EA6C9230, 255, type metadata accessor for SPPairingSessionError);
  id v5 = a1;

  return MEMORY[0x1F40E4498](v5, a2, v4);
}

uint64_t sub_1D42F47F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42AC414(&qword_1EA6C9230, 255, type metadata accessor for SPPairingSessionError);

  return MEMORY[0x1F40E44D8](a1, a2, v4);
}

uint64_t sub_1D42F4870()
{
  return sub_1D446A888();
}

uint64_t sub_1D42F48D0()
{
  swift_getWitnessTable();

  return sub_1D44698C8();
}

uint64_t sub_1D42F493C(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C95C8, 255, type metadata accessor for SPBeaconType);
  uint64_t v3 = sub_1D42AC414(&qword_1EA6C95D0, 255, type metadata accessor for SPBeaconType);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1D42F4A00(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C9578, 255, type metadata accessor for CommandError);

  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1D42F4A70(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C9578, 255, type metadata accessor for CommandError);

  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1D42F4AE0(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414((unint64_t *)&unk_1EA6C95A8, 255, type metadata accessor for CommandError);

  return MEMORY[0x1F40E4480](a1, v2);
}

uint64_t sub_1D42F4B50()
{
  sub_1D42AC414((unint64_t *)&unk_1EA6C95A8, 255, type metadata accessor for CommandError);

  return sub_1D4469378();
}

BOOL sub_1D42F4BD8(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D42F4BEC()
{
  swift_getWitnessTable();

  return sub_1D44698C8();
}

uint64_t sub_1D42F4C58(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414((unint64_t *)&qword_1EA6C92C8, 255, type metadata accessor for SPBeaconTaskName);
  uint64_t v3 = sub_1D42AC414((unint64_t *)&unk_1EA6C92D0, 255, type metadata accessor for SPBeaconTaskName);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1D42F4D1C(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414((unint64_t *)&unk_1EBD7D930, 255, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_1D42AC414(&qword_1EA6C95F0, 255, type metadata accessor for FileAttributeKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1D42F4DE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1D4469B08();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1D42F4E28(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C95D8, 255, type metadata accessor for FileProtectionType);
  uint64_t v3 = sub_1D42AC414((unint64_t *)&unk_1EA6C95E0, 255, type metadata accessor for FileProtectionType);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1D42F4EEC(uint64_t a1)
{
  uint64_t v2 = sub_1D42AC414(&qword_1EA6C95B8, 255, type metadata accessor for SPBeaconLocationSource);
  uint64_t v3 = sub_1D42AC414(&qword_1EA6C95C0, 255, type metadata accessor for SPBeaconLocationSource);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1D42F4FB0()
{
  sub_1D42AC414(&qword_1EA6C9270, 255, type metadata accessor for SPAccessoryDiscoverySessionError);

  return sub_1D4469378();
}

uint64_t sub_1D42F5038()
{
  sub_1D42AC414(&qword_1EA6C92A8, 255, type metadata accessor for SPUnknownDiscoverySessionError);

  return sub_1D4469378();
}

uint64_t sub_1D42F50C0()
{
  sub_1D42AC414(&qword_1EA6C9230, 255, type metadata accessor for SPPairingSessionError);

  return sub_1D4469378();
}

uint64_t sub_1D42F5148(uint64_t a1, uint64_t a2)
{
  return sub_1D429B798(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1D42F5160()
{
  sub_1D4469B38();
  sub_1D4469BC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42F51B4()
{
  sub_1D4469B38();
  sub_1D446A828();
  sub_1D4469BC8();
  uint64_t v0 = sub_1D446A888();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D42F5228()
{
  uint64_t v0 = sub_1D4469B38();
  uint64_t v2 = v1;
  if (v0 == sub_1D4469B38() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1D42F52B4(uint64_t (*a1)(unint64_t))
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for FMIPBeaconShareStateOverride(0) - 8;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v34 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v33 = (uint64_t)&v30 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v35 = (uint64_t)&v30 - v11;
  unint64_t v12 = *v1;
  uint64_t v13 = *(void *)(*v1 + 16);
  if (!v13) {
    return 0;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v10 + 72);
  swift_bridgeObjectRetain();
  unint64_t v16 = 0;
  unint64_t v31 = v14;
  while (1)
  {
    char v17 = a1(v12 + v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
    if (v17) {
      break;
    }
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v12 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    unint64_t v19 = *(void *)(v12 + 16);
    if (v16 + 1 == v19) {
      return v16;
    }
    uint64_t v20 = v15 + v14;
    unint64_t v21 = v16 + 1;
    uint64_t v30 = v1;
    uint64_t v32 = v15;
    while (v21 < v19)
    {
      id v22 = v3;
      uint64_t v36 = v20;
      uint64_t v23 = v35;
      sub_1D42F8828(v12 + v20, v35, type metadata accessor for FMIPBeaconShareStateOverride);
      char v24 = a1(v23);
      uint64_t result = sub_1D42F88BC(v23, type metadata accessor for FMIPBeaconShareStateOverride);
      if (v24)
      {
        uint64_t v3 = v22;
        uint64_t v25 = v32;
      }
      else
      {
        uint64_t v3 = v22;
        uint64_t v25 = v32;
        if (v21 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          unint64_t v26 = *v3;
          unint64_t v27 = *(void *)(*v3 + 16);
          if (v16 >= v27) {
            goto LABEL_33;
          }
          uint64_t result = sub_1D42F8828(v26 + v31 + v16 * v32, v33, type metadata accessor for FMIPBeaconShareStateOverride);
          if (v21 >= v27) {
            goto LABEL_34;
          }
          sub_1D42F8828(v26 + v36, v34, type metadata accessor for FMIPBeaconShareStateOverride);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v3 = v30;
          *uint64_t v30 = v26;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1D43993E8(v26);
            unint64_t v26 = result;
            *uint64_t v3 = result;
          }
          if (v16 >= *(void *)(v26 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_1D42F9300(v34, v26 + v31 + v16 * v25);
          if (v21 >= *(void *)(*v3 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_1D42F9300(v33, *v3 + v36);
        }
        if (__OFADD__(v16++, 1)) {
          goto LABEL_31;
        }
      }
      unint64_t v29 = v21 + 1;
      if (__OFADD__(v21, 1)) {
        goto LABEL_30;
      }
      unint64_t v12 = *v3;
      unint64_t v19 = *(void *)(*v3 + 16);
      ++v21;
      uint64_t v20 = v36 + v25;
      if (v29 == v19) {
        return v16;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1D42F5638(void *a1, char a2, void *a3)
{
  if (!a1[2])
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v43 = a1[2];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = (void *)a1[6];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  id v10 = v8;
  unint64_t v12 = sub_1D42C4FCC(v7, v6);
  uint64_t v13 = v9[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14)) {
    goto LABEL_23;
  }
  char v16 = v11;
  if (v9[3] >= v15)
  {
    if (a2)
    {
      if (v11) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1D43D8BE4();
      if (v16) {
        goto LABEL_10;
      }
    }
LABEL_13:
    unint64_t v21 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    id v22 = (uint64_t *)(v21[6] + 16 * v12);
    *id v22 = v7;
    v22[1] = v6;
    *(void *)(v21[7] + 8 * v12) = v8;
    uint64_t v23 = v21[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    void v21[2] = v25;
    uint64_t v26 = v43 - 1;
    if (v43 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    unint64_t v27 = (void **)(a1 + 9);
    while (1)
    {
      uint64_t v29 = (uint64_t)*(v27 - 2);
      uint64_t v28 = (uint64_t)*(v27 - 1);
      uint64_t v8 = *v27;
      uint64_t v30 = (void *)*a3;
      swift_bridgeObjectRetain();
      id v31 = v8;
      unint64_t v32 = sub_1D42C4FCC(v29, v28);
      uint64_t v34 = v30[2];
      BOOL v35 = (v33 & 1) == 0;
      BOOL v24 = __OFADD__(v34, v35);
      uint64_t v36 = v34 + v35;
      if (v24) {
        break;
      }
      char v37 = v33;
      if (v30[3] < v36)
      {
        sub_1D43D4044(v36, 1);
        unint64_t v32 = sub_1D42C4FCC(v29, v28);
        if ((v37 & 1) != (v38 & 1)) {
          goto LABEL_25;
        }
      }
      if (v37) {
        goto LABEL_10;
      }
      uint64_t v39 = (void *)*a3;
      *(void *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      uint64_t v40 = (uint64_t *)(v39[6] + 16 * v32);
      *uint64_t v40 = v29;
      v40[1] = v28;
      *(void *)(v39[7] + 8 * v32) = v8;
      uint64_t v41 = v39[2];
      BOOL v24 = __OFADD__(v41, 1);
      uint64_t v42 = v41 + 1;
      if (v24) {
        goto LABEL_24;
      }
      v39[2] = v42;
      v27 += 3;
      if (!--v26) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1D43D4044(v15, a2 & 1);
  unint64_t v17 = sub_1D42C4FCC(v7, v6);
  if ((v16 & 1) == (v18 & 1))
  {
    unint64_t v12 = v17;
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    unint64_t v19 = (void *)swift_allocError();
    swift_willThrow();
    id v20 = v19;
    sub_1D42D5DA0(&qword_1EA6C9360);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1D446A7A8();
  __break(1u);
LABEL_26:
  sub_1D446A378();
  sub_1D4469C08();
  sub_1D446A458();
  sub_1D4469C08();
  sub_1D446A488();
  __break(1u);
}

uint64_t _s8FMIPCore15FMIPBeaconShareV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469498();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D42D5DA0(&qword_1EA6C9490);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D42D5DA0(&qword_1EBD7E918);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  BOOL v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  unint64_t v17 = (char *)&v42 - v16;
  MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v42 - v18;
  if ((sub_1D4469658() & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v45 = v5;
  id v20 = (int *)type metadata accessor for FMIPBeaconShare(0);
  if ((sub_1D4469658() & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v21 = v20[6];
  uint64_t v22 = *(void *)(a1 + v21);
  uint64_t v23 = *(void *)(a1 + v21 + 8);
  BOOL v24 = (void *)(a2 + v21);
  if (v22 == *v24 && v23 == v24[1] || (char v25 = sub_1D446A758(), LOBYTE(v26) = 0, (v25 & 1) != 0))
  {
    if ((uint64_t v27 = v20[7],
          uint64_t v28 = *(void *)(a1 + v27),
          uint64_t v29 = *(void *)(a1 + v27 + 8),
          uint64_t v30 = (void *)(a2 + v27),
          v28 == *v30)
      && v29 == v30[1]
      || (char v31 = sub_1D446A758(), LOBYTE(v26) = 0, (v31 & 1) != 0))
    {
      uint64_t v32 = v20[8];
      unint64_t v33 = *(void *)(a1 + v32);
      unint64_t v46 = *(void *)(a2 + v32);
      unint64_t v47 = v33;
      if ((static FMIPBeaconShareState.== infix(_:_:)(&v47, &v46) & 1) == 0
        || (sub_1D44695C8() & 1) == 0
        || (sub_1D44695C8() & 1) == 0)
      {
        goto LABEL_18;
      }
      sub_1D42E83D0(a1 + v20[11], (uint64_t)v19);
      sub_1D42E83D0(a2 + v20[11], (uint64_t)v17);
      uint64_t v34 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_1D42E83D0((uint64_t)v19, (uint64_t)v10);
      uint64_t v44 = v34;
      sub_1D42E83D0((uint64_t)v17, v34);
      uint64_t v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
      if (v43((uint64_t)v10, 1, v4) == 1)
      {
        sub_1D4276C3C((uint64_t)v17, &qword_1EBD7E918);
        sub_1D4276C3C((uint64_t)v19, &qword_1EBD7E918);
        if (v43(v44, 1, v4) == 1)
        {
          sub_1D4276C3C((uint64_t)v10, &qword_1EBD7E918);
LABEL_21:
          uint64_t v38 = v20[12];
          uint64_t v39 = (void *)(a1 + v38);
          char v40 = *(unsigned char *)(a1 + v38 + 8);
          uint64_t v41 = (void *)(a2 + v38);
          int v26 = *(unsigned __int8 *)(a2 + v38 + 8);
          if (v40)
          {
            if (!v26) {
              return v26 & 1;
            }
            goto LABEL_27;
          }
          if (*v39 != *v41) {
            LOBYTE(v26) = 1;
          }
          if ((v26 & 1) == 0)
          {
LABEL_27:
            LOBYTE(v26) = *(unsigned char *)(a1 + v20[13]) ^ *(unsigned char *)(a2 + v20[13]) ^ 1;
            return v26 & 1;
          }
          goto LABEL_18;
        }
      }
      else
      {
        sub_1D42E83D0((uint64_t)v10, (uint64_t)v14);
        if (v43(v44, 1, v4) != 1)
        {
          uint64_t v36 = v45;
          (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v7, v44, v4);
          sub_1D42AC414(&qword_1EA6C9498, 255, MEMORY[0x1E4F276F0]);
          LODWORD(v44) = sub_1D4469AF8();
          char v37 = *(void (**)(char *, uint64_t))(v36 + 8);
          v37(v7, v4);
          sub_1D4276C3C((uint64_t)v17, &qword_1EBD7E918);
          sub_1D4276C3C((uint64_t)v19, &qword_1EBD7E918);
          v37(v14, v4);
          sub_1D4276C3C((uint64_t)v10, &qword_1EBD7E918);
          if (v44) {
            goto LABEL_21;
          }
LABEL_18:
          LOBYTE(v26) = 0;
          return v26 & 1;
        }
        sub_1D4276C3C((uint64_t)v17, &qword_1EBD7E918);
        sub_1D4276C3C((uint64_t)v19, &qword_1EBD7E918);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v4);
      }
      sub_1D4276C3C((uint64_t)v10, &qword_1EA6C9490);
      goto LABEL_18;
    }
  }
  return v26 & 1;
}

unint64_t sub_1D42F5EC4()
{
  unint64_t result = qword_1EA6C9088;
  if (!qword_1EA6C9088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9088);
  }
  return result;
}

unint64_t sub_1D42F5F1C()
{
  unint64_t result = qword_1EA6C9090;
  if (!qword_1EA6C9090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9090);
  }
  return result;
}

uint64_t sub_1D42F5F70()
{
  return sub_1D42AC414((unint64_t *)&unk_1EA6C9098, 255, (void (*)(uint64_t))type metadata accessor for FMIPBeaconShare);
}

uint64_t sub_1D42F5FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1D42F5FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t getEnumTagSinglePayload for FMIPBeaconShareDirection(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPBeaconShareDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D42F6140);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPBeaconShareDirection()
{
  return &type metadata for FMIPBeaconShareDirection;
}

unint64_t *initializeBufferWithCopyOfBuffer for FMIPBeaconShareState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1D42E8690(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for FMIPBeaconShareState(unint64_t *a1)
{
  return sub_1D42E8A94(*a1);
}

unint64_t *assignWithCopy for FMIPBeaconShareState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1D42E8690(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1D42E8A94(v4);
  return a1;
}

void *initializeWithTake for FMIPBeaconShareState(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for FMIPBeaconShareState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1D42E8A94(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPBeaconShareState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FMIPBeaconShareState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)unint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1D42F62DC(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_1D42F62F8(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1D42F6308(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FMIPBeaconShareState()
{
  return &type metadata for FMIPBeaconShareState;
}

char *initializeBufferWithCopyOfBuffer for FMIPBeaconShare(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D4469688();
    int v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8(&a1[a3[5]], &a2[a3[5]], v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = a3[7];
    uint64_t v11 = &a1[v9];
    uint64_t v12 = &a2[v9];
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    BOOL v14 = &a1[v10];
    uint64_t v15 = &a2[v10];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)BOOL v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = a3[8];
    unint64_t v18 = *(void *)&a2[v17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D42E8690(v18);
    *(void *)&a1[v17] = v18;
    uint64_t v19 = a3[9];
    id v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    uint64_t v22 = sub_1D4469618();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    v23(v20, v21, v22);
    v23(&a1[a3[10]], &a2[a3[10]], v22);
    uint64_t v24 = a3[11];
    char v25 = &a1[v24];
    int v26 = &a2[v24];
    uint64_t v27 = sub_1D4469498();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v31 = a3[12];
    uint64_t v32 = a3[13];
    unint64_t v33 = &a1[v31];
    uint64_t v34 = &a2[v31];
    *(void *)unint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    a1[v32] = a2[v32];
  }
  return a1;
}

uint64_t destroy for FMIPBeaconShare(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1D4469688();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D42E8A94(*(void *)(a1 + a2[8]));
  uint64_t v6 = a1 + a2[9];
  uint64_t v7 = sub_1D4469618();
  int v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + a2[10], v7);
  uint64_t v9 = a1 + a2[11];
  uint64_t v10 = sub_1D4469498();
  uint64_t v13 = *(void *)(v10 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v10);
  if (!result)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
    return v12(v9, v10);
  }
  return result;
}

uint64_t initializeWithCopy for FMIPBeaconShare(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (void *)(a1 + v9);
  BOOL v14 = (void *)(a2 + v9);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a3[8];
  unint64_t v17 = *(void *)(a2 + v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D42E8690(v17);
  *(void *)(a1 + v16) = v17;
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_1D4469618();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
  v22(v19, v20, v21);
  v22(a1 + a3[10], a2 + a3[10], v21);
  uint64_t v23 = a3[11];
  uint64_t v24 = (void *)(a1 + v23);
  char v25 = (const void *)(a2 + v23);
  uint64_t v26 = sub_1D4469498();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v29 = a3[12];
  uint64_t v30 = a3[13];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(void *)uint64_t v31 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  *(unsigned char *)(a1 + v30) = *(unsigned char *)(a2 + v30);
  return a1;
}

uint64_t assignWithCopy for FMIPBeaconShare(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[8];
  unint64_t v15 = *(void *)(a2 + v14);
  sub_1D42E8690(v15);
  unint64_t v16 = *(void *)(a1 + v14);
  *(void *)(a1 + v14) = v15;
  sub_1D42E8A94(v16);
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1D4469618();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24);
  v21(v18, v19, v20);
  v21(a1 + a3[10], a2 + a3[10], v20);
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = sub_1D4469498();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  LODWORD(v21) = v27(v23, 1, v25);
  int v28 = v27(v24, 1, v25);
  if (!v21)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    uint64_t v29 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_7:
  uint64_t v30 = a3[12];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v33 = *v32;
  *(unsigned char *)(v31 + 8) = *((unsigned char *)v32 + 8);
  *(void *)uint64_t v31 = v33;
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for FMIPBeaconShare(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1D4469618();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v13(a1 + a3[10], a2 + a3[10], v12);
  uint64_t v14 = a3[11];
  unint64_t v15 = (void *)(a1 + v14);
  unint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_1D4469498();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[12];
  uint64_t v21 = a3[13];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  return a1;
}

uint64_t assignWithTake for FMIPBeaconShare(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  unint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  unint64_t v19 = *(void *)(a1 + v18);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  sub_1D42E8A94(v19);
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_1D4469618();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40);
  v24(v21, v22, v23);
  v24(a1 + a3[10], a2 + a3[10], v23);
  uint64_t v25 = a3[11];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = sub_1D4469498();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
  LODWORD(v24) = v30(v26, 1, v28);
  int v31 = v30(v27, 1, v28);
  if (!v24)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v29 + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v29 + 8))(v26, v28);
    goto LABEL_6;
  }
  if (v31)
  {
LABEL_6:
    uint64_t v32 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v26, v27, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v29 + 32))(v26, v27, v28);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_7:
  uint64_t v33 = a3[12];
  uint64_t v34 = a3[13];
  uint64_t v35 = a1 + v33;
  uint64_t v36 = a2 + v33;
  *(void *)uint64_t v35 = *(void *)v36;
  *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
  *(unsigned char *)(a1 + v34) = *(unsigned char *)(a2 + v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPBeaconShare(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D42F71A8);
}

uint64_t sub_1D42F71A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[6] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = sub_1D4469618();
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[9];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    uint64_t v15 = sub_1D42D5DA0(&qword_1EBD7E918);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[11];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for FMIPBeaconShare(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D42F7344);
}

uint64_t sub_1D42F7344(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1D4469688();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_1D4469618();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[9];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = sub_1D42D5DA0(&qword_1EBD7E918);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[11];

  return v16(v18, a2, a2, v17);
}

__n128 initializeBufferWithCopyOfBuffer for FMIPBeaconSharingLimits(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPBeaconSharingLimits(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FMIPBeaconSharingLimits(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for PlaySoundContext(uint64_t a1)
{
}

void type metadata accessor for IgnoreTrackingUntil(uint64_t a1)
{
}

void type metadata accessor for UNAuthorizationStatus(uint64_t a1)
{
}

uint64_t *sub_1D42F755C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D4469688();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v9 = *(int *)(a3 + 24);
    unint64_t v10 = *(uint64_t *)((char *)a2 + v9);
    sub_1D42E8690(v10);
    *(uint64_t *)((char *)a1 + v9) = v10;
  }
  return a1;
}

unint64_t sub_1D42F7658(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469688();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  unint64_t v6 = *(void *)(a1 + *(int *)(a2 + 24));

  return sub_1D42E8A94(v6);
}

uint64_t sub_1D42F76F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  unint64_t v9 = *(void *)(a2 + v8);
  sub_1D42E8690(v9);
  *(void *)(a1 + v8) = v9;
  return a1;
}

uint64_t sub_1D42F77A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  unint64_t v9 = *(void *)(a2 + v8);
  sub_1D42E8690(v9);
  unint64_t v10 = *(void *)(a1 + v8);
  *(void *)(a1 + v8) = v9;
  sub_1D42E8A94(v10);
  return a1;
}

uint64_t sub_1D42F7858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1D42F78FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  unint64_t v9 = *(void *)(a1 + v8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  sub_1D42E8A94(v9);
  return a1;
}

uint64_t sub_1D42F79A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D42F79BC);
}

uint64_t sub_1D42F79BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    LODWORD(v10) = ((v10 >> 57) >> 5) | (4 * ((v10 >> 57) & 0x18 | v10 & 7));
    unsigned int v11 = v10 ^ 0x7F;
    unsigned int v12 = 128 - v10;
    if (v11 >= 0x7D) {
      return 0;
    }
    else {
      return v12;
    }
  }
}

uint64_t sub_1D42F7A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D42F7AA8);
}

uint64_t sub_1D42F7AA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D4469688();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    uint64_t v11 = (-(int)a2 >> 2) & 0x1F | (32 * (-(int)a2 & 0x7F));
    *(void *)(a1 + *(int *)(a4 + 24)) = (v11 | (v11 << 57)) & 0xF000000000000007;
  }
  return result;
}

uint64_t type metadata accessor for FMIPBeaconShareStateOverride(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6C9168);
}

uint64_t sub_1D42F7B94()
{
  uint64_t result = sub_1D4469688();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for CLClientLocationReferenceFrame(uint64_t a1)
{
}

void type metadata accessor for SPPairingSessionError(uint64_t a1)
{
}

void type metadata accessor for SPUnknownDiscoverySessionError(uint64_t a1)
{
}

void type metadata accessor for SPAccessoryDiscoverySessionError(uint64_t a1)
{
}

void type metadata accessor for BeaconTaskState(uint64_t a1)
{
}

void type metadata accessor for SPBeaconTaskName(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

uint64_t sub_1D42F7CB8()
{
  return sub_1D42AC414(&qword_1EA6C91B0, 255, type metadata accessor for CGColor);
}

uint64_t sub_1D42F7D04()
{
  return sub_1D42AC414(&qword_1EA6C91B8, 255, type metadata accessor for SPBeaconTaskName);
}

uint64_t sub_1D42F7D50()
{
  return sub_1D42AC414(&qword_1EA6C91C0, 255, type metadata accessor for SPBeaconTaskName);
}

uint64_t sub_1D42F7D9C()
{
  return sub_1D42AC414(&qword_1EA6C91C8, 255, type metadata accessor for SPAccessoryDiscoverySessionError);
}

uint64_t sub_1D42F7DE8()
{
  return sub_1D42AC414(&qword_1EA6C91D0, 255, type metadata accessor for SPAccessoryDiscoverySessionError);
}

uint64_t sub_1D42F7E34()
{
  return sub_1D42AC414(&qword_1EA6C91D8, 255, type metadata accessor for SPUnknownDiscoverySessionError);
}

uint64_t sub_1D42F7E80()
{
  return sub_1D42AC414(&qword_1EA6C91E0, 255, type metadata accessor for SPUnknownDiscoverySessionError);
}

uint64_t sub_1D42F7ECC()
{
  return sub_1D42AC414(&qword_1EA6C91E8, 255, type metadata accessor for SPPairingSessionError);
}

uint64_t sub_1D42F7F18()
{
  return sub_1D42AC414(&qword_1EA6C91F0, 255, type metadata accessor for SPPairingSessionError);
}

uint64_t sub_1D42F7F64()
{
  return sub_1D42AC414(&qword_1EA6C91F8, 255, type metadata accessor for SPPairingSessionError);
}

uint64_t sub_1D42F7FB0()
{
  return sub_1D42AC414(&qword_1EA6C9200, 255, type metadata accessor for SPPairingSessionError);
}

uint64_t sub_1D42F7FFC()
{
  return sub_1D42AC414(&qword_1EA6C9208, 255, type metadata accessor for SPPairingSessionError);
}

uint64_t sub_1D42F8048()
{
  return sub_1D42AC414(&qword_1EA6C9210, 255, _s3__C4CodeOMa_1);
}

void _s3__C4CodeOMa_1(uint64_t a1)
{
}

uint64_t sub_1D42F80A8()
{
  return sub_1D42AC414(&qword_1EA6C9218, 255, _s3__C4CodeOMa_1);
}

unint64_t sub_1D42F80F8()
{
  unint64_t result = qword_1EA6C9220;
  if (!qword_1EA6C9220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9220);
  }
  return result;
}

uint64_t sub_1D42F814C()
{
  return sub_1D42AC414(&qword_1EA6C9228, 255, _s3__C4CodeOMa_1);
}

uint64_t sub_1D42F8198()
{
  return sub_1D42AC414(&qword_1EA6C9230, 255, type metadata accessor for SPPairingSessionError);
}

uint64_t sub_1D42F81E4()
{
  return sub_1D42AC414(&qword_1EA6C9238, 255, (void (*)(uint64_t))type metadata accessor for FMIPBeaconShareStateOverride);
}

uint64_t sub_1D42F8230()
{
  return sub_1D42AC414(&qword_1EA6C9240, 255, type metadata accessor for SPAccessoryDiscoverySessionError);
}

uint64_t sub_1D42F827C()
{
  return sub_1D42AC414(&qword_1EA6C9248, 255, type metadata accessor for SPAccessoryDiscoverySessionError);
}

uint64_t sub_1D42F82C8()
{
  return sub_1D42AC414(&qword_1EA6C9250, 255, type metadata accessor for SPAccessoryDiscoverySessionError);
}

uint64_t sub_1D42F8314()
{
  return sub_1D42AC414(&qword_1EA6C9258, 255, _s3__C4CodeOMa_0);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
}

uint64_t sub_1D42F8374()
{
  return sub_1D42AC414(&qword_1EA6C9260, 255, _s3__C4CodeOMa_0);
}

uint64_t sub_1D42F83C0()
{
  return sub_1D42AC414(&qword_1EA6C9268, 255, _s3__C4CodeOMa_0);
}

uint64_t sub_1D42F840C()
{
  return sub_1D42AC414(&qword_1EA6C9270, 255, type metadata accessor for SPAccessoryDiscoverySessionError);
}

uint64_t sub_1D42F8458()
{
  return sub_1D42AC414(&qword_1EA6C9278, 255, type metadata accessor for SPUnknownDiscoverySessionError);
}

uint64_t sub_1D42F84A4()
{
  return sub_1D42AC414(&qword_1EA6C9280, 255, type metadata accessor for SPUnknownDiscoverySessionError);
}

uint64_t sub_1D42F84F0()
{
  return sub_1D42AC414(&qword_1EA6C9288, 255, type metadata accessor for SPUnknownDiscoverySessionError);
}

uint64_t sub_1D42F853C()
{
  return sub_1D42AC414(&qword_1EA6C9290, 255, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_1D42F859C()
{
  return sub_1D42AC414(&qword_1EA6C9298, 255, type metadata accessor for Code);
}

uint64_t sub_1D42F85E8()
{
  return sub_1D42AC414(&qword_1EA6C92A0, 255, type metadata accessor for Code);
}

uint64_t sub_1D42F8634()
{
  return sub_1D42AC414(&qword_1EA6C92A8, 255, type metadata accessor for SPUnknownDiscoverySessionError);
}

uint64_t sub_1D42F8680()
{
  return sub_1D42AC414(&qword_1EA6C92B0, 255, type metadata accessor for SPBeaconTaskName);
}

uint64_t sub_1D42F86CC()
{
  return sub_1D42AC414(&qword_1EA6C92B8, 255, type metadata accessor for CGColor);
}

uint64_t sub_1D42F871C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *unint64_t v10 = v2;
  v10[1] = sub_1D42FA10C;
  return sub_1D42EE7D4(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1D42F87F0()
{
  sub_1D42E8A94(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D42F8828(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42F8894(int a1, uint64_t a2)
{
  return sub_1D42F8C38(a1, a2, "FMIPBeaconSharingController: Share: %s declined: %s", (uint64_t)&unk_1F2C04BB0, (uint64_t)&unk_1EA6C92F8);
}

uint64_t sub_1D42F88BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D42F8920()
{
  uint64_t v2 = *(void *)(type metadata accessor for FMIPBeaconShareStateOverride(0) - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  uint64_t v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_1D42FA10C;
  return MEMORY[0x1F4188298](sub_1D42FA0B8, v3, 0);
}

uint64_t sub_1D42F8A0C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *unint64_t v10 = v2;
  v10[1] = sub_1D42FA10C;
  return sub_1D42EDEC8(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1D42F8AE4()
{
  uint64_t v1 = (int *)(type metadata accessor for FMIPBeaconShareStateOverride(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1D4469688();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v6 + v1[7], v7);
  sub_1D42E8A94(*(void *)(v6 + v1[8]));

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1D42F8C10(int a1, uint64_t a2)
{
  return sub_1D42F8C38(a1, a2, "FMIPBeaconSharingController: Share: %s accepted: %s", (uint64_t)&unk_1F2C04C50, (uint64_t)&unk_1EA6C9318);
}

uint64_t sub_1D42F8C38(int a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(type metadata accessor for FMIPBeaconShareStateOverride(0) - 8);
  return sub_1D42EED28(a1, a2, *(void *)(v5 + 16), *(void (**)(uint64_t *, uint64_t))(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), v5 + ((*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a3, a4, a5);
}

uint64_t sub_1D42F8CDC()
{
  uint64_t v1 = (int *)(type metadata accessor for FMIPBeaconShareStateOverride(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1D4469688();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v6 + v1[7], v7);
  sub_1D42E8A94(*(void *)(v6 + v1[8]));

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1D42F8E00()
{
  uint64_t v2 = *(void *)(type metadata accessor for FMIPBeaconShareStateOverride(0) - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  uint64_t v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_1D42FA10C;
  return MEMORY[0x1F4188298](sub_1D42EE438, v3, 0);
}

uint64_t sub_1D42F8EEC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *unint64_t v10 = v2;
  v10[1] = sub_1D42FA10C;
  return sub_1D42EDB20(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1D42F8FC4(int a1, uint64_t a2)
{
  return sub_1D42F8C38(a1, a2, "FMIPBeaconSharingController: Share: %s withdrawn: %s", (uint64_t)&unk_1F2C04CF0, (uint64_t)&unk_1EA6C9338);
}

uint64_t sub_1D42F8FF0()
{
  uint64_t v2 = *(void *)(type metadata accessor for FMIPBeaconShareStateOverride(0) - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  uint64_t v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_1D42FA10C;
  return MEMORY[0x1F4188298](sub_1D42FA0B8, v3, 0);
}

uint64_t sub_1D42F90D8(id *a1)
{
  return sub_1D42EC6BC(a1) & 1;
}

uint64_t sub_1D42F90F8(uint64_t a1)
{
  return sub_1D42EC508(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1D42F9118(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_1D43AFD5C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for FMIPBeaconShareStateOverride(0) - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D42F9300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPBeaconShareStateOverride(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D42F9364()
{
  return swift_release();
}

uint64_t sub_1D42F936C()
{
  return sub_1D42F96CC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D42F9398()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1D42F9444;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x1F4188298](sub_1D42EAA2C, v3, 0);
}

uint64_t sub_1D42F9444()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1D42F9538(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D42F9564(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *unint64_t v10 = v2;
  v10[1] = sub_1D42FA10C;
  return sub_1D42F05A8(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1D42F9638(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D42F96A0()
{
  return sub_1D42F96CC(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D42F96CC(void (*a1)(void), void (*a2)(void))
{
  swift_unknownObjectRelease();
  a1(*(void *)(v2 + 32));
  a2(*(void *)(v2 + 40));

  return MEMORY[0x1F4186498](v2, 48, 7);
}

uint64_t sub_1D42F9734()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1D42FA10C;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x1F4188298](sub_1D42F3554, 0, 0);
}

uint64_t sub_1D42F97E4(char a1, uint64_t a2)
{
  return sub_1D42EF488(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, void))(v2 + 24));
}

uint64_t sub_1D42F97F4()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D42F9834(int a1, uint64_t a2)
{
  return sub_1D42ED3AC(a1, a2, *(void *)(v2 + 16), *(void (**)(void, void, void))(v2 + 24));
}

uint64_t sub_1D42F9840()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D42F9878(uint64_t a1, uint64_t a2)
{
  long long v3 = *(uint64_t (**)(char *))(v2 + 16);
  if (a2) {
    char v4 = 4;
  }
  else {
    char v4 = 2;
  }
  char v6 = v4;
  return v3(&v6);
}

uint64_t sub_1D42F98C0()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1D42F9908(uint64_t a1, uint64_t a2)
{
  sub_1D42EFA7C(a1, a2, *(void (**)(void *, char *, void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1D42F9914(uint64_t a1, uint64_t a2)
{
  return sub_1D42EFD58(a1, a2, *(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16));
}

void type metadata accessor for CLAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for CTFont(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for CommandError(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for SecureLocationsStewieServiceState(uint64_t a1)
{
}

void type metadata accessor for SPDeviceEventSource(uint64_t a1)
{
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

uint64_t sub_1D42F99D0()
{
  return sub_1D42AC414(&qword_1EA6C9500, 255, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1D42F9A1C()
{
  return sub_1D42AC414(&qword_1EA6C9508, 255, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1D42F9A68()
{
  return sub_1D42AC414(&qword_1EA6C9510, 255, type metadata accessor for FileProtectionType);
}

uint64_t sub_1D42F9AB4()
{
  return sub_1D42AC414(&qword_1EA6C9518, 255, type metadata accessor for FileProtectionType);
}

uint64_t sub_1D42F9B00()
{
  return sub_1D42AC414(&qword_1EA6C9520, 255, type metadata accessor for FileProtectionType);
}

uint64_t sub_1D42F9B4C()
{
  return sub_1D42AC414(&qword_1EA6C9528, 255, type metadata accessor for SPBeaconType);
}

uint64_t sub_1D42F9B98()
{
  return sub_1D42AC414(&qword_1EA6C9530, 255, type metadata accessor for SPBeaconType);
}

uint64_t sub_1D42F9BE4()
{
  return sub_1D42AC414(&qword_1EA6C9538, 255, type metadata accessor for SPBeaconType);
}

uint64_t sub_1D42F9C30()
{
  return sub_1D42AC414(&qword_1EA6C9540, 255, type metadata accessor for SPBeaconLocationSource);
}

uint64_t sub_1D42F9C7C()
{
  return sub_1D42AC414(&qword_1EA6C9548, 255, type metadata accessor for SPBeaconLocationSource);
}

uint64_t sub_1D42F9CC8()
{
  return sub_1D42AC414(&qword_1EA6C9550, 255, type metadata accessor for SPBeaconLocationSource);
}

uint64_t sub_1D42F9D14()
{
  return sub_1D42AC414(&qword_1EA6C9558, 255, type metadata accessor for CommandError);
}

uint64_t sub_1D42F9D60()
{
  return sub_1D42AC414(&qword_1EA6C9560, 255, type metadata accessor for CommandError);
}

uint64_t sub_1D42F9DAC()
{
  return sub_1D42AC414(&qword_1EA6C9568, 255, type metadata accessor for CFString);
}

uint64_t sub_1D42F9DF8()
{
  return sub_1D42AC414(&qword_1EA6C9570, 255, type metadata accessor for CFString);
}

uint64_t sub_1D42F9E44()
{
  return sub_1D42AC414(&qword_1EA6C9578, 255, type metadata accessor for CommandError);
}

uint64_t sub_1D42F9E90()
{
  return sub_1D42AC414(&qword_1EA6C9580, 255, type metadata accessor for CommandError);
}

uint64_t sub_1D42F9EDC()
{
  return sub_1D42AC414(&qword_1EA6C9588, 255, type metadata accessor for CommandError);
}

uint64_t sub_1D42F9F28()
{
  return sub_1D42AC414(&qword_1EA6C9590, 255, _s3__C4CodeOMa_2);
}

void _s3__C4CodeOMa_2(uint64_t a1)
{
}

uint64_t sub_1D42F9F88()
{
  return sub_1D42AC414(&qword_1EA6C9598, 255, _s3__C4CodeOMa_2);
}

uint64_t sub_1D42F9FD4()
{
  return sub_1D42AC414(&qword_1EA6C95A0, 255, _s3__C4CodeOMa_2);
}

uint64_t sub_1D42FA020()
{
  return sub_1D42AC414((unint64_t *)&unk_1EA6C95A8, 255, type metadata accessor for CommandError);
}

uint64_t sub_1D42FA06C()
{
  return sub_1D42AC414((unint64_t *)&unk_1EBD7D940, 255, type metadata accessor for FileAttributeKey);
}

uint64_t FMIPConnectAction.enabled.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore17FMIPConnectAction_enabled);
}

uint64_t FMIPConnectAction.__allocating_init(device:enabled:)(uint64_t a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  FMIPConnectAction.init(device:enabled:)(a1, a2);
  return v4;
}

uint64_t FMIPConnectAction.init(device:enabled:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore17FMIPConnectAction_enabled) = a2;
  *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext) = 0;
  long long v3 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  *long long v3 = 0;
  v3[1] = 0;
  uint64_t v4 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
  *uint64_t v4 = 0;
  v4[1] = 0;
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_username);
  *uint64_t v5 = 0;
  v5[1] = 0;
  char v6 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  *char v6 = 0;
  v6[1] = 0;
  uint64_t v7 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_escrowUUID);
  *uint64_t v7 = 0;
  v7[1] = 0;
  *(_OWORD *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession) = xmmword_1D446D300;
  sub_1D42B2518(a1, v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  return v2;
}

uint64_t static FMIPConnectAction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore17FMIPConnectAction_enabled) == *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8FMIPCore17FMIPConnectAction_enabled)) {
    return static FMIPDevice.== infix(_:_:)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  }
  else {
    return 0;
  }
}

uint64_t sub_1D42FA26C()
{
  uint64_t v0 = sub_1D4338988();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

void FMIPConnectAction.__allocating_init(device:)()
{
}

void FMIPConnectAction.init(device:)()
{
}

uint64_t FMIPConnectAction.__deallocating_deinit()
{
  FMIPDeviceAction.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1D42FA3FC(void *a1, void *a2)
{
  if (*(unsigned __int8 *)(*a1 + OBJC_IVAR____TtC8FMIPCore17FMIPConnectAction_enabled) == *(unsigned __int8 *)(*a2 + OBJC_IVAR____TtC8FMIPCore17FMIPConnectAction_enabled)) {
    return static FMIPDevice.== infix(_:_:)(*a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  }
  else {
    return 0;
  }
}

uint64_t sub_1D42FA43C()
{
  return type metadata accessor for FMIPConnectAction();
}

uint64_t type metadata accessor for FMIPConnectAction()
{
  uint64_t result = qword_1EA6C9660;
  if (!qword_1EA6C9660) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D42FA490()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FMIPConnectAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPConnectAction);
}

uint64_t dispatch thunk of FMIPConnectAction.__allocating_init(device:enabled:)()
{
  return (*(uint64_t (**)(void))(v0 + 360))();
}

uint64_t FMIPItemAction.item.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D42FA514(v1 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, a1);
}

uint64_t sub_1D42FA514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FMIPItemAction.__allocating_init(item:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1D42FA5EC(a1, v2 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item);
  return v2;
}

uint64_t FMIPItemAction.init(item:)(uint64_t a1)
{
  sub_1D42FA5EC(a1, v1 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item);
  return v1;
}

uint64_t sub_1D42FA5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FMIPItemAction.deinit()
{
  sub_1D42FA678(v0 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item);
  return v0;
}

uint64_t sub_1D42FA678(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FMIPItemAction.__deallocating_deinit()
{
  sub_1D42FA678(v0 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item);

  return swift_deallocClassInstance();
}

uint64_t FMIPItemAction.debugDescription.getter()
{
  return 60;
}

uint64_t sub_1D42FA918()
{
  return FMIPItemAction.debugDescription.getter();
}

uint64_t sub_1D42FA93C()
{
  return type metadata accessor for FMIPItemAction();
}

uint64_t type metadata accessor for FMIPItemAction()
{
  uint64_t result = qword_1EA6C9670;
  if (!qword_1EA6C9670) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D42FA990()
{
  uint64_t result = type metadata accessor for FMIPItem();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FMIPItemAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPItemAction);
}

uint64_t dispatch thunk of FMIPItemAction.__allocating_init(item:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t FMIPSafeLocationType.sortOrder.getter()
{
  if (*v0) {
    return 1;
  }
  else {
    return 100;
  }
}

FMIPCore::FMIPSafeLocationType_optional __swiftcall FMIPSafeLocationType.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *unint64_t v1 = v2;
  return (FMIPCore::FMIPSafeLocationType_optional)rawValue;
}

uint64_t FMIPSafeLocationType.rawValue.getter()
{
  return *v0;
}

BOOL sub_1D42FAA84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void *sub_1D42FAA9C@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_1D42FAABC(void *a1@<X8>)
{
  *a1 = *v1;
}

FMIPCore::FMIPSafeLocationApprovalState_optional __swiftcall FMIPSafeLocationApprovalState.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  *unint64_t v1 = v2;
  return (FMIPCore::FMIPSafeLocationApprovalState_optional)rawValue;
}

uint64_t FMIPSafeLocationApprovalState.rawValue.getter()
{
  return *v0;
}

FMIPCore::FMIPSafeLocationApprovalState_optional sub_1D42FAAE4(Swift::Int *a1)
{
  return FMIPSafeLocationApprovalState.init(rawValue:)(*a1);
}

uint64_t FMIPSafeLocation.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id FMIPSafeLocation.location.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 17);
  char v3 = *(unsigned char *)(v1 + 18);
  char v4 = *(unsigned char *)(v1 + 19);
  uint64_t v5 = *(void **)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(a1 + 1) = v2;
  *(unsigned char *)(a1 + 2) = v3;
  *(unsigned char *)(a1 + 3) = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  return v5;
}

uint64_t FMIPSafeLocation.address.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1D42FABAC(v1 + 40, (uint64_t)v4);
  sub_1D42FABAC((uint64_t)v4, a1);
  return sub_1D42FAC78((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
}

uint64_t sub_1D42FABAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7CC10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FMIPSafeLocation.address.setter(uint64_t a1)
{
  sub_1D42FABAC(a1, (uint64_t)v3);
  sub_1D42FABAC(v1 + 40, (uint64_t)v4);
  sub_1D42FAC78((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
  return sub_1D42FABAC((uint64_t)v3, v1 + 40);
}

uint64_t sub_1D42FAC78(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v5 = *(_OWORD *)(a1 + 240);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v4 = *(_OWORD *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    *(void *)(a1 + 272),
    *(void *)(a1 + 280));
  return a1;
}

uint64_t (*FMIPSafeLocation.address.modify())()
{
  return nullsub_1;
}

void FMIPSafeLocation.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 328);
}

void FMIPSafeLocation.approvalState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 329);
}

uint64_t FMIPSafeLocation.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 336);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D42FAD6C(unsigned __int8 *a1, char *a2)
{
  return sub_1D4414928(*a1, *a2);
}

uint64_t sub_1D42FAD78()
{
  return sub_1D43F3918();
}

uint64_t sub_1D42FAD80()
{
  sub_1D4469BC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42FAE7C()
{
  return sub_1D43F44E4();
}

uint64_t sub_1D42FAE84@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D42FDFE0();
  *a1 = result;
  return result;
}

void sub_1D42FAEB4(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x73736572646461;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA00000000007265;
      uint64_t v3 = 0x696669746E656469;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6E6F697461636F6CLL;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 3:
      *(void *)a1 = 1701869940;
      *(void *)(a1 + 8) = 0xE400000000000000;
      break;
    case 4:
      strcpy((char *)a1, "approvalState");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 5:
      *(void *)a1 = 1701667182;
      *(void *)(a1 + 8) = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1D42FAF90()
{
  uint64_t result = 0x73736572646461;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x696669746E656469;
      break;
    case 2:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 3:
      uint64_t result = 1701869940;
      break;
    case 4:
      uint64_t result = 0x6C61766F72707061;
      break;
    case 5:
      uint64_t result = 1701667182;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D42FB058@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D42FDFE0();
  *a1 = result;
  return result;
}

void sub_1D42FB080(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1D42FB08C(uint64_t a1)
{
  unint64_t v2 = sub_1D42FC9DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D42FB0C8(uint64_t a1)
{
  unint64_t v2 = sub_1D42FC9DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPSafeLocation.init(safeLocation:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = sub_1D4469688();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42FB494(v62);
  sub_1D42FABAC((uint64_t)v62, (uint64_t)v61);
  id v7 = a1;
  id v8 = objc_msgSend(v7, sel_location);
  char v48 = 4;
  id v9 = objc_msgSend(v7, sel_location);
  id v10 = objc_msgSend(v9, sel_floor);

  if (v10)
  {
    id v11 = objc_msgSend(v10, sel_level);

    double v12 = (double)(uint64_t)v11;
  }
  else
  {
    double v12 = -1.0;
  }
  sub_1D42B7188(v8, &v48, 1, 0, 1, (uint64_t)&v49, v12);

  char v13 = v52;
  uint64_t v14 = v54;
  int v32 = v50;
  int v33 = v49;
  unsigned __int8 v55 = v49;
  unsigned __int8 v56 = v50;
  int v31 = v51;
  unsigned __int8 v57 = v51;
  char v58 = v52;
  id v59 = v53;
  uint64_t v60 = v54;
  id v34 = v53;
  id v15 = objc_msgSend(v7, sel_identifier);
  sub_1D4469668();

  uint64_t v16 = sub_1D4469638();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1D42FABAC((uint64_t)v61, (uint64_t)v47);
  swift_bridgeObjectRetain();
  sub_1D42FAC78((uint64_t)v47, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
  id v19 = objc_msgSend(v7, sel_type);
  id v20 = objc_msgSend(v7, sel_approvalState);
  id v21 = objc_msgSend(v7, sel_name);
  if (v21)
  {
    BOOL v22 = v21;
    uint64_t v23 = sub_1D4469B38();
    uint64_t v25 = v24;
  }
  else
  {

    uint64_t v23 = 0;
    uint64_t v25 = 0;
  }
  if ((unint64_t)v20 >= 4) {
    char v26 = 0;
  }
  else {
    char v26 = (char)v20;
  }
  v36[0] = v16;
  v36[1] = v18;
  BOOL v27 = v19 == (id)1;
  LOBYTE(v36[2]) = v33;
  BYTE1(v36[2]) = v32;
  BYTE2(v36[2]) = v31;
  BYTE3(v36[2]) = v13;
  uint64_t v28 = v34;
  v36[3] = v34;
  v36[4] = v14;
  sub_1D42FABAC((uint64_t)v62, (uint64_t)&v36[5]);
  LOBYTE(v36[41]) = v27;
  BYTE1(v36[41]) = v26;
  v36[42] = v23;
  v36[43] = v25;
  sub_1D42FC4A4((uint64_t)v36);
  swift_bridgeObjectRelease();

  memcpy(v35, v36, 0x160uLL);
  v37[0] = v16;
  v37[1] = v18;
  unsigned __int8 v38 = v55;
  unsigned __int8 v39 = v56;
  unsigned __int8 v40 = v57;
  char v41 = v58;
  id v42 = v59;
  uint64_t v43 = v60;
  sub_1D42FABAC((uint64_t)v62, (uint64_t)v44);
  v44[288] = v27;
  v44[289] = v26;
  uint64_t v45 = v23;
  uint64_t v46 = v25;
  return sub_1D42FC604((uint64_t)v37);
}

double sub_1D42FB494(_OWORD *a1)
{
  double result = 0.0;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

void *FMIPSafeLocation.init(location:identifier:address:type:approvalState:)@<X0>(void *__src@<X3>, char *a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>, unsigned char *a5@<X4>, unsigned char *a6@<X5>, void *a7@<X8>)
{
  char v12 = *a2;
  char v13 = a2[1];
  char v14 = a2[2];
  char v15 = a2[3];
  uint64_t v16 = *((void *)a2 + 1);
  uint64_t v17 = *((void *)a2 + 2);
  memcpy(__dst, __src, sizeof(__dst));
  LOBYTE(a5) = *a5;
  LOBYTE(a6) = *a6;
  nullsub_1(__dst);
  __srca[0] = a3;
  __srca[1] = a4;
  LOBYTE(__srca[2]) = v12;
  BYTE1(__srca[2]) = v13;
  BYTE2(__srca[2]) = v14;
  BYTE3(__srca[2]) = v15;
  __srca[3] = v16;
  __srca[4] = v17;
  sub_1D42FABAC((uint64_t)__dst, (uint64_t)&__srca[5]);
  LOBYTE(__srca[41]) = (_BYTE)a5;
  BYTE1(__srca[41]) = (_BYTE)a6;
  __srca[43] = 0;
  __srca[42] = 0;
  return memcpy(a7, __srca, 0x160uLL);
}

void *FMIPSafeLocation.init(safeLocation:newLocation:)@<X0>(void *__src@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  memcpy(__dst, __src, sizeof(__dst));
  char v4 = *a2;
  char v5 = a2[1];
  char v6 = a2[2];
  char v7 = a2[3];
  id v8 = (void *)*((void *)a2 + 1);
  uint64_t v9 = *((void *)a2 + 2);
  uint64_t v10 = __dst[0];
  uint64_t v11 = __dst[1];
  char v16 = BYTE1(__dst[41]);
  char v17 = __dst[41];
  uint64_t v12 = __dst[43];
  uint64_t v15 = __dst[42];
  swift_bridgeObjectRetain();
  sub_1D42FAC78((uint64_t)&__dst[5], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D42FAC78((uint64_t)&__dst[5], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
  swift_bridgeObjectRetain();
  id v13 = v8;
  sub_1D42FC604((uint64_t)__dst);
  __srca[0] = v10;
  __srca[1] = v11;
  LOBYTE(__srca[2]) = v4;
  BYTE1(__srca[2]) = v5;
  BYTE2(__srca[2]) = v6;
  BYTE3(__srca[2]) = v7;
  __srca[3] = v13;
  __srca[4] = v9;
  sub_1D42FABAC((uint64_t)&__dst[5], (uint64_t)&__srca[5]);
  LOBYTE(__srca[41]) = v17;
  BYTE1(__srca[41]) = v16;
  __srca[42] = v15;
  __srca[43] = v12;
  sub_1D42FC4A4((uint64_t)__srca);
  swift_bridgeObjectRelease();
  sub_1D42FAC78((uint64_t)&__dst[5], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
  swift_bridgeObjectRelease();

  sub_1D42FC604((uint64_t)__srca);
  return memcpy(a3, __srca, 0x160uLL);
}

void *FMIPSafeLocation.init(identifier:label:location:placemark:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X5>, void *a7@<X8>)
{
  id v30 = a6;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  id v34 = a7;
  uint64_t v9 = sub_1D4469618();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42FB494(v44);
  sub_1D42FABAC((uint64_t)v44, (uint64_t)v43);
  char v39 = 4;
  id v13 = a5;
  id v14 = objc_msgSend(v13, sel_timestamp);
  sub_1D44695D8();

  sub_1D44695A8();
  double v16 = v15;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v17 = objc_msgSend(v13, sel_floor);
  if (v17)
  {
    uint64_t v18 = v17;
    id v19 = objc_msgSend(v17, sel_level);

    double v20 = (double)(uint64_t)v19;
  }
  else
  {
    double v20 = -1.0;
  }
  sub_1D42B7188(v13, &v39, v16 < -3600.0, 0, 1, (uint64_t)v40, v20);
  char v21 = v40[0];
  char v22 = v40[1];
  char v23 = v40[2];
  char v24 = v40[3];
  uint64_t v25 = v41;
  uint64_t v26 = v42;
  swift_bridgeObjectRetain();
  uint64_t v27 = v33;
  FMIPAddress.init(label:placemark:)(v30, v33, a4, v38);

  memcpy(v35, v38, sizeof(v35));
  memcpy(v36, v35, sizeof(v36));
  nullsub_1(v36);
  sub_1D42FABAC((uint64_t)v43, (uint64_t)v37);
  uint64_t v28 = v32;
  swift_bridgeObjectRetain();
  sub_1D42FC768((uint64_t)v35);
  sub_1D42FAC78((uint64_t)v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
  v38[0] = v31;
  v38[1] = v28;
  LOBYTE(v38[2]) = v21;
  BYTE1(v38[2]) = v22;
  BYTE2(v38[2]) = v23;
  BYTE3(v38[2]) = v24;
  v38[3] = v25;
  v38[4] = v26;
  sub_1D42FABAC((uint64_t)v36, (uint64_t)&v38[5]);
  LOWORD(v38[41]) = 256;
  v38[42] = v27;
  v38[43] = a4;
  sub_1D42FC4A4((uint64_t)v38);
  sub_1D42FC8A4((uint64_t)v35);
  swift_bridgeObjectRelease();
  sub_1D42FC604((uint64_t)v38);
  return memcpy(v34, v38, 0x160uLL);
}

uint64_t FMIPSafeLocation.init(from:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v38 = sub_1D42D5DA0(&qword_1EA6C9680);
  uint64_t v5 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  char v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42FB494(v46);
  unsigned __int8 v40 = &v45[5];
  sub_1D42FABAC((uint64_t)v46, (uint64_t)&v45[5]);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v39 = a1;
  uint64_t v9 = (void *)a1;
  uint64_t v10 = v7;
  sub_1D42C26F4(v9, v8);
  sub_1D42FC9DC();
  sub_1D446A8C8();
  if (v2)
  {
    id v13 = v40;
    sub_1D42BEC64(v39);
    sub_1D42FABAC((uint64_t)v13, (uint64_t)v42);
    return sub_1D42FAC78((uint64_t)v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
  }
  else
  {
    uint64_t v11 = v5;
    char v37 = a2;
    LOBYTE(v42[0]) = 1;
    uint64_t v12 = v38;
    uint64_t v15 = sub_1D446A598();
    uint64_t v17 = v16;
    v45[0] = v15;
    v45[1] = v16;
    v43[295] = 0;
    sub_1D42D8E34();
    swift_bridgeObjectRetain();
    sub_1D446A588();
    uint64_t v36 = v17;
    sub_1D42FABAC((uint64_t)&v44, (uint64_t)v43);
    sub_1D42FABAC((uint64_t)v43, (uint64_t)v40);
    LOBYTE(v41[0]) = 2;
    sub_1D42FAC78((uint64_t)v43, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
    sub_1D42D75CC();
    sub_1D446A5D8();
    LODWORD(v17) = BYTE2(v42[0]);
    int v18 = BYTE3(v42[0]);
    id v19 = v42[2];
    int v33 = BYTE1(v42[0]);
    int v34 = LOBYTE(v42[0]);
    LODWORD(v45[2]) = v42[0];
    v45[3] = v42[1];
    v45[4] = v42[2];
    LOBYTE(v42[0]) = 5;
    id v35 = v42[1];
    uint64_t v20 = sub_1D446A558();
    int v31 = v17;
    int v32 = v18;
    v45[42] = v20;
    v45[43] = v21;
    LOBYTE(v42[0]) = 3;
    uint64_t v22 = v20;
    uint64_t v23 = v21;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1D446A5C8();
    uint64_t v30 = v23;
    BOOL v25 = v24 == 1;
    LOBYTE(v45[41]) = v24 == 1;
    LOBYTE(v42[0]) = 4;
    unint64_t v26 = sub_1D446A5C8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v12);
    if (v26 >= 4) {
      LOBYTE(v26) = 0;
    }
    BYTE1(v45[41]) = v26;
    v41[0] = v15;
    v41[1] = v36;
    LOBYTE(v41[2]) = v34;
    BYTE1(v41[2]) = v33;
    BYTE2(v41[2]) = v31;
    BYTE3(v41[2]) = v32;
    BOOL v27 = v25;
    uint64_t v28 = v35;
    v41[3] = v35;
    v41[4] = v19;
    sub_1D42FABAC((uint64_t)v43, (uint64_t)&v41[5]);
    LOBYTE(v41[41]) = v27;
    BYTE1(v41[41]) = v26;
    v41[42] = v22;
    v41[43] = v30;
    sub_1D42FC4A4((uint64_t)v41);
    swift_bridgeObjectRelease();
    sub_1D42FAC78((uint64_t)v43, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
    swift_bridgeObjectRelease();

    memcpy(v37, v41, 0x160uLL);
    sub_1D42BEC64(v39);
    memcpy(v42, v45, sizeof(v42));
    return sub_1D42FC604((uint64_t)v42);
  }
}

uint64_t FMIPSafeLocation.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6C9690);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = *v1;
  int v7 = *((unsigned __int8 *)v1 + 16);
  int v25 = *((unsigned __int8 *)v1 + 17);
  int v26 = v7;
  int v8 = *((unsigned __int8 *)v1 + 18);
  int v23 = *((unsigned __int8 *)v1 + 19);
  int v24 = v8;
  uint64_t v22 = v1[3];
  uint64_t v9 = v1[4];
  sub_1D42FABAC((uint64_t)(v1 + 5), (uint64_t)v33);
  uint64_t v21 = *((unsigned __int8 *)v1 + 328);
  uint64_t v20 = *((unsigned __int8 *)v1 + 329);
  uint64_t v10 = v1[43];
  uint64_t v18 = v1[42];
  uint64_t v19 = v10;
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42FC9DC();
  uint64_t v11 = v3;
  sub_1D446A8E8();
  LOBYTE(v30) = 1;
  uint64_t v12 = v28;
  sub_1D446A658();
  if (!v12)
  {
    char v13 = v24;
    char v14 = v25;
    char v15 = v26;
    sub_1D42FABAC((uint64_t)v33, (uint64_t)&v30);
    char v29 = 0;
    sub_1D42D5DA0(&qword_1EBD7CC10);
    sub_1D42FCA30();
    sub_1D446A698();
    LOBYTE(v30) = v15;
    BYTE1(v30) = v14;
    BYTE2(v30) = v13;
    BYTE3(v30) = v23;
    uint64_t v31 = v22;
    uint64_t v32 = v9;
    char v29 = 2;
    sub_1D42E6A58();
    sub_1D446A698();
    LOBYTE(v30) = 3;
    sub_1D446A688();
    LOBYTE(v30) = 4;
    sub_1D446A688();
    uint64_t v30 = v18;
    uint64_t v31 = v19;
    char v29 = 5;
    sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
    sub_1D42BD508();
    sub_1D446A698();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v11);
}

uint64_t FMIPSafeLocation.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1D4469BC8();

  return swift_bridgeObjectRelease();
}

uint64_t FMIPSafeLocation.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t sub_1D42FC364@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return FMIPSafeLocation.init(from:)(a1, a2);
}

uint64_t sub_1D42FC37C(void *a1)
{
  return FMIPSafeLocation.encode(to:)(a1);
}

uint64_t sub_1D42FC398()
{
  return sub_1D446A888();
}

uint64_t sub_1D42FC3F4()
{
  swift_bridgeObjectRetain();
  sub_1D4469BC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42FC44C()
{
  return sub_1D446A888();
}

uint64_t sub_1D42FC4A4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 120);
  long long v16 = *(_OWORD *)(a1 + 104);
  long long v13 = *(_OWORD *)(a1 + 152);
  long long v14 = *(_OWORD *)(a1 + 136);
  long long v11 = *(_OWORD *)(a1 + 184);
  long long v12 = *(_OWORD *)(a1 + 168);
  long long v10 = *(_OWORD *)(a1 + 200);
  swift_bridgeObjectRetain();
  id v8 = v2;
  sub_1D42D67E8(v19, v18, v17, v3, v4, v5, v6, v7, v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D42FC604(uint64_t a1)
{
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  long long v13 = *(_OWORD *)(a1 + 120);
  long long v14 = *(_OWORD *)(a1 + 104);
  long long v11 = *(_OWORD *)(a1 + 152);
  long long v12 = *(_OWORD *)(a1 + 136);
  long long v9 = *(_OWORD *)(a1 + 184);
  long long v10 = *(_OWORD *)(a1 + 168);
  long long v8 = *(_OWORD *)(a1 + 200);

  swift_bridgeObjectRelease();
  sub_1D42D695C(v17, v16, v15, v2, v3, v4, v5, v6, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D42FC768(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D42FC8A4(uint64_t a1)
{
  return a1;
}

unint64_t sub_1D42FC9DC()
{
  unint64_t result = qword_1EA6C9688;
  if (!qword_1EA6C9688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9688);
  }
  return result;
}

unint64_t sub_1D42FCA30()
{
  unint64_t result = qword_1EBD7CC18;
  if (!qword_1EBD7CC18)
  {
    sub_1D42DB55C(&qword_1EBD7CC10);
    sub_1D42E7BC4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7CC18);
  }
  return result;
}

uint64_t _s8FMIPCore16FMIPSafeLocationV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  char v30 = *((unsigned char *)a1 + 17);
  char v31 = *((unsigned char *)a1 + 16);
  char v28 = *((unsigned char *)a1 + 19);
  char v29 = *((unsigned char *)a1 + 18);
  double v27 = *((double *)a1 + 3);
  double v6 = *((double *)a1 + 4);
  sub_1D42FABAC((uint64_t)(a1 + 5), (uint64_t)v40);
  int v26 = *((unsigned __int8 *)a1 + 328);
  int v24 = *((unsigned __int8 *)a1 + 329);
  uint64_t v21 = a1[42];
  uint64_t v22 = a1[43];
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  char v9 = *((unsigned char *)a2 + 16);
  char v10 = *((unsigned char *)a2 + 17);
  char v11 = *((unsigned char *)a2 + 18);
  char v12 = *((unsigned char *)a2 + 19);
  double v13 = *((double *)a2 + 3);
  double v14 = *((double *)a2 + 4);
  sub_1D42FABAC((uint64_t)(a2 + 5), (uint64_t)v41);
  int v25 = *((unsigned __int8 *)a2 + 328);
  int v23 = *((unsigned __int8 *)a2 + 329);
  uint64_t v15 = a2[42];
  uint64_t v16 = a2[43];
  uint64_t v20 = v15;
  if (v4 == v7 && v5 == v8 || (v17 = sub_1D446A758(), uint64_t result = 0, (v17 & 1) != 0))
  {
    LOBYTE(v37[0]) = v31;
    BYTE1(v37[0]) = v30;
    BYTE2(v37[0]) = v29;
    BYTE3(v37[0]) = v28;
    v37[1] = v27;
    void v37[2] = v6;
    LOBYTE(v39[0]) = v9;
    BYTE1(v39[0]) = v10;
    BYTE2(v39[0]) = v11;
    BYTE3(v39[0]) = v12;
    v39[1] = v13;
    v39[2] = v14;
    if (_s8FMIPCore12FMIPLocationV2eeoiySbAC_ACtFZ_0(v37, v39))
    {
      sub_1D42FABAC((uint64_t)v40, (uint64_t)v39);
      if (sub_1D42FE02C((uint64_t)v39) == 1)
      {
        sub_1D42FABAC((uint64_t)v41, (uint64_t)v37);
        if (sub_1D42FE02C((uint64_t)v37) == 1) {
          goto LABEL_12;
        }
        goto LABEL_10;
      }
      sub_1D42FABAC((uint64_t)v40, (uint64_t)__src);
      sub_1D42FABAC((uint64_t)v41, (uint64_t)v37);
      if (sub_1D42FE02C((uint64_t)v37) == 1)
      {
        memcpy(__dst, __src, sizeof(__dst));
        sub_1D42FABAC((uint64_t)v40, (uint64_t)v35);
        sub_1D42FC768((uint64_t)v35);
        sub_1D42FC768((uint64_t)v35);
        sub_1D42FC8A4((uint64_t)__dst);
LABEL_10:
        sub_1D42FABAC((uint64_t)v40, (uint64_t)v37);
        sub_1D42FABAC((uint64_t)v41, (uint64_t)&v38);
        sub_1D42FAC78((uint64_t)v41, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
        sub_1D42FE044((uint64_t)v37);
        return 0;
      }
      sub_1D42FABAC((uint64_t)v41, (uint64_t)v33);
      memcpy(v32, v33, sizeof(v32));
      char v19 = _s8FMIPCore11FMIPAddressV2eeoiySbAC_ACtFZ_0(__src, v32);
      memcpy(__dst, __src, sizeof(__dst));
      sub_1D42FABAC((uint64_t)v40, (uint64_t)v35);
      sub_1D42FC768((uint64_t)v35);
      sub_1D42FC8A4((uint64_t)__dst);
      if (v19)
      {
LABEL_12:
        if (v26 == v25 && v24 == v23)
        {
          if (v22)
          {
            if (v16 && (v21 == v20 && v22 == v16 || (sub_1D446A758() & 1) != 0)) {
              return 1;
            }
          }
          else if (!v16)
          {
            return 1;
          }
        }
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_1D42FCDA8()
{
  unint64_t result = qword_1EA6C9698;
  if (!qword_1EA6C9698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9698);
  }
  return result;
}

unint64_t sub_1D42FCE00()
{
  unint64_t result = qword_1EA6C96A0;
  if (!qword_1EA6C96A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C96A0);
  }
  return result;
}

unint64_t sub_1D42FCE58()
{
  unint64_t result = qword_1EA6C96A8;
  if (!qword_1EA6C96A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C96A8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPSafeLocationType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPSafeLocationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D42FD008);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1D42FD030(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FMIPSafeLocationType()
{
  return &type metadata for FMIPSafeLocationType;
}

uint64_t getEnumTagSinglePayload for FMIPBatteryStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPSafeLocationApprovalState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D42FD1A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPSafeLocationApprovalState()
{
  return &type metadata for FMIPSafeLocationApprovalState;
}

uint64_t destroy for FMIPSafeLocation(uint64_t a1)
{
  swift_bridgeObjectRelease();

  if (*(void *)(a1 + 208))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMIPSafeLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  unsigned int v6 = *(void **)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v5;
  uint64_t v7 = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  id v8 = v6;
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v9;
    uint64_t v10 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v10;
    uint64_t v11 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v11;
    uint64_t v12 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v12;
    uint64_t v13 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v13;
    uint64_t v14 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v14;
    uint64_t v15 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v15;
    uint64_t v16 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v16;
    uint64_t v17 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = v17;
    uint64_t v18 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v18;
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = v7;
    uint64_t v19 = *(void *)(a2 + 224);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = v19;
    uint64_t v20 = *(void *)(a2 + 240);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = v20;
    uint64_t v21 = *(void *)(a2 + 256);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = v21;
    uint64_t v22 = *(void *)(a2 + 272);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = v22;
    uint64_t v23 = *(void *)(a2 + 288);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(void *)(a1 + 288) = v23;
    uint64_t v24 = *(void *)(a2 + 304);
    *(void *)(a1 + 296) = *(void *)(a2 + 296);
    *(void *)(a1 + 304) = v24;
    uint64_t v25 = *(void *)(a2 + 320);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    *(void *)(a1 + 320) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x120uLL);
  }
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(unsigned char *)(a1 + 329) = *(unsigned char *)(a2 + 329);
  uint64_t v26 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v26;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMIPSafeLocation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  uint64_t v4 = *(void **)(a2 + 24);
  uint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v4;
  id v6 = v4;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 208);
  if (!*(void *)(a1 + 208))
  {
    if (v7)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x120uLL);
    goto LABEL_8;
  }
  if (!v7)
  {
    sub_1D42FDA08(a1 + 40);
    goto LABEL_7;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(unsigned char *)(a1 + 329) = *(unsigned char *)(a2 + 329);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D42FDA08(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for FMIPSafeLocation(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x160uLL);
}

uint64_t assignWithTake for FMIPSafeLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  uint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 208)) {
    goto LABEL_5;
  }
  if (!*(void *)(a2 + 208))
  {
    sub_1D42FDA08(a1 + 40);
LABEL_5:
    memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x120uLL);
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 320);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = v22;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(unsigned char *)(a1 + 329) = *(unsigned char *)(a2 + 329);
  uint64_t v23 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPSafeLocation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 352)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPSafeLocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 344) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 352) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 352) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPSafeLocation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPSafeLocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D42FDEA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPSafeLocation.CodingKeys()
{
  return &type metadata for FMIPSafeLocation.CodingKeys;
}

unint64_t sub_1D42FDEDC()
{
  unint64_t result = qword_1EA6C96B0;
  if (!qword_1EA6C96B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C96B0);
  }
  return result;
}

unint64_t sub_1D42FDF34()
{
  unint64_t result = qword_1EA6C96B8;
  if (!qword_1EA6C96B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C96B8);
  }
  return result;
}

unint64_t sub_1D42FDF8C()
{
  unint64_t result = qword_1EA6C96C0;
  if (!qword_1EA6C96C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C96C0);
  }
  return result;
}

uint64_t sub_1D42FDFE0()
{
  unint64_t v0 = sub_1D446A518();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D42FE02C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 168);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1D42FE044(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 296);
  uint64_t v17 = *(void *)(a1 + 288);
  uint64_t v3 = *(void *)(a1 + 304);
  uint64_t v4 = *(void *)(a1 + 312);
  uint64_t v5 = *(void *)(a1 + 320);
  uint64_t v6 = *(void *)(a1 + 328);
  uint64_t v7 = *(void *)(a1 + 336);
  uint64_t v8 = *(void *)(a1 + 344);
  long long v15 = *(_OWORD *)(a1 + 368);
  long long v16 = *(_OWORD *)(a1 + 352);
  long long v13 = *(_OWORD *)(a1 + 400);
  long long v14 = *(_OWORD *)(a1 + 384);
  long long v11 = *(_OWORD *)(a1 + 432);
  long long v12 = *(_OWORD *)(a1 + 416);
  long long v10 = *(_OWORD *)(a1 + 448);
  sub_1D42D695C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168));
  sub_1D42D695C(v17, v2, v3, v4, v5, v6, v7, v8, v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1));
  return a1;
}

uint64_t FMIPItemGroupAction.itemGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D42FE1FC(v1 + OBJC_IVAR____TtC8FMIPCore19FMIPItemGroupAction_itemGroup, a1);
}

uint64_t sub_1D42FE1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPItemGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FMIPItemGroupAction.__allocating_init(itemGroup:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1D42FE2D4(a1, v2 + OBJC_IVAR____TtC8FMIPCore19FMIPItemGroupAction_itemGroup);
  return v2;
}

uint64_t FMIPItemGroupAction.init(itemGroup:)(uint64_t a1)
{
  sub_1D42FE2D4(a1, v1 + OBJC_IVAR____TtC8FMIPCore19FMIPItemGroupAction_itemGroup);
  return v1;
}

uint64_t sub_1D42FE2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPItemGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FMIPItemGroupAction.deinit()
{
  sub_1D42FE360(v0 + OBJC_IVAR____TtC8FMIPCore19FMIPItemGroupAction_itemGroup);
  return v0;
}

uint64_t sub_1D42FE360(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPItemGroup();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FMIPItemGroupAction.__deallocating_deinit()
{
  sub_1D42FE360(v0 + OBJC_IVAR____TtC8FMIPCore19FMIPItemGroupAction_itemGroup);

  return swift_deallocClassInstance();
}

uint64_t FMIPItemGroupAction.description.getter()
{
  return 60;
}

uint64_t sub_1D42FE5F4()
{
  return FMIPItemGroupAction.description.getter();
}

uint64_t sub_1D42FE618()
{
  return type metadata accessor for FMIPItemGroupAction();
}

uint64_t type metadata accessor for FMIPItemGroupAction()
{
  uint64_t result = qword_1EA6C96C8;
  if (!qword_1EA6C96C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D42FE66C()
{
  uint64_t result = type metadata accessor for FMIPItemGroup();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FMIPItemGroupAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPItemGroupAction);
}

uint64_t dispatch thunk of FMIPItemGroupAction.__allocating_init(itemGroup:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t FMIPItemRole.identifier.getter()
{
  return *(void *)v0;
}

uint64_t FMIPItemRole.emoji.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPItemRole.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D42FE790(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D4415720(*a1, *a2);
}

uint64_t sub_1D42FE79C()
{
  return sub_1D446A888();
}

uint64_t sub_1D42FE838()
{
  sub_1D4469BC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42FE8C0()
{
  return sub_1D446A888();
}

uint64_t sub_1D42FE958@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D42FF734();
  *a1 = result;
  return result;
}

void sub_1D42FE988(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEA00000000007265;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x696A6F6D65;
  if (v2 != 1)
  {
    uint64_t v5 = 1701667182;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x696669746E656469;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D42FE9E0()
{
  uint64_t v1 = 0x696A6F6D65;
  if (*v0 != 1) {
    uint64_t v1 = 1701667182;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1D42FEA34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D42FF734();
  *a1 = result;
  return result;
}

void sub_1D42FEA5C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1D42FEA68(uint64_t a1)
{
  unint64_t v2 = sub_1D42FECE0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D42FEAA4(uint64_t a1)
{
  unint64_t v2 = sub_1D42FECE0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPItemRole.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6C96D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42FECE0();
  sub_1D446A8C8();
  if (!v2)
  {
    char v21 = 1;
    uint64_t v9 = sub_1D446A598();
    uint64_t v11 = v10;
    char v20 = 0;
    uint64_t v18 = sub_1D446A5C8();
    char v19 = 2;
    uint64_t v13 = sub_1D446A598();
    long long v14 = v8;
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
    *a2 = v18;
    a2[1] = v9;
    a2[2] = v11;
    a2[3] = v13;
    a2[4] = v16;
  }
  return sub_1D42BEC64((uint64_t)a1);
}

unint64_t sub_1D42FECE0()
{
  unint64_t result = qword_1EA6C96E0;
  if (!qword_1EA6C96E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C96E0);
  }
  return result;
}

uint64_t FMIPItemRole.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C96E8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  v11[0] = v1[2];
  v11[1] = v8;
  uint64_t v9 = v1[3];
  void v11[2] = v1[4];
  v11[3] = v9;
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42FECE0();
  sub_1D446A8E8();
  char v14 = 0;
  sub_1D446A688();
  if (!v2)
  {
    char v13 = 2;
    sub_1D446A658();
    char v12 = 1;
    sub_1D446A658();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FMIPItemRole.hash(into:)()
{
  sub_1D446A838();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();

  return swift_bridgeObjectRelease();
}

uint64_t FMIPItemRole.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t sub_1D42FF014@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FMIPItemRole.init(from:)(a1, a2);
}

uint64_t sub_1D42FF02C(void *a1)
{
  return FMIPItemRole.encode(to:)(a1);
}

uint64_t sub_1D42FF048()
{
  return sub_1D446A888();
}

uint64_t sub_1D42FF0E8()
{
  sub_1D446A838();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42FF178()
{
  return sub_1D446A888();
}

uint64_t _s8FMIPCore12FMIPItemRoleV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  BOOL v6 = a1[3] == a2[3] && a1[4] == a2[4];
  if (v6 || (char v7 = sub_1D446A758(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_1D446A758();
    }
  }
  return result;
}

unint64_t sub_1D42FF2D4()
{
  unint64_t result = qword_1EA6C96F0;
  if (!qword_1EA6C96F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C96F0);
  }
  return result;
}

uint64_t destroy for FMIPItemRole()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMIPItemRole(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FMIPItemRole(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FMIPItemRole(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FMIPItemRole(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPItemRole(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPItemRole(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPItemRole()
{
  return &type metadata for FMIPItemRole;
}

unsigned char *storeEnumTagSinglePayload for FMIPItemRole.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D42FF5F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPItemRole.CodingKeys()
{
  return &type metadata for FMIPItemRole.CodingKeys;
}

unint64_t sub_1D42FF630()
{
  unint64_t result = qword_1EA6C96F8;
  if (!qword_1EA6C96F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C96F8);
  }
  return result;
}

unint64_t sub_1D42FF688()
{
  unint64_t result = qword_1EA6C9700;
  if (!qword_1EA6C9700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9700);
  }
  return result;
}

unint64_t sub_1D42FF6E0()
{
  unint64_t result = qword_1EA6C9708;
  if (!qword_1EA6C9708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9708);
  }
  return result;
}

uint64_t sub_1D42FF734()
{
  unint64_t v0 = sub_1D446A518();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManagerDidInitialize(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManagerDidLoadCache(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:initializationDidFail:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:devicesDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:deviceDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:deviceRemoved:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:ownerDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:familyMembersDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:didReceive:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManagerDidRefresh(_:startDate:endDate:tapContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 80))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManagerRequestLastLocation(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:imageVersionChanged:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 96))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:serverConfigurationChanged:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:itemsDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:itemDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:itemRemoved:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:unknownItemsDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 136))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:utAlertStateDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 144))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:itemGroupsDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 152))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:rangingParametersDidUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 160))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:safeLocationsDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 168))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:separationMonitoringStateDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 176))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:sharesDidChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 184))();
}

uint64_t dispatch thunk of FMIPManagerDelegate.fmipManager(_:sharingLimitsDidUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 192))();
}

uint64_t sub_1D42FF9C0()
{
  qword_1EA6C9710 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_none");

  return swift_unknownObjectRetain();
}

uint64_t static FMOSActivity.current.getter@<X0>(void *a1@<X8>)
{
  return sub_1D42FFAB8(&qword_1EBD7E6F0, &qword_1EBD7E6E8, a1);
}

const char *FMOSActivity.init(_:parent:options:)@<X0>(const char *description@<X0>, char a2@<W2>, os_activity_t *a3@<X3>, os_activity_flag_t *a4@<X4>, os_activity_t *a5@<X8>)
{
  if (a2)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (!description)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (*a3)
  {
    os_activity_t v6 = _os_activity_create(&dword_1D4271000, description, *a3, *a4);
    description = (const char *)swift_unknownObjectRelease();
    *a5 = v6;
    return description;
  }
LABEL_7:
  __break(1u);
  return description;
}

uint64_t FMOSActivity.Options.flags.getter()
{
  return *v0;
}

uint64_t static FMOSActivity.none.getter@<X0>(void *a1@<X8>)
{
  return sub_1D42FFAB8(&qword_1EA6C8F48, &qword_1EA6C9710, a1);
}

uint64_t sub_1D42FFAB8@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  *a3 = *a2;

  return swift_unknownObjectRetain();
}

uint64_t FMOSActivity.apply(execute:)(const void *a1)
{
  uint64_t result = (uint64_t)_Block_copy(a1);
  int v3 = *v1;
  if (v3)
  {
    uint64_t v4 = result;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_1D42AEE64;
    *(void *)(v6 + 24) = v5;
    v9[4] = sub_1D42AEE0C;
    v9[5] = v6;
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 1107296256;
    _OWORD v9[2] = sub_1D42AEDE4;
    v9[3] = &unk_1F2C05510;
    char v7 = _Block_copy(v9);
    swift_retain();
    swift_release();
    os_activity_apply(v3, v7);
    _Block_release(v7);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D42FFC64()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D42FFC9C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

const void *static FMOSActivity.start(_:execute:)(const char *a1, int a2, char a3, void *aBlock)
{
  uint64_t result = _Block_copy(aBlock);
  char v7 = result;
  if (qword_1EBD7E6F0 == -1)
  {
    if ((a3 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t result = (const void *)swift_once();
  if (a3) {
    goto LABEL_7;
  }
LABEL_3:
  if (!a1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v8 = qword_1EBD7E6E8;
  swift_unknownObjectRetain();
  uint64_t v9 = _os_activity_create(&dword_1D4271000, a1, v8, OS_ACTIVITY_FLAG_DEFAULT);
  swift_unknownObjectRelease();
  uint64_t v10 = _Block_copy(v7);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1D4300360;
  *(void *)(v12 + 24) = v11;
  v14[4] = sub_1D4300358;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  void v14[2] = sub_1D42AEDE4;
  v14[3] = &unk_1F2C05588;
  char v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  os_activity_apply(v9, v13);
  _Block_release(v13);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v7);
  uint64_t result = (const void *)swift_unknownObjectRelease();
  if (v13) {
LABEL_9:
  }
    __break(1u);
  return result;
}

uint64_t FMOSActivity.Options.rawValue.getter()
{
  return *v0;
}

uint64_t FMOSActivity.Options.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static FMOSActivity.Options.default.getter(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

void static FMOSActivity.Options.detached.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

void static FMOSActivity.Options.ifNonePresent.getter(_DWORD *a1@<X8>)
{
  *a1 = 2;
}

_DWORD *sub_1D42FFEC4@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1D42FFED0(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1D42FFED8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_1D42FFEEC()
{
  unint64_t result = qword_1EA6C9720;
  if (!qword_1EA6C9720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9720);
  }
  return result;
}

unint64_t sub_1D42FFF44()
{
  unint64_t result = qword_1EA6C9728;
  if (!qword_1EA6C9728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9728);
  }
  return result;
}

unint64_t sub_1D42FFF9C()
{
  unint64_t result = qword_1EA6C9730;
  if (!qword_1EA6C9730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9730);
  }
  return result;
}

unint64_t sub_1D42FFFF4()
{
  unint64_t result = qword_1EA6C9738;
  if (!qword_1EA6C9738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9738);
  }
  return result;
}

_DWORD *sub_1D4300048@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_1D430005C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_1D4300070@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1D4300084(_DWORD *a1, int *a2)
{
  int v3 = *a2;
  int v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1D43000B4@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(_DWORD *)a2 = v3;
  *(unsigned char *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_1D43000E0@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *v2 |= *result;
  int v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_1D4300104(_DWORD *result)
{
  *v1 |= *result;
  return result;
}

_DWORD *sub_1D4300118(_DWORD *result)
{
  *v1 &= *result;
  return result;
}

_DWORD *sub_1D430012C(_DWORD *result)
{
  *v1 ^= *result;
  return result;
}

_DWORD *sub_1D4300140@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1D4300154(_DWORD *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1D4300168(_DWORD *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1D430017C(_DWORD *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1D4300190()
{
  return *v0 == 0;
}

uint64_t sub_1D43001A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

_DWORD *sub_1D43001B8(_DWORD *result)
{
  *v1 &= ~*result;
  return result;
}

BOOL sub_1D43001CC(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void *initializeBufferWithCopyOfBuffer for FMOSActivity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for FMOSActivity()
{
  return swift_unknownObjectRelease();
}

void *assignWithCopy for FMOSActivity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

void *assignWithTake for FMOSActivity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMOSActivity(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMOSActivity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMOSActivity()
{
  return &type metadata for FMOSActivity;
}

ValueMetadata *type metadata accessor for FMOSActivity.Options()
{
  return &type metadata for FMOSActivity.Options;
}

uint64_t FMIPProductType.productInformation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C97A0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  char v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = type metadata accessor for FMIPProductType();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4300640(v2, (uint64_t)v12);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result == 1)
    {
      long long v14 = *(_OWORD *)v12;
      long long v26 = *((_OWORD *)v12 + 1);
      long long v27 = v14;
      long long v25 = *((_OWORD *)v12 + 2);
      uint64_t v15 = *((void *)v12 + 6);
      uint64_t v16 = *((void *)v12 + 7);
      uint64_t v17 = *((void *)v12 + 8);
      *(void *)(a1 + 24) = &type metadata for FMIPZeusProductInformation;
      *(void *)(a1 + 32) = &protocol witness table for FMIPZeusProductInformation;
      uint64_t result = swift_allocObject();
      *(void *)a1 = result;
      long long v18 = v26;
      *(_OWORD *)(result + 16) = v27;
      *(_OWORD *)(result + 32) = v18;
      *(_OWORD *)(result + 48) = v25;
      *(void *)(result + 64) = v15;
LABEL_6:
      *(void *)(result + 72) = v16;
      *(void *)(result + 80) = v17;
      return result;
    }
    sub_1D43006A4((uint64_t)v12, (uint64_t)v9);
    sub_1D430070C((uint64_t)v9, (uint64_t)v7);
    uint64_t v23 = type metadata accessor for FMIPHawkeyeProductInformation();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v7, 1, v23) == 1)
    {
      sub_1D4276C3C((uint64_t)v9, &qword_1EA6C97A0);
      uint64_t result = sub_1D4276C3C((uint64_t)v7, &qword_1EA6C97A0);
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = 0;
    }
    else
    {
      *(void *)(a1 + 24) = v23;
      *(void *)(a1 + 32) = &protocol witness table for FMIPHawkeyeProductInformation;
      uint64_t v24 = sub_1D42BECB4((uint64_t *)a1);
      sub_1D43032A8((uint64_t)v7, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
      return sub_1D4276C3C((uint64_t)v9, &qword_1EA6C97A0);
    }
  }
  else
  {
    uint64_t v19 = *((void *)v12 + 3);
    if (v19)
    {
      uint64_t v17 = *((void *)v12 + 8);
      uint64_t v20 = *((void *)v12 + 6);
      uint64_t v16 = *((void *)v12 + 7);
      long long v21 = *((_OWORD *)v12 + 2);
      uint64_t v22 = *((void *)v12 + 2);
      long long v26 = *(_OWORD *)v12;
      long long v27 = v21;
      *(void *)(a1 + 24) = &type metadata for FMIPB389ProductInformation;
      *(void *)(a1 + 32) = &protocol witness table for FMIPB389ProductInformation;
      uint64_t result = swift_allocObject();
      *(void *)a1 = result;
      *(_OWORD *)(result + 16) = v26;
      *(void *)(result + 32) = v22;
      *(void *)(result + 40) = v19;
      *(_OWORD *)(result + 48) = v27;
      *(void *)(result + 64) = v20;
      goto LABEL_6;
    }
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1D4300640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPProductType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D43006A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C97A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D430070C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C97A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D430077C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FMIPProductType();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)&v67[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  sub_1D42C26F4(a1, v7);
  uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v7, v8);
  uint64_t v10 = sub_1D4469B38();
  uint64_t v12 = v11;
  if (v10 == sub_1D4469B38() && v12 == v13) {
    goto LABEL_14;
  }
  char v15 = sub_1D446A758();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_15:

    sub_1D42A4D5C((uint64_t)a1, (uint64_t)v67);
    FMIPHawkeyeProductInformation.init(beacon:)(v67, (uint64_t)v6);
    goto LABEL_16;
  }
  uint64_t v16 = sub_1D4469B38();
  uint64_t v18 = v17;
  if (v16 == sub_1D4469B38() && v18 == v19)
  {
LABEL_14:
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v21 = sub_1D446A758();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_15;
  }
  uint64_t v22 = sub_1D4469B38();
  uint64_t v24 = v23;
  if (v22 == sub_1D4469B38() && v24 == v25)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v27 = sub_1D446A758();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {
      uint64_t v52 = sub_1D4469B38();
      uint64_t v54 = v53;
      if (v52 == sub_1D4469B38() && v54 == v55)
      {
        while (1)
        {
          swift_bridgeObjectRelease_n();
LABEL_26:
          while (1)
          {
            sub_1D446A488();
            __break(1u);
LABEL_27:
            uint64_t v57 = sub_1D4469B38();
            uint64_t v59 = v58;
            if (v57 == sub_1D4469B38() && v59 == v60) {
              break;
            }
            char v61 = sub_1D446A758();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v61 & 1) == 0)
            {
              uint64_t v62 = sub_1D4469B38();
              uint64_t v64 = v63;
              if (v62 == sub_1D4469B38() && v64 == v65)
              {

                swift_bridgeObjectRelease_n();
              }
              else
              {
                sub_1D446A758();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
            }
          }
        }
      }
      char v56 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v56 & 1) == 0) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
  }

  uint64_t v28 = a1[3];
  uint64_t v29 = a1[4];
  sub_1D42C26F4(a1, v28);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v29 + 160))(v28, v29))
  {
    sub_1D42A4D5C((uint64_t)a1, (uint64_t)v67);
    uint64_t v30 = v68;
    uint64_t v31 = v69;
    sub_1D42C26F4(v67, v68);
    uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 136))(v30, v31);
    uint64_t v33 = v68;
    uint64_t v34 = v69;
    sub_1D42C26F4(v67, v68);
    uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 144))(v33, v34);
    uint64_t v36 = v68;
    uint64_t v37 = v69;
    sub_1D42C26F4(v67, v68);
    uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 56))(v36, v37);
    uint64_t v40 = v39;
    sub_1D42BEC64((uint64_t)v67);
    *uint64_t v6 = v32;
    v6[1] = v35;
    v6[2] = v38;
    v6[3] = v40;
    v6[4] = 0x656C707041;
    v6[5] = 0xE500000000000000;
  }
  else
  {
    sub_1D42A4D5C((uint64_t)a1, (uint64_t)v67);
    uint64_t v41 = v68;
    uint64_t v42 = v69;
    sub_1D42C26F4(v67, v68);
    uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 136))(v41, v42);
    uint64_t v44 = v68;
    uint64_t v45 = v69;
    sub_1D42C26F4(v67, v68);
    uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 144))(v44, v45);
    uint64_t v47 = v68;
    uint64_t v48 = v69;
    sub_1D42C26F4(v67, v68);
    uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 56))(v47, v48);
    uint64_t v51 = v50;
    sub_1D42BEC64((uint64_t)v67);
    *uint64_t v6 = v43;
    v6[1] = v46;
    v6[2] = v49;
    v6[3] = v51;
    *((_OWORD *)v6 + 2) = xmmword_1D446DC70;
  }
  v6[6] = 0;
  v6[7] = 0;
  v6[8] = 0x4010000000000000;
LABEL_16:
  swift_storeEnumTagMultiPayload();
  sub_1D43032A8((uint64_t)v6, a2, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
  return sub_1D42BEC64((uint64_t)a1);
}

uint64_t sub_1D4300E0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (objc_msgSend(a1, sel_isPosh))
  {
    id v4 = objc_msgSend(a1, sel_productInformation);
    if (v4)
    {
      uint64_t v5 = v4;
      unsigned int v6 = objc_msgSend(v4, sel_isAirTag);

      if (v6) {
        goto LABEL_18;
      }
    }
LABEL_13:
    FMIPHawkeyeProductInformation.init(beacon:)(a1, a2);
    type metadata accessor for FMIPProductType();
    goto LABEL_14;
  }
  id v7 = objc_msgSend(a1, sel_type);
  uint64_t v8 = sub_1D4469B38();
  uint64_t v10 = v9;
  if (v8 == sub_1D4469B38() && v10 == v11) {
    goto LABEL_12;
  }
  char v13 = sub_1D446A758();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_13;
  }
  id v7 = objc_msgSend(a1, sel_type);
  uint64_t v14 = sub_1D4469B38();
  uint64_t v16 = v15;
  if (v14 == sub_1D4469B38() && v16 == v17)
  {
LABEL_12:

    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  char v19 = sub_1D446A758();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_13;
  }
LABEL_18:

  type metadata accessor for FMIPProductType();
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(void *)(a2 + 64) = 0;
LABEL_14:

  return swift_storeEnumTagMultiPayload();
}

uint64_t FMIPProductType.supportBTFinding.getter()
{
  return 1;
}

BOOL FMIPProductType.isZeus.getter()
{
  uint64_t v1 = type metadata accessor for FMIPProductType();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4300640(v0, (uint64_t)v3);
  BOOL v4 = swift_getEnumCaseMultiPayload() == 1;
  sub_1D430267C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
  return v4;
}

BOOL _s8FMIPCore15FMIPProductTypeO10supportsR1Sbvg_0()
{
  uint64_t v1 = type metadata accessor for FMIPProductType();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4300640(v0, (uint64_t)v3);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload > 1) {
    sub_1D4276C3C((uint64_t)v3, &qword_1EA6C97A0);
  }
  else {
    sub_1D430267C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
  }
  return EnumCaseMultiPayload < 2;
}

BOOL FMIPProductType.isAccessory.getter()
{
  uint64_t v1 = type metadata accessor for FMIPProductType();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4300640(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2) {
    sub_1D4276C3C((uint64_t)v3, &qword_1EA6C97A0);
  }
  else {
    sub_1D430267C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
  }
  return EnumCaseMultiPayload == 2;
}

uint64_t FMIPProductType.coreLocationBeaconType.getter()
{
  uint64_t v1 = type metadata accessor for FMIPProductType();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4300640(v0, (uint64_t)v3);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_1D4276C3C((uint64_t)v3, &qword_1EA6C97A0);
    return 3;
  }
  else
  {
    sub_1D430267C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
    return 1;
  }
}

uint64_t FMIPProductType.hash(into:)()
{
  uint64_t v1 = type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  BOOL v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6C97A0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = type metadata accessor for FMIPProductType();
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4300640(v0, (uint64_t)v13);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      long long v31 = *(_OWORD *)v13;
      uint64_t v16 = *((void *)v13 + 2);
      uint64_t v15 = *((void *)v13 + 3);
      uint64_t v18 = *((void *)v13 + 4);
      uint64_t v17 = *((void *)v13 + 5);
      uint64_t v20 = *((void *)v13 + 6);
      uint64_t v19 = *((void *)v13 + 7);
      uint64_t v21 = *((void *)v13 + 8);
      sub_1D446A838();
      long long v32 = v31;
      uint64_t v33 = v16;
      uint64_t v34 = v15;
      uint64_t v35 = v18;
      uint64_t v36 = v17;
      uint64_t v37 = v20;
      uint64_t v38 = v19;
      uint64_t v39 = v21;
      FMIPZeusProductInformation.hash(into:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D43006A4((uint64_t)v13, (uint64_t)v10);
      sub_1D446A838();
      sub_1D430070C((uint64_t)v10, (uint64_t)v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1)
      {
        sub_1D446A848();
      }
      else
      {
        sub_1D43032A8((uint64_t)v8, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
        sub_1D446A848();
        FMIPHawkeyeProductInformation.hash(into:)();
        sub_1D430267C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
      }
      return sub_1D4276C3C((uint64_t)v10, &qword_1EA6C97A0);
    }
  }
  else
  {
    uint64_t v23 = *(void *)v13;
    uint64_t v24 = *((void *)v13 + 1);
    uint64_t v26 = *((void *)v13 + 2);
    uint64_t v25 = *((void *)v13 + 3);
    uint64_t v27 = *((void *)v13 + 4);
    uint64_t v28 = *((void *)v13 + 5);
    uint64_t v29 = *((void *)v13 + 7);
    *(void *)&long long v31 = *((void *)v13 + 6);
    uint64_t v30 = *((void *)v13 + 8);
    sub_1D446A838();
    if (v25)
    {
      *(void *)&long long v32 = v23;
      *((void *)&v32 + 1) = v24;
      uint64_t v33 = v26;
      uint64_t v34 = v25;
      uint64_t v35 = v27;
      uint64_t v36 = v28;
      uint64_t v37 = v31;
      uint64_t v38 = v29;
      uint64_t v39 = v30;
      sub_1D446A848();
      FMIPB389ProductInformation.hash(into:)();
      return sub_1D43026DC(v23, v24, v26, v25);
    }
    else
    {
      return sub_1D446A848();
    }
  }
}

uint64_t FMIPProductType.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t sub_1D43016CC()
{
  return sub_1D446A888();
}

uint64_t sub_1D4301710()
{
  return sub_1D446A888();
}

uint64_t sub_1D4301750(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D4414FF4(*a1, *a2);
}

uint64_t sub_1D430175C()
{
  return sub_1D446A888();
}

uint64_t sub_1D43017F0()
{
  sub_1D4469BC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4301870()
{
  return sub_1D446A888();
}

uint64_t sub_1D4301900@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D4304964();
  *a1 = result;
  return result;
}

void sub_1D4301930(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1937073530;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6579656B776168;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 959984482;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D4301980()
{
  return sub_1D4469D18();
}

uint64_t sub_1D43019E0()
{
  return sub_1D4469CF8();
}

uint64_t sub_1D4301A30(char *a1, char *a2)
{
  return sub_1D4414F50(*a1, *a2);
}

uint64_t sub_1D4301A3C()
{
  return sub_1D446A888();
}

uint64_t sub_1D4301ABC()
{
  sub_1D4469BC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4301B28()
{
  return sub_1D446A888();
}

uint64_t sub_1D4301BA4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1D4301C04(unint64_t *a1@<X8>)
{
  unint64_t v2 = 1701869940;
  if (*v1) {
    unint64_t v2 = 0xD000000000000012;
  }
  unint64_t v3 = 0x80000001D447D140;
  if (!*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D4301C40()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1D4301C78@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1D4301CDC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1D4301CE8(uint64_t a1)
{
  unint64_t v2 = sub_1D4302FEC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D4301D24(uint64_t a1)
{
  unint64_t v2 = sub_1D4302FEC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPProductType.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v43 = sub_1D42D5DA0(&qword_1EA6C97A0);
  MEMORY[0x1F4188790](v43);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMIPProductType();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1D42D5DA0(&qword_1EA6C97A8);
  uint64_t v45 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D4302FEC();
  sub_1D446A8E8();
  sub_1D4300640(v2, (uint64_t)v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = *v8;
      uint64_t v13 = v8[1];
      uint64_t v15 = v8[3];
      uint64_t v42 = v8[2];
      uint64_t v43 = v13;
      uint64_t v16 = v8[4];
      uint64_t v17 = v8[5];
      uint64_t v18 = v8[7];
      uint64_t v40 = v8[6];
      uint64_t v41 = v16;
      uint64_t v19 = v8[8];
      LOBYTE(v46) = 1;
      char v55 = 0;
      sub_1D4303040();
      uint64_t v20 = v44;
      sub_1D446A698();
      if (!v20)
      {
        uint64_t v46 = v14;
        uint64_t v47 = v43;
        uint64_t v48 = v42;
        uint64_t v49 = v15;
        uint64_t v50 = v41;
        uint64_t v51 = v17;
        uint64_t v52 = v40;
        uint64_t v53 = v18;
        uint64_t v54 = v19;
        char v55 = 1;
        sub_1D4303138();
        sub_1D446A698();
      }
      (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D43006A4((uint64_t)v8, (uint64_t)v5);
      LOBYTE(v46) = 2;
      char v55 = 0;
      sub_1D4303040();
      uint64_t v35 = v44;
      sub_1D446A698();
      if (!v35)
      {
        LOBYTE(v46) = 1;
        sub_1D4303094();
        sub_1D446A698();
      }
      sub_1D4276C3C((uint64_t)v5, &qword_1EA6C97A0);
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v11, v9);
    }
  }
  else
  {
    uint64_t v23 = *v8;
    uint64_t v22 = v8[1];
    uint64_t v24 = v8[2];
    uint64_t v25 = v8[3];
    uint64_t v26 = v8[5];
    uint64_t v40 = v8[4];
    uint64_t v41 = v26;
    uint64_t v27 = v8[6];
    uint64_t v28 = v8[7];
    uint64_t v29 = v8[8];
    uint64_t v42 = v27;
    uint64_t v43 = v28;
    LOBYTE(v46) = 0;
    char v55 = 0;
    sub_1D4303040();
    uint64_t v30 = v44;
    sub_1D446A698();
    if (v30)
    {
      (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v9);
      uint64_t v31 = v23;
      uint64_t v32 = v22;
      uint64_t v33 = v24;
      uint64_t v34 = v25;
    }
    else
    {
      uint64_t v36 = v23;
      uint64_t v37 = v22;
      uint64_t v46 = v23;
      uint64_t v47 = v22;
      uint64_t v38 = v24;
      uint64_t v39 = v25;
      uint64_t v48 = v24;
      uint64_t v49 = v25;
      uint64_t v50 = v40;
      uint64_t v51 = v41;
      uint64_t v52 = v42;
      uint64_t v53 = v43;
      uint64_t v54 = v29;
      char v55 = 1;
      sub_1D42D5DA0(&qword_1EA6C97D8);
      sub_1D430318C();
      sub_1D446A698();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v9);
      uint64_t v31 = v36;
      uint64_t v32 = v37;
      uint64_t v33 = v38;
      uint64_t v34 = v39;
    }
    return sub_1D43026DC(v31, v32, v33, v34);
  }
}

uint64_t FMIPProductType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v37 = sub_1D42D5DA0(&qword_1EA6C97F0);
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for FMIPProductType();
  uint64_t v5 = MEMORY[0x1F4188790](v34);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v31 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v31 - v14;
  sub_1D42C26F4(a1, a1[3]);
  sub_1D4302FEC();
  uint64_t v16 = v38;
  sub_1D446A8C8();
  if (!v16)
  {
    uint64_t v31 = v13;
    uint64_t v32 = v10;
    uint64_t v38 = a1;
    uint64_t v17 = v35;
    uint64_t v33 = v15;
    uint64_t v18 = v36;
    char v44 = 0;
    sub_1D4303254();
    uint64_t v19 = v37;
    sub_1D446A5D8();
    if ((_BYTE)v39)
    {
      if (v39 != 1)
      {
        type metadata accessor for FMIPHawkeyeProductInformation();
        LOBYTE(v39) = 1;
        sub_1D4303400(&qword_1EA6C9800, (void (*)(uint64_t))type metadata accessor for FMIPHawkeyeProductInformation);
        sub_1D446A588();
        (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v19);
        uint64_t v30 = (uint64_t)v33;
        swift_storeEnumTagMultiPayload();
        uint64_t v29 = (uint64_t)v7;
        goto LABEL_11;
      }
      char v44 = 1;
      sub_1D4303310();
      sub_1D446A5D8();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v19);
      long long v22 = v41;
      uint64_t v23 = v43;
      long long v24 = v40;
      uint64_t v25 = v32;
      *uint64_t v32 = v39;
      v25[1] = v24;
      void v25[2] = v22;
      v25[3] = v42;
      *((void *)v25 + 8) = v23;
    }
    else
    {
      char v44 = 1;
      sub_1D4303364();
      sub_1D446A588();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v19);
      uint64_t v26 = v43;
      long long v27 = v40;
      uint64_t v25 = v31;
      *uint64_t v31 = v39;
      v25[1] = v27;
      long long v28 = v42;
      void v25[2] = v41;
      v25[3] = v28;
      *((void *)v25 + 8) = v26;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = (uint64_t)v25;
    uint64_t v30 = (uint64_t)v33;
LABEL_11:
    sub_1D43032A8(v29, v30, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
    sub_1D43032A8(v30, v18, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
    uint64_t v20 = (uint64_t)v38;
    return sub_1D42BEC64(v20);
  }
  uint64_t v20 = (uint64_t)a1;
  return sub_1D42BEC64(v20);
}

uint64_t sub_1D430264C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPProductType.init(from:)(a1, a2);
}

uint64_t sub_1D4302664(void *a1)
{
  return FMIPProductType.encode(to:)(a1);
}

uint64_t sub_1D430267C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D43026DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

BOOL _s8FMIPCore15FMIPProductTypeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v80 = (char *)type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t v79 = *((void *)v80 - 1);
  MEMORY[0x1F4188790](v80);
  uint64_t v77 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6C9848);
  MEMORY[0x1F4188790](v5);
  uint64_t v81 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EA6C97A0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v78 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v70 - v10;
  uint64_t v12 = type metadata accessor for FMIPProductType();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v70 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (uint64_t *)((char *)&v70 - v19);
  uint64_t v21 = sub_1D42D5DA0(&qword_1EA6C9850);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  long long v24 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (uint64_t *)&v24[*(int *)(v22 + 56)];
  sub_1D4300640(a1, (uint64_t)v24);
  sub_1D4300640(a2, (uint64_t)v25);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v80 = v24;
    sub_1D4300640((uint64_t)v24, (uint64_t)v20);
    uint64_t v42 = *v20;
    uint64_t v43 = v20[1];
    uint64_t v44 = v20[2];
    uint64_t v81 = v20[3];
    uint64_t v46 = v20[4];
    uint64_t v45 = v20[5];
    uint64_t v48 = v20[6];
    uint64_t v47 = v20[7];
    uint64_t v49 = v20[8];
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1D43026DC(v42, v43, v44, v81);
      long long v24 = v80;
LABEL_13:
      sub_1D4276C3C((uint64_t)v24, &qword_1EA6C9850);
      return 0;
    }
    uint64_t v56 = *v25;
    uint64_t v55 = v25[1];
    uint64_t v57 = v25[2];
    uint64_t v58 = v25[3];
    uint64_t v60 = v25[4];
    uint64_t v59 = v25[5];
    uint64_t v62 = v25[6];
    uint64_t v61 = v25[7];
    uint64_t v63 = v25[8];
    if (v81)
    {
      *(void *)&long long v82 = v42;
      *((void *)&v82 + 1) = v43;
      uint64_t v83 = v44;
      uint64_t v84 = v81;
      uint64_t v85 = v46;
      uint64_t v86 = v45;
      uint64_t v87 = v48;
      uint64_t v88 = v47;
      uint64_t v89 = v49;
      if (v58)
      {
        *(void *)&long long v99 = v56;
        *((void *)&v99 + 1) = v55;
        uint64_t v100 = v57;
        uint64_t v101 = v58;
        uint64_t v102 = v60;
        uint64_t v103 = v59;
        uint64_t v104 = v62;
        uint64_t v105 = v61;
        uint64_t v106 = v63;
        uint64_t v73 = v56;
        uint64_t v78 = v43;
        uint64_t v74 = v55;
        uint64_t v64 = v44;
        uint64_t v65 = v81;
        uint64_t v77 = v61;
        uint64_t v76 = v62;
        uint64_t v75 = v59;
        uint64_t v72 = v60;
        uint64_t v71 = v57;
        uint64_t v70 = v63;
        LODWORD(v79) = _s8FMIPCore26FMIPB389ProductInformationV2eeoiySbAC_ACtFZ_0((uint64_t)&v82, (uint64_t)&v99);
        sub_1D4304A54(v42, v43, v64, v65);
        sub_1D43026DC(v73, v74, v71, v58);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D43026DC(v42, v78, v64, v65);
        if (v79) {
          goto LABEL_29;
        }
LABEL_25:
        sub_1D430267C((uint64_t)v80, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
        return 0;
      }
    }
    else if (!v58)
    {
LABEL_29:
      uint64_t v69 = (uint64_t)v80;
      goto LABEL_30;
    }
    *(void *)&long long v82 = v42;
    *((void *)&v82 + 1) = v43;
    uint64_t v83 = v44;
    uint64_t v84 = v81;
    uint64_t v85 = v46;
    uint64_t v86 = v45;
    uint64_t v87 = v48;
    uint64_t v88 = v47;
    uint64_t v89 = v49;
    uint64_t v90 = v56;
    uint64_t v91 = v55;
    uint64_t v92 = v57;
    uint64_t v93 = v58;
    uint64_t v94 = v60;
    uint64_t v95 = v59;
    uint64_t v96 = v62;
    uint64_t v97 = v61;
    uint64_t v98 = v63;
    sub_1D43049B0((uint64_t *)&v82);
    goto LABEL_25;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1D4300640((uint64_t)v24, (uint64_t)v15);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      sub_1D4276C3C((uint64_t)v15, &qword_1EA6C97A0);
      goto LABEL_13;
    }
    sub_1D43006A4((uint64_t)v25, (uint64_t)v11);
    uint64_t v50 = v81;
    uint64_t v51 = v81 + *(int *)(v5 + 48);
    sub_1D43006A4((uint64_t)v15, v81);
    sub_1D430070C((uint64_t)v11, v51);
    uint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
    uint64_t v53 = (uint64_t)v80;
    if (v52(v50, 1, (uint64_t)v80) == 1)
    {
      sub_1D4276C3C((uint64_t)v11, &qword_1EA6C97A0);
      if (v52(v51, 1, v53) == 1)
      {
        sub_1D4276C3C(v50, &qword_1EA6C97A0);
LABEL_27:
        uint64_t v69 = (uint64_t)v24;
LABEL_30:
        sub_1D430267C(v69, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
        return 1;
      }
    }
    else
    {
      uint64_t v66 = v78;
      sub_1D430070C(v50, v78);
      if (v52(v51, 1, v53) != 1)
      {
        uint64_t v67 = v77;
        sub_1D43032A8(v51, v77, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
        char v68 = _s8FMIPCore29FMIPHawkeyeProductInformationV2eeoiySbAC_ACtFZ_0(v66, v67);
        sub_1D430267C(v67, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
        sub_1D4276C3C((uint64_t)v11, &qword_1EA6C97A0);
        sub_1D430267C(v66, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
        sub_1D4276C3C(v50, &qword_1EA6C97A0);
        if (v68) {
          goto LABEL_27;
        }
LABEL_28:
        sub_1D430267C((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
        return 0;
      }
      sub_1D4276C3C((uint64_t)v11, &qword_1EA6C97A0);
      sub_1D430267C(v66, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
    }
    sub_1D4276C3C(v50, &qword_1EA6C9848);
    goto LABEL_28;
  }
  sub_1D4300640((uint64_t)v24, (uint64_t)v18);
  uint64_t v27 = *((void *)v18 + 3);
  uint64_t v28 = *((void *)v18 + 5);
  uint64_t v29 = *((void *)v18 + 7);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v30 = *((void *)v18 + 8);
  uint64_t v31 = *((void *)v18 + 6);
  uint64_t v32 = *((void *)v18 + 4);
  uint64_t v33 = *((void *)v18 + 2);
  uint64_t v34 = v25[2];
  uint64_t v35 = v25[3];
  uint64_t v36 = v25[4];
  uint64_t v37 = v25[5];
  uint64_t v38 = v25[6];
  uint64_t v39 = v25[7];
  uint64_t v40 = v25[8];
  long long v82 = *(_OWORD *)v18;
  uint64_t v83 = v33;
  uint64_t v84 = v27;
  uint64_t v85 = v32;
  uint64_t v86 = v28;
  uint64_t v87 = v31;
  uint64_t v88 = v29;
  uint64_t v89 = v30;
  long long v99 = *(_OWORD *)v25;
  uint64_t v100 = v34;
  uint64_t v101 = v35;
  uint64_t v102 = v36;
  uint64_t v103 = v37;
  uint64_t v104 = v38;
  uint64_t v105 = v39;
  uint64_t v106 = v40;
  BOOL v41 = _s8FMIPCore26FMIPB389ProductInformationV2eeoiySbAC_ACtFZ_0((uint64_t)&v82, (uint64_t)&v99);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D430267C((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
  return v41;
}

unint64_t sub_1D4302FEC()
{
  unint64_t result = qword_1EA6C97B0;
  if (!qword_1EA6C97B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C97B0);
  }
  return result;
}

unint64_t sub_1D4303040()
{
  unint64_t result = qword_1EA6C97B8;
  if (!qword_1EA6C97B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C97B8);
  }
  return result;
}

unint64_t sub_1D4303094()
{
  unint64_t result = qword_1EA6C97C0;
  if (!qword_1EA6C97C0)
  {
    sub_1D42DB55C(&qword_1EA6C97A0);
    sub_1D4303400(&qword_1EA6C97C8, (void (*)(uint64_t))type metadata accessor for FMIPHawkeyeProductInformation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C97C0);
  }
  return result;
}

unint64_t sub_1D4303138()
{
  unint64_t result = qword_1EA6C97D0;
  if (!qword_1EA6C97D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C97D0);
  }
  return result;
}

unint64_t sub_1D430318C()
{
  unint64_t result = qword_1EA6C97E0;
  if (!qword_1EA6C97E0)
  {
    sub_1D42DB55C(&qword_1EA6C97D8);
    sub_1D4303200();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C97E0);
  }
  return result;
}

unint64_t sub_1D4303200()
{
  unint64_t result = qword_1EA6C97E8;
  if (!qword_1EA6C97E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C97E8);
  }
  return result;
}

unint64_t sub_1D4303254()
{
  unint64_t result = qword_1EA6C97F8;
  if (!qword_1EA6C97F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C97F8);
  }
  return result;
}

uint64_t sub_1D43032A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1D4303310()
{
  unint64_t result = qword_1EA6C9808;
  if (!qword_1EA6C9808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9808);
  }
  return result;
}

unint64_t sub_1D4303364()
{
  unint64_t result = qword_1EA6C9810;
  if (!qword_1EA6C9810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9810);
  }
  return result;
}

uint64_t sub_1D43033B8()
{
  return sub_1D4303400(&qword_1EA6C9818, (void (*)(uint64_t))type metadata accessor for FMIPProductType);
}

uint64_t sub_1D4303400(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FMIPProductType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
      uint64_t v12 = *((void *)v11 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v12 + 48))(a2, 1, v11))
      {
        uint64_t v13 = sub_1D42D5DA0(&qword_1EA6C97A0);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v17 = a2[3];
        a1[2] = a2[2];
        a1[3] = v17;
        uint64_t v18 = a2[5];
        a1[4] = a2[4];
        a1[5] = v18;
        uint64_t v19 = a2[7];
        a1[6] = a2[6];
        a1[7] = v19;
        a1[8] = a2[8];
        *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
        *((unsigned char *)a1 + 73) = *((unsigned char *)a2 + 73);
        uint64_t v20 = v11[12];
        uint64_t v26 = (char *)a2 + v20;
        uint64_t v27 = (char *)a1 + v20;
        uint64_t v28 = v12;
        uint64_t v21 = sub_1D4469498();
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v22(v27, v26, v21);
        v22((char *)a1 + v11[13], (char *)a2 + v11[13], v21);
        v22((char *)a1 + v11[14], (char *)a2 + v11[14], v21);
        v22((char *)a1 + v11[15], (char *)a2 + v11[15], v21);
        v22((char *)a1 + v11[16], (char *)a2 + v11[16], v21);
        v22((char *)a1 + v11[17], (char *)a2 + v11[17], v21);
        (*(void (**)(uint64_t *, void, uint64_t, int *))(v28 + 56))(a1, 0, 1, v11);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      uint64_t v8 = a2[5];
      a1[4] = a2[4];
      a1[5] = v8;
      uint64_t v9 = a2[7];
      a1[6] = a2[6];
      a1[7] = v9;
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v14 = a2[3];
      if (v14)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        a1[3] = v14;
        uint64_t v15 = a2[5];
        a1[4] = a2[4];
        a1[5] = v15;
        uint64_t v16 = a2[7];
        a1[6] = a2[6];
        a1[7] = v16;
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v23 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v23;
        a1[8] = a2[8];
        long long v24 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v24;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for FMIPProductType(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v3 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v3 - 1) + 48))(a1, 1, v3);
    if (!result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = a1 + v3[12];
      uint64_t v5 = sub_1D4469498();
      uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v5 - 8), v4, v5);
      v7(a1 + v3[13], v5);
      v7(a1 + v3[14], v5);
      v7(a1 + v3[15], v5);
      v7(a1 + v3[16], v5);
      uint64_t v6 = a1 + v3[17];
      return ((uint64_t (*)(uint64_t, uint64_t))v7)(v6, v5);
    }
  }
  else if (result == 1 || !result && (uint64_t result = *(void *)(a1 + 24)) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_OWORD *initializeWithCopy for FMIPProductType(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
    uint64_t v9 = *((void *)v8 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
    {
      uint64_t v10 = sub_1D42D5DA0(&qword_1EA6C97A0);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v14 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v14;
      uint64_t v15 = *((void *)a2 + 5);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v15;
      uint64_t v16 = *((void *)a2 + 7);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((void *)a1 + 7) = v16;
      *((void *)a1 + 8) = *((void *)a2 + 8);
      *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
      *((unsigned char *)a1 + 73) = *((unsigned char *)a2 + 73);
      uint64_t v17 = v8[12];
      long long v23 = (char *)a2 + v17;
      long long v24 = (char *)a1 + v17;
      uint64_t v25 = v9;
      uint64_t v18 = sub_1D4469498();
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19(v24, v23, v18);
      v19((char *)a1 + v8[13], (char *)a2 + v8[13], v18);
      v19((char *)a1 + v8[14], (char *)a2 + v8[14], v18);
      v19((char *)a1 + v8[15], (char *)a2 + v8[15], v18);
      v19((char *)a1 + v8[16], (char *)a2 + v8[16], v18);
      v19((char *)a1 + v8[17], (char *)a2 + v8[17], v18);
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v25 + 56))(a1, 0, 1, v8);
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v5 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v5;
    uint64_t v6 = *((void *)a2 + 5);
    *((void *)a1 + 4) = *((void *)a2 + 4);
    *((void *)a1 + 5) = v6;
    uint64_t v7 = *((void *)a2 + 7);
    *((void *)a1 + 6) = *((void *)a2 + 6);
    *((void *)a1 + 7) = v7;
    *((void *)a1 + 8) = *((void *)a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v11 = *((void *)a2 + 3);
    if (v11)
    {
      *a1 = *a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v11;
      uint64_t v12 = *((void *)a2 + 5);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v12;
      uint64_t v13 = *((void *)a2 + 7);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((void *)a1 + 7) = v13;
      *((void *)a1 + 8) = *((void *)a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v20 = a2[3];
      a1[2] = a2[2];
      a1[3] = v20;
      *((void *)a1 + 8) = *((void *)a2 + 8);
      long long v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for FMIPProductType(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1D430267C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v5 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
      uint64_t v6 = *((void *)v5 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v6 + 48))(a2, 1, v5))
      {
        uint64_t v7 = sub_1D42D5DA0(&qword_1EA6C97A0);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
        *((unsigned char *)a1 + 73) = *((unsigned char *)a2 + 73);
        uint64_t v8 = v5[12];
        uint64_t v15 = (char *)a2 + v8;
        uint64_t v16 = (char *)a1 + v8;
        uint64_t v17 = v6;
        uint64_t v9 = sub_1D4469498();
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v10(v16, v15, v9);
        v10((char *)a1 + v5[13], (char *)a2 + v5[13], v9);
        v10((char *)a1 + v5[14], (char *)a2 + v5[14], v9);
        v10((char *)a1 + v5[15], (char *)a2 + v5[15], v9);
        v10((char *)a1 + v5[16], (char *)a2 + v5[16], v9);
        v10((char *)a1 + v5[17], (char *)a2 + v5[17], v9);
        (*(void (**)(void *, void, uint64_t, int *))(v17 + 56))(a1, 0, 1, v5);
      }
    }
    else if (EnumCaseMultiPayload == 1 || a2[3])
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      a1[7] = a2[7];
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      long long v11 = *((_OWORD *)a2 + 1);
      long long v12 = *((_OWORD *)a2 + 2);
      long long v13 = *((_OWORD *)a2 + 3);
      a1[8] = a2[8];
      *((_OWORD *)a1 + 2) = v12;
      *((_OWORD *)a1 + 3) = v13;
      *((_OWORD *)a1 + 1) = v11;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for FMIPProductType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
    uint64_t v7 = *((void *)v6 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = sub_1D42D5DA0(&qword_1EA6C97A0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      long long v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      long long v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      *((void *)a1 + 8) = *((void *)a2 + 8);
      *((_WORD *)a1 + 36) = *((_WORD *)a2 + 36);
      uint64_t v11 = v6[12];
      long long v12 = (char *)a1 + v11;
      long long v13 = (char *)a2 + v11;
      uint64_t v14 = sub_1D4469498();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
      v15(v12, v13, v14);
      v15((char *)a1 + v6[13], (char *)a2 + v6[13], v14);
      v15((char *)a1 + v6[14], (char *)a2 + v6[14], v14);
      v15((char *)a1 + v6[15], (char *)a2 + v6[15], v14);
      v15((char *)a1 + v6[16], (char *)a2 + v6[16], v14);
      v15((char *)a1 + v6[17], (char *)a2 + v6[17], v14);
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for FMIPProductType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1D430267C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
      uint64_t v7 = *((void *)v6 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = sub_1D42D5DA0(&qword_1EA6C97A0);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        long long v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        long long v10 = a2[3];
        a1[2] = a2[2];
        a1[3] = v10;
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((_WORD *)a1 + 36) = *((_WORD *)a2 + 36);
        uint64_t v11 = v6[12];
        long long v12 = (char *)a1 + v11;
        long long v13 = (char *)a2 + v11;
        uint64_t v14 = sub_1D4469498();
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
        v15(v12, v13, v14);
        v15((char *)a1 + v6[13], (char *)a2 + v6[13], v14);
        v15((char *)a1 + v6[14], (char *)a2 + v6[14], v14);
        v15((char *)a1 + v6[15], (char *)a2 + v6[15], v14);
        v15((char *)a1 + v6[16], (char *)a2 + v6[16], v14);
        v15((char *)a1 + v6[17], (char *)a2 + v6[17], v14);
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPItemUpdateType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for FMIPItemUpdateType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1D4304598()
{
  return swift_storeEnumTagMultiPayload();
}

unsigned char *storeEnumTagSinglePayload for FMIPProductType.RawType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4304674);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPProductType.RawType()
{
  return &type metadata for FMIPProductType.RawType;
}

unsigned char *storeEnumTagSinglePayload for FMIPProductType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4304778);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPProductType.CodingKeys()
{
  return &type metadata for FMIPProductType.CodingKeys;
}

unint64_t sub_1D43047B4()
{
  unint64_t result = qword_1EA6C9820;
  if (!qword_1EA6C9820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9820);
  }
  return result;
}

unint64_t sub_1D430480C()
{
  unint64_t result = qword_1EA6C9828;
  if (!qword_1EA6C9828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9828);
  }
  return result;
}

unint64_t sub_1D4304864()
{
  unint64_t result = qword_1EA6C9830;
  if (!qword_1EA6C9830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9830);
  }
  return result;
}

unint64_t sub_1D43048BC()
{
  unint64_t result = qword_1EA6C9838;
  if (!qword_1EA6C9838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9838);
  }
  return result;
}

unint64_t sub_1D4304910()
{
  unint64_t result = qword_1EA6C9840;
  if (!qword_1EA6C9840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9840);
  }
  return result;
}

uint64_t sub_1D4304964()
{
  unint64_t v0 = sub_1D446A518();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t *sub_1D43049B0(uint64_t *a1)
{
  uint64_t v2 = a1[9];
  uint64_t v3 = a1[10];
  uint64_t v4 = a1[11];
  uint64_t v5 = a1[12];
  sub_1D43026DC(*a1, a1[1], a1[2], a1[3]);
  sub_1D43026DC(v2, v3, v4, v5);
  return a1;
}

uint64_t sub_1D4304A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D4304AA4(uint64_t a1)
{
  return sub_1D427532C(a1, qword_1EA6E46B8);
}

uint64_t sub_1D4304AC8()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation__isFinished);
}

void sub_1D4304AD8(char a1)
{
  uint64_t v3 = (void *)sub_1D4469B08();
  objc_msgSend(v1, sel_willChangeValueForKey_, v3);

  *((unsigned char *)v1 + OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation__isFinished) = a1;
  id v4 = (id)sub_1D4469B08();
  objc_msgSend(v1, sel_didChangeValueForKey_, v4);
}

id FMIPDeviceImageCacheOperation.__allocating_init(request:completion:)(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = objc_allocWithZone(v3);
  long long v8 = *a1;
  uint64_t v9 = *((void *)a1 + 2);
  uint64_t v10 = *((void *)a1 + 3);
  char v11 = *((unsigned char *)a1 + 48);
  char v12 = *((unsigned char *)a1 + 49);
  uint64_t v13 = *((void *)a1 + 7);
  v7[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation__isFinished] = 0;
  uint64_t v14 = &v7[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation_request];
  *(_OWORD *)uint64_t v14 = v8;
  *((void *)v14 + 2) = v9;
  *((void *)v14 + 3) = v10;
  *((_OWORD *)v14 + 2) = a1[2];
  v14[48] = v11;
  v14[49] = v12;
  *((void *)v14 + 7) = v13;
  uint64_t v15 = &v7[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation_completion];
  *uint64_t v15 = a2;
  v15[1] = a3;
  v17.receiver = v7;
  v17.super_class = v3;
  return objc_msgSendSuper2(&v17, sel_init);
}

id FMIPDeviceImageCacheOperation.init(request:completion:)(long long *a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *a1;
  uint64_t v5 = *((void *)a1 + 2);
  uint64_t v6 = *((void *)a1 + 3);
  char v7 = *((unsigned char *)a1 + 48);
  char v8 = *((unsigned char *)a1 + 49);
  uint64_t v9 = *((void *)a1 + 7);
  v3[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation__isFinished] = 0;
  uint64_t v10 = &v3[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation_request];
  *(_OWORD *)uint64_t v10 = v4;
  *((void *)v10 + 2) = v5;
  *((void *)v10 + 3) = v6;
  *((_OWORD *)v10 + 2) = a1[2];
  v10[48] = v7;
  v10[49] = v8;
  *((void *)v10 + 7) = v9;
  char v11 = &v3[OBJC_IVAR____TtC8FMIPCore29FMIPDeviceImageCacheOperation_completion];
  *char v11 = a2;
  v11[1] = a3;
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for FMIPDeviceImageCacheOperation();
  return objc_msgSendSuper2(&v13, sel_init);
}

void sub_1D4304CD4()
{
  if (objc_msgSend(v0, sel_isCancelled))
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1D4469928();
    sub_1D42D7FAC(v1, (uint64_t)qword_1EBD83228);
    oslog = sub_1D44698F8();
    os_log_type_t v2 = sub_1D446A038();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl(&dword_1D4271000, oslog, v2, "FMIPDeviceImageCreationOperation: operation cancelled", v3, 2u);
      MEMORY[0x1D9447730](v3, -1, -1);
    }
  }
}

id FMIPDeviceImageCacheOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void FMIPDeviceImageCacheOperation.init()()
{
}

id FMIPDeviceImageCacheOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMIPDeviceImageCacheOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D4304EA8()
{
  return swift_slowAlloc();
}

void sub_1D4304EB0()
{
}

uint64_t sub_1D4304EBC(uint64_t result, unsigned char **a2)
{
  objc_super v2 = *a2;
  *objc_super v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1D4304ECC(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7E918);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D4304F2C()
{
  uint64_t v1 = sub_1D4469498();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t sub_1D4304FD0(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1D430500C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D4305034(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1D42CB9EC(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_1D446A188();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

unsigned char **sub_1D43050AC(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t method lookup function for FMIPDeviceImageCacheOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPDeviceImageCacheOperation);
}

uint64_t dispatch thunk of FMIPDeviceImageCacheOperation.__allocating_init(request:completion:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

void sub_1D43050E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *v3;
  if (a2)
  {
    v7[4] = a2;
    v7[5] = a3;
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 1107296256;
    _OWORD v7[2] = sub_1D43051BC;
    v7[3] = &unk_1F2C05828;
    uint64_t v6 = _Block_copy(v7);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v6 = 0;
  }
  objc_msgSend(v5, sel_authenticateWithContext_completion_, a1, v6);
  _Block_release(v6);
}

uint64_t sub_1D43051BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1D42D5DA0(&qword_1EA6C98C0);
    uint64_t v4 = sub_1D4469A58();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1D4305264(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)&v6[OBJC_IVAR____TtC8FMIPCore37FMIPEphemeralAuthenticationController_authenticationResults] = 0;
  *(void *)&v6[OBJC_IVAR____TtC8FMIPCore37FMIPEphemeralAuthenticationController_action] = a1;
  char v12 = (uint64_t *)&v6[OBJC_IVAR____TtC8FMIPCore37FMIPEphemeralAuthenticationController_username];
  *char v12 = a2;
  v12[1] = a3;
  if (a4)
  {
    objc_super v13 = v6;
    swift_retain();
    swift_bridgeObjectRetain();
    id v14 = a4;
  }
  else
  {
    id v15 = objc_allocWithZone(MEMORY[0x1E4F4EF60]);
    uint64_t v16 = v6;
    swift_retain();
    swift_bridgeObjectRetain();
    id v14 = objc_msgSend(v15, sel_init);
  }
  id v17 = a4;
  uint64_t v18 = sub_1D4306438(v14, a2, a3);

  swift_bridgeObjectRelease();
  *(void *)&v6[OBJC_IVAR____TtC8FMIPCore37FMIPEphemeralAuthenticationController_authenticationContext] = v18;
  sub_1D43066CC(a6, (uint64_t)&v29);
  if (v30)
  {
    sub_1D42E4A0C(&v29, (uint64_t)&v31);
  }
  else
  {
    id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4EF68]), sel_init);
    if (!result)
    {
      __break(1u);
      return result;
    }
    id v20 = result;
    unint64_t v32 = sub_1D4306734();
    uint64_t v33 = &off_1F2C05818;
    *(void *)&long long v31 = v20;
    sub_1D4276C3C((uint64_t)&v29, &qword_1EBD7D4F8);
  }
  sub_1D42E4A0C(&v31, (uint64_t)&v6[OBJC_IVAR____TtC8FMIPCore37FMIPEphemeralAuthenticationController_authenticationController]);

  v28.receiver = v6;
  v28.super_class = (Class)type metadata accessor for FMIPEphemeralAuthenticationController();
  id v21 = objc_msgSendSuper2(&v28, sel_init);
  uint64_t v22 = qword_1EBD80068;
  id v23 = v21;
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1D4469928();
  sub_1D42D7FAC(v24, (uint64_t)qword_1EBD83228);
  uint64_t v25 = sub_1D44698F8();
  os_log_type_t v26 = sub_1D446A038();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl(&dword_1D4271000, v25, v26, "FMIPAuthKitAuthenticationController: initialized", v27, 2u);
    MEMORY[0x1D9447730](v27, -1, -1);
  }

  swift_release();
  sub_1D4276C3C(a6, &qword_1EBD7D4F8);
  sub_1D4276C3C(a5, &qword_1EBD7F828);
  return v23;
}

void sub_1D4305508(uint64_t a1, void *a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1D4469928();
    sub_1D42D7FAC(v7, (uint64_t)qword_1EBD83228);
    id v8 = a2;
    id v9 = a2;
    uint64_t v10 = sub_1D44698F8();
    os_log_type_t v11 = sub_1D446A038();
    if (os_log_type_enabled(v10, v11))
    {
      char v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v53 = v13;
      *(_DWORD *)char v12 = 136315138;
      uint64_t v54 = (uint64_t)a2;
      id v14 = a2;
      sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
      uint64_t v15 = sub_1D4469B68();
      uint64_t v54 = sub_1D42CB9EC(v15, v16, &v53);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v10, v11, "FMIPAuthKitAuthenticationController: failed to authenticate %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v13, -1, -1);
      MEMORY[0x1D9447730](v12, -1, -1);
    }
    else
    {
    }
    ((void (*)(void, void, void, void, void *))a3)(0, 0, 0, 0, a2);
    return;
  }
  if (a1)
  {
    uint64_t v19 = sub_1D4469B38();
    if (*(void *)(a1 + 16) && (unint64_t v21 = sub_1D42C4FCC(v19, v20), (v22 & 1) != 0))
    {
      uint64_t v23 = *(void *)(*(void *)(a1 + 56) + 8 * v21);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v54 = v23;
      sub_1D42D5DA0(&qword_1EA6C98C0);
      if (swift_dynamicCast())
      {
        uint64_t v24 = sub_1D4469B38();
        if (*(void *)(a1 + 16) && (unint64_t v26 = sub_1D42C4FCC(v24, v25), (v27 & 1) != 0))
        {
          uint64_t v28 = *(void *)(*(void *)(a1 + 56) + 8 * v26);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v53 = v28;
          if (swift_dynamicCast())
          {
            if (qword_1EBD80068 != -1) {
              swift_once();
            }
            uint64_t v29 = sub_1D4469928();
            sub_1D42D7FAC(v29, (uint64_t)qword_1EBD83228);
            swift_bridgeObjectRetain();
            uint64_t v30 = sub_1D44698F8();
            os_log_type_t v31 = sub_1D446A038();
            if (os_log_type_enabled(v30, v31))
            {
              unint64_t v32 = (uint8_t *)swift_slowAlloc();
              uint64_t v52 = v30;
              uint64_t v33 = (void *)swift_slowAlloc();
              *(_DWORD *)unint64_t v32 = 138412290;
              uint64_t v53 = sub_1D4469A38();
              sub_1D446A188();
              *uint64_t v33 = v53;
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1D4271000, v52, v31, "FMIPAuthKitAuthenticationController: authentication results %@", v32, 0xCu);
              sub_1D42D5DA0(&qword_1EBD7E830);
              swift_arrayDestroy();
              MEMORY[0x1D9447730](v33, -1, -1);
              MEMORY[0x1D9447730](v32, -1, -1);
            }
            else
            {

              swift_bridgeObjectRelease();
            }
            *(void *)(a5 + OBJC_IVAR____TtC8FMIPCore37FMIPEphemeralAuthenticationController_authenticationResults) = sub_1D4305D14(a1);
            swift_bridgeObjectRelease();
            uint64_t v51 = sub_1D446A6D8();
            a3(v51);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        if (qword_1EBD80068 != -1) {
          swift_once();
        }
        uint64_t v47 = sub_1D4469928();
        sub_1D42D7FAC(v47, (uint64_t)qword_1EBD83228);
        uint64_t v48 = sub_1D44698F8();
        os_log_type_t v49 = sub_1D446A038();
        if (os_log_type_enabled(v48, v49))
        {
          uint64_t v50 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v50 = 0;
          _os_log_impl(&dword_1D4271000, v48, v49, "FMIPAuthKitAuthenticationController: empty dsid", v50, 2u);
          MEMORY[0x1D9447730](v50, -1, -1);
        }

        sub_1D4306218();
        uint64_t v39 = (void *)swift_allocError();
        char v40 = 1;
LABEL_25:
        *uint64_t v38 = v40;
        ((void (*)(void, void, void, void, void *))a3)(0, 0, 0, 0, v39);

        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1D4469928();
    sub_1D42D7FAC(v34, (uint64_t)qword_1EBD83228);
    uint64_t v35 = sub_1D44698F8();
    os_log_type_t v36 = sub_1D446A038();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl(&dword_1D4271000, v35, v36, "FMIPAuthKitAuthenticationController: empty password", v37, 2u);
      MEMORY[0x1D9447730](v37, -1, -1);
    }

    sub_1D4306218();
    uint64_t v39 = (void *)swift_allocError();
    char v40 = 2;
    goto LABEL_25;
  }
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_1D4469928();
  sub_1D42D7FAC(v41, (uint64_t)qword_1EBD83228);
  uint64_t v42 = sub_1D44698F8();
  os_log_type_t v43 = sub_1D446A038();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v44 = 0;
    _os_log_impl(&dword_1D4271000, v42, v43, "FMIPAuthKitAuthenticationController: empty authentication result", v44, 2u);
    MEMORY[0x1D9447730](v44, -1, -1);
  }

  sub_1D4306218();
  uint64_t v45 = (void *)swift_allocError();
  *uint64_t v46 = 0;
  ((void (*)(void, void, void, void, void *))a3)(0, 0, 0, 0, v45);
}

unint64_t sub_1D4305D14(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_1D42D5DA0(&qword_1EBD7E870);
    uint64_t v2 = (void *)sub_1D446A4C8();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  id v6 = &v37;
  uint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = &qword_1EA6C98C0;
  uint64_t v11 = MEMORY[0x1E4FBC840] + 8;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1D42F9364();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1D42D5DA0(v10);
    swift_dynamicCast();
    sub_1D42C5494(v6, v7);
    sub_1D42C5494(v7, v40);
    sub_1D42C5494(v40, &v38);
    unint64_t result = sub_1D42C4FCC(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      char v12 = v7;
      uint64_t v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      unint64_t v16 = v10;
      id v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *id v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      id v6 = v13;
      uint64_t v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      sub_1D42BEC64((uint64_t)v18);
      unint64_t result = (unint64_t)sub_1D42C5494(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v27 = (uint64_t *)(v2[6] + 16 * result);
    *char v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_1D42C5494(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

id FMIPEphemeralAuthenticationController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void FMIPEphemeralAuthenticationController.init()()
{
}

id FMIPEphemeralAuthenticationController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMIPEphemeralAuthenticationController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMIPEphemeralAuthenticationController()
{
  return self;
}

uint64_t sub_1D430616C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for FMIPEphemeralAuthenticationController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPEphemeralAuthenticationController);
}

unint64_t sub_1D4306218()
{
  unint64_t result = qword_1EA6C98C8;
  if (!qword_1EA6C98C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C98C8);
  }
  return result;
}

uint64_t sub_1D430626C()
{
  type metadata accessor for FMIPLostModeAction(0);
  if (!swift_dynamicCastClass())
  {
    type metadata accessor for FMIPLockAction();
    if (!swift_dynamicCastClass())
    {
      type metadata accessor for FMIPEraseAction();
      swift_dynamicCastClass();
    }
  }
  type metadata accessor for FMLocalize();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1D44692D8();

  return v2;
}

void *sub_1D4306438(void *a1, uint64_t a2, uint64_t a3)
{
  objc_msgSend(a1, sel_setIsEphemeral_, 1);
  objc_msgSend(a1, sel_setShouldPromptForPasswordOnly_, 1);
  id v6 = (void *)sub_1D4469B08();
  objc_msgSend(a1, sel_setUsername_, v6);

  objc_msgSend(a1, sel_setIsUsernameEditable_, 0);
  type metadata accessor for FMLocalize();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v8 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D44692D8();

  sub_1D42D5DA0(&qword_1EA6C98E0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1D446E050;
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 64) = sub_1D42CB714();
  *(void *)(v9 + 32) = a2;
  *(void *)(v9 + 40) = a3;
  swift_bridgeObjectRetain();
  sub_1D4469B58();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setReason_, v10, 0xE000000000000000);

  sub_1D430626C();
  uint64_t v11 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setDefaultButtonString_, v11);

  uint64_t v12 = self;
  uint64_t v13 = (void *)sub_1D4469B08();
  uint64_t v14 = (void *)sub_1D4469B08();
  LOBYTE(v12) = objc_msgSend((id)v12, sel_BOOLForKey_inDomain_, v13, v14);

  if ((v12 & 1) == 0) {
    objc_msgSend(a1, sel_setAuthenticationType_, 2);
  }
  return a1;
}

uint64_t sub_1D43066CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7D4F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D4306734()
{
  unint64_t result = qword_1EA6C98D0;
  if (!qword_1EA6C98D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA6C98D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPEphemeralAuthenticationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4306840);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPEphemeralAuthenticationError()
{
  return &type metadata for FMIPEphemeralAuthenticationError;
}

unint64_t sub_1D430687C()
{
  unint64_t result = qword_1EA6C98F0;
  if (!qword_1EA6C98F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C98F0);
  }
  return result;
}

uint64_t type metadata accessor for FMIPCancelEraseRequest()
{
  uint64_t result = qword_1EA6C9900;
  if (!qword_1EA6C9900) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D430691C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D430696C()
{
  id v1 = (uint64_t *)(*(void *)(v0 + qword_1EA6E46E8) + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v10 = v3;
  *((void *)&v10 + 1) = v2;
  uint64_t v4 = qword_1EA6C9D80;
  uint64_t v5 = *(void *)(v0 + qword_1EA6C9D80);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  sub_1D433313C((void *)(v5 + 16), v9);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  swift_release();
  sub_1D42C5494(&v10, v9);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D42C4E78(v9, 0x656369766564, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v0 + v4);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  sub_1D4306B48((void *)(v7 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4306ABC()
{
  return swift_release();
}

uint64_t sub_1D4306ACC()
{
  sub_1D427B074();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1D4306B40()
{
  return type metadata accessor for FMIPCancelEraseRequest();
}

uint64_t sub_1D4306B48(void *a1)
{
  return sub_1D433315C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1D4306B64(char *a1, char *a2)
{
  return sub_1D441259C(*a1, *a2);
}

uint64_t sub_1D4306B70()
{
  return sub_1D446A888();
}

uint64_t sub_1D4306C04()
{
  sub_1D4469BC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4306C84()
{
  return sub_1D446A888();
}

uint64_t sub_1D4306D14@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1D4306D74(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7263734570696D66;
  if (*v1) {
    uint64_t v2 = 0x656B6F5468747561;
  }
  unint64_t v3 = 0xEE0044495555776FLL;
  if (*v1) {
    unint64_t v3 = 0xE90000000000006ELL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D4306DC4()
{
  if (*v0) {
    return 0x656B6F5468747561;
  }
  else {
    return 0x7263734570696D66;
  }
}

uint64_t sub_1D4306E10@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1D4306E74(uint64_t a1)
{
  unint64_t v2 = sub_1D43075CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D4306EB0(uint64_t a1)
{
  unint64_t v2 = sub_1D43075CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D4306EEC(void *a1)
{
  return sub_1D4306F38(a1);
}

uint64_t sub_1D4306F38(void *a1)
{
  uint64_t v3 = (uint64_t)v1;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6C9910);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43075CC();
  swift_retain();
  sub_1D446A8C8();
  if (v2)
  {
    swift_release();
    sub_1D42BEC64((uint64_t)a1);
    type metadata accessor for FMIPValidatePasswordResponse();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v29[0]) = 1;
    uint64_t v9 = sub_1D446A598();
    uint64_t v11 = v10;
    LOBYTE(v29[0]) = 0;
    uint64_t v12 = sub_1D446A598();
    v1[9] = v9;
    v1[10] = v11;
    v1[7] = v12;
    v1[8] = v13;
    swift_release();
    sub_1D42A4D5C((uint64_t)a1, (uint64_t)v29);
    uint64_t v3 = sub_1D427E300(v29);
    uint64_t v14 = qword_1EBD80068;
    swift_retain();
    if (v14 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1D4469928();
    sub_1D42D7FAC(v15, (uint64_t)qword_1EBD83228);
    swift_retain_n();
    unint64_t v16 = sub_1D44698F8();
    os_log_type_t v17 = sub_1D446A038();
    if (os_log_type_enabled(v16, v17))
    {
      os_log_t v28 = v16;
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      v29[0] = v27;
      char v26 = v18;
      *(_DWORD *)uint64_t v18 = 136315138;
      v25[1] = v18 + 4;
      uint64_t v19 = sub_1D43072FC();
      v29[6] = sub_1D42CB9EC(v19, v20, v29);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      unint64_t v16 = v28;
      os_log_type_t v21 = v17;
      int64_t v22 = v26;
      _os_log_impl(&dword_1D4271000, v28, v21, "FMIPValidatePasswordResponse: initialized with coder %s", v26, 0xCu);
      uint64_t v23 = v27;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v23, -1, -1);
      MEMORY[0x1D9447730](v22, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1D42BEC64((uint64_t)a1);
    swift_release();
  }
  return v3;
}

uint64_t sub_1D43072FC()
{
  return 60;
}

uint64_t sub_1D43074FC()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D430752C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMIPValidatePasswordResponse()
{
  return self;
}

uint64_t sub_1D43075A8()
{
  return sub_1D43072FC();
}

unint64_t sub_1D43075CC()
{
  unint64_t result = qword_1EA6C9918;
  if (!qword_1EA6C9918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9918);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPValidatePasswordResponse.ValidatePasswordCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43076ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPValidatePasswordResponse.ValidatePasswordCodingKeys()
{
  return &type metadata for FMIPValidatePasswordResponse.ValidatePasswordCodingKeys;
}

unint64_t sub_1D4307728()
{
  unint64_t result = qword_1EA6C9920;
  if (!qword_1EA6C9920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9920);
  }
  return result;
}

unint64_t sub_1D4307780()
{
  unint64_t result = qword_1EA6C9928;
  if (!qword_1EA6C9928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9928);
  }
  return result;
}

unint64_t sub_1D43077D8()
{
  unint64_t result = qword_1EA6C9930;
  if (!qword_1EA6C9930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9930);
  }
  return result;
}

double FMIPRangingParameters.inBTRangeDistanceInMeters.getter()
{
  return *(double *)v0;
}

uint64_t sub_1D4307834()
{
  return sub_1D446A888();
}

uint64_t sub_1D430788C()
{
  return sub_1D4469BC8();
}

uint64_t sub_1D43078A8()
{
  return sub_1D446A888();
}

uint64_t sub_1D43078FC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1D4307950(void *a1@<X8>)
{
  *a1 = 0xD000000000000019;
  a1[1] = 0x80000001D447D170;
}

unint64_t sub_1D4307970()
{
  return 0xD000000000000019;
}

uint64_t sub_1D430798C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1D43079E4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1D43079F0(uint64_t a1)
{
  unint64_t v2 = sub_1D4307BCC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D4307A2C(uint64_t a1)
{
  unint64_t v2 = sub_1D4307BCC();

  return MEMORY[0x1F41862B0](a1, v2);
}

FMIPCore::FMIPRangingParameters __swiftcall FMIPRangingParameters.init()()
{
  *uint64_t v0 = 0x4034000000000000;
  return result;
}

uint64_t FMIPRangingParameters.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6C9938);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D4307BCC();
  sub_1D446A8C8();
  if (!v2)
  {
    sub_1D446A5B8();
    uint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return sub_1D42BEC64((uint64_t)a1);
}

unint64_t sub_1D4307BCC()
{
  unint64_t result = qword_1EA6C9940;
  if (!qword_1EA6C9940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9940);
  }
  return result;
}

uint64_t FMIPRangingParameters.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EA6C9948);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D4307BCC();
  sub_1D446A8E8();
  sub_1D446A678();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

BOOL static FMIPRangingParameters.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D4307D68@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FMIPRangingParameters.init(from:)(a1, a2);
}

uint64_t sub_1D4307D80(void *a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EA6C9948);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D4307BCC();
  sub_1D446A8E8();
  sub_1D446A678();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

BOOL sub_1D4307EB4(double *a1, double *a2)
{
  return *a1 == *a2;
}

ValueMetadata *type metadata accessor for FMIPRangingParameters()
{
  return &type metadata for FMIPRangingParameters;
}

unsigned char *storeEnumTagSinglePayload for FMIPRangingParameters.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D4307F74);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPRangingParameters.CodingKeys()
{
  return &type metadata for FMIPRangingParameters.CodingKeys;
}

unint64_t sub_1D4307FB0()
{
  unint64_t result = qword_1EA6C9950;
  if (!qword_1EA6C9950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9950);
  }
  return result;
}

unint64_t sub_1D4308008()
{
  unint64_t result = qword_1EA6C9958;
  if (!qword_1EA6C9958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9958);
  }
  return result;
}

unint64_t sub_1D4308060()
{
  unint64_t result = qword_1EA6C9960;
  if (!qword_1EA6C9960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9960);
  }
  return result;
}

unint64_t sub_1D43080B4(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x6C6C416F54646461;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FMIPSeparationEvent.itemOrDeviceCount.getter()
{
  return *(void *)v0;
}

uint64_t FMIPSeparationEvent.itemOrDeviceCount.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*FMIPSeparationEvent.itemOrDeviceCount.modify())()
{
  return nullsub_1;
}

uint64_t FMIPSeparationEvent.addSafeLocationTapped.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t FMIPSeparationEvent.addSafeLocationTapped.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*FMIPSeparationEvent.addSafeLocationTapped.modify())()
{
  return nullsub_1;
}

uint64_t FMIPSeparationEvent.addToAllTapped.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t FMIPSeparationEvent.addToAllTapped.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 9) = result;
  return result;
}

uint64_t (*FMIPSeparationEvent.addToAllTapped.modify())()
{
  return nullsub_1;
}

uint64_t FMIPSeparationEvent.homeRemoved.getter()
{
  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t FMIPSeparationEvent.homeRemoved.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 10) = result;
  return result;
}

uint64_t (*FMIPSeparationEvent.homeRemoved.modify())()
{
  return nullsub_1;
}

FMIPCore::FMIPSeparationEvent __swiftcall FMIPSeparationEvent.init(itemOrDeviceCount:addSafeLocationTapped:addToAllTapped:homeRemoved:)(Swift::Int itemOrDeviceCount, Swift::Bool addSafeLocationTapped, Swift::Bool addToAllTapped, Swift::Bool homeRemoved)
{
  *(void *)uint64_t v4 = itemOrDeviceCount;
  *(unsigned char *)(v4 + 8) = addSafeLocationTapped;
  *(unsigned char *)(v4 + 9) = addToAllTapped;
  *(unsigned char *)(v4 + 10) = homeRemoved;
  result.itemOrDeviceCount = itemOrDeviceCount;
  result.addSafeLocationTapped = addSafeLocationTapped;
  return result;
}

Swift::Void __swiftcall FMIPManager.enqueue(separationEvent:)(FMIPCore::FMIPSeparationEvent separationEvent)
{
  char v1 = *(unsigned char *)(separationEvent.itemOrDeviceCount + 8);
  char v2 = *(unsigned char *)(separationEvent.itemOrDeviceCount + 9);
  char v3 = *(unsigned char *)(separationEvent.itemOrDeviceCount + 10);
  uint64_t v4 = *(void *)separationEvent.itemOrDeviceCount;
  char v5 = v1;
  char v6 = v2;
  char v7 = v3;
  sub_1D4308278(&v4);
}

void sub_1D4308278(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *((unsigned __int8 *)a1 + 8);
  uint64_t v3 = *((unsigned __int8 *)a1 + 9);
  uint64_t v4 = *((unsigned __int8 *)a1 + 10);
  unint64_t v5 = sub_1D4274BFC(MEMORY[0x1E4FBC860]);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, v1);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v6, 0xD000000000000011, 0x80000001D447EC50, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v2);
  char v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v8, 0xD000000000000015, 0x80000001D447EC70, v9);
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v3);
  char v11 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v10, 0x6C6C416F54646461, 0xEE00646570706154, v11);
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v4);
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v12, 0xD000000000000010, 0x80000001D447EC90, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_1D4469B08();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v5;
  v17[4] = sub_1D4308610;
  v17[5] = v15;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  void v17[2] = sub_1D4356EBC;
  uint64_t v17[3] = &unk_1F2C05AD8;
  unint64_t v16 = _Block_copy(v17);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v16);
  swift_bridgeObjectRelease();
}

uint64_t initializeBufferWithCopyOfBuffer for FMIPSeparationEvent(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 7) = *(_DWORD *)((char *)a2 + 7);
  *(void *)FMIPCore::FMIPSeparationEvent result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPSeparationEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 11)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPSeparationEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 10) = 0;
    *(_WORD *)(result + 8) = 0;
    *(void *)FMIPCore::FMIPSeparationEvent result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 11) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 11) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPSeparationEvent()
{
  return &type metadata for FMIPSeparationEvent;
}

uint64_t sub_1D43085D8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D4308610()
{
  return swift_bridgeObjectRetain();
}

uint64_t FMIPB389ProductInformation.init(beacon:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_1D42C26F4(a1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 136))(v4, v5);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  sub_1D42C26F4(a1, v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 144))(v7, v8);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_1D42C26F4(a1, v10);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 56))(v10, v11);
  *a2 = v6;
  a2[1] = v9;
  a2[2] = v12;
  a2[3] = v13;
  a2[4] = 0x656C707041;
  a2[5] = 0xE500000000000000;
  a2[6] = 0;
  a2[7] = 0;
  a2[8] = 0x4010000000000000;

  return sub_1D42BEC64((uint64_t)a1);
}

uint64_t FMIPB389ProductInformation.vendorIdentifier.getter()
{
  return *(void *)v0;
}

uint64_t FMIPB389ProductInformation.productIdentifier.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t FMIPB389ProductInformation.modelName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPB389ProductInformation.manufacturerName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPB389ProductInformation.appBundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FMIPB389ProductInformation.antennaPower.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t FMIPB389ProductInformation.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 56);
  sub_1D446A838();
  sub_1D446A838();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  sub_1D446A848();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
  }
  return sub_1D446A868();
}

unint64_t sub_1D43088B8(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x6D614E6C65646F6DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x50616E6E65746E61;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D4308980()
{
  return sub_1D43088B8(*v0);
}

uint64_t sub_1D4308988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D4309974(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43089B0(uint64_t a1)
{
  unint64_t v2 = sub_1D43093A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D43089EC(uint64_t a1)
{
  unint64_t v2 = sub_1D43093A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPB389ProductInformation.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C9968);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  v13[5] = v1[2];
  v13[6] = v8;
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[4];
  v13[3] = v1[5];
  v13[4] = v9;
  uint64_t v11 = v1[6];
  v13[1] = v10;
  void v13[2] = v11;
  v13[0] = v1[7];
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43093A8();
  sub_1D446A8E8();
  char v19 = 0;
  sub_1D446A688();
  if (!v2)
  {
    char v18 = 1;
    sub_1D446A688();
    char v17 = 2;
    sub_1D446A658();
    char v16 = 3;
    sub_1D446A658();
    char v15 = 4;
    sub_1D446A628();
    char v14 = 5;
    sub_1D446A678();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FMIPB389ProductInformation.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t FMIPB389ProductInformation.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6C9978);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43093A8();
  sub_1D446A8C8();
  if (v2) {
    return sub_1D42BEC64((uint64_t)a1);
  }
  char v34 = 0;
  uint64_t v9 = sub_1D446A5C8();
  char v33 = 1;
  uint64_t v10 = sub_1D446A5C8();
  char v32 = 2;
  uint64_t v11 = sub_1D446A598();
  uint64_t v13 = v12;
  uint64_t v27 = v11;
  char v31 = 3;
  swift_bridgeObjectRetain();
  uint64_t v28 = v13;
  uint64_t v24 = sub_1D446A598();
  char v30 = 4;
  uint64_t v26 = v14;
  swift_bridgeObjectRetain();
  uint64_t v25 = 0;
  uint64_t v23 = sub_1D446A558();
  char v29 = 5;
  uint64_t v25 = v15;
  swift_bridgeObjectRetain();
  sub_1D446A5B8();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v10;
  uint64_t v18 = v28;
  a2[2] = v27;
  a2[3] = v18;
  uint64_t v19 = v25;
  uint64_t v20 = v26;
  a2[4] = v24;
  a2[5] = v20;
  a2[6] = v23;
  a2[7] = v19;
  a2[8] = v17;
  sub_1D42BEC64((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_1D4309080@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  FMIPB389ProductInformation.init(beacon:)(a1, (uint64_t *)v8);
  uint64_t v3 = v9;
  uint64_t v4 = v10;
  uint64_t v5 = v12;
  long long v6 = v8[1];
  *(_OWORD *)a2 = v8[0];
  *(_OWORD *)(a2 + 16) = v6;
  *(void *)(a2 + 32) = v3;
  *(void *)(a2 + 40) = v4;
  double result = *(double *)&v11;
  *(_OWORD *)(a2 + 48) = v11;
  *(void *)(a2 + 64) = v5;
  return result;
}

uint64_t sub_1D43090D0()
{
  return *(void *)v0;
}

uint64_t sub_1D43090D8()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_1D43090E0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D4309110()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D4309140()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double sub_1D4309170()
{
  return *(double *)(v0 + 64);
}

uint64_t sub_1D4309178@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FMIPB389ProductInformation.init(from:)(a1, a2);
}

uint64_t sub_1D4309190(void *a1)
{
  return FMIPB389ProductInformation.encode(to:)(a1);
}

uint64_t sub_1D43091A8()
{
  return sub_1D446A888();
}

uint64_t sub_1D4309210()
{
  return sub_1D446A888();
}

BOOL _s8FMIPCore26FMIPB389ProductInformationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v7 = *(void *)(a1 + 48);
    uint64_t v6 = *(void *)(a1 + 56);
    double v8 = *(double *)(a1 + 64);
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v12 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    double v13 = *(double *)(a2 + 64);
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
      goto LABEL_20;
    }
    char v14 = sub_1D446A758();
    BOOL result = 0;
    if (v14)
    {
LABEL_20:
      if (v4 == v9 && v5 == v10 || (char v15 = sub_1D446A758(), result = 0, (v15 & 1) != 0))
      {
        if (v6)
        {
          if (v11)
          {
            if (v7 != v12 || v6 != v11)
            {
              char v16 = sub_1D446A758();
              BOOL result = 0;
              if ((v16 & 1) == 0) {
                return result;
              }
            }
            return v8 == v13;
          }
        }
        else if (!v11)
        {
          return v8 == v13;
        }
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_1D43093A8()
{
  unint64_t result = qword_1EA6C9970;
  if (!qword_1EA6C9970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9970);
  }
  return result;
}

unint64_t sub_1D43093FC(void *a1)
{
  a1[2] = sub_1D4303364();
  a1[3] = sub_1D4303200();
  unint64_t result = sub_1D4309434();
  a1[4] = result;
  return result;
}

unint64_t sub_1D4309434()
{
  unint64_t result = qword_1EA6C9980;
  if (!qword_1EA6C9980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9980);
  }
  return result;
}

unint64_t sub_1D430948C()
{
  unint64_t result = qword_1EA6C9988;
  if (!qword_1EA6C9988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9988);
  }
  return result;
}

uint64_t destroy for FMIPB389ProductInformation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMIPB389ProductInformation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FMIPB389ProductInformation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  return a1;
}

__n128 initializeWithTake for FMIPB389ProductInformation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for FMIPB389ProductInformation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPB389ProductInformation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPB389ProductInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPB389ProductInformation()
{
  return &type metadata for FMIPB389ProductInformation;
}

unsigned char *storeEnumTagSinglePayload for FMIPB389ProductInformation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4309834);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPB389ProductInformation.CodingKeys()
{
  return &type metadata for FMIPB389ProductInformation.CodingKeys;
}

unint64_t sub_1D4309870()
{
  unint64_t result = qword_1EA6C9990;
  if (!qword_1EA6C9990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9990);
  }
  return result;
}

unint64_t sub_1D43098C8()
{
  unint64_t result = qword_1EA6C9998;
  if (!qword_1EA6C9998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9998);
  }
  return result;
}

unint64_t sub_1D4309920()
{
  unint64_t result = qword_1EA6C99A0;
  if (!qword_1EA6C99A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C99A0);
  }
  return result;
}

uint64_t sub_1D4309974(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001D447ED00 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D447D8A0 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E6C65646F6DLL && a2 == 0xE900000000000065 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D447D210 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D447ED20 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x50616E6E65746E61 && a2 == 0xEC0000007265776FLL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_1D446A758();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

FMIPCore::FMIPActionStatus_optional sub_1D4309BF8@<W0>(unsigned char *a1@<X8>)
{
  result.value = FMIPActionStatus.init(rawValue:)(*(void *)(v1 + 48)).value;
  char v4 = v5;
  if (v5 == 18) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1D4309C3C(uint64_t a1)
{
  return sub_1D4309C88(a1);
}

uint64_t sub_1D4309C88(uint64_t a1)
{
  sub_1D42A4D5C(a1, (uint64_t)v13);
  uint64_t v3 = sub_1D432C7E4(v13);
  if (!v1)
  {
    uint64_t v4 = qword_1EBD80068;
    swift_retain();
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1D4469928();
    sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
    swift_retain();
    unsigned int v6 = sub_1D44698F8();
    os_log_type_t v7 = sub_1D446A038();
    if (os_log_type_enabled(v6, v7))
    {
      double v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)double v8 = 136315138;
      v13[0] = v9;
      uint64_t v10 = sub_1D432CBAC();
      v13[6] = sub_1D42CB9EC(v10, v11, v13);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v6, v7, "FMIPRemoveResponse: initialized with coder %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v9, -1, -1);
      MEMORY[0x1D9447730](v8, -1, -1);
    }
    else
    {
      swift_release_n();
    }
  }
  sub_1D42BEC64(a1);
  return v3;
}

uint64_t type metadata accessor for FMIPRemoveResponse()
{
  return self;
}

FMIPCore::FMIPAuthEventResponse_optional __swiftcall FMIPAuthEventResponse.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1D446A518();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t FMIPAuthEventResponse.rawValue.getter()
{
  uint64_t v1 = 0x6465696E6564;
  if (*v0 != 1) {
    uint64_t v1 = 0x776F4E746F6ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6465746E617267;
  }
}

unint64_t sub_1D4309F40(char a1)
{
  unint64_t result = 0xD000000000000011;
  if (a1 == 1) {
    return 0xD00000000000001CLL;
  }
  return result;
}

uint64_t sub_1D4309F9C(char *a1, unsigned __int8 *a2)
{
  return sub_1D4414230(*a1, *a2);
}

uint64_t sub_1D4309FA8()
{
  return sub_1D446A888();
}

uint64_t sub_1D430A044()
{
  sub_1D4469BC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D430A0CC()
{
  return sub_1D446A888();
}

FMIPCore::FMIPAuthEventResponse_optional sub_1D430A164(Swift::String *a1)
{
  return FMIPAuthEventResponse.init(rawValue:)(*a1);
}

void sub_1D430A170(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 0x6465696E6564;
  if (v2 != 1) {
    uint64_t v4 = 0x776F4E746F6ELL;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6465746E617267;
  }
  if (!v5) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t FMIPNotificationAuthLaunchEvent.findMyNotificationAuthStatus.getter()
{
  return *(void *)v0;
}

uint64_t FMIPNotificationAuthLaunchEvent.findMyNotificationAuthStatus.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*FMIPNotificationAuthLaunchEvent.findMyNotificationAuthStatus.modify())()
{
  return nullsub_1;
}

uint64_t FMIPNotificationAuthLaunchEvent.utAlertAuthStatus.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t FMIPNotificationAuthLaunchEvent.utAlertAuthStatus.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*FMIPNotificationAuthLaunchEvent.utAlertAuthStatus.modify())()
{
  return nullsub_1;
}

void FMIPNotificationAuthPromptEvent.authEventResponse.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *FMIPNotificationAuthPromptEvent.authEventResponse.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*FMIPNotificationAuthPromptEvent.authEventResponse.modify())()
{
  return nullsub_1;
}

FMIPCore::FMIPNotificationAuthPromptEvent __swiftcall FMIPNotificationAuthPromptEvent.init(authEventResponse:)(FMIPCore::FMIPNotificationAuthPromptEvent authEventResponse)
{
  *uint64_t v1 = *(unsigned char *)authEventResponse.authEventResponse;
  return authEventResponse;
}

Swift::Void __swiftcall FMIPManager.enqueue(notificationPromptEvent:)(FMIPCore::FMIPNotificationAuthPromptEvent notificationPromptEvent)
{
}

void _s8FMIPCore13FMIPAnalyticsV31sendNotificationAuthPromptEvent5eventyAA016FMIPNotificationefG0V_tFZ_0()
{
  unint64_t v0 = sub_1D4274BFC(MEMORY[0x1E4FBC860]);
  id v1 = objc_allocWithZone(NSString);
  int v2 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithString_, v2);

  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v3, 0xD000000000000011, 0x80000001D447EDE0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  BOOL v5 = (void *)sub_1D4469B08();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v0;
  v8[4] = sub_1D430A640;
  v8[5] = v6;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_1D4356EBC;
  v8[3] = &unk_1F2C05E90;
  os_log_type_t v7 = _Block_copy(v8);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v7);
  swift_bridgeObjectRelease();
}

unint64_t sub_1D430A490()
{
  unint64_t result = qword_1EA6C99A8;
  if (!qword_1EA6C99A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C99A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPAuthEventResponse()
{
  return &type metadata for FMIPAuthEventResponse;
}

unsigned char *_s8FMIPCore21FMIPAuthEventResponseOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D430A5C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPNotificationAuthPromptEvent()
{
  return &type metadata for FMIPNotificationAuthPromptEvent;
}

uint64_t sub_1D430A600()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t FMIPShowContactDetailsAction.phoneNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8FMIPCore28FMIPShowContactDetailsAction_phoneNumber);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPShowContactDetailsAction.enabled.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore28FMIPShowContactDetailsAction_enabled);
}

uint64_t FMIPShowContactDetailsAction.__allocating_init(device:phoneNumber:enabled:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = swift_allocObject();
  FMIPShowContactDetailsAction.init(device:phoneNumber:enabled:)(a1, a2, a3, a4);
  return v8;
}

uint64_t FMIPShowContactDetailsAction.init(device:phoneNumber:enabled:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void *)(v4 + OBJC_IVAR____TtC8FMIPCore28FMIPShowContactDetailsAction_phoneNumber);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC8FMIPCore28FMIPShowContactDetailsAction_enabled) = a4;
  *(void *)(v4 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext) = 0;
  unsigned int v6 = (void *)(v4 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  *unsigned int v6 = 0;
  v6[1] = 0;
  os_log_type_t v7 = (void *)(v4 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
  *os_log_type_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = (void *)(v4 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_username);
  *uint64_t v8 = 0;
  v8[1] = 0;
  uint64_t v9 = (void *)(v4 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  *uint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v10 = (void *)(v4 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_escrowUUID);
  *uint64_t v10 = 0;
  v10[1] = 0;
  *(_OWORD *)(v4 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession) = xmmword_1D446D300;
  sub_1D42B2518(a1, v4 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  return v4;
}

uint64_t sub_1D430A7D0()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8FMIPCore28FMIPShowContactDetailsAction_enabled)) {
    return 0x64656C62616E65;
  }
  else {
    return 0x64656C6261736964;
  }
}

uint64_t static FMIPShowContactDetailsAction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore28FMIPShowContactDetailsAction_enabled) == *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8FMIPCore28FMIPShowContactDetailsAction_enabled)) {
    return static FMIPDevice.== infix(_:_:)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  }
  else {
    return 0;
  }
}

void FMIPShowContactDetailsAction.__allocating_init(device:)()
{
}

void FMIPShowContactDetailsAction.init(device:)()
{
}

uint64_t sub_1D430A8AC()
{
  return swift_bridgeObjectRelease();
}

uint64_t FMIPShowContactDetailsAction.deinit()
{
  uint64_t v0 = FMIPDeviceAction.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMIPShowContactDetailsAction.__deallocating_deinit()
{
  FMIPDeviceAction.deinit();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1D430A974(void *a1, void *a2)
{
  if (*(unsigned __int8 *)(*a1 + OBJC_IVAR____TtC8FMIPCore28FMIPShowContactDetailsAction_enabled) == *(unsigned __int8 *)(*a2 + OBJC_IVAR____TtC8FMIPCore28FMIPShowContactDetailsAction_enabled)) {
    return static FMIPDevice.== infix(_:_:)(*a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  }
  else {
    return 0;
  }
}

uint64_t sub_1D430A9B4()
{
  return type metadata accessor for FMIPShowContactDetailsAction();
}

uint64_t type metadata accessor for FMIPShowContactDetailsAction()
{
  uint64_t result = qword_1EA6C99B0;
  if (!qword_1EA6C99B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D430AA08()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FMIPShowContactDetailsAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPShowContactDetailsAction);
}

uint64_t dispatch thunk of FMIPShowContactDetailsAction.__allocating_init(device:phoneNumber:enabled:)()
{
  return (*(uint64_t (**)(void))(v0 + 368))();
}

uint64_t dispatch thunk of FMIPShowContactDetailsAction.debugState()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

void FMIPEraseMetadata.status.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FMIPEraseMetadata.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMIPEraseMetadata() + 20);
  uint64_t v4 = sub_1D4469618();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FMIPEraseMetadata.phoneNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPEraseMetadata() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPEraseMetadata.message.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPEraseMetadata() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPEraseMetadata.isTextCustomized.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMIPEraseMetadata() + 32));
}

uint64_t sub_1D430ABD4(unsigned __int8 *a1, char *a2)
{
  return sub_1D44146A4(*a1, *a2);
}

uint64_t sub_1D430ABE0()
{
  return sub_1D446A888();
}

uint64_t sub_1D430ACE0()
{
  sub_1D4469BC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D430ADC8()
{
  return sub_1D446A888();
}

uint64_t sub_1D430AEC4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D430CA08();
  *a1 = result;
  return result;
}

void sub_1D430AEF4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1954047348;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x72624E72656E776FLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x6954657461657263;
      a1[1] = 0xEF706D617473656DLL;
      break;
    case 3:
      *a1 = 0x6F43737574617473;
      a1[1] = 0xEA00000000006564;
      break;
    case 4:
      *a1 = 0x7478655472657375;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1D430AFB8()
{
  uint64_t result = 1954047348;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x72624E72656E776FLL;
      break;
    case 2:
      uint64_t result = 0x6954657461657263;
      break;
    case 3:
      uint64_t result = 0x6F43737574617473;
      break;
    case 4:
      uint64_t result = 0x7478655472657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D430B06C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D430CA08();
  *a1 = result;
  return result;
}

void sub_1D430B094(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1D430B0A0(uint64_t a1)
{
  unint64_t v2 = sub_1D42B04E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D430B0DC(uint64_t a1)
{
  unint64_t v2 = sub_1D42B04E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t FMIPEraseMetadata.debugDescription.getter()
{
  uint64_t v0 = self;
  type metadata accessor for FMIPEraseMetadata();
  uint64_t v1 = (void *)sub_1D4469578();
  id v2 = objc_msgSend(v0, sel_localizedStringFromDate_dateStyle_timeStyle_, v1, 1, 4);

  sub_1D4469B38();
  sub_1D446A378();
  swift_bridgeObjectRelease();
  FMIPActionStatus.description.getter();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  return 0xD00000000000001CLL;
}

void FMIPEraseMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6C99C0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPEraseMetadata();
  uint64_t v10 = v1;
  os_log_type_t v7 = (void *)sub_1D4469578();
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42B04E8();
  sub_1D446A8E8();
  objc_msgSend(v7, sel_fm_epoch);
  char v17 = 2;
  uint64_t v8 = v11;
  sub_1D446A6A8();
  if (!v8)
  {
    uint64_t v12 = qword_1D446ED00[*v10];
    sub_1D446A6D8();
    char v16 = 3;
    sub_1D446A658();
    swift_bridgeObjectRelease();
    char v15 = 0;
    sub_1D446A658();
    char v14 = 1;
    sub_1D446A658();
    char v13 = 4;
    sub_1D446A668();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1D430B4F0(void *a1)
{
}

uint64_t sub_1D430B510(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1D4469C88();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1D9445FB0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_1D430B58C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1D430B6F0(a1, a2, a3);
}

unsigned __int8 *sub_1D430B5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1D4469CC8();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1D430B96C();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_1D446A3E8();
  }
LABEL_7:
  uint64_t v11 = sub_1D430B6F0(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1D430B68C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPEraseMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned __int8 *sub_1D430B6F0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (int64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1D430B96C()
{
  unint64_t v0 = sub_1D4469CD8();
  uint64_t v4 = sub_1D430B9EC(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1D430B9EC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1D430BB44(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_1D42CBEE8(v9, 0);
      unint64_t v12 = sub_1D430BC44((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1D446A3E8();
LABEL_4:
        JUMPOUT(0x1D9445F20);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1D9445F20](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1D9445F20]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_1D430BB44(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1D430B510(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1D430B510(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
}

unint64_t sub_1D430BC44(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    _OWORD v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_1D430B510(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1D4469C68();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_1D446A3E8();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_1D430B510(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1D4469C38();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t _s8FMIPCore17FMIPEraseMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPEraseMetadata();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  unint64_t v10 = (char *)&v49 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v52 = (char *)&v49 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v51 = (uint64_t)&v49 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)&v49 - v16;
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  char v20 = (char *)&v49 - v19;
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  unint64_t v23 = (char *)&v49 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v49 - v24;
  char v26 = sub_1D44695C8();
  sub_1D430CA54(a1, (uint64_t)v25);
  sub_1D430CA54(a2, (uint64_t)v23);
  if ((v26 & 1) == 0)
  {
    sub_1D430CAB8((uint64_t)v23);
    sub_1D430CAB8((uint64_t)v25);
    sub_1D430CA54(a1, (uint64_t)v20);
    sub_1D430CA54(a2, (uint64_t)v17);
    uint64_t v31 = (uint64_t)v52;
LABEL_11:
    sub_1D430CAB8((uint64_t)v20);
    sub_1D430CAB8((uint64_t)v17);
    uint64_t v39 = v51;
    sub_1D430CA54(a1, v51);
    sub_1D430CA54(a2, v31);
    goto LABEL_12;
  }
  uint64_t v50 = v4;
  uint64_t v27 = qword_1D446ED00[*v25];
  uint64_t v28 = v10;
  char v29 = v7;
  uint64_t v30 = qword_1D446ED00[*v23];
  sub_1D430CAB8((uint64_t)v23);
  sub_1D430CAB8((uint64_t)v25);
  sub_1D430CA54(a1, (uint64_t)v20);
  sub_1D430CA54(a2, (uint64_t)v17);
  BOOL v37 = v27 == v30;
  unint64_t v7 = v29;
  unint64_t v10 = v28;
  uint64_t v31 = (uint64_t)v52;
  if (!v37) {
    goto LABEL_11;
  }
  uint64_t v32 = v50;
  uint64_t v33 = *(int *)(v50 + 28);
  uint64_t v34 = *(void *)&v20[v33];
  uint64_t v35 = *(void *)&v20[v33 + 8];
  uint64_t v36 = &v17[v33];
  BOOL v37 = v34 == *(void *)v36 && v35 == *((void *)v36 + 1);
  if (v37)
  {
    sub_1D430CAB8((uint64_t)v20);
    sub_1D430CAB8((uint64_t)v17);
    uint64_t v39 = v51;
    sub_1D430CA54(a1, v51);
    sub_1D430CA54(a2, v31);
LABEL_16:
    uint64_t v42 = *(int *)(v32 + 24);
    uint64_t v43 = *(void *)(v39 + v42);
    uint64_t v44 = *(void *)(v39 + v42 + 8);
    uint64_t v45 = (void *)(v31 + v42);
    if (v43 == *v45 && v44 == v45[1])
    {
      sub_1D430CAB8(v39);
      sub_1D430CAB8(v31);
      sub_1D430CA54(a1, (uint64_t)v10);
      sub_1D430CA54(a2, (uint64_t)v7);
    }
    else
    {
      char v46 = sub_1D446A758();
      sub_1D430CAB8(v39);
      sub_1D430CAB8(v31);
      sub_1D430CA54(a1, (uint64_t)v10);
      sub_1D430CA54(a2, (uint64_t)v7);
      if ((v46 & 1) == 0) {
        goto LABEL_13;
      }
    }
    char v47 = v10[*(int *)(v32 + 32)];
    sub_1D430CAB8((uint64_t)v10);
    char v48 = v7[*(int *)(v32 + 32)];
    sub_1D430CAB8((uint64_t)v7);
    char v40 = v47 ^ v48 ^ 1;
    return v40 & 1;
  }
  char v38 = sub_1D446A758();
  sub_1D430CAB8((uint64_t)v20);
  sub_1D430CAB8((uint64_t)v17);
  uint64_t v39 = v51;
  sub_1D430CA54(a1, v51);
  sub_1D430CA54(a2, v31);
  if (v38) {
    goto LABEL_16;
  }
LABEL_12:
  sub_1D430CAB8(v39);
  sub_1D430CAB8(v31);
  sub_1D430CA54(a1, (uint64_t)v10);
  sub_1D430CA54(a2, (uint64_t)v7);
LABEL_13:
  sub_1D430CAB8((uint64_t)v7);
  sub_1D430CAB8((uint64_t)v10);
  char v40 = 0;
  return v40 & 1;
}

void *initializeBufferWithCopyOfBuffer for FMIPEraseMetadata(unsigned char *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1D4469618();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = a3[7];
    uint64_t v13 = (void *)((char *)v4 + v11);
    uint64_t v14 = (void *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = (void *)((char *)v4 + v12);
    unint64_t v17 = (void *)((char *)a2 + v12);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FMIPEraseMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

unsigned char *initializeWithCopy for FMIPEraseMetadata(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = &a1[v11];
  uint64_t v16 = &a2[v11];
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  a1[a3[8]] = a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *assignWithCopy for FMIPEraseMetadata(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

unsigned char *initializeWithTake for FMIPEraseMetadata(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

unsigned char *assignWithTake for FMIPEraseMetadata(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = (uint64_t *)&a2[v10];
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (uint64_t *)&a2[v15];
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t sub_1D430C730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4469618();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1D430C7F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D4469618();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPEraseMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D430C988);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unint64_t sub_1D430C9B4()
{
  unint64_t result = qword_1EA6C99C8;
  if (!qword_1EA6C99C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C99C8);
  }
  return result;
}

uint64_t sub_1D430CA08()
{
  unint64_t v0 = sub_1D446A518();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D430CA54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPEraseMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D430CAB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPEraseMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D430CB14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for FMIPItem();
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)v23 - v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v24 = v9;
    uint64_t v25 = a2;
    uint64_t v26 = v2;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v14 = *(void *)(v9 + 72);
    v23[1] = a1;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1D42D2238(v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v15 = &v11[*(int *)(v5 + 64)];
      uint64_t v16 = *((void *)v15 + 1);
      uint64_t v17 = v15[32];
      sub_1D42D2238((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      if (v16)
      {
        sub_1D42D2058((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        switch(v17)
        {
          case 3:
            swift_bridgeObjectRelease();
            goto LABEL_15;
          default:
            goto LABEL_11;
        }
      }
      uint64_t v18 = &v8[*(int *)(v5 + 56)];
      if (*(void *)v18 != 1702060355 || *((void *)v18 + 1) != 0xE400000000000000) {
        sub_1D446A758();
      }
      sub_1D42D2058((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_11:
      char v20 = sub_1D446A758();
      swift_bridgeObjectRelease();
      if (v20) {
        break;
      }
      sub_1D42D2058((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      v13 += v14;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = 1;
        uint64_t v9 = v24;
        a2 = v25;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v21, 1, v5);
      }
    }
LABEL_15:
    swift_bridgeObjectRelease();
    a2 = v25;
    sub_1D42D6AE4((uint64_t)v11, v25, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v21 = 0;
    uint64_t v9 = v24;
  }
  else
  {
    uint64_t v21 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v21, 1, v5);
}

uint64_t sub_1D430CE70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for FMIPItem();
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)v23 - v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v24 = v9;
    uint64_t v25 = a2;
    uint64_t v26 = v2;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v14 = *(void *)(v9 + 72);
    v23[1] = a1;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1D42D2238(v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v15 = &v11[*(int *)(v5 + 64)];
      uint64_t v16 = *((void *)v15 + 1);
      uint64_t v17 = v15[32];
      sub_1D42D2238((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      if (v16)
      {
        sub_1D42D2058((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        switch(v17)
        {
          case 2:
            swift_bridgeObjectRelease();
            goto LABEL_15;
          default:
            goto LABEL_11;
        }
      }
      uint64_t v18 = &v8[*(int *)(v5 + 56)];
      if (*(void *)v18 != 1702060355 || *((void *)v18 + 1) != 0xE400000000000000) {
        sub_1D446A758();
      }
      sub_1D42D2058((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_11:
      char v20 = sub_1D446A758();
      swift_bridgeObjectRelease();
      if (v20) {
        break;
      }
      sub_1D42D2058((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      v13 += v14;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = 1;
        uint64_t v9 = v24;
        a2 = v25;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v21, 1, v5);
      }
    }
LABEL_15:
    swift_bridgeObjectRelease();
    a2 = v25;
    sub_1D42D6AE4((uint64_t)v11, v25, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v21 = 0;
    uint64_t v9 = v24;
  }
  else
  {
    uint64_t v21 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v21, 1, v5);
}

uint64_t sub_1D430D1E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for FMIPItem();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v23 - v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v24 = v6;
    uint64_t v25 = a2;
    uint64_t v26 = v2;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v14 = *(void *)(v6 + 72);
    v23[1] = a1;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1D42D2238(v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v15 = &v11[*(int *)(v5 + 64)];
      uint64_t v16 = *((void *)v15 + 1);
      uint64_t v17 = v15[32];
      sub_1D42D2238((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      if (v16)
      {
        sub_1D42D2058((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        switch(v17)
        {
          case 1:
            goto LABEL_17;
          default:
            goto LABEL_11;
        }
      }
      uint64_t v18 = &v9[*(int *)(v5 + 56)];
      BOOL v19 = *(void *)v18 == 1702060355 && *((void *)v18 + 1) == 0xE400000000000000;
      if (v19 || (sub_1D446A758() & 1) != 0) {
        break;
      }
      sub_1D42D2058((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_11:
      char v20 = sub_1D446A758();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_18;
      }
      sub_1D42D2058((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      v13 += v14;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = 1;
        uint64_t v6 = v24;
        a2 = v25;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v21, 1, v5);
      }
    }
    sub_1D42D2058((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_17:
    swift_bridgeObjectRelease();
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v6 = v24;
    a2 = v25;
    sub_1D42D6AE4((uint64_t)v11, v25, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v21, 1, v5);
}

uint64_t FMIPActionStatus.rawValue.getter()
{
  return qword_1D446F088[*v0];
}

uint64_t sub_1D430D5CC()
{
  return sub_1D430D640(&qword_1EA6C8F68, (uint64_t)qword_1EA6E4710);
}

uint64_t sub_1D430D5F0(uint64_t a1)
{
  return sub_1D427532C(a1, qword_1EA6E4728);
}

uint64_t sub_1D430D61C()
{
  return sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
}

uint64_t sub_1D430D640(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D4469928();

  return sub_1D42D7FAC(v3, a2);
}

uint64_t FMIPActionStatus.isActionSuccessful.getter()
{
  return (0x3E004u >> *v0) & 1;
}

uint64_t FMIPActionStatus.isSafetyWarning.getter()
{
  return (0xBC8u >> *v0) & 1;
}

BOOL sub_1D430D708(char *a1, char *a2)
{
  return qword_1D446F088[*a1] == qword_1D446F088[*a2];
}

uint64_t sub_1D430D72C()
{
  return sub_1D446A888();
}

uint64_t sub_1D430D77C()
{
  return sub_1D446A838();
}

uint64_t sub_1D430D7B4()
{
  return sub_1D446A888();
}

FMIPCore::FMIPActionStatus_optional sub_1D430D800(Swift::Int *a1)
{
  return FMIPActionStatus.init(rawValue:)(*a1);
}

void sub_1D430D808(void *a1@<X8>)
{
  *a1 = qword_1D446F088[*v1];
}

unint64_t sub_1D430D824()
{
  unint64_t result = qword_1EA6C99D0;
  if (!qword_1EA6C99D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C99D0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPActionStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPActionStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D430D9D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPActionStatus()
{
  return &type metadata for FMIPActionStatus;
}

id sub_1D430DA10()
{
  unint64_t v1 = *(void **)(v0 + 40);
  if (v1)
  {
    id v2 = *(id *)(v0 + 40);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F97C60]), sel_init);
    unsigned int v4 = *(void **)(v0 + 40);
    *(void *)(v0 + 40) = v3;
    id v2 = v3;

    unint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_1D430DA7C()
{
  uint64_t v1 = v0;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  id v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = v19;
    *(_DWORD *)id v5 = 136315138;
    uint64_t v6 = *(void *)(v1 + 16);
    unint64_t v7 = *(void *)(v1 + 24);
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1D427A0D0(0xCuLL, v6, v7);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x1D9445EF0](v8, v10, v12, v14);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    sub_1D42CB9EC(v15, v17, &v20);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPDeviceActionsController<%s>.deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v19, -1, -1);
    MEMORY[0x1D9447730](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  swift_bridgeObjectRelease();

  sub_1D42BEC64(v1 + 48);
  sub_1D4276C3C(v1 + 88, &qword_1EBD7F828);
  sub_1D4276C3C(v1 + 128, &qword_1EBD7D4F8);
  swift_release();
  return v1;
}

uint64_t sub_1D430DCD4()
{
  sub_1D430DA7C();

  return swift_deallocClassInstance();
}

uint64_t sub_1D430DD08(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t, void *, uint64_t), void *a5)
{
  uint64_t v9 = a1;
  if (qword_1EBD7E658 != -1) {
    a1 = swift_once();
  }
  unint64_t v10 = *(void *)(v9 + 48);
  uint64_t v37 = a3;
  char v38 = a2;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  if (byte_1EBD7CB21 != 1) {
    goto LABEL_6;
  }
  if ((v10 & 0x2000000000000000) != 0)
  {
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if (v11) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v11 = *(void *)(v9 + 40) & 0xFFFFFFFFFFFFLL;
    if (v11)
    {
LABEL_6:
      uint64_t v32 = *(void *)(v9 + 80);
      uint64_t v33 = *(void *)(v9 + 72);
      unint64_t v34 = *(void *)(v9 + 48);
      uint64_t v30 = *(void *)(v9 + 56);
      unint64_t v31 = *(void *)(v9 + 64);
      uint64_t v12 = *(void *)(v9 + 40);
      char v13 = *(unsigned char *)(v9 + 35);
      char v14 = *(unsigned char *)(v9 + 34);
      char v15 = *(unsigned char *)(v9 + 33);
      char v16 = *(unsigned char *)(v9 + 32);
      uint64_t v18 = *(void *)(v9 + 16);
      unint64_t v17 = *(void *)(v9 + 24);
      uint64_t v19 = *(void *)v9;
      unint64_t v20 = *(void *)(v9 + 8);
      a1 = sub_1D4290D4C(v9);
      uint64_t v21 = v19;
      char v22 = v16;
      uint64_t v11 = v33;
      unint64_t v23 = v34;
      uint64_t v24 = v18;
      uint64_t v25 = v30;
      unint64_t v26 = v31;
      uint64_t v27 = v32;
      goto LABEL_7;
    }
  }
  uint64_t v21 = 0;
  uint64_t v24 = 0;
  char v14 = 0;
  uint64_t v27 = 0;
  unint64_t v23 = 0xEE006D6F632E656CLL;
  uint64_t v12 = 0x707061406F6D6564;
  char v22 = 1;
  unint64_t v20 = 0xE000000000000000;
  unint64_t v17 = 0xE000000000000000;
  char v15 = 1;
  char v13 = 1;
  uint64_t v25 = 0x707061406F6D6564;
  unint64_t v26 = 0xEE006D6F632E656CLL;
LABEL_7:
  *(void *)&long long v41 = v21;
  *((void *)&v41 + 1) = v20;
  *(void *)&long long v42 = v24;
  *((void *)&v42 + 1) = v17;
  LOBYTE(v43) = v22;
  BYTE1(v43) = v15;
  BYTE2(v43) = v14;
  BYTE3(v43) = v13;
  *((void *)&v43 + 1) = v12;
  *(void *)&long long v44 = v23;
  *((void *)&v44 + 1) = v25;
  *(void *)&long long v45 = v26;
  *((void *)&v45 + 1) = v11;
  uint64_t v46 = v27;
  uint64_t v28 = (void *)MEMORY[0x1D9446F50](a1);
  v39[2] = v43;
  v39[3] = v44;
  v39[4] = v45;
  uint64_t v40 = v27;
  v39[0] = v41;
  v39[1] = v42;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D4326EFC(v37, (uint64_t)v39, v38, v35, v36, v37, v38, (uint64_t)&v41);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D430DFC4(uint64_t a1, void *a2, void (*a3)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t, void *, uint64_t), void *a4, uint64_t a5, void *a6, uint64_t a7)
{
  if (a2)
  {
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1D4469928();
    sub_1D42D7FAC(v11, (uint64_t)qword_1EA6E4710);
    id v12 = a2;
    id v13 = a2;
    char v14 = sub_1D44698F8();
    os_log_type_t v15 = sub_1D446A038();
    if (os_log_type_enabled(v14, v15))
    {
      char v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v43[0] = v17;
      *(_DWORD *)char v16 = 136315138;
      id v18 = a2;
      sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
      uint64_t v19 = sub_1D4469B68();
      v42[0] = sub_1D42CB9EC(v19, v20, v43);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v14, v15, "FMIPDeviceActionsController: error verifing trusted status action:\n%s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v17, -1, -1);
      MEMORY[0x1D9447730](v16, -1, -1);
    }
    else
    {
    }
    LOBYTE(v43[0]) = 0;
    return ((uint64_t (*)(uint64_t *, void, void *, uint64_t))a3)(v43, 0, a2, a5);
  }
  else
  {
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = a3;
    v24[3] = a4;
    v24[4] = a5;
    void v24[5] = a6;
    uint64_t v25 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 144);
    swift_retain_n();
    swift_retain_n();
    uint64_t v26 = swift_retain_n();
    if (v25(v26))
    {
      uint64_t v27 = *(void *)(a7 + 40);
      uint64_t v28 = *(void *)(a7 + 48);
      char v29 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 152);
      swift_retain();
      uint64_t v30 = swift_bridgeObjectRetain();
      unint64_t v31 = (void *)v29(v30);
      sub_1D42A3A74((uint64_t)(a6 + 11), (uint64_t)v43, &qword_1EBD7F828);
      sub_1D42A3A74((uint64_t)(a6 + 16), (uint64_t)v42, &qword_1EBD7D4F8);
      id v32 = objc_allocWithZone((Class)type metadata accessor for FMIPEphemeralAuthenticationController());
      uint64_t v33 = (char *)sub_1D4305264(a1, v27, v28, v31, (uint64_t)v43, (uint64_t)v42);
      unint64_t v34 = (void *)swift_allocObject();
      _OWORD v34[2] = sub_1D4327418;
      v34[3] = v24;
      v34[4] = a1;
      v34[5] = a6;
      uint64_t v35 = *(void *)&v33[OBJC_IVAR____TtC8FMIPCore37FMIPEphemeralAuthenticationController_authenticationController
                          + 24];
      uint64_t v36 = *(void *)&v33[OBJC_IVAR____TtC8FMIPCore37FMIPEphemeralAuthenticationController_authenticationController
                          + 32];
      sub_1D42C26F4(&v33[OBJC_IVAR____TtC8FMIPCore37FMIPEphemeralAuthenticationController_authenticationController], v35);
      uint64_t v41 = *(void *)&v33[OBJC_IVAR____TtC8FMIPCore37FMIPEphemeralAuthenticationController_authenticationContext];
      uint64_t v37 = (void *)swift_allocObject();
      void v37[2] = sub_1D4327494;
      v37[3] = v34;
      v37[4] = v33;
      uint64_t v40 = *(void (**)(uint64_t, void (*)(uint64_t, void *), void *, uint64_t, uint64_t))(v36 + 8);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      char v38 = v33;
      v40(v41, sub_1D4327500, v37, v35, v36);
      swift_release();
      swift_release();

      swift_release();
    }
    else
    {
      sub_1D430E450(a1, 0, a3, a4, a5, a6);
      swift_release();
    }
    swift_release();
    swift_release();
    return swift_release();
  }
}

void sub_1D430E450(uint64_t a1, void *a2, void (*a3)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t, void *, uint64_t), void *a4, uint64_t a5, void *a6)
{
  if (a2)
  {
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1D4469928();
    sub_1D42D7FAC(v10, (uint64_t)qword_1EA6E4710);
    id v11 = a2;
    id v12 = a2;
    id v13 = sub_1D44698F8();
    os_log_type_t v14 = sub_1D446A038();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v68 = v16;
      *(_DWORD *)os_log_type_t v15 = 136315138;
      id v17 = a2;
      sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
      uint64_t v18 = sub_1D4469B68();
      sub_1D42CB9EC(v18, v19, &v68);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v13, v14, "FMIPDeviceActionsController: error authenticating action: %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v16, -1, -1);
      MEMORY[0x1D9447730](v15, -1, -1);
    }
    else
    {
    }
    LOBYTE(v68) = 0;
    a3((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v68, 0, a2, a5);
    return;
  }
  type metadata accessor for FMIPShowContactDetailsAction();
  uint64_t v21 = swift_dynamicCastClass();
  if (v21)
  {
    uint64_t v22 = v21;
    swift_retain();
    sub_1D431D7DC(v22, (void (*)(void, void, void, void))a3, (uint64_t)a4);
LABEL_14:
    swift_release();
    return;
  }
  type metadata accessor for FMIPPlaySoundDeviceAction(0);
  uint64_t v23 = swift_dynamicCastClass();
  if (v23)
  {
    uint64_t v24 = v23;
    swift_retain();
    sub_1D430ECF4(v24, a3, (uint64_t)a4);
    goto LABEL_14;
  }
  type metadata accessor for FMIPLostModeAction(0);
  uint64_t v25 = swift_dynamicCastClass();
  if (v25)
  {
    uint64_t v26 = v25;
    swift_retain();
    sub_1D431D1FC(v26, (void (*)(char *, uint64_t, void *, uint64_t))a3, (uint64_t)a4);
    goto LABEL_14;
  }
  type metadata accessor for FMIPLockAction();
  uint64_t v27 = swift_dynamicCastClass();
  if (v27)
  {
    uint64_t v28 = v27;
    type metadata accessor for FMIPLockRequest();
    *(void *)(swift_allocObject() + qword_1EA6E4958) = v28;
    if ((*(void *)(v28 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 216) & 0x80) != 0) {
      uint64_t v29 = 0xD00000000000001CLL;
    }
    else {
      uint64_t v29 = 0x4D646E416B636F6CLL;
    }
    if ((*(void *)(v28 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 216) & 0x80) != 0) {
      uint64_t v30 = 0x80000001D447F400;
    }
    else {
      uint64_t v30 = 0xEE00656761737365;
    }
    uint64_t v31 = *(void *)(v28 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
    uint64_t v32 = *(void *)(v28 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken + 8);
    swift_bridgeObjectRetain();
    swift_retain_n();
    uint64_t v33 = sub_1D4332A24(v29, v30, v31, v32, 1);
    unint64_t v34 = a6 + 6;
    uint64_t v36 = a6[9];
    uint64_t v35 = a6[10];
    sub_1D42C26F4(v34, v36);
    uint64_t v37 = (void *)swift_allocObject();
    void v37[2] = a3;
    v37[3] = a4;
    v37[4] = v28;
    char v38 = *(void (**)(void *, uint64_t (*)(uint64_t, void *), void *, uint64_t, uint64_t, uint64_t))(v35 + 56);
    uint64_t v39 = type metadata accessor for FMIPLockResponse();
    swift_retain();
    swift_retain();
    uint64_t v40 = sub_1D43275D8;
LABEL_41:
    v38(v33, v40, v37, v39, v36, v35);
    swift_release();
    swift_release();
    goto LABEL_14;
  }
  type metadata accessor for FMIPEraseAction();
  uint64_t v41 = swift_dynamicCastClass();
  if (v41)
  {
    uint64_t v42 = v41;
    type metadata accessor for FMIPEraseRequest();
    *(void *)(swift_allocObject() + qword_1EA6E4808) = v42;
    uint64_t v43 = *(void *)(v42 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 216);
    if ((v43 & 0x80) != 0) {
      uint64_t v44 = 0xD000000000000018;
    }
    else {
      uint64_t v44 = 0xD000000000000016;
    }
    if ((v43 & 0x80) != 0) {
      uint64_t v45 = 0x80000001D447F3E0;
    }
    else {
      uint64_t v45 = 0x80000001D447F3C0;
    }
    uint64_t v46 = *(void *)(v42 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
    uint64_t v47 = *(void *)(v42 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken + 8);
    swift_bridgeObjectRetain();
    swift_retain_n();
    uint64_t v33 = sub_1D4332A24(v44, v45, v46, v47, 1);
    char v48 = a6 + 6;
    uint64_t v36 = a6[9];
    uint64_t v35 = a6[10];
    sub_1D42C26F4(v48, v36);
    uint64_t v37 = (void *)swift_allocObject();
    void v37[2] = a3;
    v37[3] = a4;
    v37[4] = v42;
    char v38 = *(void (**)(void *, uint64_t (*)(uint64_t, void *), void *, uint64_t, uint64_t, uint64_t))(v35 + 56);
    uint64_t v39 = type metadata accessor for FMIPEraseResponse();
    swift_retain();
    swift_retain();
    uint64_t v40 = sub_1D432757C;
    goto LABEL_41;
  }
  type metadata accessor for FMIPCancelEraseAction();
  uint64_t v49 = swift_dynamicCastClass();
  if (v49)
  {
    uint64_t v50 = v49;
    type metadata accessor for FMIPCancelEraseRequest();
    *(void *)(swift_allocObject() + qword_1EA6E46E8) = v50;
    if ((*(void *)(v50 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 216) & 0x80) != 0) {
      uint64_t v51 = 0xD000000000000018;
    }
    else {
      uint64_t v51 = 0x69576C65636E6163;
    }
    if ((*(void *)(v50 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 216) & 0x80) != 0) {
      uint64_t v52 = 0x80000001D447F3A0;
    }
    else {
      uint64_t v52 = 0xEA00000000006570;
    }
    uint64_t v53 = *(void *)(v50 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
    uint64_t v54 = *(void *)(v50 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken + 8);
    swift_bridgeObjectRetain();
    swift_retain_n();
    uint64_t v33 = sub_1D4332A24(v51, v52, v53, v54, 1);
    uint64_t v55 = a6 + 6;
    uint64_t v36 = a6[9];
    uint64_t v35 = a6[10];
    sub_1D42C26F4(v55, v36);
    uint64_t v37 = (void *)swift_allocObject();
    void v37[2] = a3;
    v37[3] = a4;
    v37[4] = v50;
    char v38 = *(void (**)(void *, uint64_t (*)(uint64_t, void *), void *, uint64_t, uint64_t, uint64_t))(v35 + 56);
    uint64_t v39 = type metadata accessor for FMIPCancelEraseResponse();
    swift_retain();
    swift_retain();
    uint64_t v40 = sub_1D4327520;
    goto LABEL_41;
  }
  type metadata accessor for FMIPNotifyAction(0);
  uint64_t v56 = swift_dynamicCastClass();
  if (v56)
  {
    uint64_t v57 = v56;
    swift_retain();
    sub_1D431E250(v57, (void (*)(uint64_t *, uint64_t, void *, uint64_t))a3, a4);
    goto LABEL_14;
  }
  type metadata accessor for FMIPRemoveDeviceAction(0);
  uint64_t v58 = swift_dynamicCastClass();
  if (v58)
  {
    uint64_t v59 = v58;
    swift_retain();
    sub_1D43220EC(v59, (uint64_t)a3, (uint64_t)a4);
    goto LABEL_14;
  }
  type metadata accessor for FMIPRepairDeviceAction();
  uint64_t v60 = swift_dynamicCastClass();
  if (v60)
  {
    uint64_t v61 = v60;
    swift_retain();
    sub_1D4323164(v61, (uint64_t)a3, (uint64_t)a4);
    goto LABEL_14;
  }
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v62 = sub_1D4469928();
  sub_1D42D7FAC(v62, (uint64_t)qword_1EA6E4710);
  uint64_t v63 = sub_1D44698F8();
  os_log_type_t v64 = sub_1D446A038();
  if (os_log_type_enabled(v63, v64))
  {
    uint64_t v65 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v65 = 0;
    _os_log_impl(&dword_1D4271000, v63, v64, "FMIPDeviceActionsController: cannot map action to request", v65, 2u);
    MEMORY[0x1D9447730](v65, -1, -1);
  }

  LOBYTE(v68) = 0;
  sub_1D4325284();
  uint64_t v66 = (void *)swift_allocError();
  *uint64_t v67 = 0;
  a3((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v68, 0, v66, a5);
}

void sub_1D430ECF4(uint64_t a1, void (*a2)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t, void *, uint64_t), uint64_t a3)
{
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EA6E4710);
  swift_retain_n();
  unint64_t v7 = sub_1D44698F8();
  os_log_type_t v8 = sub_1D446A038();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v34 = a2;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v35 = v33;
    *(_DWORD *)uint64_t v9 = 136446979;
    swift_retain();
    unint64_t v10 = sub_1D433514C();
    unint64_t v12 = v11;
    swift_release();
    sub_1D42CB9EC(v10, v12, &v35);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2160;
    sub_1D446A188();
    *(_WORD *)(v9 + 22) = 2081;
    uint64_t v13 = a3;
    uint64_t v14 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
    unint64_t v15 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 8);
    swift_bridgeObjectRetain();
    sub_1D42CB9EC(v14, v15, &v35);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 32) = 2082;
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = MEMORY[0x1D94460F0](v16, &type metadata for FMIPPlaySoundChannels);
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t v20 = v17;
    a3 = v13;
    sub_1D42CB9EC(v20, v19, &v35);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1D4271000, v7, v8, "FMIPDeviceActionsController: perform %{public}s for %{private,mask.hash}s. Channels: %{public}s", (uint8_t *)v9, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v33, -1, -1);
    uint64_t v21 = v9;
    a2 = v34;
    MEMORY[0x1D9447730](v21, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  unsigned int v22 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_soundMethod);
  if (v22 >= 2)
  {
    if (v22 == 2)
    {
      uint64_t v26 = sub_1D44698F8();
      os_log_type_t v27 = sub_1D446A038();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl(&dword_1D4271000, v26, v27, "FMIPDeviceActionsController: ble sound method", v28, 2u);
        MEMORY[0x1D9447730](v28, -1, -1);
      }

      sub_1D430F194(a1, a2, a3);
    }
    else
    {
      uint64_t v29 = sub_1D44698F8();
      os_log_type_t v30 = sub_1D446A038();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl(&dword_1D4271000, v29, v30, "FMIPDeviceActionsController: siri sound method", v32, 2u);
        MEMORY[0x1D9447730](v32, -1, -1);
      }

      sub_1D431C6F0(a1, a2, a3);
    }
  }
  else
  {
    uint64_t v23 = sub_1D44698F8();
    os_log_type_t v24 = sub_1D446A038();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_1D4271000, v23, v24, "FMIPDeviceActionsController: classic sound method", v25, 2u);
      MEMORY[0x1D9447730](v25, -1, -1);
    }

    sub_1D4318DAC(a1, (uint64_t)a2, a3);
  }
}

void sub_1D430F194(uint64_t a1, void (*a2)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t, void *, uint64_t), uint64_t a3)
{
  v796 = a2;
  uint64_t v797 = a3;
  v791 = 0;
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EA6C9468);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v769 = (uint64_t)v724 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v775 = (uint64_t)v724 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v771 = (uint64_t)v724 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v776 = (uint64_t)v724 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v770 = (uint64_t)v724 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v780[0] = (uint64_t)v724 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  os_log_t v779 = (os_log_t)((char *)v724 - v18);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  v778 = (char *)v724 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  os_log_t v777 = (os_log_t)((char *)v724 - v22);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v793 = (uint64_t)v724 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v786 = (uint64_t)v724 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v787 = (uint64_t)v724 - v27;
  uint64_t v28 = sub_1D4469928();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v799 = v28;
  uint64_t v800 = v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  v785 = (char *)v724 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  v783 = (char *)v724 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  v741 = (char *)v724 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  v738 = (char *)v724 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  v733 = (char *)v724 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  v732 = (char *)v724 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  v740 = (char *)v724 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  v739 = (char *)v724 - v45;
  uint64_t v46 = MEMORY[0x1F4188790](v44);
  v751 = (char *)v724 - v47;
  uint64_t v48 = MEMORY[0x1F4188790](v46);
  v747 = (char *)v724 - v49;
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  v752 = (char *)v724 - v51;
  uint64_t v52 = MEMORY[0x1F4188790](v50);
  v749 = (char *)v724 - v53;
  uint64_t v54 = MEMORY[0x1F4188790](v52);
  v746 = (char *)v724 - v55;
  uint64_t v56 = MEMORY[0x1F4188790](v54);
  v765 = (char *)v724 - v57;
  uint64_t v58 = MEMORY[0x1F4188790](v56);
  v757 = (char *)v724 - v59;
  uint64_t v60 = MEMORY[0x1F4188790](v58);
  v764 = (char *)v724 - v61;
  uint64_t v62 = MEMORY[0x1F4188790](v60);
  v755 = (char *)v724 - v63;
  uint64_t v64 = MEMORY[0x1F4188790](v62);
  v768 = (char *)v724 - v65;
  uint64_t v66 = MEMORY[0x1F4188790](v64);
  v763 = (char *)v724 - v67;
  uint64_t v68 = MEMORY[0x1F4188790](v66);
  v767 = (char *)v724 - v69;
  uint64_t v70 = MEMORY[0x1F4188790](v68);
  v760 = (char *)v724 - v71;
  uint64_t v72 = MEMORY[0x1F4188790](v70);
  v772 = (char *)v724 - v73;
  MEMORY[0x1F4188790](v72);
  v782 = (char *)v724 - v74;
  uint64_t v75 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  uint64_t v76 = MEMORY[0x1F4188790](v75 - 8);
  uint64_t v729 = (uint64_t)v724 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = MEMORY[0x1F4188790](v76);
  uint64_t v728 = (uint64_t)v724 - v79;
  uint64_t v80 = MEMORY[0x1F4188790](v78);
  uint64_t v735 = (uint64_t)v724 - v81;
  uint64_t v82 = MEMORY[0x1F4188790](v80);
  uint64_t v734 = (uint64_t)v724 - v83;
  uint64_t v84 = MEMORY[0x1F4188790](v82);
  uint64_t v743 = (uint64_t)v724 - v85;
  uint64_t v86 = MEMORY[0x1F4188790](v84);
  uint64_t v750 = (uint64_t)v724 - v87;
  uint64_t v88 = MEMORY[0x1F4188790](v86);
  uint64_t v742 = (uint64_t)v724 - v89;
  uint64_t v90 = MEMORY[0x1F4188790](v88);
  uint64_t v761 = (uint64_t)v724 - v91;
  uint64_t v92 = MEMORY[0x1F4188790](v90);
  uint64_t v753 = (uint64_t)v724 - v93;
  uint64_t v94 = MEMORY[0x1F4188790](v92);
  uint64_t v766 = (uint64_t)v724 - v95;
  uint64_t v96 = MEMORY[0x1F4188790](v94);
  uint64_t v758 = (uint64_t)v724 - v97;
  uint64_t v98 = MEMORY[0x1F4188790](v96);
  uint64_t v790 = (uint64_t)v724 - v99;
  uint64_t v100 = MEMORY[0x1F4188790](v98);
  uint64_t v788 = (uint64_t)v724 - v101;
  uint64_t v102 = MEMORY[0x1F4188790](v100);
  uint64_t v789 = (uint64_t)v724 - v103;
  MEMORY[0x1F4188790](v102);
  uint64_t v105 = (char *)v724 - v104;
  uint64_t v106 = sub_1D4469688();
  uint64_t v107 = *(void *)(v106 - 8);
  uint64_t v108 = MEMORY[0x1F4188790](v106);
  v731 = (char *)v724 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = MEMORY[0x1F4188790](v108);
  v730 = (char *)v724 - v111;
  uint64_t v112 = MEMORY[0x1F4188790](v110);
  v737 = (char *)v724 - v113;
  uint64_t v114 = MEMORY[0x1F4188790](v112);
  v736 = (char *)v724 - v115;
  uint64_t v116 = MEMORY[0x1F4188790](v114);
  v745 = (char *)v724 - v117;
  uint64_t v118 = MEMORY[0x1F4188790](v116);
  v748 = (char *)v724 - v119;
  uint64_t v120 = MEMORY[0x1F4188790](v118);
  unint64_t v744 = (unint64_t)v724 - v121;
  uint64_t v122 = MEMORY[0x1F4188790](v120);
  v756 = (char *)v724 - v123;
  uint64_t v124 = MEMORY[0x1F4188790](v122);
  unint64_t v754 = (unint64_t)v724 - v125;
  uint64_t v126 = MEMORY[0x1F4188790](v124);
  v762 = (char *)v724 - v127;
  uint64_t v128 = MEMORY[0x1F4188790](v126);
  unint64_t v759 = (unint64_t)v724 - v129;
  uint64_t v130 = MEMORY[0x1F4188790](v128);
  v781 = (char *)v724 - v131;
  v780[1] = v132;
  MEMORY[0x1F4188790](v130);
  uint64_t v792 = (uint64_t)v724 - v133;
  uint64_t v134 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v134 - 8);
  uint64_t v136 = (char *)v724 - ((v135 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = type metadata accessor for FMIPItemGroup();
  uint64_t v138 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137);
  uint64_t v140 = (char *)v724 - ((v139 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
  uint64_t v794 = type metadata accessor for FMIPDevice();
  uint64_t v142 = *(int *)(v794 + 128);
  uint64_t v795 = v141;
  sub_1D42A3A74(v141 + v142, (uint64_t)v136, &qword_1EBD7E670);
  int v143 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v138 + 48))(v136, 1, v137);
  uint64_t v798 = a1;
  if (v143 == 1)
  {
    uint64_t v144 = a1;
    sub_1D4276C3C((uint64_t)v136, &qword_1EBD7E670);
    uint64_t v145 = sub_1D430D640(&qword_1EA6C8F68, (uint64_t)qword_1EA6E4710);
    uint64_t v147 = v799;
    uint64_t v146 = v800;
    uint64_t v148 = v785;
    (*(void (**)(char *, uint64_t, uint64_t))(v800 + 16))(v785, v145, v799);
    uint64_t v149 = swift_allocObject();
    *(void *)(v149 + 16) = sub_1D4327630;
    *(void *)(v149 + 24) = v144;
    uint64_t v150 = v144;
    swift_retain();
    unint64_t v151 = sub_1D44698F8();
    LODWORD(v144) = sub_1D446A018();
    uint64_t v152 = swift_allocObject();
    *(unsigned char *)(v152 + 16) = 34;
    uint64_t v153 = swift_allocObject();
    *(unsigned char *)(v153 + 16) = 8;
    uint64_t v154 = swift_allocObject();
    *(void *)(v154 + 16) = sub_1D4326694;
    *(void *)(v154 + 24) = v149;
    uint64_t v155 = swift_allocObject();
    *(void *)(v155 + 16) = sub_1D43266C4;
    *(void *)(v155 + 24) = v154;
    sub_1D42D5DA0(&qword_1EBD7E840);
    uint64_t inited = swift_initStackObject();
    sub_1D438C22C(inited, 3);
    void *v157 = sub_1D43266AC;
    v157[1] = v152;
    v157[2] = sub_1D432764C;
    v157[3] = v153;
    v157[4] = sub_1D43266CC;
    v157[5] = v155;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    LODWORD(v793) = v144;
    if (!os_log_type_enabled(v151, (os_log_type_t)v144))
    {
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v146 + 8))(v148, v147);
      LOBYTE(v801) = 0;
      sub_1D42D5DA0(&qword_1EBD7D9F0);
      uint64_t v178 = swift_allocObject();
      uint64_t v179 = sub_1D4385918(v178, 1);
      sub_1D42D2238(v795, v180, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v181 = nullsub_1(v179);
      sub_1D4325284();
      uint64_t v182 = (void *)swift_allocError();
      unsigned char *v183 = 7;
      v796(&v801, v181, v182, v150);

      swift_bridgeObjectRelease();
      return;
    }
    int v158 = (uint8_t *)sub_1D4304EA8();
    uint64_t v159 = swift_slowAlloc();
    uint64_t v803 = v159;
    uint64_t v804 = 0;
    *(_WORD *)int v158 = 258;
    v805 = v158 + 2;
    v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D43266AC;
    uint64_t v802 = v152;
    os_log_t v160 = v791;
    sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
    if (!v160)
    {
      swift_release();
      v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
      uint64_t v802 = v153;
      sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
      swift_release();
      v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D43266CC;
      uint64_t v802 = v155;
      sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
      swift_release();
      _os_log_impl(&dword_1D4271000, v151, (os_log_type_t)v793, "Unable to perform %{public}s offline for device with no item group.", v158, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v159, -1, -1);
      sub_1D4304EB0();
    }
    goto LABEL_270;
  }
  sub_1D42D6AE4((uint64_t)v136, (uint64_t)v140, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  swift_bridgeObjectRetain();
  sub_1D4469628();
  swift_bridgeObjectRelease();
  unint64_t v161 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v107 + 48);
  int v162 = v161(v105, 1, v106);
  v784 = v140;
  if (v162 == 1)
  {
    sub_1D4276C3C((uint64_t)v105, (uint64_t *)&unk_1EBD7E930);
    uint64_t v163 = sub_1D430D640(&qword_1EA6C8F68, (uint64_t)qword_1EA6E4710);
    uint64_t v164 = v799;
    uint64_t v165 = v800;
    uint64_t v166 = v783;
    (*(void (**)(char *, uint64_t, uint64_t))(v800 + 16))(v783, v163, v799);
    uint64_t v167 = swift_allocObject();
    *(void *)(v167 + 16) = sub_1D43266D4;
    *(void *)(v167 + 24) = v798;
    swift_retain();
    id v168 = sub_1D44698F8();
    os_log_type_t v169 = sub_1D446A018();
    uint64_t v170 = swift_allocObject();
    *(unsigned char *)(v170 + 16) = 34;
    uint64_t v171 = swift_allocObject();
    *(unsigned char *)(v171 + 16) = 8;
    uint64_t v172 = swift_allocObject();
    *(void *)(v172 + 16) = sub_1D4327634;
    *(void *)(v172 + 24) = v167;
    uint64_t v173 = swift_allocObject();
    *(void *)(v173 + 16) = sub_1D4327638;
    *(void *)(v173 + 24) = v172;
    sub_1D42D5DA0(&qword_1EBD7E840);
    uint64_t v174 = swift_allocObject();
    sub_1D438C22C(v174, 3);
    *int v175 = sub_1D432764C;
    v175[1] = v170;
    v175[2] = sub_1D432764C;
    v175[3] = v171;
    v175[4] = sub_1D4327640;
    v175[5] = v173;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v168, v169))
    {
      int v176 = (uint8_t *)sub_1D4304EA8();
      uint64_t v177 = swift_slowAlloc();
      uint64_t v803 = v177;
      uint64_t v804 = 0;
      *(_WORD *)int v176 = 258;
      v805 = v176 + 2;
      v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
      uint64_t v802 = v170;
      os_log_t v160 = v791;
      sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
      if (!v160)
      {
        swift_release();
        v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
        uint64_t v802 = v171;
        sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
        swift_release();
        v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
        uint64_t v802 = v173;
        sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
        swift_release();
        _os_log_impl(&dword_1D4271000, v168, v169, "FMIPDeviceActionsController: cannot perform %{public}s for item with an invalid group identifier.", v176, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v177, -1, -1);
        sub_1D4304EB0();
      }
      goto LABEL_270;
    }
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v165 + 8))(v166, v164);
    LOBYTE(v801) = 0;
    sub_1D42D5DA0(&qword_1EBD7D9F0);
    uint64_t v201 = swift_allocObject();
    uint64_t v202 = sub_1D4385918(v201, 1);
    sub_1D42D2238(v795, v203, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v204 = nullsub_1(v202);
    sub_1D4325284();
    unint64_t v205 = (void *)swift_allocError();
    *uint64_t v206 = 6;
    v796(&v801, v204, v205, v798);

    swift_bridgeObjectRelease();
    goto LABEL_150;
  }
  v724[0] = v161;
  v724[1] = v107 + 48;
  uint64_t v795 = v107;
  uint64_t v184 = *(void (**)(unint64_t, char *, uint64_t))(v107 + 32);
  uint64_t v774 = v106;
  v783 = (char *)(v107 + 32);
  v727 = v184;
  v184(v792, v105, v106);
  uint64_t v185 = sub_1D430D640(&qword_1EA6C8F68, (uint64_t)qword_1EA6E4710);
  uint64_t v186 = v799;
  uint64_t v187 = v800;
  uint64_t v188 = *(void (**)(char *, uint64_t, uint64_t))(v800 + 16);
  uint64_t v189 = v782;
  uint64_t v726 = v800 + 16;
  v725 = v188;
  v188(v782, v185, v799);
  uint64_t v190 = swift_allocObject();
  *(void *)(v190 + 16) = sub_1D4327630;
  *(void *)(v190 + 24) = v798;
  swift_retain();
  uint64_t v191 = sub_1D44698F8();
  os_log_type_t v192 = sub_1D446A038();
  uint64_t v193 = swift_allocObject();
  *(unsigned char *)(v193 + 16) = 34;
  uint64_t v194 = swift_allocObject();
  *(unsigned char *)(v194 + 16) = 8;
  uint64_t v195 = swift_allocObject();
  *(void *)(v195 + 16) = sub_1D4327634;
  *(void *)(v195 + 24) = v190;
  uint64_t v196 = swift_allocObject();
  *(void *)(v196 + 16) = sub_1D4327638;
  *(void *)(v196 + 24) = v195;
  v785 = (char *)sub_1D42D5DA0(&qword_1EBD7E840);
  uint64_t v197 = swift_allocObject();
  sub_1D438C22C(v197, 3);
  *uint64_t v198 = sub_1D432764C;
  v198[1] = v193;
  v198[2] = sub_1D432764C;
  v198[3] = v194;
  v198[4] = sub_1D4327640;
  v198[5] = v196;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v191, v192))
  {
    uint64_t v199 = (uint8_t *)sub_1D4304EA8();
    uint64_t v200 = swift_slowAlloc();
    uint64_t v803 = v200;
    uint64_t v804 = 0;
    *(_WORD *)uint64_t v199 = 258;
    v805 = v199 + 2;
    v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
    uint64_t v802 = v193;
    os_log_t v160 = v791;
    sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
    if (!v160)
    {
      swift_release();
      v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
      uint64_t v802 = v194;
      sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
      swift_release();
      v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
      uint64_t v802 = v196;
      sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
      swift_release();
      _os_log_impl(&dword_1D4271000, v191, v192, "FMIPDeviceActionsController: performing offline %{public}s.", v199, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v200, -1, -1);
      sub_1D4304EB0();
    }
    goto LABEL_270;
  }
  swift_release();
  swift_release();
  swift_release();

  uint64_t v794 = *(void *)(v187 + 8);
  ((void (*)(char *, uint64_t))v794)(v189, v186);
  uint64_t v207 = v787;
  uint64_t v208 = v786;
  uint64_t v209 = v793;
  os_log_t v160 = v791;
  uint64_t v210 = swift_bridgeObjectRetain();
  sub_1D430CB14(v210, v207);
  swift_bridgeObjectRelease();
  uint64_t v211 = swift_bridgeObjectRetain();
  sub_1D430CE70(v211, v208);
  swift_bridgeObjectRelease();
  uint64_t v212 = swift_bridgeObjectRetain();
  sub_1D430D1E4(v212, v209);
  swift_bridgeObjectRelease();
  os_log_t v213 = v777;
  sub_1D42A3A74(v207, (uint64_t)v777, (uint64_t *)&unk_1EA6C9468);
  uint64_t v214 = type metadata accessor for FMIPItem();
  uint64_t v215 = *(uint64_t (**)(os_log_t, uint64_t, uint64_t))(*(void *)(v214 - 8) + 48);
  int v216 = v215(v213, 1, v214);
  uint64_t v217 = (uint64_t)v778;
  if (v216 == 1)
  {
    sub_1D4276C3C((uint64_t)v213, (uint64_t *)&unk_1EA6C9468);
    uint64_t v218 = 1;
  }
  else
  {
    uint64_t v219 = (uint64_t)v213;
    uint64_t v218 = *(uint64_t *)((char *)&v213->isa + *(int *)(v214 + 76));
    sub_1D42D2058(v219, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  }
  LODWORD(v782) = sub_1D4415D6C(2, v218) || sub_1D4415D6C(4, v218) || sub_1D4415D6C(2048, v218);
  sub_1D42A3A74(v208, v217, (uint64_t *)&unk_1EA6C9468);
  if (v215((os_log_t)v217, 1, v214) == 1)
  {
    sub_1D4276C3C(v217, (uint64_t *)&unk_1EA6C9468);
    uint64_t v220 = 1;
  }
  else
  {
    uint64_t v220 = *(void *)(v217 + *(int *)(v214 + 76));
    sub_1D42D2058(v217, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  }
  LODWORD(v778) = sub_1D4415D6C(2, v220) || sub_1D4415D6C(4, v220) || sub_1D4415D6C(2048, v220);
  os_log_t v221 = v779;
  sub_1D42A3A74(v209, (uint64_t)v779, (uint64_t *)&unk_1EA6C9468);
  if (v215(v221, 1, v214) == 1)
  {
    sub_1D4276C3C((uint64_t)v221, (uint64_t *)&unk_1EA6C9468);
    uint64_t v222 = 1;
  }
  else
  {
    uint64_t v222 = *(uint64_t *)((char *)&v221->isa + *(int *)(v214 + 76));
    sub_1D42D2058((uint64_t)v221, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  }
  LODWORD(v791) = sub_1D4415D6C(2, v222) || sub_1D4415D6C(4, v222) || sub_1D4415D6C(2048, v222);
  uint64_t v223 = v780[0];
  sub_1D42A3A74(v207, v780[0], (uint64_t *)&unk_1EA6C9468);
  int v224 = v215((os_log_t)v223, 1, v214);
  sub_1D4276C3C(v223, (uint64_t *)&unk_1EA6C9468);
  if (v224 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v795 + 56))(v789, 1, 1, v774);
  }
  else
  {
    uint64_t v225 = v770;
    sub_1D42A3A74(v207, v770, (uint64_t *)&unk_1EA6C9468);
    if (v215((os_log_t)v225, 1, v214) == 1)
    {
      __break(1u);
      goto LABEL_268;
    }
    swift_bridgeObjectRetain();
    sub_1D42D2058(v225, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D4469628();
    swift_bridgeObjectRelease();
  }
  uint64_t v226 = v776;
  sub_1D42A3A74(v208, v776, (uint64_t *)&unk_1EA6C9468);
  int v227 = v215((os_log_t)v226, 1, v214);
  sub_1D4276C3C(v226, (uint64_t *)&unk_1EA6C9468);
  if (v227 == 1)
  {
    uint64_t v228 = (uint64_t)v784;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v795 + 56))(v788, 1, 1, v774);
    goto LABEL_49;
  }
  uint64_t v229 = v771;
  sub_1D42A3A74(v208, v771, (uint64_t *)&unk_1EA6C9468);
  if (v215((os_log_t)v229, 1, v214) == 1)
  {
LABEL_268:
    __break(1u);
    goto LABEL_269;
  }
  uint64_t v228 = (uint64_t)v784;
  swift_bridgeObjectRetain();
  sub_1D42D2058(v229, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D4469628();
  swift_bridgeObjectRelease();
LABEL_49:
  uint64_t v230 = v798;
  uint64_t v231 = v793;
  uint64_t v232 = v775;
  sub_1D42A3A74(v793, v775, (uint64_t *)&unk_1EA6C9468);
  int v233 = v215((os_log_t)v232, 1, v214);
  sub_1D4276C3C(v232, (uint64_t *)&unk_1EA6C9468);
  if (v233 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v795 + 56))(v790, 1, 1, v774);
    uint64_t v234 = v228;
    goto LABEL_53;
  }
  uint64_t v235 = v769;
  sub_1D42A3A74(v231, v769, (uint64_t *)&unk_1EA6C9468);
  if (v215((os_log_t)v235, 1, v214) == 1)
  {
LABEL_269:
    __break(1u);
LABEL_270:

    __break(1u);
    return;
  }
  uint64_t v234 = v228;
  swift_bridgeObjectRetain();
  sub_1D42D2058(v235, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D4469628();
  swift_bridgeObjectRelease();
LABEL_53:
  uint64_t v236 = *(void *)(v230 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_channels);
  swift_bridgeObjectRetain();
  char v237 = sub_1D443BCCC(4, v236);
  swift_bridgeObjectRelease();
  uint64_t v238 = swift_bridgeObjectRetain();
  uint64_t v239 = sub_1D4325B9C(v238);
  swift_bridgeObjectRelease();
  uint64_t v240 = sub_1D4351B94(v239);
  swift_bridgeObjectRelease();
  sub_1D42D5DA0(&qword_1EA6C9AB8);
  uint64_t v241 = swift_allocObject();
  uint64_t v242 = sub_1D4385980(v241, 3);
  *(_WORD *)uint64_t v243 = 258;
  *(unsigned char *)(v243 + 2) = 0;
  uint64_t v244 = nullsub_1(v242);
  uint64_t v245 = sub_1D4351B94(v244);
  swift_bridgeObjectRelease();
  char v246 = sub_1D43EF794(v245, v240);
  swift_bridgeObjectRelease();
  if (v246)
  {
    swift_bridgeObjectRelease();
    uint64_t v247 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
    unint64_t v248 = v772;
    uint64_t v249 = v799;
    v725(v772, v247, v799);
    uint64_t v250 = v795;
    uint64_t v251 = v795 + 16;
    uint64_t v252 = v781;
    uint64_t v253 = v774;
    (*(void (**)(char *, uint64_t, uint64_t))(v795 + 16))(v781, v792, v774);
    unint64_t v254 = (*(unsigned __int8 *)(v251 + 64) + 16) & ~(unint64_t)*(unsigned __int8 *)(v251 + 64);
    uint64_t v255 = swift_allocObject();
    v727(v255 + v254, v252, v253);
    uint64_t v256 = swift_allocObject();
    *(void *)(v256 + 16) = sub_1D4326724;
    *(void *)(v256 + 24) = v255;
    uint64_t v257 = sub_1D44698F8();
    os_log_type_t v258 = sub_1D446A038();
    uint64_t v259 = swift_allocObject();
    *(unsigned char *)(v259 + 16) = 34;
    uint64_t v260 = swift_allocObject();
    *(unsigned char *)(v260 + 16) = 8;
    uint64_t v261 = swift_allocObject();
    *(void *)(v261 + 16) = sub_1D432763C;
    *(void *)(v261 + 24) = v256;
    uint64_t v262 = swift_allocObject();
    *(void *)(v262 + 16) = sub_1D4327638;
    *(void *)(v262 + 24) = v261;
    uint64_t v263 = swift_allocObject();
    sub_1D438C22C(v263, 3);
    void *v264 = sub_1D432764C;
    v264[1] = v259;
    v264[2] = sub_1D432764C;
    v264[3] = v260;
    v264[4] = sub_1D4327640;
    v264[5] = v262;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v257, v258))
    {
      uint64_t v265 = (uint8_t *)sub_1D4304EA8();
      uint64_t v266 = swift_slowAlloc();
      uint64_t v803 = v266;
      uint64_t v804 = 0;
      *(_WORD *)uint64_t v265 = 258;
      v805 = v265 + 2;
      v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
      uint64_t v802 = v259;
      sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
      if (!v160)
      {
        swift_release();
        v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
        uint64_t v802 = v260;
        sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
        swift_release();
        v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
        uint64_t v802 = v262;
        sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
        swift_release();
        _os_log_impl(&dword_1D4271000, v257, v258, "Playing groupID offline for %{public}s.", v265, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v266, -1, -1);
        sub_1D4304EB0();
      }
      goto LABEL_270;
    }
    swift_release();
    swift_release();
    swift_release();

    ((void (*)(char *, uint64_t))v794)(v248, v249);
    uint64_t v294 = v774;
    uint64_t v295 = v786;
    uint64_t v296 = v792;
    uint64_t v297 = v793;
    uint64_t v298 = v792;
    int v299 = 1;
    goto LABEL_69;
  }
  uint64_t v267 = swift_allocObject();
  uint64_t v268 = sub_1D4385980(v267, 2);
  _WORD *v269 = 258;
  uint64_t v270 = nullsub_1(v268);
  uint64_t v271 = sub_1D4351B94(v270);
  swift_bridgeObjectRelease();
  char v272 = sub_1D43EF794(v271, v240);
  swift_bridgeObjectRelease();
  if (v272)
  {
    swift_bridgeObjectRelease();
    uint64_t v273 = v795;
    uint64_t v274 = v774;
    uint64_t v275 = v799;
    uint64_t v276 = v767;
    if ((v791 & 1) == 0)
    {
      uint64_t v277 = v758;
      sub_1D42A3A74(v790, v758, (uint64_t *)&unk_1EBD7E930);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v724[0])(v277, 1, v274) != 1)
      {
        v780[0] = (uint64_t)v160;
        uint64_t v342 = v759;
        uint64_t v343 = v727;
        v727(v759, (char *)v277, v274);
        uint64_t v344 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
        v725(v760, v344, v275);
        v345 = v781;
        v791 = *(NSObject **)(v273 + 16);
        ((void (*)(char *, uint64_t, uint64_t))v791)(v781, v342, v274);
        unint64_t v346 = (*(unsigned __int8 *)(v273 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v273 + 80);
        v778 = (char *)*(unsigned __int8 *)(v273 + 80);
        uint64_t v347 = swift_allocObject();
        v343(v347 + v346, v345, v274);
        uint64_t v348 = swift_allocObject();
        *(void *)(v348 + 16) = sub_1D4326724;
        *(void *)(v348 + 24) = v347;
        uint64_t v349 = sub_1D44698F8();
        LODWORD(v779) = sub_1D446A038();
        uint64_t v350 = swift_allocObject();
        *(unsigned char *)(v350 + 16) = 112;
        uint64_t v351 = swift_allocObject();
        *(unsigned char *)(v351 + 16) = 8;
        uint64_t v352 = swift_allocObject();
        *(void *)(v352 + 16) = 1752392040;
        uint64_t v353 = swift_allocObject();
        *(void *)(v353 + 16) = sub_1D4327790;
        *(void *)(v353 + 24) = v352;
        uint64_t v354 = swift_allocObject();
        *(unsigned char *)(v354 + 16) = 33;
        uint64_t v355 = swift_allocObject();
        *(unsigned char *)(v355 + 16) = 8;
        uint64_t v356 = swift_allocObject();
        *(void *)(v356 + 16) = sub_1D432763C;
        *(void *)(v356 + 24) = v348;
        uint64_t v357 = swift_allocObject();
        *(void *)(v357 + 16) = sub_1D4327638;
        *(void *)(v357 + 24) = v356;
        uint64_t v358 = swift_allocObject();
        sub_1D438C22C(v358, 6);
        *uint64_t v359 = sub_1D432764C;
        v359[1] = v350;
        v359[2] = sub_1D432764C;
        v359[3] = v351;
        v359[4] = sub_1D4327644;
        v359[5] = v353;
        v359[6] = sub_1D432764C;
        v359[7] = v354;
        v359[8] = sub_1D432764C;
        v359[9] = v355;
        v359[10] = sub_1D4327640;
        v359[11] = v357;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v349, (os_log_type_t)v779))
        {
          os_log_t v777 = v349;
          uint64_t v360 = (uint8_t *)sub_1D4304EA8();
          uint64_t v361 = swift_slowAlloc();
          uint64_t v803 = v361;
          uint64_t v804 = 0;
          *(_WORD *)uint64_t v360 = 515;
          v805 = v360 + 2;
          v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
          uint64_t v802 = v350;
          os_log_t v160 = (os_log_t)v780[0];
          sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
          if (!v160)
          {
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v351;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327644;
            uint64_t v802 = v353;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v354;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v355;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
            uint64_t v802 = v357;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            _os_log_impl(&dword_1D4271000, v777, (os_log_type_t)v779, "Playing case offline for %{private,mask.hash}s.", v360, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1D9447730](v361, -1, -1);
            sub_1D4304EB0();
          }
          goto LABEL_270;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        uint64_t v275 = v799;
        ((void (*)(char *, uint64_t))v794)(v760, v799);
        uint64_t v339 = v795;
        os_log_t v160 = (os_log_t)v780[0];
        v341 = v768;
        uint64_t v431 = v759;
        sub_1D4318370(v759, 1, v798, v773, (uint64_t)v796, v797);
        uint64_t v340 = v774;
        (*(void (**)(uint64_t, uint64_t))(v339 + 8))(v431, v774);
        LODWORD(v280) = v778;
LABEL_118:
        uint64_t v432 = v766;
        v780[0] = (uint64_t)v160;
        if (v782) {
          goto LABEL_121;
        }
        sub_1D42A3A74(v789, v766, (uint64_t *)&unk_1EBD7E930);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v724[0])(v432, 1, v340) == 1)
        {
          sub_1D4276C3C(v432, (uint64_t *)&unk_1EBD7E930);
LABEL_121:
          uint64_t v433 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
          v725(v341, v433, v275);
          uint64_t v434 = v781;
          uint64_t v373 = v275;
          uint64_t v369 = v792;
          ((void (*)(char *, uint64_t, uint64_t))v791)(v781, v792, v340);
          uint64_t v435 = swift_allocObject();
          v727(v435 + ((v280 + 16) & ~(unint64_t)v280), v434, v340);
          uint64_t v436 = swift_allocObject();
          *(void *)(v436 + 16) = sub_1D4326724;
          *(void *)(v436 + 24) = v435;
          v378 = sub_1D44698F8();
          os_log_type_t v437 = sub_1D446A038();
          v380 = v341;
          uint64_t v438 = swift_allocObject();
          *(unsigned char *)(v438 + 16) = 34;
          uint64_t v439 = swift_allocObject();
          *(unsigned char *)(v439 + 16) = 8;
          uint64_t v440 = swift_allocObject();
          *(void *)(v440 + 16) = sub_1D432763C;
          *(void *)(v440 + 24) = v436;
          uint64_t v441 = swift_allocObject();
          *(void *)(v441 + 16) = sub_1D4327638;
          *(void *)(v441 + 24) = v440;
          uint64_t v442 = swift_allocObject();
          sub_1D438C22C(v442, 3);
          void *v443 = sub_1D432764C;
          v443[1] = v438;
          v443[2] = sub_1D432764C;
          v443[3] = v439;
          v443[4] = sub_1D4327640;
          v443[5] = v441;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v378, v437))
          {
            uint64_t v444 = (uint8_t *)sub_1D4304EA8();
            uint64_t v445 = swift_slowAlloc();
            uint64_t v803 = v445;
            uint64_t v804 = 0;
            *(_WORD *)uint64_t v444 = 258;
            v805 = v444 + 2;
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v438;
            os_log_t v160 = (os_log_t)v780[0];
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            if (!v160)
            {
              swift_release();
              v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
              uint64_t v802 = v439;
              sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
              swift_release();
              v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
              uint64_t v802 = v441;
              sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
              swift_release();
              _os_log_impl(&dword_1D4271000, v378, v437, "Error playing right sound %{public}s.", v444, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1D9447730](v445, -1, -1);
              sub_1D4304EB0();
            }
            goto LABEL_270;
          }
          goto LABEL_149;
        }
        uint64_t v446 = v762;
        uint64_t v447 = v727;
        v727((unint64_t)v762, (char *)v432, v340);
        uint64_t v448 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
        v725(v763, v448, v275);
        uint64_t v449 = v781;
        ((void (*)(char *, char *, uint64_t))v791)(v781, v446, v340);
        uint64_t v450 = swift_allocObject();
        v447(v450 + ((v280 + 16) & ~(unint64_t)v280), v449, v340);
        uint64_t v451 = swift_allocObject();
        *(void *)(v451 + 16) = sub_1D4326724;
        *(void *)(v451 + 24) = v450;
        v452 = sub_1D44698F8();
        LODWORD(v449) = sub_1D446A038();
        uint64_t v453 = swift_allocObject();
        *(unsigned char *)(v453 + 16) = 112;
        uint64_t v454 = swift_allocObject();
        *(unsigned char *)(v454 + 16) = 8;
        uint64_t v455 = swift_allocObject();
        *(void *)(v455 + 16) = 1752392040;
        uint64_t v456 = swift_allocObject();
        *(void *)(v456 + 16) = sub_1D4327790;
        *(void *)(v456 + 24) = v455;
        uint64_t v457 = swift_allocObject();
        *(unsigned char *)(v457 + 16) = 33;
        uint64_t v458 = swift_allocObject();
        *(unsigned char *)(v458 + 16) = 8;
        uint64_t v459 = swift_allocObject();
        *(void *)(v459 + 16) = sub_1D432763C;
        *(void *)(v459 + 24) = v451;
        uint64_t v460 = swift_allocObject();
        *(void *)(v460 + 16) = sub_1D4327638;
        *(void *)(v460 + 24) = v459;
        uint64_t v461 = swift_allocObject();
        sub_1D438C22C(v461, 6);
        void *v462 = sub_1D432764C;
        v462[1] = v453;
        v462[2] = sub_1D432764C;
        v462[3] = v454;
        v462[4] = sub_1D4327644;
        v462[5] = v456;
        v462[6] = sub_1D432764C;
        v462[7] = v457;
        v462[8] = sub_1D432764C;
        v462[9] = v458;
        v462[10] = sub_1D4327640;
        v462[11] = v460;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        LODWORD(v791) = v449;
        if (os_log_type_enabled(v452, (os_log_type_t)v449))
        {
          v463 = (uint8_t *)sub_1D4304EA8();
          uint64_t v464 = swift_slowAlloc();
          uint64_t v803 = v464;
          uint64_t v804 = 0;
          *(_WORD *)v463 = 515;
          v805 = v463 + 2;
          v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
          uint64_t v802 = v453;
          os_log_t v160 = (os_log_t)v780[0];
          sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
          if (!v160)
          {
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v454;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327644;
            uint64_t v802 = v456;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v457;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v458;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
            uint64_t v802 = v460;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            _os_log_impl(&dword_1D4271000, v452, (os_log_type_t)v791, "Playing right offline for %{private,mask.hash}s.", v463, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1D9447730](v464, -1, -1);
            sub_1D4304EB0();
          }
          goto LABEL_270;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        ((void (*)(char *, uint64_t))v794)(v763, v799);
        uint64_t v478 = v787;
        uint64_t v479 = v774;
        uint64_t v480 = v792;
        v481 = &v793;
        goto LABEL_168;
      }
      sub_1D4276C3C(v277, (uint64_t *)&unk_1EBD7E930);
    }
    uint64_t v278 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
    v725(v276, v278, v275);
    uint64_t v279 = v781;
    v791 = *(NSObject **)(v273 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v791)(v781, v792, v274);
    uint64_t v280 = *(unsigned __int8 *)(v273 + 80);
    uint64_t v281 = swift_allocObject();
    v727(v281 + ((v280 + 16) & ~v280), v279, v274);
    uint64_t v282 = swift_allocObject();
    *(void *)(v282 + 16) = sub_1D4326724;
    *(void *)(v282 + 24) = v281;
    uint64_t v283 = sub_1D44698F8();
    os_log_type_t v284 = sub_1D446A038();
    uint64_t v285 = swift_allocObject();
    *(unsigned char *)(v285 + 16) = 34;
    uint64_t v286 = swift_allocObject();
    *(unsigned char *)(v286 + 16) = 8;
    uint64_t v287 = v276;
    uint64_t v288 = swift_allocObject();
    *(void *)(v288 + 16) = sub_1D432763C;
    *(void *)(v288 + 24) = v282;
    uint64_t v289 = swift_allocObject();
    *(void *)(v289 + 16) = sub_1D4327638;
    *(void *)(v289 + 24) = v288;
    uint64_t v290 = swift_allocObject();
    sub_1D438C22C(v290, 3);
    *long long v291 = sub_1D432764C;
    v291[1] = v285;
    v291[2] = sub_1D432764C;
    v291[3] = v286;
    v291[4] = sub_1D4327640;
    v291[5] = v289;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v283, v284))
    {
      v292 = (uint8_t *)sub_1D4304EA8();
      uint64_t v293 = swift_slowAlloc();
      uint64_t v803 = v293;
      uint64_t v804 = 0;
      *(_WORD *)v292 = 258;
      v805 = v292 + 2;
      v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
      uint64_t v802 = v285;
      sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
      if (!v160)
      {
        swift_release();
        v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
        uint64_t v802 = v286;
        sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
        swift_release();
        v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
        uint64_t v802 = v289;
        sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
        swift_release();
        _os_log_impl(&dword_1D4271000, v283, v284, "Error playing case sound %{public}s.", v292, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v293, -1, -1);
        sub_1D4304EB0();
      }
      goto LABEL_270;
    }
    swift_release();
    swift_release();
    swift_release();

    ((void (*)(char *, uint64_t))v794)(v287, v275);
    uint64_t v339 = v795;
    uint64_t v340 = v774;
    v341 = v768;
    goto LABEL_118;
  }
  uint64_t v301 = swift_allocObject();
  uint64_t v302 = sub_1D4385980(v301, 2);
  *int v303 = 2;
  uint64_t v304 = nullsub_1(v302);
  uint64_t v305 = sub_1D4351B94(v304);
  swift_bridgeObjectRelease();
  char v306 = sub_1D43EF794(v305, v240);
  swift_bridgeObjectRelease();
  if (v306)
  {
    swift_bridgeObjectRelease();
    uint64_t v307 = v795;
    uint64_t v308 = v774;
    uint64_t v309 = v799;
    char v310 = v764;
    if ((v791 & 1) == 0)
    {
      uint64_t v311 = v753;
      sub_1D42A3A74(v790, v753, (uint64_t *)&unk_1EBD7E930);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v724[0])(v311, 1, v308) != 1)
      {
        v780[0] = (uint64_t)v160;
        uint64_t v391 = v754;
        v392 = v727;
        v727(v754, (char *)v311, v308);
        uint64_t v393 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
        v725(v755, v393, v309);
        uint64_t v394 = v781;
        v791 = *(NSObject **)(v307 + 16);
        ((void (*)(char *, uint64_t, uint64_t))v791)(v781, v391, v308);
        unint64_t v395 = (*(unsigned __int8 *)(v307 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v307 + 80);
        os_log_t v779 = (os_log_t)*(unsigned __int8 *)(v307 + 80);
        uint64_t v396 = swift_allocObject();
        v392(v396 + v395, v394, v308);
        uint64_t v397 = swift_allocObject();
        *(void *)(v397 + 16) = sub_1D4326724;
        *(void *)(v397 + 24) = v396;
        id v398 = sub_1D44698F8();
        LODWORD(v782) = sub_1D446A038();
        uint64_t v399 = swift_allocObject();
        *(unsigned char *)(v399 + 16) = 112;
        uint64_t v400 = swift_allocObject();
        *(unsigned char *)(v400 + 16) = 8;
        uint64_t v401 = swift_allocObject();
        *(void *)(v401 + 16) = 1752392040;
        uint64_t v402 = swift_allocObject();
        *(void *)(v402 + 16) = sub_1D4327790;
        *(void *)(v402 + 24) = v401;
        uint64_t v403 = swift_allocObject();
        *(unsigned char *)(v403 + 16) = 33;
        uint64_t v404 = swift_allocObject();
        *(unsigned char *)(v404 + 16) = 8;
        uint64_t v405 = swift_allocObject();
        *(void *)(v405 + 16) = sub_1D432763C;
        *(void *)(v405 + 24) = v397;
        uint64_t v406 = swift_allocObject();
        *(void *)(v406 + 16) = sub_1D4327638;
        *(void *)(v406 + 24) = v405;
        uint64_t v407 = swift_allocObject();
        sub_1D438C22C(v407, 6);
        *double v408 = sub_1D432764C;
        v408[1] = v399;
        v408[2] = sub_1D432764C;
        v408[3] = v400;
        v408[4] = sub_1D4327644;
        v408[5] = v402;
        v408[6] = sub_1D432764C;
        v408[7] = v403;
        v408[8] = sub_1D432764C;
        v408[9] = v404;
        v408[10] = sub_1D4327640;
        v408[11] = v406;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v398, (os_log_type_t)v782))
        {
          os_log_t v777 = v398;
          uint64_t v409 = (uint8_t *)sub_1D4304EA8();
          uint64_t v410 = swift_slowAlloc();
          uint64_t v803 = v410;
          uint64_t v804 = 0;
          *(_WORD *)uint64_t v409 = 515;
          v805 = v409 + 2;
          v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
          uint64_t v802 = v399;
          os_log_t v160 = (os_log_t)v780[0];
          sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
          if (!v160)
          {
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v400;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327644;
            uint64_t v802 = v402;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v403;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v404;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
            uint64_t v802 = v406;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            _os_log_impl(&dword_1D4271000, v777, (os_log_type_t)v782, "Playing case offline for %{private,mask.hash}s.", v409, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1D9447730](v410, -1, -1);
            sub_1D4304EB0();
          }
          goto LABEL_270;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        uint64_t v309 = v799;
        ((void (*)(char *, uint64_t))v794)(v755, v799);
        uint64_t v339 = v795;
        os_log_t v160 = (os_log_t)v780[0];
        id v390 = v765;
        uint64_t v482 = v754;
        sub_1D4318370(v754, 1, v798, v773, (uint64_t)v796, v797);
        uint64_t v389 = v774;
        (*(void (**)(uint64_t, uint64_t))(v339 + 8))(v482, v774);
        LODWORD(v314) = v779;
LABEL_141:
        uint64_t v483 = v761;
        v780[0] = (uint64_t)v160;
        if (v778) {
          goto LABEL_144;
        }
        sub_1D42A3A74(v788, v761, (uint64_t *)&unk_1EBD7E930);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v724[0])(v483, 1, v389) == 1)
        {
          sub_1D4276C3C(v483, (uint64_t *)&unk_1EBD7E930);
LABEL_144:
          uint64_t v484 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
          v725(v390, v484, v309);
          uint64_t v485 = v781;
          uint64_t v373 = v309;
          uint64_t v369 = v792;
          ((void (*)(char *, uint64_t, uint64_t))v791)(v781, v792, v389);
          uint64_t v486 = swift_allocObject();
          v727(v486 + ((v314 + 16) & ~(unint64_t)v314), v485, v389);
          uint64_t v487 = swift_allocObject();
          *(void *)(v487 + 16) = sub_1D4326724;
          *(void *)(v487 + 24) = v486;
          v378 = sub_1D44698F8();
          os_log_type_t v488 = sub_1D446A038();
          v380 = v390;
          uint64_t v489 = swift_allocObject();
          *(unsigned char *)(v489 + 16) = 34;
          uint64_t v490 = swift_allocObject();
          *(unsigned char *)(v490 + 16) = 8;
          uint64_t v491 = swift_allocObject();
          *(void *)(v491 + 16) = sub_1D432763C;
          *(void *)(v491 + 24) = v487;
          uint64_t v492 = swift_allocObject();
          *(void *)(v492 + 16) = sub_1D4327638;
          *(void *)(v492 + 24) = v491;
          uint64_t v493 = swift_allocObject();
          sub_1D438C22C(v493, 3);
          void *v494 = sub_1D432764C;
          v494[1] = v489;
          v494[2] = sub_1D432764C;
          v494[3] = v490;
          v494[4] = sub_1D4327640;
          v494[5] = v492;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v378, v488))
          {
            v495 = (uint8_t *)sub_1D4304EA8();
            uint64_t v496 = swift_slowAlloc();
            uint64_t v803 = v496;
            uint64_t v804 = 0;
            *(_WORD *)v495 = 258;
            v805 = v495 + 2;
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v489;
            os_log_t v160 = (os_log_t)v780[0];
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            if (!v160)
            {
              swift_release();
              v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
              uint64_t v802 = v490;
              sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
              swift_release();
              v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
              uint64_t v802 = v492;
              sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
              swift_release();
              _os_log_impl(&dword_1D4271000, v378, v488, "Error playing left sound %{public}s.", v495, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1D9447730](v496, -1, -1);
              sub_1D4304EB0();
            }
            goto LABEL_270;
          }
          goto LABEL_149;
        }
        uint64_t v498 = v756;
        uint64_t v499 = v727;
        v727((unint64_t)v756, (char *)v483, v389);
        uint64_t v500 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
        v725(v757, v500, v309);
        v501 = v781;
        ((void (*)(char *, char *, uint64_t))v791)(v781, v498, v389);
        uint64_t v502 = swift_allocObject();
        v499(v502 + ((v314 + 16) & ~(unint64_t)v314), v501, v389);
        uint64_t v503 = swift_allocObject();
        *(void *)(v503 + 16) = sub_1D4326724;
        *(void *)(v503 + 24) = v502;
        uint64_t v504 = sub_1D44698F8();
        LODWORD(v501) = sub_1D446A038();
        uint64_t v505 = swift_allocObject();
        *(unsigned char *)(v505 + 16) = 112;
        uint64_t v506 = swift_allocObject();
        *(unsigned char *)(v506 + 16) = 8;
        uint64_t v507 = swift_allocObject();
        *(void *)(v507 + 16) = 1752392040;
        uint64_t v508 = swift_allocObject();
        *(void *)(v508 + 16) = sub_1D4327790;
        *(void *)(v508 + 24) = v507;
        uint64_t v509 = swift_allocObject();
        *(unsigned char *)(v509 + 16) = 33;
        uint64_t v510 = swift_allocObject();
        *(unsigned char *)(v510 + 16) = 8;
        uint64_t v511 = swift_allocObject();
        *(void *)(v511 + 16) = sub_1D432763C;
        *(void *)(v511 + 24) = v503;
        uint64_t v512 = swift_allocObject();
        *(void *)(v512 + 16) = sub_1D4327638;
        *(void *)(v512 + 24) = v511;
        uint64_t v513 = swift_allocObject();
        sub_1D438C22C(v513, 6);
        void *v514 = sub_1D432764C;
        v514[1] = v505;
        v514[2] = sub_1D432764C;
        v514[3] = v506;
        v514[4] = sub_1D4327644;
        v514[5] = v508;
        v514[6] = sub_1D432764C;
        v514[7] = v509;
        v514[8] = sub_1D432764C;
        v514[9] = v510;
        v514[10] = sub_1D4327640;
        v514[11] = v512;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        LODWORD(v791) = v501;
        if (os_log_type_enabled(v504, (os_log_type_t)v501))
        {
          v515 = (uint8_t *)sub_1D4304EA8();
          uint64_t v516 = swift_slowAlloc();
          uint64_t v803 = v516;
          uint64_t v804 = 0;
          *(_WORD *)v515 = 515;
          v805 = v515 + 2;
          v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
          uint64_t v802 = v505;
          os_log_t v160 = (os_log_t)v780[0];
          sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
          if (!v160)
          {
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v506;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327644;
            uint64_t v802 = v508;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v509;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v510;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
            uint64_t v802 = v512;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            _os_log_impl(&dword_1D4271000, v504, (os_log_type_t)v791, "Playing left offline for %{private,mask.hash}s.", v515, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1D9447730](v516, -1, -1);
            sub_1D4304EB0();
          }
          goto LABEL_270;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        ((void (*)(char *, uint64_t))v794)(v757, v799);
        uint64_t v478 = v787;
        uint64_t v479 = v774;
        uint64_t v480 = v792;
        v481 = &v787;
LABEL_168:
        v528 = (char *)*(v481 - 32);
        uint64_t v529 = (uint64_t)v528;
        int v530 = 1;
LABEL_169:
        sub_1D4318370(v529, v530, v798, v773, (uint64_t)v796, v797);
        v531 = *(void (**)(char *, uint64_t))(v795 + 8);
        v531(v528, v479);
        sub_1D4276C3C(v790, (uint64_t *)&unk_1EBD7E930);
        sub_1D4276C3C(v788, (uint64_t *)&unk_1EBD7E930);
        sub_1D4276C3C(v789, (uint64_t *)&unk_1EBD7E930);
        sub_1D4276C3C(v793, (uint64_t *)&unk_1EA6C9468);
        sub_1D4276C3C(v786, (uint64_t *)&unk_1EA6C9468);
        sub_1D4276C3C(v478, (uint64_t *)&unk_1EA6C9468);
        uint64_t v532 = v480;
LABEL_170:
        v531((char *)v532, v479);
        goto LABEL_150;
      }
      sub_1D4276C3C(v311, (uint64_t *)&unk_1EBD7E930);
    }
    uint64_t v312 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
    v725(v310, v312, v309);
    uint64_t v313 = v781;
    v791 = *(NSObject **)(v307 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v791)(v781, v792, v308);
    uint64_t v314 = *(unsigned __int8 *)(v307 + 80);
    uint64_t v315 = swift_allocObject();
    v727(v315 + ((v314 + 16) & ~v314), v313, v308);
    uint64_t v316 = swift_allocObject();
    *(void *)(v316 + 16) = sub_1D4326724;
    *(void *)(v316 + 24) = v315;
    char v317 = v310;
    uint64_t v318 = sub_1D44698F8();
    int v319 = sub_1D446A038();
    uint64_t v320 = swift_allocObject();
    *(unsigned char *)(v320 + 16) = 34;
    uint64_t v321 = swift_allocObject();
    *(unsigned char *)(v321 + 16) = 8;
    uint64_t v322 = swift_allocObject();
    *(void *)(v322 + 16) = sub_1D432763C;
    *(void *)(v322 + 24) = v316;
    uint64_t v323 = swift_allocObject();
    *(void *)(v323 + 16) = sub_1D4327638;
    *(void *)(v323 + 24) = v322;
    uint64_t v324 = swift_allocObject();
    sub_1D438C22C(v324, 3);
    *double v325 = sub_1D432764C;
    v325[1] = v320;
    v325[2] = sub_1D432764C;
    v325[3] = v321;
    v325[4] = sub_1D4327640;
    v325[5] = v323;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    LODWORD(v782) = v319;
    if (os_log_type_enabled(v318, (os_log_type_t)v319))
    {
      double v326 = (uint8_t *)sub_1D4304EA8();
      uint64_t v327 = swift_slowAlloc();
      uint64_t v803 = v327;
      uint64_t v804 = 0;
      *(_WORD *)double v326 = 258;
      v805 = v326 + 2;
      v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
      uint64_t v802 = v320;
      sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
      if (!v160)
      {
        swift_release();
        v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
        uint64_t v802 = v321;
        sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
        swift_release();
        v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
        uint64_t v802 = v323;
        sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
        swift_release();
        _os_log_impl(&dword_1D4271000, v318, (os_log_type_t)v782, "Error playing case sound %{public}s.", v326, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v327, -1, -1);
        sub_1D4304EB0();
      }
      goto LABEL_270;
    }
    swift_release();
    swift_release();
    swift_release();

    ((void (*)(char *, uint64_t))v794)(v317, v309);
    uint64_t v339 = v795;
    uint64_t v389 = v774;
    id v390 = v765;
    goto LABEL_141;
  }
  uint64_t v328 = swift_allocObject();
  uint64_t v329 = sub_1D4385980(v328, 2);
  *uint64_t v330 = 1;
  uint64_t v331 = nullsub_1(v329);
  uint64_t v332 = sub_1D4351B94(v331);
  swift_bridgeObjectRelease();
  char v333 = sub_1D43EF794(v332, v240);
  swift_bridgeObjectRelease();
  if (v333)
  {
    swift_bridgeObjectRelease();
    uint64_t v334 = v786;
    if ((v237 & 1) == 0)
    {
      uint64_t v411 = v786;
      v780[0] = (uint64_t)v160;
      uint64_t v412 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
      id v413 = v752;
      uint64_t v414 = v799;
      v725(v752, v412, v799);
      uint64_t v250 = v795;
      uint64_t v415 = v795 + 16;
      v416 = v781;
      uint64_t v417 = v774;
      (*(void (**)(char *, uint64_t, uint64_t))(v795 + 16))(v781, v792, v774);
      unint64_t v418 = (*(unsigned __int8 *)(v415 + 64) + 16) & ~(unint64_t)*(unsigned __int8 *)(v415 + 64);
      uint64_t v419 = swift_allocObject();
      v727(v419 + v418, v416, v417);
      uint64_t v420 = swift_allocObject();
      *(void *)(v420 + 16) = sub_1D4326724;
      *(void *)(v420 + 24) = v419;
      uint64_t v421 = sub_1D44698F8();
      os_log_type_t v422 = sub_1D446A038();
      uint64_t v423 = swift_allocObject();
      *(unsigned char *)(v423 + 16) = 34;
      uint64_t v424 = swift_allocObject();
      *(unsigned char *)(v424 + 16) = 8;
      uint64_t v425 = swift_allocObject();
      *(void *)(v425 + 16) = sub_1D432763C;
      *(void *)(v425 + 24) = v420;
      uint64_t v426 = swift_allocObject();
      *(void *)(v426 + 16) = sub_1D4327638;
      *(void *)(v426 + 24) = v425;
      uint64_t v427 = swift_allocObject();
      sub_1D438C22C(v427, 3);
      void *v428 = sub_1D432764C;
      v428[1] = v423;
      v428[2] = sub_1D432764C;
      v428[3] = v424;
      v428[4] = sub_1D4327640;
      v428[5] = v426;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v421, v422))
      {
        uint64_t v429 = (uint8_t *)sub_1D4304EA8();
        uint64_t v430 = swift_slowAlloc();
        uint64_t v803 = v430;
        uint64_t v804 = 0;
        *(_WORD *)uint64_t v429 = 258;
        v805 = v429 + 2;
        v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
        uint64_t v802 = v423;
        os_log_t v160 = (os_log_t)v780[0];
        sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
        if (!v160)
        {
          swift_release();
          v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
          uint64_t v802 = v424;
          sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
          swift_release();
          v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
          uint64_t v802 = v426;
          sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
          swift_release();
          _os_log_impl(&dword_1D4271000, v421, v422, "Playing groupID offline for %{public}s.", v429, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D9447730](v430, -1, -1);
          sub_1D4304EB0();
        }
        goto LABEL_270;
      }
      swift_release();
      swift_release();
      swift_release();

      ((void (*)(char *, uint64_t))v794)(v413, v414);
      uint64_t v294 = v774;
      uint64_t v296 = v792;
      uint64_t v517 = v793;
      sub_1D4318370(v792, 1, v798, v773, (uint64_t)v796, v797);
      sub_1D4276C3C(v790, (uint64_t *)&unk_1EBD7E930);
      sub_1D4276C3C(v788, (uint64_t *)&unk_1EBD7E930);
      sub_1D4276C3C(v789, (uint64_t *)&unk_1EBD7E930);
      sub_1D4276C3C(v517, (uint64_t *)&unk_1EA6C9468);
      uint64_t v300 = v411;
      goto LABEL_70;
    }
    uint64_t v335 = v787;
    uint64_t v336 = v774;
    uint64_t v337 = v799;
    if ((v778 & 1) == 0)
    {
      uint64_t v338 = v742;
      sub_1D42A3A74(v788, v742, (uint64_t *)&unk_1EBD7E930);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v724[0])(v338, 1, v336) == 1)
      {
        sub_1D4276C3C(v338, (uint64_t *)&unk_1EBD7E930);
      }
      else
      {
        v780[0] = (uint64_t)v160;
        uint64_t v533 = v744;
        uint64_t v534 = v727;
        v727(v744, (char *)v338, v336);
        uint64_t v535 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
        v725(v746, v535, v337);
        uint64_t v536 = v795 + 16;
        v537 = v781;
        (*(void (**)(char *, uint64_t, uint64_t))(v795 + 16))(v781, v533, v336);
        unint64_t v538 = (*(unsigned __int8 *)(v536 + 64) + 16) & ~(unint64_t)*(unsigned __int8 *)(v536 + 64);
        uint64_t v539 = swift_allocObject();
        v534(v539 + v538, v537, v336);
        uint64_t v540 = swift_allocObject();
        *(void *)(v540 + 16) = sub_1D4326724;
        *(void *)(v540 + 24) = v539;
        v541 = sub_1D44698F8();
        LODWORD(v791) = sub_1D446A038();
        uint64_t v542 = swift_allocObject();
        *(unsigned char *)(v542 + 16) = 112;
        uint64_t v543 = swift_allocObject();
        *(unsigned char *)(v543 + 16) = 8;
        uint64_t v544 = swift_allocObject();
        *(void *)(v544 + 16) = 1752392040;
        uint64_t v545 = swift_allocObject();
        *(void *)(v545 + 16) = sub_1D4327790;
        *(void *)(v545 + 24) = v544;
        uint64_t v546 = swift_allocObject();
        *(unsigned char *)(v546 + 16) = 33;
        uint64_t v547 = swift_allocObject();
        *(unsigned char *)(v547 + 16) = 8;
        uint64_t v548 = swift_allocObject();
        *(void *)(v548 + 16) = sub_1D432763C;
        *(void *)(v548 + 24) = v540;
        uint64_t v549 = swift_allocObject();
        *(void *)(v549 + 16) = sub_1D4327638;
        *(void *)(v549 + 24) = v548;
        uint64_t v550 = swift_allocObject();
        sub_1D438C22C(v550, 6);
        void *v551 = sub_1D432764C;
        v551[1] = v542;
        v551[2] = sub_1D432764C;
        v551[3] = v543;
        v551[4] = sub_1D4327644;
        v551[5] = v545;
        v551[6] = sub_1D432764C;
        v551[7] = v546;
        v551[8] = sub_1D432764C;
        v551[9] = v547;
        v551[10] = sub_1D4327640;
        v551[11] = v549;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v541, (os_log_type_t)v791))
        {
          os_log_t v779 = v541;
          v552 = (uint8_t *)sub_1D4304EA8();
          uint64_t v553 = swift_slowAlloc();
          uint64_t v803 = v553;
          uint64_t v804 = 0;
          *(_WORD *)v552 = 515;
          v805 = v552 + 2;
          v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
          uint64_t v802 = v542;
          os_log_t v160 = (os_log_t)v780[0];
          sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
          if (!v160)
          {
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v543;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327644;
            uint64_t v802 = v545;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v546;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v547;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
            uint64_t v802 = v549;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            _os_log_impl(&dword_1D4271000, v779, (os_log_type_t)v791, "Playing left offline for %{private,mask.hash}s.", v552, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1D9447730](v553, -1, -1);
            sub_1D4304EB0();
          }
          goto LABEL_270;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        uint64_t v337 = v799;
        ((void (*)(char *, uint64_t))v794)(v746, v799);
        uint64_t v234 = (uint64_t)v784;
        uint64_t v335 = v787;
        uint64_t v334 = v786;
        os_log_t v160 = (os_log_t)v780[0];
        uint64_t v598 = v744;
        sub_1D4318370(v744, 1, v798, v773, (uint64_t)v796, v797);
        uint64_t v336 = v774;
        (*(void (**)(uint64_t, uint64_t))(v795 + 8))(v598, v774);
      }
    }
    uint64_t v526 = v750;
    if (v782)
    {
      sub_1D4276C3C(v790, (uint64_t *)&unk_1EBD7E930);
      sub_1D4276C3C(v788, (uint64_t *)&unk_1EBD7E930);
      sub_1D4276C3C(v789, (uint64_t *)&unk_1EBD7E930);
      sub_1D4276C3C(v793, (uint64_t *)&unk_1EA6C9468);
      sub_1D4276C3C(v334, (uint64_t *)&unk_1EA6C9468);
      sub_1D4276C3C(v335, (uint64_t *)&unk_1EA6C9468);
      (*(void (**)(uint64_t, uint64_t))(v795 + 8))(v792, v336);
      goto LABEL_203;
    }
    uint64_t v599 = v789;
    sub_1D42A3A74(v789, v750, (uint64_t *)&unk_1EBD7E930);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v724[0])(v526, 1, v336) != 1)
    {
      v780[0] = (uint64_t)v160;
      v601 = v748;
      uint64_t v602 = v526;
      v603 = v727;
      v727((unint64_t)v748, (char *)v602, v336);
      uint64_t v604 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
      v725(v749, v604, v337);
      uint64_t v605 = v795 + 16;
      v606 = v781;
      (*(void (**)(char *, char *, uint64_t))(v795 + 16))(v781, v601, v336);
      unint64_t v607 = (*(unsigned __int8 *)(v605 + 64) + 16) & ~(unint64_t)*(unsigned __int8 *)(v605 + 64);
      uint64_t v608 = swift_allocObject();
      v603(v608 + v607, v606, v336);
      uint64_t v609 = swift_allocObject();
      *(void *)(v609 + 16) = sub_1D4326724;
      *(void *)(v609 + 24) = v608;
      v610 = sub_1D44698F8();
      LODWORD(v606) = sub_1D446A038();
      uint64_t v611 = swift_allocObject();
      *(unsigned char *)(v611 + 16) = 112;
      uint64_t v612 = swift_allocObject();
      *(unsigned char *)(v612 + 16) = 8;
      uint64_t v613 = swift_allocObject();
      *(void *)(v613 + 16) = 1752392040;
      uint64_t v614 = swift_allocObject();
      *(void *)(v614 + 16) = sub_1D4327790;
      *(void *)(v614 + 24) = v613;
      uint64_t v615 = swift_allocObject();
      *(unsigned char *)(v615 + 16) = 33;
      uint64_t v616 = swift_allocObject();
      *(unsigned char *)(v616 + 16) = 8;
      uint64_t v617 = swift_allocObject();
      *(void *)(v617 + 16) = sub_1D432763C;
      *(void *)(v617 + 24) = v609;
      uint64_t v618 = swift_allocObject();
      *(void *)(v618 + 16) = sub_1D4327638;
      *(void *)(v618 + 24) = v617;
      uint64_t v619 = swift_allocObject();
      sub_1D438C22C(v619, 6);
      void *v620 = sub_1D432764C;
      v620[1] = v611;
      v620[2] = sub_1D432764C;
      v620[3] = v612;
      v620[4] = sub_1D4327644;
      v620[5] = v614;
      v620[6] = sub_1D432764C;
      v620[7] = v615;
      v620[8] = sub_1D432764C;
      v620[9] = v616;
      v620[10] = sub_1D4327640;
      v620[11] = v618;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      LODWORD(v791) = v606;
      if (os_log_type_enabled(v610, (os_log_type_t)v606))
      {
        v621 = (uint8_t *)sub_1D4304EA8();
        uint64_t v622 = swift_slowAlloc();
        uint64_t v803 = v622;
        uint64_t v804 = 0;
        *(_WORD *)v621 = 515;
        v805 = v621 + 2;
        v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
        uint64_t v802 = v611;
        os_log_t v160 = (os_log_t)v780[0];
        sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
        if (!v160)
        {
          swift_release();
          v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
          uint64_t v802 = v612;
          sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
          swift_release();
          v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327644;
          uint64_t v802 = v614;
          sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
          swift_release();
          v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
          uint64_t v802 = v615;
          sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
          swift_release();
          v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
          uint64_t v802 = v616;
          sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
          swift_release();
          v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
          uint64_t v802 = v618;
          sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
          swift_release();
          _os_log_impl(&dword_1D4271000, v610, (os_log_type_t)v791, "Playing right offline for %{private,mask.hash}s.", v621, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1D9447730](v622, -1, -1);
          sub_1D4304EB0();
        }
        goto LABEL_270;
      }
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      ((void (*)(char *, uint64_t))v794)(v749, v799);
      uint64_t v478 = v787;
      uint64_t v479 = v774;
      uint64_t v480 = v792;
      v481 = v780;
      goto LABEL_168;
    }
    sub_1D4276C3C(v790, (uint64_t *)&unk_1EBD7E930);
    sub_1D4276C3C(v788, (uint64_t *)&unk_1EBD7E930);
    sub_1D4276C3C(v599, (uint64_t *)&unk_1EBD7E930);
    sub_1D4276C3C(v793, (uint64_t *)&unk_1EA6C9468);
    sub_1D4276C3C(v334, (uint64_t *)&unk_1EA6C9468);
    sub_1D4276C3C(v335, (uint64_t *)&unk_1EA6C9468);
    (*(void (**)(uint64_t, uint64_t))(v795 + 8))(v792, v336);
    goto LABEL_206;
  }
  uint64_t v362 = swift_allocObject();
  uint64_t v363 = sub_1D4385980(v362, 1);
  *uint64_t v364 = 2;
  uint64_t v365 = nullsub_1(v363);
  uint64_t v366 = sub_1D4351B94(v365);
  swift_bridgeObjectRelease();
  char v367 = sub_1D43EF794(v366, v240);
  swift_bridgeObjectRelease();
  if (v367)
  {
    v780[0] = (uint64_t)v160;
    swift_bridgeObjectRelease();
    uint64_t v339 = v795;
    uint64_t v368 = v774;
    uint64_t v369 = v792;
    char v370 = v751;
    if ((v791 & 1) == 0)
    {
      uint64_t v371 = v743;
      sub_1D42A3A74(v790, v743, (uint64_t *)&unk_1EBD7E930);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v724[0])(v371, 1, v368) != 1)
      {
        v554 = v745;
        v555 = v727;
        v727((unint64_t)v745, (char *)v371, v368);
        uint64_t v556 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
        v725(v747, v556, v799);
        v557 = v781;
        (*(void (**)(char *, char *, uint64_t))(v339 + 16))(v781, v554, v368);
        unint64_t v558 = (*(unsigned __int8 *)(v339 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v339 + 80);
        uint64_t v559 = swift_allocObject();
        v555(v559 + v558, v557, v368);
        uint64_t v560 = swift_allocObject();
        *(void *)(v560 + 16) = sub_1D4326724;
        *(void *)(v560 + 24) = v559;
        uint64_t v561 = sub_1D44698F8();
        int v562 = sub_1D446A038();
        uint64_t v563 = swift_allocObject();
        *(unsigned char *)(v563 + 16) = 112;
        uint64_t v564 = swift_allocObject();
        *(unsigned char *)(v564 + 16) = 8;
        uint64_t v565 = swift_allocObject();
        *(void *)(v565 + 16) = 1752392040;
        uint64_t v566 = swift_allocObject();
        *(void *)(v566 + 16) = sub_1D4327790;
        *(void *)(v566 + 24) = v565;
        uint64_t v567 = swift_allocObject();
        *(unsigned char *)(v567 + 16) = 33;
        uint64_t v568 = swift_allocObject();
        *(unsigned char *)(v568 + 16) = 8;
        uint64_t v569 = swift_allocObject();
        *(void *)(v569 + 16) = sub_1D432763C;
        *(void *)(v569 + 24) = v560;
        uint64_t v570 = swift_allocObject();
        *(void *)(v570 + 16) = sub_1D4327638;
        *(void *)(v570 + 24) = v569;
        uint64_t v571 = swift_allocObject();
        sub_1D438C22C(v571, 6);
        void *v572 = sub_1D432764C;
        v572[1] = v563;
        v572[2] = sub_1D432764C;
        v572[3] = v564;
        v572[4] = sub_1D4327644;
        v572[5] = v566;
        v572[6] = sub_1D432764C;
        v572[7] = v567;
        v572[8] = sub_1D432764C;
        v572[9] = v568;
        v572[10] = sub_1D4327640;
        v572[11] = v570;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v561, (os_log_type_t)v562))
        {
          LODWORD(v791) = v562;
          v573 = (uint8_t *)sub_1D4304EA8();
          uint64_t v574 = swift_slowAlloc();
          uint64_t v803 = v574;
          uint64_t v804 = 0;
          *(_WORD *)v573 = 515;
          v805 = v573 + 2;
          v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
          uint64_t v802 = v563;
          os_log_t v160 = (os_log_t)v780[0];
          sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
          if (!v160)
          {
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v564;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327644;
            uint64_t v802 = v566;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v567;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v568;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
            uint64_t v802 = v570;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            _os_log_impl(&dword_1D4271000, v561, (os_log_type_t)v791, "Playing case offline for %{private,mask.hash}s.", v573, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1D9447730](v574, -1, -1);
            sub_1D4304EB0();
          }
          goto LABEL_270;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        ((void (*)(char *, uint64_t))v794)(v747, v799);
        uint64_t v478 = v787;
        uint64_t v479 = v774;
        uint64_t v480 = v792;
        v481 = (uint64_t *)&v777;
        goto LABEL_168;
      }
      sub_1D4276C3C(v371, (uint64_t *)&unk_1EBD7E930);
    }
    uint64_t v372 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
    uint64_t v373 = v799;
    v725(v370, v372, v799);
    uint64_t v374 = v781;
    (*(void (**)(char *, uint64_t, uint64_t))(v339 + 16))(v781, v369, v368);
    unint64_t v375 = (*(unsigned __int8 *)(v339 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v339 + 80);
    uint64_t v376 = swift_allocObject();
    v727(v376 + v375, v374, v368);
    uint64_t v377 = swift_allocObject();
    *(void *)(v377 + 16) = sub_1D4326724;
    *(void *)(v377 + 24) = v376;
    v378 = sub_1D44698F8();
    os_log_type_t v379 = sub_1D446A038();
    v380 = v370;
    uint64_t v381 = swift_allocObject();
    *(unsigned char *)(v381 + 16) = 34;
    uint64_t v382 = swift_allocObject();
    *(unsigned char *)(v382 + 16) = 8;
    uint64_t v383 = swift_allocObject();
    *(void *)(v383 + 16) = sub_1D432763C;
    *(void *)(v383 + 24) = v377;
    uint64_t v384 = swift_allocObject();
    *(void *)(v384 + 16) = sub_1D4327638;
    *(void *)(v384 + 24) = v383;
    uint64_t v385 = swift_allocObject();
    sub_1D438C22C(v385, 3);
    *uint64_t v386 = sub_1D432764C;
    v386[1] = v381;
    v386[2] = sub_1D432764C;
    v386[3] = v382;
    v386[4] = sub_1D4327640;
    v386[5] = v384;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v378, v379))
    {
      double v387 = (uint8_t *)sub_1D4304EA8();
      uint64_t v388 = swift_slowAlloc();
      uint64_t v803 = v388;
      uint64_t v804 = 0;
      *(_WORD *)double v387 = 258;
      v805 = v387 + 2;
      v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
      uint64_t v802 = v381;
      os_log_t v160 = (os_log_t)v780[0];
      sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
      if (!v160)
      {
        swift_release();
        v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
        uint64_t v802 = v382;
        sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
        swift_release();
        v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
        uint64_t v802 = v384;
        sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
        swift_release();
        _os_log_impl(&dword_1D4271000, v378, v379, "Error playing case sound %{public}s.", v387, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v388, -1, -1);
        sub_1D4304EB0();
      }
      goto LABEL_270;
    }
LABEL_149:

    swift_release();
    swift_release();
    swift_release();
    ((void (*)(char *, uint64_t))v794)(v380, v373);
    sub_1D4276C3C(v790, (uint64_t *)&unk_1EBD7E930);
    sub_1D4276C3C(v788, (uint64_t *)&unk_1EBD7E930);
    sub_1D4276C3C(v789, (uint64_t *)&unk_1EBD7E930);
    sub_1D4276C3C(v793, (uint64_t *)&unk_1EA6C9468);
    sub_1D4276C3C(v786, (uint64_t *)&unk_1EA6C9468);
    sub_1D4276C3C(v787, (uint64_t *)&unk_1EA6C9468);
    (*(void (**)(uint64_t, uint64_t))(v339 + 8))(v369, v774);
    goto LABEL_150;
  }
  uint64_t v465 = swift_allocObject();
  uint64_t v466 = sub_1D4385980(v465, 1);
  *int v467 = 1;
  uint64_t v468 = nullsub_1(v466);
  uint64_t v469 = sub_1D4351B94(v468);
  swift_bridgeObjectRelease();
  char v470 = sub_1D43EF794(v469, v240);
  swift_bridgeObjectRelease();
  uint64_t v471 = v787;
  uint64_t v250 = v795;
  if (v470)
  {
    swift_bridgeObjectRelease();
    uint64_t v472 = v786;
    uint64_t v473 = v799;
    if (v237)
    {
      uint64_t v474 = v774;
      uint64_t v475 = v788;
      if (v778)
      {
        uint64_t v476 = v734;
        sub_1D42A3A74(v788, v734, (uint64_t *)&unk_1EBD7E930);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v724[0])(v476, 1, v474) != 1)
        {
          v780[0] = (uint64_t)v160;
          v638 = v736;
          v639 = v727;
          v727((unint64_t)v736, (char *)v476, v474);
          uint64_t v640 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
          v725(v739, v640, v473);
          v641 = v781;
          (*(void (**)(char *, char *, uint64_t))(v250 + 16))(v781, v638, v474);
          unint64_t v642 = (*(unsigned __int8 *)(v250 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80);
          uint64_t v643 = swift_allocObject();
          v639(v643 + v642, v641, v474);
          uint64_t v644 = swift_allocObject();
          *(void *)(v644 + 16) = sub_1D4326724;
          *(void *)(v644 + 24) = v643;
          v645 = sub_1D44698F8();
          LODWORD(v641) = sub_1D446A038();
          uint64_t v646 = swift_allocObject();
          *(unsigned char *)(v646 + 16) = 112;
          uint64_t v647 = swift_allocObject();
          *(unsigned char *)(v647 + 16) = 8;
          uint64_t v648 = swift_allocObject();
          *(void *)(v648 + 16) = 1752392040;
          uint64_t v649 = swift_allocObject();
          *(void *)(v649 + 16) = sub_1D4327790;
          *(void *)(v649 + 24) = v648;
          uint64_t v650 = swift_allocObject();
          *(unsigned char *)(v650 + 16) = 33;
          uint64_t v651 = swift_allocObject();
          *(unsigned char *)(v651 + 16) = 8;
          uint64_t v652 = swift_allocObject();
          *(void *)(v652 + 16) = sub_1D432763C;
          *(void *)(v652 + 24) = v644;
          uint64_t v653 = swift_allocObject();
          *(void *)(v653 + 16) = sub_1D4327638;
          *(void *)(v653 + 24) = v652;
          uint64_t v654 = swift_allocObject();
          sub_1D438C22C(v654, 6);
          void *v655 = sub_1D432764C;
          v655[1] = v646;
          v655[2] = sub_1D432764C;
          v655[3] = v647;
          v655[4] = sub_1D4327644;
          v655[5] = v649;
          v655[6] = sub_1D432764C;
          v655[7] = v650;
          v655[8] = sub_1D432764C;
          v655[9] = v651;
          v655[10] = sub_1D4327640;
          v655[11] = v653;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          LODWORD(v791) = v641;
          if (os_log_type_enabled(v645, (os_log_type_t)v641))
          {
            v656 = (uint8_t *)sub_1D4304EA8();
            uint64_t v657 = swift_slowAlloc();
            uint64_t v803 = v657;
            uint64_t v804 = 0;
            *(_WORD *)v656 = 515;
            v805 = v656 + 2;
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v646;
            os_log_t v160 = (os_log_t)v780[0];
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            if (!v160)
            {
              swift_release();
              v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
              uint64_t v802 = v647;
              sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
              swift_release();
              v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327644;
              uint64_t v802 = v649;
              sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
              swift_release();
              v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
              uint64_t v802 = v650;
              sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
              swift_release();
              v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
              uint64_t v802 = v651;
              sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
              swift_release();
              v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
              uint64_t v802 = v653;
              sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
              swift_release();
              _os_log_impl(&dword_1D4271000, v645, (os_log_type_t)v791, "Muting left offline for %{private,mask.hash}s.", v656, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1D9447730](v657, -1, -1);
              sub_1D4304EB0();
            }
            goto LABEL_270;
          }
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          ((void (*)(char *, uint64_t))v794)(v739, v799);
          uint64_t v478 = v787;
          uint64_t v479 = v774;
          uint64_t v480 = v792;
          v528 = v736;
          uint64_t v529 = (uint64_t)v736;
          int v530 = 0;
          goto LABEL_169;
        }
        sub_1D4276C3C(v790, (uint64_t *)&unk_1EBD7E930);
        sub_1D4276C3C(v475, (uint64_t *)&unk_1EBD7E930);
        uint64_t v477 = v789;
LABEL_218:
        sub_1D4276C3C(v477, (uint64_t *)&unk_1EBD7E930);
        sub_1D4276C3C(v793, (uint64_t *)&unk_1EA6C9468);
        sub_1D4276C3C(v472, (uint64_t *)&unk_1EA6C9468);
        sub_1D4276C3C(v471, (uint64_t *)&unk_1EA6C9468);
        (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v792, v474);
        sub_1D42D2058(v234, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
        uint64_t v600 = v476;
        goto LABEL_219;
      }
      sub_1D4276C3C(v790, (uint64_t *)&unk_1EBD7E930);
      uint64_t v576 = v475;
    }
    else
    {
      v780[0] = (uint64_t)v160;
      uint64_t v474 = v774;
      uint64_t v575 = v788;
      if ((v782 & 1) == 0)
      {
        uint64_t v623 = v789;
        uint64_t v476 = v735;
        sub_1D42A3A74(v789, v735, (uint64_t *)&unk_1EBD7E930);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v724[0])(v476, 1, v474) != 1)
        {
          v659 = v737;
          v660 = v727;
          v727((unint64_t)v737, (char *)v476, v474);
          uint64_t v661 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
          v725(v740, v661, v473);
          v662 = v781;
          (*(void (**)(char *, char *, uint64_t))(v250 + 16))(v781, v659, v474);
          unint64_t v663 = (*(unsigned __int8 *)(v250 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80);
          uint64_t v664 = swift_allocObject();
          v660(v664 + v663, v662, v474);
          uint64_t v665 = swift_allocObject();
          *(void *)(v665 + 16) = sub_1D4326724;
          *(void *)(v665 + 24) = v664;
          v666 = sub_1D44698F8();
          LODWORD(v662) = sub_1D446A038();
          uint64_t v667 = swift_allocObject();
          *(unsigned char *)(v667 + 16) = 112;
          uint64_t v668 = swift_allocObject();
          *(unsigned char *)(v668 + 16) = 8;
          uint64_t v669 = swift_allocObject();
          *(void *)(v669 + 16) = 1752392040;
          uint64_t v670 = swift_allocObject();
          *(void *)(v670 + 16) = sub_1D4327790;
          *(void *)(v670 + 24) = v669;
          uint64_t v671 = swift_allocObject();
          *(unsigned char *)(v671 + 16) = 33;
          uint64_t v672 = swift_allocObject();
          *(unsigned char *)(v672 + 16) = 8;
          uint64_t v673 = swift_allocObject();
          *(void *)(v673 + 16) = sub_1D432763C;
          *(void *)(v673 + 24) = v665;
          uint64_t v674 = swift_allocObject();
          *(void *)(v674 + 16) = sub_1D4327638;
          *(void *)(v674 + 24) = v673;
          uint64_t v675 = swift_allocObject();
          sub_1D438C22C(v675, 6);
          void *v676 = sub_1D432764C;
          v676[1] = v667;
          v676[2] = sub_1D432764C;
          v676[3] = v668;
          v676[4] = sub_1D4327644;
          v676[5] = v670;
          v676[6] = sub_1D432764C;
          v676[7] = v671;
          v676[8] = sub_1D432764C;
          v676[9] = v672;
          v676[10] = sub_1D4327640;
          v676[11] = v674;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          LODWORD(v791) = v662;
          if (os_log_type_enabled(v666, (os_log_type_t)v662))
          {
            v677 = (uint8_t *)sub_1D4304EA8();
            uint64_t v678 = swift_slowAlloc();
            uint64_t v803 = v678;
            uint64_t v804 = 0;
            *(_WORD *)v677 = 515;
            v805 = v677 + 2;
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v667;
            os_log_t v160 = (os_log_t)v780[0];
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            if (!v160)
            {
              swift_release();
              v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
              uint64_t v802 = v668;
              sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
              swift_release();
              v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327644;
              uint64_t v802 = v670;
              sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
              swift_release();
              v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
              uint64_t v802 = v671;
              sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
              swift_release();
              v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
              uint64_t v802 = v672;
              sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
              swift_release();
              v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
              uint64_t v802 = v674;
              sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
              swift_release();
              _os_log_impl(&dword_1D4271000, v666, (os_log_type_t)v791, "Playing right offline for %{private,mask.hash}s.", v677, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1D9447730](v678, -1, -1);
              sub_1D4304EB0();
            }
            goto LABEL_270;
          }
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          ((void (*)(char *, uint64_t))v794)(v740, v799);
          uint64_t v478 = v787;
          uint64_t v479 = v774;
          uint64_t v480 = v792;
          v481 = &v769;
          goto LABEL_168;
        }
        sub_1D4276C3C(v790, (uint64_t *)&unk_1EBD7E930);
        sub_1D4276C3C(v575, (uint64_t *)&unk_1EBD7E930);
        uint64_t v477 = v623;
        goto LABEL_218;
      }
      sub_1D4276C3C(v790, (uint64_t *)&unk_1EBD7E930);
      uint64_t v576 = v575;
    }
    sub_1D4276C3C(v576, (uint64_t *)&unk_1EBD7E930);
    sub_1D4276C3C(v789, (uint64_t *)&unk_1EBD7E930);
    sub_1D4276C3C(v793, (uint64_t *)&unk_1EA6C9468);
    uint64_t v597 = v472;
LABEL_199:
    sub_1D4276C3C(v597, (uint64_t *)&unk_1EA6C9468);
    sub_1D4276C3C(v471, (uint64_t *)&unk_1EA6C9468);
    (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v792, v474);
LABEL_203:
    uint64_t v497 = v234;
    goto LABEL_151;
  }
  uint64_t v518 = swift_allocObject();
  uint64_t v519 = sub_1D4385980(v518, 1);
  unsigned char *v520 = 0;
  uint64_t v521 = nullsub_1(v519);
  uint64_t v522 = sub_1D4351B94(v521);
  swift_bridgeObjectRelease();
  char v523 = sub_1D43EF794(v522, v240);
  swift_bridgeObjectRelease();
  uint64_t v295 = v786;
  if (v523)
  {
    swift_bridgeObjectRelease();
    uint64_t v524 = v799;
    if (v237)
    {
      uint64_t v474 = v774;
      uint64_t v525 = v789;
      if (v782)
      {
        uint64_t v526 = v728;
        sub_1D42A3A74(v789, v728, (uint64_t *)&unk_1EBD7E930);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v724[0])(v526, 1, v474) == 1)
        {
          sub_1D4276C3C(v790, (uint64_t *)&unk_1EBD7E930);
          uint64_t v527 = v788;
LABEL_237:
          sub_1D4276C3C(v527, (uint64_t *)&unk_1EBD7E930);
          sub_1D4276C3C(v525, (uint64_t *)&unk_1EBD7E930);
          sub_1D4276C3C(v793, (uint64_t *)&unk_1EA6C9468);
          sub_1D4276C3C(v295, (uint64_t *)&unk_1EA6C9468);
          sub_1D4276C3C(v471, (uint64_t *)&unk_1EA6C9468);
          (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v792, v474);
LABEL_206:
          sub_1D42D2058(v234, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
          uint64_t v600 = v526;
LABEL_219:
          sub_1D4276C3C(v600, (uint64_t *)&unk_1EBD7E930);
          return;
        }
        v679 = v730;
        v680 = v727;
        v727((unint64_t)v730, (char *)v526, v474);
        uint64_t v681 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
        v725(v732, v681, v524);
        v682 = v781;
        (*(void (**)(char *, char *, uint64_t))(v250 + 16))(v781, v679, v474);
        unint64_t v683 = (*(unsigned __int8 *)(v250 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80);
        uint64_t v684 = swift_allocObject();
        v680(v684 + v683, v682, v474);
        uint64_t v685 = swift_allocObject();
        *(void *)(v685 + 16) = sub_1D4326724;
        *(void *)(v685 + 24) = v684;
        v791 = sub_1D44698F8();
        LODWORD(v684) = sub_1D446A038();
        uint64_t v686 = swift_allocObject();
        *(unsigned char *)(v686 + 16) = 112;
        uint64_t v687 = swift_allocObject();
        *(unsigned char *)(v687 + 16) = 8;
        uint64_t v688 = swift_allocObject();
        *(void *)(v688 + 16) = 1752392040;
        uint64_t v689 = swift_allocObject();
        *(void *)(v689 + 16) = sub_1D4327790;
        *(void *)(v689 + 24) = v688;
        uint64_t v690 = swift_allocObject();
        *(unsigned char *)(v690 + 16) = 33;
        uint64_t v691 = swift_allocObject();
        *(unsigned char *)(v691 + 16) = 8;
        uint64_t v692 = swift_allocObject();
        *(void *)(v692 + 16) = sub_1D432763C;
        *(void *)(v692 + 24) = v685;
        uint64_t v693 = swift_allocObject();
        *(void *)(v693 + 16) = sub_1D4327638;
        *(void *)(v693 + 24) = v692;
        uint64_t v694 = swift_allocObject();
        sub_1D438C22C(v694, 6);
        void *v695 = sub_1D432764C;
        v695[1] = v686;
        v695[2] = sub_1D432764C;
        v695[3] = v687;
        v695[4] = sub_1D4327644;
        v695[5] = v689;
        v695[6] = sub_1D432764C;
        v695[7] = v690;
        v695[8] = sub_1D432764C;
        v695[9] = v691;
        v695[10] = sub_1D4327640;
        v695[11] = v693;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        LODWORD(v785) = v684;
        os_log_type_t v696 = v684;
        v697 = v791;
        if (os_log_type_enabled(v791, v696))
        {
          v698 = (uint8_t *)sub_1D4304EA8();
          uint64_t v699 = swift_slowAlloc();
          uint64_t v803 = v699;
          uint64_t v804 = 0;
          *(_WORD *)v698 = 515;
          v805 = v698 + 2;
          v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
          uint64_t v802 = v686;
          sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
          if (!v160)
          {
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v687;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327644;
            uint64_t v802 = v689;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v690;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v691;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
            uint64_t v802 = v693;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            _os_log_impl(&dword_1D4271000, v697, (os_log_type_t)v785, "Muting right offline for %{private,mask.hash}s.", v698, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1D9447730](v699, -1, -1);
            sub_1D4304EB0();
          }
          goto LABEL_270;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        ((void (*)(char *, uint64_t))v794)(v732, v799);
        v721 = v730;
        uint64_t v722 = (uint64_t)v730;
        int v723 = 0;
        goto LABEL_266;
      }
    }
    else
    {
      uint64_t v474 = v774;
      uint64_t v525 = v789;
      if ((v778 & 1) == 0)
      {
        v780[0] = (uint64_t)v160;
        uint64_t v658 = v788;
        uint64_t v526 = v729;
        sub_1D42A3A74(v788, v729, (uint64_t *)&unk_1EBD7E930);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v724[0])(v526, 1, v474) == 1)
        {
          sub_1D4276C3C(v790, (uint64_t *)&unk_1EBD7E930);
          uint64_t v527 = v658;
          goto LABEL_237;
        }
        v700 = v731;
        uint64_t v701 = v526;
        v702 = v727;
        v727((unint64_t)v731, (char *)v701, v474);
        uint64_t v703 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
        v725(v733, v703, v524);
        v704 = v781;
        (*(void (**)(char *, char *, uint64_t))(v250 + 16))(v781, v700, v474);
        unint64_t v705 = (*(unsigned __int8 *)(v250 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80);
        uint64_t v706 = swift_allocObject();
        v702(v706 + v705, v704, v474);
        uint64_t v707 = swift_allocObject();
        *(void *)(v707 + 16) = sub_1D4326724;
        *(void *)(v707 + 24) = v706;
        v708 = sub_1D44698F8();
        LODWORD(v704) = sub_1D446A038();
        uint64_t v709 = swift_allocObject();
        *(unsigned char *)(v709 + 16) = 112;
        uint64_t v710 = swift_allocObject();
        *(unsigned char *)(v710 + 16) = 8;
        uint64_t v711 = swift_allocObject();
        *(void *)(v711 + 16) = 1752392040;
        uint64_t v712 = swift_allocObject();
        *(void *)(v712 + 16) = sub_1D43267A8;
        *(void *)(v712 + 24) = v711;
        uint64_t v713 = swift_allocObject();
        *(unsigned char *)(v713 + 16) = 33;
        uint64_t v714 = swift_allocObject();
        *(unsigned char *)(v714 + 16) = 8;
        uint64_t v715 = swift_allocObject();
        *(void *)(v715 + 16) = sub_1D432763C;
        *(void *)(v715 + 24) = v707;
        uint64_t v716 = swift_allocObject();
        *(void *)(v716 + 16) = sub_1D4327638;
        *(void *)(v716 + 24) = v715;
        uint64_t v717 = swift_allocObject();
        sub_1D438C22C(v717, 6);
        void *v718 = sub_1D432764C;
        v718[1] = v709;
        v718[2] = sub_1D432764C;
        v718[3] = v710;
        v718[4] = sub_1D43267B4;
        v718[5] = v712;
        v718[6] = sub_1D432764C;
        v718[7] = v713;
        v718[8] = sub_1D432764C;
        v718[9] = v714;
        v718[10] = sub_1D4327640;
        v718[11] = v716;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        LODWORD(v791) = v704;
        if (os_log_type_enabled(v708, (os_log_type_t)v704))
        {
          v719 = (uint8_t *)sub_1D4304EA8();
          uint64_t v720 = swift_slowAlloc();
          uint64_t v803 = v720;
          uint64_t v804 = 0;
          *(_WORD *)v719 = 515;
          v805 = v719 + 2;
          v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
          uint64_t v802 = v709;
          os_log_t v160 = (os_log_t)v780[0];
          sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
          if (!v160)
          {
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v710;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D43267B4;
            uint64_t v802 = v712;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v713;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
            uint64_t v802 = v714;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
            uint64_t v802 = v716;
            sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
            swift_release();
            _os_log_impl(&dword_1D4271000, v708, (os_log_type_t)v791, "Playing left offline for %{private,mask.hash}s.", v719, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1D9447730](v720, -1, -1);
            sub_1D4304EB0();
          }
          goto LABEL_270;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        ((void (*)(char *, uint64_t))v794)(v733, v799);
        v721 = v731;
        uint64_t v722 = (uint64_t)v731;
        int v723 = 1;
LABEL_266:
        sub_1D4318370(v722, v723, v798, v773, (uint64_t)v796, v797);
        v531 = *(void (**)(char *, uint64_t))(v795 + 8);
        uint64_t v479 = v774;
        v531(v721, v774);
        sub_1D4276C3C(v790, (uint64_t *)&unk_1EBD7E930);
        sub_1D4276C3C(v788, (uint64_t *)&unk_1EBD7E930);
        sub_1D4276C3C(v789, (uint64_t *)&unk_1EBD7E930);
        sub_1D4276C3C(v793, (uint64_t *)&unk_1EA6C9468);
        sub_1D4276C3C(v786, (uint64_t *)&unk_1EA6C9468);
        sub_1D4276C3C(v787, (uint64_t *)&unk_1EA6C9468);
        uint64_t v532 = v792;
        goto LABEL_170;
      }
    }
    sub_1D4276C3C(v790, (uint64_t *)&unk_1EBD7E930);
    sub_1D4276C3C(v788, (uint64_t *)&unk_1EBD7E930);
    sub_1D4276C3C(v525, (uint64_t *)&unk_1EBD7E930);
    sub_1D4276C3C(v793, (uint64_t *)&unk_1EA6C9468);
    uint64_t v597 = v295;
    goto LABEL_199;
  }
  v780[0] = (uint64_t)v160;
  uint64_t v577 = sub_1D4351B94(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRelease();
  char v578 = sub_1D43EF794(v577, v240);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v579 = sub_1D430D640(&qword_1EA6C8F70, (uint64_t)qword_1EA6E4728);
  if (v578)
  {
    v580 = v738;
    uint64_t v581 = v799;
    v725(v738, v579, v799);
    uint64_t v582 = v781;
    uint64_t v583 = v774;
    (*(void (**)(char *, uint64_t, uint64_t))(v250 + 16))(v781, v792, v774);
    unint64_t v584 = (*(unsigned __int8 *)(v250 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80);
    uint64_t v585 = swift_allocObject();
    v727(v585 + v584, v582, v583);
    uint64_t v586 = swift_allocObject();
    *(void *)(v586 + 16) = sub_1D4326724;
    *(void *)(v586 + 24) = v585;
    uint64_t v587 = sub_1D44698F8();
    os_log_type_t v588 = sub_1D446A038();
    uint64_t v589 = swift_allocObject();
    *(unsigned char *)(v589 + 16) = 34;
    uint64_t v590 = swift_allocObject();
    *(unsigned char *)(v590 + 16) = 8;
    uint64_t v591 = swift_allocObject();
    *(void *)(v591 + 16) = sub_1D432763C;
    *(void *)(v591 + 24) = v586;
    uint64_t v592 = swift_allocObject();
    *(void *)(v592 + 16) = sub_1D4327638;
    *(void *)(v592 + 24) = v591;
    uint64_t v593 = swift_allocObject();
    sub_1D438C22C(v593, 3);
    void *v594 = sub_1D432764C;
    v594[1] = v589;
    v594[2] = sub_1D432764C;
    v594[3] = v590;
    v594[4] = sub_1D4327640;
    v594[5] = v592;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v587, v588))
    {
      v595 = (uint8_t *)sub_1D4304EA8();
      uint64_t v596 = swift_slowAlloc();
      uint64_t v803 = v596;
      uint64_t v804 = 0;
      *(_WORD *)v595 = 258;
      v805 = v595 + 2;
      v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
      uint64_t v802 = v589;
      os_log_t v160 = (os_log_t)v780[0];
      sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
      if (!v160)
      {
        swift_release();
        v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
        uint64_t v802 = v590;
        sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
        swift_release();
        v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
        uint64_t v802 = v592;
        sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
        swift_release();
        _os_log_impl(&dword_1D4271000, v587, v588, "Stopping groupID offline for %{public}s.", v595, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v596, -1, -1);
        sub_1D4304EB0();
      }
      goto LABEL_270;
    }
  }
  else
  {
    v580 = v741;
    uint64_t v581 = v799;
    v725(v741, v579, v799);
    long long v624 = v781;
    uint64_t v625 = v774;
    (*(void (**)(char *, uint64_t, uint64_t))(v250 + 16))(v781, v792, v774);
    unint64_t v626 = (*(unsigned __int8 *)(v250 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80);
    uint64_t v627 = swift_allocObject();
    v727(v627 + v626, v624, v625);
    uint64_t v628 = swift_allocObject();
    *(void *)(v628 + 16) = sub_1D4326724;
    *(void *)(v628 + 24) = v627;
    uint64_t v587 = sub_1D44698F8();
    os_log_type_t v629 = sub_1D446A018();
    uint64_t v630 = swift_allocObject();
    *(unsigned char *)(v630 + 16) = 34;
    uint64_t v631 = swift_allocObject();
    *(unsigned char *)(v631 + 16) = 8;
    uint64_t v632 = swift_allocObject();
    *(void *)(v632 + 16) = sub_1D4326728;
    *(void *)(v632 + 24) = v628;
    uint64_t v633 = swift_allocObject();
    *(void *)(v633 + 16) = sub_1D4327638;
    *(void *)(v633 + 24) = v632;
    uint64_t v634 = swift_allocObject();
    sub_1D438C22C(v634, 3);
    void *v635 = sub_1D432764C;
    v635[1] = v630;
    v635[2] = sub_1D432764C;
    v635[3] = v631;
    v635[4] = sub_1D4327640;
    v635[5] = v633;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v587, v629))
    {
      v636 = (uint8_t *)sub_1D4304EA8();
      uint64_t v637 = swift_slowAlloc();
      uint64_t v803 = v637;
      uint64_t v804 = 0;
      *(_WORD *)v636 = 258;
      v805 = v636 + 2;
      v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
      uint64_t v802 = v630;
      os_log_t v160 = (os_log_t)v780[0];
      sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
      if (!v160)
      {
        swift_release();
        v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D432764C;
        uint64_t v802 = v631;
        sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
        swift_release();
        v801 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D4327640;
        uint64_t v802 = v633;
        sub_1D4304FD0(&v801, (uint64_t)&v805, (uint64_t)&v804, (uint64_t)&v803);
        swift_release();
        _os_log_impl(&dword_1D4271000, v587, v629, "Error: Unhandled case - Stopping groupID offline for %{public}s.", v636, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v637, -1, -1);
        sub_1D4304EB0();
      }
      goto LABEL_270;
    }
  }
  swift_release();
  swift_release();
  swift_release();

  ((void (*)(char *, uint64_t))v794)(v580, v581);
  uint64_t v294 = v774;
  uint64_t v296 = v792;
  uint64_t v297 = v793;
  uint64_t v298 = v792;
  int v299 = 0;
LABEL_69:
  sub_1D4318370(v298, v299, v798, v773, (uint64_t)v796, v797);
  sub_1D4276C3C(v790, (uint64_t *)&unk_1EBD7E930);
  sub_1D4276C3C(v788, (uint64_t *)&unk_1EBD7E930);
  sub_1D4276C3C(v789, (uint64_t *)&unk_1EBD7E930);
  sub_1D4276C3C(v297, (uint64_t *)&unk_1EA6C9468);
  uint64_t v300 = v295;
LABEL_70:
  sub_1D4276C3C(v300, (uint64_t *)&unk_1EA6C9468);
  sub_1D4276C3C(v787, (uint64_t *)&unk_1EA6C9468);
  (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v296, v294);
LABEL_150:
  uint64_t v497 = (uint64_t)v784;
LABEL_151:
  sub_1D42D2058(v497, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
}

uint64_t sub_1D4318370(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v47 = a4;
  int v46 = a2;
  uint64_t v8 = sub_1D4469688();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v43 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v36 - v12;
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D4469928();
  sub_1D42D7FAC(v14, (uint64_t)qword_1EA6E4710);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15(v13, a1, v8);
  swift_retain_n();
  uint64_t v16 = sub_1D44698F8();
  os_log_type_t v17 = sub_1D446A038();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    int v39 = v18;
    uint64_t v20 = v19;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v49 = v38;
    *(_DWORD *)uint64_t v20 = 136446723;
    uint64_t v42 = a1;
    swift_retain();
    os_log_t v37 = v16;
    unint64_t v21 = sub_1D433514C();
    uint64_t v40 = v15;
    unint64_t v23 = v22;
    swift_release();
    uint64_t v48 = sub_1D42CB9EC(v21, v23, &v49);
    uint64_t v41 = v10;
    a1 = v42;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v20 + 12) = 2160;
    uint64_t v48 = 1752392040;
    sub_1D446A188();
    *(_WORD *)(v20 + 22) = 2081;
    sub_1D4326EB4((unint64_t *)&qword_1EA6C92C0, MEMORY[0x1E4F27990]);
    uint64_t v24 = sub_1D446A6D8();
    uint64_t v48 = sub_1D42CB9EC(v24, v25, &v49);
    uint64_t v15 = v40;
    uint64_t v10 = v41;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
    os_log_t v26 = v37;
    _os_log_impl(&dword_1D4271000, v37, (os_log_type_t)v39, "performOffline %{public}s for %{private,mask.hash}s.", (uint8_t *)v20, 0x20u);
    uint64_t v27 = v38;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v27, -1, -1);
    MEMORY[0x1D9447730](v20, -1, -1);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  }
  int v28 = *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_soundQueueingConfirmed);
  uint64_t v29 = v43;
  v15(v43, a1, v8);
  unint64_t v30 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v31 = (v10 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v32 + v30, v29, v8);
  uint64_t v33 = (void *)(v32 + v31);
  uint64_t v34 = v45;
  *uint64_t v33 = v44;
  v33[1] = v34;
  swift_retain();
  swift_retain();
  sub_1D431AD00(a1, v46 & 1, v28, (uint64_t)sub_1D4326E10, v32);
  return swift_release();
}

uint64_t sub_1D43187D4(char *a1, uint64_t a2, uint64_t a3, void (*a4)(char **, uint64_t, void *, uint64_t), uint64_t a5)
{
  uint64_t v10 = sub_1D4469688();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D4469928();
  sub_1D42D7FAC(v14, (uint64_t)qword_1EA6E4710);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  swift_retain_n();
  uint64_t v15 = sub_1D44698F8();
  os_log_type_t v16 = sub_1D446A038();
  int v17 = v16;
  if (!os_log_type_enabled(v15, v16))
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

    if (a1) {
      goto LABEL_5;
    }
LABEL_10:
    LOBYTE(v45) = 4;
    sub_1D42D5DA0(&qword_1EBD7D9F0);
    uint64_t v31 = *(void *)(type metadata accessor for FMIPDevice() - 8);
    unint64_t v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1D446E050;
    sub_1D42D2238(a2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, v33 + v32, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v34 = v33;
    uint64_t v35 = 0;
    goto LABEL_13;
  }
  uint64_t v18 = swift_slowAlloc();
  uint64_t v43 = a5;
  uint64_t v19 = v18;
  uint64_t v41 = swift_slowAlloc();
  uint64_t v45 = (char *)v41;
  *(_DWORD *)uint64_t v19 = 136446723;
  swift_retain();
  unint64_t v20 = sub_1D433514C();
  uint64_t v42 = a1;
  uint64_t v21 = v20;
  HIDWORD(v40) = v17;
  unint64_t v23 = v22;
  swift_release();
  uint64_t v44 = sub_1D42CB9EC(v21, v23, (uint64_t *)&v45);
  sub_1D446A188();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v19 + 12) = 2160;
  uint64_t v44 = 1752392040;
  sub_1D446A188();
  *(_WORD *)(v19 + 22) = 2081;
  sub_1D4326EB4((unint64_t *)&qword_1EA6C92C0, MEMORY[0x1E4F27990]);
  uint64_t v24 = sub_1D446A6D8();
  uint64_t v44 = sub_1D42CB9EC(v24, v25, (uint64_t *)&v45);
  a1 = v42;
  sub_1D446A188();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  _os_log_impl(&dword_1D4271000, v15, BYTE4(v40), "FMIPDeviceActionsController: %{public}s sound performed for %{private,mask.hash}s.", (uint8_t *)v19, 0x20u);
  uint64_t v26 = v41;
  swift_arrayDestroy();
  MEMORY[0x1D9447730](v26, -1, -1);
  MEMORY[0x1D9447730](v19, -1, -1);

  if (!a1) {
    goto LABEL_10;
  }
LABEL_5:
  uint64_t v45 = a1;
  uint64_t v27 = a1;
  sub_1D42D5DA0(&qword_1EA6C9360);
  type metadata accessor for CommandError(0);
  if (swift_dynamicCast())
  {
    int v28 = a1;
    uint64_t v29 = (void *)v44;
    sub_1D4326EB4((unint64_t *)&unk_1EA6C95A8, type metadata accessor for CommandError);
    sub_1D4469388();

    a1 = v28;
    if ((unint64_t)(v45 - 5) >= 6) {
      char v30 = 0;
    }
    else {
      char v30 = 0xA0008070703uLL >> (8 * (v45 - 5));
    }
  }
  else
  {
    char v30 = 0;
  }
  LOBYTE(v45) = v30;
  sub_1D42D5DA0(&qword_1EBD7D9F0);
  uint64_t v36 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1D446E050;
  sub_1D42D2238(a2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, v38 + v37, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v34 = v38;
  uint64_t v35 = a1;
LABEL_13:
  a4(&v45, v34, v35, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4318DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v32 = a3;
  uint64_t v7 = type metadata accessor for FMIPDevice();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D4469928();
  sub_1D42D7FAC(v10, (uint64_t)qword_1EA6E4710);
  swift_retain_n();
  uint64_t v11 = sub_1D44698F8();
  os_log_type_t v12 = sub_1D446A038();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v30 = a2;
    uint64_t v31 = v3;
    uint64_t v15 = v14;
    uint64_t v34 = v14;
    *(_DWORD *)uint64_t v13 = 136446210;
    swift_retain();
    unint64_t v16 = sub_1D433514C();
    unint64_t v18 = v17;
    swift_release();
    uint64_t v33 = sub_1D42CB9EC(v16, v18, &v34);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1D4271000, v11, v12, "FMIPDeviceActionsController: performing online %{public}s sound.", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v19 = v15;
    a2 = v30;
    uint64_t v4 = v31;
    MEMORY[0x1D9447730](v19, -1, -1);
    MEMORY[0x1D9447730](v13, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  sub_1D42D2238(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v20 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_channels);
  char v21 = *(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_safetyWarningConfirmed);
  type metadata accessor for FMIPPlaySoundRequest();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + qword_1EA6E49D8) = v20;
  sub_1D42D2238((uint64_t)v9, v22 + qword_1EA6E49D0, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  *(unsigned char *)(v22 + qword_1EA6E49E0) = v21;
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1D4332A24(0x6E756F5379616C70, 0xE900000000000064, 0, 0, 1);
  sub_1D42D2058((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v23 = v4[9];
  uint64_t v24 = v4[10];
  sub_1D42C26F4(v4 + 6, v23);
  unint64_t v25 = (void *)swift_allocObject();
  void v25[2] = a1;
  v25[3] = a2;
  v25[4] = v32;
  v25[5] = v4;
  uint64_t v26 = *(void (**)(void *, uint64_t (*)(void *, void *), void *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t v27 = type metadata accessor for FMIPPlaySoundResponse();
  swift_retain();
  swift_retain();
  swift_retain();
  v26(v31, sub_1D43265C0, v25, v27, v23, v24);
  swift_release();
  return swift_release();
}