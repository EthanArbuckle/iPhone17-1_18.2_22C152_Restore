uint64_t sub_1D4319170(void *a1, void *a2, uint64_t a3, char *a4, uint64_t a5, void *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  id v59;
  id v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void (*v76)(uint64_t, void (*)(uint64_t, uint64_t), void *, uint64_t, uint64_t);
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  void *v88;
  uint64_t v89;

  v83 = a6;
  v85 = a5;
  v10 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v10 - 8);
  v84 = (uint64_t)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D42D5DA0(&qword_1EBD7CEA0);
  MEMORY[0x1F4188790](v12 - 8);
  v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  v15 = sub_1D4469928();
  v16 = sub_1D42D7FAC(v15, (uint64_t)qword_1EA6E4710);
  swift_retain_n();
  swift_retain_n();
  v17 = sub_1D44698F8();
  v18 = sub_1D446A038();
  v19 = os_log_type_enabled(v17, v18);
  v86 = v16;
  v87 = a2;
  v82 = v14;
  if (v19)
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v89 = v21;
    *(_DWORD *)v20 = 136446466;
    swift_retain();
    v22 = sub_1D433514C();
    v24 = v23;
    swift_release();
    v88 = (void *)sub_1D42CB9EC(v22, v24, &v89);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v20 + 12) = 2080;
    v88 = a1;
    sub_1D42D5DA0(&qword_1EA6C9AB0);
    v25 = sub_1D446A158();
    v88 = (void *)sub_1D42CB9EC(v25, v26, &v89);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1D4271000, v17, v18, "FMIPDeviceActionsController: %{public}s sound action response received: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v21, -1, -1);
    MEMORY[0x1D9447730](v20, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_release_n();
  }

  swift_retain_n();
  swift_retain_n();
  v27 = sub_1D44698F8();
  v28 = sub_1D446A038();
  if (!os_log_type_enabled(v27, v28))
  {
    swift_release_n();
    swift_release_n();
    goto LABEL_18;
  }
  v29 = a4;
  v30 = swift_slowAlloc();
  v81 = swift_slowAlloc();
  v89 = v81;
  *(_DWORD *)v30 = 136446466;
  swift_retain();
  v31 = sub_1D433514C();
  v33 = v32;
  swift_release();
  v88 = (void *)sub_1D42CB9EC(v31, v33, &v89);
  sub_1D446A188();
  swift_bridgeObjectRelease();
  swift_release_n();
  *(_WORD *)(v30 + 12) = 2080;
  if (a1)
  {
    v34 = a1[7];
    a4 = v29;
    if (v34)
    {
      if (*(void *)(v34 + 16))
      {
        v35 = type metadata accessor for FMIPDevice();
        v36 = (uint64_t)v82;
        sub_1D42A3A74(v34+ *(int *)(v35 + 112)+ ((*(unsigned __int8 *)(*(void *)(v35 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v35 - 8) + 80)), (uint64_t)v82, &qword_1EBD7CEA0);
        v37 = type metadata accessor for FMIPPlaySoundMetadata();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v36, 1, v37) != 1)
        {
          v80 = FMIPPlaySoundMetadata.debugDescription.getter();
          v38 = v79;
          sub_1D42D2058(v36, (uint64_t (*)(void))type metadata accessor for FMIPPlaySoundMetadata);
          v39 = v80;
          goto LABEL_17;
        }
        sub_1D4276C3C(v36, &qword_1EBD7CEA0);
      }
      v38 = 0xE300000000000000;
    }
    else
    {
      v38 = 0xE300000000000000;
    }
  }
  else
  {
    v38 = 0xE300000000000000;
    a4 = v29;
  }
  v39 = 7104878;
LABEL_17:
  v88 = (void *)sub_1D42CB9EC(v39, v38, &v89);
  sub_1D446A188();
  swift_bridgeObjectRelease();
  swift_release_n();
  _os_log_impl(&dword_1D4271000, v27, v28, "FMIPDeviceActionsController: %{public}s sound metadata:\n%s", (uint8_t *)v30, 0x16u);
  v40 = v81;
  swift_arrayDestroy();
  MEMORY[0x1D9447730](v40, -1, -1);
  MEMORY[0x1D9447730](v30, -1, -1);
LABEL_18:

  swift_retain_n();
  swift_retain_n();
  v41 = sub_1D44698F8();
  v42 = sub_1D446A038();
  if (os_log_type_enabled(v41, v42))
  {
    v82 = a4;
    v43 = 7104878;
    v44 = swift_slowAlloc();
    v45 = swift_slowAlloc();
    v89 = v45;
    *(_DWORD *)v44 = 136446466;
    swift_retain();
    v46 = sub_1D433514C();
    v48 = v47;
    swift_release();
    v88 = (void *)sub_1D42CB9EC(v46, v48, &v89);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v44 + 12) = 2080;
    if (a1 && (v49 = a1[7]) != 0 && *(void *)(v49 + 16))
    {
      type metadata accessor for FMIPDevice();
      v50 = swift_bridgeObjectRetain();
      v43 = MEMORY[0x1D9446130](v50, &type metadata for FMIPAudioChannel);
      v52 = v51;
      swift_bridgeObjectRelease();
    }
    else
    {
      v52 = 0xE300000000000000;
    }
    v88 = (void *)sub_1D42CB9EC(v43, v52, &v89);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1D4271000, v41, v42, "FMIPDeviceActionsController: %{public}s sound channels:\n%s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v45, -1, -1);
    MEMORY[0x1D9447730](v44, -1, -1);

    a4 = v82;
    v53 = v87;
    if (v87) {
      goto LABEL_30;
    }
  }
  else
  {
    swift_release_n();
    swift_release_n();

    v53 = v87;
    if (v87) {
      goto LABEL_30;
    }
  }
  if (a1)
  {
    if (*(unsigned char *)(a3 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_safetyWarningConfirmed))
    {
      v54 = OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
      v55 = type metadata accessor for FMIPDevice();
      v56 = v84;
      sub_1D42A3A74(a3 + *(int *)(v55 + 128) + v54, v84, &qword_1EBD7E670);
      v57 = type metadata accessor for FMIPItemGroup();
      v58 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 48))(v56, 1, v57) == 1;
      swift_retain();
      sub_1D4276C3C(v56, &qword_1EBD7E670);
    }
    else
    {
      swift_retain();
      v58 = 0;
    }
    sub_1D43BD04C(&v89);
    if (((1 << v89) & 0x1FFB) == 0 || v58)
    {
      sub_1D43BD04C(&v89);
      v78 = a1[7];
      swift_bridgeObjectRetain();
      ((void (*)(uint64_t *, uint64_t, void, uint64_t))a4)(&v89, v78, 0, a3);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      v71 = v83[9];
      v72 = v83[10];
      v87 = sub_1D42C26F4(v83 + 6, v71);
      v73 = a3 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
      v74 = swift_allocObject();
      swift_weakInit();
      v75 = (void *)swift_allocObject();
      v75[2] = v74;
      v75[3] = a4;
      v75[4] = v85;
      v75[5] = a3;
      v76 = *(void (**)(uint64_t, void (*)(uint64_t, uint64_t), void *, uint64_t, uint64_t))(v72 + 72);
      swift_retain();
      swift_retain();
      swift_retain();
      v76(v73, sub_1D4326650, v75, v71, v72);
      swift_release();
      swift_release();
      return swift_release();
    }
  }
LABEL_30:
  swift_retain();
  v59 = v53;
  swift_retain();
  v60 = v53;
  v61 = sub_1D44698F8();
  v62 = sub_1D446A038();
  if (os_log_type_enabled(v61, v62))
  {
    v63 = swift_slowAlloc();
    v64 = swift_slowAlloc();
    v89 = v64;
    *(_DWORD *)v63 = 136446466;
    swift_retain();
    v65 = sub_1D433514C();
    v67 = v66;
    swift_release();
    v88 = (void *)sub_1D42CB9EC(v65, v67, &v89);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v63 + 12) = 2082;
    v88 = v87;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    v68 = sub_1D446A158();
    v88 = (void *)sub_1D42CB9EC(v68, v69, &v89);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v61, v62, "FMIPDeviceActionsController: error received for %{public}s sound request: %{public}s", (uint8_t *)v63, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v64, -1, -1);
    v70 = v63;
    v53 = v87;
    MEMORY[0x1D9447730](v70, -1, -1);
  }
  else
  {
    swift_release_n();
  }
  LOBYTE(v89) = 0;
  return ((uint64_t (*)(uint64_t *, void, id, uint64_t))a4)(&v89, 0, v53, a3);
}

void sub_1D4319D54(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t, void, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_1D42D5DA0(&qword_1EBD7CEA0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  v128 = (unsigned __int8 *)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v125 = (uint64_t)&v115 - v13;
  uint64_t v127 = type metadata accessor for FMIPDevice();
  uint64_t v14 = *(void *)(v127 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v127);
  v17 = (uint64_t *)((char *)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  v20 = (char *)&v115 - v19;
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  v23 = (uint64_t *)((char *)&v115 - v22);
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  v129 = (uint64_t *)((char *)&v115 - v25);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  v126 = (uint64_t *)((char *)&v115 - v27);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v130 = (uint64_t)&v115 - v29;
  MEMORY[0x1F4188790](v28);
  v31 = (uint64_t *)((char *)&v115 - v30);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v119 = a6;
    v123 = (void *)Strong;
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_1D4469928();
    uint64_t v34 = sub_1D42D7FAC(v33, (uint64_t)qword_1EA6E4710);
    sub_1D42D2238(a1, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v124 = v34;
    v35 = sub_1D44698F8();
    os_log_type_t v36 = sub_1D446A038();
    BOOL v37 = os_log_type_enabled(v35, v36);
    uint64_t v120 = a5;
    v121 = a4;
    v117 = v23;
    uint64_t v118 = v14;
    v116 = v17;
    v122 = (uint64_t *)v20;
    if (v37)
    {
      v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v132 = v39;
      *(_DWORD *)v38 = 136315138;
      uint64_t v40 = a1;
      uint64_t v41 = *v31;
      unint64_t v42 = v31[1];
      swift_bridgeObjectRetain();
      uint64_t v43 = v41;
      a1 = v40;
      uint64_t v131 = sub_1D42CB9EC(v43, v42, &v132);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D42D2058((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      _os_log_impl(&dword_1D4271000, v35, v36, "FMIPDeviceActionsController: received callback for monitored device: %s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v39, -1, -1);
      MEMORY[0x1D9447730](v38, -1, -1);
    }
    else
    {
      sub_1D42D2058((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    }

    uint64_t v44 = v130;
    sub_1D42D2238(a1, v130, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    v45 = sub_1D44698F8();
    os_log_type_t v46 = sub_1D446A038();
    BOOL v47 = os_log_type_enabled(v45, v46);
    uint64_t v48 = v127;
    if (v47)
    {
      v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v132 = v50;
      *(_DWORD *)v49 = 136315138;
      uint64_t v51 = v44 + *(int *)(v48 + 112);
      uint64_t v52 = v125;
      sub_1D42A3A74(v51, v125, &qword_1EBD7CEA0);
      uint64_t v53 = type metadata accessor for FMIPPlaySoundMetadata();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v52, 1, v53) == 1)
      {
        sub_1D4276C3C(v52, &qword_1EBD7CEA0);
        unint64_t v54 = 0xE300000000000000;
        unint64_t v55 = 7104878;
      }
      else
      {
        unint64_t v55 = FMIPPlaySoundMetadata.debugDescription.getter();
        unint64_t v54 = v56;
        sub_1D42D2058(v52, (uint64_t (*)(void))type metadata accessor for FMIPPlaySoundMetadata);
      }
      uint64_t v131 = sub_1D42CB9EC(v55, v54, &v132);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D42D2058(v130, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      _os_log_impl(&dword_1D4271000, v45, v46, "FMIPDeviceActionsController: sound metadata %s", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v50, -1, -1);
      MEMORY[0x1D9447730](v49, -1, -1);
    }
    else
    {
      sub_1D42D2058(v44, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    }

    v57 = v128;
    sub_1D42A3A74(a1 + *(int *)(v48 + 112), (uint64_t)v128, &qword_1EBD7CEA0);
    uint64_t v58 = type metadata accessor for FMIPPlaySoundMetadata();
    int v59 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 48))(v57, 1, v58);
    v60 = v129;
    if (v59 == 1)
    {
      sub_1D4276C3C((uint64_t)v57, &qword_1EBD7CEA0);
      v61 = v126;
      sub_1D42D2238(a1, (uint64_t)v126, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      v62 = sub_1D44698F8();
      os_log_type_t v63 = sub_1D446A038();
      if (os_log_type_enabled(v62, v63))
      {
        v64 = (uint8_t *)swift_slowAlloc();
        uint64_t v65 = swift_slowAlloc();
        uint64_t v132 = v65;
        *(_DWORD *)v64 = 136315138;
        uint64_t v66 = *v61;
        unint64_t v67 = v61[1];
        swift_bridgeObjectRetain();
        uint64_t v131 = sub_1D42CB9EC(v66, v67, &v132);
        sub_1D446A188();
        swift_bridgeObjectRelease();
        sub_1D42D2058((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        _os_log_impl(&dword_1D4271000, v62, v63, "FMIPDeviceActionsController: keeping monitored device alive: %s", v64, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v65, -1, -1);
        MEMORY[0x1D9447730](v64, -1, -1);
      }
      else
      {
        sub_1D42D2058((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      }

      goto LABEL_35;
    }
    int v68 = *v57;
    sub_1D42D2058((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for FMIPPlaySoundMetadata);
    sub_1D42D2238(a1, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    v69 = sub_1D44698F8();
    os_log_type_t v70 = sub_1D446A038();
    BOOL v71 = os_log_type_enabled(v69, v70);
    LODWORD(v130) = v68;
    if (v71)
    {
      uint64_t v72 = swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      uint64_t v132 = v73;
      *(_DWORD *)uint64_t v72 = 136315394;
      LOBYTE(v131) = v68;
      v128 = (unsigned __int8 *)a1;
      unint64_t v74 = FMIPActionStatus.description.getter();
      uint64_t v131 = sub_1D42CB9EC(v74, v75, &v132);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      *(_WORD *)(v72 + 12) = 2080;
      uint64_t v76 = *v60;
      unint64_t v77 = v60[1];
      swift_bridgeObjectRetain();
      uint64_t v131 = sub_1D42CB9EC(v76, v77, &v132);
      a1 = (uint64_t)v128;
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D42D2058((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      _os_log_impl(&dword_1D4271000, v69, v70, "FMIPDeviceActionsController: evaluating status: %s\ndevice: %s", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v73, -1, -1);
      MEMORY[0x1D9447730](v72, -1, -1);
    }
    else
    {
      sub_1D42D2058((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    }

    v78 = v122;
    char v79 = v130;
    if (((1 << v130) & 0xBE8) != 0)
    {
      v89 = v117;
      sub_1D42D2238(a1, (uint64_t)v117, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      v90 = sub_1D44698F8();
      os_log_type_t v91 = sub_1D446A038();
      if (os_log_type_enabled(v90, v91))
      {
        uint64_t v92 = swift_slowAlloc();
        uint64_t v93 = swift_slowAlloc();
        uint64_t v132 = v93;
        *(_DWORD *)uint64_t v92 = 136315394;
        char v94 = v130;
        LOBYTE(v131) = v130;
        v128 = (unsigned __int8 *)a1;
        unint64_t v95 = FMIPActionStatus.description.getter();
        uint64_t v131 = sub_1D42CB9EC(v95, v96, &v132);
        sub_1D446A188();
        swift_bridgeObjectRelease();
        *(_WORD *)(v92 + 12) = 2080;
        uint64_t v97 = *v89;
        unint64_t v98 = v89[1];
        swift_bridgeObjectRetain();
        uint64_t v131 = sub_1D42CB9EC(v97, v98, &v132);
        a1 = (uint64_t)v128;
        sub_1D446A188();
        swift_bridgeObjectRelease();
        sub_1D42D2058((uint64_t)v89, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        _os_log_impl(&dword_1D4271000, v90, v91, "FMIPDeviceActionsController: monitoring condition met for status:\n%s device: %s", (uint8_t *)v92, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v93, -1, -1);
        MEMORY[0x1D9447730](v92, -1, -1);

        uint64_t v99 = v118;
      }
      else
      {
        sub_1D42D2058((uint64_t)v89, (uint64_t (*)(void))type metadata accessor for FMIPDevice);

        uint64_t v99 = v118;
        char v94 = v130;
      }
      uint64_t v109 = v123[9];
      uint64_t v110 = v123[10];
      sub_1D42C26F4(v123 + 6, v109);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 80))(a1, v109, v110);
      LOBYTE(v132) = v94;
      goto LABEL_34;
    }
    if (((1 << v130) & 0x3E004) != 0)
    {
      sub_1D42D2238(a1, (uint64_t)v122, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      v80 = sub_1D44698F8();
      os_log_type_t v81 = sub_1D446A038();
      if (os_log_type_enabled(v80, v81))
      {
        v82 = (uint8_t *)swift_slowAlloc();
        uint64_t v83 = swift_slowAlloc();
        uint64_t v132 = v83;
        *(_DWORD *)v82 = 136315138;
        uint64_t v84 = (uint64_t)v78;
        uint64_t v85 = a1;
        uint64_t v86 = *v78;
        unint64_t v87 = v78[1];
        swift_bridgeObjectRetain();
        uint64_t v88 = v86;
        a1 = v85;
        char v79 = v130;
        uint64_t v131 = sub_1D42CB9EC(v88, v87, &v132);
        sub_1D446A188();
        swift_bridgeObjectRelease();
        sub_1D42D2058(v84, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        _os_log_impl(&dword_1D4271000, v80, v81, "FMIPDeviceActionsController: monitoring complete, action successful for device:\n%s", v82, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v83, -1, -1);
        MEMORY[0x1D9447730](v82, -1, -1);
      }
      else
      {
        sub_1D42D2058((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      }

      uint64_t v99 = v118;
      uint64_t v111 = v123[9];
      uint64_t v112 = v123[10];
      sub_1D42C26F4(v123 + 6, v111);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 80))(a1, v111, v112);
      LOBYTE(v132) = v79;
LABEL_34:
      sub_1D42D5DA0(&qword_1EBD7D9F0);
      unint64_t v113 = (*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
      uint64_t v114 = swift_allocObject();
      *(_OWORD *)(v114 + 16) = xmmword_1D446E050;
      sub_1D42D2238(a1, v114 + v113, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      v121(&v132, v114, 0, v119);
      swift_bridgeObjectRelease();
LABEL_35:
      swift_release();
      return;
    }
    v100 = v116;
    sub_1D42D2238(a1, (uint64_t)v116, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    v101 = sub_1D44698F8();
    os_log_type_t v102 = sub_1D446A038();
    if (os_log_type_enabled(v101, v102))
    {
      uint64_t v103 = swift_slowAlloc();
      uint64_t v104 = swift_slowAlloc();
      uint64_t v132 = v104;
      *(_DWORD *)uint64_t v103 = 136446466;
      LOBYTE(v131) = v130;
      unint64_t v105 = FMIPActionStatus.description.getter();
      uint64_t v131 = sub_1D42CB9EC(v105, v106, &v132);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      *(_WORD *)(v103 + 12) = 2080;
      uint64_t v107 = *v100;
      unint64_t v108 = v100[1];
      swift_bridgeObjectRetain();
      uint64_t v131 = sub_1D42CB9EC(v107, v108, &v132);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D42D2058((uint64_t)v100, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      _os_log_impl(&dword_1D4271000, v101, v102, "FMIPDeviceActionsController: keeping monitored device status is not met %{public}s for:\n%s", (uint8_t *)v103, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v104, -1, -1);
      MEMORY[0x1D9447730](v103, -1, -1);
      swift_release();
    }
    else
    {
      swift_release();
      sub_1D42D2058((uint64_t)v100, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    }
  }
}

uint64_t sub_1D431AD00(uint64_t a1, char a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v83 = a4;
  uint64_t v84 = a5;
  uint64_t v10 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D4469688();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v80 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v73 - v18;
  uint64_t v81 = v20;
  MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v73 - v21;
  uint64_t v82 = a1;
  if (a2)
  {
    LODWORD(v75) = a3;
    if (a3) {
      uint64_t v23 = 4;
    }
    else {
      uint64_t v23 = 0;
    }
    uint64_t v24 = self;
    uint64_t v25 = (void *)sub_1D4469648();
    id v26 = objc_msgSend(v24, sel_playSoundWithBeaconUUID_withContext_, v25, v23);

    uint64_t v27 = qword_1EA6C8F68;
    id v28 = v26;
    if (v27 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1D4469928();
    sub_1D42D7FAC(v29, (uint64_t)qword_1EA6E4710);
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    unint64_t v79 = (v14 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    unint64_t v77 = v30;
    v30(v22, a1, v13);
    id v31 = v28;
    v32 = sub_1D44698F8();
    os_log_type_t v33 = sub_1D446A038();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v76 = v12;
      uint64_t v35 = v34;
      uint64_t v73 = (void *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      unint64_t v74 = (void *)v36;
      *(_DWORD *)uint64_t v35 = 141558787;
      uint64_t v85 = 1752392040;
      uint64_t v86 = v36;
      uint64_t v78 = v6;
      sub_1D446A188();
      *(_WORD *)(v35 + 12) = 2081;
      sub_1D4326EB4((unint64_t *)&qword_1EA6C92C0, MEMORY[0x1E4F27990]);
      uint64_t v37 = sub_1D446A6D8();
      uint64_t v85 = sub_1D42CB9EC(v37, v38, &v86);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
      *(_WORD *)(v35 + 22) = 1024;
      LODWORD(v85) = v75 & 1;
      sub_1D446A188();
      *(_WORD *)(v35 + 28) = 2112;
      uint64_t v85 = (uint64_t)v31;
      id v39 = v31;
      uint64_t v6 = v78;
      sub_1D446A188();
      uint64_t v40 = v73;
      *uint64_t v73 = v31;

      _os_log_impl(&dword_1D4271000, v32, v33, "FMIPDeviceActionsController: Offline play sound %{private,mask.hash}s queueConfirmed: %{BOOL}d command %@.", (uint8_t *)v35, 0x26u);
      sub_1D42D5DA0(&qword_1EBD7E830);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v40, -1, -1);
      uint64_t v41 = v74;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v41, -1, -1);
      uint64_t v42 = v35;
      uint64_t v12 = v76;
      MEMORY[0x1D9447730](v42, -1, -1);

      id v31 = v39;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    }
    uint64_t v43 = v77;
  }
  else
  {
    uint64_t v78 = v6;
    uint64_t v44 = self;
    v45 = (void *)sub_1D4469648();
    id v46 = objc_msgSend(v44, sel_stopSoundWithBeaconUUID_, v45);

    uint64_t v47 = qword_1EA6C8F68;
    id v48 = v46;
    if (v47 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_1D4469928();
    sub_1D42D7FAC(v49, (uint64_t)qword_1EA6E4710);
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    unint64_t v79 = (v14 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v43(v19, a1, v13);
    id v31 = v48;
    uint64_t v50 = sub_1D44698F8();
    os_log_type_t v51 = sub_1D446A038();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      unint64_t v77 = v43;
      uint64_t v53 = v52;
      unint64_t v74 = (void *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      uint64_t v75 = v54;
      *(_DWORD *)uint64_t v53 = 141558531;
      uint64_t v85 = 1752392040;
      uint64_t v86 = v54;
      sub_1D446A188();
      *(_WORD *)(v53 + 12) = 2081;
      uint64_t v76 = v12;
      sub_1D4326EB4((unint64_t *)&qword_1EA6C92C0, MEMORY[0x1E4F27990]);
      uint64_t v55 = sub_1D446A6D8();
      uint64_t v85 = sub_1D42CB9EC(v55, v56, &v86);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
      *(_WORD *)(v53 + 22) = 2112;
      uint64_t v85 = (uint64_t)v31;
      id v57 = v31;
      uint64_t v12 = v76;
      sub_1D446A188();
      uint64_t v58 = v74;
      *unint64_t v74 = v31;

      _os_log_impl(&dword_1D4271000, v50, v51, "FMIPDeviceActionsController: Offline stop sound %{private,mask.hash}s command %@.", (uint8_t *)v53, 0x20u);
      sub_1D42D5DA0(&qword_1EBD7E830);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v58, -1, -1);
      uint64_t v59 = v75;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v59, -1, -1);
      uint64_t v60 = v53;
      uint64_t v43 = v77;
      MEMORY[0x1D9447730](v60, -1, -1);

      id v31 = v57;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    }
    uint64_t v6 = v78;
  }
  uint64_t v61 = *(void *)(v6 + 168);
  uint64_t v62 = sub_1D4469E88();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v12, 1, 1, v62);
  os_log_type_t v63 = *(void **)(v6 + 32);
  v64 = v80;
  v43(v80, v82, v13);
  unint64_t v65 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v66 = (v81 + v65 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (char *)swift_allocObject();
  *((void *)v67 + 2) = 0;
  *((void *)v67 + 3) = 0;
  *((void *)v67 + 4) = v63;
  *((void *)v67 + 5) = v31;
  *((void *)v67 + 6) = v61;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v67[v65], v64, v13);
  int v68 = &v67[v66];
  uint64_t v69 = v84;
  *(void *)int v68 = v83;
  *((void *)v68 + 1) = v69;
  id v70 = v63;
  id v71 = v31;
  swift_retain();
  swift_retain();
  sub_1D431C094((uint64_t)v12, (uint64_t)&unk_1EA6C9A88, (uint64_t)v67);
  swift_release();

  return sub_1D4276C3C((uint64_t)v12, (uint64_t *)&unk_1EBD7E7F8);
}

uint64_t sub_1D431B5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a8;
  v8[22] = v13;
  v8[19] = a6;
  v8[20] = a7;
  v8[17] = a4;
  v8[18] = a5;
  uint64_t v9 = sub_1D4469688();
  v8[23] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[24] = v10;
  v8[25] = *(void *)(v10 + 64);
  v8[26] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D431B690, 0, 0);
}

uint64_t sub_1D431B690()
{
  uint64_t v1 = *(void *)(v0 + 152);
  *(void *)(v0 + 216) = objc_msgSend(*(id *)(v0 + 136), sel_executeCommand_, *(void *)(v0 + 144));
  return MEMORY[0x1F4188298](sub_1D431B710, v1, 0);
}

uint64_t sub_1D431B710()
{
  uint64_t v1 = *(void **)(v0 + 216);
  v2 = (void *)(*(void *)(v0 + 152) + 112);
  swift_beginAccess();
  MEMORY[0x1D94460A0](v1);
  if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1D4469DB8();
  }
  sub_1D4469E08();
  sub_1D4469D98();
  swift_endAccess();
  return MEMORY[0x1F4188298](sub_1D431B7E8, 0, 0);
}

uint64_t sub_1D431B7E8()
{
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v21 = v0[23];
  uint64_t v22 = v0[22];
  uint64_t v23 = (void *)v0[27];
  uint64_t v4 = v0[21];
  uint64_t v27 = v0[20];
  uint64_t v5 = (void *)v0[18];
  uint64_t v28 = v0[19];
  id v26 = *(void (**)(uint64_t))(v3 + 16);
  v26(v1);
  unint64_t v25 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (v2 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  uint64_t v24 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32);
  v24(v7 + v25, v1, v21);
  v8 = (void *)(v7 + v6);
  void *v8 = v4;
  v8[1] = v22;
  *(void *)(v7 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)) = v28;
  *(void *)(v7 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) = v23;
  v0[6] = sub_1D43261FC;
  v0[7] = v7;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D435C428;
  v0[5] = &unk_1F2C06658;
  uint64_t v9 = _Block_copy(v0 + 2);
  id v10 = v23;
  id v11 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  id v12 = objc_msgSend(v10, sel_addFailureBlock_, v9);
  _Block_release(v9);

  ((void (*)(uint64_t, uint64_t, uint64_t))v26)(v1, v27, v21);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  v24(v13 + v25, v1, v21);
  uint64_t v14 = (void *)(v13 + v6);
  *uint64_t v14 = v4;
  v14[1] = v22;
  *(void *)(v13 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)) = v28;
  *(void *)(v13 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) = v10;
  v0[12] = sub_1D432632C;
  v0[13] = v13;
  v0[8] = MEMORY[0x1E4F143A8];
  v0[9] = 1107296256;
  v0[10] = sub_1D435C430;
  v0[11] = &unk_1F2C066A8;
  uint64_t v15 = _Block_copy(v0 + 8);
  id v16 = v10;
  id v17 = v11;
  swift_retain();
  swift_retain();
  swift_release();
  id v18 = objc_msgSend(v16, sel_addSuccessBlock_, v15);
  _Block_release(v15);

  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_1D431BB58(void *a1, void *a2, uint64_t a3, void (*a4)(void *), uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v51 = a5;
  uint64_t v52 = a4;
  uint64_t v12 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D4469688();
  uint64_t v55 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v54 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = qword_1EA6C8F68;
  id v18 = a2;
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1D4469928();
  sub_1D42D7FAC(v19, (uint64_t)qword_1EA6E4710);
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v54, a3, v15);
  id v20 = a1;
  id v21 = v18;
  uint64_t v53 = v15;
  id v22 = v21;
  id v23 = a1;
  uint64_t v24 = sub_1D44698F8();
  os_log_type_t v25 = sub_1D446A038();
  int v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v50 = a6;
    uint64_t v28 = v27;
    uint64_t v29 = (void *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v56 = (uint64_t)v22;
    uint64_t v57 = v49;
    *(_DWORD *)uint64_t v28 = 138413059;
    uint64_t v46 = v28 + 4;
    int v48 = v26;
    id v30 = v22;
    os_log_t v47 = v24;
    id v31 = v30;
    sub_1D446A188();
    *uint64_t v29 = v22;

    *(_WORD *)(v28 + 12) = 2082;
    uint64_t v56 = (uint64_t)a1;
    id v32 = a1;
    sub_1D42D5DA0(&qword_1EA6C9360);
    uint64_t v33 = sub_1D4469B68();
    uint64_t v56 = sub_1D42CB9EC(v33, v34, &v57);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    *(_WORD *)(v28 + 22) = 2160;
    uint64_t v56 = 1752392040;
    sub_1D446A188();
    *(_WORD *)(v28 + 32) = 2081;
    sub_1D4326EB4((unint64_t *)&qword_1EA6C92C0, MEMORY[0x1E4F27990]);
    uint64_t v36 = v53;
    uint64_t v35 = v54;
    uint64_t v37 = sub_1D446A6D8();
    uint64_t v56 = sub_1D42CB9EC(v37, v38, &v57);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v35, v36);
    os_log_t v39 = v47;
    _os_log_impl(&dword_1D4271000, v47, (os_log_type_t)v48, "FMIPDeviceActionsController: Offline sound command %@ failed %{public}s %{private,mask.hash}s.", (uint8_t *)v28, 0x2Au);
    sub_1D42D5DA0(&qword_1EBD7E830);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v29, -1, -1);
    uint64_t v40 = v49;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v40, -1, -1);
    uint64_t v41 = v28;
    a6 = v50;
    MEMORY[0x1D9447730](v41, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v53);
  }
  v52(a1);
  uint64_t v42 = sub_1D4469E88();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v14, 1, 1, v42);
  uint64_t v43 = (void *)swift_allocObject();
  v43[2] = 0;
  v43[3] = 0;
  v43[4] = a6;
  v43[5] = a7;
  swift_retain();
  id v44 = a7;
  sub_1D431C094((uint64_t)v14, (uint64_t)&unk_1EA6C9AA8, (uint64_t)v43);
  swift_release();
  return sub_1D4276C3C((uint64_t)v14, (uint64_t *)&unk_1EBD7E7F8);
}

uint64_t sub_1D431C074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 64) = a4;
  *(void *)(v5 + 72) = a5;
  return MEMORY[0x1F4188298](sub_1D4327648, a4, 0);
}

uint64_t sub_1D431C094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v6 - 8);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42A3A74(a1, (uint64_t)v8, (uint64_t *)&unk_1EBD7E7F8);
  uint64_t v9 = sub_1D4469E88();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1D4276C3C((uint64_t)v8, (uint64_t *)&unk_1EBD7E7F8);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_1D4469E58();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1D4469E78();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_1D431C288(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v41 = a4;
  uint64_t v42 = a6;
  uint64_t v40 = a5;
  uint64_t v10 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v43 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D4469688();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = qword_1EA6C8F68;
  id v17 = a2;
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1D4469928();
  sub_1D42D7FAC(v18, (uint64_t)qword_1EA6E4710);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
  id v19 = v17;
  id v20 = sub_1D44698F8();
  os_log_type_t v21 = sub_1D446A038();
  int v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v23 = swift_slowAlloc();
    os_log_t v39 = a7;
    uint64_t v24 = v23;
    os_log_type_t v25 = (void *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v44 = (uint64_t)v19;
    uint64_t v45 = v38;
    *(_DWORD *)uint64_t v24 = 138412803;
    int v37 = v22;
    os_log_t v36 = v20;
    id v26 = v19;
    sub_1D446A188();
    *os_log_type_t v25 = v19;

    *(_WORD *)(v24 + 12) = 2160;
    uint64_t v44 = 1752392040;
    sub_1D446A188();
    *(_WORD *)(v24 + 22) = 2081;
    sub_1D4326EB4((unint64_t *)&qword_1EA6C92C0, MEMORY[0x1E4F27990]);
    uint64_t v27 = sub_1D446A6D8();
    uint64_t v44 = sub_1D42CB9EC(v27, v28, &v45);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    id v20 = v36;
    _os_log_impl(&dword_1D4271000, v36, (os_log_type_t)v37, "FMIPDeviceActionsController: Offline sound command %@ succeeded for %{private,mask.hash}s", (uint8_t *)v24, 0x20u);
    sub_1D42D5DA0(&qword_1EBD7E830);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v25, -1, -1);
    uint64_t v29 = v38;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v29, -1, -1);
    uint64_t v30 = v24;
    a7 = v39;
    MEMORY[0x1D9447730](v30, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }

  v41(0);
  uint64_t v31 = sub_1D4469E88();
  uint64_t v32 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v43, 1, 1, v31);
  uint64_t v33 = (void *)swift_allocObject();
  v33[2] = 0;
  v33[3] = 0;
  v33[4] = v42;
  v33[5] = a7;
  swift_retain();
  id v34 = a7;
  sub_1D431C094(v32, (uint64_t)&unk_1EA6C9A98, (uint64_t)v33);
  swift_release();
  return sub_1D4276C3C(v32, (uint64_t *)&unk_1EBD7E7F8);
}

uint64_t sub_1D431C6F0(uint64_t a1, void (*a2)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t, void *, uint64_t), uint64_t a3)
{
  uint64_t v75 = a3;
  unint64_t v74 = a2;
  uint64_t v4 = type metadata accessor for FMIPDevice();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v68 = (uint64_t)v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for FMIPItem();
  uint64_t v72 = *(void *)(v70 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v70);
  uint64_t v76 = (uint64_t)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v66 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)v66 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v66 - v15;
  uint64_t v17 = sub_1D42D5DA0((uint64_t *)&unk_1EA6C9468);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v69 = (uint64_t)v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1D42D5DA0(&qword_1EBD7E670);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  int v22 = (char *)v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)v66 - v23;
  uint64_t v73 = a1;
  uint64_t v25 = *(int *)(v5 + 136);
  uint64_t v67 = a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
  uint64_t v26 = a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + v25;
  sub_1D42A3A74(v26, (uint64_t)v66 - v23, &qword_1EBD7E670);
  uint64_t v27 = type metadata accessor for FMIPItemGroup();
  unint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48);
  if (v28(v24, 1, v27) == 1)
  {
    sub_1D4276C3C((uint64_t)v24, &qword_1EBD7E670);
  }
  else
  {
    char v29 = FMIPItemGroup.shouldDisplaySeparatedLocation.getter();
    sub_1D42D2058((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    if (v29)
    {
      if (qword_1EA6C8F68 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1D4469928();
      sub_1D42D7FAC(v30, (uint64_t)qword_1EA6E4710);
      uint64_t v31 = sub_1D44698F8();
      os_log_type_t v32 = sub_1D446A038();
      if (!os_log_type_enabled(v31, v32)) {
        goto LABEL_45;
      }
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      id v34 = "FMIPDeviceActionsController: Perform Siri play sound-- classic sound on buds";
      goto LABEL_44;
    }
  }
  sub_1D42A3A74(v26, (uint64_t)v22, &qword_1EBD7E670);
  if (v28(v22, 1, v27) == 1)
  {
    sub_1D4276C3C((uint64_t)v22, &qword_1EBD7E670);
    uint64_t v35 = v69;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v69, 1, 1, v70);
LABEL_40:
    sub_1D4276C3C(v35, (uint64_t *)&unk_1EA6C9468);
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_1D4469928();
    sub_1D42D7FAC(v55, (uint64_t)qword_1EA6E4710);
    uint64_t v31 = sub_1D44698F8();
    os_log_type_t v32 = sub_1D446A038();
    if (!os_log_type_enabled(v31, v32)) {
      goto LABEL_45;
    }
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    id v34 = "FMIPDeviceActionsController: Perform Siri play sound no primary part-- play classic sound on buds";
LABEL_44:
    _os_log_impl(&dword_1D4271000, v31, v32, v34, v33, 2u);
    MEMORY[0x1D9447730](v33, -1, -1);
LABEL_45:

    return sub_1D4318DAC(v73, (uint64_t)v74, v75);
  }
  uint64_t v36 = *((void *)v22 + 5);
  swift_bridgeObjectRetain();
  sub_1D42D2058((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  uint64_t v37 = *(void *)(v36 + 16);
  uint64_t v38 = v70;
  if (v37)
  {
    uint64_t v39 = v36 + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80));
    uint64_t v71 = *(void *)(v72 + 72);
    v66[1] = v36;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1D42D2238(v39, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v40 = &v16[*(int *)(v38 + 64)];
      uint64_t v41 = *((void *)v40 + 1);
      uint64_t v42 = v40[32];
      sub_1D42D2238((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      if (v41)
      {
        sub_1D42D2058((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        switch(v42)
        {
          case 1:
            goto LABEL_34;
          default:
            goto LABEL_20;
        }
      }
      uint64_t v43 = &v14[*(int *)(v38 + 56)];
      BOOL v44 = *(void *)v43 == 1702060355 && *((void *)v43 + 1) == 0xE400000000000000;
      if (v44 || (sub_1D446A758() & 1) != 0) {
        break;
      }
      sub_1D42D2058((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_20:
      char v45 = sub_1D446A758();
      swift_bridgeObjectRelease();
      sub_1D42D2238((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      if (v45) {
        goto LABEL_37;
      }
      uint64_t v46 = &v11[*(int *)(v38 + 64)];
      uint64_t v47 = *((void *)v46 + 1);
      uint64_t v48 = v46[32];
      uint64_t v49 = v76;
      sub_1D42D2238((uint64_t)v11, v76, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      if (v47)
      {
        sub_1D42D2058(v49, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        switch(v48)
        {
          case 1:
          case 2:
          case 3:
          case 4:
            goto LABEL_29;
          default:
            goto LABEL_36;
        }
      }
      uint64_t v50 = (void *)(v49 + *(int *)(v38 + 56));
      BOOL v51 = *v50 == 1702060355 && v50[1] == 0xE400000000000000;
      if (!v51 && (sub_1D446A758() & 1) == 0)
      {
        sub_1D42D2058(v49, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_36:
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
      sub_1D42D2058(v49, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_29:
      char v52 = sub_1D446A758();
      swift_bridgeObjectRelease();
      sub_1D42D2058((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      if (v52) {
        goto LABEL_38;
      }
      sub_1D42D2058((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      v39 += v71;
      if (!--v37)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
    }
    sub_1D42D2058((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_34:
    swift_bridgeObjectRelease();
    sub_1D42D2238((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_37:
    sub_1D42D2058((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_38:
    swift_bridgeObjectRelease();
    uint64_t v35 = v69;
    sub_1D42D6AE4((uint64_t)v16, v69, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v53 = 0;
  }
  else
  {
LABEL_32:
    uint64_t v53 = 1;
    uint64_t v35 = v69;
  }
  uint64_t v54 = v72;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v35, v53, 1, v38);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v35, 1, v38) == 1) {
    goto LABEL_40;
  }
  sub_1D4276C3C(v35, (uint64_t *)&unk_1EA6C9468);
  uint64_t v57 = v68;
  sub_1D42D2238(v67, v68, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  char v58 = *(unsigned char *)(v73 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_safetyWarningConfirmed);
  char v59 = *(unsigned char *)(v73 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_soundQueueingConfirmed);
  char v77 = 2;
  type metadata accessor for FMIPPlaySoundDeviceAction(0);
  uint64_t v60 = swift_allocObject();
  uint64_t v61 = sub_1D4335ED0(v57, (uint64_t)&unk_1F2C01810, v58, v59, &v77, v60);
  swift_release();
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v62 = sub_1D4469928();
  sub_1D42D7FAC(v62, (uint64_t)qword_1EA6E4710);
  os_log_type_t v63 = sub_1D44698F8();
  os_log_type_t v64 = sub_1D446A038();
  if (os_log_type_enabled(v63, v64))
  {
    unint64_t v65 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v65 = 0;
    _os_log_impl(&dword_1D4271000, v63, v64, "FMIPDeviceActionsController: Perform Siri play sound-- ble sound method to primary part", v65, 2u);
    MEMORY[0x1D9447730](v65, -1, -1);
  }

  sub_1D430F194(v61, v74, v75);
  return swift_release();
}

uint64_t sub_1D431D1FC(uint64_t a1, void (*a2)(char *, uint64_t, void *, uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
  uint64_t v9 = sub_1D4325D74(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  if (v10)
  {
    sub_1D431FD7C(a1, v9, v10, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for FMIPLostModeRequest();
    *(void *)(swift_allocObject() + qword_1EA6E49B0) = a1;
    BOOL v12 = (*(void *)(v8 + 216) & 0x80) == 0;
    if ((*(void *)(v8 + 216) & 0x80) != 0) {
      uint64_t v13 = 0xD000000000000018;
    }
    else {
      uint64_t v13 = 0x6976654474736F6CLL;
    }
    if (v12) {
      uint64_t v14 = 0xEA00000000006563;
    }
    else {
      uint64_t v14 = 0x80000001D447F360;
    }
    uint64_t v15 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
    uint64_t v16 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v17 = sub_1D4332A24(v13, v14, v15, v16, 1);
    uint64_t v18 = v4 + 6;
    uint64_t v20 = v4[9];
    uint64_t v19 = v4[10];
    sub_1D42C26F4(v18, v20);
    uint64_t v21 = (void *)swift_allocObject();
    v21[2] = a2;
    v21[3] = a3;
    v21[4] = a1;
    int v22 = *(void (**)(void *, uint64_t (*)(uint64_t, void *), void *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    uint64_t v23 = type metadata accessor for FMIPLostModeResponse();
    swift_retain();
    swift_retain();
    v22(v17, sub_1D4325F48, v21, v23, v20, v19);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1D431D40C(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t *, uint64_t, void *, uint64_t), uint64_t a4, uint64_t a5, uint64_t *a6, const char *a7, void (*a8)(uint64_t *__return_ptr, uint64_t), const char *a9)
{
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1D4469928();
  sub_1D42D7FAC(v15, (uint64_t)qword_1EA6E4710);
  swift_retain_n();
  uint64_t v16 = sub_1D44698F8();
  os_log_type_t v17 = sub_1D446A038();
  if (os_log_type_enabled(v16, v17))
  {
    id v34 = a2;
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v36 = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    sub_1D42D5DA0(a6);
    uint64_t v20 = sub_1D446A158();
    sub_1D42CB9EC(v20, v21, &v36);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v16, v17, a7, v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v19, -1, -1);
    int v22 = v18;
    a2 = v34;
    MEMORY[0x1D9447730](v22, -1, -1);

    if (v34) {
      goto LABEL_9;
    }
  }
  else
  {

    swift_release_n();
    if (a2) {
      goto LABEL_9;
    }
  }
  if (a1)
  {
    uint64_t v23 = swift_retain();
    a8(&v36, v23);
    uint64_t v24 = *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    a3(&v36, v24, 0, a5);
    swift_bridgeObjectRelease();
    return swift_release();
  }
LABEL_9:
  id v26 = a2;
  id v27 = a2;
  unint64_t v28 = sub_1D44698F8();
  os_log_type_t v29 = sub_1D446A038();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v36 = v31;
    *(_DWORD *)uint64_t v30 = 136315138;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    uint64_t v32 = sub_1D446A158();
    sub_1D42CB9EC(v32, v33, &v36);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v28, v29, a9, v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v31, -1, -1);
    MEMORY[0x1D9447730](v30, -1, -1);
  }
  else
  {
  }
  LOBYTE(v36) = 0;
  return a3(&v36, 0, a2, a5);
}

void sub_1D431D7DC(uint64_t a1, void (*a2)(void, void, void, void), uint64_t a3)
{
  uint64_t v7 = (void *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 56);
  if (v8)
  {
    uint64_t v9 = v7[6];
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore28FMIPShowContactDetailsAction_enabled) == 1)
    {
      uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore28FMIPShowContactDetailsAction_phoneNumber + 8);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v10 = 0;
    }
    uint64_t v20 = self;
    swift_bridgeObjectRetain();
    id v21 = objc_msgSend(v20, sel_sharedInstance);
    if (v10)
    {
      int v22 = (void *)sub_1D4469B08();
      swift_bridgeObjectRelease();
    }
    else
    {
      int v22 = 0;
    }
    uint64_t v23 = (void *)sub_1D4469B08();
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = a2;
    v24[3] = a3;
    v24[4] = a1;
    v24[5] = v3;
    v24[6] = v9;
    v24[7] = v8;
    aBlock[4] = (uint64_t)sub_1D4325ABC;
    aBlock[5] = (uint64_t)v24;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1D42E1B08;
    aBlock[3] = (uint64_t)&unk_1F2C06540;
    uint64_t v25 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v21, sel_setPhoneNumber_toAccessoryWithDiscoveryId_completion_, v22, v23, v25);
    _Block_release(v25);
  }
  else
  {
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1D4469928();
    sub_1D42D7FAC(v11, (uint64_t)qword_1EA6E4710);
    swift_retain();
    BOOL v12 = sub_1D44698F8();
    os_log_type_t v13 = sub_1D446A038();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      aBlock[0] = v15;
      uint64_t v16 = a2;
      uint64_t v18 = v7[8];
      unint64_t v17 = v7[9];
      swift_bridgeObjectRetain();
      uint64_t v19 = v18;
      a2 = v16;
      aBlock[6] = sub_1D42CB9EC(v19, v17, aBlock);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_1D4271000, v12, v13, "unable to get discover id for device %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v15, -1, -1);
      MEMORY[0x1D9447730](v14, -1, -1);
    }
    else
    {
      swift_release();
    }

    LOBYTE(aBlock[0]) = 0;
    a2(aBlock, 0, 0, a1);
  }
}

uint64_t sub_1D431DB5C(uint64_t a1, uint64_t (*a2)(char *, void, uint64_t, uint64_t), uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  if (a1)
  {
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1D4469928();
    sub_1D42D7FAC(v11, (uint64_t)qword_1EA6E4710);
    BOOL v12 = sub_1D44698F8();
    os_log_type_t v13 = sub_1D446A038();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1D4271000, v12, v13, "unable to set contact details in accessory", v14, 2u);
      MEMORY[0x1D9447730](v14, -1, -1);
    }

    char v31 = 0;
    return a2(&v31, 0, a1, a4);
  }
  else
  {
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1D4469928();
    sub_1D42D7FAC(v19, (uint64_t)qword_1EA6E4710);
    uint64_t v20 = sub_1D44698F8();
    os_log_type_t v21 = sub_1D446A038();
    if (os_log_type_enabled(v20, v21))
    {
      int v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v22 = 0;
      _os_log_impl(&dword_1D4271000, v20, v21, "added contact detlail to accessory", v22, 2u);
      MEMORY[0x1D9447730](v22, -1, -1);
    }

    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = a4;
    v23[3] = a6;
    v23[4] = a7;
    v23[5] = a2;
    v23[6] = a3;
    type metadata accessor for FMIPSavePreferencesRequest();
    *(void *)(swift_allocObject() + qword_1EA6E4850) = a4;
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v24 = sub_1D4332A24(0x6665725065766173, 0xE800000000000000, 0, 0, 1);
    uint64_t v25 = a5 + 6;
    uint64_t v26 = a5[9];
    uint64_t v27 = a5[10];
    sub_1D42C26F4(v25, v26);
    unint64_t v28 = (void *)swift_allocObject();
    v28[2] = sub_1D4325B34;
    v28[3] = v23;
    v28[4] = a4;
    os_log_type_t v29 = *(void (**)(void *, uint64_t (*)(uint64_t, void *), void *, uint64_t, uint64_t, uint64_t))(v27 + 56);
    uint64_t v30 = type metadata accessor for FMIPSavePreferencesResponse();
    swift_retain();
    swift_retain();
    v29(v24, sub_1D4325B68, v28, v30, v26, v27);
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1D431DEB0(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void, void, void, void))
{
  int v11 = *a1;
  if (v11 != 2)
  {
    uint64_t v18 = a8;
    if (*(unsigned char *)(a5 + OBJC_IVAR____TtC8FMIPCore28FMIPShowContactDetailsAction_enabled))
    {
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v12 = *(void *)(a5 + OBJC_IVAR____TtC8FMIPCore28FMIPShowContactDetailsAction_phoneNumber + 8);
      swift_bridgeObjectRetain();
    }
    id v13 = objc_msgSend(self, sel_sharedInstance);
    if (v12)
    {
      uint64_t v14 = (void *)sub_1D4469B08();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = 0;
    }
    uint64_t v15 = (void *)sub_1D4469B08();
    aBlock[4] = sub_1D431E064;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D42E1B08;
    aBlock[3] = &unk_1F2C065B8;
    uint64_t v16 = _Block_copy(aBlock);
    objc_msgSend(v13, sel_setPhoneNumber_toAccessoryWithDiscoveryId_completion_, v14, v15, v16);
    _Block_release(v16);

    a8 = v18;
  }
  LOBYTE(aBlock[0]) = v11;
  return a8(aBlock, a2, a3, a5);
}

void sub_1D431E064(void *a1)
{
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EA6E4710);
  id v3 = a1;
  id v4 = a1;
  oslog = sub_1D44698F8();
  os_log_type_t v5 = sub_1D446A038();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v11 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    uint64_t v8 = sub_1D446A158();
    sub_1D42CB9EC(v8, v9, &v11);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, oslog, v5, "reset device completed with error %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v7, -1, -1);
    MEMORY[0x1D9447730](v6, -1, -1);
  }
  else
  {
  }
}

void sub_1D431E250(uint64_t a1, void (*a2)(uint64_t *, uint64_t, void *, uint64_t), void *a3)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPNotifyAction_type))
  {
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPNotifyAction_type) == 1)
    {
      type metadata accessor for FMIPSavePreferencesRequest();
      *(void *)(swift_allocObject() + qword_1EA6E4850) = a1;
      swift_retain();
      uint64_t v7 = sub_1D4332A24(0x6665725065766173, 0xE800000000000000, 0, 0, 1);
      uint64_t v9 = v3[9];
      uint64_t v8 = v3[10];
      sub_1D42C26F4(v3 + 6, v9);
      uint64_t v10 = (void *)swift_allocObject();
      v10[2] = a2;
      v10[3] = a3;
      v10[4] = a1;
      uint64_t v11 = *(void (**)(void *, uint64_t (*)(uint64_t, void *), void *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      uint64_t v12 = type metadata accessor for FMIPSavePreferencesResponse();
      swift_retain();
      swift_retain();
      v11(v7, sub_1D4325A38, v10, v12, v9, v8);
      swift_release();
      swift_release();
    }
    else
    {
      sub_1D4320D4C(a1, (uint64_t)a2, a3);
    }
  }
  else
  {
    sub_1D431E8FC(a1, a2, (uint64_t)a3);
  }
}

uint64_t sub_1D431E428(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t *, uint64_t, void *, uint64_t), uint64_t a4, uint64_t a5, const char *a6, const char *a7, char a8)
{
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D4469928();
  sub_1D42D7FAC(v12, (uint64_t)qword_1EA6E4710);
  swift_retain_n();
  id v13 = sub_1D44698F8();
  os_log_type_t v14 = sub_1D446A038();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = a2;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v40 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    sub_1D42D5DA0(&qword_1EA6C9A70);
    uint64_t v17 = sub_1D446A158();
    sub_1D42CB9EC(v17, v18, &v40);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v13, v14, a6, v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v19 = v16;
    a2 = v36;
    MEMORY[0x1D9447730](v19, -1, -1);
    MEMORY[0x1D9447730](v15, -1, -1);

    if (v36) {
      goto LABEL_14;
    }
  }
  else
  {

    swift_release_n();
    if (a2)
    {
LABEL_14:
      id v25 = a2;
      id v26 = a2;
      uint64_t v27 = sub_1D44698F8();
      os_log_type_t v28 = sub_1D446A038();
      if (os_log_type_enabled(v27, v28))
      {
        os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        uint64_t v40 = v30;
        *(_DWORD *)os_log_type_t v29 = 136315138;
        sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
        uint64_t v31 = sub_1D446A158();
        sub_1D42CB9EC(v31, v32, &v40);
        sub_1D446A188();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D4271000, v27, v28, a7, v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v30, -1, -1);
        MEMORY[0x1D9447730](v29, -1, -1);
      }
      else
      {
      }
      LOBYTE(v40) = a8;
      return a3(&v40, 0, a2, a5);
    }
  }
  if (!a1) {
    goto LABEL_14;
  }
  swift_retain();
  uint64_t v20 = sub_1D44698F8();
  os_log_type_t v21 = sub_1D446A038();
  if (os_log_type_enabled(v20, v21))
  {
    int v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v22 = 0;
    _os_log_impl(&dword_1D4271000, v20, v21, "FMIPDeviceActionsController: response success", v22, 2u);
    MEMORY[0x1D9447730](v22, -1, -1);
  }

  FMIPActionStatus.init(rawValue:)(*(void *)(a1 + 48));
  char v23 = v40;
  if (v40 == 18) {
    char v23 = 0;
  }
  LOBYTE(v40) = v23;
  if (*(void *)(a1 + 56))
  {
    uint64_t v24 = *(void *)(a1 + 56);
  }
  else
  {
    sub_1D42D5DA0(&qword_1EBD7D9F0);
    uint64_t v34 = *(void *)(type metadata accessor for FMIPDevice() - 8);
    unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1D446E050;
    sub_1D42D2238(a5 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, v24 + v35, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  }
  swift_bridgeObjectRetain();
  a3(&v40, v24, 0, a5);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1D431E8FC(uint64_t a1, void (*a2)(uint64_t *, uint64_t, void *, uint64_t), uint64_t a3)
{
  id v4 = v3;
  uint64_t v8 = a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
  if (*(unsigned char *)(v8 + *(int *)(type metadata accessor for FMIPDevice() + 132)) == 1)
  {
    return sub_1D431EEBC(a1, 0, a2, a3);
  }
  else
  {
    type metadata accessor for FMIPNotifyRequest();
    *(void *)(swift_allocObject() + qword_1EA6E4A90) = a1;
    swift_retain();
    uint64_t v15 = sub_1D4332A24(0xD000000000000010, 0x80000001D447F340, 0, 0, 1);
    uint64_t v10 = v4[9];
    uint64_t v11 = v4[10];
    sub_1D42C26F4(v4 + 6, v10);
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = a2;
    v12[3] = a3;
    v12[4] = a1;
    v12[5] = v4;
    id v13 = *(void (**)(void *, uint64_t (*)(uint64_t, void *), void *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    uint64_t v14 = type metadata accessor for FMIPNotifyResponse();
    swift_retain();
    swift_retain();
    swift_retain();
    v13(v15, sub_1D4325A28, v12, v14, v10, v11);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1D431EAC8(uint64_t a1, void *a2, void (*a3)(uint64_t *, uint64_t, void *, uint64_t), uint64_t a4, uint64_t a5)
{
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D4469928();
  sub_1D42D7FAC(v8, (uint64_t)qword_1EA6E4710);
  swift_retain_n();
  uint64_t v9 = sub_1D44698F8();
  os_log_type_t v10 = sub_1D446A038();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = a5;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v30 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    sub_1D42D5DA0(&qword_1EA6C9A68);
    uint64_t v13 = sub_1D446A158();
    sub_1D42CB9EC(v13, v14, &v30);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1D4271000, v9, v10, "FMIPDeviceActionsController: notify action response received: %s", v11, 0xCu);
    swift_arrayDestroy();
    uint64_t v15 = v12;
    a5 = v27;
    MEMORY[0x1D9447730](v15, -1, -1);
    MEMORY[0x1D9447730](v11, -1, -1);

    if (a2) {
      goto LABEL_11;
    }
  }
  else
  {
    swift_release_n();

    if (a2)
    {
LABEL_11:
      id v17 = a2;
      id v18 = a2;
      uint64_t v19 = sub_1D44698F8();
      os_log_type_t v20 = sub_1D446A038();
      if (os_log_type_enabled(v19, v20))
      {
        os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        uint64_t v30 = v22;
        *(_DWORD *)os_log_type_t v21 = 136315138;
        sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
        uint64_t v23 = sub_1D446A158();
        sub_1D42CB9EC(v23, v24, &v30);
        sub_1D446A188();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D4271000, v19, v20, "FMIPDeviceActionsController: error received for notify request: %s", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v22, -1, -1);
        MEMORY[0x1D9447730](v21, -1, -1);
      }
      else
      {
      }
      LOBYTE(v30) = 0;
      return ((uint64_t (*)(uint64_t *, void, void *, uint64_t))a3)(&v30, 0, a2, a5);
    }
  }
  if (!a1) {
    goto LABEL_11;
  }
  if (!*(void *)(a5 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 24)
    || (*(unsigned char *)(a5 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 216) & 0x80) != 0)
  {
    FMIPActionStatus.init(rawValue:)(*(void *)(a1 + 48));
    char v25 = v30;
    if (v30 == 18) {
      char v25 = 0;
    }
    LOBYTE(v30) = v25;
    uint64_t v26 = *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    swift_retain();
    a3(&v30, v26, 0, a5);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1D431EEBC(a5, a1, a3, a4);
    return swift_release();
  }
}

uint64_t sub_1D431EEBC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *, uint64_t, void *, uint64_t), uint64_t a4)
{
  uint64_t v62 = a4;
  uint64_t v63 = a2;
  os_log_type_t v64 = a3;
  uint64_t v5 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v61 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  os_log_type_t v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v58 - v11;
  uint64_t v13 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FMIPItemGroup();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1D4469688();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  char v59 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = a1;
  uint64_t v23 = a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
  uint64_t v58 = type metadata accessor for FMIPDevice();
  sub_1D42A3A74(v23 + *(int *)(v58 + 128), (uint64_t)v15, &qword_1EBD7E670);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    unint64_t v24 = &qword_1EBD7E670;
    uint64_t v25 = (uint64_t)v15;
  }
  else
  {
    sub_1D42D6AE4((uint64_t)v15, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    swift_bridgeObjectRetain();
    sub_1D4469628();
    swift_bridgeObjectRelease();
    sub_1D42D2058((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v12, 1, v20) != 1)
    {
      uint64_t v26 = v62;
      goto LABEL_20;
    }
    unint64_t v24 = (uint64_t *)&unk_1EBD7E930;
    uint64_t v25 = (uint64_t)v12;
  }
  sub_1D4276C3C(v25, v24);
  uint64_t v26 = v62;
  if (!*(void *)(v23 + 24)) {
    goto LABEL_8;
  }
  sub_1D4469628();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v10, 1, v20) == 1)
  {
    sub_1D4276C3C((uint64_t)v10, (uint64_t *)&unk_1EBD7E930);
LABEL_8:
    uint64_t v62 = v23;
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1D4469928();
    sub_1D42D7FAC(v27, (uint64_t)qword_1EA6E4710);
    uint64_t v28 = v65;
    swift_retain_n();
    os_log_type_t v29 = sub_1D44698F8();
    os_log_type_t v30 = sub_1D446A018();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v67 = v32;
      *(_DWORD *)uint64_t v31 = 136315138;
      swift_retain();
      uint64_t v33 = sub_1D432BE70();
      unint64_t v35 = v34;
      swift_release();
      uint64_t v66 = sub_1D42CB9EC(v33, v35, &v67);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1D4271000, v29, v30, "Missing baUUID for %s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v32, -1, -1);
      MEMORY[0x1D9447730](v31, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    uint64_t v36 = v63;
    if (v63)
    {
      FMIPActionStatus.init(rawValue:)(*(void *)(v63 + 48));
      char v37 = v67;
      if (v67 == 18) {
        char v37 = 0;
      }
      LOBYTE(v67) = v37;
      uint64_t v38 = *(void *)(v36 + 56);
      if (v38)
      {
        swift_bridgeObjectRetain();
LABEL_25:
        sub_1D4325284();
        uint64_t v56 = (void *)swift_allocError();
        unsigned char *v57 = 6;
        v64(&v67, v38, v56, v28);

        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      LOBYTE(v67) = 0;
    }
    sub_1D42D5DA0(&qword_1EBD7D9F0);
    unint64_t v55 = (*(unsigned __int8 *)(*(void *)(v58 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v58 - 8) + 80);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1D446E050;
    sub_1D42D2238(v62, v38 + v55, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  uint64_t v12 = v10;
LABEL_20:
  uint64_t v39 = v59;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v59, v12, v20);
  uint64_t v40 = v65;
  int v41 = *(unsigned __int8 *)(v65 + OBJC_IVAR____TtC8FMIPCore16FMIPNotifyAction_enabled);
  uint64_t v42 = self;
  uint64_t v43 = (void *)sub_1D4469648();
  BOOL v44 = &selRef_enableNotifyWhenFound_;
  if (!v41) {
    BOOL v44 = &selRef_disableNotifyWhenFound_;
  }
  id v45 = objc_msgSend(v42, *v44, v43);

  uint64_t v46 = sub_1D4469E88();
  uint64_t v47 = (uint64_t)v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v61, 1, 1, v46);
  uint64_t v48 = *(void *)(v60 + 168);
  uint64_t v49 = *(void **)(v60 + 32);
  uint64_t v50 = (void *)swift_allocObject();
  v50[2] = 0;
  v50[3] = 0;
  v50[4] = v49;
  v50[5] = v45;
  BOOL v51 = v64;
  v50[6] = v48;
  v50[7] = v51;
  v50[8] = v26;
  v50[9] = v40;
  v50[10] = v63;
  swift_retain();
  swift_retain();
  swift_retain();
  id v52 = v49;
  id v53 = v45;
  swift_retain();
  sub_1D431C094(v47, (uint64_t)&unk_1EA6C9A40, (uint64_t)v50);
  swift_release();

  sub_1D4276C3C(v47, (uint64_t *)&unk_1EBD7E7F8);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v39, v20);
}

uint64_t sub_1D431F6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[13] = v10;
  v8[14] = v11;
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[8] = a4;
  return MEMORY[0x1F4188298](sub_1D431F6DC, 0, 0);
}

uint64_t sub_1D431F6DC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  *(void *)(v0 + 120) = objc_msgSend(*(id *)(v0 + 64), sel_executeCommand_, *(void *)(v0 + 72));
  return MEMORY[0x1F4188298](sub_1D431F75C, v1, 0);
}

uint64_t sub_1D431F75C()
{
  uint64_t v1 = *(void **)(v0 + 120);
  uint64_t v2 = (void *)(*(void *)(v0 + 80) + 112);
  swift_beginAccess();
  MEMORY[0x1D94460A0](v1);
  if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1D4469DB8();
  }
  sub_1D4469E08();
  sub_1D4469D98();
  swift_endAccess();
  return MEMORY[0x1F4188298](sub_1D431F834, 0, 0);
}

uint64_t sub_1D431F834()
{
  uint64_t v1 = (void *)v0[15];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  uint64_t v17 = v0[14];
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v5;
  v6[3] = v3;
  v6[4] = v2;
  v6[5] = v4;
  v6[6] = v1;
  v0[6] = sub_1D43257DC;
  v0[7] = v6;
  uint64_t v7 = MEMORY[0x1E4F143A8];
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D435C428;
  v0[5] = &unk_1F2C06400;
  uint64_t v8 = _Block_copy(v0 + 2);
  id v9 = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  id v10 = objc_msgSend(v9, sel_addFailureBlock_, v8);
  _Block_release(v8);

  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v5;
  v11[3] = v3;
  v11[4] = v17;
  v11[5] = v2;
  v11[6] = v4;
  v11[7] = v9;
  v0[6] = sub_1D4325898;
  v0[7] = v11;
  v0[2] = v7;
  v0[3] = 1107296256;
  v0[4] = sub_1D435C430;
  v0[5] = &unk_1F2C06450;
  uint64_t v12 = _Block_copy(v0 + 2);
  swift_retain();
  id v13 = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  id v14 = objc_msgSend(v13, sel_addSuccessBlock_, v12);
  _Block_release(v12);

  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1D431FA6C(uint64_t a1, void (*a2)(char *, uint64_t, void, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v12 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v12 - 8);
  id v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1D4469928();
  sub_1D42D7FAC(v15, (uint64_t)qword_1EA6E4710);
  uint64_t v16 = sub_1D44698F8();
  os_log_type_t v17 = sub_1D446A038();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_1D4271000, v16, v17, "FMIPDeviceActionsController: notify subscription succeeded", v18, 2u);
    MEMORY[0x1D9447730](v18, -1, -1);
  }

  if (!a4)
  {
    char v29 = 2;
LABEL_11:
    sub_1D42D5DA0(&qword_1EBD7D9F0);
    uint64_t v21 = *(void *)(type metadata accessor for FMIPDevice() - 8);
    unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1D446E050;
    sub_1D42D2238(a5 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, v20 + v22, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  FMIPActionStatus.init(rawValue:)(*(void *)(a4 + 48));
  char v19 = v28;
  if (v28 == 18) {
    char v19 = 0;
  }
  char v29 = v19;
  uint64_t v20 = *(void *)(a4 + 56);
  if (!v20) {
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
LABEL_12:
  a2(&v29, v20, 0, a5);
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_1D4469E88();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v14, 1, 1, v23);
  unint64_t v24 = (void *)swift_allocObject();
  v24[2] = 0;
  v24[3] = 0;
  v24[4] = a6;
  v24[5] = a7;
  swift_retain();
  id v25 = a7;
  sub_1D431C094((uint64_t)v14, (uint64_t)&unk_1EA6C9A50, (uint64_t)v24);
  swift_release();
  return sub_1D4276C3C((uint64_t)v14, (uint64_t *)&unk_1EBD7E7F8);
}

uint64_t sub_1D431FD7C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t, void *, uint64_t), uint64_t a5)
{
  uint64_t v46 = a4;
  uint64_t v8 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D4469688();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  os_log_type_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4469628();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1D4276C3C((uint64_t)v13, (uint64_t *)&unk_1EBD7E930);
    char v47 = 0;
    sub_1D42D5DA0(&qword_1EBD7D9F0);
    uint64_t v18 = *(void *)(type metadata accessor for FMIPDevice() - 8);
    unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1D446E050;
    sub_1D42D2238(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, v20 + v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D4325284();
    uint64_t v21 = (void *)swift_allocError();
    *unint64_t v22 = 6;
    v46(&v47, v20, v21, a1);

    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v44 = v5;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    int v24 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isTrackingEnabled);
    uint64_t v45 = a5;
    if (v24 == 1)
    {
      uint64_t v43 = sub_1D4469648();
      uint64_t v25 = a1;
      uint64_t v31 = (uint64_t)v10;
      swift_bridgeObjectRetain();
      uint64_t v32 = (void *)sub_1D4469B08();
      swift_bridgeObjectRelease();
      uint64_t v30 = v25;
      if (*(void *)(v25 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_phoneNumber + 8)) {
        uint64_t v33 = (void *)sub_1D4469B08();
      }
      else {
        uint64_t v33 = 0;
      }
      if (*(void *)(v25 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_email + 8)) {
        uint64_t v27 = (void *)sub_1D4469B08();
      }
      else {
        uint64_t v27 = 0;
      }
      unint64_t v34 = self;
      unint64_t v35 = (void *)v43;
      id v28 = objc_msgSend(v34, sel_enableLostModeForBeaconUUID_message_phoneNumber_email_, v43, v32, v33, v27);

      char v29 = v46;
    }
    else
    {
      uint64_t v26 = self;
      uint64_t v27 = (void *)sub_1D4469648();
      id v28 = objc_msgSend(v26, sel_disableLostModeForBeaconUUID_, v27);
      char v29 = v46;
      uint64_t v31 = (uint64_t)v10;
      uint64_t v30 = a1;
    }

    uint64_t v36 = sub_1D4469E88();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v31, 1, 1, v36);
    uint64_t v37 = *(void *)(v44 + 168);
    uint64_t v38 = *(void **)(v44 + 32);
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = 0;
    v39[3] = 0;
    v39[4] = v38;
    v39[5] = v28;
    v39[6] = v37;
    v39[7] = v29;
    v39[8] = v45;
    v39[9] = v30;
    swift_retain();
    id v40 = v38;
    id v41 = v28;
    swift_retain();
    swift_retain();
    sub_1D431C094(v31, (uint64_t)&unk_1EA6C9A00, (uint64_t)v39);
    swift_release();

    sub_1D4276C3C(v31, (uint64_t *)&unk_1EBD7E7F8);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_1D43202B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[12] = a8;
  v8[13] = v10;
  v8[10] = a6;
  v8[11] = a7;
  v8[8] = a4;
  v8[9] = a5;
  return MEMORY[0x1F4188298](sub_1D43202E0, 0, 0);
}

uint64_t sub_1D43202E0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  *(void *)(v0 + 112) = objc_msgSend(*(id *)(v0 + 64), sel_executeCommand_, *(void *)(v0 + 72));
  return MEMORY[0x1F4188298](sub_1D4320360, v1, 0);
}

uint64_t sub_1D4320360()
{
  uint64_t v1 = *(void **)(v0 + 112);
  uint64_t v2 = (void *)(*(void *)(v0 + 80) + 112);
  swift_beginAccess();
  MEMORY[0x1D94460A0](v1);
  if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1D4469DB8();
  }
  sub_1D4469E08();
  sub_1D4469D98();
  swift_endAccess();
  return MEMORY[0x1F4188298](sub_1D4320438, 0, 0);
}

uint64_t sub_1D4320438()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = (void *)v0[14];
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v17 = v4;
  uint64_t v5 = v0[10];
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v4;
  v6[3] = v3;
  v6[4] = v1;
  v6[5] = v5;
  v6[6] = v2;
  v0[6] = sub_1D43254A8;
  v0[7] = v6;
  uint64_t v7 = MEMORY[0x1E4F143A8];
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D435C428;
  v0[5] = &unk_1F2C062E8;
  uint64_t v8 = _Block_copy(v0 + 2);
  id v9 = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  id v10 = objc_msgSend(v9, sel_addFailureBlock_, v8);
  _Block_release(v8);

  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v17;
  v11[3] = v3;
  v11[4] = v1;
  v11[5] = v5;
  v11[6] = v9;
  v0[6] = sub_1D43254D4;
  v0[7] = v11;
  v0[2] = v7;
  v0[3] = 1107296256;
  v0[4] = sub_1D435C430;
  v0[5] = &unk_1F2C06338;
  uint64_t v12 = _Block_copy(v0 + 2);
  id v13 = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  id v14 = objc_msgSend(v13, sel_addSuccessBlock_, v12);
  _Block_release(v12);

  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1D4320668(void *a1, void (*a2)(void, void, void, void), uint64_t a3, uint64_t a4, uint64_t a5, void *a6, const char *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v39 = a7;
  uint64_t v40 = a4;
  uint64_t v15 = a9;
  uint64_t v16 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1D4469928();
  sub_1D42D7FAC(v19, (uint64_t)qword_1EA6E4710);
  id v20 = a1;
  id v21 = a1;
  unint64_t v22 = sub_1D44698F8();
  os_log_type_t v23 = sub_1D446A038();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v36 = a8;
    uint64_t v24 = swift_slowAlloc();
    unint64_t v35 = a2;
    uint64_t v25 = (uint8_t *)v24;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v37 = a5;
    uint64_t v27 = v26;
    uint64_t v38 = a9;
    *(_DWORD *)uint64_t v25 = 136315138;
    v34[1] = a3;
    id v41 = a1;
    uint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    uint64_t v44 = v26;
    sub_1D42D5DA0(&qword_1EA6C9360);
    sub_1D446A458();
    uint64_t v42 = sub_1D42CB9EC(v42, v43, &v44);
    uint64_t v15 = v38;
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v22, v23, v39, v25, 0xCu);
    swift_arrayDestroy();
    uint64_t v28 = v27;
    a5 = v37;
    MEMORY[0x1D9447730](v28, -1, -1);
    char v29 = v25;
    a2 = v35;
    MEMORY[0x1D9447730](v29, -1, -1);
  }
  else
  {
  }
  LOBYTE(v42) = 0;
  a2(&v42, 0, a1, v40);
  uint64_t v30 = sub_1D4469E88();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v18, 1, 1, v30);
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = 0;
  v31[3] = 0;
  v31[4] = a5;
  v31[5] = a6;
  swift_retain();
  id v32 = a6;
  sub_1D431C094((uint64_t)v18, v15, (uint64_t)v31);
  swift_release();
  return sub_1D4276C3C((uint64_t)v18, (uint64_t *)&unk_1EBD7E7F8);
}

uint64_t sub_1D4320984(uint64_t a1, void (*a2)(char *, uint64_t, void, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1D4469928();
  sub_1D42D7FAC(v13, (uint64_t)qword_1EA6E4710);
  id v14 = sub_1D44698F8();
  os_log_type_t v15 = sub_1D446A038();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_1D4271000, v14, v15, "FMIPDeviceActionsController: lost mode action succeeded", v16, 2u);
    MEMORY[0x1D9447730](v16, -1, -1);
  }

  char v25 = 2;
  sub_1D42D5DA0(&qword_1EBD7D9F0);
  uint64_t v17 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1D446E050;
  sub_1D42D2238(a4 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, v19 + v18, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  a2(&v25, v19, 0, a4);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1D4469E88();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v12, 1, 1, v20);
  id v21 = (void *)swift_allocObject();
  v21[2] = 0;
  v21[3] = 0;
  v21[4] = a5;
  v21[5] = a6;
  swift_retain();
  id v22 = a6;
  sub_1D431C094((uint64_t)v12, (uint64_t)&unk_1EA6C9A20, (uint64_t)v21);
  swift_release();
  return sub_1D4276C3C((uint64_t)v12, (uint64_t *)&unk_1EBD7E7F8);
}

uint64_t sub_1D4320C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 64) = a4;
  *(void *)(v5 + 72) = a5;
  return MEMORY[0x1F4188298](sub_1D4320C74, a4, 0);
}

uint64_t sub_1D4320C74()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = (unint64_t *)(v0[8] + 112);
  swift_beginAccess();
  unint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  sub_1D435C4A4(v1, v3);
  unint64_t v5 = v4;
  char v7 = v6;
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v8 = (void *)sub_1D435C634(v5);
    swift_endAccess();
  }
  id v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

void sub_1D4320D4C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v81 = a2;
  uint64_t v5 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  unint64_t v79 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v84 = (char *)&v74 - v8;
  uint64_t v85 = sub_1D4469688();
  uint64_t v75 = *(void *)(v85 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v85);
  uint64_t v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v82 = (char *)&v74 - v12;
  uint64_t v13 = type metadata accessor for FMIPItem();
  uint64_t v78 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13 - 8);
  os_log_type_t v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v16 - 8);
  unint64_t v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for FMIPItemGroup();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v74 = (uint64_t)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  id v86 = a3;
  uint64_t v22 = sub_1D4469928();
  sub_1D42D7FAC(v22, (uint64_t)qword_1EA6E4710);
  os_log_type_t v23 = sub_1D44698F8();
  os_log_type_t v24 = sub_1D446A038();
  if (os_log_type_enabled(v23, v24))
  {
    char v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v25 = 0;
    _os_log_impl(&dword_1D4271000, v23, v24, "FMIPDeviceActionsController: Perform Separation Action.", v25, 2u);
    MEMORY[0x1D9447730](v25, -1, -1);
  }

  uint64_t v26 = a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
  uint64_t v27 = type metadata accessor for FMIPDevice();
  sub_1D42A3A74(v26 + *(int *)(v27 + 128), (uint64_t)v18, &qword_1EBD7E670);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1D4276C3C((uint64_t)v18, &qword_1EBD7E670);
    uint64_t v28 = v85;
    if (!*(void *)(v26 + 24))
    {
LABEL_9:
      uint64_t v31 = sub_1D44698F8();
      os_log_type_t v32 = sub_1D446A038();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v33 = 0;
        _os_log_impl(&dword_1D4271000, v31, v32, "FMIPDeviceActionsController: Separation action could not be completed. No identifier for the device.", v33, 2u);
        MEMORY[0x1D9447730](v33, -1, -1);
      }

      return;
    }
    uint64_t v29 = (uint64_t)v79;
    sub_1D4469628();
    uint64_t v30 = v75;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v29, 1, v28) == 1)
    {
      sub_1D4276C3C(v29, (uint64_t *)&unk_1EBD7E930);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v11, v29, v28);
    int v65 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPNotifyAction_enabled);
    uint64_t v66 = self;
    uint64_t v67 = (void *)sub_1D4469648();
    uint64_t v68 = &selRef_beginLeashingWithBeaconUUID_;
    if (!v65) {
      uint64_t v68 = &selRef_endLeashingWithBeaconUUID_;
    }
    id v69 = objc_msgSend(v66, *v68, v67, v74);

    uint64_t v70 = *(void **)(v83 + 32);
    uint64_t v71 = (void *)swift_allocObject();
    id v72 = v86;
    v71[2] = v81;
    v71[3] = v72;
    v71[4] = a1;
    os_log_type_t v91 = sub_1D4325234;
    uint64_t v92 = v71;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v88 = 1107296256;
    v89 = sub_1D42E1B08;
    v90 = &unk_1F2C061A8;
    uint64_t v73 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v70, sel_executeCommand_completion_, v69, v73);
    _Block_release(v73);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v28);
  }
  else
  {
    uint64_t v34 = v74;
    sub_1D42D6AE4((uint64_t)v18, v74, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    unint64_t v35 = *(char **)(v34 + 40);
    int64_t v36 = *((void *)v35 + 2);
    uint64_t v37 = MEMORY[0x1E4FBC860];
    uint64_t v80 = a1;
    if (v36)
    {
      uint64_t aBlock = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1D4337070(0, v36, 0);
      uint64_t v38 = *(unsigned __int8 *)(v78 + 80);
      unint64_t v79 = v35;
      uint64_t v39 = (uint64_t)&v35[(v38 + 32) & ~v38];
      uint64_t v40 = *(void *)(v78 + 72);
      uint64_t v37 = aBlock;
      do
      {
        sub_1D42D2238(v39, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v42 = *((void *)v15 + 44);
        uint64_t v41 = *((void *)v15 + 45);
        swift_bridgeObjectRetain();
        sub_1D42D2058((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D4337070(0, *(void *)(v37 + 16) + 1, 1);
          uint64_t v37 = aBlock;
        }
        unint64_t v44 = *(void *)(v37 + 16);
        unint64_t v43 = *(void *)(v37 + 24);
        if (v44 >= v43 >> 1)
        {
          sub_1D4337070(v43 > 1, v44 + 1, 1);
          uint64_t v37 = aBlock;
        }
        *(void *)(v37 + 16) = v44 + 1;
        uint64_t v45 = v37 + 16 * v44;
        *(void *)(v45 + 32) = v42;
        *(void *)(v45 + 40) = v41;
        v39 += v40;
        --v36;
      }
      while (v36);
      swift_bridgeObjectRelease();
      a1 = v80;
    }
    uint64_t v46 = v85;
    char v47 = (char *)swift_allocObject();
    id v48 = v86;
    *((void *)v47 + 2) = v81;
    *((void *)v47 + 3) = v48;
    *((void *)v47 + 4) = a1;
    *((void *)v47 + 5) = v37;
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 16) = 0;
    uint64_t v49 = *(void *)(v37 + 16);
    uint64_t v50 = (uint64_t)v84;
    if (v49)
    {
      unint64_t v79 = v47;
      BOOL v51 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
      char v77 = (void (**)(char *, uint64_t, uint64_t))(v75 + 32);
      uint64_t v78 = OBJC_IVAR____TtC8FMIPCore16FMIPNotifyAction_enabled;
      v75 += 8;
      uint64_t v76 = &v89;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v52 = v37 + 40;
      uint64_t v54 = v81;
      id v53 = v82;
      do
      {
        swift_bridgeObjectRetain();
        sub_1D4469628();
        swift_bridgeObjectRelease();
        if ((*v51)(v50, 1, v46) == 1)
        {
          sub_1D4276C3C(v50, (uint64_t *)&unk_1EBD7E930);
        }
        else
        {
          (*v77)(v53, v50, v46);
          int v55 = *(unsigned __int8 *)(v80 + v78);
          uint64_t v56 = self;
          uint64_t v57 = (void *)sub_1D4469648();
          uint64_t v58 = &selRef_beginLeashingWithBeaconUUID_;
          if (!v55) {
            uint64_t v58 = &selRef_endLeashingWithBeaconUUID_;
          }
          id v59 = objc_msgSend(v56, *v58, v57, v74);

          id v86 = *(id *)(v83 + 32);
          uint64_t v60 = (void *)swift_allocObject();
          uint64_t v61 = v51;
          uint64_t v62 = v79;
          v60[2] = sub_1D4325258;
          v60[3] = v62;
          v60[4] = v54;
          os_log_type_t v91 = sub_1D4325278;
          uint64_t v92 = v60;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v88 = 1107296256;
          v89 = sub_1D42E1B08;
          v90 = &unk_1F2C06248;
          uint64_t v63 = _Block_copy(&aBlock);
          BOOL v51 = v61;
          swift_retain();
          swift_retain();
          swift_release();
          objc_msgSend(v86, sel_executeCommand_completion_, v59, v63);
          os_log_type_t v64 = v63;
          uint64_t v50 = (uint64_t)v84;
          uint64_t v46 = v85;
          _Block_release(v64);

          (*(void (**)(char *, uint64_t))v75)(v53, v46);
        }
        v52 += 16;
        --v49;
      }
      while (v49);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
      swift_retain();
    }
    swift_release();
    sub_1D42D2058(v74, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    swift_release();
  }
}

uint64_t sub_1D432176C(uint64_t result, id a2, void (*a3)(char *, uint64_t, id, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    id v9 = a2;
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1D4469928();
    sub_1D42D7FAC(v10, (uint64_t)qword_1EA6E4710);
    uint64_t v11 = sub_1D44698F8();
    os_log_type_t v12 = sub_1D446A038();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_1D4271000, v11, v12, "FMIPDeviceActionsController: Complete Separation with error.", v13, 2u);
      MEMORY[0x1D9447730](v13, -1, -1);
    }

    char v25 = 0;
    sub_1D42D5DA0(&qword_1EBD7D9F0);
    uint64_t v14 = *(void *)(type metadata accessor for FMIPDevice() - 8);
    unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1D446E050;
    sub_1D42D2238(a5 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, v16 + v15, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    id v17 = a2;
    a3(&v25, v16, a2, a5);
  }
  else
  {
    if (*(void *)(a6 + 16) != result) {
      return result;
    }
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1D4469928();
    sub_1D42D7FAC(v18, (uint64_t)qword_1EA6E4710);
    uint64_t v19 = sub_1D44698F8();
    os_log_type_t v20 = sub_1D446A038();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_1D4271000, v19, v20, "FMIPDeviceActionsController: Separation Complete Success!", v21, 2u);
      MEMORY[0x1D9447730](v21, -1, -1);
    }

    char v26 = 2;
    sub_1D42D5DA0(&qword_1EBD7D9F0);
    uint64_t v22 = *(void *)(type metadata accessor for FMIPDevice() - 8);
    unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1D446E050;
    sub_1D42D2238(a5 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, v24 + v23, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    a3(&v26, v24, 0, a5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4321B04(void *a1, uint64_t (*a2)(uint64_t, void *), uint64_t a3, uint64_t a4)
{
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D4469928();
  sub_1D42D7FAC(v7, (uint64_t)qword_1EA6E4710);
  id v8 = a1;
  id v9 = a1;
  uint64_t v10 = sub_1D44698F8();
  os_log_type_t v11 = sub_1D446A038();
  if (os_log_type_enabled(v10, v11))
  {
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v20[0] = v13;
    *(_DWORD *)os_log_type_t v12 = 136315138;
    id v14 = a1;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    uint64_t v15 = sub_1D4469B68();
    sub_1D42CB9EC(v15, v16, v20);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v10, v11, "FMIPDeviceActionsController: Separation action completed with error %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v13, -1, -1);
    MEMORY[0x1D9447730](v12, -1, -1);
  }
  else
  {
  }
  id v17 = (uint64_t *)(a4 + 16);
  if (a1)
  {
    swift_beginAccess();
    uint64_t result = *v17;
    uint64_t v19 = a1;
    return a2(result, v19);
  }
  swift_beginAccess();
  uint64_t result = *v17 + 1;
  if (!__OFADD__(*v17, 1))
  {
    uint64_t *v17 = result;
    uint64_t v19 = 0;
    return a2(result, v19);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D4321D40(void *a1, void (*a2)(uint64_t *, uint64_t, void *, uint64_t), uint64_t a3, uint64_t a4)
{
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D4469928();
  sub_1D42D7FAC(v7, (uint64_t)qword_1EA6E4710);
  id v8 = a1;
  id v9 = a1;
  uint64_t v10 = sub_1D44698F8();
  os_log_type_t v11 = sub_1D446A038();
  if (!os_log_type_enabled(v10, v11))
  {

    if (a1) {
      goto LABEL_5;
    }
LABEL_7:
    LOBYTE(v27) = 2;
    sub_1D42D5DA0(&qword_1EBD7D9F0);
    uint64_t v22 = *(void *)(type metadata accessor for FMIPDevice() - 8);
    unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1D446E050;
    sub_1D42D2238(a4 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, v24 + v23, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    a2(&v27, v24, 0, a4);
    return swift_bridgeObjectRelease();
  }
  uint64_t v26 = a4;
  os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
  uint64_t v13 = swift_slowAlloc();
  uint64_t v27 = v13;
  *(_DWORD *)os_log_type_t v12 = 136315138;
  id v14 = a1;
  sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
  uint64_t v15 = sub_1D4469B68();
  sub_1D42CB9EC(v15, v16, &v27);
  sub_1D446A188();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_1D4271000, v10, v11, "FMIPDeviceActionsController: Separation action completed with error %s", v12, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1D9447730](v13, -1, -1);
  id v17 = v12;
  a4 = v26;
  MEMORY[0x1D9447730](v17, -1, -1);

  if (!a1) {
    goto LABEL_7;
  }
LABEL_5:
  LOBYTE(v27) = 0;
  sub_1D42D5DA0(&qword_1EBD7D9F0);
  uint64_t v18 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1D446E050;
  sub_1D42D2238(a4 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, v20 + v19, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  id v21 = a1;
  a2(&v27, v20, a1, a4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43220EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
  if (*(unsigned char *)(v7 + *(int *)(type metadata accessor for FMIPDevice() + 148)))
  {
    id v9 = (void *)swift_allocObject();
    v9[2] = a2;
    v9[3] = a3;
    v9[4] = a1;
    v9[5] = v3;
    if (*(void *)(v7 + 56))
    {
      uint64_t v10 = self;
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      id v11 = objc_msgSend(v10, sel_sharedInstance);
      os_log_type_t v12 = (void *)sub_1D4469B08();
      v14[4] = sub_1D4325224;
      v14[5] = v9;
      v14[0] = MEMORY[0x1E4F143A8];
      v14[1] = 1107296256;
      v14[2] = sub_1D42E1B08;
      v14[3] = &unk_1F2C06158;
      uint64_t v13 = _Block_copy(v14);
      swift_retain();
      swift_release();
      objc_msgSend(v11, sel_removeAccessoryWithDiscoveryId_completion_, v12, v13);
      _Block_release(v13);

      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
    else
    {
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      sub_1D432259C(a1, a2, a3);
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    return sub_1D432259C(a1, a2, a3);
  }
}

void sub_1D4322358(void *a1, void (*a2)(void *, void, void *, uint64_t), uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    id v7 = a1;
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1D4469928();
    sub_1D42D7FAC(v8, (uint64_t)qword_1EA6E4710);
    id v9 = a1;
    id v10 = a1;
    id v11 = sub_1D44698F8();
    os_log_type_t v12 = sub_1D446A038();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      v15[1] = 0xE000000000000000;
      uint64_t v16 = v14;
      sub_1D42D5DA0(&qword_1EA6C9360);
      sub_1D446A458();
      v15[0] = sub_1D42CB9EC(0, 0xE000000000000000, &v16);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v11, v12, "FMIPDeviceActionsController: remove device failed %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v14, -1, -1);
      MEMORY[0x1D9447730](v13, -1, -1);
    }
    else
    {
    }
    LOBYTE(v15[0]) = 0;
    a2(v15, 0, a1, a4);
  }
  else
  {
    sub_1D432259C(a4, (uint64_t)a2, a3);
  }
}

uint64_t sub_1D432259C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D4469928();
  sub_1D42D7FAC(v8, (uint64_t)qword_1EA6E4710);
  id v9 = sub_1D44698F8();
  os_log_type_t v10 = sub_1D446A038();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v11 = 0;
    _os_log_impl(&dword_1D4271000, v9, v10, "FMIPDeviceActionsController: Starting remove device request", v11, 2u);
    MEMORY[0x1D9447730](v11, -1, -1);
  }

  type metadata accessor for FMIPRemoveRequest();
  *(void *)(swift_allocObject() + qword_1EA6E4A50) = a1;
  if ((*(void *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 216) & 0x80) != 0) {
    uint64_t v12 = 0xD000000000000014;
  }
  else {
    uint64_t v12 = 0x65766F6D6572;
  }
  if ((*(void *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 216) & 0x80) != 0) {
    uint64_t v13 = 0x80000001D447F2E0;
  }
  else {
    uint64_t v13 = 0xE600000000000000;
  }
  uint64_t v14 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  uint64_t v15 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v22 = sub_1D4332A24(v12, v13, v14, v15, 1);
  uint64_t v16 = v4[9];
  uint64_t v17 = v4[10];
  sub_1D42C26F4(v4 + 6, v16);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = a2;
  v18[3] = a3;
  v18[4] = a1;
  v18[5] = v4;
  unint64_t v19 = *(void (**)(void *, uint64_t (*)(uint64_t, void *), void *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v20 = type metadata accessor for FMIPRemoveResponse();
  swift_retain();
  swift_retain();
  swift_retain();
  v19(v22, sub_1D4325198, v18, v20, v16, v17);
  swift_release();
  return swift_release();
}

uint64_t sub_1D4322808(uint64_t a1, void *a2, uint64_t (*a3)(void, void, void, void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v58 = a4;
  uint64_t v59 = a5;
  uint64_t v10 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v56 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D4469688();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1D4469928();
  uint64_t v17 = sub_1D42D7FAC(v16, (uint64_t)qword_1EA6E4710);
  swift_retain_n();
  uint64_t v57 = v17;
  uint64_t v18 = sub_1D44698F8();
  os_log_type_t v19 = sub_1D446A038();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    int v55 = a3;
    id v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v54 = v12;
    uint64_t v23 = v22;
    aBlock[0] = v22;
    v52[1] = a6;
    uint64_t v53 = v13;
    *(_DWORD *)id v21 = 136315138;
    uint64_t v61 = a1;
    sub_1D42D5DA0(&qword_1EA6C99E8);
    uint64_t v24 = sub_1D446A158();
    uint64_t v61 = sub_1D42CB9EC(v24, v25, aBlock);
    uint64_t v13 = v53;
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v18, v19, "FMIPDeviceActionsController: remove response received: %s", v21, 0xCu);
    swift_arrayDestroy();
    uint64_t v26 = v23;
    uint64_t v12 = v54;
    MEMORY[0x1D9447730](v26, -1, -1);
    uint64_t v27 = v21;
    a3 = v55;
    MEMORY[0x1D9447730](v27, -1, -1);

    if (a2) {
      goto LABEL_11;
    }
  }
  else
  {

    swift_release_n();
    if (a2)
    {
LABEL_11:
      id v29 = a2;
      id v30 = a2;
      uint64_t v31 = sub_1D44698F8();
      os_log_type_t v32 = sub_1D446A038();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        aBlock[0] = v34;
        *(_DWORD *)uint64_t v33 = 136315138;
        uint64_t v61 = (uint64_t)a2;
        sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
        uint64_t v35 = sub_1D446A158();
        uint64_t v61 = sub_1D42CB9EC(v35, v36, aBlock);
        sub_1D446A188();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D4271000, v31, v32, "FMIPDeviceActionsController: error received for remove request: %s", v33, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v34, -1, -1);
        MEMORY[0x1D9447730](v33, -1, -1);
      }
      else
      {
      }
      LOBYTE(aBlock[0]) = 0;
      return a3(aBlock, 0, a2, v59);
    }
  }
  if (!a1) {
    goto LABEL_11;
  }
  if (!*(void *)(v59 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 24))
  {
    swift_retain();
    goto LABEL_16;
  }
  swift_retain();
  uint64_t v28 = (uint64_t)v56;
  sub_1D4469628();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v28, 1, v12) == 1)
  {
    sub_1D4276C3C(v28, (uint64_t *)&unk_1EBD7E930);
LABEL_16:
    uint64_t v38 = sub_1D44698F8();
    os_log_type_t v39 = sub_1D446A038();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl(&dword_1D4271000, v38, v39, "FMIPDeviceActionsController: Not calling unpair for local findable beacons", v40, 2u);
      MEMORY[0x1D9447730](v40, -1, -1);
    }

    FMIPActionStatus.init(rawValue:)(*(void *)(a1 + 48));
    char v41 = aBlock[0];
    if (LOBYTE(aBlock[0]) == 18) {
      char v41 = 0;
    }
    LOBYTE(aBlock[0]) = v41;
    uint64_t v42 = *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    a3(aBlock, v42, 0, v59);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v15, v28, v12);
  unint64_t v43 = sub_1D44698F8();
  os_log_type_t v44 = sub_1D446A038();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v45 = 0;
    _os_log_impl(&dword_1D4271000, v43, v44, "FMIPDeviceActionsController: Calling unpair for local findable beacons", v45, 2u);
    MEMORY[0x1D9447730](v45, -1, -1);
  }

  id v46 = sub_1D430DA10();
  char v47 = (void *)sub_1D4469648();
  id v48 = (void *)swift_allocObject();
  uint64_t v49 = v58;
  uint64_t v50 = v59;
  v48[2] = a3;
  v48[3] = v49;
  v48[4] = a1;
  v48[5] = 0;
  v48[6] = v50;
  aBlock[4] = (uint64_t)sub_1D43251F4;
  aBlock[5] = (uint64_t)v48;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D42E1B08;
  aBlock[3] = (uint64_t)&unk_1F2C06108;
  BOOL v51 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v46, sel_unpairUUID_force_completion_, v47, 0, v51);
  _Block_release(v51);
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1D4322F10(void *a1, void (*a2)(uint64_t *, uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D4469928();
  sub_1D42D7FAC(v10, (uint64_t)qword_1EA6E4710);
  id v11 = a1;
  id v12 = a1;
  uint64_t v13 = sub_1D44698F8();
  os_log_type_t v14 = sub_1D446A038();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v24 = a4;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v26 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    id v17 = a1;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    uint64_t v18 = sub_1D4469B68();
    sub_1D42CB9EC(v18, v19, &v26);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v13, v14, "FMIPDeviceActionsController: Unpair finished. With error? %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v16, -1, -1);
    uint64_t v20 = v15;
    a4 = v24;
    MEMORY[0x1D9447730](v20, -1, -1);
  }
  else
  {
  }
  FMIPActionStatus.init(rawValue:)(*(void *)(a4 + 48));
  char v21 = v26;
  if (v26 == 18) {
    char v21 = 0;
  }
  LOBYTE(v26) = v21;
  uint64_t v22 = *(void *)(a4 + 56);
  swift_bridgeObjectRetain();
  a2(&v26, v22, a5, a6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4323164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D4469928();
  sub_1D42D7FAC(v8, (uint64_t)qword_1EA6E4710);
  id v9 = sub_1D44698F8();
  os_log_type_t v10 = sub_1D446A038();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v11 = 0;
    _os_log_impl(&dword_1D4271000, v9, v10, "FMIPDeviceActionsController: Starting repair device request", v11, 2u);
    MEMORY[0x1D9447730](v11, -1, -1);
  }

  type metadata accessor for FMIPRepairRequest();
  *(void *)(swift_allocObject() + qword_1EA6E48B0) = a1;
  uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  uint64_t v13 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  os_log_type_t v14 = sub_1D4332A24(0x6544726961706572, 0xEC00000065636976, v12, v13, 0);
  uint64_t v15 = v4 + 6;
  uint64_t v17 = v4[9];
  uint64_t v16 = v4[10];
  sub_1D42C26F4(v15, v17);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = a2;
  v18[3] = a3;
  v18[4] = a1;
  unint64_t v19 = *(void (**)(void *, uint64_t (*)(uint64_t, void *), void *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v20 = type metadata accessor for FMIPRepairResponse();
  swift_retain();
  swift_retain();
  v19(v14, sub_1D4325174, v18, v20, v17, v16);
  swift_release();
  return swift_release();
}

uint64_t sub_1D4323388(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t *, uint64_t, void *, uint64_t), uint64_t a4, uint64_t a5)
{
  if (a2 || !a1)
  {
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1D4469928();
    sub_1D42D7FAC(v17, (uint64_t)qword_1EA6E4710);
    id v18 = a2;
    id v19 = a2;
    uint64_t v20 = sub_1D44698F8();
    os_log_type_t v21 = sub_1D446A038();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v26 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
      uint64_t v24 = sub_1D446A158();
      sub_1D42CB9EC(v24, v25, &v26);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v20, v21, "FMIPDeviceActionsController: error received for repair request: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v23, -1, -1);
      MEMORY[0x1D9447730](v22, -1, -1);
    }
    else
    {
    }
    LOBYTE(v26) = 0;
    return a3(&v26, 0, a2, a5);
  }
  else
  {
    uint64_t v9 = qword_1EA6C8F68;
    swift_retain();
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1D4469928();
    sub_1D42D7FAC(v10, (uint64_t)qword_1EA6E4710);
    id v11 = sub_1D44698F8();
    os_log_type_t v12 = sub_1D446A038();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_1D4271000, v11, v12, "FMIPDeviceActionsController: repair device action completed successfully", v13, 2u);
      MEMORY[0x1D9447730](v13, -1, -1);
    }

    FMIPActionStatus.init(rawValue:)(*(void *)(a1 + 48));
    char v14 = v26;
    if (v26 == 18) {
      char v14 = 0;
    }
    LOBYTE(v26) = v14;
    uint64_t v15 = *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    a3(&v26, v15, 0, a5);
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

void sub_1D43236A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, id a5, void (*a6)(uint64_t, id), uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a5)
  {
    id v13 = a5;
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1D4469928();
    sub_1D42D7FAC(v14, (uint64_t)qword_1EA6E4710);
    id v15 = a5;
    id v16 = a5;
    uint64_t v17 = sub_1D44698F8();
    os_log_type_t v18 = sub_1D446A038();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v39 = v20;
      *(_DWORD *)id v19 = 136315138;
      id v21 = a5;
      sub_1D42D5DA0(&qword_1EA6C9360);
      uint64_t v22 = sub_1D4469B68();
      sub_1D42CB9EC(v22, v23, &v39);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v17, v18, "FMIPDeviceActionsController: Authentication error %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v20, -1, -1);
      MEMORY[0x1D9447730](v19, -1, -1);
    }
    else
    {
    }
    id v33 = a5;
    a6(a8, a5);
  }
  else if (a4 && a2)
  {
    uint64_t v28 = qword_1EA6C8F68;
    swift_bridgeObjectRetain();
    if (v28 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1D4469928();
    sub_1D42D7FAC(v29, (uint64_t)qword_1EA6E4710);
    swift_bridgeObjectRetain_n();
    id v30 = sub_1D44698F8();
    os_log_type_t v31 = sub_1D446A038();
    if (os_log_type_enabled(v30, v31))
    {
      os_log_type_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = v38;
      *(_DWORD *)os_log_type_t v32 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D42CB9EC(a3, a4, &v39);
      sub_1D446A188();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D4271000, v30, v31, "FMIPDeviceActionsController: Authentication received %s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v38, -1, -1);
      MEMORY[0x1D9447730](v32, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v36 = (void *)(a8 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
    *unint64_t v36 = a1;
    v36[1] = a2;
    swift_bridgeObjectRelease();
    uint64_t v37 = (void *)swift_allocObject();
    v37[2] = a6;
    v37[3] = a7;
    v37[4] = a8;
    swift_retain();
    swift_retain();
    sub_1D4323F4C(a3, a4, a8, (uint64_t)sub_1D4327510, (uint64_t)v37);
    swift_release();
  }
  else
  {
    sub_1D4325284();
    uint64_t v34 = (void *)swift_allocError();
    unsigned char *v35 = 1;
    a6(a8, v34);
  }
}

void sub_1D4323B4C(int a1, uint64_t a2, id a3, void (*a4)(uint64_t, id), uint64_t a5, uint64_t a6)
{
  if (a3)
  {
    id v9 = a3;
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1D4469928();
    sub_1D42D7FAC(v10, (uint64_t)qword_1EA6E4710);
    id v11 = a3;
    id v12 = a3;
    id v13 = sub_1D44698F8();
    os_log_type_t v14 = sub_1D446A038();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v32 = v16;
      *(_DWORD *)id v15 = 136315138;
      id v17 = a3;
      sub_1D42D5DA0(&qword_1EA6C9360);
      uint64_t v18 = sub_1D4469B68();
      sub_1D42CB9EC(v18, v19, &v32);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v13, v14, "FMIPDeviceActionsController: Error validating password %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v16, -1, -1);
      MEMORY[0x1D9447730](v15, -1, -1);
    }
    else
    {
    }
    id v31 = a3;
    a4(a6, a3);
  }
  else
  {
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1D4469928();
    sub_1D42D7FAC(v21, (uint64_t)qword_1EA6E4710);
    swift_retain_n();
    uint64_t v22 = sub_1D44698F8();
    os_log_type_t v23 = sub_1D446A038();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v32 = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v26 = *(uint64_t (**)(uint64_t))(*(void *)a2 + 344);
      uint64_t v27 = swift_retain();
      uint64_t v28 = v26(v27);
      unint64_t v30 = v29;
      swift_release();
      sub_1D42CB9EC(v28, v30, &v32);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v22, v23, "FMIPDeviceActionsController: Password validated %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v25, -1, -1);
      MEMORY[0x1D9447730](v24, -1, -1);

      a4(a2, 0);
    }
    else
    {

      swift_release_n();
      a4(a2, 0);
    }
  }
}

uint64_t sub_1D4323F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for FMIPDevice();
  MEMORY[0x1F4188790](v12 - 8);
  os_log_type_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FMIPLostModeAction(0);
  if (swift_dynamicCastClass())
  {
    char v15 = 3;
  }
  else
  {
    type metadata accessor for FMIPLockAction();
    if (swift_dynamicCastClass())
    {
      char v15 = 2;
    }
    else
    {
      type metadata accessor for FMIPEraseAction();
      if (swift_dynamicCastClass())
      {
        char v15 = 0;
      }
      else
      {
        type metadata accessor for FMIPCancelEraseAction();
        if (swift_dynamicCastClass())
        {
          char v15 = 1;
        }
        else
        {
          type metadata accessor for FMIPRemoveDeviceAction(0);
          if (swift_dynamicCastClass()) {
            char v15 = 4;
          }
          else {
            char v15 = 5;
          }
        }
      }
    }
  }
  sub_1D42D2238(a3 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  type metadata accessor for FMIPValidatePasswordRequest();
  uint64_t v16 = swift_allocObject();
  id v17 = (void *)(v16 + qword_1EA6E4988);
  void *v17 = a1;
  v17[1] = a2;
  *(unsigned char *)(v16 + qword_1EA6E4990) = v15;
  sub_1D42D2238((uint64_t)v14, v16 + qword_1EA6E4998, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v18 = *((void *)v14 + 27);
  if ((v18 & 0x80) != 0) {
    uint64_t v19 = 0xD000000000000013;
  }
  else {
    uint64_t v19 = 0xD000000000000011;
  }
  if ((v18 & 0x80) != 0) {
    uint64_t v20 = 0x80000001D447F2C0;
  }
  else {
    uint64_t v20 = 0x80000001D447F2A0;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1D4332A24(v19, v20, 0, 0, 1);
  sub_1D42D2058((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v22 = v6 + 6;
  uint64_t v24 = v6[9];
  uint64_t v23 = v6[10];
  sub_1D42C26F4(v22, v24);
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = a4;
  v25[3] = a5;
  v25[4] = a3;
  uint64_t v26 = *(void (**)(void *, uint64_t (*)(void *, void *), void *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  uint64_t v27 = type metadata accessor for FMIPValidatePasswordResponse();
  swift_retain();
  swift_retain();
  v26(v21, sub_1D4324F90, v25, v27, v24, v23);
  swift_release();
  return swift_release();
}

uint64_t sub_1D432421C(void *a1, void *a2, void (*a3)(void, void, void), uint64_t a4, uint64_t a5)
{
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D4469928();
  sub_1D42D7FAC(v9, (uint64_t)qword_1EA6E4710);
  swift_retain_n();
  uint64_t v10 = sub_1D44698F8();
  os_log_type_t v11 = sub_1D446A038();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v32 = a3;
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    id v31 = a2;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v33 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_1D42D5DA0(&qword_1EA6C99E0);
    uint64_t v14 = sub_1D446A158();
    sub_1D42CB9EC(v14, v15, &v33);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v10, v11, "FMIPDeviceActionsController: validate password response received: %s", v12, 0xCu);
    swift_arrayDestroy();
    uint64_t v16 = v13;
    a2 = v31;
    MEMORY[0x1D9447730](v16, -1, -1);
    id v17 = v12;
    a3 = v32;
    MEMORY[0x1D9447730](v17, -1, -1);

    if (v31) {
      goto LABEL_9;
    }
  }
  else
  {

    swift_release_n();
    if (a2) {
      goto LABEL_9;
    }
  }
  if (a1)
  {
    uint64_t v18 = a1[8];
    uint64_t v19 = (void *)(a5 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_escrowUUID);
    *uint64_t v19 = a1[7];
    v19[1] = v18;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = a1[10];
    uint64_t v21 = (void *)(a5 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
    *uint64_t v21 = a1[9];
    v21[1] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    LOBYTE(v33) = 2 * (a1[6] == 200);
    a3(&v33, a5, 0);
    return swift_release();
  }
LABEL_9:
  id v23 = a2;
  id v24 = a2;
  uint64_t v25 = sub_1D44698F8();
  os_log_type_t v26 = sub_1D446A038();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315138;
    uint64_t v33 = v28;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    uint64_t v29 = sub_1D446A158();
    sub_1D42CB9EC(v29, v30, &v33);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v25, v26, "FMIPDeviceActionsController: error received validate password: %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v28, -1, -1);
    MEMORY[0x1D9447730](v27, -1, -1);
  }
  else
  {
  }
  LOBYTE(v33) = 0;
  return ((uint64_t (*)(uint64_t *, uint64_t, void *))a3)(&v33, a5, a2);
}

void sub_1D4324610(uint64_t a1, void *a2, void (*a3)(uint64_t, void *), uint64_t a4, uint64_t a5)
{
  if (qword_1EA6C8F68 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D4469928();
  sub_1D42D7FAC(v9, (uint64_t)qword_1EA6E4710);
  swift_retain_n();
  uint64_t v10 = sub_1D44698F8();
  os_log_type_t v11 = sub_1D446A038();
  if (os_log_type_enabled(v10, v11))
  {
    unint64_t v36 = a2;
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v38[0] = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v39 = a1;
    sub_1D42D5DA0(&qword_1EA6C9AC0);
    uint64_t v14 = sub_1D446A158();
    uint64_t v39 = sub_1D42CB9EC(v14, v15, v38);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v10, v11, "FMIPDeviceActionsController: verify trusted state response received: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v13, -1, -1);
    uint64_t v16 = v12;
    a2 = v36;
    MEMORY[0x1D9447730](v16, -1, -1);

    if (v36) {
      goto LABEL_10;
    }
  }
  else
  {

    swift_release_n();
    if (a2)
    {
LABEL_10:
      id v22 = a2;
      id v23 = a2;
      id v24 = sub_1D44698F8();
      os_log_type_t v25 = sub_1D446A038();
      if (os_log_type_enabled(v24, v25))
      {
        os_log_type_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        v38[0] = v27;
        *(_DWORD *)os_log_type_t v26 = 136315138;
        uint64_t v39 = (uint64_t)a2;
        sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
        uint64_t v28 = sub_1D446A158();
        uint64_t v39 = sub_1D42CB9EC(v28, v29, v38);
        sub_1D446A188();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D4271000, v24, v25, "FMIPDeviceActionsController: error received verifying trusted state password: %s", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v27, -1, -1);
        MEMORY[0x1D9447730](v26, -1, -1);
      }
      else
      {
      }
      a3(a5, a2);
      return;
    }
  }
  if (!a1) {
    goto LABEL_10;
  }
  id v17 = (void (**)(uint64_t, uint64_t, void (*)(char), void *))(a5
                                                                                    + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  swift_beginAccess();
  uint64_t v18 = *v17;
  if (*v17)
  {
    uint64_t v19 = *(unsigned __int8 *)(a1 + 57);
    uint64_t v20 = *(unsigned __int8 *)(a1 + 56);
    uint64_t v21 = (void *)swift_allocObject();
    v21[2] = a3;
    v21[3] = a4;
    v21[4] = a5;
    swift_retain();
    sub_1D42972D4((uint64_t)v18);
    swift_retain();
    swift_retain();
    v18(v19, v20, sub_1D43273F4, v21);
    swift_release();
    swift_release();
    sub_1D42E2C6C((uint64_t)v18);
  }
  else
  {
    uint64_t v30 = qword_1EBD80068;
    swift_retain();
    if (v30 != -1) {
      swift_once();
    }
    sub_1D42D7FAC(v9, (uint64_t)qword_1EBD83228);
    id v31 = sub_1D44698F8();
    os_log_type_t v32 = sub_1D446A018();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl(&dword_1D4271000, v31, v32, "FMIPDeviceActionsController: trusted device confirmation callback missing", v33, 2u);
      MEMORY[0x1D9447730](v33, -1, -1);
    }

    sub_1D4325284();
    uint64_t v34 = (void *)swift_allocError();
    unsigned char *v35 = 3;
    a3(a5, v34);
    swift_release();
  }
}

void sub_1D4324B4C(char a1, void (*a2)(uint64_t, void *), uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1D4469928();
    sub_1D42D7FAC(v6, (uint64_t)qword_1EA6E4710);
    id v7 = sub_1D44698F8();
    os_log_type_t v8 = sub_1D446A038();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1D4271000, v7, v8, "FMIPDeviceActionsController: trusted device confirmation confirmed", v9, 2u);
      MEMORY[0x1D9447730](v9, -1, -1);
    }

    a2(a4, 0);
  }
  else
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1D4469928();
    sub_1D42D7FAC(v10, (uint64_t)qword_1EBD83228);
    os_log_type_t v11 = sub_1D44698F8();
    os_log_type_t v12 = sub_1D446A018();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_1D4271000, v11, v12, "FMIPDeviceActionsController: trusted device confirmation declined", v13, 2u);
      MEMORY[0x1D9447730](v13, -1, -1);
    }

    sub_1D4325284();
    uint64_t v14 = (void *)swift_allocError();
    *unint64_t v15 = 4;
    a2(a4, v14);
  }
}

uint64_t sub_1D4324D68()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t getEnumTagSinglePayload for FMIPDeviceImageVariant(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPDeviceActionsControllerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4324EFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPDeviceActionsControllerError()
{
  return &type metadata for FMIPDeviceActionsControllerError;
}

unint64_t sub_1D4324F38()
{
  unint64_t result = qword_1EA6C99D8;
  if (!qword_1EA6C99D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C99D8);
  }
  return result;
}

uint64_t sub_1D4324F90(void *a1, void *a2)
{
  return sub_1D432421C(a1, a2, *(void (**)(void, void, void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1D4324F9C(uint64_t a1, int *a2)
{
  unsigned int v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_1D4325078;
  return v6(a1);
}

uint64_t sub_1D4325078()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1D4325174(uint64_t a1, void *a2)
{
  return sub_1D4323388(a1, a2, *(uint64_t (**)(uint64_t *, uint64_t, void *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1D4325180()
{
  return sub_1D432743C(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D4325198(uint64_t a1, void *a2)
{
  return sub_1D4322808(a1, a2, *(uint64_t (**)(void, void, void, void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1D43251A4()
{
  swift_release();
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D43251F4(uint64_t a1)
{
  return sub_1D43254EC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1D4322F10);
}

uint64_t sub_1D432520C()
{
  return sub_1D432743C(MEMORY[0x1E4FBC8D0]);
}

void sub_1D4325224(void *a1)
{
  sub_1D4322358(a1, *(void (**)(void *, void, void *, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1D4325234(void *a1)
{
  return sub_1D4321D40(a1, *(void (**)(uint64_t *, uint64_t, void *, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1D4325240()
{
  return sub_1D432743C(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D4325258(uint64_t a1, void *a2)
{
  return sub_1D432176C(a1, a2, *(void (**)(char *, uint64_t, id, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1D4325264()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D4325278(void *a1)
{
  return sub_1D4321B04(a1, *(uint64_t (**)(uint64_t, void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

unint64_t sub_1D4325284()
{
  unint64_t result = qword_1EA6C99F0;
  if (!qword_1EA6C99F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA6C99F0);
  }
  return result;
}

uint64_t sub_1D43252D8()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1D4325338()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = v0[2];
  long long v4 = v0[3];
  long long v5 = v0[4];
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1D42F9444;
  *(_OWORD *)(v2 + 80) = v4;
  *(_OWORD *)(v2 + 96) = v5;
  *(_OWORD *)(v2 + 64) = v3;
  return MEMORY[0x1F4188298](sub_1D43202E0, 0, 0);
}

uint64_t sub_1D43253EC(uint64_t a1)
{
  long long v4 = *(int **)(v1 + 16);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *long long v5 = v2;
  v5[1] = sub_1D42F9444;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA6C9A08 + dword_1EA6C9A08);
  return v6(a1, v4);
}

uint64_t sub_1D43254A8(void *a1)
{
  return sub_1D4325804(a1, "FMIPDeviceActionsController: lost mode action failed %s", (uint64_t)&unk_1F2C06398, (uint64_t)&unk_1EA6C9A30);
}

uint64_t sub_1D43254D4(uint64_t a1)
{
  return sub_1D43254EC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1D4320984);
}

uint64_t sub_1D43254EC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1D4325508()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1D42FA10C;
  *(_OWORD *)(v2 + 64) = v3;
  return MEMORY[0x1F4188298](sub_1D4320C74, v3, 0);
}

uint64_t sub_1D43255B8()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1D42FA10C;
  *(_OWORD *)(v2 + 64) = v3;
  return MEMORY[0x1F4188298](sub_1D4327648, v3, 0);
}

uint64_t sub_1D4325664()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_1D43256CC()
{
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  long long v5 = *(_OWORD *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 64);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1D42FA10C;
  *(void *)(v3 + 112) = v2;
  *(_OWORD *)(v3 + 80) = v5;
  *(_OWORD *)(v3 + 96) = v6;
  *(_OWORD *)(v3 + 64) = v4;
  return MEMORY[0x1F4188298](sub_1D431F6DC, 0, 0);
}

uint64_t sub_1D432578C()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D43257DC(void *a1)
{
  return sub_1D4325804(a1, "FMIPDeviceActionsController: notify subscription failed %s", (uint64_t)&unk_1F2C064B0, (uint64_t)&unk_1EA6C9A60);
}

uint64_t sub_1D4325804(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D4320668(a1, *(void (**)(void, void, void, void))(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void **)(v4 + 48), a2, a3, a4);
}

uint64_t sub_1D4325840()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1D4325898(uint64_t a1)
{
  return sub_1D4325AD4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1D431FA6C);
}

uint64_t sub_1D43258B4()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1D42FA10C;
  *(_OWORD *)(v2 + 64) = v3;
  return MEMORY[0x1F4188298](sub_1D4327648, v3, 0);
}

uint64_t sub_1D4325964()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1D42FA10C;
  *(_OWORD *)(v2 + 64) = v3;
  return MEMORY[0x1F4188298](sub_1D4327648, v3, 0);
}

uint64_t sub_1D4325A10()
{
  return sub_1D432743C(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D4325A28(uint64_t a1, void *a2)
{
  return sub_1D431EAC8(a1, a2, *(void (**)(uint64_t *, uint64_t, void *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1D4325A38(uint64_t a1, void *a2)
{
  return sub_1D431E428(a1, a2, *(uint64_t (**)(uint64_t *, uint64_t, void *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), "FMIPDeviceActionsController: performNotifyWhenDetached action response received: %s", "FMIPDeviceActionsController: error received for notify request: %s", 0);
}

uint64_t sub_1D4325A6C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1D4325ABC(uint64_t a1)
{
  return sub_1D4325AD4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1D431DB5C);
}

uint64_t sub_1D4325AD4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1D4325AEC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D4325B34(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D431DEB0(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(uint64_t (**)(void, void, void, void))(v4 + 40));
}

uint64_t sub_1D4325B68(uint64_t a1, void *a2)
{
  return sub_1D431E428(a1, a2, *(uint64_t (**)(uint64_t *, uint64_t, void *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), "FMIPDeviceActionsController: performShowContactDetails action response received: %s", "FMIPDeviceActionsController: error received for show contact details request: %s", 1);
}

uint64_t sub_1D4325B9C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = 0;
    uint64_t v3 = a1 + 32;
    uint64_t v4 = MEMORY[0x1E4FBC860];
    uint64_t v15 = a1 + 32;
    unint64_t v16 = *(void *)(a1 + 16);
    while (1)
    {
      uint64_t v5 = 0;
      if (v2 <= v1) {
        unint64_t v6 = v1;
      }
      else {
        unint64_t v6 = v2;
      }
      unint64_t v7 = v2 - v6;
      while (2)
      {
        if (!(v7 + v5))
        {
          __break(1u);
          JUMPOUT(0x1D4325D60);
        }
        char v9 = *(unsigned char *)(v3 + v2);
        switch(v9)
        {
          case 4:
            swift_bridgeObjectRelease();
            goto LABEL_8;
          default:
            char v8 = sub_1D446A758();
            swift_bridgeObjectRelease();
            if (v8)
            {
LABEL_8:
              ++v5;
              ++v3;
              if (v2 == --v1) {
                return v4;
              }
              continue;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_1D4337144(0, *(void *)(v4 + 16) + 1, 1);
            }
            uint64_t v3 = v15;
            unint64_t v11 = *(void *)(v4 + 16);
            unint64_t v10 = *(void *)(v4 + 24);
            if (v11 >= v10 >> 1) {
              sub_1D4337144(v10 > 1, v11 + 1, 1);
            }
            unint64_t v12 = v2 + 1;
            v2 += 1 + v5;
            *(void *)(v4 + 16) = v11 + 1;
            *(unsigned char *)(v4 + v11 + 32) = v9;
            BOOL v13 = v12 == v1;
            unint64_t v1 = v16;
            if (v13) {
              return v4;
            }
            break;
        }
        break;
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1D4325D74(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMIPItemGroup();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPDevice();
  sub_1D42A3A74(a1 + *(int *)(v9 + 128), (uint64_t)v4, &qword_1EBD7E670);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1D4276C3C((uint64_t)v4, &qword_1EBD7E670);
    if (*(unsigned char *)(a1 + *(int *)(v9 + 136)) == 5)
    {
      uint64_t v10 = *(void *)(a1 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      return 0;
    }
  }
  else
  {
    sub_1D42D6AE4((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v10 = *((void *)v8 + 1);
    swift_bridgeObjectRetain();
    sub_1D42D2058((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  }
  return v10;
}

uint64_t sub_1D4325F48(uint64_t a1, void *a2)
{
  return sub_1D431D40C(a1, a2, *(uint64_t (**)(uint64_t *, uint64_t, void *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), &qword_1EA6C9A78, "FMIPDeviceActionsController: lost mode response received: %s", (void (*)(uint64_t *__return_ptr, uint64_t))sub_1D440CA58, "FMIPDeviceActionsController: error received for lost mode request: %s");
}

uint64_t sub_1D4325FA0()
{
  uint64_t v1 = sub_1D4469688();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1D43260A4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1D4469688() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = v1[6];
  uint64_t v11 = (uint64_t)v1 + v5;
  uint64_t v12 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  BOOL v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *BOOL v13 = v2;
  v13[1] = sub_1D42FA10C;
  return sub_1D431B5B8(a1, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1D43261FC(uint64_t a1)
{
  return sub_1D4326344(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D431BB58);
}

uint64_t sub_1D4326218()
{
  uint64_t v1 = sub_1D4469688();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t sub_1D432632C(uint64_t a1)
{
  return sub_1D4326344(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D431C288);
}

uint64_t sub_1D4326344(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(sub_1D4469688() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void *)(v2 + v6);
  uint64_t v10 = *(void *)(v2 + v6 + 8);
  uint64_t v11 = *(void *)(v2 + v7);
  uint64_t v12 = *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  return a2(a1, v8, v2 + v5, v9, v10, v11, v12);
}

uint64_t sub_1D4326418()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1D42FA10C;
  *(_OWORD *)(v2 + 64) = v3;
  return MEMORY[0x1F4188298](sub_1D4327648, v3, 0);
}

uint64_t sub_1D43264C8()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D4326510()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1D42FA10C;
  *(_OWORD *)(v2 + 64) = v3;
  return MEMORY[0x1F4188298](sub_1D4327648, v3, 0);
}

uint64_t sub_1D43265C0(void *a1, void *a2)
{
  return sub_1D4319170(a1, a2, *(void *)(v2 + 16), *(char **)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1D43265CC()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D4326608()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1D4326650(uint64_t a1, uint64_t a2)
{
  sub_1D4319D54(a1, a2, *(void *)(v2 + 16), *(void (**)(uint64_t *, uint64_t, void, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1D432665C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_1D4326694()
{
  return sub_1D43D3BDC(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_1D432669C()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

unsigned char **sub_1D43266AC(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_1D43050AC(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_1D43266B4()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D43266C4()
{
  return sub_1D430500C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1D43266CC(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1D4305034(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1D43266D4@<X0>(void *a1@<X8>)
{
  *a1 = v1;
  return swift_retain();
}

uint64_t sub_1D43266E0()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D43266F0()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326700()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326710()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326728()
{
  return sub_1D43D3AB4(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_1D4326730()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326740()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326754()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326764()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326778()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326788()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326798()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1D43267A8(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
}

uint64_t sub_1D43267B4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4347584(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_1D43267BC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D43267CC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D43267E0()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D43267F0()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326800()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D4326810()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326820()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326834()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326844()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326854()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D4326864()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326874()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326888()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326898()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D43268A8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D43268B8()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D43268C8()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D43268DC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D43268EC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326900()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326910()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326920()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D4326930()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326940()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326954()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326964()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326978()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326988()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326998()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D43269A8()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D43269B8()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D43269CC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D43269DC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D43269EC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D43269FC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326A0C()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326A20()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326A30()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326A44()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326A54()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326A68()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326A78()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326A88()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D4326A98()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326AA8()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326ABC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326ACC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326ADC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D4326AEC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326AFC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326B10()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326B20()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326B34()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326B44()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326B58()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326B68()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326B78()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D4326B88()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326B98()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326BAC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326BBC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326BCC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D4326BDC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326BEC()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326C00()
{
  uint64_t v1 = sub_1D4469688();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D4326C90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D4469688();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return v5(a1, v6, v3);
}

uint64_t sub_1D4326D04()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326D14()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4326D24()
{
  uint64_t v1 = sub_1D4469688();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1D4326E10(char *a1)
{
  uint64_t v3 = *(void *)(sub_1D4469688() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + v4;
  uint64_t v7 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void (**)(char **, uint64_t, void *, uint64_t))v7;
  uint64_t v9 = *(void *)(v7 + 8);
  return sub_1D43187D4(a1, v5, v6, v8, v9);
}

uint64_t sub_1D4326EB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D4326EFC(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t, void *, uint64_t), void *a5, uint64_t a6, void *a7, uint64_t a8)
{
  unint64_t v43 = a3;
  uint64_t v15 = type metadata accessor for FMIPDevice();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v42 = (uint64_t)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  char v41 = a4;
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = a5;
  *(void *)(v17 + 32) = a6;
  *(void *)(v17 + 40) = a7;
  long long v18 = *(_OWORD *)(a8 + 48);
  *(_OWORD *)(v17 + 80) = *(_OWORD *)(a8 + 32);
  *(_OWORD *)(v17 + 96) = v18;
  *(_OWORD *)(v17 + 112) = *(_OWORD *)(a8 + 64);
  *(void *)(v17 + 128) = *(void *)(a8 + 80);
  long long v19 = *(_OWORD *)(a8 + 16);
  *(_OWORD *)(v17 + 48) = *(_OWORD *)a8;
  *(_OWORD *)(v17 + 64) = v19;
  int v20 = *(unsigned __int8 *)(a2 + 35);
  uint64_t v21 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 200);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v22 = sub_1D4290D4C(a8);
  if ((v21(v22) & 1) != 0 && v20)
  {
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1D4469928();
    sub_1D42D7FAC(v23, (uint64_t)qword_1EA6E4710);
    id v24 = sub_1D44698F8();
    os_log_type_t v25 = sub_1D446A038();
    if (os_log_type_enabled(v24, v25))
    {
      os_log_type_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v26 = 0;
      _os_log_impl(&dword_1D4271000, v24, v25, "FMIPDeviceActionsController: verifying trusted state", v26, 2u);
      MEMORY[0x1D9447730](v26, -1, -1);
    }

    uint64_t v27 = v42;
    sub_1D42D2238(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, v42, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    type metadata accessor for FMIPVerifyTrustedStateRequest();
    uint64_t v28 = swift_allocObject();
    sub_1D42D2238(v27, v28 + qword_1EA6E4878, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    unint64_t v29 = sub_1D4332A24(0xD000000000000013, 0x80000001D447F380, 0, 0, 1);
    sub_1D42D2058(v27, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v31 = v43[9];
    uint64_t v30 = v43[10];
    sub_1D42C26F4(v43 + 6, v31);
    os_log_type_t v32 = (void *)swift_allocObject();
    v32[2] = sub_1D43273D0;
    v32[3] = v17;
    v32[4] = a1;
    uint64_t v33 = *(void (**)(void *, void (*)(uint64_t, void *), void *, uint64_t, uint64_t, uint64_t))(v30 + 56);
    uint64_t v34 = type metadata accessor for FMIPVerifyTrustedStateResponse();
    swift_retain();
    swift_retain();
    v33(v29, sub_1D43273E4, v32, v34, v31, v30);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    if (qword_1EA6C8F68 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_1D4469928();
    sub_1D42D7FAC(v36, (uint64_t)qword_1EA6E4710);
    uint64_t v37 = sub_1D44698F8();
    os_log_type_t v38 = sub_1D446A038();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl(&dword_1D4271000, v37, v38, "FMIPDeviceActionsController: no need to verify trusted state", v39, 2u);
      MEMORY[0x1D9447730](v39, -1, -1);
    }

    sub_1D430DFC4(a1, 0, v41, a5, a6, a7, a8);
    return swift_release();
  }
}

uint64_t sub_1D4327360()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 136, 7);
}

uint64_t sub_1D43273D0(uint64_t a1, void *a2)
{
  return sub_1D430DFC4(a1, a2, *(void (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t, void *, uint64_t))(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), v2 + 48);
}

void sub_1D43273E4(uint64_t a1, void *a2)
{
  sub_1D4324610(a1, a2, *(void (**)(uint64_t, void *))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_1D43273F4(char a1)
{
  sub_1D4324B4C(a1, *(void (**)(uint64_t, void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1D4327400()
{
  return sub_1D432743C(MEMORY[0x1E4FBC8D0]);
}

void sub_1D4327418(uint64_t a1, void *a2)
{
  sub_1D430E450(a1, a2, *(void (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t, void *, uint64_t))(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1D4327424()
{
  return sub_1D432743C(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D432743C(void (*a1)(void))
{
  swift_release();
  swift_release();
  a1(*(void *)(v1 + 40));
  return MEMORY[0x1F4186498](v1, 48, 7);
}

void sub_1D4327494(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  sub_1D43236A0(a1, a2, a3, a4, a5, *(void (**)(uint64_t, id))(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40));
}

uint64_t sub_1D43274C0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1D4327500(uint64_t a1, void *a2)
{
  sub_1D4305508(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_1D4327510(int a1, uint64_t a2, void *a3)
{
  sub_1D4323B4C(a1, a2, a3, *(void (**)(uint64_t, id))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_1D4327520(uint64_t a1, void *a2)
{
  return sub_1D431D40C(a1, a2, *(uint64_t (**)(uint64_t *, uint64_t, void *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), &qword_1EA6C9AD8, "FMIPDeviceActionsController: cancel erase response received: %s", (void (*)(uint64_t *__return_ptr, uint64_t))sub_1D43E5D5C, "FMIPDeviceActionsController: error received for cancel erase request: %s");
}

uint64_t sub_1D432757C(uint64_t a1, void *a2)
{
  return sub_1D431D40C(a1, a2, *(uint64_t (**)(uint64_t *, uint64_t, void *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), &qword_1EA6C9AD0, "FMIPDeviceActionsController: erase response received: %s", (void (*)(uint64_t *__return_ptr, uint64_t))sub_1D43A9CE4, "FMIPDeviceActionsController: error received for erase request: %s");
}

uint64_t sub_1D43275D8(uint64_t a1, void *a2)
{
  return sub_1D431D40C(a1, a2, *(uint64_t (**)(uint64_t *, uint64_t, void *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), &qword_1EA6C9AC8, "FMIPDeviceActionsController: lock response received: %s", (void (*)(uint64_t *__return_ptr, uint64_t))sub_1D4433250, "FMIPDeviceActionsController: error received for lock request: %s");
}

uint64_t FMIPAudioChannel.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAudioChannel.isAvailable.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t FMIPAudioChannel.isPlaying.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t FMIPAudioChannel.isMuted.getter()
{
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t sub_1D432782C(unsigned __int8 *a1, char *a2)
{
  return sub_1D4414DD0(*a1, *a2);
}

uint64_t sub_1D4327838()
{
  return sub_1D446A888();
}

uint64_t sub_1D432790C()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43279C8()
{
  return sub_1D446A888();
}

uint64_t sub_1D4327A98@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D4327DFC();
  *a1 = result;
  return result;
}

void sub_1D4327AC8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701667182;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x676E6979616C70;
      goto LABEL_3;
    case 2:
      *a1 = 0x6C62616C69617661;
      a1[1] = 0xE900000000000065;
      break;
    case 3:
      *a1 = 0x646574756DLL;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1D4327B6C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D4327DFC();
  *a1 = result;
  return result;
}

void sub_1D4327B94(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1D4327BA0(uint64_t a1)
{
  unint64_t v2 = sub_1D42A67EC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D4327BDC(uint64_t a1)
{
  unint64_t v2 = sub_1D42A67EC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t _s8FMIPCore16FMIPAudioChannelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a1 + 17);
  int v4 = *(unsigned __int8 *)(a1 + 18);
  int v5 = *(unsigned __int8 *)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a2 + 17);
  int v7 = *(unsigned __int8 *)(a2 + 18);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    uint64_t result = 0;
    if (v4 != v7) {
      return result;
    }
    goto LABEL_9;
  }
  char v9 = sub_1D446A758();
  uint64_t result = 0;
  if ((v9 & 1) != 0 && ((v4 ^ v7) & 1) == 0)
  {
LABEL_9:
    if (((v3 ^ v6) & 1) == 0) {
      return v2 ^ v5 ^ 1u;
    }
  }
  return result;
}

uint64_t assignWithCopy for FMIPAudioChannel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

uint64_t assignWithTake for FMIPAudioChannel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

unint64_t sub_1D4327DA8()
{
  unint64_t result = qword_1EA6C9AF8;
  if (!qword_1EA6C9AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9AF8);
  }
  return result;
}

uint64_t sub_1D4327DFC()
{
  unint64_t v0 = sub_1D446A518();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D4327E48(char *a1, char *a2)
{
  return sub_1D4411F80(*a1, *a2);
}

uint64_t sub_1D4327E54()
{
  return sub_1D446A888();
}

uint64_t sub_1D4327EEC()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4327F70()
{
  return sub_1D446A888();
}

uint64_t sub_1D4328004@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1D4328064(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x65447473614C7369;
  if (*v1) {
    uint64_t v2 = 0x6574737572547369;
  }
  unint64_t v3 = 0xEC00000065636976;
  if (*v1) {
    unint64_t v3 = 0xEF65636976654464;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D43280B8()
{
  if (*v0) {
    return 0x6574737572547369;
  }
  else {
    return 0x65447473614C7369;
  }
}

uint64_t sub_1D4328108@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1D432816C(uint64_t a1)
{
  unint64_t v2 = sub_1D4328880();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D43281A8(uint64_t a1)
{
  unint64_t v2 = sub_1D4328880();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D43281E4(void *a1)
{
  return sub_1D4328230(a1);
}

uint64_t sub_1D4328230(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6C9B10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D4328880();
  swift_retain();
  sub_1D446A8C8();
  if (v2)
  {
    swift_release();
    sub_1D42BEC64((uint64_t)a1);
    type metadata accessor for FMIPVerifyTrustedStateResponse();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v26[0]) = 0;
    char v9 = sub_1D446A5A8();
    LOBYTE(v26[0]) = 1;
    char v10 = sub_1D446A5A8();
    *(unsigned char *)(v1 + 56) = v9 & 1;
    *(unsigned char *)(v1 + 57) = v10 & 1;
    swift_release();
    sub_1D42A4D5C((uint64_t)a1, (uint64_t)v26);
    uint64_t v3 = sub_1D427E300(v26);
    uint64_t v11 = qword_1EBD80068;
    swift_retain();
    if (v11 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1D4469928();
    sub_1D42D7FAC(v12, (uint64_t)qword_1EBD83228);
    swift_retain_n();
    BOOL v13 = sub_1D44698F8();
    os_log_type_t v14 = sub_1D446A038();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_t v25 = v13;
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      v26[0] = v24;
      uint64_t v23 = v15;
      *(_DWORD *)uint64_t v15 = 136315138;
      v22[1] = v15 + 4;
      uint64_t v16 = sub_1D43285F0();
      v26[6] = sub_1D42CB9EC(v16, v17, v26);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      BOOL v13 = v25;
      os_log_type_t v18 = v14;
      long long v19 = v23;
      _os_log_impl(&dword_1D4271000, v25, v18, "FMIPVerifyTrustedStateResponse: initialized with coder %s", v23, 0xCu);
      uint64_t v20 = v24;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v20, -1, -1);
      MEMORY[0x1D9447730](v19, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1D42BEC64((uint64_t)a1);
    swift_release();
  }
  return v3;
}

uint64_t sub_1D43285F0()
{
  return 60;
}

uint64_t sub_1D43287F0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMIPVerifyTrustedStateResponse()
{
  return self;
}

uint64_t sub_1D432885C()
{
  return sub_1D43285F0();
}

unint64_t sub_1D4328880()
{
  unint64_t result = qword_1EA6C9B18;
  if (!qword_1EA6C9B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9B18);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPVerifyTrustedStateResponse.FMIPVerifyTrustedStateCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43289A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPVerifyTrustedStateResponse.FMIPVerifyTrustedStateCodingKeys()
{
  return &type metadata for FMIPVerifyTrustedStateResponse.FMIPVerifyTrustedStateCodingKeys;
}

unint64_t sub_1D43289DC()
{
  unint64_t result = qword_1EA6C9B20;
  if (!qword_1EA6C9B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9B20);
  }
  return result;
}

unint64_t sub_1D4328A34()
{
  unint64_t result = qword_1EA6C9B28;
  if (!qword_1EA6C9B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9B28);
  }
  return result;
}

unint64_t sub_1D4328A8C()
{
  unint64_t result = qword_1EA6C9B30;
  if (!qword_1EA6C9B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9B30);
  }
  return result;
}

uint64_t sub_1D4328AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1D4328AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v20 = a2;
  uint64_t v5 = sub_1D4469958();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1D44699B8();
  uint64_t v9 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D4469928();
  sub_1D42D7FAC(v12, (uint64_t)qword_1EBD83228);
  BOOL v13 = sub_1D44698F8();
  os_log_type_t v14 = sub_1D446A038();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_1D4271000, v13, v14, "FMIPSafeLocationRefreshingController: Manually refreshing Safe Locations", v15, 2u);
    MEMORY[0x1D9447730](v15, -1, -1);
  }

  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v3;
  v16[3] = a1;
  void v16[4] = v20;
  aBlock[4] = sub_1D43294D8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C087B8;
  unint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  sub_1D42972D4(a1);
  sub_1D4469988();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1D42E81D4();
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42E2378();
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v11, v8, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v21);
  return swift_release();
}

void sub_1D4328E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)(a1 + 56);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  v9[4] = sub_1D4329530;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  v9[2] = sub_1D4275B70;
  v9[3] = &unk_1F2C08808;
  uint64_t v8 = _Block_copy(v9);
  swift_retain();
  sub_1D42972D4(a2);
  swift_release();
  objc_msgSend(v6, sel_safeLocationsForSeparationMonitoring_, v8);
  _Block_release(v8);
}

uint64_t sub_1D4328F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a4;
  uint64_t v6 = sub_1D4469958();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1D44699B8();
  uint64_t v10 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1D4469928();
  sub_1D42D7FAC(v13, (uint64_t)qword_1EBD83228);
  os_log_type_t v14 = sub_1D44698F8();
  os_log_type_t v15 = sub_1D446A038();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = v12;
    uint64_t v17 = v10;
    uint64_t v18 = v7;
    uint64_t v19 = a3;
    uint64_t v20 = a1;
    uint64_t v21 = v16;
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_1D4271000, v14, v15, "FMIPSafeLocationRefreshingController: Manually refreshed Safe Locations", v16, 2u);
    uint64_t v22 = v21;
    a1 = v20;
    a3 = v19;
    uint64_t v7 = v18;
    uint64_t v10 = v17;
    uint64_t v12 = v27;
    MEMORY[0x1D9447730](v22, -1, -1);
  }

  sub_1D427F6D4(a1, 1);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v28;
  *(void *)(v23 + 16) = a3;
  *(void *)(v23 + 24) = v24;
  aBlock[4] = sub_1D42E799C;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C08858;
  os_log_t v25 = _Block_copy(aBlock);
  sub_1D42972D4(a3);
  sub_1D4469988();
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_1D42E81D4();
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42E2378();
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v12, v9, v25);
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v29);
  return swift_release();
}

uint64_t sub_1D43292AC(uint64_t a1, uint64_t a2)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
  uint64_t v5 = sub_1D44698F8();
  os_log_type_t v6 = sub_1D446A038();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1D4271000, v5, v6, "FMIPSafeLocationRefreshingController: Completely processed safe location updates.", v7, 2u);
    MEMORY[0x1D9447730](v7, -1, -1);
  }

  uint64_t result = MEMORY[0x1D9447840](a1 + 16);
  if (result)
  {
    uint64_t v9 = result;
    swift_retain();
    sub_1D4359E10(a2, (uint64_t)sub_1D43294CC, v9);
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1D43293E0()
{
  sub_1D42F9538(v0 + 16);
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D4329438()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D4329478(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D4329484()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D43294C4()
{
  return sub_1D43292AC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D43294CC(uint64_t a1)
{
  return sub_1D4381704(a1, v1);
}

void sub_1D43294D8()
{
  sub_1D4328E2C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1D43294E8()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D4329530(uint64_t a1)
{
  return sub_1D4328F2C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1D432953C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D432957C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D43295C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1D43295DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_1D43295F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1D4329604(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1D4329618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1D432962C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1D4329640(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1D4329654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1D4329668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1D432967C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t sub_1D4329690(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_1D43296A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t sub_1D43296B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

unsigned char *storeEnumTagSinglePayload for FMIPInteractionControllerMonitor(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D4329768);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPInteractionControllerMonitor()
{
  return &type metadata for FMIPInteractionControllerMonitor;
}

uint64_t sub_1D43297A0()
{
  return sub_1D446A888();
}

uint64_t sub_1D43297F8()
{
  return sub_1D4469BC8();
}

uint64_t sub_1D4329814()
{
  return sub_1D446A888();
}

uint64_t sub_1D4329868@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1D43298BC(void *a1@<X8>)
{
  *a1 = 0x6E756F5379616C70;
  a1[1] = 0xE900000000000064;
}

unint64_t sub_1D43298E0()
{
  unint64_t result = qword_1EA6C9BB0[0];
  if (!qword_1EA6C9BB0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA6C9BB0);
  }
  return result;
}

void *FMIPDeviceImageCache.__allocating_init(converter:)(uint64_t a1, uint64_t a2)
{
  return FMImageCache.init(converter:)(a1, a2);
}

uint64_t FMIPDeviceImageCache.__deallocating_deinit()
{
  FMImageCache.deinit();
  return swift_deallocClassInstance();
}

uint64_t FMIPStandalonePart.identifier.getter()
{
  return *(void *)v0;
}

uint64_t FMIPStandalonePart.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D43299EC(char *a1, char *a2)
{
  return sub_1D4414600(*a1, *a2);
}

uint64_t sub_1D43299F8()
{
  return sub_1D446A888();
}

uint64_t sub_1D4329A78()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4329AE4()
{
  return sub_1D446A888();
}

uint64_t sub_1D4329B60@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1D4329BC0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701667182;
  if (!*v1) {
    uint64_t v2 = 0x696669746E656469;
  }
  unint64_t v3 = 0xEA00000000007265;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D4329BFC()
{
  if (*v0) {
    return 1701667182;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1D4329C34@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1D4329C98(uint64_t a1)
{
  unint64_t v2 = sub_1D4329EB4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D4329CD4(uint64_t a1)
{
  unint64_t v2 = sub_1D4329EB4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPStandalonePart.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6C9C38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D4329EB4();
  sub_1D446A8C8();
  if (!v2)
  {
    char v16 = 0;
    uint64_t v9 = sub_1D446A5C8();
    char v15 = 1;
    uint64_t v11 = sub_1D446A598();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v13;
  }
  return sub_1D42BEC64((uint64_t)a1);
}

unint64_t sub_1D4329EB4()
{
  unint64_t result = qword_1EA6C9C40;
  if (!qword_1EA6C9C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9C40);
  }
  return result;
}

uint64_t FMIPStandalonePart.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C9C48);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  v10[0] = *(void *)(v1 + 16);
  v10[1] = v8;
  sub_1D42C26F4(a1, a1[3]);
  sub_1D4329EB4();
  sub_1D446A8E8();
  char v12 = 0;
  sub_1D446A688();
  if (!v2)
  {
    char v11 = 1;
    sub_1D446A658();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t static FMIPStandalonePart.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (a1[1] == a2[1] && a1[2] == a2[2]) {
    return 1;
  }
  else {
    return sub_1D446A758();
  }
}

uint64_t FMIPStandalonePart.hash(into:)()
{
  sub_1D446A838();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t FMIPStandalonePart.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t sub_1D432A198@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FMIPStandalonePart.init(from:)(a1, a2);
}

uint64_t sub_1D432A1B0(void *a1)
{
  return FMIPStandalonePart.encode(to:)(a1);
}

uint64_t sub_1D432A1C8(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (a1[1] == a2[1] && a1[2] == a2[2]) {
    return 1;
  }
  else {
    return sub_1D446A758();
  }
}

uint64_t sub_1D432A210()
{
  return sub_1D446A888();
}

uint64_t sub_1D432A284()
{
  sub_1D446A838();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D432A2E8()
{
  return sub_1D446A888();
}

unint64_t sub_1D432A35C()
{
  unint64_t result = qword_1EA6C9C50;
  if (!qword_1EA6C9C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9C50);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FMIPStandalonePart(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for FMIPStandalonePart()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for FMIPStandalonePart(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FMIPStandalonePart(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPStandalonePart(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPStandalonePart(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPStandalonePart()
{
  return &type metadata for FMIPStandalonePart;
}

unsigned char *storeEnumTagSinglePayload for FMIPStandalonePart.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D432A5DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPStandalonePart.CodingKeys()
{
  return &type metadata for FMIPStandalonePart.CodingKeys;
}

unint64_t sub_1D432A618()
{
  unint64_t result = qword_1EA6C9C58;
  if (!qword_1EA6C9C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9C58);
  }
  return result;
}

unint64_t sub_1D432A670()
{
  unint64_t result = qword_1EA6C9C60;
  if (!qword_1EA6C9C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9C60);
  }
  return result;
}

unint64_t sub_1D432A6C8()
{
  unint64_t result = qword_1EA6C9C68;
  if (!qword_1EA6C9C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9C68);
  }
  return result;
}

uint64_t sub_1D432A720()
{
  return swift_bridgeObjectRelease();
}

uint64_t FMReverseGeocodingRequest.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id FMReverseGeocodingRequest.location.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t FMReverseGeocodingRequest.locale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMReverseGeocodingRequest() + 24);
  return sub_1D42E8294(v3, a1);
}

uint64_t FMReverseGeocodingRequest.isRealtimeLocation.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMReverseGeocodingRequest() + 28));
}

uint64_t FMReverseGeocodingRequest.isCoarseLocation.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMReverseGeocodingRequest() + 32));
}

uint64_t FMReverseGeocodingRequest.geoHash.getter()
{
  return sub_1D42A9D18();
}

uint64_t FMReverseGeocodingRequest.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D44696C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  id v9 = *(id *)(v0 + 16);
  sub_1D446A128();

  uint64_t v10 = type metadata accessor for FMReverseGeocodingRequest();
  sub_1D42E8294(v1 + *(int *)(v10 + 24), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1D446A848();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1D446A848();
    sub_1D432B8CC(&qword_1EA6C9C80, MEMORY[0x1E4F27A78]);
    sub_1D4469AD8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_1D446A848();
  return sub_1D446A848();
}

uint64_t FMReverseGeocodingRequest.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t sub_1D432AA90()
{
  return sub_1D446A888();
}

uint64_t sub_1D432AAD4()
{
  return sub_1D446A888();
}

uint64_t sub_1D432AB18()
{
  return sub_1D446A888();
}

uint64_t sub_1D432AB60()
{
  return sub_1D446A858();
}

uint64_t sub_1D432AB8C()
{
  return sub_1D446A888();
}

uint64_t _s8FMIPCore25FMReverseGeocodingRequestV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1D44696C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1D42D5DA0(&qword_1EA6C9CA8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = &v31[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = &v31[-v16];
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = &v31[-v18];
  if (*a1 == *a2 && a1[1] == a2[1] || (v20 = sub_1D446A758(), char v21 = 0, (v20 & 1) != 0))
  {
    uint64_t v36 = v14;
    sub_1D432B88C();
    if (sub_1D446A118())
    {
      uint64_t v34 = v7;
      uint64_t v22 = type metadata accessor for FMReverseGeocodingRequest();
      sub_1D42E8294((uint64_t)a1 + *(int *)(v22 + 24), (uint64_t)v19);
      uint64_t v35 = v22;
      sub_1D42E8294((uint64_t)a2 + *(int *)(v22 + 24), (uint64_t)v17);
      uint64_t v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_1D42E8294((uint64_t)v19, (uint64_t)v10);
      sub_1D42E8294((uint64_t)v17, v23);
      uint64_t v24 = v5;
      os_log_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v25((uint64_t)v10, 1, v4) == 1)
      {
        sub_1D4276C3C((uint64_t)v17, (uint64_t *)&unk_1EBD7E560);
        sub_1D4276C3C((uint64_t)v19, (uint64_t *)&unk_1EBD7E560);
        if (v25(v23, 1, v4) == 1)
        {
          sub_1D4276C3C((uint64_t)v10, (uint64_t *)&unk_1EBD7E560);
          goto LABEL_12;
        }
        goto LABEL_10;
      }
      uint64_t v33 = v24;
      uint64_t v26 = (uint64_t)v36;
      sub_1D42E8294((uint64_t)v10, (uint64_t)v36);
      if (v25(v23, 1, v4) == 1)
      {
        sub_1D4276C3C((uint64_t)v17, (uint64_t *)&unk_1EBD7E560);
        sub_1D4276C3C((uint64_t)v19, (uint64_t *)&unk_1EBD7E560);
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v26, v4);
LABEL_10:
        sub_1D4276C3C((uint64_t)v10, &qword_1EA6C9CA8);
        goto LABEL_13;
      }
      uint64_t v27 = v33;
      uint64_t v28 = v34;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v33 + 32))(v34, v23, v4);
      sub_1D432B8CC(&qword_1EA6C9CB0, MEMORY[0x1E4F27A78]);
      int v32 = sub_1D4469AF8();
      uint64_t v29 = *(void (**)(unsigned char *, uint64_t))(v27 + 8);
      v29(v28, v4);
      sub_1D4276C3C((uint64_t)v17, (uint64_t *)&unk_1EBD7E560);
      sub_1D4276C3C((uint64_t)v19, (uint64_t *)&unk_1EBD7E560);
      v29(v36, v4);
      sub_1D4276C3C((uint64_t)v10, (uint64_t *)&unk_1EBD7E560);
      if (v32)
      {
LABEL_12:
        if (*((unsigned __int8 *)a1 + *(int *)(v35 + 28)) == *((unsigned __int8 *)a2 + *(int *)(v35 + 28)))
        {
          char v21 = *((unsigned char *)a1 + *(int *)(v35 + 32)) ^ *((unsigned char *)a2 + *(int *)(v35 + 32)) ^ 1;
          return v21 & 1;
        }
      }
    }
LABEL_13:
    char v21 = 0;
  }
  return v21 & 1;
}

uint64_t sub_1D432B028()
{
  return sub_1D432B8CC(&qword_1EA6C9C88, (void (*)(uint64_t))type metadata accessor for FMReverseGeocodingRequest);
}

uint64_t sub_1D432B070()
{
  return sub_1D432B8CC(&qword_1EA6C9C90, type metadata accessor for CLClientLocationReferenceFrame);
}

void *initializeBufferWithCopyOfBuffer for FMReverseGeocodingRequest(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = (void *)a2[2];
    a1[2] = v8;
    uint64_t v9 = a3[6];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1D44696C8();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    id v14 = v8;
    if (v13(v10, 1, v11))
    {
      uint64_t v15 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
      memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v17 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)v4 + v17) = *((unsigned char *)a2 + v17);
  }
  return v4;
}

void *assignWithCopy for FMReverseGeocodingRequest(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1D44696C8();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for FMReverseGeocodingRequest(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1D44696C8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  return a1;
}

void *assignWithTake for FMReverseGeocodingRequest(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)a1[2];
  a1[2] = a2[2];

  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1D44696C8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
  return a1;
}

uint64_t sub_1D432B72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1D432B7E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unint64_t sub_1D432B88C()
{
  unint64_t result = qword_1EBD7D970;
  if (!qword_1EBD7D970)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBD7D970);
  }
  return result;
}

uint64_t sub_1D432B8CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FMIPGetURLInfoRequest()
{
  uint64_t result = qword_1EA6C9CB8;
  if (!qword_1EA6C9CB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D432B960()
{
  uint64_t result = sub_1D4469498();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D432B9F8()
{
  uint64_t v1 = sub_1D44693F8();
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v9 = v1;
  *((void *)&v9 + 1) = v2;
  uint64_t v3 = qword_1EA6C9D80;
  uint64_t v4 = *(void *)(v0 + qword_1EA6C9D80);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));
  sub_1D433313C((void *)(v4 + 16), v8);
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 24));
  swift_release();
  sub_1D42C5494(&v9, v8);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D42C4E78(v8, 7107189, 0xE300000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v0 + v3);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
  sub_1D4306B48((void *)(v6 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D432BB30()
{
  uint64_t v1 = v0 + qword_1EA6E4740;
  uint64_t v2 = sub_1D4469498();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(v1, v2);
}

uint64_t sub_1D432BB9C()
{
  uint64_t v0 = sub_1D427B074() + qword_1EA6E4740;
  uint64_t v1 = sub_1D4469498();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0, v1);
  return swift_deallocClassInstance();
}

uint64_t sub_1D432BC44()
{
  return type metadata accessor for FMIPGetURLInfoRequest();
}

BOOL static FMIPNotifyActionType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FMIPNotifyActionType.hash(into:)()
{
  return sub_1D446A838();
}

uint64_t FMIPNotifyActionType.hashValue.getter()
{
  return sub_1D446A888();
}

void FMIPNotifyAction.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPNotifyAction_type);
}

uint64_t FMIPNotifyAction.enabled.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore16FMIPNotifyAction_enabled);
}

uint64_t FMIPNotifyAction.__allocating_init(device:type:enabled:)(uint64_t a1, unsigned char *a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  FMIPNotifyAction.init(device:type:enabled:)(a1, a2, a3);
  return v6;
}

uint64_t FMIPNotifyAction.init(device:type:enabled:)(uint64_t a1, unsigned char *a2, char a3)
{
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8FMIPCore16FMIPNotifyAction_type) = *a2;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8FMIPCore16FMIPNotifyAction_enabled) = a3;
  *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext) = 0;
  uint64_t v4 = (void *)(v3 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  *uint64_t v4 = 0;
  v4[1] = 0;
  uint64_t v5 = (void *)(v3 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (void *)(v3 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_username);
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = (void *)(v3 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  *uint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = (void *)(v3 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_escrowUUID);
  void *v8 = 0;
  v8[1] = 0;
  *(_OWORD *)(v3 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession) = xmmword_1D446D300;
  sub_1D42BB510(a1, v3 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  return v3;
}

uint64_t static FMIPNotifyAction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPNotifyAction_enabled) == *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8FMIPCore16FMIPNotifyAction_enabled)) {
    return static FMIPDevice.== infix(_:_:)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  }
  else {
    return 0;
  }
}

uint64_t sub_1D432BE70()
{
  uint64_t v0 = sub_1D4338988();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

void FMIPNotifyAction.__allocating_init(device:)()
{
}

void FMIPNotifyAction.init(device:)()
{
}

uint64_t FMIPNotifyAction.__deallocating_deinit()
{
  FMIPDeviceAction.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D432C000(void *a1, void *a2)
{
  if (*(unsigned __int8 *)(*a1 + OBJC_IVAR____TtC8FMIPCore16FMIPNotifyAction_enabled) == *(unsigned __int8 *)(*a2 + OBJC_IVAR____TtC8FMIPCore16FMIPNotifyAction_enabled)) {
    return static FMIPDevice.== infix(_:_:)(*a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  }
  else {
    return 0;
  }
}

BOOL static FMIPNotifyItemActionType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FMIPNotifyItemActionType.hash(into:)()
{
  return sub_1D446A838();
}

uint64_t FMIPNotifyItemActionType.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t FMIPNotifyItemAction.state.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore20FMIPNotifyItemAction_state);
}

void FMIPNotifyItemAction.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8FMIPCore20FMIPNotifyItemAction_type);
}

uint64_t FMIPNotifyItemAction.__allocating_init(item:type:state:)(uint64_t a1, unsigned char *a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + OBJC_IVAR____TtC8FMIPCore20FMIPNotifyItemAction_type) = *a2;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC8FMIPCore20FMIPNotifyItemAction_state) = a3;
  sub_1D42BB510(a1, v6 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  return v6;
}

uint64_t FMIPNotifyItemAction.init(item:type:state:)(uint64_t a1, unsigned char *a2, char a3)
{
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8FMIPCore20FMIPNotifyItemAction_type) = *a2;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8FMIPCore20FMIPNotifyItemAction_state) = a3;
  sub_1D42BB510(a1, v3 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  return v3;
}

uint64_t sub_1D432C1DC()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8FMIPCore20FMIPNotifyItemAction_state)) {
    return 0x64656C62616E65;
  }
  else {
    return 0x64656C6261736964;
  }
}

void FMIPNotifyItemAction.__allocating_init(item:)()
{
}

void FMIPNotifyItemAction.init(item:)()
{
}

uint64_t FMIPNotifyItemAction.deinit()
{
  sub_1D42FA678(v0 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item);
  return v0;
}

uint64_t FMIPNotifyItemAction.__deallocating_deinit()
{
  sub_1D42FA678(v0 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item);
  return swift_deallocClassInstance();
}

uint64_t sub_1D432C318(uint64_t *a1, uint64_t *a2)
{
  return _s8FMIPCore20FMIPNotifyItemActionC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s8FMIPCore20FMIPNotifyItemActionC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((_s8FMIPCore8FMIPItemV2eeoiySbAC_ACtFZ_0(a1 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, a2 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item) & 1) != 0&& *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore20FMIPNotifyItemAction_type) == *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8FMIPCore20FMIPNotifyItemAction_type))
  {
    char v4 = *(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore20FMIPNotifyItemAction_state) ^ *(unsigned char *)(a2
                                                                                           + OBJC_IVAR____TtC8FMIPCore20FMIPNotifyItemAction_state) ^ 1;
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

unint64_t sub_1D432C3AC()
{
  unint64_t result = qword_1EA6C9CC8;
  if (!qword_1EA6C9CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9CC8);
  }
  return result;
}

unint64_t sub_1D432C404()
{
  unint64_t result = qword_1EA6C9CD0;
  if (!qword_1EA6C9CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9CD0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPNotifyActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D432C524);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPNotifyActionType()
{
  return &type metadata for FMIPNotifyActionType;
}

uint64_t sub_1D432C55C()
{
  return type metadata accessor for FMIPNotifyAction(0);
}

uint64_t type metadata accessor for FMIPNotifyAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6C9CD8);
}

uint64_t sub_1D432C584()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FMIPNotifyAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPNotifyAction);
}

uint64_t dispatch thunk of FMIPNotifyAction.__allocating_init(device:type:enabled:)()
{
  return (*(uint64_t (**)(void))(v0 + 368))();
}

unsigned char *storeEnumTagSinglePayload for FMIPNotifyItemActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D432C6C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPNotifyItemActionType()
{
  return &type metadata for FMIPNotifyItemActionType;
}

uint64_t sub_1D432C700()
{
  return type metadata accessor for FMIPNotifyItemAction(0);
}

uint64_t type metadata accessor for FMIPNotifyItemAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6C9CE8);
}

uint64_t sub_1D432C728()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FMIPNotifyItemAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPNotifyItemAction);
}

uint64_t dispatch thunk of FMIPNotifyItemAction.__allocating_init(item:type:state:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FMIPNotifyItemAction.debugState()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_1D432C7BC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1D432C7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1D432C7E4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EBD7D9A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 56) = 0;
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42E5D2C();
  swift_retain();
  sub_1D446A8C8();
  if (v2)
  {
    swift_release();
    sub_1D42BEC64((uint64_t)a1);
    swift_bridgeObjectRelease();
    type metadata accessor for FMIPDeviceActionResponse();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1D42D5DA0(&qword_1EBD7D8C0);
    LOBYTE(v25) = 4;
    sub_1D42E222C();
    sub_1D446A5D8();
    *(void *)(v1 + 56) = v24[0];
    swift_release();
    swift_bridgeObjectRelease();
    sub_1D42A4D5C((uint64_t)a1, (uint64_t)v24);
    uint64_t v3 = sub_1D427E300(v24);
    uint64_t v9 = qword_1EBD80068;
    swift_retain();
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1D4469928();
    sub_1D42D7FAC(v10, (uint64_t)qword_1EBD83228);
    swift_retain_n();
    uint64_t v11 = sub_1D44698F8();
    os_log_type_t v12 = sub_1D446A038();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_t v23 = v11;
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v24[0] = v22;
      char v21 = v13;
      *(_DWORD *)uint64_t v13 = 136315138;
      v20[1] = v13 + 4;
      uint64_t v14 = sub_1D432CBAC();
      uint64_t v25 = sub_1D42CB9EC(v14, v15, v24);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      uint64_t v11 = v23;
      os_log_type_t v16 = v12;
      uint64_t v17 = v21;
      _os_log_impl(&dword_1D4271000, v23, v16, "FMIPDeviceContainingResponse: initialized with coder %s", v21, 0xCu);
      uint64_t v18 = v22;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v18, -1, -1);
      MEMORY[0x1D9447730](v17, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1D42BEC64((uint64_t)a1);
    swift_release();
  }
  return v3;
}

uint64_t sub_1D432CBAC()
{
  sub_1D446A918();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v6 = v0;
  sub_1D429F494();
  sub_1D4469CA8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1D4469C08();
  uint64_t v7 = 0x203A737574617473;
  unint64_t v8 = 0xE800000000000000;
  (*(void (**)(char *__return_ptr, uint64_t))(*v0 + 144))(&v5, v1);
  uint64_t v6 = (void *)qword_1D446FE88[v5];
  sub_1D446A6D8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  uint64_t v7 = 60;
  unint64_t v8 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v7;
  unint64_t v2 = v8;
  uint64_t v7 = 0x3A73656369766564;
  unint64_t v8 = 0xE800000000000000;
  uint64_t v6 = (void *)v0[7];
  swift_bridgeObjectRetain();
  sub_1D42D5DA0(&qword_1EA6C9D00);
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v7 = v3;
  unint64_t v8 = v2;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

void sub_1D432CDE4(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1D432CDEC(void *a1)
{
  return sub_1D432C7E4(a1);
}

uint64_t type metadata accessor for FMIPDeviceActionResponse()
{
  return self;
}

uint64_t sub_1D432CE5C()
{
  return sub_1D432CBAC();
}

uint64_t sub_1D432CE80(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1D432CED8(&qword_1EA6C9CF8, a2, (void (*)(uint64_t))type metadata accessor for FMIPDeviceActionResponse);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D432CED8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FMIPRepairResponse()
{
  return self;
}

uint64_t static FMSystemInfo.isKoreaSKU()()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  unsigned int v1 = objc_msgSend(v0, sel_isInternalBuild);

  if (!v1
    || (id v2 = objc_msgSend(self, sel_standardUserDefaults),
        uint64_t v3 = (void *)sub_1D4469B08(),
        unsigned int v4 = objc_msgSend(v2, sel_BOOLForKey_, v3),
        v2,
        v3,
        !v4))
  {
    sub_1D432D3D4((uint64_t)v13);
    if (v14)
    {
      if ((swift_dynamicCast() & 1) != 0 && v11 == 18507 && v12 == 0xE200000000000000)
      {
        swift_bridgeObjectRelease();
        char v9 = 1;
        return v9 & 1;
      }
    }
    else
    {
      sub_1D429D4F4((uint64_t)v13);
    }
    char v9 = sub_1D446A758();
    swift_bridgeObjectRelease();
    return v9 & 1;
  }
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D4469928();
  sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
  uint64_t v6 = sub_1D44698F8();
  os_log_type_t v7 = sub_1D446A038();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v8 = 0;
    _os_log_impl(&dword_1D4271000, v6, v7, "SystemInfo simulating Korea SKU device.", v8, 2u);
    MEMORY[0x1D9447730](v8, -1, -1);
  }

  char v9 = 1;
  return v9 & 1;
}

uint64_t static FMSystemInfo.isChinaSKU()()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  unsigned int v1 = objc_msgSend(v0, sel_isInternalBuild);

  if (!v1
    || (id v2 = objc_msgSend(self, sel_standardUserDefaults),
        uint64_t v3 = (void *)sub_1D4469B08(),
        unsigned int v4 = objc_msgSend(v2, sel_BOOLForKey_, v3),
        v2,
        v3,
        !v4))
  {
    sub_1D432D3D4((uint64_t)v13);
    if (v14)
    {
      if ((swift_dynamicCast() & 1) != 0 && v11 == 18499 && v12 == 0xE200000000000000)
      {
        swift_bridgeObjectRelease();
        char v9 = 1;
        return v9 & 1;
      }
    }
    else
    {
      sub_1D429D4F4((uint64_t)v13);
    }
    char v9 = sub_1D446A758();
    swift_bridgeObjectRelease();
    return v9 & 1;
  }
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D4469928();
  sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
  uint64_t v6 = sub_1D44698F8();
  os_log_type_t v7 = sub_1D446A038();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v8 = 0;
    _os_log_impl(&dword_1D4271000, v6, v7, "SystemInfo simulating China SKU device.", v8, 2u);
    MEMORY[0x1D9447730](v8, -1, -1);
  }

  char v9 = 1;
  return v9 & 1;
}

void sub_1D432D3D4(uint64_t a1@<X8>)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  id v2 = (void *)sub_1D4469B08();
  uint64_t v3 = MGCopyAnswerWithError();

  if (v3)
  {
    *(void *)(a1 + 24) = swift_getObjectType();
    *(void *)a1 = v3;
  }
  else
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
}

uint64_t FMIPUnknownItemUTMetadata.modelName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPUnknownItemUTMetadata.manufacturerName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPUnknownItemUTMetadata.learnMoreInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMIPUnknownItemUTMetadata() + 24);
  return sub_1D432D708(v3, a1);
}

uint64_t sub_1D432D708(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C9D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FMIPUnknownItemUTMetadata.disableInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMIPUnknownItemUTMetadata() + 28);
  return sub_1D432D708(v3, a1);
}

uint64_t sub_1D432D7B4(unsigned __int8 *a1, char *a2)
{
  return sub_1D4412D7C(*a1, *a2);
}

uint64_t sub_1D432D7C0()
{
  return sub_1D43F3A2C();
}

uint64_t sub_1D432D7C8()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D432D8A8()
{
  return sub_1D43F4A30();
}

uint64_t sub_1D432D8B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D4332910();
  *a1 = result;
  return result;
}

void sub_1D432D8E0(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE900000000000065;
  unint64_t v3 = 0x6D614E6C65646F6DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0x80000001D447D210;
      unint64_t v3 = 0xD000000000000010;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "learnMoreInfo");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 3:
      *(void *)a1 = 0x49656C6261736964;
      *(void *)(a1 + 8) = 0xEB000000006F666ELL;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_1D432D998()
{
  unint64_t result = 0x6D614E6C65646F6DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x726F4D6E7261656CLL;
      break;
    case 3:
      unint64_t result = 0x49656C6261736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D432DA44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D4332910();
  *a1 = result;
  return result;
}

uint64_t sub_1D432DA6C(uint64_t a1)
{
  unint64_t v2 = sub_1D432E140();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D432DAA8(uint64_t a1)
{
  unint64_t v2 = sub_1D432E140();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPUnknownItemUTMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  BOOL v51 = type metadata accessor for FMIPUnknownItemProductMetadata();
  Class isa = v51[-1].isa;
  uint64_t v3 = MEMORY[0x1F4188790](v51);
  uint64_t v52 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v40 - v5;
  uint64_t v7 = sub_1D42D5DA0(&qword_1EA6C9D10);
  uint64_t v53 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPUnknownItemUTMetadata();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D42C26F4(a1, a1[3]);
  sub_1D432E140();
  uint64_t v13 = v54;
  sub_1D446A8C8();
  if (v13)
  {
    uint64_t v20 = (uint64_t)a1;
  }
  else
  {
    uint64_t v47 = v10;
    id v48 = v6;
    uint64_t v54 = v12;
    unint64_t v15 = v51;
    uint64_t v14 = v52;
    LOBYTE(v56) = 0;
    uint64_t v45 = sub_1D446A598();
    id v46 = v16;
    LOBYTE(v56) = 1;
    uint64_t v43 = sub_1D446A598();
    uint64_t v44 = v17;
    uint64_t v18 = v9;
    LOBYTE(v56) = 2;
    sub_1D432FBAC(&qword_1EA6C9D20, (void (*)(uint64_t))type metadata accessor for FMIPUnknownItemProductMetadata);
    uint64_t v19 = v15;
    sub_1D446A5D8();
    LOBYTE(v56) = 2;
    uint64_t v22 = (uint64_t)v14;
    sub_1D446A5D8();
    char v41 = v18;
    uint64_t v42 = v7;
    os_log_t v23 = v54;
    uint64_t v24 = v46;
    uint64_t v25 = v47;
    *uint64_t v54 = v45;
    v23[1] = (uint64_t)v24;
    uint64_t v26 = v44;
    v23[2] = v43;
    v23[3] = v26;
    uint64_t v27 = (uint64_t)v23 + *(int *)(v25 + 24);
    id v46 = type metadata accessor for FMIPUnknownItemProductMetadata;
    sub_1D433295C((uint64_t)v48, v27, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
    uint64_t v28 = (void (*)(uint64_t, void, uint64_t, NSObject *))*((void *)isa + 7);
    v28(v27, 0, 1, v19);
    uint64_t v29 = (uint64_t)v23 + *(int *)(v25 + 28);
    sub_1D433295C(v22, v29, (uint64_t (*)(void))v46);
    v28(v29, 0, 1, v19);
    uint64_t v30 = FMIPUnknownItemUTMetadata.debugDescription.getter();
    unint64_t v32 = v31;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_1D4469928();
    sub_1D42D7FAC(v33, (uint64_t)qword_1EBD83228);
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1D44698F8();
    os_log_type_t v35 = sub_1D4469FF8();
    BOOL v51 = v34;
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v56 = v37;
      *(_DWORD *)uint64_t v36 = 136315138;
      Class isa = (Class)(v36 + 4);
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_1D42CB9EC(v30, v32, &v56);
      sub_1D446A188();
      swift_bridgeObjectRelease_n();
      os_log_type_t v38 = v51;
      _os_log_impl(&dword_1D4271000, v51, v35, "FMIPUnknownItemUTMetadata: initialized %s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v37, -1, -1);
      MEMORY[0x1D9447730](v36, -1, -1);

      uint64_t v39 = (uint64_t)v52;
    }
    else
    {
      swift_bridgeObjectRelease_n();

      uint64_t v39 = v22;
    }
    sub_1D43329C4(v39, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
    sub_1D43329C4((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v41, v42);
    sub_1D432FAFC((uint64_t)v23, v50, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    uint64_t v20 = (uint64_t)a1;
  }
  return sub_1D42BEC64(v20);
}

unint64_t sub_1D432E140()
{
  unint64_t result = qword_1EA6C9D18;
  if (!qword_1EA6C9D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9D18);
  }
  return result;
}

uint64_t FMIPUnknownItemUTMetadata.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D42D5DA0(&qword_1EA6C9D08);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_1D446A378();
  sub_1D4469C08();
  sub_1D4469C08();
  sub_1D4469C08();
  uint64_t v8 = v0[1];
  uint64_t v20 = *v0;
  uint64_t v21 = v8;
  swift_bridgeObjectRetain();
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v9 = v0[3];
  uint64_t v20 = v0[2];
  uint64_t v21 = v9;
  swift_bridgeObjectRetain();
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v10 = type metadata accessor for FMIPUnknownItemUTMetadata();
  sub_1D432D708((uint64_t)v0 + *(int *)(v10 + 24), (uint64_t)v7);
  uint64_t v11 = type metadata accessor for FMIPUnknownItemProductMetadata();
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  if (v12(v7, 1, v11) == 1)
  {
    sub_1D4276C3C((uint64_t)v7, &qword_1EA6C9D08);
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v13 = FMIPUnknownItemProductMetadata.debugDescription.getter();
    uint64_t v14 = v15;
    sub_1D43329C4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
  }
  uint64_t v20 = v13;
  uint64_t v21 = v14;
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D432D708((uint64_t)v1 + *(int *)(v10 + 28), (uint64_t)v5);
  if (v12(v5, 1, v11) == 1)
  {
    sub_1D4276C3C((uint64_t)v5, &qword_1EA6C9D08);
    uint64_t v16 = 0;
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v16 = FMIPUnknownItemProductMetadata.debugDescription.getter();
    uint64_t v17 = v18;
    sub_1D43329C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
  }
  uint64_t v20 = v16;
  uint64_t v21 = v17;
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  return v22;
}

void FMIPUnknownItemUTMetadata.init(productInfo:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C9D08);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v43 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7E918);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v42 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v39 - v9;
  id v11 = objc_msgSend(a1, sel_modelName);
  uint64_t v12 = sub_1D4469B38();
  uint64_t v14 = v13;

  *a2 = v12;
  a2[1] = v14;
  id v15 = objc_msgSend(a1, sel_manufacturerName);
  uint64_t v16 = sub_1D4469B38();
  uint64_t v18 = v17;

  a2[2] = v16;
  a2[3] = v18;
  uint64_t v41 = type metadata accessor for FMIPUnknownItemUTMetadata();
  uint64_t v19 = (uint64_t)a2 + *(int *)(v41 + 24);
  id v20 = objc_msgSend(a1, sel_learnModeMetadata);
  uint64_t v21 = sub_1D4469498();
  uint64_t v22 = 1;
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v40(v10, 1, 1, v21);
  FMIPUnknownItemProductMetadata.init(metadata:disableURL:)(v20, (uint64_t)v10, v19);
  uint64_t v23 = type metadata accessor for FMIPUnknownItemProductMetadata();
  uint64_t v24 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v24(v19, 0, 1, v23);
  id v25 = objc_msgSend(a1, sel_disableMetadata);
  id v44 = a1;
  id v26 = objc_msgSend(a1, sel_disableURL);
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = v42;
    sub_1D4469468();

    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v28 = v42;
  }
  v40(v28, v22, 1, v21);
  uint64_t v29 = (uint64_t)v28;
  uint64_t v30 = v43;
  FMIPUnknownItemProductMetadata.init(metadata:disableURL:)(v25, v29, v43);
  v24(v30, 0, 1, v23);
  sub_1D432EF78(v30, (uint64_t)a2 + *(int *)(v41 + 28));
  uint64_t v31 = FMIPUnknownItemUTMetadata.debugDescription.getter();
  unint64_t v33 = v32;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1D4469928();
  sub_1D42D7FAC(v34, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  os_log_type_t v35 = sub_1D44698F8();
  os_log_type_t v36 = sub_1D4469FF8();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v46 = v38;
    *(_DWORD *)uint64_t v37 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1D42CB9EC(v31, v33, &v46);
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D4271000, v35, v36, "FMIPUnknownItemUTMetadata: initialized %s", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v38, -1, -1);
    MEMORY[0x1D9447730](v37, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t FMIPUnknownItemUTMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6C9D28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D432E140();
  sub_1D446A8E8();
  long long v10 = *v3;
  char v11 = 0;
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
  sub_1D42BD508();
  sub_1D446A698();
  if (!v2)
  {
    long long v10 = v3[1];
    char v11 = 1;
    sub_1D446A698();
    type metadata accessor for FMIPUnknownItemUTMetadata();
    LOBYTE(v10) = 2;
    sub_1D42D5DA0(&qword_1EA6C9D08);
    sub_1D432EFE0();
    sub_1D446A698();
    LOBYTE(v10) = 3;
    sub_1D446A698();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FMIPUnknownItemUTMetadata.hash(into:)()
{
  uint64_t v1 = type metadata accessor for FMIPUnknownItemProductMetadata();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6C9D08);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  long long v10 = (char *)&v14 - v9;
  if (*(void *)(v0 + 8))
  {
    sub_1D446A848();
    swift_bridgeObjectRetain();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 24))
    {
LABEL_3:
      sub_1D446A848();
      swift_bridgeObjectRetain();
      sub_1D4469BC8();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1D446A848();
    if (*(void *)(v0 + 24)) {
      goto LABEL_3;
    }
  }
  sub_1D446A848();
LABEL_6:
  uint64_t v11 = type metadata accessor for FMIPUnknownItemUTMetadata();
  sub_1D432D708(v0 + *(int *)(v11 + 24), (uint64_t)v10);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  if (v12(v10, 1, v1) == 1)
  {
    sub_1D446A848();
  }
  else
  {
    sub_1D432FAFC((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
    sub_1D446A848();
    FMIPUnknownItemProductMetadata.hash(into:)();
    sub_1D43329C4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
  }
  sub_1D432D708(v0 + *(int *)(v11 + 28), (uint64_t)v8);
  if (v12(v8, 1, v1) == 1) {
    return sub_1D446A848();
  }
  sub_1D432FAFC((uint64_t)v8, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
  sub_1D446A848();
  FMIPUnknownItemProductMetadata.hash(into:)();
  return sub_1D43329C4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
}

uint64_t FMIPUnknownItemUTMetadata.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t sub_1D432EEC4()
{
  return sub_1D446A888();
}

uint64_t sub_1D432EF08()
{
  return sub_1D446A888();
}

uint64_t sub_1D432EF44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPUnknownItemUTMetadata.init(from:)(a1, a2);
}

uint64_t sub_1D432EF5C(void *a1)
{
  return FMIPUnknownItemUTMetadata.encode(to:)(a1);
}

uint64_t sub_1D432EF78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C9D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D432EFE0()
{
  unint64_t result = qword_1EA6C9D30;
  if (!qword_1EA6C9D30)
  {
    sub_1D42DB55C(&qword_1EA6C9D08);
    sub_1D432FBAC(&qword_1EA6C9D38, (void (*)(uint64_t))type metadata accessor for FMIPUnknownItemProductMetadata);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9D30);
  }
  return result;
}

uint64_t _s8FMIPCore25FMIPUnknownItemUTMetadataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v66 = type metadata accessor for FMIPUnknownItemProductMetadata();
  uint64_t v69 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v63 = (uint64_t *)((char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6C9D08);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  int v65 = (uint64_t *)((char *)&v58 - v9);
  uint64_t v67 = sub_1D42D5DA0(&qword_1EA6C9D78);
  uint64_t v10 = MEMORY[0x1F4188790](v67);
  uint64_t v64 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v68 = (uint64_t)&v58 - v12;
  uint64_t v13 = type metadata accessor for FMIPUnknownItemUTMetadata();
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v58 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v58 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  id v25 = (char *)&v58 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  uint64_t v28 = (char *)&v58 - v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v31 = (char *)&v58 - v29;
  uint64_t v32 = a1[1];
  uint64_t v33 = a2[1];
  if (!v32)
  {
    if (!v33)
    {
LABEL_16:
      uint64_t v60 = v8;
      uint64_t v61 = v30;
      sub_1D433295C((uint64_t)a1, (uint64_t)&v58 - v29, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
      sub_1D433295C((uint64_t)a2, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
      goto LABEL_17;
    }
LABEL_8:
    sub_1D433295C((uint64_t)a1, (uint64_t)&v58 - v29, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    sub_1D433295C((uint64_t)a2, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    goto LABEL_9;
  }
  if (!v33) {
    goto LABEL_8;
  }
  if (*a1 == *a2 && v32 == v33) {
    goto LABEL_16;
  }
  uint64_t v60 = v8;
  uint64_t v61 = v30;
  char v34 = sub_1D446A758();
  sub_1D433295C((uint64_t)a1, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
  sub_1D433295C((uint64_t)a2, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
  if ((v34 & 1) == 0)
  {
LABEL_9:
    sub_1D43329C4((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    sub_1D43329C4((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    goto LABEL_10;
  }
LABEL_17:
  uint64_t v62 = v19;
  uint64_t v37 = *((void *)v31 + 3);
  uint64_t v38 = *((void *)v28 + 3);
  if (!v37)
  {
    swift_bridgeObjectRetain();
    sub_1D43329C4((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    sub_1D43329C4((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    uint64_t v19 = v62;
    if (!v38)
    {
LABEL_29:
      sub_1D433295C((uint64_t)a1, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
      sub_1D433295C((uint64_t)a2, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
      goto LABEL_30;
    }
    swift_bridgeObjectRelease();
LABEL_10:
    sub_1D433295C((uint64_t)a1, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    sub_1D433295C((uint64_t)a2, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
LABEL_11:
    sub_1D43329C4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    sub_1D43329C4((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
LABEL_12:
    sub_1D433295C((uint64_t)a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    sub_1D433295C((uint64_t)a2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    goto LABEL_13;
  }
  if (!v38)
  {
    swift_bridgeObjectRetain();
    sub_1D43329C4((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    sub_1D43329C4((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    swift_bridgeObjectRelease();
    uint64_t v19 = v62;
    goto LABEL_10;
  }
  if (*((void *)v31 + 2) == *((void *)v28 + 2) && v37 == v38)
  {
    swift_bridgeObjectRetain();
    sub_1D43329C4((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    sub_1D43329C4((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  char v40 = sub_1D446A758();
  swift_bridgeObjectRetain();
  sub_1D43329C4((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
  sub_1D43329C4((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
  swift_bridgeObjectRelease();
  sub_1D433295C((uint64_t)a1, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
  sub_1D433295C((uint64_t)a2, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
  uint64_t v19 = v62;
  if ((v40 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_30:
  uint64_t v41 = *(int *)(v61 + 24);
  uint64_t v42 = (uint64_t)&v22[v41];
  uint64_t v43 = v68;
  uint64_t v44 = v68 + *(int *)(v67 + 48);
  sub_1D432D708((uint64_t)&v25[v41], v68);
  sub_1D432D708(v42, v44);
  uint64_t v45 = v69 + 48;
  uint64_t v46 = *(unsigned int (**)(void, void, void))(v69 + 48);
  uint64_t v47 = v66;
  if (v46(v43, 1, v66) != 1)
  {
    sub_1D432D708(v43, (uint64_t)v65);
    uint64_t v59 = v46;
    if (v46(v44, 1, v47) != 1)
    {
      uint64_t v69 = v45;
      id v48 = v63;
      sub_1D432FAFC(v44, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
      uint64_t v49 = v65;
      char v50 = _s8FMIPCore30FMIPUnknownItemProductMetadataV2eeoiySbAC_ACtFZ_0(v65, v48);
      sub_1D43329C4((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
      sub_1D43329C4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
      sub_1D43329C4((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
      sub_1D43329C4((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
      sub_1D4276C3C(v43, &qword_1EA6C9D08);
      uint64_t v19 = v62;
      sub_1D433295C((uint64_t)a1, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
      uint64_t v47 = v66;
      sub_1D433295C((uint64_t)a2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
      uint64_t v46 = v59;
      if (v50) {
        goto LABEL_37;
      }
LABEL_13:
      sub_1D43329C4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
      sub_1D43329C4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
      goto LABEL_14;
    }
    sub_1D43329C4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    sub_1D43329C4((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    sub_1D43329C4((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
    goto LABEL_35;
  }
  uint64_t v69 = v45;
  sub_1D43329C4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
  sub_1D43329C4((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
  if (v46(v44, 1, v47) != 1)
  {
LABEL_35:
    sub_1D4276C3C(v68, &qword_1EA6C9D78);
    uint64_t v19 = v62;
    goto LABEL_12;
  }
  sub_1D4276C3C(v68, &qword_1EA6C9D08);
  uint64_t v19 = v62;
  sub_1D433295C((uint64_t)a1, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
  sub_1D433295C((uint64_t)a2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
LABEL_37:
  uint64_t v51 = *(int *)(v61 + 28);
  uint64_t v52 = (uint64_t)&v16[v51];
  uint64_t v53 = v64;
  uint64_t v54 = v64 + *(int *)(v67 + 48);
  sub_1D432D708((uint64_t)&v19[v51], v64);
  sub_1D432D708(v52, v54);
  if (v46(v53, 1, v47) == 1)
  {
    sub_1D43329C4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    sub_1D43329C4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    if (v46(v54, 1, v47) == 1)
    {
      sub_1D4276C3C(v64, &qword_1EA6C9D08);
      char v35 = 1;
      return v35 & 1;
    }
  }
  else
  {
    uint64_t v55 = v60;
    sub_1D432D708(v64, (uint64_t)v60);
    if (v46(v54, 1, v47) != 1)
    {
      uint64_t v56 = v63;
      sub_1D432FAFC(v54, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
      uint64_t v57 = (uint64_t)v55;
      char v35 = _s8FMIPCore30FMIPUnknownItemProductMetadataV2eeoiySbAC_ACtFZ_0(v55, v56);
      sub_1D43329C4((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
      sub_1D43329C4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
      sub_1D43329C4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
      sub_1D43329C4(v57, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
      sub_1D4276C3C(v64, &qword_1EA6C9D08);
      return v35 & 1;
    }
    sub_1D43329C4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    sub_1D43329C4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    sub_1D43329C4((uint64_t)v55, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
  }
  sub_1D4276C3C(v64, &qword_1EA6C9D78);
LABEL_14:
  char v35 = 0;
  return v35 & 1;
}

uint64_t sub_1D432FAFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D432FB64()
{
  return sub_1D432FBAC(&qword_1EA6C9D40, (void (*)(uint64_t))type metadata accessor for FMIPUnknownItemUTMetadata);
}

uint64_t sub_1D432FBAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FMIPUnknownItemUTMetadata(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for FMIPUnknownItemProductMetadata();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(void, void, void))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_1D42D5DA0(&qword_1EA6C9D08);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v54 = v13;
      uint64_t v17 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v17;
      uint64_t v18 = v11[3];
      uint64_t v51 = v14;
      void v10[2] = v11[2];
      v10[3] = v18;
      *((unsigned char *)v10 + 32) = *((unsigned char *)v11 + 32);
      v10[5] = v11[5];
      *((unsigned char *)v10 + 48) = *((unsigned char *)v11 + 48);
      uint64_t v19 = *(int *)(v12 + 32);
      __dst = (char *)v10 + v19;
      __src = (char *)v11 + v19;
      uint64_t v20 = sub_1D4469498();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
      uint64_t v23 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v52 = v22;
      uint64_t v49 = v21;
      if (v22(__src, 1, v23))
      {
        uint64_t v24 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(__dst, __src, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, __src, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v23);
      }
      uint64_t v25 = *(int *)(v12 + 36);
      uint64_t v26 = (char *)v10 + v25;
      uint64_t v27 = (char *)v11 + v25;
      int v28 = v52(v27, 1, v23);
      uint64_t v29 = v23;
      uint64_t v13 = v54;
      if (v28)
      {
        uint64_t v30 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v26, v27, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v26, 0, 1, v29);
      }
      uint64_t v14 = v51;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v10, 0, 1, v12);
    }
    uint64_t v31 = *(int *)(a3 + 28);
    uint64_t v32 = (uint64_t *)((char *)v4 + v31);
    uint64_t v33 = (uint64_t *)((char *)a2 + v31);
    if (v14(v33, 1, v12))
    {
      uint64_t v34 = sub_1D42D5DA0(&qword_1EA6C9D08);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      uint64_t v55 = v13;
      uint64_t v35 = v33[1];
      void *v32 = *v33;
      v32[1] = v35;
      uint64_t v36 = v33[3];
      v32[2] = v33[2];
      v32[3] = v36;
      *((unsigned char *)v32 + 32) = *((unsigned char *)v33 + 32);
      v32[5] = v33[5];
      *((unsigned char *)v32 + 48) = *((unsigned char *)v33 + 48);
      uint64_t v37 = *(int *)(v12 + 32);
      uint64_t v38 = (char *)v32 + v37;
      uint64_t v39 = (char *)v33 + v37;
      uint64_t v40 = sub_1D4469498();
      uint64_t v41 = *(void *)(v40 - 8);
      uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v42(v39, 1, v40))
      {
        uint64_t v43 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(v38, v39, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      uint64_t v44 = *(int *)(v12 + 36);
      uint64_t v45 = (char *)v32 + v44;
      uint64_t v46 = (char *)v33 + v44;
      if (v42(v46, 1, v40))
      {
        uint64_t v47 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v45, v46, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v45, 0, 1, v40);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v32, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t destroy for FMIPUnknownItemUTMetadata(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for FMIPUnknownItemProductMetadata();
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + *(int *)(v5 + 32);
    uint64_t v8 = sub_1D4469498();
    uint64_t v18 = *(void *)(v8 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
    if (!v9(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v7, v8);
    }
    uint64_t v10 = v4 + *(int *)(v5 + 36);
    if (!v9(v10, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v10, v8);
    }
  }
  uint64_t v11 = a1 + *(int *)(a2 + 28);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v11, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v11 + *(int *)(v5 + 32);
    uint64_t v14 = sub_1D4469498();
    uint64_t v19 = *(void *)(v14 - 8);
    uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    if (!v15(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v13, v14);
    }
    uint64_t v16 = v11 + *(int *)(v5 + 36);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v15)(v16, 1, v14);
    if (!result)
    {
      uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);
      return v17(v16, v14);
    }
  }
  return result;
}

void *initializeWithCopy for FMIPUnknownItemUTMetadata(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for FMIPUnknownItemProductMetadata();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(void, void, void))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_1D42D5DA0(&qword_1EA6C9D08);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v47 = v13;
    uint64_t v48 = v3;
    uint64_t v50 = v12;
    uint64_t v15 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v15;
    uint64_t v16 = v10[3];
    v9[2] = v10[2];
    v9[3] = v16;
    *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
    v9[5] = v10[5];
    *((unsigned char *)v9 + 48) = *((unsigned char *)v10 + 48);
    uint64_t v17 = *(int *)(v11 + 32);
    uint64_t v45 = (char *)v10 + v17;
    __dst = (char *)v9 + v17;
    uint64_t v18 = sub_1D4469498();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20(v45, 1, v18))
    {
      uint64_t v21 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(__dst, v45, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v45, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    uint64_t v22 = *(int *)(v11 + 36);
    uint64_t v23 = (char *)v9 + v22;
    uint64_t v24 = (char *)v10 + v22;
    unsigned int v25 = v20(v24, 1, v18);
    uint64_t v12 = v50;
    if (v25)
    {
      uint64_t v26 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v24, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v18);
    }
    uint64_t v13 = v47;
    uint64_t v3 = v48;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v9, 0, 1, v11);
  }
  uint64_t v27 = *(int *)(v3 + 28);
  int v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  if (v13(v29, 1, v11))
  {
    uint64_t v30 = sub_1D42D5DA0(&qword_1EA6C9D08);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    uint64_t v31 = v29[1];
    *int v28 = *v29;
    v28[1] = v31;
    uint64_t v32 = v29[3];
    v28[2] = v29[2];
    v28[3] = v32;
    *((unsigned char *)v28 + 32) = *((unsigned char *)v29 + 32);
    v28[5] = v29[5];
    *((unsigned char *)v28 + 48) = *((unsigned char *)v29 + 48);
    uint64_t v33 = *(int *)(v11 + 32);
    uint64_t v49 = (char *)v28 + v33;
    uint64_t v34 = (char *)v29 + v33;
    uint64_t v35 = sub_1D4469498();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37(v34, 1, v35))
    {
      uint64_t v38 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(v49, v34, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v49, v34, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v49, 0, 1, v35);
    }
    uint64_t v39 = v36;
    uint64_t v40 = *(int *)(v11 + 36);
    uint64_t v41 = (char *)v28 + v40;
    uint64_t v42 = (char *)v29 + v40;
    if (v37(v42, 1, v35))
    {
      uint64_t v43 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v41, v42, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v41, 0, 1, v35);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v28, 0, 1, v11);
  }
  return a1;
}

void *assignWithCopy for FMIPUnknownItemUTMetadata(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (uint64_t)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for FMIPUnknownItemProductMetadata();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v88 = a3;
      uint64_t v89 = v10;
      char v94 = (int *)v9;
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *((void *)v8 + 1);
      *(void *)(v7 + 16) = *((void *)v8 + 2);
      uint64_t v14 = *((void *)v8 + 3);
      *(unsigned char *)(v7 + 32) = v8[32];
      *(void *)(v7 + 24) = v14;
      uint64_t v15 = *((void *)v8 + 5);
      *(unsigned char *)(v7 + 48) = v8[48];
      *(void *)(v7 + 40) = v15;
      uint64_t v16 = *(int *)(v9 + 32);
      uint64_t v83 = &v8[v16];
      __dst = (void *)(v7 + v16);
      uint64_t v17 = sub_1D4469498();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v19(v83, 1, v17))
      {
        uint64_t v20 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(__dst, v83, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v18 + 16))(__dst, v83, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
      }
      uint64_t v29 = v94[9];
      uint64_t v30 = (void *)(v7 + v29);
      uint64_t v31 = &v8[v29];
      unsigned int v32 = v19(v31, 1, v17);
      uint64_t v10 = v89;
      if (v32)
      {
        uint64_t v33 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v30, v31, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v30, 0, 1, v17);
      }
      uint64_t v9 = (uint64_t)v94;
      (*(void (**)(uint64_t, void, uint64_t, int *))(v89 + 56))(v7, 0, 1, v94);
      goto LABEL_29;
    }
LABEL_7:
    uint64_t v21 = sub_1D42D5DA0(&qword_1EA6C9D08);
    memcpy((void *)v7, v8, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_30;
  }
  if (v13)
  {
    sub_1D43329C4(v7, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
    goto LABEL_7;
  }
  uint64_t v88 = a3;
  uint64_t v90 = v10;
  *(void *)uint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *((void *)v8 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 16) = *((void *)v8 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = *((void *)v8 + 3);
  *(unsigned char *)(v7 + 32) = v8[32];
  *(void *)(v7 + 24) = v22;
  uint64_t v23 = *((void *)v8 + 5);
  *(unsigned char *)(v7 + 48) = v8[48];
  *(void *)(v7 + 40) = v23;
  uint64_t v24 = *(int *)(v9 + 32);
  unint64_t v95 = (void *)(v7 + v24);
  __src = &v8[v24];
  uint64_t v25 = sub_1D4469498();
  uint64_t v84 = *(void *)(v25 - 8);
  uint64_t v26 = *(uint64_t (**)(void))(v84 + 48);
  int v81 = ((uint64_t (*)(void *, uint64_t, uint64_t))v26)(v95, 1, v25);
  __dsta = (void *)v25;
  uint64_t v82 = v26;
  int v27 = ((uint64_t (*)(char *, uint64_t, uint64_t))v26)(__src, 1, v25);
  if (v81)
  {
    if (v27)
    {
      uint64_t v28 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(v95, __src, *(void *)(*(void *)(v28 - 8) + 64));
      uint64_t v10 = v90;
      goto LABEL_21;
    }
    (*(void (**)(void *, char *, uint64_t))(v84 + 16))(v95, __src, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56))(v95, 0, 1, v25);
  }
  else if (v27)
  {
    (*(void (**)(void *, uint64_t))(v84 + 8))(v95, v25);
    uint64_t v34 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v95, __src, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v84 + 24))(v95, __src, v25);
  }
  uint64_t v10 = v90;
LABEL_21:
  uint64_t v35 = *(int *)(v9 + 36);
  uint64_t v36 = (void *)(v7 + v35);
  uint64_t v37 = &v8[v35];
  os_log_type_t v91 = v36;
  int v38 = v82();
  uint64_t v39 = v25;
  int v40 = v38;
  int v41 = ((uint64_t (*)(char *, uint64_t, uint64_t))v82)(v37, 1, v39);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(void *, char *, void *))(v84 + 16))(v91, v37, __dsta);
      (*(void (**)(void *, void, uint64_t, void *))(v84 + 56))(v91, 0, 1, __dsta);
      goto LABEL_29;
    }
    size_t v42 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E918) - 8) + 64);
    uint64_t v43 = v91;
  }
  else
  {
    if (!v41)
    {
      (*(void (**)(void *, char *, void *))(v84 + 24))(v91, v37, __dsta);
      goto LABEL_29;
    }
    (*(void (**)(void *, void *))(v84 + 8))(v91, __dsta);
    size_t v42 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E918) - 8) + 64);
    uint64_t v43 = v91;
  }
  memcpy(v43, v37, v42);
LABEL_29:
  a3 = v88;
LABEL_30:
  uint64_t v44 = *(int *)(a3 + 28);
  uint64_t v45 = (uint64_t)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  int v47 = v11((uint64_t)a1 + v44, 1, v9);
  int v48 = v11((uint64_t)v46, 1, v9);
  if (!v47)
  {
    if (!v48)
    {
      *(void *)uint64_t v45 = *(void *)v46;
      *(void *)(v45 + 8) = *((void *)v46 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v45 + 16) = *((void *)v46 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v60 = *((void *)v46 + 3);
      *(unsigned char *)(v45 + 32) = v46[32];
      *(void *)(v45 + 24) = v60;
      uint64_t v61 = *((void *)v46 + 5);
      *(unsigned char *)(v45 + 48) = v46[48];
      *(void *)(v45 + 40) = v61;
      uint64_t v62 = *(int *)(v9 + 32);
      uint64_t v63 = (void *)(v45 + v62);
      uint64_t v64 = &v46[v62];
      uint64_t v65 = sub_1D4469498();
      uint64_t v93 = *(void *)(v65 - 8);
      uint64_t v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v93 + 48);
      int v67 = v66(v63, 1, v65);
      int v68 = v66(v64, 1, v65);
      if (v67)
      {
        if (v68)
        {
          uint64_t v69 = sub_1D42D5DA0(&qword_1EBD7E918);
          memcpy(v63, v64, *(void *)(*(void *)(v69 - 8) + 64));
          uint64_t v70 = v93;
        }
        else
        {
          uint64_t v70 = v93;
          (*(void (**)(void *, char *, uint64_t))(v93 + 16))(v63, v64, v65);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v93 + 56))(v63, 0, 1, v65);
        }
      }
      else
      {
        uint64_t v70 = v93;
        if (v68)
        {
          (*(void (**)(void *, uint64_t))(v93 + 8))(v63, v65);
          uint64_t v76 = sub_1D42D5DA0(&qword_1EBD7E918);
          memcpy(v63, v64, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v93 + 24))(v63, v64, v65);
        }
      }
      uint64_t v77 = *(int *)(v9 + 36);
      uint64_t v78 = (void *)(v45 + v77);
      v46 += v77;
      int v79 = v66((void *)(v45 + v77), 1, v65);
      int v80 = v66(v46, 1, v65);
      if (v79)
      {
        if (!v80)
        {
          (*(void (**)(void *, char *, uint64_t))(v70 + 16))(v78, v46, v65);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(v78, 0, 1, v65);
          return a1;
        }
      }
      else
      {
        if (!v80)
        {
          (*(void (**)(void *, char *, uint64_t))(v70 + 24))(v78, v46, v65);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v70 + 8))(v78, v65);
      }
      size_t v58 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E918) - 8) + 64);
      uint64_t v59 = v78;
      goto LABEL_37;
    }
    sub_1D43329C4(v45, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
LABEL_36:
    size_t v58 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EA6C9D08) - 8) + 64);
    uint64_t v59 = (void *)v45;
LABEL_37:
    memcpy(v59, v46, v58);
    return a1;
  }
  if (v48) {
    goto LABEL_36;
  }
  uint64_t v92 = v10;
  *(void *)uint64_t v45 = *(void *)v46;
  *(void *)(v45 + 8) = *((void *)v46 + 1);
  *(void *)(v45 + 16) = *((void *)v46 + 2);
  uint64_t v49 = *((void *)v46 + 3);
  *(unsigned char *)(v45 + 32) = v46[32];
  *(void *)(v45 + 24) = v49;
  uint64_t v50 = *((void *)v46 + 5);
  *(unsigned char *)(v45 + 48) = v46[48];
  *(void *)(v45 + 40) = v50;
  uint64_t v51 = *(int *)(v9 + 32);
  uint64_t v52 = (void *)(v45 + v51);
  uint64_t v53 = &v46[v51];
  uint64_t v54 = sub_1D4469498();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v56(v53, 1, v54))
  {
    uint64_t v57 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v52, v53, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
  }
  uint64_t v71 = *(int *)(v9 + 36);
  id v72 = (void *)(v45 + v71);
  uint64_t v73 = &v46[v71];
  if (v56(v73, 1, v54))
  {
    uint64_t v74 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v55 + 16))(v72, v73, v54);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v72, 0, 1, v54);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v92 + 56))(v45, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for FMIPUnknownItemUTMetadata(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (_OWORD *)((char *)a1 + v7);
  uint64_t v9 = (_OWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for FMIPUnknownItemProductMetadata();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(unsigned int (**)(void, void, void))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_1D42D5DA0(&qword_1EA6C9D08);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    size_t v42 = v12;
    _OWORD *v8 = *v9;
    uint64_t v14 = *((void *)v9 + 3);
    *((void *)v8 + 2) = *((void *)v9 + 2);
    *((void *)v8 + 3) = v14;
    *((unsigned char *)v8 + 32) = *((unsigned char *)v9 + 32);
    *((void *)v8 + 5) = *((void *)v9 + 5);
    *((unsigned char *)v8 + 48) = *((unsigned char *)v9 + 48);
    uint64_t v15 = *(int *)(v10 + 32);
    __dst = (char *)v8 + v15;
    uint64_t v44 = v11;
    uint64_t v16 = (char *)v9 + v15;
    uint64_t v17 = sub_1D4469498();
    uint64_t v18 = *(void *)(v17 - 8);
    int v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    if (v41(v16, 1, v17))
    {
      uint64_t v19 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(__dst, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
    }
    uint64_t v20 = *(int *)(v10 + 36);
    uint64_t v21 = (char *)v8 + v20;
    uint64_t v22 = (char *)v9 + v20;
    if (v41(v22, 1, v17))
    {
      uint64_t v23 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v22, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v17);
    }
    int v12 = v42;
    uint64_t v11 = v44;
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v44 + 56))(v8, 0, 1, v10);
  }
  uint64_t v24 = *(int *)(a3 + 28);
  uint64_t v25 = (_OWORD *)((char *)a1 + v24);
  uint64_t v26 = (_OWORD *)((char *)a2 + v24);
  if (v12(v26, 1, v10))
  {
    uint64_t v27 = sub_1D42D5DA0(&qword_1EA6C9D08);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v45 = v11;
    *uint64_t v25 = *v26;
    uint64_t v28 = *((void *)v26 + 3);
    *((void *)v25 + 2) = *((void *)v26 + 2);
    *((void *)v25 + 3) = v28;
    *((unsigned char *)v25 + 32) = *((unsigned char *)v26 + 32);
    *((void *)v25 + 5) = *((void *)v26 + 5);
    *((unsigned char *)v25 + 48) = *((unsigned char *)v26 + 48);
    uint64_t v29 = *(int *)(v10 + 32);
    uint64_t v30 = (char *)v25 + v29;
    uint64_t v31 = (char *)v26 + v29;
    uint64_t v32 = sub_1D4469498();
    uint64_t v33 = *(void *)(v32 - 8);
    uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    if (v34(v31, 1, v32))
    {
      uint64_t v35 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    uint64_t v36 = *(int *)(v10 + 36);
    uint64_t v37 = (char *)v25 + v36;
    int v38 = (char *)v26 + v36;
    if (v34(v38, 1, v32))
    {
      uint64_t v39 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v37, v38, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v37, 0, 1, v32);
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v45 + 56))(v25, 0, 1, v10);
  }
  return a1;
}

void *assignWithTake for FMIPUnknownItemUTMetadata(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (uint64_t)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for FMIPUnknownItemProductMetadata();
  int v12 = *(void **)(v11 - 8);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v12[6];
  int v14 = v13(v9, 1, v11);
  int v15 = v13((uint64_t)v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_1D43329C4(v9, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
      goto LABEL_7;
    }
    uint64_t v85 = a3;
    uint64_t v88 = v12;
    uint64_t v23 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *(void *)(v9 + 8) = v23;
    swift_bridgeObjectRelease();
    *(void *)(v9 + 16) = *((void *)v10 + 2);
    swift_bridgeObjectRelease();
    *(void *)(v9 + 24) = *((void *)v10 + 3);
    *(unsigned char *)(v9 + 32) = v10[32];
    *(void *)(v9 + 40) = *((void *)v10 + 5);
    *(unsigned char *)(v9 + 48) = v10[48];
    uint64_t v24 = *(int *)(v11 + 32);
    __dsta = &v10[v24];
    __src = (void *)(v9 + v24);
    uint64_t v25 = sub_1D4469498();
    uint64_t v78 = *(void *)(v25 - 8);
    uint64_t v26 = *(uint64_t (**)(void))(v78 + 48);
    int v76 = ((uint64_t (*)(void *, uint64_t, uint64_t))v26)(__src, 1, v25);
    uint64_t v77 = v26;
    int v27 = ((uint64_t (*)(char *, uint64_t, uint64_t))v26)(__dsta, 1, v25);
    if (v76)
    {
      if (v27)
      {
        uint64_t v28 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(__src, __dsta, *(void *)(*(void *)(v28 - 8) + 64));
        int v12 = v88;
        uint64_t v29 = v25;
        goto LABEL_21;
      }
      (*(void (**)(void *, char *, uint64_t))(v78 + 32))(__src, __dsta, v25);
      uint64_t v29 = v25;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(__src, 0, 1, v25);
    }
    else
    {
      uint64_t v29 = v25;
      if (v27)
      {
        (*(void (**)(void *, uint64_t))(v78 + 8))(__src, v25);
        uint64_t v34 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(__src, __dsta, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v78 + 40))(__src, __dsta, v25);
      }
    }
    int v12 = v88;
LABEL_21:
    uint64_t v35 = *(int *)(v11 + 36);
    uint64_t v36 = (void *)(v9 + v35);
    uint64_t v37 = &v10[v35];
    __dstb = v36;
    int v89 = v77();
    int v38 = ((uint64_t (*)(char *, uint64_t, uint64_t))v77)(v37, 1, v29);
    if (v89)
    {
      if (!v38)
      {
        (*(void (**)(void *, char *, uint64_t))(v78 + 32))(__dstb, v37, v25);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(__dstb, 0, 1, v25);
        goto LABEL_29;
      }
      size_t v39 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E918) - 8) + 64);
      int v40 = __dstb;
    }
    else
    {
      if (!v38)
      {
        (*(void (**)(void *, char *, uint64_t))(v78 + 40))(__dstb, v37, v25);
        goto LABEL_29;
      }
      (*(void (**)(void *, uint64_t))(v78 + 8))(__dstb, v25);
      size_t v39 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E918) - 8) + 64);
      int v40 = __dstb;
    }
    memcpy(v40, v37, v39);
LABEL_29:
    a3 = v85;
    goto LABEL_30;
  }
  if (v15)
  {
LABEL_7:
    uint64_t v22 = sub_1D42D5DA0(&qword_1EA6C9D08);
    memcpy((void *)v9, v10, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_30;
  }
  uint64_t v84 = a3;
  unint64_t v87 = (void (**)(uint64_t, void, uint64_t, uint64_t))v12;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  uint64_t v16 = *((void *)v10 + 3);
  *(void *)(v9 + 16) = *((void *)v10 + 2);
  *(void *)(v9 + 24) = v16;
  *(unsigned char *)(v9 + 32) = v10[32];
  *(void *)(v9 + 40) = *((void *)v10 + 5);
  *(unsigned char *)(v9 + 48) = v10[48];
  uint64_t v17 = *(int *)(v11 + 32);
  __dst = (void *)(v9 + v17);
  uint64_t v18 = &v10[v17];
  uint64_t v19 = sub_1D4469498();
  uint64_t v20 = *(void *)(v19 - 8);
  int v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v79(v18, 1, v19))
  {
    uint64_t v21 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  uint64_t v30 = *(int *)(v11 + 36);
  uint64_t v31 = (void *)(v9 + v30);
  uint64_t v32 = &v10[v30];
  if (v79(v32, 1, v19))
  {
    uint64_t v33 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v20 + 32))(v31, v32, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v31, 0, 1, v19);
  }
  a3 = v84;
  int v12 = v87;
  v87[7](v9, 0, 1, v11);
LABEL_30:
  uint64_t v41 = *(int *)(a3 + 28);
  uint64_t v42 = (uint64_t)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  int v44 = v13((uint64_t)a1 + v41, 1, v11);
  int v45 = v13((uint64_t)v43, 1, v11);
  if (!v44)
  {
    if (!v45)
    {
      uint64_t v56 = *((void *)v43 + 1);
      *(void *)uint64_t v42 = *(void *)v43;
      *(void *)(v42 + 8) = v56;
      swift_bridgeObjectRelease();
      *(void *)(v42 + 16) = *((void *)v43 + 2);
      swift_bridgeObjectRelease();
      *(void *)(v42 + 24) = *((void *)v43 + 3);
      *(unsigned char *)(v42 + 32) = v43[32];
      *(void *)(v42 + 40) = *((void *)v43 + 5);
      *(unsigned char *)(v42 + 48) = v43[48];
      uint64_t v57 = *(int *)(v11 + 32);
      size_t v58 = (void *)(v42 + v57);
      uint64_t v59 = &v43[v57];
      uint64_t v60 = sub_1D4469498();
      uint64_t v86 = *(void *)(v60 - 8);
      uint64_t v61 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v86 + 48);
      int v62 = v61(v58, 1, v60);
      int v63 = v61(v59, 1, v60);
      if (v62)
      {
        if (v63)
        {
          uint64_t v64 = sub_1D42D5DA0(&qword_1EBD7E918);
          memcpy(v58, v59, *(void *)(*(void *)(v64 - 8) + 64));
          uint64_t v65 = v86;
        }
        else
        {
          uint64_t v65 = v86;
          (*(void (**)(void *, char *, uint64_t))(v86 + 32))(v58, v59, v60);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v58, 0, 1, v60);
        }
      }
      else
      {
        uint64_t v65 = v86;
        if (v63)
        {
          (*(void (**)(void *, uint64_t))(v86 + 8))(v58, v60);
          uint64_t v71 = sub_1D42D5DA0(&qword_1EBD7E918);
          memcpy(v58, v59, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v86 + 40))(v58, v59, v60);
        }
      }
      uint64_t v72 = *(int *)(v11 + 36);
      uint64_t v73 = (void *)(v42 + v72);
      v43 += v72;
      int v74 = v61((void *)(v42 + v72), 1, v60);
      int v75 = v61(v43, 1, v60);
      if (v74)
      {
        if (!v75)
        {
          (*(void (**)(void *, char *, uint64_t))(v65 + 32))(v73, v43, v60);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v73, 0, 1, v60);
          return a1;
        }
      }
      else
      {
        if (!v75)
        {
          (*(void (**)(void *, char *, uint64_t))(v65 + 40))(v73, v43, v60);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v65 + 8))(v73, v60);
      }
      size_t v54 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E918) - 8) + 64);
      uint64_t v55 = v73;
      goto LABEL_37;
    }
    sub_1D43329C4(v42, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
LABEL_36:
    size_t v54 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EA6C9D08) - 8) + 64);
    uint64_t v55 = (void *)v42;
LABEL_37:
    memcpy(v55, v43, v54);
    return a1;
  }
  if (v45) {
    goto LABEL_36;
  }
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  uint64_t v46 = *((void *)v43 + 3);
  *(void *)(v42 + 16) = *((void *)v43 + 2);
  *(void *)(v42 + 24) = v46;
  *(unsigned char *)(v42 + 32) = v43[32];
  *(void *)(v42 + 40) = *((void *)v43 + 5);
  *(unsigned char *)(v42 + 48) = v43[48];
  uint64_t v47 = *(int *)(v11 + 32);
  int v48 = (void *)(v42 + v47);
  uint64_t v49 = &v43[v47];
  uint64_t v50 = sub_1D4469498();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
  if (v52(v49, 1, v50))
  {
    uint64_t v53 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v48, v49, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  uint64_t v66 = *(int *)(v11 + 36);
  int v67 = (void *)(v42 + v66);
  int v68 = &v43[v66];
  if (v52(v68, 1, v50))
  {
    uint64_t v69 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v51 + 32))(v67, v68, v50);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v67, 0, 1, v50);
  }
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v12[7])(v42, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPUnknownItemUTMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D4332584);
}

uint64_t sub_1D4332584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_1D42D5DA0(&qword_1EA6C9D08);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for FMIPUnknownItemUTMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D4332658);
}

uint64_t sub_1D4332658(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_1D42D5DA0(&qword_1EA6C9D08);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPUnknownItemUTMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43327D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPUnknownItemUTMetadata.CodingKeys()
{
  return &type metadata for FMIPUnknownItemUTMetadata.CodingKeys;
}

unint64_t sub_1D433280C()
{
  unint64_t result = qword_1EA6C9D60;
  if (!qword_1EA6C9D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9D60);
  }
  return result;
}

unint64_t sub_1D4332864()
{
  unint64_t result = qword_1EA6C9D68;
  if (!qword_1EA6C9D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9D68);
  }
  return result;
}

unint64_t sub_1D43328BC()
{
  unint64_t result = qword_1EA6C9D70;
  if (!qword_1EA6C9D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9D70);
  }
  return result;
}

uint64_t sub_1D4332910()
{
  unint64_t v0 = sub_1D446A518();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D433295C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D43329C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1D4332A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6 = v5;
  int v32 = a5;
  uint64_t v31 = a4;
  uint64_t v33 = a1;
  uint64_t v8 = sub_1D4469728();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = qword_1EA6C9D80;
  sub_1D42D5DA0(&qword_1EA6C9D90);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = MEMORY[0x1E4FBC868];
  *(_DWORD *)(v13 + 24) = 0;
  *(void *)(v13 + 16) = v14;
  *(void *)(v6 + v12) = v13;
  uint64_t v15 = qword_1EA6C9D88;
  sub_1D42D5DA0(&qword_1EA6C9D98);
  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + 24) = 0;
  *(void *)(v16 + 16) = v14;
  *(void *)(v6 + v15) = v16;
  uint64_t v17 = (void *)(v6 + qword_1EBD7CC80);
  void *v17 = 0;
  v17[1] = 0;
  *(void *)(v6 + qword_1EBD7CC88) = v14;
  *(void *)(v6 + qword_1EBD7CC90) = v14;
  swift_retain();
  sub_1D4469538();
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1D4469928();
  sub_1D42D7FAC(v18, (uint64_t)qword_1EBD83228);
  uint64_t v19 = sub_1D44698F8();
  os_log_type_t v20 = sub_1D446A038();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_1D4271000, v19, v20, "FMIPBaseEndpoint: initialized", v21, 2u);
    MEMORY[0x1D9447730](v21, -1, -1);
  }

  uint64_t v22 = v31;
  void *v17 = a3;
  v17[1] = v22;
  swift_bridgeObjectRelease();
  unint64_t v23 = 0xD000000000000017;
  if ((v32 & 1) == 0) {
    unint64_t v23 = 0xD000000000000014;
  }
  unint64_t v24 = 0x80000001D447FB30;
  if ((v32 & 1) == 0) {
    unint64_t v24 = 0x80000001D447FAF0;
  }
  uint64_t v25 = (unint64_t *)(v6 + qword_1EBD7CC98);
  *uint64_t v25 = v23;
  v25[1] = v24;
  swift_release();
  unint64_t v26 = v25[1];
  unint64_t v34 = *v25;
  unint64_t v35 = v26;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  int v27 = (void *)sub_1D4469748();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F616C0], v8);
  swift_retain();
  sub_1D4469738();
  sub_1D42A57F0();
  uint64_t v28 = sub_1D42C40F0();
  (*(void (**)(uint64_t))(qword_1EBD83008 + *v27 + 304))(v28);
  swift_release();
  return v27;
}

void sub_1D4332D98()
{
}

unint64_t sub_1D4332DC8(char a1)
{
  unint64_t result = 0x6E656B6F54737061;
  switch(a1)
  {
    case 1:
      unint64_t result = 2037149030;
      break;
    case 2:
      unint64_t result = 1752397168;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6954746E65696C63;
      break;
    case 5:
      unint64_t result = 0x6973726556707061;
      break;
    case 6:
      unint64_t result = 0x54746375646F7270;
      break;
    case 7:
      unint64_t result = 0x6F6973726556736FLL;
      break;
    case 8:
      unint64_t result = 0x646C697542736FLL;
      break;
    case 9:
      unint64_t result = 0x4455656369766564;
      break;
    case 10:
      unint64_t result = 0x6576697463616E69;
      break;
    case 11:
      unint64_t result = 0x436C6C53776F6873;
      break;
    case 12:
      unint64_t result = 0x73696365446C6C73;
      break;
    case 13:
    case 16:
      unint64_t result = 0xD000000000000010;
      break;
    case 14:
      unint64_t result = 0x6956776F646E6977;
      break;
    case 15:
      unint64_t result = 0x736F4D746E6F7266;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D4333008(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D43330DC(char a1)
{
  unint64_t result = 0xD000000000000023;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD000000000000025;
    }
    else {
      return 0xD000000000000027;
    }
  }
  return result;
}

uint64_t sub_1D433313C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D433315C(void *a1, uint64_t a2)
{
  *a1 = a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D43331A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + qword_1EBD7CC88);
  swift_beginAccess();
  uint64_t v3 = *v2;
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7FD60);
  uint64_t v15 = v4;
  *(void *)&long long v14 = v3;
  uint64_t v5 = qword_1EA6C9D80;
  uint64_t v6 = *(void *)(v1 + qword_1EA6C9D80);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
  sub_1D433313C((void *)(v6 + 16), v12);
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
  uint64_t v7 = *(void *)&v12[0];
  swift_release();
  uint64_t v13 = v7;
  if (v4)
  {
    sub_1D42C5494(&v14, v12);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1D42C4E78(v12, 0x6F43746E65696C63, 0xED0000747865746ELL, isUniquelyReferenced_nonNull_native);
    uint64_t v9 = swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D4276C3C((uint64_t)&v14, &qword_1EBD80050);
    sub_1D43FC5A4(0x6F43746E65696C63, 0xED0000747865746ELL, v12);
    uint64_t v9 = sub_1D4276C3C((uint64_t)v12, &qword_1EBD80050);
  }
  uint64_t v10 = *(void *)(v1 + v5);
  MEMORY[0x1F4188790](v9);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  sub_1D4333854((void *)(v10 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 24));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D433338C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + qword_1EBD7CC90);
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7FD60);
  uint64_t v14 = v3;
  *(void *)&long long v13 = v2;
  uint64_t v4 = qword_1EA6C9D80;
  uint64_t v5 = *(void *)(v1 + qword_1EA6C9D80);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  sub_1D433313C((void *)(v5 + 16), v11);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  uint64_t v6 = *(void *)&v11[0];
  swift_release();
  uint64_t v12 = v6;
  if (v3)
  {
    sub_1D42C5494(&v13, v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1D42C4E78(v11, 0x6F43726576726573, 0xED0000747865746ELL, isUniquelyReferenced_nonNull_native);
    uint64_t v8 = swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D4276C3C((uint64_t)&v13, &qword_1EBD80050);
    sub_1D43FC5A4(0x6F43726576726573, 0xED0000747865746ELL, v11);
    uint64_t v8 = sub_1D4276C3C((uint64_t)v11, &qword_1EBD80050);
  }
  uint64_t v9 = *(void *)(v1 + v4);
  MEMORY[0x1F4188790](v8);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  sub_1D4333854((void *)(v9 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 24));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D433355C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_1EBD83000;
  uint64_t v2 = sub_1D4469618();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(v1, v2);
}

uint64_t sub_1D4333630()
{
  return type metadata accessor for FMIPBaseRequest();
}

uint64_t sub_1D4333638()
{
  uint64_t v1 = *(void *)(*v0 + qword_1EA6C9D88);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1D4333854((void *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1D43336C4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = *v1;
  uint64_t v4 = qword_1EA6C9D88;
  a1[1] = *v1;
  a1[2] = v4;
  uint64_t v5 = *(void *)(v3 + v4);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  sub_1D43338B4((void *)(v5 + 16), &v8);
  a1[3] = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  uint64_t v6 = v8;
  swift_release();
  *a1 = v6;
  return sub_1D4333774;
}

uint64_t sub_1D4333774(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + *(void *)(a1 + 16));
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
    sub_1D4333854((void *)(v2 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));
    sub_1D4333854((void *)(v2 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t sub_1D4333854(void *a1)
{
  return sub_1D433386C(a1);
}

uint64_t sub_1D433386C(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRelease();
  *a1 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D43338B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1D433313C(a1, a2);
}

FMIPCore::FMIPAirPodsPlaySoundType_optional __swiftcall FMIPAirPodsPlaySoundType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1D446A518();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  char *v2 = v5;
  return result;
}

uint64_t FMIPAirPodsPlaySoundType.rawValue.getter()
{
  if (*v0) {
    return 29813;
  }
  else {
    return 0x72656E776FLL;
  }
}

uint64_t sub_1D433395C(char *a1, char *a2)
{
  return sub_1D441353C(*a1, *a2);
}

uint64_t sub_1D4333968()
{
  return sub_1D446A888();
}

uint64_t sub_1D43339DC()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4333A3C()
{
  return sub_1D446A888();
}

FMIPCore::FMIPAirPodsPlaySoundType_optional sub_1D4333AAC(Swift::String *a1)
{
  return FMIPAirPodsPlaySoundType.init(rawValue:)(*a1);
}

void sub_1D4333AB8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 29813;
  if (!*v1) {
    uint64_t v2 = 0x72656E776FLL;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE200000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

void FMIPAirPodsPlaySoundEvent.soundEventType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *FMIPAirPodsPlaySoundEvent.soundEventType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*FMIPAirPodsPlaySoundEvent.soundEventType.modify())()
{
  return nullsub_1;
}

uint64_t FMIPAirPodsPlaySoundEvent.includedCase.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t FMIPAirPodsPlaySoundEvent.includedCase.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*FMIPAirPodsPlaySoundEvent.includedCase.modify())()
{
  return nullsub_1;
}

uint64_t FMIPAirPodsPlaySoundEvent.includedLeftBud.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t FMIPAirPodsPlaySoundEvent.includedLeftBud.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*FMIPAirPodsPlaySoundEvent.includedLeftBud.modify())()
{
  return nullsub_1;
}

uint64_t FMIPAirPodsPlaySoundEvent.includedRightBud.getter()
{
  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t FMIPAirPodsPlaySoundEvent.includedRightBud.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 3) = result;
  return result;
}

uint64_t (*FMIPAirPodsPlaySoundEvent.includedRightBud.modify())()
{
  return nullsub_1;
}

uint64_t FMIPAirPodsPlaySoundEvent.onlinePlaySoundAttempted.getter()
{
  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t FMIPAirPodsPlaySoundEvent.onlinePlaySoundAttempted.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 4) = result;
  return result;
}

uint64_t (*FMIPAirPodsPlaySoundEvent.onlinePlaySoundAttempted.modify())()
{
  return nullsub_1;
}

uint64_t FMIPAirPodsPlaySoundEvent.onlinePlaySoundSuccess.getter()
{
  return *(unsigned __int8 *)(v0 + 5);
}

uint64_t FMIPAirPodsPlaySoundEvent.onlinePlaySoundSuccess.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 5) = result;
  return result;
}

uint64_t (*FMIPAirPodsPlaySoundEvent.onlinePlaySoundSuccess.modify())()
{
  return nullsub_1;
}

void *FMIPAirPodsPlaySoundEvent.onlinePlaySoundError.getter()
{
  uint64_t v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

void FMIPAirPodsPlaySoundEvent.onlinePlaySoundError.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*FMIPAirPodsPlaySoundEvent.onlinePlaySoundError.modify())()
{
  return nullsub_1;
}

uint64_t FMIPAirPodsPlaySoundEvent.offlinePlaySoundAttempted.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t FMIPAirPodsPlaySoundEvent.offlinePlaySoundAttempted.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*FMIPAirPodsPlaySoundEvent.offlinePlaySoundAttempted.modify())()
{
  return nullsub_1;
}

uint64_t FMIPAirPodsPlaySoundEvent.offlinePlaySoundSuccess.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t FMIPAirPodsPlaySoundEvent.offlinePlaySoundSuccess.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

uint64_t (*FMIPAirPodsPlaySoundEvent.offlinePlaySoundSuccess.modify())()
{
  return nullsub_1;
}

void *FMIPAirPodsPlaySoundEvent.offlinePlaySoundError.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

void FMIPAirPodsPlaySoundEvent.offlinePlaySoundError.setter(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
}

uint64_t (*FMIPAirPodsPlaySoundEvent.offlinePlaySoundError.modify())()
{
  return nullsub_1;
}

uint64_t FMIPAirPodsPlaySoundEvent.userShownPlayingState.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t FMIPAirPodsPlaySoundEvent.userShownPlayingState.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*FMIPAirPodsPlaySoundEvent.userShownPlayingState.modify())()
{
  return nullsub_1;
}

uint64_t FMIPAirPodsPlaySoundEvent.userShownFinishedPlayingState.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t FMIPAirPodsPlaySoundEvent.userShownFinishedPlayingState.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 33) = result;
  return result;
}

uint64_t (*FMIPAirPodsPlaySoundEvent.userShownFinishedPlayingState.modify())()
{
  return nullsub_1;
}

unsigned char *FMIPAirPodsPlaySoundEvent.init(soundEventType:includedCase:includedLeftBud:includedRightBud:onlinePlaySoundAttempted:onlinePlaySoundSuccess:onlinePlaySoundError:offlinePlaySoundAttempted:offlinePlaySoundSuccess:offlinePlaySoundError:userShownPlayingState:userShownFinishedPlayingState:)@<X0>(unsigned char *result@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10, uint64_t a11, char a12, char a13)
{
  *(unsigned char *)a9 = *result;
  *(unsigned char *)(a9 + 1) = a2;
  *(unsigned char *)(a9 + 2) = a3;
  *(unsigned char *)(a9 + 3) = a4;
  *(unsigned char *)(a9 + 4) = a5;
  *(unsigned char *)(a9 + 5) = a6;
  *(void *)(a9 + 8) = a7;
  *(unsigned char *)(a9 + 16) = a8;
  *(unsigned char *)(a9 + 17) = a10;
  *(void *)(a9 + 24) = a11;
  *(unsigned char *)(a9 + 32) = a12;
  *(unsigned char *)(a9 + 33) = a13;
  return result;
}

unint64_t sub_1D4333E08(char a1)
{
  unint64_t result = 0x657645646E756F73;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0x646564756C636E69;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000019;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FMIPManager.enqueue(airpodsPlaySoundEvent:)(char *a1)
{
  char v1 = *a1;
  char v2 = a1[1];
  char v3 = a1[2];
  char v4 = a1[3];
  char v5 = a1[4];
  char v6 = a1[5];
  uint64_t v7 = *((void *)a1 + 1);
  char v8 = a1[16];
  char v9 = a1[17];
  uint64_t v10 = *((void *)a1 + 3);
  char v11 = a1[32];
  char v12 = a1[33];
  v14[0] = v1;
  v14[1] = v2;
  v14[2] = v3;
  v14[3] = v4;
  v14[4] = v5;
  v14[5] = v6;
  uint64_t v15 = v7;
  char v16 = v8;
  char v17 = v9;
  uint64_t v18 = v10;
  char v19 = v11;
  char v20 = v12;
  return _s8FMIPCore13FMIPAnalyticsV25sendAirPodsPlaySoundEvent5eventyAA07FMIPAirefgH0V_tFZ_0((uint64_t)v14);
}

void sub_1D4334014(uint64_t a1)
{
  unint64_t v2 = sub_1D4274BFC(MEMORY[0x1E4FBC860]);
  id v3 = objc_allocWithZone(NSString);
  char v4 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithString_, v4);

  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = v2;
  sub_1D4299B3C((uint64_t)v5, 0x657645646E756F73, 0xEE0065707954746ELL, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, *(unsigned __int8 *)(a1 + 1));
  char v8 = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = v2;
  sub_1D4299B3C((uint64_t)v7, 0x646564756C636E69, 0xEC00000065736143, v8);
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, *(unsigned __int8 *)(a1 + 3));
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = v2;
  sub_1D4299B3C((uint64_t)v9, 0xD000000000000010, 0x80000001D447FB50, v10);
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, *(unsigned __int8 *)(a1 + 2));
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = v2;
  sub_1D4299B3C((uint64_t)v11, 0x646564756C636E69, 0xEF6475427466654CLL, v12);
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, *(unsigned __int8 *)(a1 + 4));
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = v2;
  sub_1D4299B3C((uint64_t)v13, 0xD000000000000018, 0x80000001D447FB70, v14);
  unint64_t v15 = v2;
  swift_bridgeObjectRelease();
  char v16 = *(void **)(a1 + 8);
  if (v16)
  {
    swift_getErrorValue();
    id v17 = v16;
    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, sub_1D43A5590(v39));
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v2;
    sub_1D4299B3C((uint64_t)v18, 0xD000000000000014, 0x80000001D447FC90, v19);
    swift_bridgeObjectRelease();
  }
  sub_1D4334E14(a1 + 5, (uint64_t)&v43);
  sub_1D4334E14((uint64_t)&v43, (uint64_t)&v44);
  char v20 = v44;
  if (v44 != 2)
  {
    id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v20 & 1);
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v2;
    sub_1D4299B3C((uint64_t)v21, 0xD000000000000016, 0x80000001D447FC70, v22);
    swift_bridgeObjectRelease();
  }
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, *(unsigned __int8 *)(a1 + 16));
  char v24 = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = v2;
  sub_1D4299B3C((uint64_t)v23, 0xD000000000000019, 0x80000001D447FB90, v24);
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void **)(a1 + 24);
  if (v25)
  {
    swift_getErrorValue();
    id v26 = v25;
    id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, sub_1D43A5590(v40));
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v2;
    sub_1D4299B3C((uint64_t)v27, 0xD000000000000015, 0x80000001D447FC50, v28);
    swift_bridgeObjectRelease();
  }
  sub_1D4334E14(a1 + 17, (uint64_t)&v42);
  sub_1D4334E14((uint64_t)&v42, (uint64_t)&v45);
  char v29 = v45;
  if (v45 != 2)
  {
    id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v29 & 1);
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v2;
    sub_1D4299B3C((uint64_t)v30, 0xD000000000000017, 0x80000001D447FC30, v31);
    swift_bridgeObjectRelease();
  }
  id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, *(unsigned __int8 *)(a1 + 32));
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = v2;
  sub_1D4299B3C((uint64_t)v32, 0xD000000000000015, 0x80000001D447FBB0, v33);
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, *(unsigned __int8 *)(a1 + 33));
  char v35 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v34, 0xD00000000000001DLL, 0x80000001D447FBD0, v35);
  swift_bridgeObjectRelease();
  uint64_t v36 = (void *)sub_1D4469B08();
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v15;
  aBlock[4] = sub_1D4308610;
  aBlock[5] = v37;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D4356EBC;
  aBlock[3] = &unk_1F2C08EC8;
  int v38 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v38);
  swift_bridgeObjectRelease();
}

uint64_t _s8FMIPCore13FMIPAnalyticsV25sendAirPodsPlaySoundEvent5eventyAA07FMIPAirefgH0V_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_1D4469958();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D44699B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = *(_OWORD *)(a1 + 16);
  v17[0] = *(_OWORD *)a1;
  v17[1] = v10;
  __int16 v18 = *(_WORD *)(a1 + 32);
  if (qword_1EA6C9010 != -1) {
    swift_once();
  }
  uint64_t v11 = swift_allocObject();
  long long v12 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v11 + 32) = v12;
  *(_WORD *)(v11 + 48) = *(_WORD *)(a1 + 32);
  aBlock[4] = sub_1D4334DD4;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C08E78;
  id v13 = _Block_copy(aBlock);
  sub_1D4334DDC((uint64_t)v17);
  sub_1D4469988();
  v15[1] = MEMORY[0x1E4FBC860];
  sub_1D42E81D4();
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42E2378();
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v9, v5, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

unint64_t sub_1D4334960()
{
  unint64_t result = qword_1EA6C9DA0;
  if (!qword_1EA6C9DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9DA0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPAirPodsPlaySoundType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4334A80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPAirPodsPlaySoundType()
{
  return &type metadata for FMIPAirPodsPlaySoundType;
}

void destroy for FMIPAirPodsPlaySoundEvent(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
}

uint64_t initializeWithCopy for FMIPAirPodsPlaySoundEvent(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 1) = *(_DWORD *)(a2 + 1);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  unsigned int v4 = *(void **)(a2 + 8);
  id v5 = v4;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  unsigned int v6 = *(void **)(a2 + 24);
  id v7 = v6;
  *(void *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for FMIPAirPodsPlaySoundEvent(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  unsigned int v4 = *(void **)(a1 + 8);
  id v5 = *(void **)(a2 + 8);
  id v6 = v5;
  *(void *)(a1 + 8) = v5;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  id v7 = *(void **)(a1 + 24);
  uint64_t v8 = *(void **)(a2 + 24);
  id v9 = v8;
  *(void *)(a1 + 24) = v8;

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

__n128 initializeWithTake for FMIPAirPodsPlaySoundEvent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FMIPAirPodsPlaySoundEvent(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  unsigned int v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  id v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPAirPodsPlaySoundEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPAirPodsPlaySoundEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPAirPodsPlaySoundEvent()
{
  return &type metadata for FMIPAirPodsPlaySoundEvent;
}

uint64_t sub_1D4334D94()
{
  return MEMORY[0x1F4186498](v0, 50, 7);
}

void sub_1D4334DD4()
{
  sub_1D4334014(v0 + 16);
}

uint64_t sub_1D4334DDC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  id v3 = *(id *)(a1 + 8);
  id v4 = v2;
  return a1;
}

uint64_t sub_1D4334E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C9DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4334E7C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t FMIPPlaySoundDeviceAction.__allocating_init(device:channels:safetyWarningConfirmed:soundQueueingConfirmed:soundMethod:)(uint64_t a1, uint64_t a2, char a3, char a4, char *a5)
{
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = sub_1D4335ED0(a1, a2, a3, a4, a5, v10);
  swift_release();
  return v11;
}

uint64_t FMIPPlaySoundMethod.description.getter()
{
  unsigned int v1 = *v0;
  uint64_t v2 = 1701601838;
  if (v1 != 2) {
    uint64_t v2 = 0x697269732ELL;
  }
  if (v1 >= 2) {
    return v2;
  }
  else {
    return 0x63697373616C632ELL;
  }
}

BOOL static FMIPPlaySoundMethod.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FMIPPlaySoundMethod.hash(into:)()
{
  return sub_1D446A838();
}

uint64_t FMIPPlaySoundMethod.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t sub_1D4335014()
{
  unsigned int v1 = *v0;
  uint64_t v2 = 1701601838;
  if (v1 != 2) {
    uint64_t v2 = 0x697269732ELL;
  }
  if (v1 >= 2) {
    return v2;
  }
  else {
    return 0x63697373616C632ELL;
  }
}

uint64_t FMIPPlaySoundDeviceAction.channels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FMIPPlaySoundDeviceAction.safetyWarningConfirmed.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_safetyWarningConfirmed);
}

uint64_t FMIPPlaySoundDeviceAction.soundQueueingConfirmed.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_soundQueueingConfirmed);
}

void FMIPPlaySoundDeviceAction.soundMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_soundMethod);
}

uint64_t FMIPPlaySoundDeviceAction.issueDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_issueDate;
  uint64_t v4 = sub_1D4469618();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FMIPPlaySoundDeviceAction.init(device:channels:safetyWarningConfirmed:soundQueueingConfirmed:soundMethod:)(uint64_t a1, uint64_t a2, char a3, char a4, char *a5)
{
  uint64_t v6 = sub_1D4335ED0(a1, a2, a3, a4, a5, v5);
  swift_release();
  return v6;
}

unint64_t sub_1D433514C()
{
  sub_1D446A378();
  swift_bridgeObjectRelease();
  sub_1D429F494();
  sub_1D4469CA8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D446A378();
  swift_bridgeObjectRelease();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x1D94460F0](v0, &type metadata for FMIPPlaySoundChannels);
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD00000000000001ELL;
}

void FMIPPlaySoundDeviceAction.__allocating_init(device:)()
{
}

void FMIPPlaySoundDeviceAction.init(device:)()
{
}

uint64_t sub_1D4335450()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_issueDate;
  uint64_t v2 = sub_1D4469618();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(v1, v2);
}

uint64_t FMIPPlaySoundDeviceAction.deinit()
{
  uint64_t v0 = FMIPDeviceAction.deinit();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_issueDate;
  uint64_t v2 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t FMIPPlaySoundDeviceAction.__deallocating_deinit()
{
  uint64_t v0 = FMIPDeviceAction.deinit();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_issueDate;
  uint64_t v2 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t FMIPUTItemAction.init(unknownItem:)(uint64_t a1)
{
  sub_1D43366F8(a1, v1 + OBJC_IVAR____TtC8FMIPCore16FMIPUTItemAction_unknownItem, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  return v1;
}

uint64_t FMIPUTItemAction.deinit()
{
  sub_1D4336024(v0 + OBJC_IVAR____TtC8FMIPCore16FMIPUTItemAction_unknownItem, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  return v0;
}

uint64_t FMIPIgnoreItemAction.__allocating_init(unknownItem:until:)(uint64_t a1, uint64_t a2)
{
  return sub_1D4335824(a1, a2, &OBJC_IVAR____TtC8FMIPCore20FMIPIgnoreItemAction_until);
}

uint64_t FMIPIgnoreItemAction.init(unknownItem:until:)(uint64_t a1, uint64_t a2)
{
  return sub_1D43358A8(a1, a2, &OBJC_IVAR____TtC8FMIPCore20FMIPIgnoreItemAction_until);
}

void FMIPIgnoreItemAction.__allocating_init(unknownItem:)()
{
}

void FMIPIgnoreItemAction.init(unknownItem:)()
{
}

uint64_t _s8FMIPCore31FMIPFetchEncryptedPayloadActionCfD_0()
{
  sub_1D4336024(v0 + OBJC_IVAR____TtC8FMIPCore16FMIPUTItemAction_unknownItem, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  return swift_deallocClassInstance();
}

uint64_t _s8FMIPCore31FMIPFetchEncryptedPayloadActionC11unknownItemAcA011FMIPUnknownG0V_tcfC_0(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1D43366F8(a1, v2 + OBJC_IVAR____TtC8FMIPCore16FMIPUTItemAction_unknownItem, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  return v2;
}

uint64_t FMIPStopUTSoundAction.init(unknownItem:)(uint64_t a1)
{
  sub_1D43366F8(a1, v1 + OBJC_IVAR____TtC8FMIPCore16FMIPUTItemAction_unknownItem, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  return v1;
}

uint64_t FMIPPlayUTSoundAction.__allocating_init(unknownItem:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1D4335824(a1, a2, &OBJC_IVAR____TtC8FMIPCore21FMIPPlayUTSoundAction_context);
}

uint64_t sub_1D4335824(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + *a3) = a2;
  sub_1D43366F8(a1, v6 + OBJC_IVAR____TtC8FMIPCore16FMIPUTItemAction_unknownItem, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  return v6;
}

uint64_t FMIPPlayUTSoundAction.init(unknownItem:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1D43358A8(a1, a2, &OBJC_IVAR____TtC8FMIPCore21FMIPPlayUTSoundAction_context);
}

uint64_t sub_1D43358A8(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)(v3 + *a3) = a2;
  sub_1D43366F8(a1, v3 + OBJC_IVAR____TtC8FMIPCore16FMIPUTItemAction_unknownItem, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  return v3;
}

void FMIPPlayUTSoundAction.__allocating_init(unknownItem:)()
{
}

void FMIPPlayUTSoundAction.init(unknownItem:)()
{
}

uint64_t FMIPUTItemAction.__allocating_init(unknownItem:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1D43366F8(a1, v2 + OBJC_IVAR____TtC8FMIPCore16FMIPUTItemAction_unknownItem, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  return v2;
}

uint64_t FMIPUTItemAction.__deallocating_deinit()
{
  sub_1D4336024(v0 + OBJC_IVAR____TtC8FMIPCore16FMIPUTItemAction_unknownItem, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  return swift_deallocClassInstance();
}

uint64_t FMIPUTItemAction.debugDescription.getter()
{
  return 60;
}

uint64_t sub_1D4335BB4()
{
  return FMIPUTItemAction.debugDescription.getter();
}

uint64_t FMIPPlaySoundItemAction.__allocating_init(item:context:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = v6 + OBJC_IVAR____TtC8FMIPCore23FMIPPlaySoundItemAction_uuid;
  uint64_t v8 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = v6 + OBJC_IVAR____TtC8FMIPCore23FMIPPlaySoundItemAction_context;
  *(void *)uint64_t v9 = a2;
  *(unsigned char *)(v9 + 8) = a3 & 1;
  sub_1D43366F8(a1, v6 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  return v6;
}

uint64_t FMIPPlaySoundItemAction.init(item:context:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = v3 + OBJC_IVAR____TtC8FMIPCore23FMIPPlaySoundItemAction_uuid;
  uint64_t v8 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = v3 + OBJC_IVAR____TtC8FMIPCore23FMIPPlaySoundItemAction_context;
  *(void *)uint64_t v9 = a2;
  *(unsigned char *)(v9 + 8) = a3 & 1;
  sub_1D43366F8(a1, v3 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  return v3;
}

void FMIPPlaySoundItemAction.__allocating_init(item:)()
{
}

void FMIPPlaySoundItemAction.init(item:)()
{
}

uint64_t sub_1D4335DE4()
{
  return sub_1D4336084(v0 + OBJC_IVAR____TtC8FMIPCore23FMIPPlaySoundItemAction_uuid);
}

uint64_t FMIPPlaySoundItemAction.deinit()
{
  sub_1D4336024(v0 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D4336084(v0 + OBJC_IVAR____TtC8FMIPCore23FMIPPlaySoundItemAction_uuid);
  return v0;
}

uint64_t FMIPPlaySoundItemAction.__deallocating_deinit()
{
  sub_1D4336024(v0 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D4336084(v0 + OBJC_IVAR____TtC8FMIPCore23FMIPPlaySoundItemAction_uuid);
  return swift_deallocClassInstance();
}

uint64_t sub_1D4335ED0(uint64_t a1, uint64_t a2, char a3, char a4, char *a5, uint64_t a6)
{
  char v11 = *a5;
  swift_retain();
  sub_1D4469608();
  *(void *)(a6 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_channels) = a2;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_safetyWarningConfirmed) = a3;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_soundQueueingConfirmed) = a4;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC8FMIPCore25FMIPPlaySoundDeviceAction_soundMethod) = v11;
  *(void *)(a6 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext) = 0;
  long long v12 = (void *)(a6 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  *long long v12 = 0;
  v12[1] = 0;
  id v13 = (void *)(a6 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
  *id v13 = 0;
  v13[1] = 0;
  char v14 = (void *)(a6 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_username);
  *char v14 = 0;
  v14[1] = 0;
  unint64_t v15 = (void *)(a6 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  *unint64_t v15 = 0;
  v15[1] = 0;
  char v16 = (void *)(a6 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_escrowUUID);
  *char v16 = 0;
  v16[1] = 0;
  *(_OWORD *)(a6 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession) = xmmword_1D446D300;
  sub_1D43366F8(a1, a6 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  return a6;
}

uint64_t sub_1D4336024(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D4336084(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D43360E8()
{
  unint64_t result = qword_1EA6C9DB0;
  if (!qword_1EA6C9DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9DB0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPPlaySoundMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4336208);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPPlaySoundMethod()
{
  return &type metadata for FMIPPlaySoundMethod;
}

uint64_t sub_1D4336240()
{
  return type metadata accessor for FMIPPlaySoundDeviceAction(0);
}

uint64_t type metadata accessor for FMIPPlaySoundDeviceAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6C9DB8);
}

uint64_t sub_1D4336268()
{
  uint64_t result = sub_1D4469618();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FMIPPlaySoundDeviceAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPPlaySoundDeviceAction);
}

uint64_t dispatch thunk of FMIPPlaySoundDeviceAction.__allocating_init(device:channels:safetyWarningConfirmed:soundQueueingConfirmed:soundMethod:)()
{
  return (*(uint64_t (**)(void))(v0 + 392))();
}

uint64_t sub_1D4336348()
{
  return type metadata accessor for FMIPFetchEncryptedPayloadAction(0);
}

uint64_t type metadata accessor for FMIPFetchEncryptedPayloadAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6C9DC8);
}

uint64_t sub_1D4336374()
{
  return type metadata accessor for FMIPIgnoreItemAction(0);
}

uint64_t type metadata accessor for FMIPIgnoreItemAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6C9DD8);
}

uint64_t method lookup function for FMIPIgnoreItemAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPIgnoreItemAction);
}

uint64_t dispatch thunk of FMIPIgnoreItemAction.__allocating_init(unknownItem:until:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1D43363CC()
{
  return type metadata accessor for FMIPStopUTSoundAction(0);
}

uint64_t type metadata accessor for FMIPStopUTSoundAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6C9DE8);
}

uint64_t sub_1D43363F4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1D433642C()
{
  return type metadata accessor for FMIPPlayUTSoundAction(0);
}

uint64_t type metadata accessor for FMIPPlayUTSoundAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6C9DF8);
}

uint64_t sub_1D4336454()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FMIPPlayUTSoundAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPPlayUTSoundAction);
}

uint64_t dispatch thunk of FMIPPlayUTSoundAction.__allocating_init(unknownItem:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1D43364C8()
{
  return type metadata accessor for FMIPUTItemAction(0);
}

uint64_t type metadata accessor for FMIPUTItemAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6C9E08);
}

uint64_t sub_1D43364F0()
{
  uint64_t result = type metadata accessor for FMIPUnknownItem();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FMIPUTItemAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPUTItemAction);
}

uint64_t dispatch thunk of FMIPUTItemAction.__allocating_init(unknownItem:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1D43365AC()
{
  return type metadata accessor for FMIPPlaySoundItemAction(0);
}

uint64_t type metadata accessor for FMIPPlaySoundItemAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6C9E18);
}

void sub_1D43365D4()
{
  sub_1D43366A0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for FMIPPlaySoundItemAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPPlaySoundItemAction);
}

uint64_t dispatch thunk of FMIPPlaySoundItemAction.__allocating_init(item:context:)(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 136))(a1, a2, a3 & 1);
}

void sub_1D43366A0()
{
  if (!qword_1EA6C9E28)
  {
    sub_1D4469688();
    unint64_t v0 = sub_1D446A168();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA6C9E28);
    }
  }
}

uint64_t sub_1D43366F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void FMIPItemImageSize.init(rawValue:)(char *a1@<X8>, double a2@<D0>)
{
  if (a2 == 66.0) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (a2 == 37.0) {
    char v2 = 0;
  }
  *a1 = v2;
}

double FMIPItemImageSize.rawValue.getter()
{
  double result = 37.0;
  if (*v0) {
    return 66.0;
  }
  return result;
}

BOOL sub_1D43367D0(unsigned char *a1, unsigned char *a2)
{
  double v2 = 37.0;
  if (*a1) {
    double v3 = 66.0;
  }
  else {
    double v3 = 37.0;
  }
  if (*a2) {
    double v2 = 66.0;
  }
  return v3 == v2;
}

uint64_t sub_1D433680C()
{
  return sub_1D43F45F4();
}

uint64_t sub_1D4336818()
{
  return sub_1D446A868();
}

uint64_t sub_1D433685C()
{
  return sub_1D43F45F4();
}

double *sub_1D4336864@<X0>(double *result@<X0>, unsigned char *a2@<X8>)
{
  if (*result == 37.0)
  {
    *a2 = 0;
  }
  else if (*result == 66.0)
  {
    *a2 = 1;
  }
  else
  {
    *a2 = 2;
  }
  return result;
}

void sub_1D43368B0(double *a1@<X8>)
{
  double v2 = 37.0;
  if (*v1) {
    double v2 = 66.0;
  }
  *a1 = v2;
}

uint64_t FMIPItemImageCacheRequest.debugDescription.getter()
{
  return 0;
}

uint64_t FMIPItemImageCacheRequest.fileName.getter()
{
  double v1 = *v0;
  int v2 = *((unsigned __int8 *)v0 + 16);
  double v3 = v0[3];
  uint64_t v4 = sub_1D4469F88();
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  int64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    double v16 = v1;
    int v17 = v2;
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1D4337070(0, v6, 0);
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = sub_1D4469E98();
      uint64_t v10 = v9;
      unint64_t v12 = *(void *)(v18 + 16);
      unint64_t v11 = *(void *)(v18 + 24);
      if (v12 >= v11 >> 1) {
        sub_1D4337070(v11 > 1, v12 + 1, 1);
      }
      ++v7;
      *(void *)(v18 + 16) = v12 + 1;
      uint64_t v13 = v18 + 16 * v12;
      *(void *)(v13 + 32) = v8;
      *(void *)(v13 + 40) = v10;
    }
    while (v6 != v7);
    swift_bridgeObjectRelease();
    int v2 = v17;
    double v1 = v16;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1D42D5DA0(&qword_1EA6C9E30);
  sub_1D4337090();
  sub_1D4469AE8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D4469C08();
  double v15 = 37.0;
  if (v2) {
    double v15 = 66.0;
  }
  if ((~*(void *)&v15 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  sub_1D446A6D8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1D4469C08();
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v3 < 9.22337204e18)
  {
    sub_1D446A6D8();
    sub_1D4469C08();
    swift_bridgeObjectRelease();
    sub_1D4469C08();
    sub_1D4469C08();
    swift_bridgeObjectRelease();
    sub_1D4469C08();
    swift_bridgeObjectRetain();
    sub_1D4469C08();
    swift_bridgeObjectRelease();
    return *(void *)&v1;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t FMIPItemImageCacheRequest.emoji.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void FMIPItemImageCacheRequest.size.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

double FMIPItemImageCacheRequest.scale.getter()
{
  return *(double *)(v0 + 24);
}

id FMIPItemImageCacheRequest.backgroundColor.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t FMIPItemImageCacheRequest.osVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPItemImageCacheRequest.init(emoji:size:scale:backgroundColor:osVersion:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  char v8 = *a3;
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(unsigned char *)(a7 + 16) = v8;
  *(double *)(a7 + 24) = a8;
  *(void *)(a7 + 32) = a4;
  *(void *)(a7 + 40) = a5;
  *(void *)(a7 + 48) = a6;
  return result;
}

uint64_t FMIPItemImageCacheRequest.hash(into:)()
{
  return sub_1D44698D8();
}

uint64_t FMIPItemImageCacheRequest.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t sub_1D4336F88()
{
  return sub_1D446A888();
}

uint64_t sub_1D4337050(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4337398(a1, a2, a3, (void *)*v3);
  *double v3 = result;
  return result;
}

uint64_t sub_1D4337070(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4337540(a1, a2, a3, *v3);
  *double v3 = (char *)result;
  return result;
}

unint64_t sub_1D4337090()
{
  unint64_t result = qword_1EA6C9E38;
  if (!qword_1EA6C9E38)
  {
    sub_1D42DB55C(&qword_1EA6C9E30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9E38);
  }
  return result;
}

unint64_t sub_1D43370EC()
{
  unint64_t result = qword_1EA6C9E40;
  if (!qword_1EA6C9E40)
  {
    type metadata accessor for CGColor(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9E40);
  }
  return result;
}

uint64_t sub_1D4337144(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4338340(a1, a2, a3, *v3, &qword_1EA6C9AB8);
  *double v3 = (char *)result;
  return result;
}

uint64_t sub_1D433716C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D43376AC(a1, a2, a3, *v3);
  *double v3 = (char *)result;
  return result;
}

uint64_t sub_1D433718C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4337834(a1, a2, a3, (void *)*v3, &qword_1EA6C9E98, &qword_1EA6C9EA0);
  *double v3 = result;
  return result;
}

uint64_t sub_1D43371BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4337834(a1, a2, a3, (void *)*v3, &qword_1EA6C9EA8, &qword_1EA6C9EB0);
  *double v3 = result;
  return result;
}

uint64_t sub_1D43371EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4279848(a1, a2, a3, (void *)*v3, &qword_1EA6CA590, MEMORY[0x1E4F27990]);
  *double v3 = result;
  return result;
}

uint64_t sub_1D4337228(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4337834(a1, a2, a3, (void *)*v3, &qword_1EA6C9E88, &qword_1EA6C9E90);
  *double v3 = result;
  return result;
}

uint64_t sub_1D4337258(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4279848(a1, a2, a3, (void *)*v3, &qword_1EA6C9E70, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  *double v3 = result;
  return result;
}

uint64_t sub_1D4337294(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4279848(a1, a2, a3, (void *)*v3, &qword_1EA6C9EB8, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  *double v3 = result;
  return result;
}

uint64_t sub_1D43372D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4337B4C(a1, a2, a3, (void *)*v3);
  *double v3 = result;
  return result;
}

uint64_t sub_1D43372F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4337CF0(a1, a2, a3, *v3);
  *double v3 = (char *)result;
  return result;
}

uint64_t sub_1D4337310(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4337E78(a1, a2, a3, (void *)*v3);
  *double v3 = result;
  return result;
}

uint64_t sub_1D4337330(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4338018(a1, a2, a3, *v3);
  *double v3 = (char *)result;
  return result;
}

uint64_t sub_1D4337350(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D433819C(a1, a2, a3, (void *)*v3);
  *double v3 = result;
  return result;
}

uint64_t sub_1D4337370(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D4338340(a1, a2, a3, *v3, &qword_1EA6C9EC8);
  *double v3 = (char *)result;
  return result;
}

uint64_t sub_1D4337398(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1D42D5DA0(&qword_1EA6C9EE0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1D42D5DA0(&qword_1EA6C9EE8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D4337540(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1D42D5DA0(&qword_1EBD80060);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  char v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D43376AC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1D42D5DA0(&qword_1EA6C9EC0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 352);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[352 * v8]) {
      memmove(v12, v13, 352 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[352 * v8] || v12 >= &v13[352 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D4337834(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_1D42D5DA0(a5);
    unint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    sub_1D42D5DA0(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D43379C4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1D42D5DA0(&qword_1EA6C9ED8);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D4337B4C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1D42D5DA0(&qword_1EA6CB1C0);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_1D42D5DA0(&qword_1EA6C9E68);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D4337CF0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1D42D5DA0(&qword_1EA6C9EF0);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8]) {
      memmove(v12, v13, 88 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[88 * v8] || v12 >= &v13[88 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D4337E78(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1D42D5DA0(&qword_1EA6C9EF8);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 224);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 4;
  unint64_t v13 = a4 + 4;
  size_t v14 = 28 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_1D42D5DA0(&qword_1EA6C9F00);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D4338018(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1D42D5DA0(&qword_1EBD80040);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D433819C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1D42D5DA0(&qword_1EA6C9E78);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_1D42D5DA0(&qword_1EA6C9E80);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D4338340(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    sub_1D42D5DA0(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v11 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t _s8FMIPCore25FMIPItemImageCacheRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  double v3 = *(double *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  int v6 = *(unsigned __int8 *)(a2 + 16);
  double v7 = *(double *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v10 = sub_1D446A758(), result = 0, (v10 & 1) != 0))
  {
    double v12 = 37.0;
    if (v2) {
      double v13 = 66.0;
    }
    else {
      double v13 = 37.0;
    }
    if (v6) {
      double v12 = 66.0;
    }
    BOOL v14 = v13 == v12 && v3 == v7;
    if (v14 && (type metadata accessor for CGColor(0), sub_1D43370EC(), (sub_1D44698C8() & 1) != 0))
    {
      if (v4 == v8 && v5 == v9)
      {
        return 1;
      }
      else
      {
        return sub_1D446A758();
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1D43385E0()
{
  unint64_t result = qword_1EA6C9E48;
  if (!qword_1EA6C9E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9E48);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPItemImageSize(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4338700);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPItemImageSize()
{
  return &type metadata for FMIPItemImageSize;
}

uint64_t destroy for FMIPItemImageCacheRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMIPItemImageCacheRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unsigned int v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  id v6 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMIPItemImageCacheRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  unsigned int v4 = *(void **)(a2 + 32);
  uint64_t v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v4;
  id v6 = v4;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FMIPItemImageCacheRequest(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FMIPItemImageCacheRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t FMIPDeviceAction.init(device:)(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext) = 0;
  int v2 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  void *v2 = 0;
  v2[1] = 0;
  long long v3 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
  *long long v3 = 0;
  v3[1] = 0;
  uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_username);
  *uint64_t v4 = 0;
  v4[1] = 0;
  uint64_t v5 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_escrowUUID);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(_OWORD *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession) = xmmword_1D446D300;
  sub_1D42B2518(a1, v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  return v1;
}

uint64_t sub_1D4338988()
{
  sub_1D446A918();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D429F494();
  sub_1D4469CA8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D446A378();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1D4469C08();
  (*(void (**)(uint64_t))(*(void *)v0 + 144))(v1);
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 60;
}

uint64_t FMIPDeviceAction.deinit()
{
  sub_1D42B24BC(v0 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);

  sub_1D42E2C6C(*(void *)(v0 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D42DD08C(*(void *)(v0 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession), *(void *)(v0 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession + 8));
  return v0;
}

void *sub_1D4338C90()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext);
  swift_beginAccess();
  int v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1D4338CE0(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*sub_1D4338D34())()
{
  return j__swift_endAccess;
}

uint64_t sub_1D4338D94()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_1D42972D4(*v1);
  return v2;
}

uint64_t sub_1D4338DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_1D42E2C6C(v6);
}

uint64_t (*sub_1D4338E50())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D4338EAC()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t FMIPDeviceAction.device.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D42B2458(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, a1);
}

uint64_t sub_1D4338EEC@<X0>(void *a1@<X0>, uint64_t (**a2)(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t *a3)@<X8>)
{
  id v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    double v7 = sub_1D43396CC;
  }
  else
  {
    double v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(unsigned __int8 *, unsigned __int8 *, uint64_t *))v6;
  return sub_1D42972D4(v4);
}

uint64_t sub_1D4338F8C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t *a3, void (*a4)(uint64_t, uint64_t, uint64_t (*)(char a1), uint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v6 = *a2;
  uint64_t v8 = *a3;
  uint64_t v7 = a3[1];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  swift_retain();
  a4(v5, v6, sub_1D43396D4, v9);
  return swift_release();
}

uint64_t sub_1D4339034(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1D4339698;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1D42972D4(v3);
  return sub_1D42E2C6C(v8);
}

uint64_t sub_1D43390FC(char a1, char a2, uint64_t a3, uint64_t a4, void (*a5)(char *, char *, void *))
{
  char v12 = a1;
  char v11 = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  v10[0] = sub_1D43396A0;
  v10[1] = v8;
  swift_retain();
  a5(&v12, &v11, v10);
  return swift_release();
}

uint64_t FMIPDeviceAction.__allocating_init(device:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext) = 0;
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  *uint64_t v3 = 0;
  v3[1] = 0;
  uint64_t v4 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
  *uint64_t v4 = 0;
  v4[1] = 0;
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_username);
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_escrowUUID);
  *uint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
  *(_OWORD *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession) = xmmword_1D446D300;
  sub_1D42B2518(a1, v8);
  return v2;
}

uint64_t FMIPDeviceAction.__deallocating_deinit()
{
  FMIPDeviceAction.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43392BC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 344))();
}

uint64_t sub_1D4339308@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 152))();
  *a2 = result;
  return result;
}

uint64_t sub_1D4339354(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 160);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_1D43393B4()
{
  return type metadata accessor for FMIPDeviceAction();
}

uint64_t type metadata accessor for FMIPDeviceAction()
{
  uint64_t result = qword_1EA6C9F08;
  if (!qword_1EA6C9F08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D4339408()
{
  uint64_t result = type metadata accessor for FMIPDevice();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FMIPDeviceAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPDeviceAction);
}

uint64_t dispatch thunk of FMIPDeviceAction.isPasswordRequired.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of FMIPDeviceAction.authenticationContext.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of FMIPDeviceAction.authenticationContext.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of FMIPDeviceAction.authenticationContext.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of FMIPDeviceAction.trustedDeviceConfirmation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of FMIPDeviceAction.trustedDeviceConfirmation.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of FMIPDeviceAction.trustedDeviceConfirmation.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of FMIPDeviceAction.isTrustedDeviceVerificationRequired.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of FMIPDeviceAction.__allocating_init(device:)()
{
  return (*(uint64_t (**)(void))(v0 + 328))();
}

uint64_t dispatch thunk of FMIPDeviceAction.debugDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of FMIPDeviceAction.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t sub_1D4339660()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D4339698(char a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_1D43390FC(a1, a2, a3, a4, *(void (**)(char *, char *, void *))(v4 + 16));
}

uint64_t sub_1D43396A0(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1D43396CC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t *a3)
{
  return sub_1D4338F8C(a1, a2, a3, *(void (**)(uint64_t, uint64_t, uint64_t (*)(char), uint64_t))(v3 + 16));
}

uint64_t sub_1D43396D4(char a1)
{
  id v2 = *(uint64_t (**)(char *))(v1 + 16);
  char v4 = a1;
  return v2(&v4);
}

uint64_t static FMIPCancelEraseAction.== infix(_:_:)(uint64_t a1)
{
  return static FMIPDevice.== infix(_:_:)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
}

uint64_t FMIPCancelEraseAction.__allocating_init(device:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext) = 0;
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  *uint64_t v3 = 0;
  v3[1] = 0;
  char v4 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
  *char v4 = 0;
  v4[1] = 0;
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_username);
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_escrowUUID);
  *uint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
  *(_OWORD *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession) = xmmword_1D446D300;
  sub_1D42B2518(a1, v8);
  return v2;
}

uint64_t FMIPCancelEraseAction.init(device:)(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext) = 0;
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  void *v2 = 0;
  v2[1] = 0;
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
  *uint64_t v3 = 0;
  v3[1] = 0;
  char v4 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_username);
  *char v4 = 0;
  v4[1] = 0;
  uint64_t v5 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_escrowUUID);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(_OWORD *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession) = xmmword_1D446D300;
  sub_1D42B2518(a1, v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  return v1;
}

uint64_t FMIPCancelEraseAction.__deallocating_deinit()
{
  FMIPDeviceAction.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D4339920()
{
  return type metadata accessor for FMIPCancelEraseAction();
}

uint64_t type metadata accessor for FMIPCancelEraseAction()
{
  uint64_t result = qword_1EA6C9F18;
  if (!qword_1EA6C9F18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D4339974()
{
  return swift_updateClassMetadata2();
}

uint64_t type metadata accessor for FMIPEraseRequest()
{
  uint64_t result = qword_1EA6C9F28;
  if (!qword_1EA6C9F28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D43399F8()
{
  return swift_initClassMetadata2();
}

unint64_t sub_1D4339A48(char a1)
{
  unint64_t result = 0x656369766564;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x72624E72656E776FLL;
      break;
    case 2:
      unint64_t result = 1684632420;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x7478655472657375;
      break;
    case 5:
      unint64_t result = 1954047348;
      break;
    case 6:
      unint64_t result = 0x65646F6373736170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D4339B20()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + qword_1EA6E4808);
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 8);
  *((void *)&v58 + 1) = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v57 = v4;
  *((void *)&v57 + 1) = v3;
  uint64_t v5 = qword_1EA6C9D80;
  uint64_t v6 = *(void *)(v0 + qword_1EA6C9D80);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
  sub_1D433313C((void *)(v6 + 16), v55);
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
  unint64_t v7 = *(void *)&v55[0];
  swift_release();
  sub_1D42C5494(&v57, v55);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v56 = v7;
  sub_1D42C4E78(v55, 0x656369766564, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v1 + v5);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  sub_1D4306B48((void *)(v9 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  char v10 = *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_isUserTextEnabled);
  *((void *)&v58 + 1) = MEMORY[0x1E4FBB390];
  LOBYTE(v57) = v10;
  uint64_t v11 = *(void *)(v1 + v5);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 24));
  sub_1D433313C((void *)(v11 + 16), v55);
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 24));
  unint64_t v12 = *(void *)&v55[0];
  swift_release();
  unint64_t v56 = v12;
  if (*((void *)&v58 + 1))
  {
    sub_1D42C5494(&v57, v55);
    char v13 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v56 = 0x8000000000000000;
    sub_1D42C4E78(v55, 0x7478655472657375, 0xE800000000000000, v13);
    uint64_t v14 = swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D429D4F4((uint64_t)&v57);
    sub_1D43FC5A4(0x7478655472657375, 0xE800000000000000, v55);
    uint64_t v14 = sub_1D429D4F4((uint64_t)v55);
  }
  uint64_t v15 = *(void *)(v1 + v5);
  MEMORY[0x1F4188790](v14);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v15 + 24));
  sub_1D433A560((void *)(v15 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v15 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid + 8);
  if (v16)
  {
    uint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
    *((void *)&v58 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v57 = v17;
    *((void *)&v57 + 1) = v16;
  }
  else
  {
    long long v57 = 0u;
    long long v58 = 0u;
  }
  uint64_t v18 = *(void *)(v1 + v5);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v18 + 24));
  sub_1D433313C((void *)(v18 + 16), v55);
  os_unfair_lock_unlock((os_unfair_lock_t)(v18 + 24));
  unint64_t v19 = *(void *)&v55[0];
  swift_release();
  unint64_t v56 = v19;
  if (*((void *)&v58 + 1))
  {
    sub_1D42C5494(&v57, v55);
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v56 = 0x8000000000000000;
    sub_1D42C4E78(v55, 1684632420, 0xE400000000000000, v20);
    uint64_t v21 = swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D429D4F4((uint64_t)&v57);
    sub_1D43FC5A4(1684632420, 0xE400000000000000, v55);
    uint64_t v21 = sub_1D429D4F4((uint64_t)v55);
  }
  uint64_t v22 = *(void *)(v1 + v5);
  MEMORY[0x1F4188790](v21);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
  sub_1D433A560((void *)(v22 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_message + 8);
  if (v23)
  {
    uint64_t v24 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_message);
    *((void *)&v58 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v57 = v24;
    *((void *)&v57 + 1) = v23;
  }
  else
  {
    long long v57 = 0u;
    long long v58 = 0u;
  }
  uint64_t v25 = *(void *)(v1 + v5);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v25 + 24));
  sub_1D433313C((void *)(v25 + 16), v55);
  os_unfair_lock_unlock((os_unfair_lock_t)(v25 + 24));
  unint64_t v26 = *(void *)&v55[0];
  swift_release();
  unint64_t v56 = v26;
  if (*((void *)&v58 + 1))
  {
    sub_1D42C5494(&v57, v55);
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v56 = 0x8000000000000000;
    sub_1D42C4E78(v55, 1954047348, 0xE400000000000000, v27);
    uint64_t v28 = swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D429D4F4((uint64_t)&v57);
    sub_1D43FC5A4(1954047348, 0xE400000000000000, v55);
    uint64_t v28 = sub_1D429D4F4((uint64_t)v55);
  }
  uint64_t v29 = *(void *)(v1 + v5);
  MEMORY[0x1F4188790](v28);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v29 + 24));
  sub_1D433A560((void *)(v29 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v29 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_phoneNumber + 8);
  if (v30)
  {
    uint64_t v31 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_phoneNumber);
    *((void *)&v58 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v57 = v31;
    *((void *)&v57 + 1) = v30;
  }
  else
  {
    long long v57 = 0u;
    long long v58 = 0u;
  }
  uint64_t v32 = *(void *)(v1 + v5);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v32 + 24));
  sub_1D433313C((void *)(v32 + 16), v55);
  os_unfair_lock_unlock((os_unfair_lock_t)(v32 + 24));
  unint64_t v33 = *(void *)&v55[0];
  swift_release();
  unint64_t v56 = v33;
  if (v30)
  {
    sub_1D42C5494(&v57, v55);
    char v34 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D42C4E78(v55, 0x72624E72656E776FLL, 0xE800000000000000, v34);
    uint64_t v35 = swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D429D4F4((uint64_t)&v57);
    sub_1D43FC5A4(0x72624E72656E776FLL, 0xE800000000000000, v55);
    uint64_t v35 = sub_1D429D4F4((uint64_t)v55);
  }
  uint64_t v36 = *(void *)(v1 + v5);
  MEMORY[0x1F4188790](v35);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v36 + 24));
  sub_1D433A560((void *)(v36 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v36 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_passcode + 8);
  if (v37)
  {
    uint64_t v38 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_passcode);
    *((void *)&v58 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v57 = v38;
    *((void *)&v57 + 1) = v37;
  }
  else
  {
    long long v57 = 0u;
    long long v58 = 0u;
  }
  uint64_t v39 = *(void *)(v1 + v5);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v39 + 24));
  sub_1D433313C((void *)(v39 + 16), v55);
  os_unfair_lock_unlock((os_unfair_lock_t)(v39 + 24));
  unint64_t v40 = *(void *)&v55[0];
  swift_release();
  unint64_t v56 = v40;
  if (v37)
  {
    sub_1D42C5494(&v57, v55);
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D42C4E78(v55, 0x65646F6373736170, 0xE800000000000000, v41);
    uint64_t v42 = swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D429D4F4((uint64_t)&v57);
    sub_1D43FC5A4(0x65646F6373736170, 0xE800000000000000, v55);
    uint64_t v42 = sub_1D429D4F4((uint64_t)v55);
  }
  uint64_t v43 = *(void *)(v1 + v5);
  MEMORY[0x1F4188790](v42);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v43 + 24));
  sub_1D433A560((void *)(v43 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v43 + 24));
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  char v45 = (uint64_t *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession);
  unint64_t v46 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession + 8);
  if (v46 >> 60 != 15)
  {
    uint64_t v47 = *v45;
    sub_1D42DD034(*v45, *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession + 8));
    uint64_t v48 = sub_1D44694D8();
    *((void *)&v58 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v57 = v48;
    *((void *)&v57 + 1) = v49;
    uint64_t v50 = *(void *)(v1 + v5);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v50 + 24));
    sub_1D433313C((void *)(v50 + 16), v55);
    os_unfair_lock_unlock((os_unfair_lock_t)(v50 + 24));
    unint64_t v51 = *(void *)&v55[0];
    swift_release();
    sub_1D42C5494(&v57, v55);
    char v52 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v56 = v51;
    sub_1D42C4E78(v55, 0xD000000000000011, 0x80000001D4480070, v52);
    uint64_t v53 = swift_bridgeObjectRelease();
    uint64_t v54 = *(void *)(v1 + v5);
    MEMORY[0x1F4188790](v53);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v54 + 24));
    sub_1D433A560((void *)(v54 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v54 + 24));
    swift_release();
    swift_bridgeObjectRelease();
    return sub_1D42DD08C(v47, v46);
  }
  return result;
}

uint64_t sub_1D433A4D4()
{
  return swift_release();
}

uint64_t sub_1D433A4E4()
{
  sub_1D427B074();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D433A558()
{
  return type metadata accessor for FMIPEraseRequest();
}

uint64_t sub_1D433A560(void *a1)
{
  return sub_1D4306B48(a1);
}

uint64_t sub_1D433A578()
{
  return sub_1D446A888();
}

uint64_t sub_1D433A5C4()
{
  return sub_1D4469BC8();
}

uint64_t sub_1D433A5D4()
{
  return sub_1D446A888();
}

uint64_t sub_1D433A61C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1D433A670(void *a1@<X8>)
{
  *a1 = 7107189;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1D433A684()
{
  return 7107189;
}

uint64_t sub_1D433A694@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1D433A6EC(uint64_t a1)
{
  unint64_t v2 = sub_1D433AFE0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D433A728(uint64_t a1)
{
  unint64_t v2 = sub_1D433AFE0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D433A764(void *a1)
{
  return sub_1D433A7B0(a1);
}

uint64_t sub_1D433A7B0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D42D5DA0(&qword_1EA6C9F48);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D433AFE0();
  swift_retain();
  sub_1D446A8C8();
  if (v2)
  {
    swift_release();
    sub_1D42BEC64((uint64_t)a1);
    type metadata accessor for FMIPGetURLInfoResponse();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = (uint64_t)v7;
    uint64_t v12 = v29;
    sub_1D446A598();
    uint64_t v15 = (uint64_t)a1;
    if (v13)
    {
      sub_1D4469488();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = sub_1D4469498();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
    }
    sub_1D42E8438(v11, v1 + OBJC_IVAR____TtC8FMIPCore22FMIPGetURLInfoResponse_url);
    swift_release();
    sub_1D42A4D5C((uint64_t)a1, (uint64_t)v30);
    uint64_t v3 = sub_1D427E300(v30);
    uint64_t v16 = qword_1EBD80068;
    swift_retain();
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1D4469928();
    sub_1D42D7FAC(v17, (uint64_t)qword_1EBD83228);
    swift_retain_n();
    uint64_t v18 = sub_1D44698F8();
    os_log_type_t v19 = sub_1D446A038();
    if (os_log_type_enabled(v18, v19))
    {
      char v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v30[0] = v28;
      *(_DWORD *)char v20 = 136315138;
      v26[1] = v20 + 4;
      char v27 = v20;
      uint64_t v21 = sub_1D433AC30();
      v30[6] = sub_1D42CB9EC(v21, v22, v30);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      uint64_t v23 = v27;
      _os_log_impl(&dword_1D4271000, v18, v19, "FMIPGetURLInfoResponse: initialized with coder %s", v27, 0xCu);
      uint64_t v24 = v28;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v24, -1, -1);
      MEMORY[0x1D9447730](v23, -1, -1);

      (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    }
    else
    {
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v8);
    }
    sub_1D42BEC64(v15);
    swift_release();
  }
  return v3;
}

uint64_t sub_1D433AC30()
{
  uint64_t v1 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = 60;
  unint64_t v10 = 0xE100000000000000;
  sub_1D446A918();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v8 = v0;
  sub_1D429F494();
  sub_1D4469CA8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v5 = v9;
  unint64_t v4 = v10;
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  sub_1D446A378();
  swift_bridgeObjectRelease();
  uint64_t v9 = 980185717;
  unint64_t v10 = 0xE400000000000000;
  sub_1D42E83D0(v0 + OBJC_IVAR____TtC8FMIPCore22FMIPGetURLInfoResponse_url, (uint64_t)v3);
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v8 = *(void *)(v0 + 48);
  sub_1D446A6D8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v9 = v5;
  unint64_t v10 = v4;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1D433AE4C()
{
  return sub_1D4304ECC(v0 + OBJC_IVAR____TtC8FMIPCore22FMIPGetURLInfoResponse_url);
}

uint64_t sub_1D433AE5C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1D4304ECC(v0 + OBJC_IVAR____TtC8FMIPCore22FMIPGetURLInfoResponse_url);
  return swift_deallocClassInstance();
}

uint64_t sub_1D433AED8()
{
  return type metadata accessor for FMIPGetURLInfoResponse();
}

uint64_t type metadata accessor for FMIPGetURLInfoResponse()
{
  uint64_t result = qword_1EA6C9F38;
  if (!qword_1EA6C9F38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1D433AF2C()
{
  sub_1D4275CC4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1D433AFBC()
{
  return sub_1D433AC30();
}

unint64_t sub_1D433AFE0()
{
  unint64_t result = qword_1EA6C9F50;
  if (!qword_1EA6C9F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9F50);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPGetURLInfoResponse.FMIPGetURLInfoCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D433B0D0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPGetURLInfoResponse.FMIPGetURLInfoCodingKeys()
{
  return &type metadata for FMIPGetURLInfoResponse.FMIPGetURLInfoCodingKeys;
}

unint64_t sub_1D433B10C()
{
  unint64_t result = qword_1EA6C9F58;
  if (!qword_1EA6C9F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9F58);
  }
  return result;
}

unint64_t sub_1D433B164()
{
  unint64_t result = qword_1EA6C9F60;
  if (!qword_1EA6C9F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9F60);
  }
  return result;
}

unint64_t sub_1D433B1BC()
{
  unint64_t result = qword_1EA6C9F68;
  if (!qword_1EA6C9F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9F68);
  }
  return result;
}

uint64_t FMIPDisableTagSafetyAlertAction.__allocating_init(disabled:)(char a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = a1;
  return result;
}

uint64_t FMIPDisableTagSafetyAlertAction.init(disabled:)(char a1)
{
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

uint64_t FMIPDisableTagSafetyAlertAction.deinit()
{
  return v0;
}

uint64_t FMIPDisableTagSafetyAlertAction.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMIPDisableTagSafetyAlertAction()
{
  return self;
}

uint64_t method lookup function for FMIPDisableTagSafetyAlertAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPDisableTagSafetyAlertAction);
}

uint64_t dispatch thunk of FMIPDisableTagSafetyAlertAction.__allocating_init(disabled:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

id FMIPAddress.init(label:placemark:)@<X0>(id a1@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, void *a4@<X8>)
{
  id v8 = objc_msgSend(a1, sel_country);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_1D4469B38();
    uint64_t v100 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v100 = 0;
  }
  id v12 = objc_msgSend(a1, sel_ISOcountryCode);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v98 = sub_1D4469B38();
    uint64_t v99 = v14;
  }
  else
  {
    uint64_t v98 = 0;
    uint64_t v99 = 0;
  }
  id v15 = objc_msgSend(a1, sel_thoroughfare);
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v103 = sub_1D4469B38();
    unint64_t v18 = v17;
  }
  else
  {
    uint64_t v103 = 0;
    unint64_t v18 = 0;
  }
  swift_bridgeObjectRetain();
  id v19 = objc_msgSend(a1, sel_thoroughfare);
  if (v19)
  {
    char v20 = v19;
    uint64_t v21 = sub_1D4469B38();
    uint64_t v96 = v22;
    uint64_t v97 = v21;
  }
  else
  {
    uint64_t v96 = 0;
    uint64_t v97 = 0;
  }
  id v23 = objc_msgSend(a1, sel_locality);
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v104 = sub_1D4469B38();
    unint64_t v26 = v25;
  }
  else
  {
    uint64_t v104 = 0;
    unint64_t v26 = 0;
  }
  swift_bridgeObjectRetain();
  id v27 = objc_msgSend(a1, sel_postalCode);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = sub_1D4469B38();
    uint64_t v94 = v30;
    uint64_t v95 = v29;
  }
  else
  {
    uint64_t v94 = 0;
    uint64_t v95 = 0;
  }
  id v31 = objc_msgSend(a1, sel_administrativeArea);
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v33 = sub_1D4469B38();
    id v92 = v34;
    uint64_t v93 = v33;
  }
  else
  {
    id v92 = 0;
    uint64_t v93 = 0;
  }
  id v35 = objc_msgSend(a1, sel_subAdministrativeArea);
  if (v35)
  {
    uint64_t v36 = v35;
    uint64_t v37 = sub_1D4469B38();
    uint64_t v90 = v38;
    uint64_t v91 = v37;
  }
  else
  {
    uint64_t v90 = 0;
    uint64_t v91 = 0;
  }
  id v39 = objc_msgSend(a1, sel_fullThoroughfare);
  if (v39)
  {
    unint64_t v40 = v39;
    uint64_t v41 = sub_1D4469B38();
    uint64_t v88 = v42;
    uint64_t v89 = v41;
  }
  else
  {
    uint64_t v88 = 0;
    uint64_t v89 = 0;
  }
  id v43 = objc_msgSend(a1, sel_areasOfInterest);
  unint64_t v102 = v18;
  if (v43)
  {
    char v44 = v43;
    uint64_t v87 = sub_1D4469D78();
  }
  else
  {
    uint64_t v87 = MEMORY[0x1E4FBC860];
  }
  id v45 = objc_msgSend(a1, sel__geoMapItem);
  uint64_t v101 = v10;
  if (!v45) {
    goto LABEL_36;
  }
  id result = objc_msgSend(v45, sel_addressObject);
  if (result)
  {
    id v47 = result;
    id v48 = objc_msgSend(result, sel_fullAddressNoCurrentCountryWithMultiline_, 0);

    if (v48)
    {
      uint64_t v49 = sub_1D4469B38();
      uint64_t v79 = v50;
      uint64_t v80 = v49;

      swift_unknownObjectRelease();
      goto LABEL_37;
    }
    swift_unknownObjectRelease();
LABEL_36:
    uint64_t v79 = 0;
    uint64_t v80 = 0;
LABEL_37:
    id v51 = objc_msgSend(a1, sel__geoMapItem);
    if (v51)
    {
      id v52 = objc_msgSend(v51, sel_addressObject);
      swift_unknownObjectRelease();
      if (v52)
      {
        id v53 = objc_msgSend(v52, sel_cityAndAboveNoCurrentCountryWithFallback_, 0);
        unint64_t v54 = v18;
        if (v53)
        {
          uint64_t v55 = v53;
          uint64_t v56 = sub_1D4469B38();
          unint64_t v58 = v57;

          uint64_t v59 = HIBYTE(v58) & 0xF;
          if ((v58 & 0x2000000000000000) == 0) {
            uint64_t v59 = v56 & 0xFFFFFFFFFFFFLL;
          }
          if (v59)
          {
LABEL_45:
            uint64_t v60 = v103;
            uint64_t v83 = v56;
            unint64_t v84 = v58;
            if (!v102)
            {
LABEL_46:
              uint64_t v81 = v60;
              unint64_t v82 = 0;
              goto LABEL_54;
            }
LABEL_49:
            uint64_t v61 = HIBYTE(v54) & 0xF;
            if ((v54 & 0x2000000000000000) == 0) {
              uint64_t v61 = v60 & 0xFFFFFFFFFFFFLL;
            }
            if (v61)
            {
              swift_bridgeObjectRetain();
              uint64_t v81 = v60;
              unint64_t v82 = v54;
            }
            else
            {
              uint64_t v81 = 0;
              unint64_t v82 = 0;
            }
LABEL_54:
            uint64_t v62 = sub_1D433CFA4(v60, v54, v104, v26);
            unint64_t v64 = v63;
            unint64_t v85 = v26;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!v64) {
              goto LABEL_58;
            }
            uint64_t v65 = HIBYTE(v64) & 0xF;
            if ((v64 & 0x2000000000000000) == 0) {
              uint64_t v65 = v62 & 0xFFFFFFFFFFFFLL;
            }
            if (!v65)
            {
              swift_bridgeObjectRelease();
              uint64_t v62 = 0;
              unint64_t v64 = 0;
              uint64_t v86 = a2;
              if (v52)
              {
LABEL_59:
                id v66 = objc_msgSend(v52, sel_shortAddress);
                if (v66)
                {
                  int v67 = v66;
                  uint64_t v68 = sub_1D4469B38();
                  unint64_t v70 = v69;

                  uint64_t v71 = HIBYTE(v70) & 0xF;
                  if ((v70 & 0x2000000000000000) == 0) {
                    uint64_t v71 = v68 & 0xFFFFFFFFFFFFLL;
                  }
                  if (v71)
                  {
LABEL_65:
                    id v72 = objc_msgSend(v52, sel_fullAddressNoCurrentCountryWithMultiline_, 0, a3);
                    if (v72)
                    {
                      uint64_t v73 = v72;
                      uint64_t v74 = sub_1D4469B38();
                      unint64_t v76 = v75;

                      uint64_t v77 = HIBYTE(v76) & 0xF;
                      if ((v76 & 0x2000000000000000) == 0) {
                        uint64_t v77 = v74 & 0xFFFFFFFFFFFFLL;
                      }
                      if (v77) {
                        goto LABEL_74;
                      }
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                    }
                    uint64_t v74 = 0;
                    unint64_t v76 = 0;
LABEL_74:
                    a3 = v78;
                    goto LABEL_75;
                  }
                  swift_bridgeObjectRelease();
                }
                uint64_t v68 = 0;
                unint64_t v70 = 0;
                goto LABEL_65;
              }
            }
            else
            {
LABEL_58:
              uint64_t v86 = a2;
              if (v52) {
                goto LABEL_59;
              }
            }

            uint64_t v74 = 0;
            unint64_t v76 = 0;
            uint64_t v68 = 0;
            unint64_t v70 = 0;
LABEL_75:
            id result = v92;
            *a4 = v86;
            a4[1] = a3;
            a4[4] = v100;
            a4[5] = v98;
            a4[2] = 0;
            a4[3] = v101;
            a4[6] = v99;
            a4[7] = v103;
            a4[8] = v102;
            a4[9] = v97;
            a4[10] = v96;
            a4[11] = v104;
            a4[12] = v85;
            a4[13] = v95;
            a4[14] = v94;
            a4[15] = v93;
            a4[16] = v92;
            a4[17] = v91;
            a4[18] = v90;
            a4[19] = v80;
            a4[20] = v79;
            a4[21] = v87;
            a4[22] = v89;
            a4[23] = v88;
            a4[24] = v83;
            a4[25] = v84;
            a4[26] = v81;
            a4[27] = v82;
            a4[28] = v62;
            a4[29] = v64;
            a4[30] = v68;
            a4[31] = v70;
            a4[32] = v74;
            a4[33] = v76;
            a4[34] = 0;
            a4[35] = 0;
            return result;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v56 = 0;
        unint64_t v58 = 0;
        goto LABEL_45;
      }
    }
    else
    {
      id v52 = 0;
    }
    unint64_t v54 = v18;
    uint64_t v60 = v103;
    uint64_t v83 = 0;
    unint64_t v84 = 0;
    if (!v18) {
      goto LABEL_46;
    }
    goto LABEL_49;
  }
  __break(1u);
  return result;
}

uint64_t FMIPAddress.label.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.formattedAddressLines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FMIPAddress.country.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.countryCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.streetName.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.streetAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.locality.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.stateCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.administrativeArea.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.subAdministrativeArea.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.mapItemFormattedAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.areaOfInterest.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FMIPAddress.fullThoroughfare.getter()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.coarseAddressModern.getter()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.streetAddressModern.getter()
{
  uint64_t v1 = *(void *)(v0 + 208);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.smallAddressModern.getter()
{
  uint64_t v1 = *(void *)(v0 + 224);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.mediumAddressModern.getter()
{
  uint64_t v1 = *(void *)(v0 + 240);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.largeAddressModern.getter()
{
  uint64_t v1 = *(void *)(v0 + 256);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.poiAddressModern.getter()
{
  uint64_t v1 = *(void *)(v0 + 272);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddress.displayAddress.getter()
{
  uint64_t v2 = v0[3];
  unint64_t v1 = v0[4];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  unint64_t v5 = v0[14];
  uint64_t v6 = v0[15];
  unint64_t v7 = v0[16];
  if (v5 && (uint64_t v8 = v0[13], sub_1D4469BD8() >= 1))
  {
    swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_4;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = v6;
    unint64_t v5 = v7;
    if (!v4)
    {
LABEL_4:
      if (!v5)
      {
        if (!v1) {
          goto LABEL_6;
        }
LABEL_14:
        swift_bridgeObjectRetain();
        uint64_t v8 = v2;
        unint64_t v5 = v1;
        goto LABEL_15;
      }
      goto LABEL_15;
    }
  }
  if (!v5) {
    goto LABEL_21;
  }
  if (v3 == v8 && v4 == v5 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (!v1)
    {
LABEL_6:
      if (!v4) {
        return 0;
      }
      goto LABEL_21;
    }
    goto LABEL_14;
  }
LABEL_15:
  uint64_t v9 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (v9)
  {
    type metadata accessor for FMLocalize();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    if (v4)
    {
      uint64_t v11 = self;
      swift_bridgeObjectRetain();
      id v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1D44692D8();

      sub_1D42D5DA0(&qword_1EA6C98E0);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1D4470B60;
      uint64_t v14 = MEMORY[0x1E4FBB1A0];
      *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v15 = sub_1D42CB714();
      *(void *)(v13 + 32) = v3;
      *(void *)(v13 + 40) = v4;
      *(void *)(v13 + 96) = v14;
      *(void *)(v13 + 104) = v15;
      *(void *)(v13 + 64) = v15;
      *(void *)(v13 + 72) = v8;
      *(void *)(v13 + 80) = v5;
    }
    else
    {
      id v20 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1D44692D8();

      sub_1D42D5DA0(&qword_1EA6C98E0);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1D446E050;
      *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v21 + 64) = sub_1D42CB714();
      *(void *)(v21 + 32) = v8;
      *(void *)(v21 + 40) = v5;
    }
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  if (!v4) {
    return 0;
  }
LABEL_21:
  type metadata accessor for FMLocalize();
  uint64_t v16 = swift_getObjCClassFromMetadata();
  unint64_t v17 = self;
  swift_bridgeObjectRetain();
  id v18 = objc_msgSend(v17, sel_bundleForClass_, v16);
  sub_1D44692D8();

  sub_1D42D5DA0(&qword_1EA6C98E0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1D446E050;
  *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v19 + 64) = sub_1D42CB714();
  *(void *)(v19 + 32) = v3;
  *(void *)(v19 + 40) = v4;
LABEL_23:
  uint64_t v22 = sub_1D4469B58();
  swift_bridgeObjectRelease();
  return v22;
}

unint64_t sub_1D433BFA4(char a1)
{
  unint64_t result = 0x6C6562616CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x7972746E756F63;
      break;
    case 3:
      unint64_t result = 0x437972746E756F63;
      break;
    case 4:
      unint64_t result = 0x614E746565727473;
      break;
    case 5:
      unint64_t result = 0x6441746565727473;
      break;
    case 6:
      unint64_t result = 0x7974696C61636F6CLL;
      break;
    case 7:
      unint64_t result = 0x646F436574617473;
      break;
    case 8:
    case 10:
    case 15:
    case 17:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
      unint64_t result = 0x6E49664F61657261;
      break;
    case 12:
      unint64_t result = 0xD000000000000011;
      break;
    case 13:
      unint64_t result = 0xD000000000000013;
      break;
    case 14:
      unint64_t result = 0xD000000000000013;
      break;
    case 16:
      unint64_t result = 0xD000000000000013;
      break;
    case 18:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D433C234(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1D433BFA4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1D433BFA4(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D433C2C0()
{
  char v1 = *v0;
  sub_1D446A828();
  sub_1D433BFA4(v1);
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  return sub_1D446A888();
}

uint64_t sub_1D433C324()
{
  sub_1D433BFA4(*v0);
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D433C378()
{
  char v1 = *v0;
  sub_1D446A828();
  sub_1D433BFA4(v1);
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  return sub_1D446A888();
}

uint64_t sub_1D433C3D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D433E2C4();
  *a1 = result;
  return result;
}

unint64_t sub_1D433C408@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1D433BFA4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D433C434@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D433E2C4();
  *a1 = result;
  return result;
}

void sub_1D433C45C(unsigned char *a1@<X8>)
{
  *a1 = 19;
}

uint64_t sub_1D433C468(uint64_t a1)
{
  unint64_t v2 = sub_1D42A7130();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D433C4A4(uint64_t a1)
{
  unint64_t v2 = sub_1D42A7130();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPAddress.init(mapItem:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v135 = 0;
  unint64_t v136 = 0;
  uint64_t v133 = 0;
  uint64_t v134 = 0;
  id v3 = objc_msgSend(a1, sel_name);
  if (v3)
  {
    unint64_t v4 = v3;
    sub_1D4469B38();

    uint64_t v5 = sub_1D4469CC8();
    uint64_t v124 = v6;
    uint64_t v125 = v5;
  }
  else
  {
    uint64_t v124 = 0;
    uint64_t v125 = 0;
  }
  id v7 = objc_msgSend(a1, sel_geoAddress);
  if (v7)
  {
    char v8 = v7;
    id v9 = objc_msgSend(v7, sel_formattedAddressLines);
    if (v9)
    {
      uint64_t v10 = v9;
      sub_1D4469D68();
    }
    id v11 = objc_msgSend(v8, sel_structuredAddress);
    if (v11)
    {
      id v12 = v11;
      id v13 = objc_msgSend(v11, sel_country);
      if (v13)
      {
        uint64_t v14 = v13;
        sub_1D4469B38();

        uint64_t v15 = sub_1D4469CC8();
        uint64_t v120 = v16;
        uint64_t v121 = v15;
      }
      else
      {
        uint64_t v120 = 0;
        uint64_t v121 = 0;
      }
      id v20 = objc_msgSend(v12, sel_countryCode);
      if (v20)
      {
        uint64_t v21 = v20;
        sub_1D4469B38();

        uint64_t v22 = sub_1D4469CC8();
        uint64_t v118 = v23;
        uint64_t v119 = v22;
      }
      else
      {
        uint64_t v118 = 0;
        uint64_t v119 = 0;
      }
      id v24 = objc_msgSend(v12, sel_thoroughfare);
      if (v24)
      {
        unint64_t v25 = v24;
        sub_1D4469B38();

        uint64_t v18 = sub_1D4469CC8();
        uint64_t v135 = v18;
        unint64_t v136 = v26;
      }
      else
      {
        uint64_t v18 = 0;
        unint64_t v26 = 0;
      }
      unint64_t v130 = v26;
      id v27 = objc_msgSend(v12, sel_subThoroughfare);
      if (v27)
      {
        uint64_t v28 = v27;
        sub_1D4469B38();

        uint64_t v29 = sub_1D4469CC8();
        uint64_t v116 = v30;
        uint64_t v117 = v29;
      }
      else
      {
        uint64_t v116 = 0;
        uint64_t v117 = 0;
      }
      id v31 = objc_msgSend(v12, sel_locality);
      if (v31)
      {
        uint64_t v32 = v31;
        sub_1D4469B38();

        uint64_t v115 = sub_1D4469CC8();
        uint64_t v133 = v115;
        uint64_t v134 = v33;
        uint64_t v17 = v33;
      }
      else
      {
        uint64_t v115 = 0;
        uint64_t v17 = 0;
      }
      id v34 = objc_msgSend(v12, sel_administrativeAreaCode);
      if (v34)
      {
        id v35 = v34;
        sub_1D4469B38();

        uint64_t v36 = sub_1D4469CC8();
        uint64_t v113 = v37;
        uint64_t v114 = v36;
      }
      else
      {
        uint64_t v113 = 0;
        uint64_t v114 = 0;
      }
      id v38 = objc_msgSend(v12, sel_administrativeArea);
      if (v38)
      {
        id v39 = v38;
        sub_1D4469B38();

        uint64_t v40 = sub_1D4469CC8();
        uint64_t v111 = v41;
        uint64_t v112 = v40;
      }
      else
      {
        uint64_t v111 = 0;
        uint64_t v112 = 0;
      }
      id v42 = objc_msgSend(v12, sel_subAdministrativeArea);
      if (v42)
      {
        id v43 = v42;
        sub_1D4469B38();

        uint64_t v44 = sub_1D4469CC8();
        uint64_t v109 = v45;
        uint64_t v110 = v44;
      }
      else
      {

        uint64_t v109 = 0;
        uint64_t v110 = 0;
      }
      unint64_t v19 = v130;
      goto LABEL_36;
    }

    uint64_t v109 = 0;
    uint64_t v110 = 0;
    uint64_t v111 = 0;
    uint64_t v112 = 0;
    uint64_t v113 = 0;
    uint64_t v114 = 0;
    uint64_t v116 = 0;
    uint64_t v117 = 0;
    uint64_t v118 = 0;
    uint64_t v119 = 0;
    uint64_t v120 = 0;
    uint64_t v121 = 0;
  }
  else
  {
    uint64_t v109 = 0;
    uint64_t v110 = 0;
    uint64_t v111 = 0;
    uint64_t v112 = 0;
    uint64_t v113 = 0;
    uint64_t v114 = 0;
    uint64_t v116 = 0;
    uint64_t v117 = 0;
    uint64_t v118 = 0;
    uint64_t v119 = 0;
    uint64_t v120 = 0;
    uint64_t v121 = 0;
  }
  uint64_t v115 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  unint64_t v19 = 0;
LABEL_36:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v46 = objc_msgSend(a1, sel_geoAddress);
  if (v46
    && (id v47 = v46,
        id v48 = objc_msgSend(v46, sel_structuredAddress),
        v47,
        v48)
    && (id v49 = objc_msgSend(v48, sel_fullThoroughfare), v48, v49))
  {
    uint64_t v50 = sub_1D4469B38();
    uint64_t v107 = v51;
    uint64_t v108 = v50;
  }
  else
  {
    uint64_t v107 = 0;
    uint64_t v108 = 0;
  }
  id v52 = objc_msgSend(a1, sel_geoAddress);
  if (v52)
  {
    id v53 = v52;
    id v54 = objc_msgSend(v52, sel_structuredAddress);

    if (v54)
    {
      id v55 = objc_msgSend(v54, sel_areaOfInterests);

      if (v55)
      {
        sub_1D4469D68();
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v56 = MEMORY[0x1E4FBC860];
  id v57 = objc_msgSend(a1, sel_addressObject);
  if (v57
    && (unint64_t v58 = v57,
        id v59 = objc_msgSend(v57, sel_fullAddressNoCurrentCountryWithMultiline_, 0),
        v58,
        v59))
  {
    uint64_t v60 = sub_1D4469B38();
    uint64_t v105 = v61;
    uint64_t v106 = v60;
  }
  else
  {
    uint64_t v105 = 0;
    uint64_t v106 = 0;
  }
  id v62 = objc_msgSend(a1, sel_addressObject);
  unint64_t v63 = v62;
  if (!v62) {
    goto LABEL_55;
  }
  id v64 = objc_msgSend(v62, sel_cityAndAboveNoCurrentCountryWithFallback_, 0);
  if (!v64) {
    goto LABEL_55;
  }
  uint64_t v65 = v64;
  uint64_t v66 = sub_1D4469B38();
  unint64_t v68 = v67;

  uint64_t v69 = HIBYTE(v68) & 0xF;
  uint64_t v129 = v66;
  if ((v68 & 0x2000000000000000) == 0) {
    uint64_t v69 = v66 & 0xFFFFFFFFFFFFLL;
  }
  if (!v69)
  {
    swift_bridgeObjectRelease();
LABEL_55:
    uint64_t v129 = 0;
    unint64_t v68 = 0;
  }
  uint64_t v128 = v18;
  unint64_t v131 = v19;
  if (v19)
  {
    uint64_t v70 = HIBYTE(v19) & 0xF;
    if ((v19 & 0x2000000000000000) == 0) {
      uint64_t v70 = v18 & 0xFFFFFFFFFFFFLL;
    }
    if (v70)
    {
      swift_bridgeObjectRetain();
      uint64_t v122 = v18;
      unint64_t v123 = v19;
    }
    else
    {
      uint64_t v122 = 0;
      unint64_t v123 = 0;
    }
  }
  else
  {
    uint64_t v122 = v18;
    unint64_t v123 = 0;
  }
  unint64_t v71 = sub_1D433CDD0(&v135, &v133);
  unint64_t v73 = v72;
  swift_bridgeObjectRelease();
  if (v73)
  {
    uint64_t v74 = HIBYTE(v73) & 0xF;
    if ((v73 & 0x2000000000000000) == 0) {
      uint64_t v74 = v71 & 0xFFFFFFFFFFFFLL;
    }
    if (!v74)
    {
      swift_bridgeObjectRelease();
      unint64_t v71 = 0;
      unint64_t v73 = 0;
    }
  }
  uint64_t v127 = v17;
  unint64_t v126 = v68;
  if (!v63)
  {
    unint64_t v94 = v131;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v83 = 0;
    unint64_t v85 = 0;
    uint64_t v77 = 0;
    unint64_t v79 = 0;
LABEL_84:
    uint64_t v88 = v124;
    uint64_t v87 = v125;
    uint64_t v89 = v121;
    uint64_t v91 = v119;
    uint64_t v90 = v120;
    uint64_t v93 = v117;
    uint64_t v92 = v118;
    uint64_t v96 = v115;
    uint64_t v95 = v116;
    uint64_t v98 = v113;
    uint64_t result = v114;
    uint64_t v100 = v111;
    uint64_t v99 = v112;
    uint64_t v102 = v109;
    uint64_t v101 = v110;
    uint64_t v104 = v107;
    uint64_t v103 = v108;
    goto LABEL_85;
  }
  id v75 = objc_msgSend(v63, sel_shortAddress);
  if (!v75) {
    goto LABEL_74;
  }
  unint64_t v76 = v75;
  uint64_t v77 = sub_1D4469B38();
  unint64_t v79 = v78;

  uint64_t v80 = HIBYTE(v79) & 0xF;
  if ((v79 & 0x2000000000000000) == 0) {
    uint64_t v80 = v77 & 0xFFFFFFFFFFFFLL;
  }
  if (!v80)
  {
    swift_bridgeObjectRelease();
LABEL_74:
    uint64_t v77 = 0;
    unint64_t v79 = 0;
  }
  id v81 = objc_msgSend(v63, sel_fullAddressNoCurrentCountryWithMultiline_, 0);
  if (!v81)
  {
    unint64_t v94 = v131;
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    uint64_t v83 = 0;
    unint64_t v85 = 0;
    goto LABEL_84;
  }
  unint64_t v82 = v81;
  uint64_t v83 = sub_1D4469B38();
  unint64_t v85 = v84;

  swift_unknownObjectRelease();
  if ((v85 & 0x2000000000000000) != 0) {
    uint64_t v86 = HIBYTE(v85) & 0xF;
  }
  else {
    uint64_t v86 = v83 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRelease();
  if (!v86)
  {
    swift_bridgeObjectRelease();
    uint64_t v83 = 0;
    unint64_t v85 = 0;
  }
  uint64_t v88 = v124;
  uint64_t v87 = v125;
  uint64_t v89 = v121;
  uint64_t v91 = v119;
  uint64_t v90 = v120;
  uint64_t v93 = v117;
  uint64_t v92 = v118;
  unint64_t v94 = v131;
  uint64_t v96 = v115;
  uint64_t v95 = v116;
  uint64_t v98 = v113;
  uint64_t result = v114;
  uint64_t v100 = v111;
  uint64_t v99 = v112;
  uint64_t v102 = v109;
  uint64_t v101 = v110;
  uint64_t v104 = v107;
  uint64_t v103 = v108;
LABEL_85:
  *a2 = v87;
  a2[1] = v88;
  a2[2] = 0;
  a2[3] = v89;
  a2[4] = v90;
  a2[5] = v91;
  a2[6] = v92;
  a2[7] = v128;
  a2[8] = v94;
  a2[9] = v93;
  a2[10] = v95;
  a2[11] = v96;
  a2[12] = v127;
  a2[13] = result;
  a2[14] = v98;
  a2[15] = v99;
  a2[16] = v100;
  a2[17] = v101;
  a2[18] = v102;
  a2[19] = v106;
  a2[20] = v105;
  a2[21] = v56;
  a2[22] = v103;
  a2[23] = v104;
  a2[24] = v129;
  a2[25] = v126;
  a2[26] = v122;
  a2[27] = v123;
  a2[28] = v71;
  a2[29] = v73;
  a2[30] = v77;
  a2[31] = v79;
  a2[32] = v83;
  a2[33] = v85;
  a2[34] = 0;
  a2[35] = 0;
  return result;
}

unint64_t sub_1D433CDD0(uint64_t *a1, uint64_t *a2)
{
  swift_beginAccess();
  unint64_t v4 = a1[1];
  if (v4)
  {
    uint64_t v5 = *a1;
    uint64_t v6 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v6 = *a1 & 0xFFFFFFFFFFFFLL;
    }
    if (!v6) {
      return 0;
    }
    swift_beginAccess();
    unint64_t v7 = a2[1];
    if (!v7) {
      return 0;
    }
    uint64_t v8 = *a2;
    uint64_t v9 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v9 = *a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v9)
    {
      type metadata accessor for FMLocalize();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v11 = self;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1D44692D8();

      sub_1D42D5DA0(&qword_1EA6C98E0);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1D4470B60;
      uint64_t v14 = MEMORY[0x1E4FBB1A0];
      *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v15 = sub_1D42CB714();
      *(void *)(v13 + 32) = v5;
      *(void *)(v13 + 40) = v4;
      *(void *)(v13 + 96) = v14;
      *(void *)(v13 + 104) = v15;
      *(void *)(v13 + 64) = v15;
      *(void *)(v13 + 72) = v8;
      *(void *)(v13 + 80) = v7;
      unint64_t v4 = sub_1D4469B48();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v4;
}

uint64_t sub_1D433CFA4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a2) {
    return 0;
  }
  uint64_t v6 = 0;
  uint64_t v7 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v7 && a4)
  {
    uint64_t v10 = HIBYTE(a4) & 0xF;
    if ((a4 & 0x2000000000000000) == 0) {
      uint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
    }
    if (v10)
    {
      type metadata accessor for FMLocalize();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v12 = self;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1D44692D8();

      sub_1D42D5DA0(&qword_1EA6C98E0);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1D4470B60;
      uint64_t v15 = MEMORY[0x1E4FBB1A0];
      *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v16 = sub_1D42CB714();
      *(void *)(v14 + 32) = a1;
      *(void *)(v14 + 40) = a2;
      *(void *)(v14 + 96) = v15;
      *(void *)(v14 + 104) = v16;
      *(void *)(v14 + 64) = v16;
      *(void *)(v14 + 72) = a3;
      *(void *)(v14 + 80) = a4;
      uint64_t v6 = sub_1D4469B48();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    return 0;
  }
  return v6;
}

uint64_t FMIPAddress.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6C9F78);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v59 = v1[3];
  uint64_t v60 = v9;
  uint64_t v10 = v1[4];
  uint64_t v57 = v1[5];
  uint64_t v58 = v10;
  uint64_t v11 = v1[6];
  uint64_t v12 = v1[7];
  uint64_t v55 = v1[8];
  uint64_t v56 = v11;
  uint64_t v13 = v1[9];
  uint64_t v53 = v1[10];
  uint64_t v54 = v12;
  uint64_t v14 = v1[11];
  uint64_t v51 = v1[12];
  uint64_t v52 = v13;
  uint64_t v15 = v1[13];
  uint64_t v49 = v1[14];
  uint64_t v50 = v14;
  uint64_t v16 = v1[15];
  uint64_t v47 = v1[16];
  uint64_t v48 = v15;
  uint64_t v44 = v1[17];
  uint64_t v45 = v1[18];
  uint64_t v46 = v16;
  uint64_t v42 = v1[19];
  uint64_t v43 = v1[20];
  uint64_t v41 = v1[21];
  uint64_t v39 = v1[22];
  uint64_t v40 = v1[23];
  uint64_t v37 = v1[24];
  uint64_t v38 = v1[25];
  uint64_t v35 = v1[26];
  uint64_t v36 = v1[27];
  uint64_t v33 = v1[28];
  uint64_t v34 = v1[29];
  uint64_t v31 = v1[30];
  uint64_t v32 = v1[31];
  uint64_t v27 = v1[32];
  uint64_t v28 = v1[33];
  uint64_t v29 = v1[34];
  uint64_t v30 = v1[35];
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42A7130();
  uint64_t v17 = v3;
  sub_1D446A8E8();
  uint64_t v62 = v7;
  uint64_t v63 = v8;
  char v64 = 0;
  uint64_t v18 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
  uint64_t v19 = sub_1D42E2190((unint64_t *)&qword_1EBD7D8B8, (uint64_t *)&unk_1EBD7FD68);
  uint64_t v20 = v61;
  sub_1D446A698();
  if (v20) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v17);
  }
  v26[1] = v19;
  uint64_t v61 = v18;
  uint64_t v22 = v58;
  uint64_t v21 = v59;
  uint64_t v24 = v56;
  uint64_t v23 = v57;
  uint64_t v62 = v60;
  char v64 = 1;
  sub_1D42D5DA0(&qword_1EA6C9F80);
  sub_1D433D910();
  sub_1D446A698();
  uint64_t v62 = v21;
  uint64_t v63 = v22;
  char v64 = 2;
  sub_1D446A698();
  uint64_t v62 = v23;
  uint64_t v63 = v24;
  char v64 = 3;
  sub_1D446A698();
  uint64_t v62 = v54;
  uint64_t v63 = v55;
  char v64 = 4;
  sub_1D446A698();
  uint64_t v62 = v52;
  uint64_t v63 = v53;
  char v64 = 5;
  sub_1D446A698();
  uint64_t v62 = v50;
  uint64_t v63 = v51;
  char v64 = 6;
  sub_1D446A698();
  uint64_t v62 = v48;
  uint64_t v63 = v49;
  char v64 = 7;
  sub_1D446A698();
  uint64_t v62 = v46;
  uint64_t v63 = v47;
  char v64 = 8;
  sub_1D446A698();
  uint64_t v62 = v44;
  uint64_t v63 = v45;
  char v64 = 9;
  sub_1D446A698();
  uint64_t v62 = v42;
  uint64_t v63 = v43;
  char v64 = 10;
  sub_1D446A698();
  uint64_t v62 = v41;
  char v64 = 11;
  sub_1D42D5DA0(&qword_1EA6C9E30);
  sub_1D42E2190(&qword_1EA6C9F90, &qword_1EA6C9E30);
  sub_1D446A698();
  uint64_t v62 = v39;
  uint64_t v63 = v40;
  char v64 = 12;
  sub_1D446A698();
  uint64_t v62 = v37;
  uint64_t v63 = v38;
  char v64 = 13;
  sub_1D446A698();
  uint64_t v62 = v35;
  uint64_t v63 = v36;
  char v64 = 14;
  sub_1D446A698();
  uint64_t v62 = v33;
  uint64_t v63 = v34;
  char v64 = 15;
  sub_1D446A698();
  uint64_t v62 = v31;
  uint64_t v63 = v32;
  char v64 = 16;
  sub_1D446A698();
  uint64_t v62 = v27;
  uint64_t v63 = v28;
  char v64 = 17;
  sub_1D446A698();
  uint64_t v62 = v29;
  uint64_t v63 = v30;
  char v64 = 18;
  sub_1D446A698();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v17);
}

unint64_t sub_1D433D910()
{
  unint64_t result = qword_1EA6C9F88;
  if (!qword_1EA6C9F88)
  {
    sub_1D42DB55C(&qword_1EA6C9F80);
    sub_1D42E2190(&qword_1EA6C9F90, &qword_1EA6C9E30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9F88);
  }
  return result;
}

unint64_t FMIPAddress.debugDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  sub_1D446A378();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    swift_bridgeObjectRetain();
    sub_1D42D5DA0(&qword_1EA6C9F80);
    sub_1D4469B68();
  }
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  return 0xD000000000000017;
}

uint64_t sub_1D433DA8C(void *a1)
{
  return FMIPAddress.encode(to:)(a1);
}

uint64_t destroy for FMIPAddress()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FMIPAddress(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  uint64_t v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  uint64_t v21 = a2[21];
  a1[20] = a2[20];
  a1[21] = v21;
  uint64_t v13 = a2[23];
  a1[22] = a2[22];
  a1[23] = v13;
  uint64_t v14 = a2[25];
  a1[24] = a2[24];
  a1[25] = v14;
  uint64_t v15 = a2[27];
  a1[26] = a2[26];
  a1[27] = v15;
  uint64_t v16 = a2[29];
  a1[28] = a2[28];
  a1[29] = v16;
  uint64_t v17 = a2[31];
  a1[30] = a2[30];
  a1[31] = v17;
  uint64_t v18 = a2[33];
  a1[32] = a2[32];
  a1[33] = v18;
  uint64_t v19 = a2[35];
  a1[34] = a2[34];
  a1[35] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FMIPAddress(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  a1[25] = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[26] = a2[26];
  a1[27] = a2[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[28] = a2[28];
  a1[29] = a2[29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[30] = a2[30];
  a1[31] = a2[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[32] = a2[32];
  a1[33] = a2[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[34] = a2[34];
  a1[35] = a2[35];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for FMIPAddress(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t assignWithTake for FMIPAddress(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPAddress.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEE) {
    goto LABEL_17;
  }
  if (a2 + 18 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 18) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 18;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v8 = v6 - 19;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPAddress.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *unint64_t result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D433E244);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 18;
        break;
    }
  }
  return result;
}

unint64_t sub_1D433E270()
{
  unint64_t result = qword_1EA6C9F98;
  if (!qword_1EA6C9F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9F98);
  }
  return result;
}

uint64_t sub_1D433E2C4()
{
  unint64_t v0 = sub_1D446A788();
  swift_bridgeObjectRelease();
  if (v0 >= 0x13) {
    return 19;
  }
  else {
    return v0;
  }
}

uint64_t static FMIPRepairDeviceAction.== infix(_:_:)(uint64_t a1)
{
  return static FMIPDevice.== infix(_:_:)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
}

uint64_t FMIPRepairDeviceAction.__allocating_init(device:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext) = 0;
  int v3 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  *int v3 = 0;
  v3[1] = 0;
  unsigned int v4 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
  *unsigned int v4 = 0;
  v4[1] = 0;
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_username);
  *uint64_t v5 = 0;
  v5[1] = 0;
  unsigned int v6 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  *unsigned int v6 = 0;
  v6[1] = 0;
  BOOL v7 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_escrowUUID);
  *BOOL v7 = 0;
  v7[1] = 0;
  uint64_t v8 = v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
  *(_OWORD *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession) = xmmword_1D446D300;
  sub_1D42B2518(a1, v8);
  return v2;
}

uint64_t FMIPRepairDeviceAction.init(device:)(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext) = 0;
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  void *v2 = 0;
  v2[1] = 0;
  int v3 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
  *int v3 = 0;
  v3[1] = 0;
  unsigned int v4 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_username);
  *unsigned int v4 = 0;
  v4[1] = 0;
  uint64_t v5 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  *uint64_t v5 = 0;
  v5[1] = 0;
  unsigned int v6 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_escrowUUID);
  *unsigned int v6 = 0;
  v6[1] = 0;
  *(_OWORD *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession) = xmmword_1D446D300;
  sub_1D42B2518(a1, v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  return v1;
}

uint64_t FMIPRepairDeviceAction.__deallocating_deinit()
{
  FMIPDeviceAction.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D433E51C(void *a1)
{
  return static FMIPDevice.== infix(_:_:)(*a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
}

uint64_t sub_1D433E53C()
{
  return type metadata accessor for FMIPRepairDeviceAction();
}

uint64_t type metadata accessor for FMIPRepairDeviceAction()
{
  uint64_t result = qword_1EA6C9FA0;
  if (!qword_1EA6C9FA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FMIPFirmwareUpdateAction.__allocating_init(item:updateInitiated:)(uint64_t a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + OBJC_IVAR____TtC8FMIPCore24FMIPFirmwareUpdateAction_updateInitiated) = a2;
  sub_1D42FA5EC(a1, v4 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item);
  return v4;
}

uint64_t FMIPFirmwareUpdateAction.init(item:updateInitiated:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore24FMIPFirmwareUpdateAction_updateInitiated) = a2;
  sub_1D42FA5EC(a1, v2 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item);
  return v2;
}

void FMIPFirmwareUpdateAction.__allocating_init(item:)()
{
}

void FMIPFirmwareUpdateAction.init(item:)()
{
}

uint64_t FMIPFirmwareUpdateAction.deinit()
{
  sub_1D42FA678(v0 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item);
  return v0;
}

uint64_t FMIPFirmwareUpdateAction.__deallocating_deinit()
{
  sub_1D42FA678(v0 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item);
  return swift_deallocClassInstance();
}

uint64_t sub_1D433E724()
{
  return type metadata accessor for FMIPFirmwareUpdateAction();
}

uint64_t type metadata accessor for FMIPFirmwareUpdateAction()
{
  uint64_t result = qword_1EA6C9FB0;
  if (!qword_1EA6C9FB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D433E778()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FMIPFirmwareUpdateAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPFirmwareUpdateAction);
}

uint64_t dispatch thunk of FMIPFirmwareUpdateAction.__allocating_init(item:updateInitiated:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void FMIPLockMetadata.status.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FMIPLockMetadata.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMIPLockMetadata() + 20);
  uint64_t v4 = sub_1D4469618();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1D433E86C(char *a1, char *a2)
{
  return sub_1D4414B34(*a1, *a2);
}

uint64_t sub_1D433E878()
{
  return sub_1D446A888();
}

uint64_t sub_1D433E90C()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D433E98C()
{
  return sub_1D446A888();
}

uint64_t sub_1D433EA1C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1D433EA7C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6954657461657263;
  if (*v1) {
    uint64_t v2 = 0x6F43737574617473;
  }
  unint64_t v3 = 0xEF706D617473656DLL;
  if (*v1) {
    unint64_t v3 = 0xEA00000000006564;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D433EACC()
{
  if (*v0) {
    return 0x6F43737574617473;
  }
  else {
    return 0x6954657461657263;
  }
}

uint64_t sub_1D433EB18@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1D433EB7C(uint64_t a1)
{
  unint64_t v2 = sub_1D42D8D3C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D433EBB8(uint64_t a1)
{
  unint64_t v2 = sub_1D42D8D3C();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t FMIPLockMetadata.debugDescription.getter()
{
  uint64_t v0 = self;
  type metadata accessor for FMIPLockMetadata();
  uint64_t v1 = (void *)sub_1D4469578();
  id v2 = objc_msgSend(v0, sel_localizedStringFromDate_dateStyle_timeStyle_, v1, 1, 4);

  sub_1D4469B38();
  sub_1D446A378();
  swift_bridgeObjectRelease();
  FMIPActionStatus.description.getter();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  return 0xD00000000000001BLL;
}

void FMIPLockMetadata.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C9FC0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FMIPLockMetadata();
  v9[0] = v1;
  uint64_t v8 = (void *)sub_1D4469578();
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42D8D3C();
  sub_1D446A8E8();
  objc_msgSend(v8, sel_fm_epoch);
  char v11 = 0;
  sub_1D446A6A8();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v9[1] = qword_1D44710D0[*(char *)v9[0]];
    sub_1D446A6D8();
    char v10 = 1;
    sub_1D446A658();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    swift_bridgeObjectRelease();
  }
}

BOOL static FMIPLockMetadata.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPLockMetadata();
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  BOOL v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - v8;
  char v10 = sub_1D44695C8();
  sub_1D433F1B0(a1, (uint64_t)v9);
  sub_1D433F1B0(a2, (uint64_t)v7);
  BOOL v11 = (v10 & 1) != 0 && qword_1D44710D0[*v9] == qword_1D44710D0[*v7];
  sub_1D433F214((uint64_t)v7);
  sub_1D433F214((uint64_t)v9);
  return v11;
}

void sub_1D433F030(void *a1)
{
}

BOOL sub_1D433F048(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v12 - v7;
  char v9 = sub_1D44695C8();
  sub_1D433F1B0(a1, (uint64_t)v8);
  sub_1D433F1B0(a2, (uint64_t)v6);
  BOOL v10 = (v9 & 1) != 0 && qword_1D44710D0[*v8] == qword_1D44710D0[*v6];
  sub_1D433F214((uint64_t)v6);
  sub_1D433F214((uint64_t)v8);
  return v10;
}

uint64_t sub_1D433F14C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPLockMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D433F1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPLockMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D433F214(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPLockMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for FMIPLockMetadata(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1D4469618();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for FMIPLockMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1D4469618();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

unsigned char *initializeWithCopy for FMIPLockMetadata(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithCopy for FMIPLockMetadata(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

unsigned char *initializeWithTake for FMIPLockMetadata(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithTake for FMIPLockMetadata(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1D433F594(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 238)
  {
    unsigned int v4 = *a1;
    if (v4 >= 0x12) {
      return v4 - 17;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1D4469618();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    BOOL v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

unsigned char *sub_1D433F63C(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 238)
  {
    *uint64_t result = a2 + 17;
  }
  else
  {
    uint64_t v7 = sub_1D4469618();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPLockMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D433F7ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unint64_t sub_1D433F7D8()
{
  unint64_t result = qword_1EA6C9FC8;
  if (!qword_1EA6C9FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9FC8);
  }
  return result;
}

uint64_t FMIPItemPairingState.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D4469688();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  BOOL v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v28 - v12;
  id v14 = objc_msgSend(a1, sel_status);
  if (v14 == (id)2)
  {

    uint64_t v20 = sub_1D42D5DA0(&qword_1EA6C9FD0);
    uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    uint64_t v17 = v20;
    uint64_t v18 = a2;
    uint64_t v19 = 3;
    goto LABEL_10;
  }
  if (v14 != (id)1)
  {
    if (v14)
    {

      uint64_t v26 = sub_1D42D5DA0(&qword_1EA6C9FD0);
      uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
      uint64_t v17 = v26;
      uint64_t v18 = a2;
      uint64_t v19 = 1;
    }
    else
    {

      uint64_t v15 = sub_1D42D5DA0(&qword_1EA6C9FD0);
      uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
      uint64_t v17 = v15;
      uint64_t v18 = a2;
      uint64_t v19 = 2;
    }
LABEL_10:
    return v16(v18, v19, 3, v17);
  }
  id v21 = objc_msgSend(a1, sel_beaconIdentifier);
  if (v21)
  {
    uint64_t v22 = v21;
    sub_1D4469668();

    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v23(v6, v11, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      v23(v13, v6, v7);
      v23(a2, v13, v7);
      uint64_t v24 = sub_1D42D5DA0(&qword_1EA6C9FD0);
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a2, 0, 3, v24);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_1D4276C3C((uint64_t)v6, (uint64_t *)&unk_1EBD7E930);
  uint64_t v27 = sub_1D42D5DA0(&qword_1EA6C9FD0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a2, 1, 3, v27);
}

uint64_t FMIPItemPairingState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v4 = sub_1D4469688();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMIPItemPairingState();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D446A8B8();
  if (v2) {
    return sub_1D42BEC64((uint64_t)a1);
  }
  unint64_t v25 = v7;
  uint64_t v26 = v4;
  uint64_t v27 = v10;
  uint64_t v24 = v5;
  uint64_t v11 = v32;
  sub_1D42E1A94((uint64_t)v30, v31);
  uint64_t v13 = sub_1D446A6F8();
  uint64_t v14 = v12;
  BOOL v15 = v13 == 27509 && v12 == 0xE200000000000000;
  if (v15 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = v11;
    uint64_t v17 = sub_1D42D5DA0(&qword_1EA6C9FD0);
    uint64_t v18 = (uint64_t)v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v27, 1, 3, v17);
LABEL_13:
    sub_1D42BEC64((uint64_t)v30);
    sub_1D43400E8(v18, v16);
    return sub_1D42BEC64((uint64_t)a1);
  }
  if (v13 == 117 && v14 == 0xE100000000000000 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_1D42D5DA0(&qword_1EA6C9FD0);
    uint64_t v18 = (uint64_t)v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v27, 2, 3, v19);
LABEL_12:
    uint64_t v16 = v11;
    goto LABEL_13;
  }
  if (v13 == 112 && v14 == 0xE100000000000000 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1D42E1A94((uint64_t)v30, v31);
    sub_1D42AADE4(&qword_1EA6C9FD8);
    sub_1D446A708();
    uint64_t v18 = (uint64_t)v27;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v27, v25, v26);
    uint64_t v21 = sub_1D42D5DA0(&qword_1EA6C9FD0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v18, 0, 3, v21);
    goto LABEL_12;
  }
  if (v13 == 108 && v14 == 0xE100000000000000 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_1D42D5DA0(&qword_1EA6C9FD0);
    uint64_t v18 = (uint64_t)v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v27, 3, 3, v22);
    goto LABEL_12;
  }
  unint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  sub_1D446A378();
  swift_bridgeObjectRelease();
  unint64_t v28 = 0xD000000000000015;
  unint64_t v29 = 0x80000001D4480260;
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1D446A488();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FMIPItemPairingState()
{
  uint64_t result = qword_1EA6C9FE8;
  if (!qword_1EA6C9FE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D43400E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPItemPairingState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FMIPItemPairingState.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1D4469688();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = type metadata accessor for FMIPItemPairingState();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1D42C26F4(a1, a1[3]);
  sub_1D446A8D8();
  sub_1D4340438(v3, (uint64_t)v11);
  uint64_t v12 = sub_1D42D5DA0(&qword_1EA6C9FD0);
  switch((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 3, v12))
  {
    case 1u:
    case 2u:
    case 3u:
      sub_1D42E1A94((uint64_t)v15, v16);
      sub_1D446A718();
      break;
    default:
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v11, v5);
      sub_1D42E1A94((uint64_t)v15, v16);
      sub_1D446A718();
      if (!v2)
      {
        sub_1D42E1A94((uint64_t)v15, v16);
        sub_1D42AADE4(&qword_1EA6C9FE0);
        sub_1D446A728();
      }
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
      break;
  }
  return sub_1D42BEC64((uint64_t)v15);
}

uint64_t sub_1D4340438(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPItemPairingState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t FMIPItemPairingState.description.getter()
{
  uint64_t v1 = type metadata accessor for FMIPItemPairingState();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4340438(v0, (uint64_t)v3);
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C9FD0);
  int v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 3, v4);
  unint64_t result = 0x6E776F6E6B6E75;
  switch(v5)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x6465726961706E75;
      break;
    case 3:
      uint64_t v8 = 1801678700;
      goto LABEL_5;
    default:
      uint64_t v7 = sub_1D4469688();
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v3, v7);
      uint64_t v8 = 1919508848;
LABEL_5:
      unint64_t result = v8 & 0xFFFF0000FFFFFFFFLL | 0x646500000000;
      break;
  }
  return result;
}

uint64_t sub_1D4340610@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPItemPairingState.init(from:)(a1, a2);
}

uint64_t sub_1D4340628(void *a1)
{
  return FMIPItemPairingState.encode(to:)(a1);
}

unint64_t sub_1D4340640(uint64_t a1)
{
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4340438(v1, (uint64_t)v3);
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C9FD0);
  int v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 3, v4);
  unint64_t result = 0x6E776F6E6B6E75;
  switch(v5)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x6465726961706E75;
      break;
    case 3:
      uint64_t v8 = 1801678700;
      goto LABEL_5;
    default:
      uint64_t v7 = sub_1D4469688();
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v3, v7);
      uint64_t v8 = 1919508848;
LABEL_5:
      unint64_t result = v8 & 0xFFFF0000FFFFFFFFLL | 0x646500000000;
      break;
  }
  return result;
}

uint64_t _s8FMIPCore20FMIPItemPairingStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469688();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMIPItemPairingState();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D42D5DA0(&qword_1EA6C9FF8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1D4340438(a1, (uint64_t)v14);
  sub_1D4340438(a2, v15);
  uint64_t v16 = sub_1D42D5DA0(&qword_1EA6C9FD0);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  switch(v17((uint64_t)v14, 3, v16))
  {
    case 1u:
      if (v17(v15, 3, v16) != 1) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 2u:
      if (v17(v15, 3, v16) != 2) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 3u:
      if (v17(v15, 3, v16) != 3) {
        goto LABEL_9;
      }
LABEL_5:
      sub_1D4341510((uint64_t)v14);
      char v18 = 1;
      break;
    default:
      sub_1D4340438((uint64_t)v14, (uint64_t)v10);
      if (v17(v15, 3, v16))
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_9:
        sub_1D4276C3C((uint64_t)v14, &qword_1EA6C9FF8);
        char v18 = 0;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
        char v18 = sub_1D4469658();
        uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
        v20(v7, v4);
        v20(v10, v4);
        sub_1D4341510((uint64_t)v14);
      }
      break;
  }
  return v18 & 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for FMIPItemPairingState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1D42D5DA0(&qword_1EA6C9FD0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_1D4469688();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for FMIPItemPairingState(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EA6C9FD0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 3, v2);
  if (!result)
  {
    uint64_t v4 = sub_1D4469688();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *initializeWithCopy for FMIPItemPairingState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D42D5DA0(&qword_1EA6C9FD0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1D4469688();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithCopy for FMIPItemPairingState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D42D5DA0(&qword_1EA6C9FD0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_1D4469688();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_1D4276C3C((uint64_t)a1, &qword_1EA6C9FD0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1D4469688();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

void *initializeWithTake for FMIPItemPairingState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D42D5DA0(&qword_1EA6C9FD0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1D4469688();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithTake for FMIPItemPairingState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D42D5DA0(&qword_1EA6C9FD0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_1D4469688();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_1D4276C3C((uint64_t)a1, &qword_1EA6C9FD0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_1D4469688();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPItemPairingState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D43412AC);
}

uint64_t sub_1D43412AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C9FD0);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4) {
    return v5 - 3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FMIPItemPairingState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D4341330);
}

uint64_t sub_1D4341330(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 3);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1D42D5DA0(&qword_1EA6C9FD0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1D43413B8(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EA6C9FD0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 3, v2);
}

uint64_t sub_1D4341424(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C9FD0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 3, v4);
}

uint64_t sub_1D4341498()
{
  uint64_t result = sub_1D4469688();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1D4341510(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPItemPairingState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D434156C(uint64_t a1)
{
  uint64_t v3 = sub_1D4469688();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v53 = (char *)v33 - v8;
  uint64_t v9 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v12)
  {
    v33[1] = v1;
    uint64_t v55 = MEMORY[0x1E4FBC860];
    int64_t v37 = v12;
    sub_1D433718C(0, v12, 0);
    uint64_t v36 = a1 + 32;
    uint64_t v51 = v4 + 16;
    uint64_t v40 = v55;
    uint64_t v14 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    uint64_t v43 = (void (**)(char *, char *, uint64_t))(v4 + 32);
    uint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
    uint64_t v34 = v4;
    uint64_t v15 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v48 = sub_1D42AAE28(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
    uint64_t v16 = 0;
    uint64_t v41 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    uint64_t v42 = v11;
    do
    {
      uint64_t v39 = v16;
      uint64_t v17 = *(void *)(v36 + 8 * v16);
      uint64_t v18 = *(void *)(v17 + 16);
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1D4469EF8();
      uint64_t v47 = v18;
      uint64_t v38 = v17;
      if (v18)
      {
        unint64_t v35 = (unint64_t)v14 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        uint64_t v20 = 0;
        uint64_t v46 = v17 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
        uint64_t v50 = *(void *)(v34 + 72);
        uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
        v52(v11, v46, v3);
        while (1)
        {
          uint64_t v45 = *v14;
          v45(v11, 0, 1, v3);
          if ((*v44)(v11, 1, v3) == 1) {
            break;
          }
          (*v43)(v53, v11, v3);
          swift_bridgeObjectRetain();
          uint64_t v23 = sub_1D4469AC8();
          uint64_t v24 = -1 << *(unsigned char *)(v19 + 32);
          unint64_t v25 = v23 & ~v24;
          uint64_t v26 = *(void *)(v19 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25;
          uint64_t v49 = v20;
          if (v26)
          {
            uint64_t v27 = ~v24;
            while (1)
            {
              v52(v7, *(void *)(v19 + 48) + v25 * v50, v3);
              sub_1D42AAE28(&qword_1EA6CA0E8, MEMORY[0x1E4F27990]);
              char v28 = sub_1D4469AF8();
              unint64_t v29 = *v15;
              (*v15)(v7, v3);
              if (v28) {
                break;
              }
              unint64_t v25 = (v25 + 1) & v27;
              if (((*(void *)(v19 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
                goto LABEL_5;
              }
            }
            swift_bridgeObjectRelease();
            v29(v53, v3);
          }
          else
          {
LABEL_5:
            swift_bridgeObjectRelease();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v22 = v53;
            v52(v7, (uint64_t)v53, v3);
            uint64_t v54 = v19;
            sub_1D434C030((uint64_t)v7, v25, isUniquelyReferenced_nonNull_native);
            uint64_t v19 = v54;
            swift_bridgeObjectRelease();
            (*v15)(v22, v3);
          }
          uint64_t v14 = v41;
          uint64_t v11 = v42;
          uint64_t v20 = v49 + 1;
          if (v49 + 1 == v47)
          {
            v45(v42, 1, 1, v3);
            break;
          }
          v52(v42, v46 + v50 * v20, v3);
        }
      }
      else
      {
        (*v14)(v11, 1, 1, v3);
      }
      swift_bridgeObjectRelease();
      uint64_t v30 = v40;
      uint64_t v55 = v40;
      unint64_t v32 = *(void *)(v40 + 16);
      unint64_t v31 = *(void *)(v40 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1D433718C(v31 > 1, v32 + 1, 1);
        uint64_t v30 = v55;
      }
      uint64_t v16 = v39 + 1;
      *(void *)(v30 + 16) = v32 + 1;
      uint64_t v40 = v30;
      *(void *)(v30 + 8 * v32 + 32) = v19;
    }
    while (v16 != v37);
    return v40;
  }
  return result;
}

void FMIPItemGroup.capabilities.getter(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FMIPItemGroup.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPItemGroup.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPItemGroup.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FMIPItemGroup.groupedItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FMIPItemGroup.groupedItemIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

void FMIPItemGroup.state.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 64);
}

uint64_t FMIPItemGroup.itemPairingStateMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FMIPItemGroup.lostMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMIPItemGroup();
  return sub_1D42A3A74(v1 + *(int *)(v3 + 48), a1, &qword_1EBD7E710);
}

unint64_t sub_1D4341B5C(char a1)
{
  unint64_t result = 0x696C696261706163;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0x6E6564496D657469;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x736D657469;
      break;
    case 6:
      unint64_t result = 0x49646570756F7267;
      break;
    case 7:
      unint64_t result = 1701667182;
      break;
    case 8:
      unint64_t result = 0x6574617473;
      break;
    case 9:
      unint64_t result = 0x6174654D74736F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D4341CBC(char a1)
{
  unint64_t result = 0x696C696261706163;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0x6E6564496D657469;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x736D657469;
      break;
    case 6:
      unint64_t result = 0x49646570756F7267;
      break;
    case 7:
      unint64_t result = 1701667182;
      break;
    case 8:
      unint64_t result = 0x6574617473;
      break;
    case 9:
      unint64_t result = 0x6174654D74736F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D4341E1C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1D4341B5C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1D4341B5C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D4341EA8()
{
  char v1 = *v0;
  sub_1D446A828();
  sub_1D4341B5C(v1);
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  return sub_1D446A888();
}

uint64_t sub_1D4341F0C()
{
  sub_1D4341B5C(*v0);
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4341F60()
{
  char v1 = *v0;
  sub_1D446A828();
  sub_1D4341B5C(v1);
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  return sub_1D446A888();
}

uint64_t sub_1D4341FC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43542E0();
  *a1 = result;
  return result;
}

unint64_t sub_1D4341FF0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1D4341B5C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1D434201C()
{
  return sub_1D4341CBC(*v0);
}

uint64_t sub_1D4342024@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43542E0();
  *a1 = result;
  return result;
}

void sub_1D434204C(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1D4342058(uint64_t a1)
{
  unint64_t v2 = sub_1D42AA628();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D4342094(uint64_t a1)
{
  unint64_t v2 = sub_1D42AA628();
  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL FMIPItemGroup.shouldShowPartPicker.getter()
{
  return *(void *)(*(void *)(v0 + 48) + 16) == 2 && *(void *)(*(void *)(v0 + 40) + 16) < 3uLL;
}

uint64_t static FMIPItemGroup.primaryPart(group:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EA6C9468);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v89 = (uint64_t)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v79 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v79 - v10;
  uint64_t v12 = type metadata accessor for FMIPItem();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v80 = (uint64_t)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v83 = (uint64_t)&v79 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v82 = (uint64_t)&v79 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v96 = (uint64_t)&v79 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v85 = (uint64_t)&v79 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v84 = (uint64_t)&v79 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v98 = (uint64_t)&v79 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v79 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v93 = (uint64_t)&v79 - v31;
  uint64_t v86 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v87 = v13 + 56;
  v86(a2, 1, 1, v12);
  uint64_t v32 = *(void *)(a1 + 56);
  uint64_t v88 = a1 + 56;
  uint64_t v33 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v34 = -1;
  if (v33 < 64) {
    uint64_t v34 = ~(-1 << v33);
  }
  unint64_t v35 = v34 & v32;
  int64_t v90 = (unint64_t)(v33 + 63) >> 6;
  uint64_t v94 = v13;
  uint64_t v95 = a1;
  swift_bridgeObjectRetain();
  int64_t v36 = 0;
  uint64_t v92 = v9;
  uint64_t v97 = v11;
  uint64_t v81 = a2;
  uint64_t v91 = v13 + 48;
  if (v35) {
    goto LABEL_8;
  }
LABEL_9:
  int64_t v39 = v36 + 1;
  if (__OFADD__(v36, 1))
  {
    __break(1u);
    goto LABEL_80;
  }
  if (v39 < v90)
  {
    unint64_t v40 = *(void *)(v88 + 8 * v39);
    int64_t v41 = v36 + 1;
    if (v40) {
      goto LABEL_22;
    }
    int64_t v41 = v36 + 2;
    if (v36 + 2 >= v90) {
      return swift_release();
    }
    unint64_t v40 = *(void *)(v88 + 8 * v41);
    if (v40) {
      goto LABEL_22;
    }
    int64_t v41 = v36 + 3;
    if (v36 + 3 >= v90) {
      return swift_release();
    }
    unint64_t v40 = *(void *)(v88 + 8 * v41);
    if (v40)
    {
LABEL_22:
      unint64_t v35 = (v40 - 1) & v40;
      int64_t v99 = v41;
      for (unint64_t i = __clz(__rbit64(v40)) + (v41 << 6); ; unint64_t i = v37 | (v36 << 6))
      {
        uint64_t v43 = v94;
        uint64_t v44 = v93;
        sub_1D42CA620(*(void *)(v95 + 48) + *(void *)(v94 + 72) * i, v93, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        sub_1D42CAA68(v44, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        sub_1D42A3A74(a2, (uint64_t)v11, (uint64_t *)&unk_1EA6C9468);
        uint64_t v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
        if (v45(v11, 1, v12) == 1)
        {
          sub_1D4276C3C((uint64_t)v11, (uint64_t *)&unk_1EA6C9468);
LABEL_25:
          sub_1D42A3A74(a2, (uint64_t)v9, (uint64_t *)&unk_1EA6C9468);
          if (v45(v9, 1, v12) != 1)
          {
            sub_1D42CAA68((uint64_t)v9, v96, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            uint64_t v52 = &v30[*(int *)(v12 + 64)];
            uint64_t v53 = *((void *)v52 + 1);
            int v54 = v52[32];
            uint64_t v55 = v82;
            sub_1D42CA620((uint64_t)v30, v82, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            if (!v53)
            {
              uint64_t v56 = (void *)(v55 + *(int *)(v12 + 56));
              if (*v56 == 1702060355 && v56[1] == 0xE400000000000000) {
                int v54 = 1;
              }
              else {
                int v54 = sub_1D446A758() & 1;
              }
            }
            sub_1D42CA828(v55, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            uint64_t v63 = v96 + *(int *)(v12 + 64);
            uint64_t v64 = *(void *)(v63 + 8);
            unsigned int v65 = *(unsigned __int8 *)(v63 + 32);
            uint64_t v66 = v83;
            sub_1D42CA620(v96, v83, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            if (v64)
            {
              uint64_t v67 = v66;
            }
            else
            {
              unint64_t v68 = (void *)(v66 + *(int *)(v12 + 56));
              if (*v68 == 1702060355 && v68[1] == 0xE400000000000000)
              {
                uint64_t v67 = v66;
                unsigned int v65 = 1;
              }
              else
              {
                char v69 = sub_1D446A758();
                uint64_t v67 = v83;
                unsigned int v65 = v69 & 1;
              }
            }
            a2 = v81;
            sub_1D42CA828(v67, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            uint64_t v70 = v65;
            uint64_t v9 = v92;
            switch(v70)
            {
              case 1:
                if (v54 == 1) {
                  goto LABEL_53;
                }
                goto LABEL_56;
              case 2:
              case 3:
                if ((v54 & 0xFE) == 2) {
                  goto LABEL_53;
                }
                goto LABEL_56;
              case 4:
                if (v54 != 4) {
                  goto LABEL_56;
                }
                goto LABEL_53;
              default:
                if (v54)
                {
LABEL_56:
                  sub_1D42CA828(v96, (uint64_t (*)(void))type metadata accessor for FMIPItem);
                  goto LABEL_76;
                }
LABEL_53:
                uint64_t v71 = *((void *)v52 + 1);
                uint64_t v72 = v52[32];
                uint64_t v73 = v80;
                sub_1D42CA620((uint64_t)v30, v80, (uint64_t (*)(void))type metadata accessor for FMIPItem);
                if (v71)
                {
                  sub_1D42CA828(v73, (uint64_t (*)(void))type metadata accessor for FMIPItem);
                  switch(v72)
                  {
                    case 2:
                      swift_bridgeObjectRelease();
                      sub_1D42CA828(v96, (uint64_t (*)(void))type metadata accessor for FMIPItem);
                      goto LABEL_6;
                    default:
                      goto LABEL_75;
                  }
                }
                uint64_t v74 = (void *)(v73 + *(int *)(v12 + 56));
                if (*v74 != 1702060355 || v74[1] != 0xE400000000000000) {
                  sub_1D446A758();
                }
                sub_1D42CA828(v73, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_75:
                char v75 = sub_1D446A758();
                swift_bridgeObjectRelease();
                sub_1D42CA828(v96, (uint64_t (*)(void))type metadata accessor for FMIPItem);
                if ((v75 & 1) == 0) {
                  goto LABEL_76;
                }
                goto LABEL_6;
            }
          }
          sub_1D4276C3C((uint64_t)v9, (uint64_t *)&unk_1EA6C9468);
LABEL_76:
          uint64_t v76 = v89;
          sub_1D42A3A74(a2, v89, (uint64_t *)&unk_1EA6C9468);
          unsigned int v77 = v45((char *)v76, 1, v12);
          sub_1D4276C3C(v76, (uint64_t *)&unk_1EA6C9468);
          if (v77 == 1)
          {
LABEL_6:
            sub_1D4276C3C(a2, (uint64_t *)&unk_1EA6C9468);
            sub_1D42CAA68((uint64_t)v30, a2, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            v86(a2, 0, 1, v12);
          }
          else
          {
            sub_1D42CA828((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          }
          uint64_t v11 = v97;
          int64_t v36 = v99;
          if (!v35) {
            goto LABEL_9;
          }
        }
        else
        {
          sub_1D42CAA68((uint64_t)v11, v98, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          uint64_t v46 = &v30[*(int *)(v12 + 64)];
          uint64_t v47 = *((void *)v46 + 1);
          int v48 = v46[32];
          uint64_t v49 = v84;
          sub_1D42CA620((uint64_t)v30, v84, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          if (!v47)
          {
            uint64_t v50 = (void *)(v49 + *(int *)(v12 + 56));
            if (*v50 == 1702060355 && v50[1] == 0xE400000000000000) {
              int v48 = 1;
            }
            else {
              int v48 = sub_1D446A758() & 1;
            }
          }
          sub_1D42CA828(v49, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          uint64_t v57 = v98 + *(int *)(v12 + 64);
          uint64_t v58 = *(void *)(v57 + 8);
          uint64_t v59 = *(char *)(v57 + 32);
          uint64_t v60 = v85;
          sub_1D42CA620(v98, v85, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          if (v58)
          {
            sub_1D42CA828(v60, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            float v61 = flt_1D44714C8[v59];
          }
          else
          {
            uint64_t v62 = (void *)(v60 + *(int *)(v12 + 56));
            if (*v62 == 1702060355 && v62[1] == 0xE400000000000000 || (sub_1D446A758() & 1) != 0)
            {
              sub_1D42CA828(v60, (uint64_t (*)(void))type metadata accessor for FMIPItem);
              float v61 = 2.0;
            }
            else
            {
              sub_1D42CA828(v60, (uint64_t (*)(void))type metadata accessor for FMIPItem);
              float v61 = 0.0;
            }
          }
          uint64_t v9 = v92;
          uint64_t v11 = v97;
          switch(v48)
          {
            case 1:
              sub_1D42CA828(v98, (uint64_t (*)(void))type metadata accessor for FMIPItem);
              if (v61 >= 2.0) {
                goto LABEL_25;
              }
              break;
            case 2:
            case 3:
              sub_1D42CA828(v98, (uint64_t (*)(void))type metadata accessor for FMIPItem);
              if (v61 >= 1.0) {
                goto LABEL_25;
              }
              break;
            case 4:
              sub_1D42CA828(v98, (uint64_t (*)(void))type metadata accessor for FMIPItem);
              if (v61 >= 3.0) {
                goto LABEL_25;
              }
              break;
            default:
              sub_1D42CA828(v98, (uint64_t (*)(void))type metadata accessor for FMIPItem);
              goto LABEL_25;
          }
          sub_1D4276C3C(a2, (uint64_t *)&unk_1EA6C9468);
          sub_1D42CAA68((uint64_t)v30, a2, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          v86(a2, 0, 1, v12);
          int64_t v36 = v99;
          if (!v35) {
            goto LABEL_9;
          }
        }
LABEL_8:
        unint64_t v37 = __clz(__rbit64(v35));
        v35 &= v35 - 1;
        int64_t v99 = v36;
      }
    }
    uint64_t v42 = v36 + 4;
    if (v36 + 4 < v90)
    {
      unint64_t v40 = *(void *)(v88 + 8 * v42);
      if (v40)
      {
        int64_t v41 = v36 + 4;
        goto LABEL_22;
      }
      while (1)
      {
        int64_t v41 = v42 + 1;
        if (__OFADD__(v42, 1)) {
          break;
        }
        if (v41 >= v90) {
          return swift_release();
        }
        unint64_t v40 = *(void *)(v88 + 8 * v41);
        ++v42;
        if (v40) {
          goto LABEL_22;
        }
      }
LABEL_80:
      __break(1u);
      JUMPOUT(0x1D4342D30);
    }
  }
  return swift_release();
}

uint64_t FMIPItemGroup.shouldDisplaySeparatedLocation.getter()
{
  uint64_t v1 = type metadata accessor for FMIPItemGroup();
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v4 = *(void *)(*(void *)(v0 + 40) + 16) >= 2uLL && *(void *)(*(void *)(v0 + 48) + 16) > 1uLL;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D4469928();
  sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
  sub_1D42CA620(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  uint64_t v6 = sub_1D44698F8();
  os_log_type_t v7 = sub_1D4469FF8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558531;
    uint64_t v24 = 1752392040;
    uint64_t v25 = v9;
    sub_1D446A188();
    *(_WORD *)(v8 + 12) = 2081;
    uint64_t v10 = *((void *)v3 + 1);
    unint64_t v11 = *((void *)v3 + 2);
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1D42CB9EC(v10, v11, &v25);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42CA828((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    *(_WORD *)(v8 + 22) = 1024;
    LODWORD(v24) = v4;
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v6, v7, "SeparatedLocations: id: %{private,mask.hash}s, result: %{BOOL}d.", (uint8_t *)v8, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v9, -1, -1);
    MEMORY[0x1D9447730](v8, -1, -1);
  }
  else
  {
    sub_1D42CA828((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  }

  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_sharedInstance);
  unsigned int v14 = objc_msgSend(v13, sel_isInternalBuild);

  if (v14)
  {
    id v15 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v16 = (void *)sub_1D4469B08();
    unsigned __int8 v17 = objc_msgSend(v15, sel_BOOLForKey_, v16);

    if (v17) {
      return 1;
    }
  }
  id v18 = objc_msgSend(v12, sel_sharedInstance);
  unsigned int v19 = objc_msgSend(v18, sel_isInternalBuild);

  if (v19)
  {
    id v20 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v21 = (void *)sub_1D4469B08();
    unsigned int v22 = objc_msgSend(v20, sel_BOOLForKey_, v21);

    return v4 & ~v22;
  }
  return v4;
}

void FMIPItemGroup.partsAtMultipleLocations.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    unint64_t v3 = 0;
    unint64_t v4 = *(void *)(v1 + 16);
    while (1)
    {
      unint64_t v5 = v3 + 1;
      if ((uint64_t)v3 < (uint64_t)(v4 - 1)) {
        break;
      }
LABEL_3:
      ++v3;
      if (v5 == v2) {
        return;
      }
    }
    unint64_t v6 = v3;
    while (v3 < v4)
    {
      uint64_t v7 = *(void *)(type metadata accessor for FMIPItem() - 8);
      uint64_t v8 = v1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      uint64_t v9 = *(void *)(v7 + 72);
      uint64_t v10 = *(void **)(v8 + v9 * v3 + 392);
      if (v10)
      {
        if (v5 >= v4) {
          goto LABEL_16;
        }
        unint64_t v11 = *(void **)(v8 + v9 * v5 + 392);
        if (v11)
        {
          id v12 = v10;
          id v13 = v11;
          objc_msgSend(v12, sel_distanceFromLocation_, v13);
          double v15 = v14;
          objc_msgSend(v12, sel_horizontalAccuracy);
          double v17 = v16;
          objc_msgSend(v13, sel_horizontalAccuracy);
          double v19 = v18;

          if (v15 / sqrt(v17 * v17 + v19 * v19 + 400.0) >= 1.5) {
            return;
          }
          unint64_t v4 = *(void *)(v1 + 16);
        }
      }
      if ((uint64_t)++v6 >= (uint64_t)(v4 - 1)) {
        goto LABEL_3;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
}

uint64_t sub_1D4343304@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  v354 = a2;
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7E710);
  MEMORY[0x1F4188790](v3 - 8);
  v338 = (uint64_t *)((char *)&v332 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  v364 = (char *)&v332 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  v353 = (char *)&v332 - v8;
  uint64_t v9 = type metadata accessor for FMIPItemPairingState();
  MEMORY[0x1F4188790](v9 - 8);
  v369 = (char *)&v332 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v375 = sub_1D4469688();
  uint64_t v355 = *(void *)(v375 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v375);
  int64_t v372 = (int64_t)&v332 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v345 = (char *)&v332 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  unint64_t v371 = (unint64_t)&v332 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v366 = (char *)&v332 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v365 = (uint64_t)&v332 - v20;
  MEMORY[0x1F4188790](v19);
  v373 = (char *)&v332 - v21;
  sub_1D42D5DA0(&qword_1EA6CA108);
  uint64_t inited = swift_initStackObject();
  long long v374 = xmmword_1D4471240;
  *(_OWORD *)(inited + 16) = xmmword_1D4471240;
  uint64_t v23 = (void *)*MEMORY[0x1E4F97D68];
  *(void *)(inited + 32) = *MEMORY[0x1E4F97D68];
  *(_OWORD *)(inited + 40) = xmmword_1D4471250;
  uint64_t v24 = (void *)*MEMORY[0x1E4F97D50];
  *(void *)(inited + 56) = *MEMORY[0x1E4F97D50];
  *(_OWORD *)(inited + 64) = xmmword_1D4471260;
  uint64_t v25 = (void *)*MEMORY[0x1E4F97D38];
  *(void *)(inited + 80) = *MEMORY[0x1E4F97D38];
  *(_OWORD *)(inited + 88) = xmmword_1D4471270;
  uint64_t v26 = (void *)*MEMORY[0x1E4F97D58];
  *(void *)(inited + 104) = *MEMORY[0x1E4F97D58];
  uint64_t v27 = (void **)MEMORY[0x1E4F97D60];
  *(_OWORD *)(inited + 112) = xmmword_1D4471280;
  uint64_t v28 = *v27;
  *(void *)(inited + 128) = *v27;
  *(_OWORD *)(inited + 136) = xmmword_1D4471290;
  id v29 = v23;
  id v30 = v24;
  id v31 = v25;
  id v32 = v26;
  id v33 = v28;
  uint64_t v34 = (uint64_t *)sub_1D43AA468(inited);
  sub_1D42D5DA0(&qword_1EA6CA110);
  uint64_t v35 = swift_initStackObject();
  *(_OWORD *)(v35 + 16) = v374;
  *(void *)(v35 + 32) = v31;
  *(void *)(v35 + 40) = 16;
  *(void *)(v35 + 48) = v29;
  *(void *)(v35 + 56) = 4;
  *(void *)(v35 + 64) = v30;
  *(void *)(v35 + 72) = 2;
  *(void *)(v35 + 80) = v32;
  *(void *)(v35 + 88) = 8;
  int64_t v36 = (void *)*MEMORY[0x1E4F97D70];
  *(void *)(v35 + 96) = *MEMORY[0x1E4F97D70];
  *(void *)(v35 + 104) = 128;
  unint64_t v37 = (unint64_t)v29;
  id v38 = v30;
  id v39 = v31;
  id v336 = v32;
  id v40 = v36;
  uint64_t v41 = v35;
  uint64_t v42 = a1;
  unint64_t v43 = sub_1D43AA578(v41);
  uint64_t v376 = a1;
  unint64_t v44 = 0;
  sub_1D43B3960(v43, (void (*)(void *__return_ptr))sub_1D435432C);
  uint64_t v46 = v45;
  swift_bridgeObjectRelease();
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_230;
  }
  while (1)
  {
    unint64_t v49 = v46[2];
    unint64_t v48 = v46[3];
    int64_t v50 = v48 >> 1;
    unint64_t v51 = v49 + 1;
    if (v48 >> 1 <= v49)
    {
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1D43AFFBC((void *)(v48 > 1), v49 + 1, 1, v46);
      uint64_t v46 = (void *)isUniquelyReferenced_nonNull_native;
      unint64_t v48 = *(void *)(isUniquelyReferenced_nonNull_native + 24);
      int64_t v50 = v48 >> 1;
    }
    v46[2] = v51;
    v46[v49 + 4] = 256;
    if (v50 < (uint64_t)(v49 + 2))
    {
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1D43AFFBC((void *)(v48 > 1), v49 + 2, 1, v46);
      uint64_t v46 = (void *)isUniquelyReferenced_nonNull_native;
    }
    v46[2] = v49 + 2;
    v337 = v46 + 4;
    v46[v51 + 4] = 512;
    MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
    *(&v332 - 2) = v42;
    sub_1D43B3CC0((uint64_t)v34, (void (*)(void *__return_ptr))sub_1D4354334);
    uint64_t v53 = v52;
    swift_bridgeObjectRelease();
    v380[0] = (uint64_t)&unk_1F2C01E18;
    sub_1D43AE948(v53);
    int v54 = (void *)v380[0];
    if (objc_msgSend((id)v42, sel_isConnected))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v54 = sub_1D43AFFB0(0, v54[2] + 1, 1, v54);
      }
      unint64_t v56 = v54[2];
      unint64_t v55 = v54[3];
      if (v56 >= v55 >> 1) {
        int v54 = sub_1D43AFFB0((void *)(v55 > 1), v56 + 1, 1, v54);
      }
      v54[2] = v56 + 1;
      uint64_t v57 = v54;
      v54[v56 + 4] = 64;
    }
    else
    {
      uint64_t v57 = v54;
    }
    id v58 = (id)v37;
    id v59 = objc_msgSend((id)v42, sel_taskInformation);
    type metadata accessor for SPBeaconTaskName(0);
    uint64_t v61 = v60;
    uint64_t v62 = sub_1D4275AD0(0, &qword_1EA6CA118);
    uint64_t v63 = sub_1D42AAE28((unint64_t *)&qword_1EA6C92C8, type metadata accessor for SPBeaconTaskName);
    uint64_t v341 = v62;
    uint64_t v342 = v61;
    uint64_t v340 = v63;
    uint64_t v64 = sub_1D4469A58();

    uint64_t v65 = *(void *)(v64 + 16);
    v339 = v46;
    id v335 = v58;
    if (!v65) {
      goto LABEL_23;
    }
    unint64_t v66 = sub_1D43AEF30((uint64_t)v58);
    if (v67)
    {
      id v68 = *(id *)(*(void *)(v64 + 56) + 8 * v66);

      swift_bridgeObjectRelease();
      id v69 = objc_msgSend(v68, sel_state);

      if (v69)
      {
        uint64_t v70 = v57;
        if (v69 == (id)1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v70 = sub_1D43AFFB0(0, v57[2] + 1, 1, v57);
          }
          unint64_t v79 = v70[2];
          unint64_t v78 = v70[3];
          if (v79 >= v78 >> 1) {
            uint64_t v70 = sub_1D43AFFB0((void *)(v78 > 1), v79 + 1, 1, v70);
          }
          v70[2] = v79 + 1;
          uint64_t v57 = v70;
          uint64_t v73 = &v70[v79];
          uint64_t v74 = 4;
        }
        else
        {
          if (v69 != (id)4) {
            goto LABEL_35;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v70 = sub_1D43AFFB0(0, v57[2] + 1, 1, v57);
          }
          unint64_t v72 = v70[2];
          unint64_t v71 = v70[3];
          if (v72 >= v71 >> 1) {
            uint64_t v70 = sub_1D43AFFB0((void *)(v71 > 1), v72 + 1, 1, v70);
          }
          v70[2] = v72 + 1;
          uint64_t v57 = v70;
          uint64_t v73 = &v70[v72];
          uint64_t v74 = 2048;
        }
      }
      else
      {
        char v75 = v57;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v75 = sub_1D43AFFB0(0, v57[2] + 1, 1, v57);
        }
        unint64_t v77 = v75[2];
        unint64_t v76 = v75[3];
        if (v77 >= v76 >> 1) {
          char v75 = sub_1D43AFFB0((void *)(v76 > 1), v77 + 1, 1, v75);
        }
        v75[2] = v77 + 1;
        uint64_t v57 = v75;
        uint64_t v73 = &v75[v77];
        uint64_t v74 = 2;
      }
      v73[4] = v74;
    }
    else
    {
LABEL_23:

      swift_bridgeObjectRelease();
    }
LABEL_35:
    id v80 = objc_msgSend((id)v42, sel_identifier);
    uint64_t v81 = v373;
    sub_1D4469668();

    uint64_t v82 = sub_1D4469638();
    uint64_t v84 = v83;
    uint64_t v85 = *(void (**)(char *, uint64_t))(v355 + 8);
    uint64_t v370 = v355 + 8;
    *(void *)&long long v374 = v85;
    v85(v81, v375);
    uint64_t v86 = v354;
    v354[1] = v82;
    v86[2] = v84;
    id v87 = objc_msgSend((id)v42, sel_name);
    uint64_t v88 = sub_1D4469B38();
    uint64_t v90 = v89;

    v86[3] = v88;
    v86[4] = v90;
    unint64_t v91 = MEMORY[0x1E4FBC860];
    unint64_t v37 = MEMORY[0x1E4FBC870];
    v86[5] = MEMORY[0x1E4FBC860];
    v86[6] = v37;
    id v92 = objc_msgSend((id)v42, sel_beaconMap);
    sub_1D4275AD0(0, &qword_1EA6CA120);
    uint64_t v93 = sub_1D4469A58();

    uint64_t v94 = sub_1D4350200(v93);
    swift_bridgeObjectRelease();
    v382[0] = v91;
    uint64_t v95 = swift_retain();
    sub_1D4345ED8(v95, v382);
    uint64_t v96 = sub_1D42D5DA0(&qword_1EA6C9FD0);
    uint64_t v97 = (uint64_t)v369;
    uint64_t v98 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v369, 3, 3, v96);
    MEMORY[0x1F4188790](v98);
    *(&v332 - 2) = v97;
    LOBYTE(v93) = sub_1D4346FE4((uint64_t (*)(char *))sub_1D435433C, (char)(&v332 - 4), v94);
    unint64_t v334 = v44;
    sub_1D42CA828(v97, (uint64_t (*)(void))type metadata accessor for FMIPItemPairingState);
    swift_release();
    if (v93)
    {
      int64_t v99 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int64_t v99 = sub_1D43AFFB0(0, v57[2] + 1, 1, v57);
      }
      unint64_t v101 = v99[2];
      unint64_t v100 = v99[3];
      if (v101 >= v100 >> 1) {
        int64_t v99 = sub_1D43AFFB0((void *)(v100 > 1), v101 + 1, 1, v99);
      }
      v99[2] = v101 + 1;
      v99[v101 + 4] = 0x2000;
    }
    else
    {
      int64_t v99 = v57;
    }
    unsigned int v102 = objc_msgSend((id)v42, sel_isPairingComplete);
    if (v102)
    {
      v343 = v99;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int64_t v99 = sub_1D43AFFB0(0, v99[2] + 1, 1, v99);
      }
      unint64_t v104 = v99[2];
      unint64_t v103 = v99[3];
      v343 = v99;
      if (v104 >= v103 >> 1) {
        v343 = sub_1D43AFFB0((void *)(v103 > 1), v104 + 1, 1, v343);
      }
      uint64_t v105 = v343;
      v343[2] = v104 + 1;
      v105[v104 + 4] = 0x8000;
    }
    v354[9] = v94;
    unint64_t v106 = v382[0];
    int64_t v107 = *(void *)(v382[0] + 16);
    uint64_t v108 = MEMORY[0x1E4FBC860];
    uint64_t v356 = v42;
    unint64_t v350 = v382[0];
    if (v107)
    {
      LODWORD(v363) = v102;
      v380[0] = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1D43371EC(0, v107, 0);
      uint64_t v108 = v380[0];
      uint64_t v109 = *(void *)(v355 + 16);
      unint64_t v367 = (*(unsigned __int8 *)(v355 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v355 + 80);
      uint64_t v368 = v109;
      unint64_t v110 = v106 + v367;
      uint64_t v111 = *(void *)(v355 + 72);
      v369 = (char *)(v355 + 16);
      uint64_t v112 = (void (**)(unint64_t, uint64_t, uint64_t))(v355 + 32);
      uint64_t v113 = v375;
      uint64_t v114 = v365;
      do
      {
        ((void (*)(uint64_t, unint64_t, uint64_t))v368)(v114, v110, v113);
        v380[0] = v108;
        unint64_t v116 = *(void *)(v108 + 16);
        unint64_t v115 = *(void *)(v108 + 24);
        if (v116 >= v115 >> 1)
        {
          sub_1D43371EC(v115 > 1, v116 + 1, 1);
          uint64_t v108 = v380[0];
        }
        *(void *)(v108 + 16) = v116 + 1;
        (*v112)(v108 + v367 + v116 * v111, v114, v113);
        v110 += v111;
        --v107;
      }
      while (v107);
      swift_bridgeObjectRelease();
      uint64_t v42 = v356;
      unint64_t v37 = MEMORY[0x1E4FBC870];
      LOBYTE(v102) = (_BYTE)v363;
    }
    uint64_t v358 = v108;
    unint64_t v381 = v37;
    int64_t v117 = v372;
    if (v102)
    {
      id v118 = objc_msgSend((id)v42, sel_multipartStatus);
      uint64_t v119 = sub_1D42D5DA0(&qword_1EA6C9EA0);
      uint64_t v120 = sub_1D435482C(&qword_1EA6CA0C8, &qword_1EA6C9EA0);
      unint64_t v44 = sub_1D4469ED8();

      uint64_t v121 = *(void *)(v44 + 16);
      swift_bridgeObjectRelease();
      unint64_t v333 = v119;
      if (v121)
      {
        id v122 = objc_msgSend((id)v42, sel_multipartStatus);
        uint64_t v123 = sub_1D4469ED8();

        int64_t v124 = *(void *)(v123 + 16);
        unint64_t v37 = v375;
        if (v124)
        {
          v380[0] = MEMORY[0x1E4FBC860];
          uint64_t v34 = v380;
          sub_1D433718C(0, v124, 0);
          uint64_t v125 = sub_1D4386D70(v123);
          uint64_t v46 = 0;
          int v128 = v127 & 1;
          uint64_t v348 = v123 + 56;
          uint64_t v349 = v120;
          uint64_t v368 = v355 + 32;
          v369 = (char *)(v355 + 16);
          uint64_t v365 = v355 + 56;
          *(void *)&long long v360 = v355 + 48;
          int64_t v346 = v124;
          uint64_t v347 = v123;
          while ((v125 & 0x8000000000000000) == 0 && v125 < 1 << *(unsigned char *)(v123 + 32))
          {
            if (((*(void *)(v348 + (((unint64_t)v125 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v125) & 1) == 0) {
              goto LABEL_226;
            }
            if (*(_DWORD *)(v123 + 36) != v126) {
              goto LABEL_227;
            }
            LODWORD(v351) = v128;
            uint64_t v352 = v126;
            v353 = (char *)v125;
            unint64_t v350 = (unint64_t)v46;
            unint64_t v129 = *(void *)(*(void *)(v123 + 48) + 8 * v125);
            uint64_t v46 = *(void **)(v129 + 16);
            unint64_t v367 = v129;
            if (v46)
            {
              uint64_t v377 = MEMORY[0x1E4FBC860];
              swift_bridgeObjectRetain();
              sub_1D43371EC(0, (int64_t)v46, 0);
              unint64_t v44 = v377;
              uint64_t v42 = sub_1D4386D70(v129);
              uint64_t v131 = v130;
              int v133 = v132 & 1;
              v366 = (char *)(v129 + 56);
              uint64_t v34 = (uint64_t *)v355;
              uint64_t v134 = v345;
              while ((v42 & 0x8000000000000000) == 0 && v42 < 1 << *(unsigned char *)(v129 + 32))
              {
                if (((*(void *)&v366[((unint64_t)v42 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v42) & 1) == 0) {
                  goto LABEL_220;
                }
                if (*(_DWORD *)(v129 + 36) != v131) {
                  goto LABEL_221;
                }
                LODWORD(v371) = v133;
                uint64_t v135 = *(void *)(v129 + 48);
                uint64_t v136 = v34[9];
                ((void (*)(char *, uint64_t, unint64_t))v34[2])(v134, v135 + v136 * v42, v37);
                unint64_t v137 = v44;
                uint64_t v377 = v44;
                unint64_t v139 = *(void *)(v44 + 16);
                unint64_t v138 = *(void *)(v44 + 24);
                if (v139 >= v138 >> 1)
                {
                  sub_1D43371EC(v138 > 1, v139 + 1, 1);
                  uint64_t v34 = (uint64_t *)v355;
                  unint64_t v137 = v377;
                }
                *(void *)(v137 + 16) = v139 + 1;
                unint64_t v44 = v137;
                ((void (*)(unint64_t, char *, unint64_t))v34[4])(v137+ ((*((unsigned __int8 *)v34 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v34 + 80))+ v139 * v136, v134, v37);
                unint64_t v129 = v367;
                uint64_t v140 = sub_1D4449D08(v42, v131, v371 & 1, v367);
                uint64_t v42 = v140;
                uint64_t v131 = v141;
                int v133 = v142 & 1;
                uint64_t v46 = (void *)((char *)v46 - 1);
                if (!v46)
                {
                  sub_1D4329478(v140, v141, v133);
                  int64_t v117 = v372;
                  goto LABEL_74;
                }
              }
              __break(1u);
LABEL_220:
              __break(1u);
LABEL_221:
              __break(1u);
              goto LABEL_222;
            }
            swift_bridgeObjectRetain();
            unint64_t v44 = MEMORY[0x1E4FBC860];
LABEL_74:
            unint64_t v357 = v44;
            v363 = (char *)sub_1D42AAE28(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
            uint64_t v143 = sub_1D4469EF8();
            uint64_t v362 = *(void *)(v357 + 16);
            if (v362)
            {
              unint64_t v344 = v365 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
              v144 = 0;
              v361 = (unsigned int (**)(char *, uint64_t, uint64_t))(v357
                                                                            + ((*(unsigned __int8 *)(v355 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v355 + 80)));
              unint64_t v371 = *(void *)(v355 + 72);
              v145 = *(void (**)(char *, unsigned int (**)(char *, uint64_t, uint64_t), unint64_t))(v355 + 16);
              v146 = v364;
              v145(v364, v361, v37);
              while (1)
              {
                v151 = *(void (**)(char *, uint64_t, uint64_t, unint64_t))v365;
                (*(void (**)(char *, void, uint64_t, unint64_t))v365)(v146, 0, 1, v37);
                if ((*(unsigned int (**)(char *, uint64_t, unint64_t))v360)(v146, 1, v37) == 1) {
                  break;
                }
                v359 = v151;
                v366 = v144;
                (*(void (**)(int64_t, char *, unint64_t))v368)(v117, v146, v37);
                swift_bridgeObjectRetain();
                uint64_t v152 = sub_1D4469AC8();
                uint64_t v153 = -1 << *(unsigned char *)(v143 + 32);
                unint64_t v154 = v152 & ~v153;
                if ((*(void *)(v143 + 56 + ((v154 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v154))
                {
                  uint64_t v155 = ~v153;
                  while (1)
                  {
                    v156 = v373;
                    uint64_t v157 = v375;
                    v145(v373, (unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v143 + 48) + v154 * v371), v375);
                    sub_1D42AAE28(&qword_1EA6CA0E8, MEMORY[0x1E4F27990]);
                    char v158 = sub_1D4469AF8();
                    ((void (*)(char *, uint64_t))v374)(v156, v157);
                    if (v158) {
                      break;
                    }
                    unint64_t v154 = (v154 + 1) & v155;
                    if (((*(void *)(v143 + 56 + ((v154 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v154) & 1) == 0) {
                      goto LABEL_76;
                    }
                  }
                  swift_bridgeObjectRelease();
                  unint64_t v150 = v375;
                  int64_t v149 = v372;
                }
                else
                {
LABEL_76:
                  swift_bridgeObjectRelease();
                  char v147 = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v148 = (uint64_t)v373;
                  int64_t v149 = v372;
                  unint64_t v150 = v375;
                  v145(v373, (unsigned int (**)(char *, uint64_t, uint64_t))v372, v375);
                  uint64_t v377 = v143;
                  sub_1D434C030(v148, v154, v147);
                  uint64_t v143 = v377;
                  swift_bridgeObjectRelease();
                }
                v144 = v366 + 1;
                ((void (*)(int64_t, unint64_t))v374)(v149, v150);
                unint64_t v37 = v150;
                v146 = v364;
                int64_t v117 = v149;
                if (v144 == (char *)v362)
                {
                  v359(v364, 1, 1, v150);
                  break;
                }
                v145(v364, (unsigned int (**)(char *, uint64_t, uint64_t))((char *)v361 + v371 * (void)v144), v150);
              }
            }
            else
            {
              (*(void (**)(char *, uint64_t, uint64_t, unint64_t))v365)(v364, 1, 1, v37);
            }
            unint64_t v159 = v350;
            v160 = (void *)v346;
            uint64_t v123 = v347;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v34 = (uint64_t *)v380[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1D433718C(0, v34[2] + 1, 1);
              uint64_t v34 = (uint64_t *)v380[0];
            }
            uint64_t v162 = v352;
            v161 = v353;
            char v163 = (char)v351;
            unint64_t v44 = v34[2];
            unint64_t v164 = v34[3];
            if (v44 >= v164 >> 1)
            {
              sub_1D433718C(v164 > 1, v44 + 1, 1);
              char v163 = (char)v351;
              uint64_t v162 = v352;
              v161 = v353;
              uint64_t v34 = (uint64_t *)v380[0];
            }
            uint64_t v46 = (void *)(v159 + 1);
            void v34[2] = v44 + 1;
            v34[v44 + 4] = v143;
            uint64_t v125 = sub_1D4449D08(v161, v162, v163 & 1, v123);
            int v128 = v165 & 1;
            unint64_t v37 = v375;
            uint64_t v42 = v356;
            int64_t v117 = v372;
            if (v46 == v160)
            {
              sub_1D4329478(v125, v126, v128);
              swift_bridgeObjectRelease();
              goto LABEL_120;
            }
          }
          goto LABEL_225;
        }
        swift_bridgeObjectRelease();
        uint64_t v34 = (uint64_t *)MEMORY[0x1E4FBC860];
LABEL_120:
        uint64_t v218 = sub_1D4351E70((uint64_t)v34);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v381 = v218;
        unint64_t v37 = v333;
        if (qword_1EBD80068 != -1) {
          swift_once();
        }
        uint64_t v219 = sub_1D4469928();
        sub_1D42D7FAC(v219, (uint64_t)qword_1EBD83228);
        v171 = sub_1D44698F8();
        os_log_type_t v211 = sub_1D446A038();
        if (os_log_type_enabled(v171, v211))
        {
          v212 = (uint8_t *)swift_slowAlloc();
          uint64_t v213 = swift_slowAlloc();
          v380[0] = v213;
          *(_DWORD *)v212 = 136315138;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          uint64_t v220 = sub_1D4469EE8();
          unint64_t v37 = v221;
          swift_bridgeObjectRelease();
          uint64_t v222 = v220;
          uint64_t v42 = v356;
          uint64_t v377 = sub_1D42CB9EC(v222, v37, v380);
          sub_1D446A188();
          swift_bridgeObjectRelease();
          v217 = "FMIPItemGroup: multipart status: %s";
LABEL_124:
          _os_log_impl(&dword_1D4271000, v171, v211, v217, v212, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D9447730](v213, -1, -1);
          v178 = v212;
LABEL_125:
          MEMORY[0x1D9447730](v178, -1, -1);
        }
      }
      else
      {
        uint64_t v349 = v120;
        unint64_t v179 = v350;
        int64_t v180 = *(void *)(v350 + 16);
        uint64_t v181 = MEMORY[0x1E4FBC860];
        uint64_t v182 = v375;
        if (v180)
        {
          v380[0] = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          sub_1D433718C(0, v180, 0);
          v183 = 0;
          v184 = *(void (**)(char *, char *, uint64_t))(v355 + 16);
          uint64_t v185 = *(unsigned __int8 *)(v355 + 80);
          uint64_t v186 = (v185 + 32) & ~v185;
          v364 = (char *)(v179 + v186);
          uint64_t v365 = v186;
          int64_t v372 = *(void *)(v355 + 72);
          uint64_t v362 = v185 | 7;
          v363 = (char *)(v372 + v186);
          uint64_t v368 = v355 + 56;
          v361 = (unsigned int (**)(char *, uint64_t, uint64_t))(v355 + 48);
          v351 = (void (**)(void))(v355 + 32);
          long long v360 = xmmword_1D446E050;
          v187 = (void (*)(unint64_t, uint64_t))v374;
          v188 = v353;
          unint64_t v367 = v180;
          do
          {
            v369 = v183;
            v189 = v366;
            v184(v366, &v364[v372 * (void)v183], v182);
            sub_1D42D5DA0(&qword_1EA6CA590);
            uint64_t v190 = swift_allocObject();
            *(_OWORD *)(v190 + 16) = v360;
            v191 = (char *)(v190 + v365);
            v184((char *)(v190 + v365), v189, v182);
            sub_1D42AAE28(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
            uint64_t v192 = v182;
            uint64_t v193 = sub_1D4469EF8();
            v184(v188, v191, v192);
            unint64_t v194 = *(void *)v368;
            (*(void (**)(char *, void, uint64_t, uint64_t))v368)(v188, 0, 1, v192);
            if ((*v361)(v188, 1, v192) == 1)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              unint64_t v357 = v194;
              v359 = (void (*)(char *, uint64_t, uint64_t, unint64_t))v190;
              unint64_t v195 = v371;
              (*v351)();
              swift_bridgeObjectRetain();
              uint64_t v196 = sub_1D4469AC8();
              uint64_t v197 = -1 << *(unsigned char *)(v193 + 32);
              unint64_t v198 = v196 & ~v197;
              if ((*(void *)(v193 + 56 + ((v198 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v198))
              {
                uint64_t v199 = ~v197;
                while (1)
                {
                  v200 = v373;
                  uint64_t v201 = v375;
                  v184(v373, (char *)(*(void *)(v193 + 48) + v198 * v372), v375);
                  sub_1D42AAE28(&qword_1EA6CA0E8, MEMORY[0x1E4F27990]);
                  char v202 = sub_1D4469AF8();
                  v203 = v200;
                  v187 = (void (*)(unint64_t, uint64_t))v374;
                  ((void (*)(char *, uint64_t))v374)(v203, v201);
                  if (v202) {
                    break;
                  }
                  unint64_t v198 = (v198 + 1) & v199;
                  unint64_t v195 = v371;
                  if (((*(void *)(v193 + 56 + ((v198 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v198) & 1) == 0) {
                    goto LABEL_106;
                  }
                }
                swift_bridgeObjectRelease();
                uint64_t v192 = v375;
                unint64_t v204 = v371;
              }
              else
              {
LABEL_106:
                swift_bridgeObjectRelease();
                LODWORD(v352) = swift_isUniquelyReferenced_nonNull_native();
                unint64_t v204 = v195;
                uint64_t v205 = (uint64_t)v373;
                uint64_t v192 = v375;
                v184(v373, (char *)v204, v375);
                uint64_t v377 = v193;
                sub_1D434C030(v205, v198, v352);
                uint64_t v193 = v377;
                swift_bridgeObjectRelease();
              }
              v187(v204, v192);
              v188 = v353;
              ((void (*)(char *, uint64_t, uint64_t, uint64_t))v357)(v353, 1, 1, v192);
              swift_bridgeObjectRelease();
            }
            v187((unint64_t)v366, v192);
            uint64_t v181 = v380[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1D433718C(0, *(void *)(v181 + 16) + 1, 1);
              uint64_t v181 = v380[0];
            }
            v206 = v369;
            unint64_t v208 = *(void *)(v181 + 16);
            unint64_t v207 = *(void *)(v181 + 24);
            if (v208 >= v207 >> 1)
            {
              sub_1D433718C(v207 > 1, v208 + 1, 1);
              uint64_t v181 = v380[0];
            }
            v183 = v206 + 1;
            *(void *)(v181 + 16) = v208 + 1;
            *(void *)(v181 + 8 * v208 + 32) = v193;
            uint64_t v182 = v375;
          }
          while (v183 != (char *)v367);
          swift_bridgeObjectRelease();
          uint64_t v42 = v356;
        }
        uint64_t v209 = sub_1D4351E70(v181);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v381 = v209;
        unint64_t v37 = v333;
        if (qword_1EBD80068 != -1) {
          swift_once();
        }
        uint64_t v210 = sub_1D4469928();
        sub_1D42D7FAC(v210, (uint64_t)qword_1EBD83228);
        v171 = sub_1D44698F8();
        os_log_type_t v211 = sub_1D446A038();
        if (os_log_type_enabled(v171, v211))
        {
          v212 = (uint8_t *)swift_slowAlloc();
          uint64_t v213 = swift_slowAlloc();
          v380[0] = v213;
          *(_DWORD *)v212 = 136315138;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          uint64_t v214 = sub_1D4469EE8();
          unint64_t v37 = v215;
          swift_bridgeObjectRelease();
          uint64_t v216 = v214;
          uint64_t v42 = v356;
          uint64_t v377 = sub_1D42CB9EC(v216, v37, v380);
          sub_1D446A188();
          swift_bridgeObjectRelease();
          v217 = "FMIPItemGroup: multipart status from SPD was empty. Showing all separated: %s";
          goto LABEL_124;
        }
      }
    }
    else
    {
      sub_1D42D5DA0(&qword_1EA6C9E98);
      uint64_t v166 = swift_initStackObject();
      *(_OWORD *)(v166 + 16) = xmmword_1D446E050;
      uint64_t v167 = swift_bridgeObjectRetain();
      uint64_t v168 = sub_1D4351BC8(v167);
      swift_bridgeObjectRelease();
      *(void *)(v166 + 32) = v168;
      uint64_t v169 = sub_1D435435C(v166);
      swift_setDeallocating();
      sub_1D42D5DA0(&qword_1EA6C9EA0);
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      unint64_t v381 = v169;
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v170 = sub_1D4469928();
      sub_1D42D7FAC(v170, (uint64_t)qword_1EBD83228);
      v171 = sub_1D44698F8();
      os_log_type_t v172 = sub_1D446A038();
      if (os_log_type_enabled(v171, v172))
      {
        v173 = (uint8_t *)swift_slowAlloc();
        uint64_t v174 = swift_slowAlloc();
        v380[0] = v174;
        *(_DWORD *)v173 = 136315138;
        unint64_t v37 = (unint64_t)(v173 + 12);
        swift_beginAccess();
        sub_1D435482C(&qword_1EA6CA0C8, &qword_1EA6C9EA0);
        swift_bridgeObjectRetain();
        uint64_t v175 = sub_1D4469EE8();
        unint64_t v177 = v176;
        uint64_t v42 = v356;
        swift_bridgeObjectRelease();
        uint64_t v377 = sub_1D42CB9EC(v175, v177, v380);
        sub_1D446A188();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D4271000, v171, v172, "FMIPItemGroup: BA pairing is incomplete. Showing parts all together: %s", v173, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v174, -1, -1);
        v178 = v173;
        goto LABEL_125;
      }
    }

    v223 = v339;
    id v224 = objc_msgSend(self, sel_sharedInstance);
    unsigned int v225 = objc_msgSend(v224, sel_isInternalBuild);

    if (!v225) {
      goto LABEL_178;
    }
    id v226 = objc_msgSend(self, sel_standardUserDefaults);
    v227 = (void *)sub_1D4469B08();
    unsigned int v228 = objc_msgSend(v226, sel_BOOLForKey_, v227);

    if (!v228) {
      goto LABEL_178;
    }
    uint64_t v229 = v358;
    v230 = *(char **)(v358 + 16);
    unint64_t v44 = v230 ? ((unint64_t)(v230 - 1) >> 1) + 1 : 0;
    v380[0] = MEMORY[0x1E4FBC860];
    sub_1D43371BC(0, v44, 0);
    uint64_t v34 = (uint64_t *)v380[0];
    if (!v230) {
      break;
    }
    uint64_t v42 = 0;
    unint64_t v231 = 0;
    v369 = (char *)((*(unsigned __int8 *)(v355 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v355 + 80));
    uint64_t v368 = (uint64_t)&v369[v229];
    unint64_t v371 = (unint64_t)v230;
    int64_t v372 = (unint64_t)(v230 + 1) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v232 = 2;
    v233 = v230;
    while (1)
    {
      uint64_t v46 = (uint64_t)v233 >= v232 ? (void *)v232 : v233;
      if (v372 == v231) {
        break;
      }
      if ((uint64_t)v233 >= (uint64_t)(v231 + 2)) {
        unint64_t v37 = v231 + 2;
      }
      else {
        unint64_t v37 = (unint64_t)v233;
      }
      if (v37 < v231) {
        goto LABEL_223;
      }
      unint64_t v234 = *(void *)(v358 + 16);
      if (v234 < v231 || v234 < v37) {
        goto LABEL_224;
      }
      sub_1D446A778();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v236 = swift_dynamicCastClass();
      if (!v236)
      {
        swift_bridgeObjectRelease();
        uint64_t v236 = MEMORY[0x1E4FBC860];
      }
      v237 = *(void **)(v236 + 16);
      swift_release();
      if ((void *)((char *)v46 + v42) == v237)
      {
        uint64_t v238 = swift_dynamicCastClass();
        if (!v238)
        {
          swift_bridgeObjectRelease();
          uint64_t v238 = MEMORY[0x1E4FBC860];
        }
      }
      else
      {
        uint64_t v241 = v358;
        swift_bridgeObjectRelease();
        uint64_t v238 = sub_1D4386100(v241, v368, v231, (2 * v37) | 1);
      }
      swift_bridgeObjectRelease();
      v380[0] = (uint64_t)v34;
      unint64_t v240 = v34[2];
      unint64_t v239 = v34[3];
      unint64_t v37 = v240 + 1;
      if (v240 >= v239 >> 1)
      {
        sub_1D43371BC(v239 > 1, v240 + 1, 1);
        uint64_t v34 = (uint64_t *)v380[0];
      }
      void v34[2] = v37;
      v34[v240 + 4] = v238;
      v232 += 2;
      v42 -= 2;
      v231 += 2;
      --v44;
      v233 = (void *)v371;
      if (!v44)
      {
        if (v231 >= v371)
        {
          uint64_t v42 = v356;
          goto LABEL_177;
        }
        uint64_t v46 = (void *)(v231 + 2);
        int64_t v372 = (int64_t)&v369[v358];
        unint64_t v37 = -(uint64_t)v231;
        while (1)
        {
          uint64_t v242 = (uint64_t)((uint64_t)v233 >= (uint64_t)v46 ? v46 : v233);
          if (v242 < (uint64_t)v46 - 2) {
            goto LABEL_228;
          }
          unint64_t v44 = v358;
          unint64_t v243 = *(void *)(v358 + 16);
          BOOL v244 = v243 < (unint64_t)v46 - 2 || (uint64_t)v243 < v242;
          if (v244) {
            goto LABEL_229;
          }
          sub_1D446A778();
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain_n();
          uint64_t v245 = swift_dynamicCastClass();
          if (!v245)
          {
            swift_bridgeObjectRelease();
            uint64_t v245 = MEMORY[0x1E4FBC860];
          }
          uint64_t v246 = *(void *)(v245 + 16);
          swift_release();
          if (v242 + v37 == v246)
          {
            unint64_t v44 = v358;
            uint64_t v247 = swift_dynamicCastClass();
            uint64_t v42 = v356;
            if (!v247)
            {
              swift_bridgeObjectRelease();
              uint64_t v247 = MEMORY[0x1E4FBC860];
            }
          }
          else
          {
            unint64_t v44 = v358;
            swift_bridgeObjectRelease();
            uint64_t v247 = sub_1D4386100(v44, v372, (uint64_t)v46 - 2, (2 * v242) | 1);
            uint64_t v42 = v356;
          }
          swift_bridgeObjectRelease();
          v380[0] = (uint64_t)v34;
          unint64_t v249 = v34[2];
          unint64_t v248 = v34[3];
          if (v249 >= v248 >> 1)
          {
            sub_1D43371BC(v248 > 1, v249 + 1, 1);
            uint64_t v34 = (uint64_t *)v380[0];
          }
          void v34[2] = v249 + 1;
          v34[v249 + 4] = v247;
          v37 -= 2;
          BOOL v244 = (uint64_t)v46 < (uint64_t)v233;
          uint64_t v46 = (void *)((char *)v46 + 2);
          if (!v244) {
            goto LABEL_177;
          }
        }
      }
    }
LABEL_222:
    __break(1u);
LABEL_223:
    __break(1u);
LABEL_224:
    __break(1u);
LABEL_225:
    __break(1u);
LABEL_226:
    __break(1u);
LABEL_227:
    __break(1u);
LABEL_228:
    __break(1u);
LABEL_229:
    __break(1u);
LABEL_230:
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1D43AFFBC(0, v46[2] + 1, 1, v46);
    uint64_t v46 = (void *)isUniquelyReferenced_nonNull_native;
  }
LABEL_177:
  uint64_t v250 = sub_1D434156C((uint64_t)v34);
  swift_release();
  uint64_t v251 = sub_1D4351E70(v250);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  unint64_t v381 = v251;
  swift_bridgeObjectRelease();
  v223 = v339;
LABEL_178:
  uint64_t v252 = type metadata accessor for FMIPItemGroup();
  v253 = v354;
  *(void *)((char *)v354 + *(int *)(v252 + 52)) = v358;
  swift_beginAccess();
  v253[7] = v381;
  uint64_t v254 = v223[2];
  if (v254)
  {
    uint64_t v255 = 0;
    v256 = v337;
    v257 = v338;
    v258 = v343;
    do
    {
      uint64_t v260 = *v256++;
      uint64_t v259 = v260;
      if ((v260 & ~v255) == 0) {
        uint64_t v259 = 0;
      }
      v255 |= v259;
      --v254;
    }
    while (v254);
  }
  else
  {
    uint64_t v255 = 0;
    v257 = v338;
    v258 = v343;
  }
  void *v354 = v255;
  swift_bridgeObjectRetain();
  id v261 = objc_msgSend((id)v42, sel_lostModeInfo);
  if (v261)
  {
    id v262 = v261;
    FMIPItemLostModeMetadata.init(lostModeInfo:)(v262, v257);
    uint64_t v263 = type metadata accessor for FMIPItemLostModeMetadata();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v263 - 8) + 56))(v257, 0, 1, v263);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v264 = type metadata accessor for FMIPItemLostModeMetadata();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v264 - 8) + 56))(v257, 1, 1, v264);
    swift_bridgeObjectRelease();
  }
  sub_1D43479F8((uint64_t)v257, (uint64_t)v354 + *(int *)(v252 + 48));
  uint64_t v265 = v258[2];
  if (v265)
  {
    uint64_t v266 = 0;
    v267 = v258 + 4;
    do
    {
      uint64_t v269 = *v267++;
      uint64_t v268 = v269;
      if ((v269 & ~v266) == 0) {
        uint64_t v268 = 0;
      }
      v266 |= v268;
      --v265;
    }
    while (v265);
  }
  else
  {
    uint64_t v266 = 0;
  }
  swift_bridgeObjectRelease();
  v354[8] = v266;
  int v270 = FMIPItemGroup.shouldDisplaySeparatedLocation.getter();
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v271 = sub_1D4469928();
  sub_1D42D7FAC(v271, (uint64_t)qword_1EBD83228);
  id v272 = (id)v42;
  v273 = sub_1D44698F8();
  int v274 = sub_1D446A038();
  if (os_log_type_enabled(v273, (os_log_type_t)v274))
  {
    LODWORD(v368) = v270;
    uint64_t v275 = swift_slowAlloc();
    v369 = (char *)swift_slowAlloc();
    v379 = v369;
    *(_DWORD *)uint64_t v275 = 136317442;
    id v276 = objc_msgSend(v272, sel_name);
    uint64_t v277 = sub_1D4469B38();
    unint64_t v279 = v278;

    uint64_t v378 = sub_1D42CB9EC(v277, v279, (uint64_t *)&v379);
    sub_1D446A188();

    swift_bridgeObjectRelease();
    *(_WORD *)(v275 + 12) = 2080;
    id v280 = v335;
    id v281 = objc_msgSend(v272, sel_taskInformation);
    uint64_t v282 = sub_1D4469A58();

    uint64_t v283 = *(void *)(v282 + 16);
    int64_t v372 = (int64_t)v273;
    LODWORD(v371) = v274;
    if (v283 && (unint64_t v284 = sub_1D43AEF30((uint64_t)v280), (v285 & 1) != 0))
    {
      v286 = *(void **)(*(void *)(v282 + 56) + 8 * v284);
      id v287 = v286;
    }
    else
    {
      v286 = 0;
    }

    swift_bridgeObjectRelease();
    uint64_t v378 = (uint64_t)v286;
    sub_1D42D5DA0(&qword_1EA6CA128);
    uint64_t v288 = sub_1D4469B68();
    uint64_t v378 = sub_1D42CB9EC(v288, v289, (uint64_t *)&v379);
    sub_1D446A188();

    swift_bridgeObjectRelease();
    *(_WORD *)(v275 + 22) = 2080;
    id v290 = objc_msgSend(v272, sel_name);
    uint64_t v291 = sub_1D4469B38();
    unint64_t v293 = v292;

    uint64_t v378 = sub_1D42CB9EC(v291, v293, (uint64_t *)&v379);
    sub_1D446A188();

    swift_bridgeObjectRelease();
    *(_WORD *)(v275 + 32) = 2080;
    id v294 = (id)*MEMORY[0x1E4F97D88];
    id v295 = objc_msgSend(v272, sel_taskInformation);
    uint64_t v296 = sub_1D4469A58();

    if (*(void *)(v296 + 16) && (unint64_t v297 = sub_1D43AEF30((uint64_t)v294), (v298 & 1) != 0))
    {
      v299 = *(void **)(*(void *)(v296 + 56) + 8 * v297);
      id v300 = v299;
    }
    else
    {
      v299 = 0;
    }

    swift_bridgeObjectRelease();
    uint64_t v378 = (uint64_t)v299;
    uint64_t v301 = sub_1D4469B68();
    uint64_t v378 = sub_1D42CB9EC(v301, v302, (uint64_t *)&v379);
    sub_1D446A188();

    swift_bridgeObjectRelease();
    *(_WORD *)(v275 + 42) = 2080;
    id v303 = objc_msgSend(v272, sel_name);
    uint64_t v304 = sub_1D4469B38();
    unint64_t v306 = v305;

    uint64_t v378 = sub_1D42CB9EC(v304, v306, (uint64_t *)&v379);
    sub_1D446A188();

    swift_bridgeObjectRelease();
    *(_WORD *)(v275 + 52) = 2080;
    id v307 = v336;
    id v308 = objc_msgSend(v272, sel_taskInformation);
    uint64_t v309 = sub_1D4469A58();

    if (*(void *)(v309 + 16) && (unint64_t v310 = sub_1D43AEF30((uint64_t)v307), (v311 & 1) != 0))
    {
      v312 = *(void **)(*(void *)(v309 + 56) + 8 * v310);
      id v313 = v312;
    }
    else
    {
      v312 = 0;
    }

    swift_bridgeObjectRelease();
    uint64_t v378 = (uint64_t)v312;
    uint64_t v314 = sub_1D4469B68();
    uint64_t v378 = sub_1D42CB9EC(v314, v315, (uint64_t *)&v379);
    sub_1D446A188();

    swift_bridgeObjectRelease();
    *(_WORD *)(v275 + 62) = 1024;
    LODWORD(v378) = v368 & 1;
    sub_1D446A188();
    *(_WORD *)(v275 + 68) = 2080;
    unsigned int v316 = objc_msgSend(v272, sel_isConnected);
    BOOL v317 = v316 == 0;
    if (v316) {
      uint64_t v318 = 0;
    }
    else {
      uint64_t v318 = 7630702;
    }
    if (v317) {
      unint64_t v319 = 0xE300000000000000;
    }
    else {
      unint64_t v319 = 0xE000000000000000;
    }
    uint64_t v378 = sub_1D42CB9EC(v318, v319, (uint64_t *)&v379);
    sub_1D446A188();

    swift_bridgeObjectRelease();
    *(_WORD *)(v275 + 78) = 2080;
    id v320 = objc_msgSend(v272, sel_name);
    uint64_t v321 = sub_1D4469B38();
    unint64_t v323 = v322;

    uint64_t v378 = sub_1D42CB9EC(v321, v323, (uint64_t *)&v379);
    sub_1D446A188();

    swift_bridgeObjectRelease();
    *(_WORD *)(v275 + 88) = 2080;
    id v324 = objc_msgSend(v272, sel_identifier);
    v325 = v373;
    sub_1D4469668();

    uint64_t v326 = sub_1D4469638();
    unint64_t v328 = v327;
    ((void (*)(char *, uint64_t))v374)(v325, v375);
    uint64_t v378 = sub_1D42CB9EC(v326, v328, (uint64_t *)&v379);
    sub_1D446A188();

    swift_bridgeObjectRelease();
    os_log_t v329 = (os_log_t)v372;
    _os_log_impl(&dword_1D4271000, (os_log_t)v372, (os_log_type_t)v371, "FMIPItemGroup: %s taskInfo -> play sound %s\nFMIPItemGroup: %s taskInfo -> stop sound %s\nFMIPItemGroup: %s taskInfo -> notify when found active %s\nshowSeparated: %{BOOL}d,\n☎︎ FMIPItemGroup: beacon is %s connected, '%s': %s", (uint8_t *)v275, 0x62u);
    v330 = v369;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v330, -1, -1);
    MEMORY[0x1D9447730](v275, -1, -1);
  }
  else
  {
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4345C70@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a2;
  id v7 = a1;
  id v8 = objc_msgSend(a3, sel_taskInformation);
  type metadata accessor for SPBeaconTaskName(0);
  sub_1D4275AD0(0, &qword_1EA6CA118);
  sub_1D42AAE28((unint64_t *)&qword_1EA6C92C8, type metadata accessor for SPBeaconTaskName);
  uint64_t v9 = sub_1D4469A58();

  if (*(void *)(v9 + 16))
  {
    sub_1D43AEF30((uint64_t)v7);
    if (v10) {
      uint64_t v11 = v6;
    }
    else {
      uint64_t v11 = 0;
    }
    char v12 = v10 ^ 1;
  }
  else
  {
    uint64_t v11 = 0;
    char v12 = 1;
  }

  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a4 = v11;
  *(unsigned char *)(a4 + 8) = v12 & 1;
  return result;
}

void sub_1D4345D84(void *a1@<X0>, id a2@<X1>, uint64_t *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *a3;
  id v9 = a1;
  id v10 = objc_msgSend(a4, sel_taskInformation);
  type metadata accessor for SPBeaconTaskName(0);
  sub_1D4275AD0(0, &qword_1EA6CA118);
  sub_1D42AAE28((unint64_t *)&qword_1EA6C92C8, type metadata accessor for SPBeaconTaskName);
  uint64_t v11 = sub_1D4469A58();

  if (!*(void *)(v11 + 16) || (unint64_t v12 = sub_1D43AEF30((uint64_t)v9), (v13 & 1) == 0))
  {

    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  id v14 = *(id *)(*(void *)(v11 + 56) + 8 * v12);

  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v14, sel_state);

  if (v15 != a2)
  {
LABEL_6:
    uint64_t v8 = 0;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
LABEL_7:
  *(void *)a5 = v8;
  *(unsigned char *)(a5 + 8) = v16;
}

uint64_t sub_1D4345ED8(uint64_t a1, unint64_t *a2)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_1D4469688();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  unint64_t v51 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  int64_t v50 = (char *)v41 - v7;
  uint64_t v8 = type metadata accessor for FMIPItemPairingState();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8 - 8);
  unint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  id v15 = (char *)v41 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v52 = (uint64_t)v41 - v16;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v47 = a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v48 = (unint64_t)(v18 + 63) >> 6;
  unint64_t v49 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  uint64_t v44 = v4;
  v41[1] = v4 + 8;
  uint64_t v42 = (void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v22 = 0;
  uint64_t v23 = a1;
  uint64_t v45 = a1;
  uint64_t v43 = v9;
  while (1)
  {
    if (v20)
    {
      unint64_t v24 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v25 = v24 | (v22 << 6);
      goto LABEL_24;
    }
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v26 >= v48) {
      return swift_release();
    }
    unint64_t v27 = *(void *)(v47 + 8 * v26);
    ++v22;
    if (!v27)
    {
      int64_t v22 = v26 + 1;
      if (v26 + 1 >= v48) {
        return swift_release();
      }
      unint64_t v27 = *(void *)(v47 + 8 * v22);
      if (!v27)
      {
        int64_t v22 = v26 + 2;
        if (v26 + 2 >= v48) {
          return swift_release();
        }
        unint64_t v27 = *(void *)(v47 + 8 * v22);
        if (!v27)
        {
          int64_t v22 = v26 + 3;
          if (v26 + 3 >= v48) {
            return swift_release();
          }
          unint64_t v27 = *(void *)(v47 + 8 * v22);
          if (!v27) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v20 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v22 << 6);
LABEL_24:
    uint64_t v29 = v52;
    sub_1D42CA620(*(void *)(v23 + 56) + *(void *)(v9 + 72) * v25, v52, (uint64_t (*)(void))type metadata accessor for FMIPItemPairingState);
    sub_1D42CAA68(v29, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMIPItemPairingState);
    sub_1D42CA620((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPItemPairingState);
    uint64_t v30 = sub_1D42D5DA0(&qword_1EA6C9FD0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v12, 3, v30))
    {
      sub_1D42CA828((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPItemPairingState);
    }
    else
    {
      id v31 = v50;
      id v32 = *v49;
      (*v49)(v50, v12, v3);
      uint64_t v33 = v3;
      (*v42)(v51, v31, v3);
      uint64_t v34 = v46;
      unint64_t v35 = *v46;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v34 = v35;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v35 = sub_1D43B00D4(0, *(void *)(v35 + 16) + 1, 1, v35);
        *uint64_t v46 = v35;
      }
      unint64_t v38 = *(void *)(v35 + 16);
      unint64_t v37 = *(void *)(v35 + 24);
      if (v38 >= v37 >> 1)
      {
        unint64_t v35 = sub_1D43B00D4(v37 > 1, v38 + 1, 1, v35);
        *uint64_t v46 = v35;
      }
      *(void *)(v35 + 16) = v38 + 1;
      uint64_t v39 = v44;
      unint64_t v40 = v35
          + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))
          + *(void *)(v44 + 72) * v38;
      uint64_t v3 = v33;
      v32((char *)v40, v51, v33);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v50, v33);
      uint64_t v23 = v45;
      uint64_t v9 = v43;
    }
    uint64_t result = sub_1D42CA828((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMIPItemPairingState);
  }
  int64_t v28 = v26 + 4;
  if (v28 >= v48) {
    return swift_release();
  }
  unint64_t v27 = *(void *)(v47 + 8 * v28);
  if (v27)
  {
    int64_t v22 = v28;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v22 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v22 >= v48) {
      return swift_release();
    }
    unint64_t v27 = *(void *)(v47 + 8 * v22);
    ++v28;
    if (v27) {
      goto LABEL_23;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t FMIPItemGroup.init(itemGroup:items:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7E710);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for FMIPItemGroup();
  uint64_t v10 = *(uint64_t *)((char *)a1 + *(int *)(v9 + 52));
  uint64_t v11 = a1[7];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1D43527EC(a2, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1D435262C(v11, v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1D4351F50(v13);
  swift_bridgeObjectRelease();
  uint64_t v16 = a1[2];
  uint64_t v15 = a1[3];
  uint64_t v17 = *a1;
  a3[1] = a1[1];
  a3[2] = v16;
  *(void *)((char *)a3 + *(int *)(v9 + 52)) = v10;
  uint64_t v18 = a1[4];
  a3[3] = v15;
  a3[4] = v18;
  a3[5] = v12;
  a3[6] = v14;
  uint64_t v19 = a1[9];
  a3[8] = a1[8];
  a3[9] = v19;
  a3[7] = v11;
  *a3 = v17;
  sub_1D42A3A74((uint64_t)a1 + *(int *)(v9 + 48), (uint64_t)v8, &qword_1EBD7E710);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D42CA828((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  return sub_1D43479F8((uint64_t)v8, (uint64_t)a3 + *(int *)(v9 + 48));
}

uint64_t FMIPItemGroup.init(itemGroup:connected:)@<X0>(void *a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7E710);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v19 = (uint64_t)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[8];
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  if (!(a2 & 1 | ((v8 & 0x40) == 0))) {
    v8 &= ~0x40uLL;
  }
  uint64_t v18 = v8;
  a3[1] = v9;
  a3[2] = v10;
  uint64_t v11 = type metadata accessor for FMIPItemGroup();
  *(void *)((char *)a3 + *(int *)(v11 + 52)) = *(void *)((char *)a1 + *(int *)(v11 + 52));
  uint64_t v12 = a1[6];
  uint64_t v13 = a1[7];
  uint64_t v14 = a1[4];
  a3[3] = a1[3];
  a3[4] = v14;
  a3[5] = a1[5];
  a3[6] = v12;
  uint64_t v15 = a1[9];
  a3[7] = v13;
  uint64_t v16 = v19;
  a3[8] = v18;
  a3[9] = v15;
  *a3 = *a1;
  sub_1D42A3A74((uint64_t)a1 + *(int *)(v11 + 48), v16, &qword_1EBD7E710);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D42CA828((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  return sub_1D43479F8(v19, (uint64_t)a3 + *(int *)(v11 + 48));
}

uint64_t FMIPItemGroup.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA070);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42AA628();
  sub_1D446A8E8();
  uint64_t v11 = *v3;
  HIBYTE(v10) = 0;
  sub_1D4352D90();
  sub_1D446A698();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_1D446A658();
    LOBYTE(v11) = 7;
    sub_1D446A658();
    uint64_t v11 = v3[5];
    HIBYTE(v10) = 5;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6CA520);
    sub_1D4352DE4();
    sub_1D446A698();
    uint64_t v11 = v3[6];
    HIBYTE(v10) = 6;
    sub_1D42D5DA0(&qword_1EA6CA050);
    sub_1D4352FD0(&qword_1EA6CA088, &qword_1EA6CA050, (void (*)(void))sub_1D4352E88);
    sub_1D446A698();
    uint64_t v11 = *(uint64_t *)((char *)v3 + *(int *)(type metadata accessor for FMIPItemGroup() + 52));
    HIBYTE(v10) = 2;
    sub_1D42D5DA0(&qword_1EA6C9EB0);
    sub_1D4352F2C();
    sub_1D446A698();
    uint64_t v11 = v3[7];
    HIBYTE(v10) = 3;
    sub_1D42D5DA0(&qword_1EA6CA018);
    sub_1D4352FD0(&qword_1EA6CA098, &qword_1EA6CA018, (void (*)(void))sub_1D435303C);
    sub_1D446A698();
    uint64_t v11 = v3[9];
    HIBYTE(v10) = 4;
    sub_1D42D5DA0(&qword_1EA6CA030);
    sub_1D43530E0();
    sub_1D446A698();
    LOBYTE(v11) = 8;
    sub_1D446A688();
    LOBYTE(v11) = 9;
    sub_1D42D5DA0(&qword_1EBD7E710);
    sub_1D435318C();
    sub_1D446A698();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FMIPItemGroup.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPItem();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + 40);
  int64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    uint64_t v19 = v0;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1D4337070(0, v7, 0);
    uint64_t v9 = *(unsigned __int8 *)(v3 + 80);
    v18[1] = v6;
    uint64_t v10 = v6 + ((v9 + 32) & ~v9);
    uint64_t v11 = *(void *)(v3 + 72);
    uint64_t v8 = v21;
    do
    {
      sub_1D42CA620(v10, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v12 = *((void *)v5 + 44);
      uint64_t v13 = *((void *)v5 + 45);
      swift_bridgeObjectRetain();
      sub_1D42CA828((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D4337070(0, *(void *)(v8 + 16) + 1, 1);
        uint64_t v8 = v21;
      }
      unint64_t v15 = *(void *)(v8 + 16);
      unint64_t v14 = *(void *)(v8 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1D4337070(v14 > 1, v15 + 1, 1);
        uint64_t v8 = v21;
      }
      *(void *)(v8 + 16) = v15 + 1;
      uint64_t v16 = v8 + 16 * v15;
      *(void *)(v16 + 32) = v12;
      *(void *)(v16 + 40) = v13;
      v10 += v11;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v1 = v19;
  }
  uint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  sub_1D446A378();
  sub_1D4469C08();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  MEMORY[0x1D94460F0](v8, MEMORY[0x1E4FBB1A0]);
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D42D5DA0(&qword_1EA6C9EA0);
  sub_1D435482C(&qword_1EA6CA0C8, &qword_1EA6C9EA0);
  sub_1D4469EE8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  type metadata accessor for FMIPItemPairingState();
  swift_bridgeObjectRetain();
  sub_1D4469A68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v20 = *(void *)(v1 + 64);
  sub_1D446A458();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469EE8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  return v21;
}

uint64_t sub_1D4346FC8(void *a1)
{
  return FMIPItemGroup.encode(to:)(a1);
}

uint64_t sub_1D4346FE4(uint64_t (*a1)(char *), char a2, uint64_t a3)
{
  unint64_t v27 = a1;
  uint64_t v6 = type metadata accessor for FMIPItemPairingState();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = *(void *)(a3 + 64);
  uint64_t v25 = a3 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v26 = (unint64_t)(v14 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  while (v16)
  {
    unint64_t v19 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v20 = v19 | (v18 << 6);
LABEL_19:
    sub_1D42CA620(*(void *)(a3 + 56) + *(void *)(v7 + 72) * v20, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPItemPairingState);
    sub_1D42CAA68((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPItemPairingState);
    char v24 = v27(v10);
    uint64_t result = sub_1D42CA828((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPItemPairingState);
    if (v3) {
      goto LABEL_28;
    }
    if (v24)
    {
      a2 = 1;
LABEL_28:
      swift_release();
      return a2 & 1;
    }
  }
  if (__OFADD__(v18++, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v18 >= v26) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v18);
  if (v22)
  {
LABEL_18:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
    goto LABEL_19;
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v26) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 2;
  if (v18 + 2 >= v26) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 3;
  if (v18 + 3 >= v26) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 4;
  if (v18 + 4 >= v26)
  {
LABEL_27:
    a2 = 0;
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
LABEL_17:
    int64_t v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v26) {
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_18;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D43472B4(uint64_t (*a1)(char *), char a2, uint64_t a3)
{
  unint64_t v27 = a1;
  uint64_t v6 = type metadata accessor for FMIPItem();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v25 = a3 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v26 = (unint64_t)(v14 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  while (v16)
  {
    unint64_t v19 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v20 = v19 | (v18 << 6);
LABEL_19:
    sub_1D42CA620(*(void *)(a3 + 48) + *(void *)(v7 + 72) * v20, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CAA68((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    char v24 = v27(v10);
    uint64_t result = sub_1D42CA828((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    if (v3) {
      goto LABEL_28;
    }
    if (v24)
    {
      a2 = 1;
LABEL_28:
      swift_release();
      return a2 & 1;
    }
  }
  if (__OFADD__(v18++, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v18 >= v26) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v18);
  if (v22)
  {
LABEL_18:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
    goto LABEL_19;
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v26) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 2;
  if (v18 + 2 >= v26) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 3;
  if (v18 + 3 >= v26) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 4;
  if (v18 + 4 >= v26)
  {
LABEL_27:
    a2 = 0;
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
LABEL_17:
    int64_t v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v26) {
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_18;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D4347584(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v7);
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_1D446A188();
  *a1 = v5;
  return result;
}

uint64_t sub_1D43475E4(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1D4347610(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D4347638@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

unint64_t sub_1D4347668()
{
  unint64_t result = qword_1EA6CA010;
  if (!qword_1EA6CA010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA010);
  }
  return result;
}

unint64_t sub_1D43476BC()
{
  unint64_t result = qword_1EA6CA420;
  if (!qword_1EA6CA420)
  {
    sub_1D42DB55C(&qword_1EA6C9EB0);
    sub_1D42AAE28(&qword_1EA6C9FD8, MEMORY[0x1E4F27990]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA420);
  }
  return result;
}

unint64_t sub_1D4347760()
{
  unint64_t result = qword_1EA6CA028;
  if (!qword_1EA6CA028)
  {
    sub_1D42DB55C(&qword_1EA6C9EA0);
    sub_1D42AAE28(&qword_1EA6C9FD8, MEMORY[0x1E4F27990]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA028);
  }
  return result;
}

unint64_t sub_1D4347804()
{
  unint64_t result = qword_1EA6CA038;
  if (!qword_1EA6CA038)
  {
    sub_1D42DB55C(&qword_1EA6CA030);
    sub_1D42AAE28(&qword_1EA6CA040, (void (*)(uint64_t))type metadata accessor for FMIPItemPairingState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA038);
  }
  return result;
}

unint64_t sub_1D43478B0()
{
  unint64_t result = qword_1EA6CA5D0;
  if (!qword_1EA6CA5D0)
  {
    sub_1D42DB55C((uint64_t *)&unk_1EA6CA520);
    sub_1D42AAE28(&qword_1EA6CA048, (void (*)(uint64_t))type metadata accessor for FMIPItem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA5D0);
  }
  return result;
}

unint64_t sub_1D4347954()
{
  unint64_t result = qword_1EA6CA060;
  if (!qword_1EA6CA060)
  {
    sub_1D42DB55C(&qword_1EA6C9E90);
    sub_1D42AAE28(&qword_1EA6CA048, (void (*)(uint64_t))type metadata accessor for FMIPItem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA060);
  }
  return result;
}

uint64_t sub_1D43479F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7E710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4347A60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FMIPBeaconShare(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v20[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D446A828();
  swift_bridgeObjectRetain();
  FMIPBeaconShare.hash(into:)((uint64_t)v20);
  uint64_t v11 = sub_1D446A888();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1D42CA620(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, type metadata accessor for FMIPBeaconShare);
      char v16 = _s8FMIPCore15FMIPBeaconShareV2eeoiySbAC_ACtFZ_0((uint64_t)v9, a2);
      sub_1D42CA828((uint64_t)v9, type metadata accessor for FMIPBeaconShare);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_1D42CA828(a2, type metadata accessor for FMIPBeaconShare);
    sub_1D42CA620(*(void *)(*v3 + 48) + v15 * v13, v19, type metadata accessor for FMIPBeaconShare);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1D42CA620(a2, (uint64_t)v9, type metadata accessor for FMIPBeaconShare);
    v20[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D434B688((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v20[0];
    swift_bridgeObjectRelease();
    sub_1D42CAA68(a2, a1, type metadata accessor for FMIPBeaconShare);
    return 1;
  }
}

uint64_t sub_1D4347CE4(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1D446A288();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1D4275AD0(0, &qword_1EA6C9478);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1D446A278();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1D43494A4(v7, result + 1);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1D434B000(v26, &qword_1EA6CA190);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1D434B604((uint64_t)v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1D446A108();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1D4275AD0(0, &qword_1EA6C9478);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1D446A118();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1D446A118();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1D434B960((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1D4347F8C(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_1D446A828();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1D446A888();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_1D434BAF4(a2, v7, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_24;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xE400000000000000;
    uint64_t v10 = 1952867692;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v9 = 0xE500000000000000;
        uint64_t v10 = 0x7468676972;
        break;
      case 2:
        uint64_t v10 = 1702060387;
        break;
      case 3:
        uint64_t v10 = 0x6F6C61646E617473;
        unint64_t v9 = 0xEA0000000000656ELL;
        break;
      case 4:
        uint64_t v10 = 1702131053;
        break;
      default:
        break;
    }
    unint64_t v11 = 0xE400000000000000;
    uint64_t v12 = 1952867692;
    switch((char)a2)
    {
      case 1:
        unint64_t v11 = 0xE500000000000000;
        if (v10 == 0x7468676972) {
          goto LABEL_15;
        }
        goto LABEL_16;
      case 2:
        if (v10 != 1702060387) {
          goto LABEL_16;
        }
        goto LABEL_15;
      case 3:
        uint64_t v12 = 0x6F6C61646E617473;
        unint64_t v11 = 0xEA0000000000656ELL;
        goto LABEL_14;
      case 4:
        if (v10 != 1702131053) {
          goto LABEL_16;
        }
        goto LABEL_15;
      default:
LABEL_14:
        if (v10 != v12) {
          goto LABEL_16;
        }
LABEL_15:
        if (v9 != v11)
        {
LABEL_16:
          char v13 = sub_1D446A758();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v13) {
            goto LABEL_23;
          }
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_21;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_23:
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_24:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_1D43482D8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D42AAE28(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1D4469AC8();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    id v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      id v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1D42AAE28(&qword_1EA6CA0E8, MEMORY[0x1E4F27990]);
      char v21 = sub_1D4469AF8();
      unint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      id v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D434C030((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1D43485FC(void *a1, uint64_t a2, void (*a3)(void *, uint64_t), uint64_t (*a4)(uint64_t, uint64_t), void (*a5)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v10 = *v5;
  sub_1D446A828();
  swift_bridgeObjectRetain();
  a3(v23, a2);
  uint64_t v11 = sub_1D446A888();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = swift_bridgeObjectRetain();
    char v15 = a4(v14, a2);
    swift_bridgeObjectRelease();
    if (v15)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a1 = *(void *)(*(void *)(*v5 + 48) + 8 * v13);
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v16 = ~v12;
    while (1)
    {
      unint64_t v13 = (v13 + 1) & v16;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        break;
      }
      uint64_t v17 = swift_bridgeObjectRetain();
      char v18 = a4(v17, a2);
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_6;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23[0] = *v5;
  *uint64_t v5 = 0x8000000000000000;
  uint64_t v21 = swift_bridgeObjectRetain();
  a5(v21, v13, isUniquelyReferenced_nonNull_native);
  *uint64_t v5 = v23[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1D43487B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FMIPItem();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D446A828();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1D446A888();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1D42CA620(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      char v16 = _s8FMIPCore8FMIPItemV2eeoiySbAC_ACtFZ_0((uint64_t)v9, a2);
      sub_1D42CA828((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_1D42CA828(a2, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA620(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1D42CA620(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v20 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D434C4A8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v20;
    swift_bridgeObjectRelease();
    sub_1D42CAA68(a2, a1, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    return 1;
  }
}

uint64_t sub_1D4348A4C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1D446A828();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  uint64_t v8 = sub_1D446A888();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1D446A758() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      char v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1D446A758() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1D434C754(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1D4348BFC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *v2;
  sub_1D446A828();
  swift_bridgeObjectRetain();
  FMIPDiscoveredAccessory.hash(into:)();
  uint64_t v11 = sub_1D446A888();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1D42CA620(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      BOOL v16 = _s8FMIPCore23FMIPDiscoveredAccessoryV2eeoiySbAC_ACtFZ_0(v9, a2);
      sub_1D42CA828((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_1D42CA828((uint64_t)a2, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    sub_1D42CA620(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1D42CA620((uint64_t)a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    uint64_t v20 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D434C8F0(v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v20;
    swift_bridgeObjectRelease();
    sub_1D42CAA68((uint64_t)a2, a1, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    return 1;
  }
}

uint64_t sub_1D4348E80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FMIPUnknownItem();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v20[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D446A828();
  swift_bridgeObjectRetain();
  FMIPUnknownItem.hash(into:)((uint64_t)v20);
  uint64_t v11 = sub_1D446A888();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1D42CA620(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
      char v16 = _s8FMIPCore15FMIPUnknownItemV2eeoiySbAC_ACtFZ_0(v9, a2);
      sub_1D42CA828((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_1D42CA828(a2, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D42CA620(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1D42CA620(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    v20[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D434CB84((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v20[0];
    swift_bridgeObjectRelease();
    sub_1D42CAA68(a2, a1, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    return 1;
  }
}

uint64_t sub_1D4349104(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_1D446A828();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1D446A888();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_1D434CE5C(a2, v7, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_24;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xEA0000000000656ELL;
    uint64_t v10 = 0x6F6C61646E617473;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v9 = 0xE400000000000000;
        uint64_t v10 = 1702060387;
        break;
      case 2:
        unint64_t v9 = 0xE700000000000000;
        uint64_t v10 = 0x6475427466656CLL;
        break;
      case 3:
        unint64_t v9 = 0xE800000000000000;
        uint64_t v10 = 0x6475427468676972;
        break;
      case 4:
        unint64_t v9 = 0xE700000000000000;
        uint64_t v10 = 0x636972656E6567;
        break;
      default:
        break;
    }
    uint64_t v11 = 0x6F6C61646E617473;
    unint64_t v12 = 0xEA0000000000656ELL;
    switch((char)a2)
    {
      case 1:
        unint64_t v12 = 0xE400000000000000;
        if (v10 == 1702060387) {
          goto LABEL_15;
        }
        goto LABEL_16;
      case 2:
        unint64_t v12 = 0xE700000000000000;
        if (v10 != 0x6475427466656CLL) {
          goto LABEL_16;
        }
        goto LABEL_15;
      case 3:
        unint64_t v12 = 0xE800000000000000;
        uint64_t v11 = 0x6475427468676972;
        goto LABEL_14;
      case 4:
        unint64_t v12 = 0xE700000000000000;
        if (v10 != 0x636972656E6567) {
          goto LABEL_16;
        }
        goto LABEL_15;
      default:
LABEL_14:
        if (v10 != v11) {
          goto LABEL_16;
        }
LABEL_15:
        if (v9 != v12)
        {
LABEL_16:
          char v13 = sub_1D446A758();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v13) {
            goto LABEL_23;
          }
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_21;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_23:
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_24:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_1D43494A4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1D42D5DA0(&qword_1EA6CA190);
    uint64_t v2 = sub_1D446A338();
    uint64_t v15 = v2;
    sub_1D446A238();
    if (sub_1D446A2B8())
    {
      sub_1D4275AD0(0, &qword_1EA6C9478);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_1D434B000(v9 + 1, &qword_1EA6CA190);
          uint64_t v2 = v15;
        }
        uint64_t result = sub_1D446A108();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (sub_1D446A2B8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1D43496B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1D42D5DA0(&qword_1EA6CA150);
  uint64_t v3 = sub_1D446A328();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  unint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1D446A828();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1D446A888();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1D43499E8);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1D43499FC()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D4469688();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_1D42D5DA0(&qword_1EA6CA0F0);
  uint64_t v5 = sub_1D446A328();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    unint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      char v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D42AAE28(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
      uint64_t result = sub_1D4469AC8();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

unint64_t sub_1D4349DF8(uint64_t a1, uint64_t *a2, void (*a3)(char *, uint64_t))
{
  uint64_t v5 = v3;
  uint64_t v6 = *v3;
  sub_1D42D5DA0(a2);
  uint64_t v7 = sub_1D446A328();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    unint64_t v10 = (void *)(v6 + 56);
    if (v9 < 64) {
      uint64_t v11 = ~(-1 << v9);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 56);
    int64_t v13 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v14 = v7 + 56;
    unint64_t result = swift_retain();
    int64_t v16 = 0;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v16 << 6);
      }
      else
      {
        int64_t v20 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v20 >= v13) {
          goto LABEL_23;
        }
        unint64_t v21 = v10[v20];
        ++v16;
        if (!v21)
        {
          int64_t v16 = v20 + 1;
          if (v20 + 1 >= v13) {
            goto LABEL_23;
          }
          unint64_t v21 = v10[v16];
          if (!v21)
          {
            int64_t v16 = v20 + 2;
            if (v20 + 2 >= v13) {
              goto LABEL_23;
            }
            unint64_t v21 = v10[v16];
            if (!v21)
            {
              int64_t v22 = v20 + 3;
              if (v22 >= v13)
              {
LABEL_23:
                swift_release();
                uint64_t v23 = 1 << *(unsigned char *)(v6 + 32);
                if (v23 > 63) {
                  bzero((void *)(v6 + 56), ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v10 = -1 << v23;
                }
                uint64_t v5 = v3;
                *(void *)(v6 + 16) = 0;
                break;
              }
              unint64_t v21 = v10[v22];
              if (!v21)
              {
                while (1)
                {
                  int64_t v16 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_29;
                  }
                  if (v16 >= v13) {
                    goto LABEL_23;
                  }
                  unint64_t v21 = v10[v16];
                  ++v22;
                  if (v21) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v16 = v22;
            }
          }
        }
LABEL_22:
        unint64_t v12 = (v21 - 1) & v21;
        unint64_t v18 = __clz(__rbit64(v21)) + (v16 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v6 + 48) + 8 * v18);
      sub_1D446A828();
      a3(v24, v19);
      sub_1D446A888();
      unint64_t result = sub_1D446A218();
      *(void *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      *(void *)(*(void *)(v8 + 48) + 8 * result) = v19;
      ++*(void *)(v8 + 16);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v5 = v8;
  return result;
}

uint64_t sub_1D434A048()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPItem();
  uint64_t v34 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_1D42D5DA0(&qword_1EA6CA100);
  uint64_t v6 = sub_1D446A328();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    unint64_t v31 = v0;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v33 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    int64_t v32 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v32) {
          goto LABEL_33;
        }
        unint64_t v19 = v33[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v19 = v33[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v19 = v33[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v32)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v31;
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 > 63) {
                  bzero(v33, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v33 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v33[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v33[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(v34 + 72);
      sub_1D42CAA68(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      sub_1D446A828();
      swift_bridgeObjectRetain();
      sub_1D4469BC8();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1D446A888();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t result = sub_1D42CAA68((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_1D434A404()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1D42D5DA0(&qword_1EA6CA140);
  uint64_t v3 = sub_1D446A328();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1D446A828();
      sub_1D4469BC8();
      uint64_t result = sub_1D446A888();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *int64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1D434A6E4()
{
  uint64_t v1 = v0;
  uint64_t v50 = type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t v2 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v42 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C97A0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v0;
  sub_1D42D5DA0(&qword_1EA6CA180);
  uint64_t v11 = sub_1D446A328();
  uint64_t v12 = v11;
  if (*(void *)(v10 + 16))
  {
    uint64_t v41 = v0;
    uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
    uint64_t v14 = *(void *)(v10 + 56);
    uint64_t v44 = (void *)(v10 + 56);
    if (v13 < 64) {
      uint64_t v15 = ~(-1 << v13);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v14;
    int64_t v43 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
    uint64_t v17 = v11 + 56;
    uint64_t result = swift_retain();
    int64_t v19 = 0;
    uint64_t v45 = v10;
    uint64_t v46 = v12;
    while (1)
    {
      if (v16)
      {
        unint64_t v21 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        int64_t v52 = v19;
        unint64_t v22 = v21 | (v19 << 6);
      }
      else
      {
        int64_t v23 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return result;
        }
        if (v23 >= v43) {
          goto LABEL_39;
        }
        unint64_t v24 = v44[v23];
        int64_t v25 = v19 + 1;
        if (!v24)
        {
          int64_t v25 = v19 + 2;
          if (v19 + 2 >= v43) {
            goto LABEL_39;
          }
          unint64_t v24 = v44[v25];
          if (!v24)
          {
            int64_t v25 = v19 + 3;
            if (v19 + 3 >= v43) {
              goto LABEL_39;
            }
            unint64_t v24 = v44[v25];
            if (!v24)
            {
              uint64_t v26 = v19 + 4;
              if (v19 + 4 >= v43)
              {
LABEL_39:
                swift_release();
                uint64_t v1 = v41;
                uint64_t v40 = 1 << *(unsigned char *)(v10 + 32);
                if (v40 > 63) {
                  bzero(v44, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v44 = -1 << v40;
                }
                *(void *)(v10 + 16) = 0;
                break;
              }
              unint64_t v24 = v44[v26];
              if (!v24)
              {
                while (1)
                {
                  int64_t v25 = v26 + 1;
                  if (__OFADD__(v26, 1)) {
                    goto LABEL_45;
                  }
                  if (v25 >= v43) {
                    goto LABEL_39;
                  }
                  unint64_t v24 = v44[v25];
                  ++v26;
                  if (v24) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v25 = v19 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v16 = (v24 - 1) & v24;
        int64_t v52 = v25;
        unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
      }
      uint64_t v27 = *(void *)(v10 + 48);
      uint64_t v51 = *(void *)(v48 + 72);
      sub_1D42CAA68(v27 + v51 * v22, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      sub_1D446A828();
      id v28 = *(id *)v9;
      sub_1D446A128();

      uint64_t v29 = *((void *)v9 + 3);
      if (v29)
      {
        uint64_t v30 = *((void *)v9 + 1);
        uint64_t v31 = *((void *)v9 + 2);
        sub_1D446A848();
        sub_1D446A838();
        sub_1D4354598(v30, v31, v29);
        swift_bridgeObjectRetain();
        sub_1D4469BC8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1D4469BC8();
        swift_bridgeObjectRelease();
        sub_1D43545DC(v30, v31, v29);
      }
      else
      {
        sub_1D446A848();
      }
      sub_1D42A3A74((uint64_t)&v9[*(int *)(v49 + 24)], (uint64_t)v6, &qword_1EA6C97A0);
      if ((*v47)(v6, 1, v50) == 1)
      {
        sub_1D446A848();
      }
      else
      {
        uint64_t v32 = v42;
        sub_1D42CAA68((uint64_t)v6, v42, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
        sub_1D446A848();
        FMIPHawkeyeProductInformation.hash(into:)();
        sub_1D42CA828(v32, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
      }
      uint64_t v12 = v46;
      uint64_t result = sub_1D446A888();
      uint64_t v33 = -1 << *(unsigned char *)(v12 + 32);
      unint64_t v34 = result & ~v33;
      unint64_t v35 = v34 >> 6;
      if (((-1 << v34) & ~*(void *)(v17 + 8 * (v34 >> 6))) != 0)
      {
        unint64_t v20 = __clz(__rbit64((-1 << v34) & ~*(void *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v36 = 0;
        unint64_t v37 = (unint64_t)(63 - v33) >> 6;
        do
        {
          if (++v35 == v37 && (v36 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          BOOL v38 = v35 == v37;
          if (v35 == v37) {
            unint64_t v35 = 0;
          }
          v36 |= v38;
          uint64_t v39 = *(void *)(v17 + 8 * v35);
        }
        while (v39 == -1);
        unint64_t v20 = __clz(__rbit64(~v39)) + (v35 << 6);
      }
      *(void *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      uint64_t result = sub_1D42CAA68((uint64_t)v9, *(void *)(v12 + 48) + v20 * v51, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      ++*(void *)(v12 + 16);
      uint64_t v10 = v45;
      int64_t v19 = v52;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v12;
  return result;
}

uint64_t sub_1D434ACD8(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), void (*a5)(char *))
{
  unint64_t v35 = a5;
  uint64_t v8 = v5;
  uint64_t v9 = a2(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = *v5;
  sub_1D42D5DA0(a3);
  uint64_t v14 = sub_1D446A328();
  uint64_t v15 = v14;
  if (*(void *)(v13 + 16))
  {
    uint64_t v16 = 1 << *(unsigned char *)(v13 + 32);
    uint64_t v17 = *(void *)(v13 + 56);
    uint64_t v32 = v5;
    uint64_t v33 = (void *)(v13 + 56);
    if (v16 < 64) {
      uint64_t v18 = ~(-1 << v16);
    }
    else {
      uint64_t v18 = -1;
    }
    unint64_t v19 = v18 & v17;
    int64_t v34 = (unint64_t)(v16 + 63) >> 6;
    uint64_t v20 = v14 + 56;
    uint64_t result = swift_retain();
    int64_t v22 = 0;
    while (1)
    {
      if (v19)
      {
        unint64_t v23 = __clz(__rbit64(v19));
        v19 &= v19 - 1;
        unint64_t v24 = v23 | (v22 << 6);
      }
      else
      {
        int64_t v27 = v22 + 1;
        if (__OFADD__(v22, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v27 >= v34) {
          goto LABEL_23;
        }
        unint64_t v28 = v33[v27];
        ++v22;
        if (!v28)
        {
          int64_t v22 = v27 + 1;
          if (v27 + 1 >= v34) {
            goto LABEL_23;
          }
          unint64_t v28 = v33[v22];
          if (!v28)
          {
            int64_t v22 = v27 + 2;
            if (v27 + 2 >= v34) {
              goto LABEL_23;
            }
            unint64_t v28 = v33[v22];
            if (!v28)
            {
              int64_t v29 = v27 + 3;
              if (v29 >= v34)
              {
LABEL_23:
                swift_release();
                uint64_t v30 = 1 << *(unsigned char *)(v13 + 32);
                if (v30 > 63) {
                  bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v33 = -1 << v30;
                }
                uint64_t v8 = v32;
                *(void *)(v13 + 16) = 0;
                break;
              }
              unint64_t v28 = v33[v29];
              if (!v28)
              {
                while (1)
                {
                  int64_t v22 = v29 + 1;
                  if (__OFADD__(v29, 1)) {
                    goto LABEL_29;
                  }
                  if (v22 >= v34) {
                    goto LABEL_23;
                  }
                  unint64_t v28 = v33[v22];
                  ++v29;
                  if (v28) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v22 = v29;
            }
          }
        }
LABEL_22:
        unint64_t v19 = (v28 - 1) & v28;
        unint64_t v24 = __clz(__rbit64(v28)) + (v22 << 6);
      }
      uint64_t v25 = *(void *)(v10 + 72);
      sub_1D42CAA68(*(void *)(v13 + 48) + v25 * v24, (uint64_t)v12, a4);
      sub_1D446A828();
      v35(v36);
      sub_1D446A888();
      unint64_t v26 = sub_1D446A218();
      *(void *)(v20 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      uint64_t result = sub_1D42CAA68((uint64_t)v12, *(void *)(v15 + 48) + v26 * v25, a4);
      ++*(void *)(v15 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v8 = v15;
  return result;
}

uint64_t sub_1D434AFF4(uint64_t a1)
{
  return sub_1D434B000(a1, &qword_1EA6CA198);
}

uint64_t sub_1D434B000(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_1D42D5DA0(a2);
  uint64_t v5 = sub_1D446A328();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_1D446A108();
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1D434B29C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1D42D5DA0(&qword_1EA6CA168);
  uint64_t v3 = sub_1D446A328();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1D446A828();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1D446A888();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1D434B5F0);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1D434B604(uint64_t a1, uint64_t a2)
{
  sub_1D446A108();
  unint64_t result = sub_1D446A218();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1D434B688(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FMIPBeaconShare(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  int64_t v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1D434ACD8(v12 + 1, type metadata accessor for FMIPBeaconShare, &qword_1EA6CA158, type metadata accessor for FMIPBeaconShare, (void (*)(char *))FMIPBeaconShare.hash(into:));
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_1D434DE50();
LABEL_8:
    uint64_t v15 = *v4;
    sub_1D446A828();
    FMIPBeaconShare.hash(into:)((uint64_t)v27);
    uint64_t v16 = sub_1D446A888();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_1D42CA620(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, type metadata accessor for FMIPBeaconShare);
        char v20 = _s8FMIPCore15FMIPBeaconShareV2eeoiySbAC_ACtFZ_0((uint64_t)v11, a1);
        sub_1D42CA828((uint64_t)v11, type metadata accessor for FMIPBeaconShare);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_1D434D808(type metadata accessor for FMIPBeaconShare, &qword_1EA6CA158, type metadata accessor for FMIPBeaconShare, type metadata accessor for FMIPBeaconShare);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1D42CAA68(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, type metadata accessor for FMIPBeaconShare);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1D446A798();
  __break(1u);
  return result;
}

void sub_1D434B960(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1D434B000(v6 + 1, &qword_1EA6CA190);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1D434D214();
      goto LABEL_14;
    }
    sub_1D434E12C();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_1D446A108();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1D4275AD0(0, &qword_1EA6C9478);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_1D446A118();

    if (v12)
    {
LABEL_13:
      sub_1D446A798();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_1D446A118();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_1D434BAF4(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1D43496B0();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_1D434DCC4(&qword_1EA6CA150);
        goto LABEL_28;
      }
      sub_1D434E3A8();
    }
    uint64_t v8 = *v3;
    sub_1D446A828();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1D446A888();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE400000000000000;
        uint64_t v12 = 1952867692;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v12 = 0x7468676972;
            break;
          case 2:
            uint64_t v12 = 1702060387;
            break;
          case 3:
            uint64_t v12 = 0x6F6C61646E617473;
            unint64_t v11 = 0xEA0000000000656ELL;
            break;
          case 4:
            uint64_t v12 = 1702131053;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE400000000000000;
        uint64_t v14 = 1952867692;
        switch(v5)
        {
          case 1:
            unint64_t v13 = 0xE500000000000000;
            if (v12 != 0x7468676972) {
              goto LABEL_23;
            }
            goto LABEL_22;
          case 2:
            uint64_t v14 = 1702060387;
            goto LABEL_21;
          case 3:
            unint64_t v13 = 0xEA0000000000656ELL;
            if (v12 != 0x6F6C61646E617473) {
              goto LABEL_23;
            }
            goto LABEL_22;
          case 4:
            if (v12 != 1702131053) {
              goto LABEL_23;
            }
            goto LABEL_22;
          default:
LABEL_21:
            if (v12 != v14) {
              goto LABEL_23;
            }
LABEL_22:
            if (v11 == v13) {
              goto LABEL_31;
            }
LABEL_23:
            char v15 = sub_1D446A758();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_32;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_28:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRelease_n();
LABEL_32:
    sub_1D446A798();
    __break(1u);
    JUMPOUT(0x1D434BE1CLL);
  }
  *(void *)(v16 + 16) = v19;
  return result;
}

uint64_t sub_1D434BE58(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1D4349DF8(v8, &qword_1EA6CA130, (void (*)(char *, uint64_t))sub_1D4350840);
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1D434D664(&qword_1EA6CA130);
      goto LABEL_14;
    }
    sub_1D434EA70(v8, &qword_1EA6CA130, (void (*)(char *, uint64_t))sub_1D4350840);
  }
  uint64_t v9 = *v3;
  sub_1D446A828();
  sub_1D4350840(v20, v5);
  uint64_t result = sub_1D446A888();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = swift_bridgeObjectRetain();
    char v12 = sub_1D42C93E4(v11, v5);
    uint64_t result = swift_bridgeObjectRelease();
    if (v12)
    {
LABEL_13:
      sub_1D42D5DA0(&qword_1EA6C9EA0);
      uint64_t result = sub_1D446A798();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        uint64_t v14 = swift_bridgeObjectRetain();
        char v15 = sub_1D42C93E4(v14, v5);
        uint64_t result = swift_bridgeObjectRelease();
        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
  return result;
}

uint64_t sub_1D434C030(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D43499FC();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D434D3C0();
      goto LABEL_12;
    }
    sub_1D434E6C0();
  }
  uint64_t v12 = *v3;
  sub_1D42AAE28(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
  uint64_t v13 = sub_1D4469AC8();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D42AAE28(&qword_1EA6CA0E8, MEMORY[0x1E4F27990]);
      char v21 = sub_1D4469AF8();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D446A798();
  __break(1u);
  return result;
}

uint64_t sub_1D434C2D0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1D4349DF8(v8, &qword_1EA6CA1A8, (void (*)(char *, uint64_t))sub_1D4350BA0);
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1D434D664(&qword_1EA6CA1A8);
      goto LABEL_14;
    }
    sub_1D434EA70(v8, &qword_1EA6CA1A8, (void (*)(char *, uint64_t))sub_1D4350BA0);
  }
  uint64_t v9 = *v3;
  sub_1D446A828();
  sub_1D4350BA0(v20, v5);
  uint64_t result = sub_1D446A888();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = swift_bridgeObjectRetain();
    char v12 = sub_1D43EFBC0(v11, v5);
    uint64_t result = swift_bridgeObjectRelease();
    if (v12)
    {
LABEL_13:
      sub_1D42D5DA0(&qword_1EA6C9E90);
      uint64_t result = sub_1D446A798();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        uint64_t v14 = swift_bridgeObjectRetain();
        char v15 = sub_1D43EFBC0(v14, v5);
        uint64_t result = swift_bridgeObjectRelease();
        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
  return result;
}

uint64_t sub_1D434C4A8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FMIPItem();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1D434A048();
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_1D434EC8C();
LABEL_8:
    uint64_t v15 = *v4;
    sub_1D446A828();
    swift_bridgeObjectRetain();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1D446A888();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_1D42CA620(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        char v20 = _s8FMIPCore8FMIPItemV2eeoiySbAC_ACtFZ_0((uint64_t)v11, a1);
        sub_1D42CA828((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_1D434D808((uint64_t (*)(void))type metadata accessor for FMIPItem, &qword_1EA6CA100, (uint64_t (*)(void))type metadata accessor for FMIPItem, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1D42CAA68(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1D446A798();
  __break(1u);
  return result;
}

uint64_t sub_1D434C754(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1D434A404();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1D434DA80();
      goto LABEL_22;
    }
    sub_1D434F00C();
  }
  uint64_t v11 = *v4;
  sub_1D446A828();
  sub_1D4469BC8();
  uint64_t result = sub_1D446A888();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1D446A758(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1D446A798();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1D446A758();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1D434C8F0(void *a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1D434A6E4();
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_1D434F2BC();
LABEL_8:
    uint64_t v15 = *v4;
    sub_1D446A828();
    FMIPDiscoveredAccessory.hash(into:)();
    uint64_t v16 = sub_1D446A888();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_1D42CA620(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
        BOOL v20 = _s8FMIPCore23FMIPDiscoveredAccessoryV2eeoiySbAC_ACtFZ_0(v11, a1);
        sub_1D42CA828((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_1D434D808((uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory, &qword_1EA6CA180, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1D42CAA68((uint64_t)a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1D446A798();
  __break(1u);
  return result;
}

uint64_t sub_1D434CB84(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FMIPUnknownItem();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1D434ACD8(v12 + 1, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem, &qword_1EA6CA170, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem, (void (*)(char *))FMIPUnknownItem.hash(into:));
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_1D434F874();
LABEL_8:
    uint64_t v15 = *v4;
    sub_1D446A828();
    FMIPUnknownItem.hash(into:)((uint64_t)v27);
    uint64_t v16 = sub_1D446A888();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_1D42CA620(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
        char v20 = _s8FMIPCore15FMIPUnknownItemV2eeoiySbAC_ACtFZ_0(v11, a1);
        sub_1D42CA828((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_1D434D808((uint64_t (*)(void))type metadata accessor for FMIPUnknownItem, &qword_1EA6CA170, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1D42CAA68(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1D446A798();
  __break(1u);
  return result;
}

uint64_t sub_1D434CE5C(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1D434B29C();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_1D434DCC4(&qword_1EA6CA168);
        goto LABEL_28;
      }
      sub_1D434FB50();
    }
    uint64_t v8 = *v3;
    sub_1D446A828();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1D446A888();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xEA0000000000656ELL;
        uint64_t v12 = 0x6F6C61646E617473;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1702060387;
            break;
          case 2:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x6475427466656CLL;
            break;
          case 3:
            unint64_t v11 = 0xE800000000000000;
            uint64_t v12 = 0x6475427468676972;
            break;
          case 4:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x636972656E6567;
            break;
          default:
            break;
        }
        uint64_t v13 = 0x6F6C61646E617473;
        unint64_t v14 = 0xEA0000000000656ELL;
        switch(v5)
        {
          case 1:
            unint64_t v14 = 0xE400000000000000;
            if (v12 != 1702060387) {
              goto LABEL_23;
            }
            goto LABEL_22;
          case 2:
            unint64_t v14 = 0xE700000000000000;
            uint64_t v13 = 0x6475427466656CLL;
            goto LABEL_21;
          case 3:
            unint64_t v14 = 0xE800000000000000;
            if (v12 != 0x6475427468676972) {
              goto LABEL_23;
            }
            goto LABEL_22;
          case 4:
            unint64_t v14 = 0xE700000000000000;
            if (v12 != 0x636972656E6567) {
              goto LABEL_23;
            }
            goto LABEL_22;
          default:
LABEL_21:
            if (v12 != v13) {
              goto LABEL_23;
            }
LABEL_22:
            if (v11 == v14) {
              goto LABEL_31;
            }
LABEL_23:
            char v15 = sub_1D446A758();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_32;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_28:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRelease_n();
LABEL_32:
    sub_1D446A798();
    __break(1u);
    JUMPOUT(0x1D434D1D8);
  }
  *(void *)(v16 + 16) = v19;
  return result;
}

id sub_1D434D214()
{
  uint64_t v1 = v0;
  sub_1D42D5DA0(&qword_1EA6CA190);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D446A318();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D434D3C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D4469688();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42D5DA0(&qword_1EA6CA0F0);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1D446A318();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v22 = v1;
  id result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    id result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1D434D664(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1D42D5DA0(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1D446A318();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(void *)(*(void *)(v5 + 48) + 8 * v16) = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D434D808(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  unint64_t v8 = v4;
  uint64_t v9 = a1(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v30 - v11;
  sub_1D42D5DA0(a2);
  uint64_t v13 = *v4;
  uint64_t v14 = sub_1D446A318();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    uint64_t *v8 = v15;
    return result;
  }
  id result = (void *)(v14 + 56);
  unint64_t v17 = (unint64_t)((1 << *(unsigned char *)(v15 + 32)) + 63) >> 6;
  uint64_t v30 = v8;
  uint64_t v31 = (const void *)(v13 + 56);
  if (v15 != v13 || (unint64_t)result >= v13 + 56 + 8 * v17) {
    id result = memmove(result, v31, 8 * v17);
  }
  int64_t v19 = 0;
  *(void *)(v15 + 16) = *(void *)(v13 + 16);
  uint64_t v20 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & *(void *)(v13 + 56);
  int64_t v23 = (unint64_t)(v20 + 63) >> 6;
  while (1)
  {
    if (v22)
    {
      unint64_t v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v25 = v24 | (v19 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v27 >= v23) {
      goto LABEL_28;
    }
    unint64_t v28 = *((void *)v31 + v27);
    ++v19;
    if (!v28)
    {
      int64_t v19 = v27 + 1;
      if (v27 + 1 >= v23) {
        goto LABEL_28;
      }
      unint64_t v28 = *((void *)v31 + v19);
      if (!v28)
      {
        int64_t v19 = v27 + 2;
        if (v27 + 2 >= v23) {
          goto LABEL_28;
        }
        unint64_t v28 = *((void *)v31 + v19);
        if (!v28) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v22 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v19 << 6);
LABEL_12:
    unint64_t v26 = *(void *)(v10 + 72) * v25;
    sub_1D42CA620(*(void *)(v13 + 48) + v26, (uint64_t)v12, a3);
    id result = (void *)sub_1D42CAA68((uint64_t)v12, *(void *)(v15 + 48) + v26, a4);
  }
  int64_t v29 = v27 + 3;
  if (v29 >= v23)
  {
LABEL_28:
    id result = (void *)swift_release();
    unint64_t v8 = v30;
    goto LABEL_30;
  }
  unint64_t v28 = *((void *)v31 + v29);
  if (v28)
  {
    int64_t v19 = v29;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v19 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v19 >= v23) {
      goto LABEL_28;
    }
    unint64_t v28 = *((void *)v31 + v19);
    ++v29;
    if (v28) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1D434DA80()
{
  uint64_t v1 = v0;
  sub_1D42D5DA0(&qword_1EA6CA140);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D446A318();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    int64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D434DC34()
{
  return sub_1D434D808((uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory, &qword_1EA6CA180, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
}

void *sub_1D434DC7C()
{
  return sub_1D434D808((uint64_t (*)(void))type metadata accessor for FMIPUnknownItem, &qword_1EA6CA170, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
}

void *sub_1D434DCC4(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1D42D5DA0(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1D446A318();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D434DE50()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPBeaconShare(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1D42D5DA0(&qword_1EA6CA158);
  uint64_t v7 = sub_1D446A328();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  unint64_t v25 = v0;
  uint64_t v26 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v13 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v14 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v16 << 6);
      goto LABEL_7;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v13) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v21);
    ++v16;
    if (!v22)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v26 + 8 * v16);
      if (!v22)
      {
        int64_t v16 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v26 + 8 * v16);
        if (!v22) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_7:
    uint64_t v19 = *(void *)(v3 + 72);
    sub_1D42CA620(*(void *)(v6 + 48) + v19 * v18, (uint64_t)v5, type metadata accessor for FMIPBeaconShare);
    sub_1D446A828();
    FMIPBeaconShare.hash(into:)((uint64_t)v27);
    sub_1D446A888();
    unint64_t v20 = sub_1D446A218();
    *(void *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    uint64_t result = sub_1D42CAA68((uint64_t)v5, *(void *)(v8 + 48) + v20 * v19, type metadata accessor for FMIPBeaconShare);
    ++*(void *)(v8 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13)
  {
LABEL_23:
    uint64_t result = swift_release_n();
    uint64_t v1 = v25;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v26 + 8 * v23);
  if (v22)
  {
    int64_t v16 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v16);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1D434E12C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1D42D5DA0(&qword_1EA6CA190);
  uint64_t v3 = sub_1D446A328();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_1D446A108();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D434E3A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1D42D5DA0(&qword_1EA6CA150);
  uint64_t v3 = sub_1D446A328();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1D446A828();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1D446A888();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x1D434E6ACLL);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1D434E6C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D4469688();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1D42D5DA0(&qword_1EA6CA0F0);
  uint64_t v7 = sub_1D446A328();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  int64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D42AAE28(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1D4469AC8();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1D434EA70(uint64_t a1, uint64_t *a2, void (*a3)(char *, uint64_t))
{
  uint64_t v5 = v3;
  uint64_t v6 = *v3;
  sub_1D42D5DA0(a2);
  uint64_t v7 = sub_1D446A328();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_24:
    unint64_t result = swift_release();
    *uint64_t v5 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v6 + 56);
  int64_t v13 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v14 = v7 + 56;
  unint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v16 << 6);
      goto LABEL_7;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v20 >= v13) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v10 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_23;
        }
        unint64_t v21 = *(void *)(v10 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_7:
    uint64_t v19 = *(void *)(*(void *)(v6 + 48) + 8 * v18);
    sub_1D446A828();
    swift_bridgeObjectRetain();
    a3(v23, v19);
    sub_1D446A888();
    unint64_t result = sub_1D446A218();
    *(void *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(*(void *)(v8 + 48) + 8 * result) = v19;
    ++*(void *)(v8 + 16);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13)
  {
LABEL_23:
    swift_release();
    uint64_t v5 = v3;
    goto LABEL_24;
  }
  unint64_t v21 = *(void *)(v10 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1D434EC8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPItem();
  uint64_t v33 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_1D42D5DA0(&qword_1EA6CA100);
  uint64_t v6 = sub_1D446A328();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  unint64_t v30 = v0;
  uint64_t v31 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v32) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v31 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v31 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v33 + 72);
    sub_1D42CA620(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D446A828();
    swift_bridgeObjectRetain();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1D446A888();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_1D42CAA68((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v31 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v32) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D434F00C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1D42D5DA0(&qword_1EA6CA140);
  uint64_t v3 = sub_1D446A328();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1D446A828();
    swift_bridgeObjectRetain();
    sub_1D4469BC8();
    uint64_t result = sub_1D446A888();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D434F2BC()
{
  uint64_t v1 = v0;
  uint64_t v51 = type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t v2 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v43 = (uint64_t)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C97A0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v0;
  sub_1D42D5DA0(&qword_1EA6CA180);
  uint64_t v11 = sub_1D446A328();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    uint64_t result = swift_release();
LABEL_41:
    *uint64_t v1 = v12;
    return result;
  }
  uint64_t v42 = v0;
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v14 = *(void *)(v10 + 56);
  uint64_t v44 = v10 + 56;
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int64_t v45 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v48 = (unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  uint64_t v17 = v11 + 56;
  uint64_t result = swift_retain();
  int64_t v19 = 0;
  uint64_t v46 = v10;
  uint64_t v47 = v12;
  while (1)
  {
    if (v16)
    {
      unint64_t v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      int64_t v53 = v19;
      unint64_t v22 = v21 | (v19 << 6);
      goto LABEL_24;
    }
    int64_t v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v23 >= v45) {
      goto LABEL_39;
    }
    unint64_t v24 = *(void *)(v44 + 8 * v23);
    int64_t v25 = v19 + 1;
    if (!v24)
    {
      int64_t v25 = v19 + 2;
      if (v19 + 2 >= v45) {
        goto LABEL_39;
      }
      unint64_t v24 = *(void *)(v44 + 8 * v25);
      if (!v24)
      {
        int64_t v25 = v19 + 3;
        if (v19 + 3 >= v45) {
          goto LABEL_39;
        }
        unint64_t v24 = *(void *)(v44 + 8 * v25);
        if (!v24) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v16 = (v24 - 1) & v24;
    int64_t v53 = v25;
    unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_24:
    uint64_t v27 = *(void *)(v10 + 48);
    uint64_t v52 = *(void *)(v49 + 72);
    sub_1D42CA620(v27 + v52 * v22, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    sub_1D446A828();
    id v28 = *(id *)v9;
    sub_1D446A128();

    uint64_t v29 = *((void *)v9 + 3);
    if (v29)
    {
      unint64_t v30 = v6;
      uint64_t v31 = *((void *)v9 + 1);
      uint64_t v32 = *((void *)v9 + 2);
      sub_1D446A848();
      sub_1D446A838();
      sub_1D4354598(v31, v32, v29);
      swift_bridgeObjectRetain();
      sub_1D4469BC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1D4469BC8();
      swift_bridgeObjectRelease();
      uint64_t v33 = v32;
      uint64_t v6 = v30;
      sub_1D43545DC(v31, v33, v29);
    }
    else
    {
      sub_1D446A848();
    }
    sub_1D42A3A74((uint64_t)&v9[*(int *)(v50 + 24)], (uint64_t)v6, &qword_1EA6C97A0);
    if ((*v48)(v6, 1, v51) == 1)
    {
      sub_1D446A848();
    }
    else
    {
      uint64_t v34 = v43;
      sub_1D42CAA68((uint64_t)v6, v43, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
      sub_1D446A848();
      FMIPHawkeyeProductInformation.hash(into:)();
      sub_1D42CA828(v34, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
    }
    uint64_t v10 = v46;
    uint64_t v12 = v47;
    uint64_t result = sub_1D446A888();
    uint64_t v35 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v17 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v36) & ~*(void *)(v17 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v17 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v20 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    uint64_t result = sub_1D42CAA68((uint64_t)v9, *(void *)(v12 + 48) + v20 * v52, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    ++*(void *)(v12 + 16);
    int64_t v19 = v53;
  }
  uint64_t v26 = v19 + 4;
  if (v19 + 4 >= v45)
  {
LABEL_39:
    uint64_t result = swift_release_n();
    uint64_t v1 = v42;
    goto LABEL_41;
  }
  unint64_t v24 = *(void *)(v44 + 8 * v26);
  if (v24)
  {
    int64_t v25 = v19 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v25 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v25 >= v45) {
      goto LABEL_39;
    }
    unint64_t v24 = *(void *)(v44 + 8 * v25);
    ++v26;
    if (v24) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1D434F874()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPUnknownItem();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1D42D5DA0(&qword_1EA6CA170);
  uint64_t v7 = sub_1D446A328();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  int64_t v25 = v0;
  uint64_t v26 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v13 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v14 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v16 << 6);
      goto LABEL_7;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v13) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v21);
    ++v16;
    if (!v22)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v26 + 8 * v16);
      if (!v22)
      {
        int64_t v16 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v26 + 8 * v16);
        if (!v22) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_7:
    uint64_t v19 = *(void *)(v3 + 72);
    sub_1D42CA620(*(void *)(v6 + 48) + v19 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D446A828();
    FMIPUnknownItem.hash(into:)((uint64_t)v27);
    sub_1D446A888();
    unint64_t v20 = sub_1D446A218();
    *(void *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    uint64_t result = sub_1D42CAA68((uint64_t)v5, *(void *)(v8 + 48) + v20 * v19, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    ++*(void *)(v8 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13)
  {
LABEL_23:
    uint64_t result = swift_release_n();
    uint64_t v1 = v25;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v26 + 8 * v23);
  if (v22)
  {
    int64_t v16 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v16);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1D434FB50()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1D42D5DA0(&qword_1EA6CA168);
  uint64_t v3 = sub_1D446A328();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1D446A828();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1D446A888();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x1D434FE70);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1D434FE84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469688();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMIPItemPairingState();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D42D5DA0(&qword_1EA6C9FF8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  unint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1D42CA620(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPItemPairingState);
  sub_1D42CA620(a2, v15, (uint64_t (*)(void))type metadata accessor for FMIPItemPairingState);
  uint64_t v16 = sub_1D42D5DA0(&qword_1EA6C9FD0);
  unint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  switch(v17((uint64_t)v14, 3, v16))
  {
    case 1u:
      if (v17(v15, 3, v16) != 1) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 2u:
      if (v17(v15, 3, v16) != 2) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 3u:
      if (v17(v15, 3, v16) != 3) {
        goto LABEL_9;
      }
LABEL_5:
      sub_1D42CA828((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPItemPairingState);
      char v18 = 1;
      break;
    default:
      sub_1D42CA620((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPItemPairingState);
      if (v17(v15, 3, v16))
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_9:
        sub_1D4276C3C((uint64_t)v14, &qword_1EA6C9FF8);
        char v18 = 0;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
        char v18 = sub_1D4469658();
        unint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
        v20(v7, v4);
        v20(v10, v4);
        sub_1D42CA828((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPItemPairingState);
      }
      break;
  }
  return v18 & 1;
}

uint64_t sub_1D4350200(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v55 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1D4469688();
  uint64_t v4 = *(void *)(v57 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v57);
  uint64_t v51 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v49 = (char *)&v48 - v7;
  uint64_t v8 = type metadata accessor for FMIPItemPairingState();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v60 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42D5DA0(&qword_1EA6CA138);
  uint64_t result = sub_1D446A4A8();
  uint64_t v12 = (void *)result;
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v58 = a1 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v59 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v52 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  int64_t v53 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v50 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  uint64_t v18 = a1;
  uint64_t v61 = result + 64;
  uint64_t v56 = a1;
  uint64_t v54 = v9;
  if ((v16 & v14) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v19 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v13 << 6))
  {
    BOOL v24 = (uint64_t *)(*(void *)(v18 + 48) + 16 * i);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = *(void **)(*(void *)(v18 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    id v28 = v27;
    id v29 = objc_msgSend(v28, sel_status);
    if (v29 == (id)2)
    {

      uint64_t v32 = sub_1D42D5DA0(&qword_1EA6C9FD0);
      uint64_t v31 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v60, 3, 3, v32);
      goto LABEL_31;
    }
    if (v29 == (id)1)
    {
      id v33 = objc_msgSend(v28, sel_beaconIdentifier);
      if (v33)
      {
        uint64_t v34 = v33;
        uint64_t v35 = v51;
        sub_1D4469668();

        unint64_t v36 = *v52;
        uint64_t v37 = (uint64_t)v55;
        char v38 = v35;
        uint64_t v39 = v57;
        (*v52)(v55, v38, v57);
        (*v53)(v37, 0, 1, v39);
        if ((*v50)(v37, 1, v39) != 1)
        {
          uint64_t v40 = v57;
          v36(v49, (char *)v37, v57);
          uint64_t v31 = (uint64_t)v60;
          v36(v60, v49, v40);
          uint64_t v41 = sub_1D42D5DA0(&qword_1EA6C9FD0);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v31, 0, 3, v41);
LABEL_30:
          uint64_t v18 = v56;
          uint64_t v9 = v54;
          goto LABEL_31;
        }
      }
      else
      {

        uint64_t v37 = (uint64_t)v55;
        (*v53)((uint64_t)v55, 1, 1, v57);
      }
      sub_1D4276C3C(v37, (uint64_t *)&unk_1EBD7E930);
      uint64_t v43 = sub_1D42D5DA0(&qword_1EA6C9FD0);
      uint64_t v31 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v60, 1, 3, v43);
      goto LABEL_30;
    }
    if (v29)
    {

      uint64_t v42 = sub_1D42D5DA0(&qword_1EA6C9FD0);
      uint64_t v31 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v60, 1, 3, v42);
    }
    else
    {

      uint64_t v30 = sub_1D42D5DA0(&qword_1EA6C9FD0);
      uint64_t v31 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v60, 2, 3, v30);
    }
LABEL_31:
    *(void *)(v61 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v44 = (void *)(v12[6] + 16 * i);
    *uint64_t v44 = v25;
    v44[1] = v26;
    uint64_t result = sub_1D42CAA68(v31, v12[7] + *(void *)(v9 + 72) * i, (uint64_t (*)(void))type metadata accessor for FMIPItemPairingState);
    uint64_t v45 = v12[2];
    BOOL v46 = __OFADD__(v45, 1);
    uint64_t v47 = v45 + 1;
    if (v46)
    {
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    _OWORD v12[2] = v47;
    if (v17) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_36;
    }
    if (v21 >= v59) {
      return (uint64_t)v12;
    }
    unint64_t v22 = *(void *)(v58 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v59) {
        return (uint64_t)v12;
      }
      unint64_t v22 = *(void *)(v58 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v59) {
          return (uint64_t)v12;
        }
        unint64_t v22 = *(void *)(v58 + 8 * v13);
        if (!v22) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v17 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v59) {
    return (uint64_t)v12;
  }
  unint64_t v22 = *(void *)(v58 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v59) {
      return (uint64_t)v12;
    }
    unint64_t v22 = *(void *)(v58 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_18;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D4350840(long long *a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469688();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *((void *)a1 + 8);
  long long v12 = a1[1];
  long long v37 = *a1;
  long long v38 = v12;
  long long v13 = a1[2];
  long long v14 = a1[3];
  id v29 = a1;
  long long v39 = v13;
  long long v40 = v14;
  uint64_t v41 = v11;
  uint64_t v15 = sub_1D446A888();
  uint64_t v16 = *(void *)(a2 + 56);
  uint64_t v31 = a2 + 56;
  uint64_t v32 = v15;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v30 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v34 = v5 + 16;
  uint64_t v35 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v33 = v5 + 48;
  uint64_t v36 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  int64_t v22 = 0;
  if (!v19) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v23 | (v22 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v22 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(void *)(v36 + 48) + *(void *)(v5 + 72) * i, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
      goto LABEL_19;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_1D42AAE28(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
    uint64_t v28 = sub_1D4469AC8();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v21 ^= v28;
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v22++, 1)) {
      goto LABEL_21;
    }
    if (v22 >= v30) {
      goto LABEL_18;
    }
    unint64_t v26 = *(void *)(v31 + 8 * v22);
    if (!v26) {
      break;
    }
LABEL_14:
    unint64_t v19 = (v26 - 1) & v26;
  }
  int64_t v27 = v22 + 1;
  if (v22 + 1 >= v30)
  {
LABEL_18:
    (*v35)(v10, 1, 1, v4);
LABEL_19:
    swift_release();
    return sub_1D446A838();
  }
  unint64_t v26 = *(void *)(v31 + 8 * v27);
  if (v26)
  {
    ++v22;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v22 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v22 >= v30) {
      goto LABEL_18;
    }
    unint64_t v26 = *(void *)(v31 + 8 * v22);
    ++v27;
    if (v26) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1D4350BA0(long long *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPItem();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v29 - v8;
  uint64_t v10 = *((void *)a1 + 8);
  long long v11 = a1[1];
  long long v31 = *a1;
  long long v32 = v11;
  long long v12 = a1[2];
  long long v13 = a1[3];
  v29[0] = a1;
  long long v33 = v12;
  long long v34 = v13;
  uint64_t v35 = v10;
  v29[1] = sub_1D446A888();
  uint64_t v14 = a2 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(a2 + 56);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v19 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  int64_t v22 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v22 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v22++, 1)) {
      goto LABEL_19;
    }
    if (v22 >= v18)
    {
LABEL_17:
      swift_release();
      return sub_1D446A838();
    }
    unint64_t v27 = *(void *)(v14 + 8 * v22);
    if (!v27) {
      break;
    }
LABEL_16:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v22 << 6);
LABEL_5:
    sub_1D42CA620(*(void *)(v19 + 48) + *(void *)(v30 + 72) * v24, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CAA68((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D446A828();
    swift_bridgeObjectRetain();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_1D446A888();
    uint64_t result = sub_1D42CA828((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    v21 ^= v25;
  }
  int64_t v28 = v22 + 1;
  if (v22 + 1 >= v18) {
    goto LABEL_17;
  }
  unint64_t v27 = *(void *)(v14 + 8 * v28);
  if (v27)
  {
    ++v22;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v22 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v22 >= v18) {
      goto LABEL_17;
    }
    unint64_t v27 = *(void *)(v14 + 8 * v22);
    ++v28;
    if (v27) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t _s8FMIPCore13FMIPItemGroupV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for FMIPItemLostModeMetadata();
  uint64_t v77 = *(void *)(v4 - 8);
  uint64_t v78 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v73 = (void **)((char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7E710);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v74 = (void **)((char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v76 = sub_1D42D5DA0(&qword_1EA6CA1B0);
  MEMORY[0x1F4188790](v76);
  uint64_t v79 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for FMIPItemGroup();
  uint64_t v9 = MEMORY[0x1F4188790](v75);
  id v87 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v88 = (uint64_t)&v73 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v85 = (char *)&v73 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v86 = (char *)&v73 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v83 = (char *)&v73 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v82 = (char *)&v73 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v80 = (uint64_t)&v73 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v81 = (uint64_t)&v73 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v84 = (uint64_t)&v73 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  id v29 = (char *)&v73 - v28;
  uint64_t v30 = MEMORY[0x1F4188790](v27);
  long long v32 = (char *)&v73 - v31;
  uint64_t v33 = MEMORY[0x1F4188790](v30);
  uint64_t v35 = (char *)&v73 - v34;
  uint64_t v36 = MEMORY[0x1F4188790](v33);
  long long v38 = (char *)&v73 - v37;
  MEMORY[0x1F4188790](v36);
  long long v40 = (char *)&v73 - v39;
  uint64_t v41 = *a1;
  uint64_t v42 = *a2;
  sub_1D42CA620((uint64_t)a1, (uint64_t)&v73 - v39, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42CA620((uint64_t)a2, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  if (v41 != v42)
  {
    sub_1D42CA828((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA828((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA620((uint64_t)a1, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA620((uint64_t)a2, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    goto LABEL_6;
  }
  if (*((void *)v40 + 1) != *((void *)v38 + 1) || *((void *)v40 + 2) != *((void *)v38 + 2))
  {
    char v55 = sub_1D446A758();
    sub_1D42CA828((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA828((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA620((uint64_t)a1, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA620((uint64_t)a2, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    if (v55) {
      goto LABEL_15;
    }
LABEL_6:
    sub_1D42CA828((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA828((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA620((uint64_t)a1, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v43 = v84;
    sub_1D42CA620((uint64_t)a2, v84, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v45 = (uint64_t)v85;
    uint64_t v44 = (uint64_t)v86;
    goto LABEL_7;
  }
  sub_1D42CA828((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42CA828((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42CA620((uint64_t)a1, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42CA620((uint64_t)a2, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
LABEL_15:
  if (*((void *)v35 + 3) == *((void *)v32 + 3) && *((void *)v35 + 4) == *((void *)v32 + 4))
  {
    sub_1D42CA828((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA828((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA620((uint64_t)a1, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v43 = v84;
    sub_1D42CA620((uint64_t)a2, v84, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v45 = (uint64_t)v85;
    uint64_t v44 = (uint64_t)v86;
    goto LABEL_19;
  }
  char v56 = sub_1D446A758();
  sub_1D42CA828((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42CA828((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42CA620((uint64_t)a1, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  uint64_t v43 = v84;
  sub_1D42CA620((uint64_t)a2, v84, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  uint64_t v45 = (uint64_t)v85;
  uint64_t v44 = (uint64_t)v86;
  if ((v56 & 1) == 0)
  {
LABEL_7:
    sub_1D42CA828((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA828(v43, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v46 = v81;
    sub_1D42CA620((uint64_t)a1, v81, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v47 = v80;
    sub_1D42CA620((uint64_t)a2, v80, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v49 = (uint64_t)v82;
    uint64_t v48 = (uint64_t)v83;
LABEL_8:
    sub_1D42CA828(v47, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA828(v46, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA620((uint64_t)a1, v49, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA620((uint64_t)a2, v48, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v50 = (uint64_t)v87;
LABEL_9:
    sub_1D42CA828(v49, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA828(v48, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA620((uint64_t)a1, v44, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA620((uint64_t)a2, v45, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
LABEL_10:
    sub_1D42CA828(v45, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA828(v44, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v51 = (uint64_t)a1;
    uint64_t v52 = v88;
    sub_1D42CA620(v51, v88, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA620((uint64_t)a2, v50, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
LABEL_11:
    sub_1D42CA828(v50, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA828(v52, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    goto LABEL_12;
  }
LABEL_19:
  char v57 = sub_1D4298E70(*((void *)v29 + 5), *(void *)(v43 + 40));
  sub_1D42CA828((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42CA828(v43, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  uint64_t v46 = v81;
  sub_1D42CA620((uint64_t)a1, v81, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  uint64_t v47 = v80;
  sub_1D42CA620((uint64_t)a2, v80, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  uint64_t v49 = (uint64_t)v82;
  uint64_t v48 = (uint64_t)v83;
  if ((v57 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v58 = v47;
  uint64_t v59 = *(void *)(v46 + 64);
  uint64_t v60 = *(void *)(v58 + 64);
  sub_1D42CA828(v58, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42CA828(v46, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42CA620((uint64_t)a1, v49, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42CA620((uint64_t)a2, v48, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  uint64_t v50 = (uint64_t)v87;
  if (v59 != v60) {
    goto LABEL_9;
  }
  char v61 = sub_1D43EED0C(*(void *)(v49 + 56), *(void *)(v48 + 56));
  sub_1D42CA828(v49, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42CA828(v48, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42CA620((uint64_t)a1, v44, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42CA620((uint64_t)a2, v45, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  if ((v61 & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v62 = *(void *)(v44 + 64);
  uint64_t v63 = *(void *)(v45 + 64);
  sub_1D42CA828(v45, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42CA828(v44, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  uint64_t v64 = (uint64_t)a1;
  uint64_t v52 = v88;
  sub_1D42CA620(v64, v88, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42CA620((uint64_t)a2, v50, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  if (v62 != v63) {
    goto LABEL_11;
  }
  uint64_t v65 = *(int *)(v75 + 48);
  uint64_t v66 = v50 + v65;
  uint64_t v67 = v79;
  uint64_t v68 = v79 + *(int *)(v76 + 48);
  sub_1D42A3A74(v52 + v65, v79, &qword_1EBD7E710);
  sub_1D42A3A74(v66, v68, &qword_1EBD7E710);
  uint64_t v69 = v78;
  uint64_t v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
  if (v70(v67, 1, v78) == 1)
  {
    sub_1D42CA828(v50, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA828(v52, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    if (v70(v68, 1, v69) == 1)
    {
      sub_1D4276C3C(v67, &qword_1EBD7E710);
      char v53 = 1;
      return v53 & 1;
    }
  }
  else
  {
    unint64_t v71 = v74;
    sub_1D42A3A74(v67, (uint64_t)v74, &qword_1EBD7E710);
    if (v70(v68, 1, v69) != 1)
    {
      unint64_t v72 = v73;
      sub_1D42CAA68(v68, (uint64_t)v73, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
      char v53 = _s8FMIPCore24FMIPItemLostModeMetadataV2eeoiySbAC_ACtFZ_0(v71, v72);
      sub_1D42CA828((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
      sub_1D42CA828(v50, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      sub_1D42CA828(v52, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      sub_1D42CA828((uint64_t)v71, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
      sub_1D4276C3C(v67, &qword_1EBD7E710);
      return v53 & 1;
    }
    sub_1D42CA828(v50, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA828(v52, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D42CA828((uint64_t)v71, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
  }
  sub_1D4276C3C(v67, &qword_1EA6CA1B0);
LABEL_12:
  char v53 = 0;
  return v53 & 1;
}

uint64_t sub_1D4351A40(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1D446A498();
    swift_bridgeObjectRelease();
  }
  sub_1D4275AD0(0, &qword_1EA6C9478);
  sub_1D4354620();
  uint64_t result = sub_1D4469EF8();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1D446A498();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)MEMORY[0x1D9446710](i, a1);
        sub_1D4347CE4(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_1D4347CE4(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D4351B94(uint64_t a1)
{
  return sub_1D43525AC(a1, (void (*)(void))sub_1D43544F0, (uint64_t)&type metadata for FMIPPlaySoundChannels, (void (*)(char *, void))sub_1D4347F8C);
}

uint64_t sub_1D4351BC8(uint64_t a1)
{
  uint64_t v2 = sub_1D4469688();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_1D42AAE28(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
  uint64_t v29 = sub_1D4469EF8();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    uint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_1D43482D8(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_1D4351E70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1D42D5DA0(&qword_1EA6C9EA0);
  sub_1D435482C(&qword_1EA6CA0C8, &qword_1EA6C9EA0);
  uint64_t result = sub_1D4469EF8();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      swift_bridgeObjectRetain();
      sub_1D43485FC(&v6, v5, (void (*)(void *, uint64_t))sub_1D4350840, sub_1D42C93E4, (void (*)(uint64_t, unint64_t, uint64_t))sub_1D434BE58);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1D4351F50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1D42D5DA0(&qword_1EA6C9E90);
  sub_1D435482C(&qword_1EA6CA1A0, &qword_1EA6C9E90);
  uint64_t result = sub_1D4469EF8();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      swift_bridgeObjectRetain();
      sub_1D43485FC(&v6, v5, (void (*)(void *, uint64_t))sub_1D4350BA0, sub_1D43EFBC0, (void (*)(uint64_t, unint64_t, uint64_t))sub_1D434C2D0);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1D4352030(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPItem();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1D42AAE28(&qword_1EA6CA0F8, (void (*)(uint64_t))type metadata accessor for FMIPItem);
  uint64_t result = sub_1D4469EF8();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_1D42CA620(v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      sub_1D43487B0((uint64_t)v8, (uint64_t)v6);
      sub_1D42CA828((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_1D43521C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1D4469EF8();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1D4348A4C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1D4352258(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1D42AAE28(&qword_1EA6CA188, (void (*)(uint64_t))type metadata accessor for FMIPDiscoveredAccessory);
  uint64_t result = sub_1D4469EF8();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_1D42CA620(v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      sub_1D4348BFC((uint64_t)v8, v6);
      sub_1D42CA828((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_1D43523E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPUnknownItem();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1D42AAE28(&qword_1EA6CA178, (void (*)(uint64_t))type metadata accessor for FMIPUnknownItem);
  uint64_t result = sub_1D4469EF8();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_1D42CA620(v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
      sub_1D4348E80((uint64_t)v8, (uint64_t)v6);
      sub_1D42CA828((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_1D4352578(uint64_t a1)
{
  return sub_1D43525AC(a1, (void (*)(void))sub_1D4354544, (uint64_t)&type metadata for FMIPPartType, (void (*)(char *, void))sub_1D4349104);
}

uint64_t sub_1D43525AC(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  a2();
  uint64_t result = sub_1D4469EF8();
  uint64_t v11 = result;
  if (v6)
  {
    uint64_t v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_1D435262C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4) {
    return v5;
  }
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1D4337228(0, v4, 0);
  uint64_t v5 = v22;
  uint64_t result = sub_1D4386D70(a1);
  uint64_t v8 = result;
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(a1 + 56 + (((unint64_t)v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(a1 + 36) != v10) {
      goto LABEL_14;
    }
    uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8 * v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = v3;
    uint64_t v15 = sub_1D4387714(v13, a2);
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1D4352030(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v18 = *(void *)(v22 + 16);
    unint64_t v17 = *(void *)(v22 + 24);
    if (v18 >= v17 >> 1) {
      sub_1D4337228(v17 > 1, v18 + 1, 1);
    }
    *(void *)(v22 + 16) = v18 + 1;
    *(void *)(v22 + 8 * v18 + 32) = v16;
    uint64_t result = sub_1D4449D08(v8, v10, v12 & 1, a1);
    uint64_t v8 = result;
    uint64_t v10 = v19;
    char v12 = v20 & 1;
    --v4;
    uint64_t v3 = v14;
    if (!v4)
    {
      sub_1D4329478(result, v19, v20 & 1);
      return v5;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1D43527EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v36[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v36[-v8];
  uint64_t v10 = sub_1D4469688();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v48 = &v36[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  char v55 = &v36[-v14];
  uint64_t v15 = type metadata accessor for FMIPItem() - 8;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  long long v38 = &v36[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v16);
  char v20 = &v36[-v19];
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v58 = MEMORY[0x1E4FBC860];
  uint64_t v45 = *(void *)(a1 + 16);
  if (v45)
  {
    uint64_t v22 = 0;
    unint64_t v37 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v43 = a2;
    uint64_t v44 = a1 + v37;
    uint64_t v46 = *(void *)(v18 + 72);
    char v57 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v49 = v11 + 16;
    uint64_t v23 = v11 + 56;
    char v53 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32);
    uint64_t v54 = (void (**)(unsigned char *, uint64_t))(v11 + 8);
    uint64_t v41 = v11;
    uint64_t v42 = v9;
    long long v40 = &v36[-v19];
    do
    {
      uint64_t v47 = v22;
      sub_1D42CA620(v44 + v46 * v22, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      sub_1D4469628();
      char v56 = *v57;
      if (v56(v9, 1, v10) == 1)
      {
        sub_1D4276C3C((uint64_t)v9, (uint64_t *)&unk_1EBD7E930);
      }
      else
      {
        uint64_t v52 = *v53;
        v52(v55, v9, v10);
        uint64_t v24 = *(void *)(a2 + 16);
        if (v24)
        {
          unint64_t v39 = v23 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
          uint64_t v25 = v11;
          uint64_t v26 = a2 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
          uint64_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v25 + 16);
          uint64_t v50 = *(void *)(v25 + 72);
          uint64_t v51 = v27;
          swift_bridgeObjectRetain();
          while (1)
          {
            v51(v7, v26, v10);
            uint64_t v28 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))v23;
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))v23)(v7, 0, 1, v10);
            if (v56(v7, 1, v10) == 1) {
              break;
            }
            uint64_t v29 = v48;
            uint64_t v30 = v7;
            v52(v48, v7, v10);
            sub_1D42AAE28(&qword_1EA6CA0E8, MEMORY[0x1E4F27990]);
            char v31 = sub_1D4469AF8();
            long long v32 = *v54;
            (*v54)(v29, v10);
            if (v31)
            {
              a2 = v43;
              swift_bridgeObjectRelease();
              v32(v55, v10);
              char v20 = v40;
              sub_1D42CAA68((uint64_t)v40, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FMIPItem);
              uint64_t v33 = v58;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1D4337258(0, *(void *)(v33 + 16) + 1, 1);
                uint64_t v33 = v58;
              }
              uint64_t v7 = v30;
              unint64_t v35 = *(void *)(v33 + 16);
              unint64_t v34 = *(void *)(v33 + 24);
              if (v35 >= v34 >> 1)
              {
                sub_1D4337258(v34 > 1, v35 + 1, 1);
                uint64_t v33 = v58;
              }
              *(void *)(v33 + 16) = v35 + 1;
              sub_1D42CAA68((uint64_t)v38, v33 + v37 + v35 * v46, (uint64_t (*)(void))type metadata accessor for FMIPItem);
              uint64_t v11 = v41;
              uint64_t v9 = v42;
              goto LABEL_5;
            }
            v26 += v50;
            --v24;
            uint64_t v7 = v30;
            if (!v24) {
              goto LABEL_14;
            }
          }
        }
        else
        {
          uint64_t v28 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))v23;
          swift_bridgeObjectRetain();
LABEL_14:
          v28(v7, 1, 1, v10);
        }
        a2 = v43;
        swift_bridgeObjectRelease();
        (*v54)(v55, v10);
        uint64_t v11 = v41;
        uint64_t v9 = v42;
        char v20 = v40;
      }
      sub_1D42CA828((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_5:
      uint64_t v22 = v47 + 1;
    }
    while (v47 + 1 != v45);
    return v58;
  }
  return result;
}

unint64_t sub_1D4352D90()
{
  unint64_t result = qword_1EA6CA078;
  if (!qword_1EA6CA078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA078);
  }
  return result;
}

unint64_t sub_1D4352DE4()
{
  unint64_t result = qword_1EA6CA080;
  if (!qword_1EA6CA080)
  {
    sub_1D42DB55C((uint64_t *)&unk_1EA6CA520);
    sub_1D42AAE28(&qword_1EA6CA530, (void (*)(uint64_t))type metadata accessor for FMIPItem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA080);
  }
  return result;
}

unint64_t sub_1D4352E88()
{
  unint64_t result = qword_1EA6CA090;
  if (!qword_1EA6CA090)
  {
    sub_1D42DB55C(&qword_1EA6C9E90);
    sub_1D42AAE28(&qword_1EA6CA530, (void (*)(uint64_t))type metadata accessor for FMIPItem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA090);
  }
  return result;
}

unint64_t sub_1D4352F2C()
{
  unint64_t result = qword_1EA6CA480;
  if (!qword_1EA6CA480)
  {
    sub_1D42DB55C(&qword_1EA6C9EB0);
    sub_1D42AAE28(&qword_1EA6C9FE0, MEMORY[0x1E4F27990]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA480);
  }
  return result;
}

uint64_t sub_1D4352FD0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D42DB55C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D435303C()
{
  unint64_t result = qword_1EA6CA0A0;
  if (!qword_1EA6CA0A0)
  {
    sub_1D42DB55C(&qword_1EA6C9EA0);
    sub_1D42AAE28(&qword_1EA6C9FE0, MEMORY[0x1E4F27990]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA0A0);
  }
  return result;
}

unint64_t sub_1D43530E0()
{
  unint64_t result = qword_1EA6CA0A8;
  if (!qword_1EA6CA0A8)
  {
    sub_1D42DB55C(&qword_1EA6CA030);
    sub_1D42AAE28(&qword_1EA6CA0B0, (void (*)(uint64_t))type metadata accessor for FMIPItemPairingState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA0A8);
  }
  return result;
}

unint64_t sub_1D435318C()
{
  unint64_t result = qword_1EA6CA0B8;
  if (!qword_1EA6CA0B8)
  {
    sub_1D42DB55C(&qword_1EBD7E710);
    sub_1D42AAE28(&qword_1EA6CA0C0, (void (*)(uint64_t))type metadata accessor for FMIPItemLostModeMetadata);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA0B8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FMIPItemGroup(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = a2[9];
    uint64_t v10 = *(int *)(a3 + 48);
    __dst = (uint64_t *)((char *)a1 + v10);
    uint64_t v29 = (uint64_t *)((char *)a2 + v10);
    a1[8] = a2[8];
    a1[9] = v9;
    uint64_t v11 = type metadata accessor for FMIPItemLostModeMetadata();
    uint64_t v26 = *(void *)(v11 - 8);
    uint64_t v27 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v29, 1, v11))
    {
      uint64_t v12 = sub_1D42D5DA0(&qword_1EBD7E710);
      memcpy(__dst, v29, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = v29[1];
      void *__dst = *v29;
      __dst[1] = v14;
      uint64_t v15 = v29[3];
      __dst[2] = v29[2];
      __dst[3] = v15;
      uint64_t v16 = *(int *)(v11 + 24);
      uint64_t v28 = (char *)__dst + v16;
      uint64_t v25 = (char *)v29 + v16;
      uint64_t v17 = sub_1D4469618();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v28, v25, v17);
      uint64_t v19 = *(int *)(v11 + 28);
      char v20 = (void *)((char *)__dst + v19);
      uint64_t v21 = (void *)((char *)v29 + v19);
      uint64_t v22 = v21[1];
      void *v20 = *v21;
      v20[1] = v22;
      uint64_t v23 = *(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56);
      swift_bridgeObjectRetain();
      v23(__dst, 0, 1, v11);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 52)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 52));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FMIPItemGroup(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t v5 = type metadata accessor for FMIPItemLostModeMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMIPItemGroup(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v9 = *(int *)(a3 + 48);
  __dst = (void *)(a1 + v9);
  uint64_t v27 = (void *)(a2 + v9);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v10 = type metadata accessor for FMIPItemLostModeMetadata();
  uint64_t v24 = *(void *)(v10 - 8);
  uint64_t v25 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25(v27, 1, v10))
  {
    uint64_t v11 = sub_1D42D5DA0(&qword_1EBD7E710);
    memcpy(__dst, v27, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = v27[1];
    void *__dst = *v27;
    __dst[1] = v12;
    uint64_t v13 = v27[3];
    __dst[2] = v27[2];
    __dst[3] = v13;
    uint64_t v14 = *(int *)(v10 + 24);
    uint64_t v26 = (char *)__dst + v14;
    uint64_t v23 = (char *)v27 + v14;
    uint64_t v15 = sub_1D4469618();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v26, v23, v15);
    uint64_t v17 = *(int *)(v10 + 28);
    uint64_t v18 = (void *)((char *)__dst + v17);
    uint64_t v19 = (void *)((char *)v27 + v17);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = *(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56);
    swift_bridgeObjectRetain();
    v21(__dst, 0, 1, v10);
  }
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FMIPItemGroup(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 48);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for FMIPItemLostModeMetadata();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7[2] = v8[2];
      v7[3] = v8[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v22 = *(int *)(v9 + 24);
      uint64_t v23 = (char *)v7 + v22;
      uint64_t v24 = (char *)v8 + v22;
      uint64_t v25 = sub_1D4469618();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
      uint64_t v26 = *(int *)(v9 + 28);
      uint64_t v27 = (void *)((char *)v7 + v26);
      uint64_t v28 = (void *)((char *)v8 + v26);
      *uint64_t v27 = *v28;
      v27[1] = v28[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1D42CA828((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v20 = sub_1D42D5DA0(&qword_1EBD7E710);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  uint64_t v14 = *(int *)(v9 + 24);
  uint64_t v30 = (char *)v8 + v14;
  char v31 = (char *)v7 + v14;
  uint64_t v15 = sub_1D4469618();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29(v31, v30, v15);
  uint64_t v16 = *(int *)(v9 + 28);
  uint64_t v17 = (void *)((char *)v7 + v16);
  uint64_t v18 = (void *)((char *)v8 + v16);
  void *v17 = *v18;
  v17[1] = v18[1];
  uint64_t v19 = *(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56);
  swift_bridgeObjectRetain();
  v19(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 52)) = *(void *)((char *)a2 + *(int *)(a3 + 52));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FMIPItemGroup(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v7 = *(int *)(a3 + 48);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + 56) = v6;
  uint64_t v10 = type metadata accessor for FMIPItemLostModeMetadata();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_1D42D5DA0(&qword_1EBD7E710);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    long long v13 = v9[1];
    _OWORD *v8 = *v9;
    v8[1] = v13;
    uint64_t v14 = *(int *)(v10 + 24);
    uint64_t v15 = (char *)v8 + v14;
    uint64_t v16 = (char *)v9 + v14;
    uint64_t v17 = sub_1D4469618();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    *(_OWORD *)((char *)v8 + *(int *)(v10 + 28)) = *(_OWORD *)((char *)v9 + *(int *)(v10 + 28));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  return a1;
}

uint64_t assignWithTake for FMIPItemGroup(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 48);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for FMIPItemLostModeMetadata();
  uint64_t v12 = *(void *)(v11 - 8);
  long long v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      uint64_t v23 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = v10[3];
      void v9[2] = v10[2];
      v9[3] = v24;
      swift_bridgeObjectRelease();
      uint64_t v25 = *(int *)(v11 + 24);
      uint64_t v26 = (char *)v9 + v25;
      uint64_t v27 = (char *)v10 + v25;
      uint64_t v28 = sub_1D4469618();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
      uint64_t v29 = *(int *)(v11 + 28);
      uint64_t v30 = (void *)((char *)v9 + v29);
      char v31 = (void *)((char *)v10 + v29);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      *uint64_t v30 = v33;
      v30[1] = v32;
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1D42CA828((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v21 = sub_1D42D5DA0(&qword_1EBD7E710);
    memcpy(v9, v10, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  long long v16 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v16;
  uint64_t v17 = *(int *)(v11 + 24);
  uint64_t v18 = (char *)v9 + v17;
  uint64_t v19 = (char *)v10 + v17;
  uint64_t v20 = sub_1D4469618();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  *(_OWORD *)((char *)v9 + *(int *)(v11 + 28)) = *(_OWORD *)((char *)v10 + *(int *)(v11 + 28));
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D4353FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1D42D5DA0(&qword_1EBD7E710);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1D4354058(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1D42D5DA0(&qword_1EBD7E710);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPItemGroup.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPItemGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4354260);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

unint64_t sub_1D435428C()
{
  unint64_t result = qword_1EA6CA0D0;
  if (!qword_1EA6CA0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA0D0);
  }
  return result;
}

uint64_t sub_1D43542E0()
{
  unint64_t v0 = sub_1D446A518();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D435432C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1D4345C70(a1, a2, *(void **)(v3 + 16), a3);
}

void sub_1D4354334(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  sub_1D4345D84(a1, a2, a3, *(void **)(v4 + 16), a4);
}

uint64_t sub_1D435433C(uint64_t a1)
{
  return sub_1D434FE84(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1D435435C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1D42D5DA0(&qword_1EA6CA130);
    uint64_t v3 = sub_1D446A348();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v21 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void *)(v21 + 8 * v4);
      sub_1D446A828();
      swift_bridgeObjectRetain();
      sub_1D4350840(v22, v6);
      uint64_t result = sub_1D446A888();
      uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v9 = result & ~v8;
      unint64_t v10 = v9 >> 6;
      uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
      uint64_t v12 = 1 << v9;
      if (((1 << v9) & v11) != 0)
      {
        uint64_t v13 = swift_bridgeObjectRetain();
        char v14 = sub_1D42C93E4(v13, v6);
        uint64_t result = swift_bridgeObjectRelease();
        if (v14)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v15 = ~v8;
        while (1)
        {
          unint64_t v9 = (v9 + 1) & v15;
          unint64_t v10 = v9 >> 6;
          uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
          uint64_t v12 = 1 << v9;
          if ((v11 & (1 << v9)) == 0) {
            break;
          }
          uint64_t v16 = swift_bridgeObjectRetain();
          char v17 = sub_1D42C93E4(v16, v6);
          uint64_t result = swift_bridgeObjectRelease();
          if (v17) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v10) = v12 | v11;
      *(void *)(*(void *)(v3 + 48) + 8 * v9) = v6;
      uint64_t v18 = *(void *)(v3 + 16);
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v20;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

unint64_t sub_1D43544F0()
{
  unint64_t result = qword_1EA6CA148;
  if (!qword_1EA6CA148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA148);
  }
  return result;
}

unint64_t sub_1D4354544()
{
  unint64_t result = qword_1EA6CA160;
  if (!qword_1EA6CA160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA160);
  }
  return result;
}

uint64_t sub_1D4354598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D43545DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1D4354620()
{
  unint64_t result = qword_1EA6C9480;
  if (!qword_1EA6C9480)
  {
    sub_1D4275AD0(255, &qword_1EA6C9478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C9480);
  }
  return result;
}

uint64_t sub_1D4354688(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1D42D5DA0(&qword_1EA6CA140);
    uint64_t v3 = sub_1D446A348();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1D446A828();
      swift_bridgeObjectRetain();
      sub_1D4469BC8();
      uint64_t result = sub_1D446A888();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_1D446A758(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          BOOL v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_1D446A758();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1D435482C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D42DB55C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D435487C(void *a1)
{
  return sub_1D43548C8(a1);
}

uint64_t sub_1D43548C8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EBD7D9A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 56) = 0;
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42E5D2C();
  swift_retain();
  sub_1D446A8C8();
  if (v2)
  {
    swift_release();
    sub_1D42BEC64((uint64_t)a1);
    swift_bridgeObjectRelease();
    type metadata accessor for FMIPRefreshClientResponse();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1D42D5DA0(&qword_1EBD7D8C0);
    LOBYTE(v25) = 4;
    sub_1D42E222C();
    sub_1D446A5D8();
    *(void *)(v1 + 56) = v24[0];
    swift_release();
    swift_bridgeObjectRelease();
    sub_1D42A4D5C((uint64_t)a1, (uint64_t)v24);
    uint64_t v3 = sub_1D427E300(v24);
    uint64_t v9 = qword_1EBD80068;
    swift_retain();
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1D4469928();
    sub_1D42D7FAC(v10, (uint64_t)qword_1EBD83228);
    swift_retain_n();
    unint64_t v11 = sub_1D44698F8();
    os_log_type_t v12 = sub_1D446A038();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_t v23 = v11;
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v24[0] = v22;
      uint64_t v21 = v13;
      *(_DWORD *)uint64_t v13 = 136315138;
      v20[1] = v13 + 4;
      uint64_t v14 = sub_1D429F0AC();
      uint64_t v25 = sub_1D42CB9EC(v14, v15, v24);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      unint64_t v11 = v23;
      os_log_type_t v16 = v12;
      BOOL v17 = v21;
      _os_log_impl(&dword_1D4271000, v23, v16, "FMIPInitClientResponse: initialized with coder %s", v21, 0xCu);
      uint64_t v18 = v22;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v18, -1, -1);
      MEMORY[0x1D9447730](v17, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1D42BEC64((uint64_t)a1);
    swift_release();
  }
  return v3;
}

uint64_t sub_1D4354C90(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1D4354CE8(&qword_1EA6CA1B8, a2, (void (*)(uint64_t))type metadata accessor for FMIPRefreshClientResponse);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D4354CE8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FMIPDiscoveredAccessory.defaultRole.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  return sub_1D4354598(v2, v3, v4);
}

uint64_t FMIPDiscoveredAccessory.productInformation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMIPDiscoveredAccessory() + 24);
  return sub_1D430070C(v3, a1);
}

void FMIPDiscoveredAccessory.identifier.getter()
{
  id v1 = objc_msgSend(*v0, sel_identifier);
  sub_1D4469668();
}

uint64_t FMIPDiscoveredAccessory.displayName.getter()
{
  uint64_t v1 = sub_1D42D5DA0(&qword_1EA6C97A0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FMIPDiscoveredAccessory();
  sub_1D430070C(v0 + *(int *)(v4 + 24), (uint64_t)v3);
  uint64_t v5 = type metadata accessor for FMIPHawkeyeProductInformation();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_1D4276C3C((uint64_t)v3, &qword_1EA6C97A0);
    return 0x726F737365636341;
  }
  else
  {
    uint64_t v6 = *((void *)v3 + 2);
    swift_bridgeObjectRetain();
    sub_1D4354F04((uint64_t)v3);
  }
  return v6;
}

uint64_t sub_1D4354F04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPHawkeyeProductInformation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id FMIPDiscoveredAccessory.displayType.getter()
{
  id v1 = objc_msgSend(*v0, sel_productInformation);
  uint64_t v2 = v1;
  if (!v1) {
    return 0;
  }
  id v3 = objc_msgSend(v1, sel_defaultRole);

  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_role);

    id v3 = (id)sub_1D4469B38();
  }
  return v3;
}

uint64_t FMIPDiscoveredAccessory.batteryReplacementURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*v1, sel_productInformation);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel_lowBatteryInfoURL);

    if (v8)
    {
      sub_1D4469468();

      uint64_t v9 = sub_1D4469498();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 0, 1, v9);
    }
    else
    {
      uint64_t v13 = sub_1D4469498();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
    }
    return sub_1D42E8438((uint64_t)v5, a1);
  }
  else
  {
    uint64_t v10 = sub_1D4469498();
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    return v11(a1, 1, 1, v10);
  }
}

id FMIPDiscoveredAccessory.isEligibleForPairing.getter()
{
  id v1 = objc_msgSend(*v0, sel_productInformation);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_eligibleForPairing);

  return v3;
}

id FMIPDiscoveredAccessory.capabilities.getter()
{
  id result = objc_msgSend(*v0, sel_productInformation);
  if (result)
  {
    uint64_t v2 = result;
    id v3 = objc_msgSend(result, sel_capabilities);

    return v3;
  }
  return result;
}

uint64_t FMIPDiscoveredAccessory.hash(into:)()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D42D5DA0(&qword_1EA6C97A0);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *v0;
  sub_1D446A128();

  uint64_t v10 = (uint64_t)v1[3];
  if (v10)
  {
    uint64_t v16 = v2;
    BOOL v17 = v5;
    uint64_t v11 = (uint64_t)v1[1];
    uint64_t v12 = (uint64_t)v1[2];
    sub_1D446A848();
    sub_1D446A838();
    sub_1D4354598(v11, v12, v10);
    swift_bridgeObjectRetain();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
    uint64_t v13 = v11;
    uint64_t v2 = v16;
    uint64_t v5 = v17;
    sub_1D43545DC(v13, v12, v10);
  }
  else
  {
    sub_1D446A848();
  }
  uint64_t v14 = type metadata accessor for FMIPDiscoveredAccessory();
  sub_1D430070C((uint64_t)v1 + *(int *)(v14 + 24), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1) {
    return sub_1D446A848();
  }
  sub_1D4355580((uint64_t)v8, (uint64_t)v5);
  sub_1D446A848();
  FMIPHawkeyeProductInformation.hash(into:)();
  return sub_1D4354F04((uint64_t)v5);
}

uint64_t FMIPDiscoveredAccessory.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t sub_1D43554FC()
{
  return sub_1D446A888();
}

uint64_t sub_1D4355540()
{
  return sub_1D446A888();
}

uint64_t sub_1D4355580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPHawkeyeProductInformation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL _s8FMIPCore23FMIPDiscoveredAccessoryV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t v54 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EA6C9848);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D42D5DA0(&qword_1EA6C97A0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v47 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v47 - v17;
  sub_1D432B88C();
  if ((sub_1D446A118() & 1) == 0) {
    return 0;
  }
  uint64_t v49 = v7;
  uint64_t v50 = v16;
  uint64_t v52 = v9;
  char v53 = v18;
  uint64_t v47 = v6;
  uint64_t v48 = v13;
  uint64_t v51 = v4;
  uint64_t v20 = a1[1];
  uint64_t v19 = a1[2];
  uint64_t v21 = a1[3];
  uint64_t v23 = a2[1];
  uint64_t v22 = a2[2];
  uint64_t v24 = a2[3];
  if (!v21)
  {
    if (!v24) {
      goto LABEL_13;
    }
LABEL_17:
    uint64_t v41 = v19;
    uint64_t v42 = v22;
    sub_1D4354598(v23, v22, v24);
    sub_1D43545DC(v20, v41, v21);
    sub_1D43545DC(v23, v42, v24);
    return 0;
  }
  if (!v24)
  {
    uint64_t v39 = a1[2];
    uint64_t v40 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = v40;
    uint64_t v19 = v39;
    goto LABEL_17;
  }
  if (v20 != v23) {
    return 0;
  }
  if (a1[4] == a2[4] && a1[5] == a2[5]
    || (v25 = a1[2], v26 = a2[2], v27 = sub_1D446A758(), v22 = v26, uint64_t v19 = v25, v28 = v27, result = 0, (v28 & 1) != 0))
  {
    if (v19 == v22 && v21 == v24 || (char v30 = sub_1D446A758(), result = 0, (v30 & 1) != 0))
    {
LABEL_13:
      uint64_t v31 = type metadata accessor for FMIPDiscoveredAccessory();
      uint64_t v32 = (uint64_t)v53;
      sub_1D430070C((uint64_t)a1 + *(int *)(v31 + 24), (uint64_t)v53);
      uint64_t v33 = (uint64_t)a2 + *(int *)(v31 + 24);
      uint64_t v34 = (uint64_t)v50;
      sub_1D430070C(v33, (uint64_t)v50);
      uint64_t v35 = (uint64_t)v52;
      uint64_t v36 = (uint64_t)&v52[*(int *)(v49 + 48)];
      sub_1D430070C(v32, (uint64_t)v52);
      sub_1D430070C(v34, v36);
      unint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
      uint64_t v38 = v51;
      if (v37(v35, 1, v51) == 1)
      {
        sub_1D4276C3C(v34, &qword_1EA6C97A0);
        sub_1D4276C3C(v32, &qword_1EA6C97A0);
        if (v37(v36, 1, v38) == 1)
        {
          sub_1D4276C3C(v35, &qword_1EA6C97A0);
          return 1;
        }
        goto LABEL_20;
      }
      uint64_t v43 = (uint64_t)v48;
      sub_1D430070C(v35, (uint64_t)v48);
      if (v37(v36, 1, v38) == 1)
      {
        sub_1D4276C3C(v34, &qword_1EA6C97A0);
        sub_1D4276C3C((uint64_t)v53, &qword_1EA6C97A0);
        sub_1D4354F04(v43);
LABEL_20:
        sub_1D4276C3C(v35, &qword_1EA6C9848);
        return 0;
      }
      uint64_t v44 = v36;
      uint64_t v45 = (uint64_t)v47;
      sub_1D4355580(v44, (uint64_t)v47);
      char v46 = _s8FMIPCore29FMIPHawkeyeProductInformationV2eeoiySbAC_ACtFZ_0(v43, v45);
      sub_1D4354F04(v45);
      sub_1D4276C3C(v34, &qword_1EA6C97A0);
      sub_1D4276C3C((uint64_t)v53, &qword_1EA6C97A0);
      sub_1D4354F04(v43);
      sub_1D4276C3C(v35, &qword_1EA6C97A0);
      return (v46 & 1) != 0;
    }
  }
  return result;
}

unint64_t sub_1D4355A7C()
{
  unint64_t result = qword_1EA6CA1C0;
  if (!qword_1EA6CA1C0)
  {
    type metadata accessor for FMIPDiscoveredAccessory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA1C0);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for FMIPDiscoveredAccessory(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[3];
    id v9 = v5;
    if (v8)
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
      uint64_t v10 = a2[4];
      uint64_t v11 = a2[5];
      *((void *)a1 + 3) = v8;
      *((void *)a1 + 4) = v10;
      *((void *)a1 + 5) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v12 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(a1 + 24) = v12;
      *((void *)a1 + 5) = a2[5];
    }
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = &a1[v13];
    uint64_t v15 = (_OWORD *)((char *)a2 + v13);
    uint64_t v16 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
    uint64_t v17 = *((void *)v16 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_1D42D5DA0(&qword_1EA6C97A0);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v14 = *v15;
      uint64_t v19 = *((void *)v15 + 3);
      *((void *)v14 + 2) = *((void *)v15 + 2);
      *((void *)v14 + 3) = v19;
      uint64_t v20 = *((void *)v15 + 5);
      *((void *)v14 + 4) = *((void *)v15 + 4);
      *((void *)v14 + 5) = v20;
      uint64_t v21 = *((void *)v15 + 7);
      *((void *)v14 + 6) = *((void *)v15 + 6);
      *((void *)v14 + 7) = v21;
      *((void *)v14 + 8) = *((void *)v15 + 8);
      v14[72] = *((unsigned char *)v15 + 72);
      v14[73] = *((unsigned char *)v15 + 73);
      uint64_t v22 = v16[12];
      uint64_t v26 = (char *)v15 + v22;
      char v27 = &v14[v22];
      uint64_t v28 = v17;
      uint64_t v23 = sub_1D4469498();
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24(v27, v26, v23);
      v24(&v14[v16[13]], (char *)v15 + v16[13], v23);
      v24(&v14[v16[14]], (char *)v15 + v16[14], v23);
      v24(&v14[v16[15]], (char *)v15 + v16[15], v23);
      v24(&v14[v16[16]], (char *)v15 + v16[16], v23);
      v24(&v14[v16[17]], (char *)v15 + v16[17], v23);
      (*(void (**)(char *, void, uint64_t, int *))(v28 + 56))(v14, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t destroy for FMIPDiscoveredAccessory(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + v5[12];
    uint64_t v8 = sub_1D4469498();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v8 - 8), v7, v8);
    v10(v4 + v5[13], v8);
    v10(v4 + v5[14], v8);
    v10(v4 + v5[15], v8);
    v10(v4 + v5[16], v8);
    uint64_t v9 = v4 + v5[17];
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v8);
  }
  return result;
}

uint64_t initializeWithCopy for FMIPDiscoveredAccessory(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v7 = a1 + 8;
  uint64_t v8 = *(void *)(a2 + 24);
  id v9 = v6;
  if (v8)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    uint64_t v10 = *(void *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 40);
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(v7 + 16) = v12;
    *(void *)(v7 + 32) = *(void *)(a2 + 40);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (_OWORD *)(a1 + v13);
  uint64_t v15 = (_OWORD *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t v17 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_1D42D5DA0(&qword_1EA6C97A0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    *uint64_t v14 = *v15;
    uint64_t v19 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v19;
    uint64_t v20 = *((void *)v15 + 5);
    *((void *)v14 + 4) = *((void *)v15 + 4);
    *((void *)v14 + 5) = v20;
    uint64_t v21 = *((void *)v15 + 7);
    *((void *)v14 + 6) = *((void *)v15 + 6);
    *((void *)v14 + 7) = v21;
    *((void *)v14 + 8) = *((void *)v15 + 8);
    *((unsigned char *)v14 + 72) = *((unsigned char *)v15 + 72);
    *((unsigned char *)v14 + 73) = *((unsigned char *)v15 + 73);
    uint64_t v22 = v16[12];
    uint64_t v26 = (char *)v15 + v22;
    char v27 = (char *)v14 + v22;
    uint64_t v28 = v17;
    uint64_t v23 = sub_1D4469498();
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v27, v26, v23);
    v24((char *)v14 + v16[13], (char *)v15 + v16[13], v23);
    v24((char *)v14 + v16[14], (char *)v15 + v16[14], v23);
    v24((char *)v14 + v16[15], (char *)v15 + v16[15], v23);
    v24((char *)v14 + v16[16], (char *)v15 + v16[16], v23);
    v24((char *)v14 + v16[17], (char *)v15 + v16[17], v23);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v28 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

uint64_t assignWithCopy for FMIPDiscoveredAccessory(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  id v9 = (_OWORD *)(a1 + 8);
  uint64_t v10 = (_OWORD *)(a2 + 8);
  uint64_t v11 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (v11)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D43566EC(a1 + 8);
      uint64_t v12 = *(void *)(a2 + 40);
      long long v13 = *(_OWORD *)(a2 + 24);
      *id v9 = *v10;
      *(_OWORD *)(a1 + 24) = v13;
      *(void *)(a1 + 40) = v12;
    }
  }
  else if (v11)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *v10;
    long long v15 = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *id v9 = v14;
    *(_OWORD *)(a1 + 24) = v15;
  }
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      *(void *)uint64_t v17 = *(void *)v18;
      *(void *)(v17 + 8) = *(void *)(v18 + 8);
      *(void *)(v17 + 16) = *(void *)(v18 + 16);
      *(void *)(v17 + 24) = *(void *)(v18 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v17 + 32) = *(void *)(v18 + 32);
      *(void *)(v17 + 40) = *(void *)(v18 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v17 + 48) = *(void *)(v18 + 48);
      *(void *)(v17 + 56) = *(void *)(v18 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v17 + 64) = *(void *)(v18 + 64);
      *(unsigned char *)(v17 + 72) = *(unsigned char *)(v18 + 72);
      *(unsigned char *)(v17 + 73) = *(unsigned char *)(v18 + 73);
      uint64_t v29 = v19[12];
      uint64_t v30 = v17 + v29;
      uint64_t v31 = v18 + v29;
      uint64_t v32 = sub_1D4469498();
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 24);
      v33(v30, v31, v32);
      v33(v17 + v19[13], v18 + v19[13], v32);
      v33(v17 + v19[14], v18 + v19[14], v32);
      v33(v17 + v19[15], v18 + v19[15], v32);
      v33(v17 + v19[16], v18 + v19[16], v32);
      v33(v17 + v19[17], v18 + v19[17], v32);
      return a1;
    }
    sub_1D4354F04(v17);
    goto LABEL_13;
  }
  if (v23)
  {
LABEL_13:
    uint64_t v27 = sub_1D42D5DA0(&qword_1EA6C97A0);
    memcpy((void *)v17, (const void *)v18, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v17 = *(void *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  *(void *)(v17 + 40) = *(void *)(v18 + 40);
  *(void *)(v17 + 48) = *(void *)(v18 + 48);
  *(void *)(v17 + 56) = *(void *)(v18 + 56);
  *(void *)(v17 + 64) = *(void *)(v18 + 64);
  *(unsigned char *)(v17 + 72) = *(unsigned char *)(v18 + 72);
  *(unsigned char *)(v17 + 73) = *(unsigned char *)(v18 + 73);
  uint64_t v24 = v19[12];
  uint64_t v34 = v18 + v24;
  uint64_t v35 = v17 + v24;
  uint64_t v25 = sub_1D4469498();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(v35, v34, v25);
  v26(v17 + v19[13], v18 + v19[13], v25);
  v26(v17 + v19[14], v18 + v19[14], v25);
  v26(v17 + v19[15], v18 + v19[15], v25);
  v26(v17 + v19[16], v18 + v19[16], v25);
  v26(v17 + v19[17], v18 + v19[17], v25);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t sub_1D43566EC(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for FMIPDiscoveredAccessory(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (_OWORD *)(a1 + v4);
  uint64_t v6 = (_OWORD *)(a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t v8 = *((void *)v7 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_1D42D5DA0(&qword_1EA6C97A0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    long long v10 = v6[1];
    *uint64_t v5 = *v6;
    v5[1] = v10;
    long long v11 = v6[3];
    v5[2] = v6[2];
    v5[3] = v11;
    *((void *)v5 + 8) = *((void *)v6 + 8);
    *((_WORD *)v5 + 36) = *((_WORD *)v6 + 36);
    uint64_t v12 = v7[12];
    long long v13 = (char *)v5 + v12;
    long long v14 = (char *)v6 + v12;
    uint64_t v15 = sub_1D4469498();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    v16(v13, v14, v15);
    v16((char *)v5 + v7[13], (char *)v6 + v7[13], v15);
    v16((char *)v5 + v7[14], (char *)v6 + v7[14], v15);
    v16((char *)v5 + v7[15], (char *)v6 + v7[15], v15);
    v16((char *)v5 + v7[16], (char *)v6 + v7[16], v15);
    v16((char *)v5 + v7[17], (char *)v6 + v7[17], v15);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for FMIPDiscoveredAccessory(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  if (*(void *)(a1 + 24))
  {
    uint64_t v7 = *(void *)(a2 + 24);
    if (v7)
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(void *)(a1 + 24) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D43566EC(a1 + 8);
  }
  long long v9 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v9;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
LABEL_6:
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  long long v13 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      uint64_t v27 = *(void *)(v12 + 24);
      *(void *)(v11 + 16) = *(void *)(v12 + 16);
      *(void *)(v11 + 24) = v27;
      swift_bridgeObjectRelease();
      uint64_t v28 = *(void *)(v12 + 40);
      *(void *)(v11 + 32) = *(void *)(v12 + 32);
      *(void *)(v11 + 40) = v28;
      swift_bridgeObjectRelease();
      uint64_t v29 = *(void *)(v12 + 56);
      *(void *)(v11 + 48) = *(void *)(v12 + 48);
      *(void *)(v11 + 56) = v29;
      swift_bridgeObjectRelease();
      *(void *)(v11 + 64) = *(void *)(v12 + 64);
      *(unsigned char *)(v11 + 72) = *(unsigned char *)(v12 + 72);
      *(unsigned char *)(v11 + 73) = *(unsigned char *)(v12 + 73);
      uint64_t v30 = v13[12];
      uint64_t v31 = v11 + v30;
      uint64_t v32 = v12 + v30;
      uint64_t v33 = sub_1D4469498();
      uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 40);
      v34(v31, v32, v33);
      v34(v11 + v13[13], v12 + v13[13], v33);
      v34(v11 + v13[14], v12 + v13[14], v33);
      v34(v11 + v13[15], v12 + v13[15], v33);
      v34(v11 + v13[16], v12 + v13[16], v33);
      v34(v11 + v13[17], v12 + v13[17], v33);
      return a1;
    }
    sub_1D4354F04(v11);
    goto LABEL_11;
  }
  if (v17)
  {
LABEL_11:
    uint64_t v25 = sub_1D42D5DA0(&qword_1EA6C97A0);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  long long v18 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v18;
  long long v19 = *(_OWORD *)(v12 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(_OWORD *)(v11 + 48) = v19;
  *(void *)(v11 + 64) = *(void *)(v12 + 64);
  *(_WORD *)(v11 + 72) = *(_WORD *)(v12 + 72);
  uint64_t v20 = v13[12];
  uint64_t v21 = v11 + v20;
  uint64_t v22 = v12 + v20;
  uint64_t v23 = sub_1D4469498();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32);
  v24(v21, v22, v23);
  v24(v11 + v13[13], v12 + v13[13], v23);
  v24(v11 + v13[14], v12 + v13[14], v23);
  v24(v11 + v13[15], v12 + v13[15], v23);
  v24(v11 + v13[16], v12 + v13[16], v23);
  v24(v11 + v13[17], v12 + v13[17], v23);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPDiscoveredAccessory(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D4356D34);
}

uint64_t sub_1D4356D34(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1D42D5DA0(&qword_1EA6C97A0);
    long long v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FMIPDiscoveredAccessory(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D4356DFC);
}

void *sub_1D4356DFC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1D42D5DA0(&qword_1EA6C97A0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t dispatch thunk of FMIPAuthenticationUIProvider.authenticationUIProvider(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

id sub_1D4356EBC(uint64_t a1)
{
  id v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1D432B88C();
    uint64_t v4 = (void *)sub_1D4469A38();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

FMIPCore::FMIPRangingEventType_optional __swiftcall FMIPRangingEventType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1D446A518();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  char *v2 = v5;
  return result;
}

uint64_t FMIPRangingEventType.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x72656E776FLL;
  }
}

uint64_t sub_1D4356FE8(char *a1, char *a2)
{
  return sub_1D44143D8(*a1, *a2);
}

uint64_t sub_1D4356FF4()
{
  return sub_1D446A888();
}

uint64_t sub_1D4357078()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43570E8()
{
  return sub_1D446A888();
}

FMIPCore::FMIPRangingEventType_optional sub_1D4357168(Swift::String *a1)
{
  return FMIPRangingEventType.init(rawValue:)(*a1);
}

void sub_1D4357174(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x72656E776FLL;
  if (*v1) {
    unint64_t v2 = 0xD000000000000010;
  }
  unint64_t v3 = 0x80000001D447D4A0;
  if (!*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

void static FMIPAnalytics.sendRangingEventAnalytics(eventType:)(char *a1)
{
  char v1 = *a1;
  unint64_t v2 = (void *)sub_1D4469B08();
  uint64_t v3 = swift_allocObject();
  *(unsigned char *)(v3 + 16) = v1;
  v5[4] = sub_1D4357368;
  v5[5] = v3;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 1107296256;
  v5[2] = sub_1D4356EBC;
  v5[3] = &unk_1F2C094D0;
  uint64_t v4 = _Block_copy(v5);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v4);
}

unint64_t sub_1D4357298()
{
  unint64_t v0 = sub_1D4274BFC(MEMORY[0x1E4FBC860]);
  uint64_t v1 = sub_1D4469B08();
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C(v1, 1701869940, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D4357358()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

unint64_t sub_1D4357368()
{
  return sub_1D4357298();
}

unint64_t sub_1D4357374()
{
  unint64_t result = qword_1EA6CA1D8;
  if (!qword_1EA6CA1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA1D8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPRangingEventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4357494);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPRangingEventType()
{
  return &type metadata for FMIPRangingEventType;
}

id sub_1D43574CC()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id result = objc_msgSend(self, sel_standardUserDefaults);
  qword_1EA6CA1E0 = (uint64_t)v0;
  *(void *)algn_1EA6CA1E8 = result;
  return result;
}

id static FMUserDefaults.shared.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA6C8F78 != -1) {
    swift_once();
  }
  int v3 = (void *)qword_1EA6CA1E0;
  uint64_t v2 = *(void *)algn_1EA6CA1E8;
  id v6 = *(id *)algn_1EA6CA1E8;
  *a1 = qword_1EA6CA1E0;
  a1[1] = v2;
  id v4 = v3;
  return v6;
}

Swift::Bool __swiftcall FMUserDefaults.BOOL(for:)(Swift::String a1)
{
  uint64_t v2 = *(void **)(v1 + 8);
  if (!objc_msgSend(*(id *)v1, sel_isInternalBuild)) {
    return 0;
  }
  int v3 = (void *)sub_1D4469B08();
  unsigned __int8 v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

  return v4;
}

Swift::String_optional __swiftcall FMUserDefaults.string(for:)(Swift::String a1)
{
  uint64_t v2 = *(void **)(v1 + 8);
  if (objc_msgSend(*(id *)v1, sel_isInternalBuild)
    && (int v3 = (void *)sub_1D4469B08(),
        id v4 = objc_msgSend(v2, sel_stringForKey_, v3),
        v3,
        v4))
  {
    uint64_t v5 = sub_1D4469B38();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  uint64_t v8 = v5;
  uint64_t v9 = v7;
  result.value._object = v9;
  result.value._countAndFlagsBits = v8;
  return result;
}

Swift::Int_optional __swiftcall FMUserDefaults.int(for:)(Swift::String a1)
{
  uint64_t v2 = *(void **)(v1 + 8);
  if (objc_msgSend(*(id *)v1, sel_isInternalBuild))
  {
    int v3 = (void *)sub_1D4469B08();
    id v4 = objc_msgSend(v2, sel_stringForKey_, v3);

    if (v4)
    {
      uint64_t v5 = sub_1D4469B38();
      unint64_t v7 = v6;

      uint64_t v9 = HIBYTE(v7) & 0xF;
      uint64_t v10 = v5 & 0xFFFFFFFFFFFFLL;
      if ((v7 & 0x2000000000000000) != 0) {
        uint64_t v11 = HIBYTE(v7) & 0xF;
      }
      else {
        uint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
      }
      if (v11)
      {
        if ((v7 & 0x1000000000000000) != 0)
        {
          uint64_t v13 = (uint64_t)sub_1D430B5A4(v5, v7, 10);
          LOBYTE(v5) = v28;
LABEL_46:
          swift_bridgeObjectRelease();
          char v24 = v5 & 1;
          if (v5) {
            Swift::Int v8 = 0;
          }
          else {
            Swift::Int v8 = v13;
          }
          goto LABEL_57;
        }
        if ((v7 & 0x2000000000000000) == 0)
        {
          if ((v5 & 0x1000000000000000) != 0) {
            uint64_t v12 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
          }
          else {
            uint64_t v12 = (unsigned __int8 *)sub_1D446A3E8();
          }
          uint64_t v13 = (uint64_t)sub_1D430B58C(v12, v10, 10);
          LOBYTE(v5) = v14 & 1;
          goto LABEL_46;
        }
        v29[0] = v5;
        v29[1] = v7 & 0xFFFFFFFFFFFFFFLL;
        if (v5 == 43)
        {
          if (!v9) {
            goto LABEL_61;
          }
          if (v9 == 1 || (BYTE1(v5) - 48) > 9u) {
            goto LABEL_33;
          }
          uint64_t v13 = (BYTE1(v5) - 48);
          if (v9 != 2)
          {
            if ((BYTE2(v5) - 48) > 9u) {
              goto LABEL_33;
            }
            uint64_t v13 = 10 * (BYTE1(v5) - 48) + (BYTE2(v5) - 48);
            uint64_t v15 = v9 - 3;
            if (v15)
            {
              int v16 = (unsigned __int8 *)v29 + 3;
              while (1)
              {
                unsigned int v17 = *v16 - 48;
                if (v17 > 9) {
                  goto LABEL_33;
                }
                uint64_t v18 = 10 * v13;
                if ((unsigned __int128)(v13 * (__int128)10) >> 64 != (10 * v13) >> 63) {
                  goto LABEL_33;
                }
                uint64_t v13 = v18 + v17;
                if (__OFADD__(v18, v17)) {
                  goto LABEL_33;
                }
                LOBYTE(v5) = 0;
                ++v16;
                if (!--v15) {
                  goto LABEL_46;
                }
              }
            }
          }
        }
        else
        {
          if (v5 == 45)
          {
            if (v9)
            {
              if (v9 != 1 && (BYTE1(v5) - 48) <= 9u)
              {
                if (v9 == 2)
                {
                  LOBYTE(v5) = 0;
                  uint64_t v13 = -(uint64_t)(BYTE1(v5) - 48);
                  goto LABEL_46;
                }
                if ((BYTE2(v5) - 48) <= 9u)
                {
                  uint64_t v13 = -10 * (BYTE1(v5) - 48) - (BYTE2(v5) - 48);
                  uint64_t v23 = v9 - 3;
                  if (!v23) {
                    goto LABEL_45;
                  }
                  uint64_t v25 = (unsigned __int8 *)v29 + 3;
                  while (1)
                  {
                    unsigned int v26 = *v25 - 48;
                    if (v26 > 9) {
                      break;
                    }
                    uint64_t v27 = 10 * v13;
                    if ((unsigned __int128)(v13 * (__int128)10) >> 64 != (10 * v13) >> 63) {
                      break;
                    }
                    uint64_t v13 = v27 - v26;
                    if (__OFSUB__(v27, v26)) {
                      break;
                    }
                    LOBYTE(v5) = 0;
                    ++v25;
                    if (!--v23) {
                      goto LABEL_46;
                    }
                  }
                }
              }
LABEL_33:
              uint64_t v13 = 0;
              LOBYTE(v5) = 1;
              goto LABEL_46;
            }
            __break(1u);
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
          if (!v9 || (v5 - 48) > 9u) {
            goto LABEL_33;
          }
          uint64_t v13 = (v5 - 48);
          if (v9 != 1)
          {
            if ((BYTE1(v5) - 48) > 9u) {
              goto LABEL_33;
            }
            uint64_t v13 = 10 * (v5 - 48) + (BYTE1(v5) - 48);
            uint64_t v19 = v9 - 2;
            if (v19)
            {
              uint64_t v20 = (unsigned __int8 *)v29 + 2;
              while (1)
              {
                unsigned int v21 = *v20 - 48;
                if (v21 > 9) {
                  goto LABEL_33;
                }
                uint64_t v22 = 10 * v13;
                if ((unsigned __int128)(v13 * (__int128)10) >> 64 != (10 * v13) >> 63) {
                  goto LABEL_33;
                }
                uint64_t v13 = v22 + v21;
                if (__OFADD__(v22, v21)) {
                  goto LABEL_33;
                }
                LOBYTE(v5) = 0;
                ++v20;
                if (!--v19) {
                  goto LABEL_46;
                }
              }
            }
          }
        }
LABEL_45:
        LOBYTE(v5) = 0;
        goto LABEL_46;
      }
      swift_bridgeObjectRelease();
    }
  }
  Swift::Int v8 = 0;
  char v24 = 1;
LABEL_57:
  LOBYTE(v10) = v24;
LABEL_62:
  result.is_nil = v10;
  result.value = v8;
  return result;
}

Swift::Double_optional __swiftcall FMUserDefaults.double(for:)(Swift::String a1)
{
  uint64_t v2 = *(void **)(v1 + 8);
  if (!objc_msgSend(*(id *)v1, sel_isInternalBuild)
    || (id v4 = (void *)sub_1D4469B08(),
        id v5 = objc_msgSend(v2, sel_stringForKey_, v4),
        v4,
        !v5))
  {
    Swift::Bool v13 = 0;
    goto LABEL_23;
  }
  uint64_t v6 = sub_1D4469B38();
  uint64_t v8 = v7;

  uint64_t v10 = MEMORY[0x1F4188790](v9);
  if ((v8 & 0x1000000000000000) != 0 || !(v8 & 0x2000000000000000 | v6 & 0x1000000000000000))
  {
    sub_1D446A358();
  }
  else
  {
    MEMORY[0x1F4188790](v10);
    if ((v8 & 0x2000000000000000) != 0)
    {
      BOOL v15 = (v6 > 0x20u || ((0x100003E01uLL >> v6) & 1) == 0)
         && (char v14 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
         && *v14 == 0;
      char v16 = v15;
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    if ((v6 & 0x1000000000000000) != 0)
    {
      uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v12 = v6 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v11 = sub_1D446A3E8();
    }
    char v16 = sub_1D4357DB4(v11, v12, (void (*)(uint64_t *__return_ptr))sub_1D4357E84) & 1;
  }
  swift_bridgeObjectRelease();
LABEL_17:
  if (v16) {
    Swift::Bool v13 = 0;
  }
  else {
    Swift::Bool v13 = 0;
  }
LABEL_23:
  result.value = v3;
  result.is_nil = v13;
  return result;
}

void FMUserDefaults.set(value:for:)(uint64_t a1)
{
  double v3 = *(void **)(v1 + 8);
  if (objc_msgSend(*(id *)v1, sel_isInternalBuild))
  {
    sub_1D429D81C(a1, (uint64_t)v11);
    uint64_t v4 = v12;
    if (v12)
    {
      id v5 = sub_1D42C26F4(v11, v12);
      uint64_t v6 = *(void *)(v4 - 8);
      MEMORY[0x1F4188790](v5);
      uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v6 + 16))(v8);
      uint64_t v9 = sub_1D446A748();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
      sub_1D42BEC64((uint64_t)v11);
    }
    else
    {
      uint64_t v9 = 0;
    }
    uint64_t v10 = (void *)sub_1D4469B08();
    objc_msgSend(v3, sel_setValue_forKey_, v9, v10);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1D4357DB4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

unsigned char *sub_1D4357E14@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_1D4357E84@<X0>(unsigned char *a1@<X8>)
{
  Swift::Double_optional result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FMUserDefaults(void *a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  BOOL v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for FMUserDefaults(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for FMUserDefaults(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  BOOL v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for FMUserDefaults(uint64_t a1, _OWORD *a2)
{
  BOOL v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for FMUserDefaults(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMUserDefaults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)Swift::Double_optional result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)Swift::Double_optional result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMUserDefaults()
{
  return &type metadata for FMUserDefaults;
}

void sub_1D4358068(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_1D43580F4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  v9[4] = sub_1D4358F20;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  void v9[2] = sub_1D43581E4;
  v9[3] = &unk_1F2C096A8;
  id v7 = _Block_copy(v9);
  swift_retain();
  id v8 = a3;
  swift_release();
  objc_msgSend(a1, sel_currentStewieStateWithCompletion_, v7);
  _Block_release(v7);
}

void sub_1D43581E4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t FMNetworkUtil.deinit()
{
  return v0;
}

uint64_t FMNetworkUtil.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMNetworkUtil()
{
  return self;
}

uint64_t method lookup function for FMNetworkUtil(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMNetworkUtil);
}

uint64_t sub_1D43582B0()
{
  void aBlock[6] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)sub_1D4469B08();
  sub_1D42AADA4();
  uint64_t v1 = (void *)sub_1D446A098();
  aBlock[4] = nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D4358068;
  aBlock[3] = &unk_1F2C096D0;
  uint64_t v2 = _Block_copy(aBlock);
  uint64_t v3 = _CTServerConnectionCreateOnTargetQueue();
  _Block_release(v2);

  if (v3)
  {
    BOOL v4 = (void *)sub_1D4469B08();
    _CTServerConnectionCopyCellularUsagePolicy();

    _CTServerConnectionGetCellularDataIsEnabled();
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1D4469928();
    sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
    id v6 = sub_1D44698F8();
    os_log_type_t v7 = sub_1D446A038();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v8 = 67109120;
      swift_beginAccess();
      LODWORD(aBlock[0]) = 0;
      sub_1D446A188();
      _os_log_impl(&dword_1D4271000, v6, v7, "FMNetworkUtil: Global cellular enabled? %{BOOL}d", v8, 8u);
      MEMORY[0x1D9447730](v8, -1, -1);
    }
  }
  return 0;
}

uint64_t sub_1D43586A8(void *a1)
{
  char v53 = a1;
  uint64_t v1 = sub_1D44699D8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  os_log_type_t v7 = (char *)&v49 - v6;
  uint64_t v8 = sub_1D4469958();
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v57 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D44699B8();
  uint64_t v54 = *(void *)(v11 - 8);
  uint64_t v55 = v11;
  MEMORY[0x1F4188790](v11);
  Swift::Bool v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D4469968();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  unsigned int v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1D4469108();
  uint64_t v60 = (void *)v18;
  uint64_t v61 = sub_1D42BF510(&qword_1EBD7E550, MEMORY[0x1E4F619E0]);
  uint64_t v19 = sub_1D42BECB4(aBlock);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v19, *MEMORY[0x1E4F619C0], v18);
  LOBYTE(v18) = MEMORY[0x1D9445460](aBlock);
  sub_1D42BEC64((uint64_t)aBlock);
  if (v18)
  {
    uint64_t v20 = swift_allocObject();
    uint64_t v52 = v7;
    uint64_t v21 = v20;
    *(void *)(v20 + 16) = 0;
    uint64_t v49 = (void *)(v20 + 16);
    uint64_t v22 = dispatch_group_create();
    uint64_t v51 = v5;
    uint64_t v23 = v22;
    dispatch_group_enter(v22);
    sub_1D42AADA4();
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FBCB48], v14);
    uint64_t v24 = sub_1D446A0D8();
    uint64_t v50 = v1;
    uint64_t v25 = (void *)v24;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    unsigned int v26 = (void *)swift_allocObject();
    uint64_t v27 = v53;
    void v26[2] = v53;
    v26[3] = v21;
    v26[4] = v23;
    uint64_t v61 = (uint64_t)sub_1D4358ED4;
    uint64_t v62 = v26;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1D42BD950;
    uint64_t v60 = &unk_1F2C09658;
    char v28 = _Block_copy(aBlock);
    id v29 = v27;
    swift_retain();
    uint64_t v30 = v23;
    sub_1D4469988();
    uint64_t v58 = MEMORY[0x1E4FBC860];
    sub_1D42BF510((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42E2378();
    uint64_t v31 = v57;
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v13, v10, v28);
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v10, v31);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v13, v55);
    swift_release();
    uint64_t v32 = v51;
    sub_1D44699C8();
    uint64_t v33 = v52;
    MEMORY[0x1D9445D60](v32, 60.0);
    uint64_t v34 = *(void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v35 = v50;
    v34(v32, v50);
    sub_1D446A048();
    v34(v33, v35);
    if (sub_1D4469938())
    {
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1D4469928();
      sub_1D42D7FAC(v36, (uint64_t)qword_1EBD83228);
      unint64_t v37 = sub_1D44698F8();
      os_log_type_t v38 = sub_1D446A038();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v39 = 0;
        _os_log_impl(&dword_1D4271000, v37, v38, "FMNetworkUtil: Stewie state is unavailable (timed out after 60 secs)", v39, 2u);
        MEMORY[0x1D9447730](v39, -1, -1);
        swift_release();

        uint64_t v40 = 0;
LABEL_18:

        return v40;
      }
      swift_release();

      uint64_t v40 = 0;
    }
    else
    {
      id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F61520]), sel_init);
      unsigned int v42 = objc_msgSend(v41, sel_isNetworkUp);

      uint64_t v43 = v49;
      swift_beginAccess();
      if (*v43 == 7) {
        uint64_t v40 = 0;
      }
      else {
        uint64_t v40 = v42 ^ 1;
      }
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_1D4469928();
      sub_1D42D7FAC(v44, (uint64_t)qword_1EBD83228);
      swift_retain();
      unint64_t v37 = sub_1D44698F8();
      os_log_type_t v45 = sub_1D446A038();
      if (os_log_type_enabled(v37, v45))
      {
        uint64_t v46 = v21;
        uint64_t v47 = swift_slowAlloc();
        *(_DWORD *)uint64_t v47 = 134218240;
        uint64_t v58 = *(void *)(v46 + 16);
        sub_1D446A188();
        swift_release();
        *(_WORD *)(v47 + 12) = 1024;
        LODWORD(v58) = v40;
        sub_1D446A188();
        _os_log_impl(&dword_1D4271000, v37, v45, "FMNetworkUtil: Stewie state is %ld (available=%{BOOL}d)", (uint8_t *)v47, 0x12u);
        MEMORY[0x1D9447730](v47, -1, -1);
        swift_release();

        goto LABEL_18;
      }

      swift_release_n();
    }
    unint64_t v37 = v30;
    goto LABEL_18;
  }
  return 0;
}

uint64_t sub_1D4358E7C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D4358E8C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1D4358ED4()
{
  sub_1D43580F4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1D4358EE0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D4358F20(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(NSObject **)(v1 + 24);
  swift_beginAccess();
  *(void *)(v4 + 16) = a1;
  dispatch_group_leave(v3);
}

id FMLocationShiftingRequest.location.getter()
{
  return *(id *)(v0 + 16);
}

void *FMLocationShiftingRequest.__allocating_init(identifier:location:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Double_optional result = (void *)swift_allocObject();
  result[2] = a3;
  result[3] = a1;
  result[4] = a2;
  return result;
}

void *FMLocationShiftingRequest.init(identifier:location:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a3;
  v3[3] = a1;
  v3[4] = a2;
  return v3;
}

uint64_t FMLocationShiftingRequest.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMLocationShifter.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  FMLocationShifter.init()();
  return v0;
}

uint64_t sub_1D435903C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1D4359084(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = sub_1D4469968();
  uint64_t v8 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = *(id *)(a1 + 16);
  uint64_t v11 = *(void **)(a2 + 16);
  objc_msgSend(v11, sel_coordinate);
  double v13 = v12;
  objc_msgSend(v11, sel_coordinate);
  double v15 = v14;
  objc_msgSend(v11, sel_horizontalAccuracy);
  double v17 = v16;
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = a2;
  v18[3] = a3;
  v18[4] = a4;
  uint64_t v32 = sub_1D4359C9C;
  uint64_t v33 = v18;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_1D4359884;
  uint64_t v31 = &unk_1F2C097E8;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  id v20 = a4;
  swift_release();
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = a3;
  v21[3] = a2;
  v21[4] = v20;
  uint64_t v32 = sub_1D4359CAC;
  uint64_t v33 = v21;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_1D42E1B08;
  uint64_t v31 = &unk_1F2C09838;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  id v23 = v20;
  swift_release();
  sub_1D42AADA4();
  uint64_t v24 = v26;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCB48], v26);
  uint64_t v25 = (void *)sub_1D446A0D8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
  objc_msgSend(v27, sel_shiftCoordinate_accuracy_withCompletionHandler_mustGoToNetworkCallback_errorHandler_callbackQueue_, v19, 0, v22, v25, v13, v15, v17);

  _Block_release(v22);
  _Block_release(v19);
}

uint64_t sub_1D4359374(uint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6)
{
  id v51 = a3;
  uint64_t v11 = sub_1D4469618();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  double v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = *(void **)(a1 + 16);
  objc_msgSend(v15, sel_altitude);
  double v17 = v16;
  objc_msgSend(v15, sel_verticalAccuracy);
  double v19 = v18;
  objc_msgSend(v15, sel_course);
  double v21 = v20;
  objc_msgSend(v15, sel_speed);
  double v23 = v22;
  id v24 = objc_msgSend(v15, sel_timestamp);
  sub_1D44695D8();

  id v25 = objc_allocWithZone(MEMORY[0x1E4F1E5F0]);
  uint64_t v26 = (void *)sub_1D4469578();
  id v27 = objc_msgSend(v25, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_speed_timestamp_, v26, a4, a5, v17, a6, v19, v21, v23);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v28 = a1;
  objc_msgSend(v27, sel_setReferenceFrame_, 2);
  uint64_t v29 = *(void *)(a1 + 24);
  unint64_t v30 = *(void *)(v28 + 32);
  type metadata accessor for FMLocationShiftingRequest();
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = v27;
  v31[3] = v29;
  v31[4] = v30;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v32 = v27;
  uint64_t v33 = swift_retain();
  MEMORY[0x1D94460A0](v33);
  if (*(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1D4469DB8();
  sub_1D4469E08();
  sub_1D4469D98();
  swift_endAccess();
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1D4469928();
  sub_1D42D7FAC(v34, (uint64_t)qword_1EBD83228);
  id v35 = v32;
  swift_retain_n();
  id v36 = v15;
  id v37 = v35;
  id v38 = v36;
  uint64_t v39 = sub_1D44698F8();
  os_log_type_t v40 = sub_1D446A038();
  int v41 = v40;
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v43 = (void *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    v53[0] = v50;
    *(_DWORD *)uint64_t v42 = 136315650;
    int v49 = v41;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1D42CB9EC(v29, v30, v53);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2112;
    uint64_t v52 = (uint64_t)v37;
    id v44 = v37;
    sub_1D446A188();
    *uint64_t v43 = v37;

    *(_WORD *)(v42 + 22) = 2112;
    uint64_t v52 = (uint64_t)v38;
    id v45 = v38;
    sub_1D446A188();
    v43[1] = v38;

    _os_log_impl(&dword_1D4271000, v39, (os_log_type_t)v49, "FMLocationShifter: shifting completed %s newLocation: %@ oldLocation: %@", (uint8_t *)v42, 0x20u);
    sub_1D42D5DA0(&qword_1EBD7E830);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v43, -1, -1);
    uint64_t v46 = v50;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v46, -1, -1);
    MEMORY[0x1D9447730](v42, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  objc_msgSend(v51, sel_signal);

  return swift_release();
}

uint64_t sub_1D4359884(uint64_t a1, double a2, double a3, double a4)
{
  os_log_type_t v7 = *(void (**)(uint64_t, double, double, double))(a1 + 32);
  uint64_t v8 = swift_retain();
  v7(v8, a2, a3, a4);
  return swift_release();
}

id sub_1D43598F0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  os_log_type_t v7 = (void *)(a2 + 16);
  uint64_t v8 = sub_1D4469928();
  sub_1D42D7FAC(v8, (uint64_t)qword_1EBD83228);
  id v9 = a1;
  id v10 = a1;
  uint64_t v11 = sub_1D44698F8();
  os_log_type_t v12 = sub_1D446A018();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v20[0] = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    id v15 = a1;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    uint64_t v16 = sub_1D4469B68();
    sub_1D42CB9EC(v16, v17, v20);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v11, v12, "FMLocationShifter: shifting request error %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v14, -1, -1);
    MEMORY[0x1D9447730](v13, -1, -1);
  }
  else
  {
  }
  swift_beginAccess();
  uint64_t v18 = swift_retain();
  MEMORY[0x1D94460A0](v18);
  if (*(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1D4469DB8();
  }
  sub_1D4469E08();
  sub_1D4469D98();
  swift_endAccess();
  return objc_msgSend(a4, sel_signal);
}

id *FMLocationShifter.deinit()
{
  return v0;
}

uint64_t method lookup function for FMLocationShiftingRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMLocationShiftingRequest);
}

uint64_t dispatch thunk of FMLocationShiftingRequest.__allocating_init(identifier:location:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for FMLocationShifter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMLocationShifter);
}

uint64_t dispatch thunk of FMLocationShifter.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FMLocationShifter.shift(requests:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t sub_1D4359C04()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D4359C3C()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1D4359C8C()
{
  sub_1D4359084(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1D4359C9C(double a1, double a2, double a3)
{
  return sub_1D4359374(*(void *)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32), a1, a2, a3);
}

id sub_1D4359CAC(void *a1)
{
  return sub_1D43598F0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1D4359CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA1F0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_1D42B1A58(a3, (uint64_t)sub_1D42E58C4, v9);
  return swift_release();
}

uint64_t sub_1D4359E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = v7 - 1;
    for (uint64_t i = 32; ; i += 352)
    {
      memcpy(__dst, (const void *)(a1 + i), sizeof(__dst));
      id v10 = (void *)__dst[3];
      sub_1D42FC4A4((uint64_t)__dst);
      id v11 = v10;
      if (objc_msgSend(v11, sel_referenceFrame) == 2)
      {

        sub_1D42FC604((uint64_t)__dst);
        if (!v8) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v12 = __dst[0];
        uint64_t v13 = __dst[1];
        type metadata accessor for FMLocationShiftingRequest();
        uint64_t v14 = (void *)swift_allocObject();
        v14[2] = v11;
        v14[3] = v12;
        v14[4] = v13;
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_1D42FC604((uint64_t)__dst);
        MEMORY[0x1D94460A0](v15);
        if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D4469DB8();
        }
        sub_1D4469E08();
        sub_1D4469D98();
        if (!v8)
        {
LABEL_10:
          swift_bridgeObjectRelease();
          uint64_t v6 = v19;
          break;
        }
      }
      --v8;
    }
  }
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  void v16[4] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D42DD324(v6, (uint64_t)sub_1D435A584, (uint64_t)v16);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1D4359FCC(unint64_t a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (!v3)
  {
    a3((void *)MEMORY[0x1E4FBC860]);
    return swift_bridgeObjectRelease();
  }
  uint64_t v4 = a2;
  unint64_t v5 = a1;
  if (a1 >> 62)
  {
LABEL_51:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1D446A498();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v7 = 0;
  unint64_t v35 = v5 & 0xC000000000000001;
  uint64_t v36 = v4 + 32;
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v33 = v3;
  unint64_t v34 = v5;
  uint64_t v32 = v6;
  do
  {
    memcpy(__dst, (const void *)(v36 + 352 * v7), 0x160uLL);
    if (v6)
    {
      os_log_type_t v40 = v8;
      if (v35)
      {
        swift_bridgeObjectRetain();
        sub_1D42FC4A4((uint64_t)__dst);
        uint64_t v9 = (void *)MEMORY[0x1D9446710](0, v5);
      }
      else
      {
        uint64_t v9 = *(void **)(v5 + 32);
        swift_bridgeObjectRetain();
        sub_1D42FC4A4((uint64_t)__dst);
        swift_retain();
      }
      uint64_t v10 = __dst[0];
      uint64_t v11 = __dst[1];
      if (v9[3] == __dst[0] && v9[4] == __dst[1] || (sub_1D446A758() & 1) != 0)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        uint64_t v38 = __dst[42];
        uint64_t v12 = __dst[43];
        char v37 = BYTE1(__dst[41]);
        char v13 = __dst[41];
        char v14 = __dst[2];
        char v15 = BYTE1(__dst[2]);
        char v16 = BYTE2(__dst[2]);
        double v17 = *(double *)&__dst[4];
        uint64_t v18 = (void *)v9[2];
        char v41 = BYTE3(__dst[2]);
        id v39 = (id)__dst[3];
        sub_1D42B7188(v18, &v41, v14, v15, v16, (uint64_t)&v42, v17);
        uint64_t v19 = v43;
        __src[0] = v10;
        __src[1] = v11;
        LODWORD(__src[2]) = v42;
        __src[3] = v43;
        __src[4] = v44;
        sub_1D42FABAC((uint64_t)&__dst[5], (uint64_t)&__src[5]);
        LOBYTE(__src[41]) = v13;
        BYTE1(__src[41]) = v37;
        __src[42] = v38;
        __src[43] = v12;
        id v20 = v19;
        swift_bridgeObjectRetain();
        sub_1D435A590(&__dst[5]);
        swift_bridgeObjectRetain();
        sub_1D42FC4A4((uint64_t)__src);
        uint64_t v8 = v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_1D43B013C(0, v40[2] + 1, 1, v40);
        }
        uint64_t v6 = v32;
        uint64_t v3 = v33;
        unint64_t v22 = v8[2];
        unint64_t v21 = v8[3];
        if (v22 >= v21 >> 1) {
          uint64_t v8 = sub_1D43B013C((void *)(v21 > 1), v22 + 1, 1, v8);
        }
        _OWORD v8[2] = v22 + 1;
        memcpy(&v8[44 * v22 + 4], __src, 0x160uLL);

        sub_1D42FC604((uint64_t)__src);
        swift_release();
        sub_1D42FC604((uint64_t)__dst);
        unint64_t v5 = v34;
        goto LABEL_6;
      }
      swift_release();
      if (v6 != 1)
      {
        if (v35)
        {
          uint64_t v4 = 1;
          while (1)
          {
            uint64_t v25 = MEMORY[0x1D9446710](v4, v5);
            uint64_t v26 = v4 + 1;
            if (__OFADD__(v4, 1)) {
              break;
            }
            uint64_t v9 = (void *)v25;
            BOOL v27 = *(void *)(v25 + 24) == v10 && *(void *)(v25 + 32) == v11;
            if (v27 || (sub_1D446A758() & 1) != 0) {
              goto LABEL_13;
            }
            swift_unknownObjectRelease();
            ++v4;
            if (v26 == v6) {
              goto LABEL_24;
            }
          }
          __break(1u);
        }
        else
        {
          uint64_t v4 = 5;
          while (1)
          {
            uint64_t v28 = v4 - 3;
            if (__OFADD__(v4 - 4, 1)) {
              break;
            }
            uint64_t v9 = *(void **)(v5 + 8 * v4);
            BOOL v29 = v9[3] == v10 && v9[4] == v11;
            if (v29 || (sub_1D446A758() & 1) != 0)
            {
              swift_retain();
              goto LABEL_13;
            }
            ++v4;
            if (v28 == v6) {
              goto LABEL_24;
            }
          }
        }
        __break(1u);
        goto LABEL_51;
      }
LABEL_24:
      swift_bridgeObjectRelease();
      uint64_t v8 = v40;
    }
    else
    {
      sub_1D42FC4A4((uint64_t)__dst);
    }
    sub_1D42FC4A4((uint64_t)__dst);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1D43B013C(0, v8[2] + 1, 1, v8);
    }
    unint64_t v24 = v8[2];
    unint64_t v23 = v8[3];
    if (v24 >= v23 >> 1) {
      uint64_t v8 = sub_1D43B013C((void *)(v23 > 1), v24 + 1, 1, v8);
    }
    _OWORD v8[2] = v24 + 1;
    memcpy(&v8[44 * v24 + 4], __dst, 0x160uLL);
    sub_1D42FC604((uint64_t)__dst);
LABEL_6:
    ++v7;
  }
  while (v7 != v3);
  swift_bridgeObjectRelease();
  a3(v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D435A4A8()
{
  uint64_t v1 = sub_1D42D5DA0(&qword_1EA6CA1F0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D435A544()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D435A584(unint64_t a1)
{
  return sub_1D4359FCC(a1, *(void *)(v1 + 16), *(void (**)(void *))(v1 + 24));
}

uint64_t *sub_1D435A590(uint64_t *a1)
{
  sub_1D42D67E8(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

uint64_t FMIPEraseAction.isUserTextEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_isUserTextEnabled);
}

uint64_t FMIPEraseAction.message.getter()
{
  return sub_1D435A648(&OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_message);
}

uint64_t FMIPEraseAction.passcode.getter()
{
  return sub_1D435A648(&OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_passcode);
}

uint64_t FMIPEraseAction.phoneNumber.getter()
{
  return sub_1D435A648(&OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_phoneNumber);
}

uint64_t sub_1D435A648(void *a1)
{
  uint64_t v2 = *(void *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FMIPEraseAction.__allocating_init(device:message:phoneNumber:passcode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  FMIPEraseAction.init(device:message:phoneNumber:passcode:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t FMIPEraseAction.init(device:message:phoneNumber:passcode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = (void *)(v7 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_message);
  void *v8 = a2;
  v8[1] = a3;
  uint64_t v9 = (void *)(v7 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_phoneNumber);
  *uint64_t v9 = a4;
  v9[1] = a5;
  uint64_t v10 = (void *)(v7 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_passcode);
  *uint64_t v10 = a6;
  v10[1] = a7;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_isUserTextEnabled) = a3 != 0;
  *(void *)(v7 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext) = 0;
  uint64_t v11 = (void *)(v7 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = (void *)(v7 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
  *uint64_t v12 = 0;
  v12[1] = 0;
  char v13 = (void *)(v7 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_username);
  *char v13 = 0;
  v13[1] = 0;
  uint64_t v14 = (void *)(v7 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  *uint64_t v14 = 0;
  v14[1] = 0;
  char v15 = (void *)(v7 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_escrowUUID);
  *char v15 = 0;
  v15[1] = 0;
  *(_OWORD *)(v7 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession) = xmmword_1D446D300;
  sub_1D42B2518(a1, v7 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  return v7;
}

uint64_t static FMIPEraseAction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_message + 8);
  uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_message + 8);
  if (v4)
  {
    if (!v5) {
      return 0;
    }
    BOOL v6 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_message) == *(void *)(a2
                                                                                           + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_message)
      && v4 == v5;
    if (!v6 && (sub_1D446A758() & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_passcode + 8);
  uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_passcode + 8);
  if (v7)
  {
    if (!v8) {
      return 0;
    }
    BOOL v9 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_passcode) == *(void *)(a2
                                                                                            + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_passcode)
      && v7 == v8;
    if (!v9 && (sub_1D446A758() & 1) == 0) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_phoneNumber + 8);
  uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_phoneNumber + 8);
  if (!v10)
  {
    if (!v11) {
      goto LABEL_28;
    }
    return 0;
  }
  if (!v11) {
    return 0;
  }
  BOOL v12 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_phoneNumber) == *(void *)(a2
                                                                                              + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_phoneNumber)
     && v10 == v11;
  if (!v12 && (sub_1D446A758() & 1) == 0) {
    return 0;
  }
LABEL_28:
  if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_isUserTextEnabled) != *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8FMIPCore15FMIPEraseAction_isUserTextEnabled)) {
    return 0;
  }
  uint64_t v14 = a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
  return static FMIPDevice.== infix(_:_:)(v14);
}

void FMIPEraseAction.__allocating_init(device:)()
{
}

void FMIPEraseAction.init(device:)()
{
}

uint64_t sub_1D435A9AC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FMIPEraseAction.deinit()
{
  uint64_t v0 = FMIPDeviceAction.deinit();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMIPEraseAction.__deallocating_deinit()
{
  FMIPDeviceAction.deinit();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D435AB0C()
{
  return type metadata accessor for FMIPEraseAction();
}

uint64_t type metadata accessor for FMIPEraseAction()
{
  uint64_t result = qword_1EA6CA200;
  if (!qword_1EA6CA200) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D435AB60()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FMIPEraseAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPEraseAction);
}

uint64_t dispatch thunk of FMIPEraseAction.__allocating_init(device:message:phoneNumber:passcode:)()
{
  return (*(uint64_t (**)(void))(v0 + 384))();
}

uint64_t FMIPPrewarmAction.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPPrewarmAction.__allocating_init(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t FMIPPrewarmAction.init(identifier:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t FMIPPrewarmAction.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMIPPrewarmAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FMIPPrewarmAction.debugDescription.getter()
{
  return 60;
}

uint64_t sub_1D435AE18()
{
  return FMIPPrewarmAction.debugDescription.getter();
}

uint64_t FMIPPrewarmConnectAction.init(identifier:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t FMIPPrewarmConnectAction.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _s8FMIPCore24FMIPPrewarmConnectActionC10identifierACSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t _s8FMIPCore24FMIPPrewarmConnectActionCfD_0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMIPPrewarmAction()
{
  return self;
}

uint64_t method lookup function for FMIPPrewarmAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPPrewarmAction);
}

uint64_t dispatch thunk of FMIPPrewarmAction.__allocating_init(identifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for FMIPPrewarmConnectAction()
{
  return self;
}

uint64_t type metadata accessor for FMIPPrewarmDisconnectAction()
{
  return self;
}

uint64_t type metadata accessor for FMIPSavePreferencesRequest()
{
  uint64_t result = qword_1EA6CA210;
  if (!qword_1EA6CA210) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D435AFDC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D435B02C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + qword_1EA6E4850);
  type metadata accessor for FMIPShowContactDetailsAction();
  uint64_t v3 = swift_dynamicCastClass();
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  uint64_t v5 = &qword_1EA6C9000;
  if (v3)
  {
    char v6 = *(unsigned char *)(v3 + OBJC_IVAR____TtC8FMIPCore28FMIPShowContactDetailsAction_enabled);
    uint64_t v44 = MEMORY[0x1E4FBB390];
    LOBYTE(v43) = v6;
    uint64_t v7 = qword_1EA6C9D80;
    uint64_t v8 = *(void *)(v0 + qword_1EA6C9D80);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
    sub_1D433313C((void *)(v8 + 16), v42);
    os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 24));
    swift_release();
    sub_1D42C5494(&v43, v42);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1D42C4E78(v42, 0xD000000000000012, 0x80000001D44806A0, isUniquelyReferenced_nonNull_native);
    uint64_t v10 = swift_bridgeObjectRelease();
    uint64_t v40 = v2;
    uint64_t v11 = *(void *)(v0 + v7);
    MEMORY[0x1F4188790](v10);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v11 + 24));
    sub_1D433A560((void *)(v11 + 16));
    uint64_t v4 = MEMORY[0x1E4FBB1A0];
    os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 24));
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v44 = v4;
    *(void *)&long long v43 = 0xD000000000000012;
    *((void *)&v43 + 1) = 0x80000001D44806A0;
    uint64_t v12 = *(void *)(v0 + v7);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v12 + 24));
    sub_1D433313C((void *)(v12 + 16), v42);
    os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 24));
    swift_release();
    sub_1D42C5494(&v43, v42);
    char v13 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D42C4E78(v42, 0x79747265706F7270, 0xEF6465676E616843, v13);
    uint64_t v14 = swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(v0 + v7);
    MEMORY[0x1F4188790](v14);
    char v16 = (os_unfair_lock_s *)(v15 + 24);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v15 + 24));
    uint64_t v2 = v40;
    sub_1D433A560((void *)(v15 + 16));
LABEL_3:
    os_unfair_lock_unlock(v16);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v5 = &qword_1EA6C9000;
    goto LABEL_12;
  }
  type metadata accessor for FMIPNotifyAction(0);
  uint64_t v17 = swift_dynamicCastClass();
  if (v17 && *(unsigned char *)(v17 + OBJC_IVAR____TtC8FMIPCore16FMIPNotifyAction_type) == 1)
  {
    char v18 = *(unsigned char *)(v17 + OBJC_IVAR____TtC8FMIPCore16FMIPNotifyAction_enabled);
    uint64_t v44 = MEMORY[0x1E4FBB390];
    LOBYTE(v43) = v18;
    uint64_t v19 = qword_1EA6C9D80;
    uint64_t v20 = *(void *)(v0 + qword_1EA6C9D80);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v20 + 24));
    sub_1D433313C((void *)(v20 + 16), v42);
    os_unfair_lock_unlock((os_unfair_lock_t)(v20 + 24));
    swift_release();
    sub_1D42C5494(&v43, v42);
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D42C4E78(v42, 0xD000000000000012, 0x80000001D4480680, v21);
    uint64_t v22 = swift_bridgeObjectRelease();
    uint64_t v41 = v2;
    uint64_t v23 = *(void *)(v0 + v19);
    MEMORY[0x1F4188790](v22);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v23 + 24));
    sub_1D433A560((void *)(v23 + 16));
    uint64_t v4 = MEMORY[0x1E4FBB1A0];
    os_unfair_lock_unlock((os_unfair_lock_t)(v23 + 24));
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v44 = v4;
    *(void *)&long long v43 = 0xD000000000000012;
    *((void *)&v43 + 1) = 0x80000001D4480680;
    uint64_t v24 = *(void *)(v0 + v19);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v24 + 24));
    sub_1D433313C((void *)(v24 + 16), v42);
    os_unfair_lock_unlock((os_unfair_lock_t)(v24 + 24));
    swift_release();
    sub_1D42C5494(&v43, v42);
    char v25 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D42C4E78(v42, 0x79747265706F7270, 0xEF6465676E616843, v25);
    uint64_t v26 = swift_bridgeObjectRelease();
    uint64_t v27 = *(void *)(v0 + v19);
    MEMORY[0x1F4188790](v26);
    char v16 = (os_unfair_lock_s *)(v27 + 24);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v27 + 24));
    uint64_t v2 = v41;
    sub_1D433A560((void *)(v27 + 16));
    goto LABEL_3;
  }
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1D4469928();
  sub_1D42D7FAC(v28, (uint64_t)qword_1EBD83228);
  BOOL v29 = sub_1D44698F8();
  os_log_type_t v30 = sub_1D4469FF8();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl(&dword_1D4271000, v29, v30, "Action not supported", v31, 2u);
    MEMORY[0x1D9447730](v31, -1, -1);
  }

LABEL_12:
  uint64_t v33 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  uint64_t v32 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 8);
  uint64_t v44 = v4;
  *(void *)&long long v43 = v33;
  *((void *)&v43 + 1) = v32;
  uint64_t v34 = v5[432];
  uint64_t v35 = *(void *)(v1 + v34);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v35 + 24));
  sub_1D433313C((void *)(v35 + 16), v42);
  os_unfair_lock_unlock((os_unfair_lock_t)(v35 + 24));
  swift_release();
  sub_1D42C5494(&v43, v42);
  char v36 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D42C4E78(v42, 0x656369766564, 0xE600000000000000, v36);
  uint64_t v37 = swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v1 + v34);
  MEMORY[0x1F4188790](v37);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v38 + 24));
  sub_1D4306B48((void *)(v38 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v38 + 24));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D435B710()
{
  return swift_release();
}

uint64_t sub_1D435B720()
{
  sub_1D427B074();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D435B794()
{
  return type metadata accessor for FMIPSavePreferencesRequest();
}

void sub_1D435B79C(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v126 = a2;
  uint64_t v129 = sub_1D4469618();
  uint64_t v5 = *(void *)(v129 - 8);
  MEMORY[0x1F4188790](v129);
  int v128 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPDevice();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v132 = (uint64_t)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v125 = (uint64_t)&v104 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v104 - v13);
  uint64_t v15 = *a1;
  uint64_t v16 = a1[1];
  uint64_t v17 = a1[2];
  uint64_t v18 = a1[3];
  int v19 = *((unsigned __int8 *)a1 + 32);
  int v20 = *((unsigned __int8 *)a1 + 33);
  int v21 = *((unsigned __int8 *)a1 + 34);
  int v22 = *((unsigned __int8 *)a1 + 35);
  uint64_t v23 = a1[5];
  uint64_t v24 = a1[6];
  uint64_t v25 = a1[7];
  uint64_t v26 = a1[8];
  uint64_t v28 = a1[9];
  uint64_t v27 = a1[10];
  uint64_t v29 = a1[11];
  uint64_t v30 = a1[12];
  uint64_t v130 = a1[13];
  uint64_t v133 = *(void *)(v29 + 16);
  if (v133)
  {
    uint64_t v105 = v28;
    uint64_t v106 = v25;
    uint64_t v107 = v23;
    int v108 = v22;
    int v109 = v21;
    int v110 = v20;
    int v111 = v19;
    uint64_t v112 = v17;
    uint64_t v113 = v15;
    uint64_t v114 = v27;
    uint64_t v115 = v30;
    uint64_t v116 = v24;
    uint64_t v117 = v16;
    uint64_t v118 = v26;
    uint64_t v119 = v18;
    uint64_t v120 = a3;
    unint64_t v122 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v31 = v29 + v122;
    uint64_t v121 = (long long *)(v14 + 33);
    char v127 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v32 = v29;
    swift_bridgeObjectRetain();
    unint64_t v33 = 0;
    unint64_t v135 = MEMORY[0x1E4FBC860];
    uint64_t v34 = v130;
    uint64_t v35 = v133;
    uint64_t v124 = v8;
    uint64_t v123 = v32;
    uint64_t v131 = v31;
    while (1)
    {
      if (v33 >= *(void *)(v32 + 16))
      {
        __break(1u);
        return;
      }
      uint64_t v36 = *(void *)(v8 + 72);
      sub_1D42B2458(v31 + v36 * v33, (uint64_t)v14);
      uint64_t v37 = (void *)v14[33];
      if (v37)
      {
        if (*(void *)(v34 + 16))
        {
          uint64_t v38 = *v14;
          uint64_t v39 = v14[1];
          id v40 = v37;
          swift_bridgeObjectRetain();
          unint64_t v41 = sub_1D42C4FCC(v38, v39);
          if (v42)
          {
            long long v43 = (_OWORD *)(*(void *)(v34 + 56) + 208 * v41);
            v139[0] = *v43;
            long long v44 = v43[3];
            long long v45 = v43[4];
            long long v46 = v43[2];
            v139[1] = v43[1];
            v139[2] = v46;
            v139[4] = v45;
            v139[3] = v44;
            long long v47 = v43[5];
            long long v48 = v43[6];
            long long v49 = v43[8];
            v139[7] = v43[7];
            v139[8] = v49;
            v139[6] = v48;
            v139[5] = v47;
            long long v50 = v43[9];
            long long v51 = v43[10];
            long long v52 = v43[11];
            *(_OWORD *)&v140[9] = *(_OWORD *)((char *)v43 + 185);
            v139[10] = v51;
            *(_OWORD *)uint64_t v140 = v52;
            v139[9] = v50;
            sub_1D435C1C4(v139);
            swift_bridgeObjectRelease();
            unint64_t v53 = v14[27];
            LODWORD(v54) = (v53 & 0x10) == 0;
            if ((v53 & 0x10) != 0) {
              double v55 = 10.0;
            }
            else {
              double v55 = 120.0;
            }
            id v134 = v40;
            id v56 = objc_msgSend(v40, sel_timestamp);
            uint64_t v57 = v128;
            sub_1D44695D8();

            sub_1D4469558();
            double v59 = v58;
            uint64_t v60 = *v127;
            (*v127)(v57, v129);
            uint64_t v137 = 0;
            MEMORY[0x1D9447750](&v137, 8);
            for (unint64_t i = v137; (unint64_t)(0x20000000000001 * v137) < 0x1FFFFFFFFFF801; unint64_t i = v137)
            {
              uint64_t v137 = 0;
              MEMORY[0x1D9447750](&v137, 8);
            }
            long double v62 = (double)((i * (unsigned __int128)0x20000000000001uLL) >> 64) * 1.11022302e-16 + 0.0;
            long double v63 = pow(v59 / v55, 10.0);
            id v64 = v134;
            if (v62 <= v63) {
              uint64_t v54 = (v53 >> 4) & 1;
            }
            if ((v53 & 0x10) != 0)
            {
              if (v54)
              {
                objc_msgSend(v134, sel_coordinate);
                double v71 = v70;
                double v73 = v72;
                objc_msgSend(v64, sel_altitude);
                double v75 = v74;
                objc_msgSend(v64, sel_horizontalAccuracy);
                double v77 = v76;
                objc_msgSend(v64, sel_verticalAccuracy);
                double v79 = v78;
                uint64_t v80 = v128;
                sub_1D4469608();
                id v81 = objc_allocWithZone(MEMORY[0x1E4F1E5F0]);
                uint64_t v82 = (void *)sub_1D4469578();
                id v83 = objc_msgSend(v81, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_, v82, v71, v73, v75, v77, v79);

                uint64_t v84 = v129;
                v60(v80, v129);
                char v136 = 6;
                id v85 = v83;
                id v86 = objc_msgSend(v85, sel_timestamp);
                sub_1D44695D8();

                sub_1D44695A8();
                double v88 = v87;
                v60(v80, v84);
                id v89 = objc_msgSend(v85, sel_floor);
                if (v89)
                {
                  uint64_t v90 = v89;
                  uint64_t v91 = (uint64_t)objc_msgSend(v89, sel_level);
                }
                else
                {
                  uint64_t v91 = -1;
                }
                sub_1D42B7188(v85, &v136, v88 < -3600.0, 0, 1, (uint64_t)&v137, (double)v91);
                id v92 = (void *)v138;
                uint64_t v93 = *v14;
                uint64_t v94 = v14[1];
                uint64_t v95 = 256;
                if (!BYTE1(v137)) {
                  uint64_t v95 = 0;
                }
                uint64_t v96 = v95 | v137;
                uint64_t v97 = 0x10000;
                if (!BYTE2(v137)) {
                  uint64_t v97 = 0;
                }
                uint64_t v137 = v96 | v97 | ((unint64_t)BYTE3(v137) << 24);
                swift_bridgeObjectRetain();
                id v98 = v92;
                uint64_t v68 = v125;
                sub_1D43A0AB4((uint64_t)v139, v93, v94, (unint64_t *)&v137, 0, v125, 1.0);

                goto LABEL_32;
              }
            }
            else if ((v54 & 1) == 0)
            {
              uint64_t v65 = *v14;
              uint64_t v66 = v14[1];
              uint64_t v137 = v14[32];
              long long v138 = *v121;
              id v67 = (id)v138;
              swift_bridgeObjectRetain();
              uint64_t v68 = v125;
              sub_1D43A0AB4((uint64_t)v139, v65, v66, (unint64_t *)&v137, 1, v125, 1.0);
LABEL_32:
              sub_1D42B2458(v68, v132);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v8 = v124;
              uint64_t v34 = v130;
              uint64_t v32 = v123;
              if (isUniquelyReferenced_nonNull_native) {
                unint64_t v100 = v135;
              }
              else {
                unint64_t v100 = sub_1D42CAE20(0, *(void *)(v135 + 16) + 1, 1, v135);
              }
              unint64_t v102 = *(void *)(v100 + 16);
              unint64_t v101 = *(void *)(v100 + 24);
              if (v102 >= v101 >> 1) {
                unint64_t v100 = sub_1D42CAE20(v101 > 1, v102 + 1, 1, v100);
              }
              *(void *)(v100 + 16) = v102 + 1;
              unint64_t v135 = v100;
              sub_1D42B2518(v132, v100 + v122 + v102 * v36);

              sub_1D42B24BC(v68);
              sub_1D42B24BC((uint64_t)v14);
              uint64_t v35 = v133;
              uint64_t v31 = v131;
              goto LABEL_4;
            }
            sub_1D435C2F8(v139);
            uint64_t v68 = v125;
            sub_1D42B2458((uint64_t)v14, v125);
            goto LABEL_32;
          }
          swift_bridgeObjectRelease();
          uint64_t v35 = v133;
          uint64_t v31 = v131;
        }
        else
        {
          id v69 = v37;
        }
        sub_1D42B24BC((uint64_t)v14);
      }
      else
      {
        sub_1D42B24BC((uint64_t)v14);
      }
LABEL_4:
      if (++v33 == v35)
      {
        swift_bridgeObjectRelease();
        a3 = v120;
        uint64_t v18 = v119;
        uint64_t v26 = v118;
        uint64_t v16 = v117;
        uint64_t v24 = v116;
        uint64_t v30 = v115;
        uint64_t v27 = v114;
        uint64_t v15 = v113;
        uint64_t v17 = v112;
        LOBYTE(v19) = v111;
        LOBYTE(v20) = v110;
        LOBYTE(v21) = v109;
        LOBYTE(v22) = v108;
        uint64_t v23 = v107;
        uint64_t v25 = v106;
        uint64_t v28 = v105;
        unint64_t v103 = v135;
        goto LABEL_40;
      }
    }
  }
  unint64_t v103 = MEMORY[0x1E4FBC860];
LABEL_40:
  *(void *)a3 = v15;
  *(void *)(a3 + 8) = v16;
  *(void *)(a3 + 16) = v17;
  *(void *)(a3 + 24) = v18;
  *(unsigned char *)(a3 + 32) = v19;
  *(unsigned char *)(a3 + 33) = v20;
  *(unsigned char *)(a3 + 34) = v21;
  *(unsigned char *)(a3 + 35) = v22;
  *(void *)(a3 + 40) = v23;
  *(void *)(a3 + 48) = v24;
  *(void *)(a3 + 56) = v25;
  *(void *)(a3 + 64) = v26;
  *(void *)(a3 + 72) = v28;
  *(void *)(a3 + 80) = v27;
  *(void *)(a3 + 88) = v103;
  *(void *)(a3 + 96) = v30;
  *(void *)(a3 + 104) = v130;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

uint64_t sub_1D435C190()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMIPDemoDataGenerator()
{
  return self;
}

void *sub_1D435C1C4(void *a1)
{
  uint64_t v2 = a1[17];
  uint64_t v5 = a1[16];
  uint64_t v6 = a1[15];
  uint64_t v3 = a1[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D435C274(v6, v5, v2, v3);
  return a1;
}

uint64_t sub_1D435C274(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1)
  {
    sub_1D435C2E4(result, a2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D435C2E4(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1D435C2F8(void *a1)
{
  uint64_t v2 = a1[17];
  uint64_t v5 = a1[16];
  uint64_t v6 = a1[15];
  uint64_t v3 = a1[18];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D435C3A4(v6, v5, v2, v3);
  return a1;
}

uint64_t sub_1D435C3A4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1)
  {
    sub_1D435C414(result, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D435C414(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1D435C428(uint64_t a1, void *a2)
{
}

void sub_1D435C430(uint64_t a1, void *a2)
{
}

void sub_1D435C438(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_1D435C4A4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x1D9446710](0, a2);
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(a2 + 32);
      }
      uint64_t v5 = v4;
      sub_1D42D5DA0(&qword_1EA6CA240);
      char v6 = sub_1D446A118();

      if ((v6 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v11 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v11 == v3) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v8 = (id)MEMORY[0x1D9446710](i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v11 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          uint64_t v9 = v8;
          char v10 = sub_1D446A118();

          if (v10) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_1D446A498();
        swift_bridgeObjectRelease();
        if (v3) {
          continue;
        }
      }
      return;
    }
  }
}

uint64_t sub_1D435C634(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_1D43993FC(v3);
    unint64_t v3 = v5;
    *uint64_t v1 = v5;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)(v6 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = v7 - 1 - a1;
    if (v9 >= 0)
    {
      uint64_t v10 = v6 + 8 * a1;
      uint64_t v11 = *(void *)(v10 + 32);
      memmove((void *)(v10 + 32), (const void *)(v10 + 40), 8 * v9);
      *(void *)(v6 + 16) = v8;
      sub_1D4469D98();
      return v11;
    }
  }
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

BOOL FMIPItemActionStatus.isActionSuccessful.getter()
{
  return *v0 == 2;
}

uint64_t FMIPItemActionStatus.description.getter()
{
  uint64_t result = 0x726F727265;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    case 2:
      uint64_t result = 0x73736563637573;
      break;
    case 3:
      uint64_t result = 0x676E69646E6570;
      break;
    case 4:
      uint64_t result = 0x64656C696166;
      break;
    default:
      return result;
  }
  return result;
}

FMIPCore::FMIPItemActionStatus_optional __swiftcall FMIPItemActionStatus.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue <= 199)
  {
    if (rawValue == -1)
    {
      *uint64_t v1 = 0;
      return (FMIPCore::FMIPItemActionStatus_optional)rawValue;
    }
    if (!rawValue)
    {
      *uint64_t v1 = 1;
      return (FMIPCore::FMIPItemActionStatus_optional)rawValue;
    }
LABEL_12:
    *uint64_t v1 = 5;
    return (FMIPCore::FMIPItemActionStatus_optional)rawValue;
  }
  if (rawValue == 500)
  {
    *uint64_t v1 = 4;
    return (FMIPCore::FMIPItemActionStatus_optional)rawValue;
  }
  if (rawValue == 205)
  {
    *uint64_t v1 = 3;
    return (FMIPCore::FMIPItemActionStatus_optional)rawValue;
  }
  if (rawValue != 200) {
    goto LABEL_12;
  }
  *uint64_t v1 = 2;
  return (FMIPCore::FMIPItemActionStatus_optional)rawValue;
}

uint64_t FMIPItemActionStatus.rawValue.getter()
{
  return qword_1D4471C50[*v0];
}

BOOL sub_1D435C850(char *a1, char *a2)
{
  return qword_1D4471C50[*a1] == qword_1D4471C50[*a2];
}

uint64_t sub_1D435C874()
{
  return sub_1D446A888();
}

uint64_t sub_1D435C8C4()
{
  return sub_1D446A838();
}

uint64_t sub_1D435C8FC()
{
  return sub_1D446A888();
}

FMIPCore::FMIPItemActionStatus_optional sub_1D435C948(Swift::Int *a1)
{
  return FMIPItemActionStatus.init(rawValue:)(*a1);
}

void sub_1D435C950(void *a1@<X8>)
{
  *a1 = qword_1D4471C50[*v1];
}

uint64_t sub_1D435C968()
{
  uint64_t result = 0x726F727265;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    case 2:
      uint64_t result = 0x73736563637573;
      break;
    case 3:
      uint64_t result = 0x676E69646E6570;
      break;
    case 4:
      uint64_t result = 0x64656C696166;
      break;
    default:
      return result;
  }
  return result;
}

BOOL static FMIPItemActionControllerError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FMIPItemActionControllerError.hash(into:)()
{
  return sub_1D446A838();
}

uint64_t FMIPItemActionControllerError.hashValue.getter()
{
  return sub_1D446A888();
}

unint64_t sub_1D435CA98()
{
  unint64_t result = qword_1EA6CA220;
  if (!qword_1EA6CA220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA220);
  }
  return result;
}

unint64_t sub_1D435CAF0()
{
  unint64_t result = qword_1EA6CA228;
  if (!qword_1EA6CA228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA228);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPItemActionStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D435CC10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPItemActionStatus()
{
  return &type metadata for FMIPItemActionStatus;
}

uint64_t getEnumTagSinglePayload for FMIPItemActionControllerError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPItemActionControllerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D435CDA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPItemActionControllerError()
{
  return &type metadata for FMIPItemActionControllerError;
}

uint64_t sub_1D435CDDC(uint64_t a1, void (*a2)(void, void, void), uint64_t a3)
{
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7E918);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = sub_1D4469498();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v41 - v17;
  sub_1D42A3A74(a1, (uint64_t)v11, &qword_1EBD7E918);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1D4276C3C((uint64_t)v11, &qword_1EBD7E918);
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1D4469928();
    sub_1D42D7FAC(v19, (uint64_t)qword_1EBD83228);
    int v20 = sub_1D44698F8();
    os_log_type_t v21 = sub_1D446A038();
    if (os_log_type_enabled(v20, v21))
    {
      int v22 = a2;
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_1D4271000, v20, v21, "FMIPItemActionsController: Fetch unauthorized encrypted payload failed with error, no URL", v23, 2u);
      uint64_t v24 = v23;
      a2 = v22;
      MEMORY[0x1D9447730](v24, -1, -1);
    }

    LOBYTE(v48) = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, 1, 1, v12);
    sub_1D43694E4();
    uint64_t v25 = (void *)swift_allocError();
    *uint64_t v26 = 10;
    a2(&v48, v9, v25);

    return sub_1D4276C3C((uint64_t)v9, &qword_1EBD7E918);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v46 = a3;
    uint64_t v28 = sub_1D4469928();
    sub_1D42D7FAC(v28, (uint64_t)qword_1EBD83228);
    long long v45 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v45(v16, v18, v12);
    uint64_t v29 = sub_1D44698F8();
    os_log_type_t v30 = sub_1D446A038();
    if (os_log_type_enabled(v29, v30))
    {
      os_log_t v43 = v29;
      uint64_t v31 = swift_slowAlloc();
      long long v44 = a2;
      uint64_t v32 = (uint8_t *)v31;
      uint64_t v42 = swift_slowAlloc();
      uint64_t v48 = v42;
      *(_DWORD *)uint64_t v32 = 136315138;
      unint64_t v41 = v32 + 4;
      uint64_t v33 = sub_1D44693E8();
      uint64_t v47 = sub_1D42CB9EC(v33, v34, &v48);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      uint64_t v35 = *(void (**)(char *, uint64_t))(v13 + 8);
      v35(v16, v12);
      os_log_t v36 = v43;
      os_log_type_t v37 = v30;
      uint64_t v38 = v35;
      _os_log_impl(&dword_1D4271000, v43, v37, "FMIPItemActionsController: Fetch unauthorized encrypted payload succeeded! URL: %s", v32, 0xCu);
      uint64_t v39 = v42;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v39, -1, -1);
      id v40 = v32;
      a2 = v44;
      MEMORY[0x1D9447730](v40, -1, -1);
    }
    else
    {
      uint64_t v38 = *(void (**)(char *, uint64_t))(v13 + 8);
      v38(v16, v12);
    }
    LOBYTE(v48) = 2;
    v45(v9, v18, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    a2(&v48, v9, 0);
    sub_1D4276C3C((uint64_t)v9, &qword_1EBD7E918);
    return ((uint64_t (*)(char *, uint64_t))v38)(v18, v12);
  }
}

void sub_1D435D31C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void), uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  type metadata accessor for FMIPPlayUTSoundAction(0);
  uint64_t v9 = swift_dynamicCastClass();
  if (v9)
  {
    uint64_t v10 = v9 + OBJC_IVAR____TtC8FMIPCore16FMIPUTItemAction_unknownItem;
    uint64_t v11 = *(void *)(v9 + OBJC_IVAR____TtC8FMIPCore21FMIPPlayUTSoundAction_context);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_1D436AA50;
    *(void *)(v12 + 24) = v8;
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_1D435E728(v10, v11, (uint64_t)sub_1D436AA58, v12);
    swift_release_n();
    swift_release();
    swift_release();
LABEL_3:
    swift_release();
    return;
  }
  type metadata accessor for FMIPIgnoreItemAction(0);
  uint64_t v13 = swift_dynamicCastClass();
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void **)(a2 + 24);
    swift_retain_n();
    swift_retain();
    uint64_t v16 = (void *)sub_1D4469648();
    uint64_t v17 = *(void *)(v14 + OBJC_IVAR____TtC8FMIPCore20FMIPIgnoreItemAction_until);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_1D436AA50;
    *(void *)(v18 + 24) = v8;
    v34[4] = sub_1D436AA58;
    v34[5] = v18;
    v34[0] = MEMORY[0x1E4F143A8];
    v34[1] = 1107296256;
    void v34[2] = sub_1D42E1B08;
    v34[3] = &unk_1F2C0A7E0;
    uint64_t v19 = _Block_copy(v34);
    swift_retain();
    swift_release();
    objc_msgSend(v15, sel_ignoreBeaconByUUID_until_completion_, v16, v17, v19);
    _Block_release(v19);
    swift_release_n();
    swift_release();
    swift_release();
  }
  else
  {
    type metadata accessor for FMIPStopUTSoundAction(0);
    uint64_t v20 = swift_dynamicCastClass();
    if (v20)
    {
      uint64_t v21 = v20 + OBJC_IVAR____TtC8FMIPCore16FMIPUTItemAction_unknownItem;
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = sub_1D436AA50;
      *(void *)(v22 + 24) = v8;
      swift_retain_n();
      swift_retain();
      swift_retain();
      sub_1D435EAA0(v21, 0, 1, (uint64_t)sub_1D436AA58, v22);
      swift_release_n();
      swift_release();
      swift_release();
      goto LABEL_3;
    }
    type metadata accessor for FMIPFetchEncryptedPayloadAction(0);
    uint64_t v23 = swift_dynamicCastClass();
    if (!v23)
    {
      uint64_t v27 = qword_1EBD80068;
      swift_retain_n();
      if (v27 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_1D4469928();
      sub_1D42D7FAC(v28, (uint64_t)qword_1EBD83228);
      uint64_t v29 = sub_1D44698F8();
      os_log_type_t v30 = sub_1D446A038();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl(&dword_1D4271000, v29, v30, "FMIPItemActionsController: cannot map action to request", v31, 2u);
        MEMORY[0x1D9447730](v31, -1, -1);
      }

      LOBYTE(v34[0]) = 0;
      sub_1D43694E4();
      uint64_t v32 = (void *)swift_allocError();
      *uint64_t v33 = 6;
      sub_1D437A678((char *)v34, v32, a3);

      swift_release_n();
      goto LABEL_3;
    }
    uint64_t v24 = v23;
    swift_retain_n();
    uint64_t v25 = swift_retain();
    uint64_t v26 = (void *)MEMORY[0x1D9446F50](v25);
    swift_retain();
    sub_1D435D31C(v24, a2, a3, a4);
    if (!v4)
    {
      swift_release_n();
      swift_release();
      goto LABEL_3;
    }
    swift_release_n();
    __break(1u);
  }
}

uint64_t sub_1D435D810(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  if (a1) {
    char v7 = 4;
  }
  else {
    char v7 = 2;
  }
  char v11 = v7;
  sub_1D42D5DA0(&qword_1EBD80060);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1D446E050;
  uint64_t v9 = *(void *)(a4 + 24);
  *(void *)(v8 + 32) = *(void *)(a4 + 16);
  *(void *)(v8 + 40) = v9;
  swift_bridgeObjectRetain();
  a2(&v11, v8, a1);
  return swift_bridgeObjectRelease();
}

void sub_1D435D8C4(uint64_t a1, char a2, void (*a3)(void), uint64_t a4)
{
  if (a2)
  {
    uint64_t v7 = v4;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1D4469928();
    sub_1D42D7FAC(v8, (uint64_t)qword_1EBD83228);
    uint64_t v9 = sub_1D44698F8();
    os_log_type_t v10 = sub_1D446A038();
    if (os_log_type_enabled(v9, v10))
    {
      char v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v11 = 0;
      _os_log_impl(&dword_1D4271000, v9, v10, "FMIPItemActionsController: connect", v11, 2u);
      MEMORY[0x1D9447730](v11, -1, -1);
    }

    uint64_t v12 = self;
    uint64_t v13 = (void *)sub_1D4469648();
    id v14 = objc_msgSend(v12, sel_connectToBeaconUUID_, v13);

    id v15 = objc_msgSend(*(id *)(v7 + 24), sel_executeCommand_, v14);
    uint64_t v16 = *(NSObject **)(v7 + 48);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v7;
    *(void *)(v17 + 24) = v15;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_1D436AAB4;
    *(void *)(v18 + 24) = v17;
    os_log_type_t v37 = sub_1D42AEE88;
    uint64_t v38 = v18;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v34 = 1107296256;
    uint64_t v35 = sub_1D42AEDE4;
    os_log_t v36 = &unk_1F2C09F98;
    uint64_t v19 = _Block_copy(&aBlock);
    swift_retain();
    id v20 = v15;
    swift_retain();
    swift_release();
    dispatch_sync(v16, v19);
    _Block_release(v19);
    LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v16 & 1) == 0)
    {
      uint64_t v21 = swift_allocObject();
      *(unsigned char *)(v21 + 16) = 1;
      *(void *)(v21 + 24) = v7;
      *(void *)(v21 + 32) = v20;
      *(void *)(v21 + 40) = a3;
      *(void *)(v21 + 48) = a4;
      os_log_type_t v37 = sub_1D43695BC;
      uint64_t v38 = v21;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v34 = 1107296256;
      uint64_t v35 = sub_1D435C428;
      os_log_t v36 = &unk_1F2C09FE8;
      uint64_t v22 = _Block_copy(&aBlock);
      swift_retain();
      id v23 = v20;
      sub_1D42972D4((uint64_t)a3);
      swift_release();
      id v24 = objc_msgSend(v23, sel_addFailureBlock_, v22);
      _Block_release(v22);

      uint64_t v25 = swift_allocObject();
      *(unsigned char *)(v25 + 16) = 1;
      *(void *)(v25 + 24) = v7;
      *(void *)(v25 + 32) = v23;
      *(void *)(v25 + 40) = a3;
      *(void *)(v25 + 48) = a4;
      os_log_type_t v37 = sub_1D4369628;
      uint64_t v38 = v25;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v34 = 1107296256;
      uint64_t v35 = sub_1D435C430;
      os_log_t v36 = &unk_1F2C0A038;
      uint64_t v26 = _Block_copy(&aBlock);
      swift_retain();
      id v27 = v23;
      sub_1D42972D4((uint64_t)a3);
      swift_release();
      id v28 = objc_msgSend(v27, sel_addSuccessBlock_, v26);

      _Block_release(v26);
      swift_release();

      return;
    }
    __break(1u);
    goto LABEL_15;
  }
  if (qword_1EBD80068 != -1) {
LABEL_15:
  }
    swift_once();
  uint64_t v29 = sub_1D4469928();
  sub_1D42D7FAC(v29, (uint64_t)qword_1EBD83228);
  os_log_type_t v30 = sub_1D44698F8();
  os_log_type_t v31 = sub_1D446A038();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl(&dword_1D4271000, v30, v31, "FMIPItemActionsController: disconnect is not supported on this platform!", v32, 2u);
    MEMORY[0x1D9447730](v32, -1, -1);
  }

  if (a3) {
    a3(0);
  }
}

uint64_t sub_1D435DDC8(void *a1, char a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t a6)
{
  uint64_t v35 = a6;
  uint64_t v36 = a3;
  uint64_t v10 = sub_1D4469958();
  uint64_t v39 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D44699B8();
  uint64_t v37 = *(void *)(v13 - 8);
  uint64_t v38 = v13;
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1D4469928();
  sub_1D42D7FAC(v16, (uint64_t)qword_1EBD83228);
  id v17 = a1;
  id v18 = a1;
  uint64_t v19 = sub_1D44698F8();
  os_log_type_t v20 = sub_1D446A038();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v33 = a4;
    uint64_t v23 = v22;
    uint64_t v41 = v22;
    *(_DWORD *)uint64_t v21 = 136315394;
    if (a2) {
      uint64_t v24 = 0x7463656E6E6F63;
    }
    else {
      uint64_t v24 = 0x656E6E6F63736964;
    }
    if (a2) {
      unint64_t v25 = 0xE700000000000000;
    }
    else {
      unint64_t v25 = 0xEA00000000007463;
    }
    uint64_t v34 = a5;
    uint64_t aBlock = sub_1D42CB9EC(v24, v25, &v41);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t aBlock = 0;
    unint64_t v43 = 0xE000000000000000;
    id v40 = a1;
    sub_1D42D5DA0(&qword_1EA6C9360);
    sub_1D446A458();
    uint64_t aBlock = sub_1D42CB9EC(aBlock, v43, &v41);
    sub_1D446A188();
    a5 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v19, v20, "FMIPItemActionsController: %s action failed %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    uint64_t v26 = v23;
    a4 = v33;
    MEMORY[0x1D9447730](v26, -1, -1);
    MEMORY[0x1D9447730](v21, -1, -1);
  }
  else
  {
  }
  uint64_t v27 = v36;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v27;
  *(void *)(v28 + 24) = a4;
  uint64_t v46 = sub_1D436AAB0;
  uint64_t v47 = v28;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v43 = 1107296256;
  long long v44 = sub_1D42BD950;
  long long v45 = &unk_1F2C0A0D8;
  uint64_t v29 = _Block_copy(&aBlock);
  swift_retain();
  id v30 = a4;
  sub_1D4469988();
  uint64_t v41 = MEMORY[0x1E4FBC860];
  sub_1D42DDAD4((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v15, v12, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
  uint64_t result = swift_release();
  if (a5) {
    return a5(a1);
  }
  return result;
}

uint64_t sub_1D435E2BC(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t a6)
{
  uint64_t v33 = a6;
  uint64_t v37 = a5;
  uint64_t v9 = sub_1D4469958();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v36 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D44699B8();
  uint64_t v35 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v34 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D4469928();
  sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
  id v15 = sub_1D44698F8();
  os_log_type_t v16 = sub_1D446A038();
  if (os_log_type_enabled(v15, v16))
  {
    id v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v30 = a3;
    uint64_t v19 = v18;
    os_log_type_t v31 = a4;
    uint64_t v32 = v12;
    *(_DWORD *)id v17 = 136315138;
    aBlock[0] = v18;
    if (a2) {
      uint64_t v20 = 0x7463656E6E6F63;
    }
    else {
      uint64_t v20 = 0x656E6E6F63736964;
    }
    if (a2) {
      unint64_t v21 = 0xE700000000000000;
    }
    else {
      unint64_t v21 = 0xEA00000000007463;
    }
    uint64_t v38 = sub_1D42CB9EC(v20, v21, aBlock);
    a4 = v31;
    uint64_t v12 = v32;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v15, v16, "FMIPItemActionsController: %s action succeeded", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v22 = v19;
    a3 = v30;
    MEMORY[0x1D9447730](v22, -1, -1);
    MEMORY[0x1D9447730](v17, -1, -1);
  }

  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a3;
  *(void *)(v23 + 24) = a4;
  aBlock[4] = (uint64_t)sub_1D436AAB0;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D42BD950;
  uint64_t aBlock[3] = (uint64_t)&unk_1F2C0A088;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  id v25 = a4;
  uint64_t v26 = v34;
  sub_1D4469988();
  uint64_t v38 = MEMORY[0x1E4FBC860];
  sub_1D42DDAD4((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  uint64_t v27 = v36;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v26, v27, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v27, v9);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v12);
  uint64_t result = swift_release();
  if (v37) {
    return v37(0);
  }
  return result;
}

void sub_1D435E728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = self;
  uint64_t v9 = (void *)sub_1D4469648();
  id v10 = objc_msgSend(v8, sel_playSoundWithBeaconUUID_withContext_, v9, a2);

  id v11 = objc_msgSend(*(id *)(v5 + 24), sel_executeUTPlaySoundCommand_, v10);
  uint64_t v12 = *(NSObject **)(v5 + 48);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v5;
  *(void *)(v13 + 24) = v11;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1D43655C4;
  *(void *)(v14 + 24) = v13;
  uint64_t v30 = sub_1D42AEE88;
  os_log_type_t v31 = (void *)v14;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_1D42AEDE4;
  uint64_t v29 = &unk_1F2C09D68;
  id v15 = _Block_copy(&aBlock);
  swift_retain();
  id v16 = v11;
  swift_retain();
  swift_release();
  dispatch_sync(v12, v15);
  _Block_release(v15);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v12)
  {
    __break(1u);
  }
  else
  {
    id v17 = (void *)swift_allocObject();
    _OWORD v17[2] = a3;
    v17[3] = a4;
    v17[4] = v5;
    v17[5] = v16;
    uint64_t v30 = sub_1D43655F4;
    os_log_type_t v31 = v17;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v27 = 1107296256;
    uint64_t v28 = sub_1D435C428;
    uint64_t v29 = &unk_1F2C09DB8;
    uint64_t v18 = _Block_copy(&aBlock);
    swift_retain();
    id v19 = v16;
    swift_retain();
    swift_release();
    id v20 = objc_msgSend(v19, sel_addFailureBlock_, v18);
    _Block_release(v18);

    unint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a3;
    v21[3] = a4;
    v21[4] = v5;
    v21[5] = v19;
    uint64_t v30 = sub_1D4365650;
    os_log_type_t v31 = v21;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v27 = 1107296256;
    uint64_t v28 = sub_1D435C430;
    uint64_t v29 = &unk_1F2C09E08;
    uint64_t v22 = _Block_copy(&aBlock);
    swift_retain();
    id v23 = v19;
    swift_retain();
    swift_release();
    id v24 = objc_msgSend(v23, sel_addSuccessBlock_, v22);
    _Block_release(v22);
    swift_release();
  }
}

void sub_1D435EAA0(uint64_t a1, id a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  if (a3)
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1D4469928();
    sub_1D42D7FAC(v15, (uint64_t)qword_1EBD83228);
    id v16 = sub_1D44698F8();
    os_log_type_t v17 = sub_1D446A038();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_1D4271000, v16, v17, "FMIPItemActionsController: stop sound", v18, 2u);
      MEMORY[0x1D9447730](v18, -1, -1);
    }

    id v19 = self;
    uint64_t v13 = (void *)sub_1D4469648();
    id v14 = objc_msgSend(v19, sel_stopSoundWithBeaconUUID_, v13);
    goto LABEL_11;
  }
  if (qword_1EBD80068 != -1) {
    goto LABEL_14;
  }
  while (1)
  {
    uint64_t v8 = sub_1D4469928();
    sub_1D42D7FAC(v8, (uint64_t)qword_1EBD83228);
    uint64_t v9 = sub_1D44698F8();
    os_log_type_t v10 = sub_1D446A038();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v11 = 0;
      _os_log_impl(&dword_1D4271000, v9, v10, "FMIPItemActionsController: play sound", v11, 2u);
      MEMORY[0x1D9447730](v11, -1, -1);
    }

    uint64_t v12 = self;
    uint64_t v13 = (void *)sub_1D4469648();
    id v14 = objc_msgSend(v12, sel_playSoundWithBeaconUUID_withContext_, v13, a2);
LABEL_11:
    id v20 = v14;

    id v21 = objc_msgSend(*(id *)(v6 + 24), sel_executeCommand_, v20);
    uint64_t v22 = *(NSObject **)(v6 + 48);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v6;
    *(void *)(v23 + 24) = v21;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = sub_1D436AAB4;
    *(void *)(v24 + 24) = v23;
    id v40 = sub_1D42AEE34;
    uint64_t v41 = (void *)v24;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v37 = 1107296256;
    uint64_t v38 = sub_1D42AEDE4;
    uint64_t v39 = &unk_1F2C09BB0;
    id v25 = _Block_copy(&aBlock);
    swift_retain();
    a2 = v21;
    swift_retain();
    swift_release();
    dispatch_sync(v22, v25);
    _Block_release(v25);
    LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v22 & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_14:
    swift_once();
  }
  uint64_t v26 = (void *)swift_allocObject();
  void v26[2] = a4;
  v26[3] = a5;
  v26[4] = v6;
  v26[5] = a2;
  id v40 = sub_1D4365504;
  uint64_t v41 = v26;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v37 = 1107296256;
  uint64_t v38 = sub_1D435C428;
  uint64_t v39 = &unk_1F2C09C00;
  uint64_t v27 = _Block_copy(&aBlock);
  swift_retain();
  id v28 = a2;
  swift_retain();
  swift_release();
  id v29 = objc_msgSend(v28, sel_addFailureBlock_, v27);
  _Block_release(v27);

  uint64_t v30 = (void *)swift_allocObject();
  v30[2] = a4;
  v30[3] = a5;
  v30[4] = v6;
  v30[5] = v28;
  id v40 = sub_1D4365560;
  uint64_t v41 = v30;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v37 = 1107296256;
  uint64_t v38 = sub_1D435C430;
  uint64_t v39 = &unk_1F2C09C50;
  os_log_type_t v31 = _Block_copy(&aBlock);
  swift_retain();
  id v32 = v28;
  swift_retain();
  swift_release();
  id v33 = objc_msgSend(v32, sel_addSuccessBlock_, v31);

  _Block_release(v31);
  swift_release();
}

uint64_t sub_1D435EFA4(void *a1, void (*a2)(void), uint64_t a3, uint64_t a4, void *a5, const char *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v44 = a3;
  uint64_t v45 = a7;
  uint64_t v42 = a6;
  uint64_t v14 = sub_1D4469958();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v48 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D44699B8();
  uint64_t v47 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v46 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v43 = a9;
  uint64_t v19 = sub_1D4469928();
  sub_1D42D7FAC(v19, (uint64_t)qword_1EBD83228);
  id v20 = a1;
  id v21 = a1;
  uint64_t v22 = sub_1D44698F8();
  os_log_type_t v23 = sub_1D446A038();
  if (os_log_type_enabled(v22, v23))
  {
    id v40 = a5;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v39 = a4;
    id v25 = (uint8_t *)v24;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v38 = a8;
    uint64_t v27 = v26;
    uint64_t v37 = a2;
    *(_DWORD *)id v25 = 136315138;
    uint64_t v50 = v26;
    uint64_t aBlock = 0;
    uint64_t v41 = v17;
    unint64_t v52 = 0xE000000000000000;
    long long v49 = a1;
    sub_1D42D5DA0(&qword_1EA6C9360);
    sub_1D446A458();
    uint64_t aBlock = sub_1D42CB9EC(aBlock, v52, &v50);
    uint64_t v17 = v41;
    a2 = v37;
    sub_1D446A188();
    a5 = v40;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v22, v23, v42, v25, 0xCu);
    swift_arrayDestroy();
    uint64_t v28 = v27;
    a8 = v38;
    MEMORY[0x1D9447730](v28, -1, -1);
    id v29 = v25;
    a4 = v39;
    MEMORY[0x1D9447730](v29, -1, -1);
  }
  else
  {
  }
  a2(a1);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a4;
  *(void *)(v30 + 24) = a5;
  uint64_t v55 = a8;
  uint64_t v56 = v30;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v52 = 1107296256;
  unint64_t v53 = sub_1D42BD950;
  uint64_t v54 = v43;
  os_log_type_t v31 = _Block_copy(&aBlock);
  swift_retain();
  id v32 = a5;
  id v33 = v46;
  sub_1D4469988();
  uint64_t v50 = MEMORY[0x1E4FBC860];
  sub_1D42DDAD4((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  uint64_t v34 = v48;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v33, v34, v31);
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v34, v14);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v17);
  return swift_release();
}

uint64_t sub_1D435F454(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, void *a5, const char *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v33 = a7;
  uint64_t v34 = a8;
  os_log_type_t v31 = a6;
  uint64_t v12 = sub_1D4469958();
  uint64_t v36 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1D44699B8();
  uint64_t v15 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v32 = a9;
  uint64_t v18 = sub_1D4469928();
  sub_1D42D7FAC(v18, (uint64_t)qword_1EBD83228);
  uint64_t v19 = sub_1D44698F8();
  os_log_type_t v20 = sub_1D446A038();
  if (os_log_type_enabled(v19, v20))
  {
    id v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = v17;
    uint64_t v22 = a2;
    os_log_type_t v23 = a5;
    uint64_t v24 = v21;
    *(_WORD *)id v21 = 0;
    _os_log_impl(&dword_1D4271000, v19, v20, v31, v21, 2u);
    id v25 = v24;
    a5 = v23;
    a2 = v22;
    uint64_t v17 = v30;
    MEMORY[0x1D9447730](v25, -1, -1);
  }

  a2(0);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a4;
  *(void *)(v26 + 24) = a5;
  aBlock[4] = v34;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = v32;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  id v28 = a5;
  sub_1D4469988();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1D42DDAD4((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v17, v14, v27);
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v35);
  return swift_release();
}

void sub_1D435F80C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  unint64_t v4 = *(void *)(a1 + 56);
  swift_bridgeObjectRetain();
  sub_1D435C4A4(a2, v4);
  unint64_t v6 = v5;
  char v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v9 = (void *)sub_1D435C634(v6);
    swift_endAccess();
  }
}

uint64_t sub_1D435F8B0(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    char v21 = 4;
    sub_1D42D5DA0(&qword_1EA6C9E70);
    uint64_t v7 = *(void *)(type metadata accessor for FMIPItem() - 8);
    unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1D446E050;
    sub_1D42CA688(a4 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, v9 + v8, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    os_log_type_t v10 = &v21;
    uint64_t v11 = v9;
    uint64_t v12 = a1;
  }
  else
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1D4469928();
    sub_1D42D7FAC(v13, (uint64_t)qword_1EBD83228);
    uint64_t v14 = sub_1D44698F8();
    os_log_type_t v15 = sub_1D446A038();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1D4271000, v14, v15, "FMIPItemActionsController: play sound performed", v16, 2u);
      MEMORY[0x1D9447730](v16, -1, -1);
    }

    char v22 = 2;
    sub_1D42D5DA0(&qword_1EA6C9E70);
    uint64_t v17 = *(void *)(type metadata accessor for FMIPItem() - 8);
    unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1D446E050;
    sub_1D42CA688(a4 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, v19 + v18, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    os_log_type_t v10 = &v22;
    uint64_t v11 = v19;
    uint64_t v12 = 0;
  }
  a2(v10, v11, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D435FB4C(uint64_t a1, void *a2)
{
  swift_beginAccess();
  id v4 = a2;
  MEMORY[0x1D94460A0]();
  if (*(void *)((*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1D4469DB8();
  sub_1D4469E08();
  sub_1D4469D98();
  return swift_endAccess();
}

uint64_t sub_1D435FBE8(void *a1, void (*a2)(void, void, void), uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v44 = a6;
  uint64_t v48 = a3;
  uint64_t v10 = sub_1D4469958();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1D44699B8();
  uint64_t v46 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v45 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a5;
  uint64_t v47 = a5 + 16;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1D4469928();
  sub_1D42D7FAC(v15, (uint64_t)qword_1EBD83228);
  id v16 = a1;
  id v17 = a1;
  unint64_t v18 = sub_1D44698F8();
  os_log_type_t v19 = sub_1D446A038();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v41 = v11;
    char v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v39 = a2;
    uint64_t v23 = v22;
    id v40 = v13;
    *(_DWORD *)char v21 = 136315138;
    v56[0] = v22;
    uint64_t aBlock = 0;
    unint64_t v51 = 0xE000000000000000;
    long long v49 = a1;
    sub_1D42D5DA0(&qword_1EA6C9360);
    sub_1D446A458();
    uint64_t aBlock = sub_1D42CB9EC(aBlock, v51, v56);
    uint64_t v13 = v40;
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v18, v19, "FMIPItemActionsController: lost mode action failed %s", v21, 0xCu);
    swift_arrayDestroy();
    uint64_t v24 = v23;
    a2 = v39;
    MEMORY[0x1D9447730](v24, -1, -1);
    id v25 = v21;
    uint64_t v11 = v41;
    MEMORY[0x1D9447730](v25, -1, -1);
  }
  else
  {
  }
  LOBYTE(aBlock) = 4;
  sub_1D42D5DA0(&qword_1EA6C9E70);
  uint64_t v26 = *(void *)(type metadata accessor for FMIPItem() - 8);
  unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1D446E050;
  sub_1D42CA688(a4 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, v28 + v27, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D43694E4();
  id v29 = (void *)swift_allocError();
  *uint64_t v30 = 4;
  a2(&aBlock, v28, v29);

  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v32 = *(id *)(result + 48);
    swift_release();
    uint64_t v33 = swift_allocObject();
    uint64_t v34 = v44;
    *(void *)(v33 + 16) = v43;
    *(void *)(v33 + 24) = v34;
    uint64_t v54 = sub_1D436AAB8;
    uint64_t v55 = v33;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v51 = 1107296256;
    unint64_t v52 = sub_1D42BD950;
    unint64_t v53 = &unk_1F2C0A330;
    uint64_t v35 = _Block_copy(&aBlock);
    swift_retain();
    id v36 = v34;
    uint64_t v37 = v45;
    sub_1D4469988();
    long long v49 = (void *)MEMORY[0x1E4FBC860];
    sub_1D42DDAD4((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v37, v13, v35);
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v37, v42);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D43601C0(uint64_t a1, void (*a2)(void, void, void), uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = sub_1D4469958();
  uint64_t v30 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D44699B8();
  uint64_t v28 = *(void *)(v11 - 8);
  uint64_t v29 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D4469928();
  sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
  uint64_t v15 = sub_1D44698F8();
  os_log_type_t v16 = sub_1D446A038();
  if (os_log_type_enabled(v15, v16))
  {
    id v17 = (uint8_t *)swift_slowAlloc();
    unint64_t v27 = v13;
    unint64_t v18 = a2;
    os_log_type_t v19 = a5;
    uint64_t v20 = v17;
    *(_WORD *)id v17 = 0;
    _os_log_impl(&dword_1D4271000, v15, v16, "FMIPItemActionsController: lost mode action succeeded", v17, 2u);
    char v21 = v20;
    a5 = v19;
    a2 = v18;
    uint64_t v13 = v27;
    MEMORY[0x1D9447730](v21, -1, -1);
  }

  LOBYTE(aBlock[0]) = 2;
  a2(aBlock, 0, 0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v23 = *(id *)(result + 48);
    swift_release();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = a4;
    *(void *)(v24 + 24) = a5;
    aBlock[4] = sub_1D43697AC;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D42BD950;
    uint64_t aBlock[3] = &unk_1F2C0A2E0;
    id v25 = _Block_copy(aBlock);
    swift_retain();
    id v26 = a5;
    sub_1D4469988();
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1D42DDAD4((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v13, v10, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v29);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D43605C0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    swift_beginAccess();
    unint64_t v5 = *(void *)(v4 + 56);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1D435C4A4(a2, v5);
    unint64_t v7 = v6;
    LOBYTE(v4) = v8;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v4 & 1) == 0)
    {
      swift_beginAccess();
      uint64_t result = swift_weakLoadStrong();
      if (result)
      {
        swift_beginAccess();
        uint64_t v9 = (void *)sub_1D435C634(v7);
        swift_endAccess();

        return swift_release();
      }
    }
  }
  return result;
}

void sub_1D43606C0(void *a1, void (*a2)(void *, void, void *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    uint64_t v9 = *(void **)(a4 + 24);
    uint64_t v10 = (void *)swift_allocObject();
    void v10[2] = a2;
    v10[3] = a3;
    v10[4] = a5;
    v15[4] = sub_1D43698D8;
    v15[5] = v10;
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 1107296256;
    void v15[2] = sub_1D42E1B08;
    v15[3] = &unk_1F2C0A448;
    uint64_t v11 = _Block_copy(v15);
    id v12 = a1;
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_removeBeacon_completion_, v12, v11);
    _Block_release(v11);
  }
  else
  {
    LOBYTE(v15[0]) = 4;
    sub_1D43694E4();
    uint64_t v13 = (void *)swift_allocError();
    *uint64_t v14 = 7;
    a2(v15, 0, v13);
  }
}

uint64_t sub_1D4360824(void *a1, uint64_t (*a2)(uint64_t *, uint64_t, uint64_t), uint64_t a3, uint64_t a4, const char *a5, uint64_t *a6, uint64_t (*a7)(void), void *a8, uint64_t (*a9)(void))
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D4469928();
  sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
  id v15 = a1;
  id v16 = a1;
  id v17 = sub_1D44698F8();
  os_log_type_t v18 = sub_1D446A038();
  uint64_t v48 = a4;
  if (os_log_type_enabled(v17, v18))
  {
    os_log_type_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v51 = v20;
    *(_DWORD *)os_log_type_t v19 = 136315138;
    id v21 = a1;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    uint64_t v22 = sub_1D4469B68();
    uint64_t v50 = (void *)sub_1D42CB9EC(v22, v23, &v51);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v17, v18, a5, v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v20, -1, -1);
    MEMORY[0x1D9447730](v19, -1, -1);

    if (a1) {
      goto LABEL_5;
    }
LABEL_9:
    LOBYTE(v51) = 2;
    return a2(&v51, 0, 0);
  }

  if (!a1) {
    goto LABEL_9;
  }
LABEL_5:
  uint64_t v51 = (uint64_t)a1;
  id v24 = a1;
  sub_1D42D5DA0(&qword_1EA6C9360);
  type metadata accessor for CommandError(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    swift_getErrorValue();
    id v32 = a1;
    uint64_t v33 = &unk_1D446E000;
    if (sub_1D43A5590(v49) == (id)14)
    {
      LOBYTE(v51) = 4;
      uint64_t v34 = a6;
      sub_1D42D5DA0(a6);
      uint64_t v35 = a7;
      uint64_t v36 = *(void *)(a7(0) - 8);
      unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_1D446E050;
      sub_1D42CA688(v48 + *a8, v38 + v37, a9);
      sub_1D43694E4();
      uint64_t v39 = swift_allocError();
      *id v40 = 9;
      a2(&v51, v38, v39);

      uint64_t v41 = (void *)v39;
      uint64_t v33 = (_OWORD *)&unk_1D446E000;

      swift_bridgeObjectRelease();
    }
    else
    {

      uint64_t v34 = a6;
      uint64_t v35 = a7;
    }
    LOBYTE(v51) = 4;
    sub_1D42D5DA0(v34);
    uint64_t v42 = *(void *)(v35(0) - 8);
    unint64_t v43 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = v33[5];
    sub_1D42CA688(v48 + *a8, v44 + v43, a9);
    sub_1D43694E4();
    uint64_t v29 = (void *)swift_allocError();
    unsigned char *v45 = 2;
    a2(&v51, v44, (uint64_t)v29);
    goto LABEL_15;
  }
  uint64_t v51 = (uint64_t)v50;
  sub_1D4365148(MEMORY[0x1E4FBC860]);
  sub_1D42DDAD4((unint64_t *)&unk_1EA6C95A8, type metadata accessor for CommandError);
  sub_1D44693B8();
  char v25 = sub_1D4469378();

  if ((v25 & 1) == 0)
  {

    goto LABEL_11;
  }
  LOBYTE(v51) = 4;
  sub_1D42D5DA0(a6);
  uint64_t v26 = *(void *)(a7(0) - 8);
  unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1D446E050;
  sub_1D42CA688(v48 + *a8, v28 + v27, a9);
  sub_1D43694E4();
  uint64_t v29 = (void *)swift_allocError();
  *uint64_t v30 = 3;
  a2(&v51, v28, (uint64_t)v29);

LABEL_15:
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4360E54(void *a1, void (*a2)(uint64_t *, uint64_t, void *), uint64_t a3, uint64_t a4, const char *a5)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D4469928();
  sub_1D42D7FAC(v9, (uint64_t)qword_1EBD83228);
  id v10 = a1;
  id v11 = a1;
  id v12 = sub_1D44698F8();
  os_log_type_t v13 = sub_1D446A038();
  if (!os_log_type_enabled(v12, v13))
  {

    if (a1) {
      goto LABEL_5;
    }
LABEL_7:
    LOBYTE(v28) = 2;
    sub_1D42D5DA0(&qword_1EA6C9E70);
    uint64_t v24 = *(void *)(type metadata accessor for FMIPItem() - 8);
    unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1D446E050;
    sub_1D42CA688(a4 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, v26 + v25, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v22 = v26;
    unint64_t v23 = 0;
    goto LABEL_8;
  }
  uint64_t v14 = (uint8_t *)swift_slowAlloc();
  uint64_t v15 = swift_slowAlloc();
  uint64_t v28 = v15;
  *(_DWORD *)uint64_t v14 = 136315138;
  id v16 = a1;
  sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
  uint64_t v17 = sub_1D4469B68();
  sub_1D42CB9EC(v17, v18, &v28);
  sub_1D446A188();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_1D4271000, v12, v13, a5, v14, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1D9447730](v15, -1, -1);
  MEMORY[0x1D9447730](v14, -1, -1);

  if (!a1) {
    goto LABEL_7;
  }
LABEL_5:
  LOBYTE(v28) = 4;
  sub_1D42D5DA0(&qword_1EA6C9E70);
  uint64_t v19 = *(void *)(type metadata accessor for FMIPItem() - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1D446E050;
  sub_1D42CA688(a4 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, v21 + v20, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v22 = v21;
  unint64_t v23 = a1;
LABEL_8:
  a2(&v28, v22, v23);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43611F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v64 = a3;
  uint64_t v62 = a1;
  uint64_t v63 = a2;
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for FMIPDevice();
  uint64_t v76 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  unint64_t v7 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMIPItem();
  uint64_t v67 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  id v11 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  os_log_type_t v13 = (char *)v61 - v12;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D4469928();
  sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
  uint64_t v15 = sub_1D44698F8();
  os_log_type_t v16 = sub_1D446A038();
  BOOL v17 = os_log_type_enabled(v15, v16);
  double v74 = v7;
  if (v17)
  {
    unint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v18 = 0;
    _os_log_impl(&dword_1D4271000, v15, v16, "FMIPItemActionsController: performing add safe location to all supported beacons action", v18, 2u);
    uint64_t v19 = v18;
    unint64_t v7 = v74;
    MEMORY[0x1D9447730](v19, -1, -1);
  }

  uint64_t v20 = *(void *)(v65 + 32);
  swift_beginAccess();
  uint64_t v21 = *(void **)(v20 + 280);
  uint64_t v22 = v21[2];
  uint64_t v68 = v5;
  if (v22)
  {
    uint64_t v75 = v20;
    uint64_t v23 = (uint64_t)v21 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
    uint64_t v24 = *(void *)(v67 + 72);
    double v73 = v21;
    swift_bridgeObjectRetain_n();
    double v77 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1D42CA688(v23, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      if ((v13[304] & 0x10) != 0)
      {
        uint64_t v25 = *((void *)v13 + 44);
        uint64_t v26 = *((void *)v13 + 45);
        swift_bridgeObjectRetain();
        sub_1D42CA888((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v77 = sub_1D43B0268(0, v77[2] + 1, 1, v77);
        }
        unint64_t v28 = v77[2];
        unint64_t v27 = v77[3];
        if (v28 >= v27 >> 1) {
          double v77 = sub_1D43B0268((void *)(v27 > 1), v28 + 1, 1, v77);
        }
        uint64_t v29 = v77;
        v77[2] = v28 + 1;
        uint64_t v30 = &v29[2 * v28];
        v30[4] = v25;
        v30[5] = v26;
        unint64_t v7 = v74;
      }
      else
      {
        sub_1D42CA888((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      }
      v23 += v24;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease_n();
    unint64_t v5 = v68;
    uint64_t v20 = v75;
  }
  else
  {
    double v77 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_beginAccess();
  uint64_t v31 = *(void *)(v20 + 80);
  uint64_t v32 = *(void *)(v31 + 16);
  uint64_t v33 = MEMORY[0x1E4FBC860];
  uint64_t v34 = v69;
  if (v32)
  {
    uint64_t v35 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v36 = v31 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
    uint64_t v76 = *(void *)(v76 + 72);
    v61[1] = v31;
    swift_bridgeObjectRetain_n();
    long long v66 = xmmword_1D446E050;
    uint64_t v37 = 0;
    uint64_t v71 = v36;
    uint64_t v72 = v32;
    while (1)
    {
      sub_1D42CA688(v36 + v76 * v37, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      if ((v7[242] & 4) != 0) {
        break;
      }
      sub_1D42CA888((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_20:
      if (++v37 == v32)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v33 = MEMORY[0x1E4FBC860];
        goto LABEL_44;
      }
    }
    sub_1D42A3A74((uint64_t)&v7[*(int *)(v34 + 128)], (uint64_t)v5, &qword_1EBD7E670);
    uint64_t v38 = type metadata accessor for FMIPItemGroup();
    int v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v5, 1, v38);
    uint64_t v75 = v37;
    if (v39 == 1)
    {
      sub_1D4276C3C((uint64_t)v5, &qword_1EBD7E670);
      uint64_t v40 = *((void *)v7 + 3);
      if (!v40)
      {
        sub_1D42CA888((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_41:
        uint64_t v37 = v75;
        goto LABEL_20;
      }
      uint64_t v41 = *((void *)v7 + 2);
      sub_1D42D5DA0(&qword_1EBD80060);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = v66;
      *(void *)(v42 + 32) = v41;
      *(void *)(v42 + 40) = v40;
      swift_bridgeObjectRetain();
    }
    else
    {
      double v73 = v35;
      uint64_t v43 = *((void *)v5 + 5);
      swift_bridgeObjectRetain();
      sub_1D42CA888((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      int64_t v44 = *(void *)(v43 + 16);
      if (v44)
      {
        v78[0] = MEMORY[0x1E4FBC860];
        sub_1D4337070(0, v44, 0);
        uint64_t v45 = *(unsigned __int8 *)(v67 + 80);
        uint64_t v70 = v43;
        uint64_t v46 = v43 + ((v45 + 32) & ~v45);
        uint64_t v47 = *(void *)(v67 + 72);
        uint64_t v42 = v78[0];
        do
        {
          sub_1D42CA688(v46, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          uint64_t v48 = *((void *)v11 + 44);
          uint64_t v49 = *((void *)v11 + 45);
          swift_bridgeObjectRetain();
          sub_1D42CA888((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1D4337070(0, *(void *)(v42 + 16) + 1, 1);
            uint64_t v42 = v78[0];
          }
          unint64_t v51 = *(void *)(v42 + 16);
          unint64_t v50 = *(void *)(v42 + 24);
          if (v51 >= v50 >> 1)
          {
            sub_1D4337070(v50 > 1, v51 + 1, 1);
            uint64_t v42 = v78[0];
          }
          *(void *)(v42 + 16) = v51 + 1;
          uint64_t v52 = v42 + 16 * v51;
          *(void *)(v52 + 32) = v48;
          *(void *)(v52 + 40) = v49;
          v46 += v47;
          --v44;
        }
        while (v44);
        swift_bridgeObjectRelease();
        unint64_t v5 = v68;
        uint64_t v34 = v69;
        unint64_t v7 = v74;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v42 = MEMORY[0x1E4FBC860];
      }
      uint64_t v35 = v73;
    }
    sub_1D42CA888((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v35 = sub_1D43B0378(0, v35[2] + 1, 1, v35);
    }
    unint64_t v54 = v35[2];
    unint64_t v53 = v35[3];
    if (v54 >= v53 >> 1) {
      uint64_t v35 = sub_1D43B0378((void *)(v53 > 1), v54 + 1, 1, v35);
    }
    v35[2] = v54 + 1;
    v35[v54 + 4] = v42;
    uint64_t v36 = v71;
    uint64_t v32 = v72;
    goto LABEL_41;
  }
  uint64_t v35 = (void *)MEMORY[0x1E4FBC860];
LABEL_44:
  uint64_t v79 = v33;
  uint64_t v55 = v35[2];
  if (v55)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v55; ++i)
    {
      uint64_t v57 = swift_bridgeObjectRetain();
      sub_1D43AEA98(v57);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v78[0] = v77;
  sub_1D43AEA98(v79);
  uint64_t v58 = v78[0];
  memcpy(v78, (const void *)(v62 + 16), sizeof(v78));
  type metadata accessor for FMIPAddMultipleSafeLocationsItemAction();
  uint64_t inited = (void *)swift_initStackObject();
  memcpy(inited + 2, v78, 0x160uLL);
  inited[47] = 0;
  inited[48] = v58;
  inited[46] = 0;
  sub_1D42FC4A4((uint64_t)v78);
  sub_1D4361BBC((uint64_t)inited, v63, v64);
  sub_1D42FC604((uint64_t)v78);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4361A1C(void *a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EBD83228);
  unint64_t v7 = sub_1D44698F8();
  os_log_type_t v8 = sub_1D446A038();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1D4271000, v7, v8, "FMIPItemActionsController: performing add safe location action", v9, 2u);
    MEMORY[0x1D9447730](v9, -1, -1);
  }

  sub_1D42D5DA0(&qword_1EBD80060);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1D446E050;
  uint64_t v11 = a1[47];
  *(void *)(v10 + 32) = a1[46];
  *(void *)(v10 + 40) = v11;
  memcpy(__dst, a1 + 2, sizeof(__dst));
  type metadata accessor for FMIPAddMultipleSafeLocationsItemAction();
  uint64_t inited = (void *)swift_initStackObject();
  memcpy(inited + 2, __dst, 0x160uLL);
  inited[47] = 0;
  inited[48] = v10;
  inited[46] = 0;
  swift_bridgeObjectRetain();
  sub_1D42FC4A4((uint64_t)__dst);
  sub_1D4361BBC((uint64_t)inited, a2, a3);
  sub_1D42FC604((uint64_t)__dst);
  return swift_bridgeObjectRelease();
}

void sub_1D4361BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v44 = a1;
  uint64_t v7 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D4469688();
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  os_log_type_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v46 = (char *)&v40 - v14;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1D4469928();
  sub_1D42D7FAC(v15, (uint64_t)qword_1EBD83228);
  os_log_type_t v16 = sub_1D44698F8();
  os_log_type_t v17 = sub_1D446A038();
  if (os_log_type_enabled(v16, v17))
  {
    unint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v18 = 0;
    _os_log_impl(&dword_1D4271000, v16, v17, "FMIPItemActionsController: performing add safe location action", v18, 2u);
    MEMORY[0x1D9447730](v18, -1, -1);
  }

  uint64_t v19 = v44;
  uint64_t v20 = *(void *)(*(void *)(v44 + 384) + 16);
  if (v20)
  {
    uint64_t v41 = a2;
    uint64_t v42 = a3;
    uint64_t v43 = v4;
    uint64_t v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v47 + 32);
    uint64_t v40 = swift_bridgeObjectRetain();
    uint64_t v23 = v40 + 40;
    unint64_t v24 = MEMORY[0x1E4FBC860];
    uint64_t v45 = v13;
    do
    {
      swift_bridgeObjectRetain();
      sub_1D4469628();
      swift_bridgeObjectRelease();
      if ((*v21)(v9, 1, v10) == 1)
      {
        sub_1D4276C3C((uint64_t)v9, (uint64_t *)&unk_1EBD7E930);
      }
      else
      {
        uint64_t v25 = *v22;
        uint64_t v26 = v46;
        (*v22)(v46, v9, v10);
        v25(v13, v26, v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v24 = sub_1D43B00D4(0, *(void *)(v24 + 16) + 1, 1, v24);
        }
        unint64_t v28 = *(void *)(v24 + 16);
        unint64_t v27 = *(void *)(v24 + 24);
        if (v28 >= v27 >> 1) {
          unint64_t v24 = sub_1D43B00D4(v27 > 1, v28 + 1, 1, v24);
        }
        *(void *)(v24 + 16) = v28 + 1;
        unint64_t v29 = v24
            + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))
            + *(void *)(v47 + 72) * v28;
        os_log_type_t v13 = v45;
        v25((char *)v29, v45, v10);
      }
      v23 += 16;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    a3 = v42;
    uint64_t v4 = v43;
    a2 = v41;
    uint64_t v19 = v44;
  }
  else
  {
    unint64_t v24 = MEMORY[0x1E4FBC860];
  }
  uint64_t v30 = swift_allocObject();
  *(unsigned char *)(v30 + 16) = 0;
  uint64_t v31 = *(void **)(v19 + 40);
  if (*(void *)(v19 + 360))
  {
    id v32 = v31;
    swift_bridgeObjectRetain();
    uint64_t v33 = (void *)sub_1D4469B08();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v34 = v31;
    uint64_t v33 = 0;
  }
  id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F97C70]), sel_initWithType_name_location_approvalState_, 0, v33, v31, 1);

  uint64_t v36 = *(void **)(v4 + 24);
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = v35;
  v37[3] = v30;
  v37[4] = a2;
  v37[5] = a3;
  v37[6] = v4;
  v37[7] = v24;
  aBlock[4] = sub_1D43654CC;
  aBlock[5] = v37;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D4276428;
  uint64_t aBlock[3] = &unk_1F2C09AE8;
  uint64_t v38 = _Block_copy(aBlock);
  id v39 = v35;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v36, sel_addSafeLocation_completion_, v39, v38);
  _Block_release(v38);
  swift_release();
}

void sub_1D43620AC(int a1, void *a2, void *a3, uint64_t a4, void (*a5)(void, void, void, void, void), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v92 = a7;
  uint64_t v93 = a4;
  uint64_t v96 = a2;
  int v94 = a1;
  uint64_t v12 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v12 - 8);
  double v88 = (char *)v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D4469688();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  double v87 = (char *)v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v82 - v18;
  uint64_t v20 = swift_allocBox();
  uint64_t v22 = v21;
  id v23 = objc_msgSend(a3, sel_identifier);
  sub_1D4469668();

  uint64_t v97 = v15;
  unint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 32);
  uint64_t v95 = v22;
  uint64_t v86 = v15 + 32;
  id v85 = v24;
  v24(v22, (uint64_t)v19, v14);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1D4469928();
  sub_1D42D7FAC(v25, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v26 = sub_1D44698F8();
  os_log_type_t v27 = sub_1D446A038();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v89 = a8;
    uint64_t v29 = v28;
    uint64_t v83 = swift_slowAlloc();
    uint64_t v103 = v83;
    *(_DWORD *)uint64_t v29 = 136315394;
    *(void *)&long long aBlock = 0;
    *((void *)&aBlock + 1) = 0xE000000000000000;
    uint64_t v91 = v20;
    uint64_t v90 = a5;
    uint64_t v84 = a6;
    sub_1D4469C08();
    swift_bridgeObjectRelease();
    *(void *)&long long aBlock = sub_1D42CB9EC(aBlock, *((unint64_t *)&aBlock + 1), &v103);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    v82[1] = v29 + 14;
    uint64_t v30 = v95;
    swift_beginAccess();
    uint64_t v31 = v19;
    uint64_t v32 = v97;
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v31, v30, v14);
    sub_1D42DDAD4((unint64_t *)&qword_1EA6C92C0, MEMORY[0x1E4F27990]);
    uint64_t v33 = sub_1D446A6D8();
    unint64_t v35 = v34;
    uint64_t v36 = v32;
    uint64_t v19 = v31;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v14);
    *(void *)&long long aBlock = sub_1D42CB9EC(v33, v35, &v103);
    uint64_t v20 = v91;
    a5 = v90;
    sub_1D446A188();
    swift_release_n();
    a6 = v84;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v26, v27, "FMIPItemActionsController: Add safe location completed with success? %s, identifier: %s", (uint8_t *)v29, 0x16u);
    uint64_t v37 = v83;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v37, -1, -1);
    uint64_t v38 = v29;
    a8 = v89;
    MEMORY[0x1D9447730](v38, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  id v39 = v96;
  if (v96)
  {
    swift_getErrorValue();
    if (sub_1D43A5590(v98) == (id)8)
    {
      id v40 = v39;
      id v41 = v39;
      uint64_t v42 = sub_1D44698F8();
      os_log_type_t v43 = sub_1D446A038();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v89 = a8;
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v90 = a5;
        uint64_t v46 = v45;
        *(void *)&long long aBlock = v45;
        uint64_t v91 = v20;
        *(_DWORD *)uint64_t v44 = 136315138;
        uint64_t v103 = (uint64_t)v39;
        id v47 = v39;
        sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
        uint64_t v48 = sub_1D4469B68();
        uint64_t v103 = sub_1D42CB9EC(v48, v49, (uint64_t *)&aBlock);
        uint64_t v20 = v91;
        sub_1D446A188();
        unint64_t v50 = v96;
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D4271000, v42, v43, "FMIPItemActionsController: Safe Location already exists. Assigning it. %s", v44, 0xCu);
        swift_arrayDestroy();
        uint64_t v51 = v46;
        a5 = v90;
        MEMORY[0x1D9447730](v51, -1, -1);
        MEMORY[0x1D9447730](v44, -1, -1);
      }
      else
      {
      }
      uint64_t v62 = (void *)sub_1D44693C8();
      id v63 = objc_msgSend(v62, sel_userInfo);
      uint64_t v64 = sub_1D4469A58();

      if (*(void *)(v64 + 16))
      {
        unint64_t v65 = sub_1D42C4FCC(0xD000000000000020, 0x80000001D4480800);
        uint64_t v66 = (uint64_t)v88;
        if (v67)
        {
          sub_1D42CBAC0(*(void *)(v64 + 56) + 32 * v65, (uint64_t)&aBlock);
        }
        else
        {
          long long aBlock = 0u;
          long long v100 = 0u;
        }
      }
      else
      {
        long long aBlock = 0u;
        long long v100 = 0u;
        uint64_t v66 = (uint64_t)v88;
      }

      swift_bridgeObjectRelease();
      if (*((void *)&v100 + 1))
      {
        int v68 = swift_dynamicCast();
        uint64_t v69 = v97;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v97 + 56))(v66, v68 ^ 1u, 1, v14);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v66, 1, v14) != 1)
        {
          uint64_t v70 = (unsigned char *)(v93 + 16);
          uint64_t v71 = v87;
          v85(v87, v66, v14);
          uint64_t v72 = v95;
          swift_beginAccess();
          uint64_t v73 = v97;
          (*(void (**)(char *, char *, uint64_t))(v97 + 24))(v72, v71, v14);
          (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v14);
          swift_beginAccess();
          *uint64_t v70 = 1;
          goto LABEL_26;
        }
      }
      else
      {
        sub_1D4276C3C((uint64_t)&aBlock, &qword_1EBD80050);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 56))(v66, 1, 1, v14);
      }
      sub_1D4276C3C(v66, (uint64_t *)&unk_1EBD7E930);
      goto LABEL_26;
    }
  }
  if (v94)
  {
LABEL_26:
    double v74 = *(void **)(v92 + 24);
    uint64_t v75 = v95;
    swift_beginAccess();
    uint64_t v76 = v97;
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v19, v75, v14);
    double v77 = (void *)sub_1D4469648();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v19, v14);
    double v78 = (void *)sub_1D4469D58();
    uint64_t v79 = (void *)swift_allocObject();
    v79[2] = a5;
    v79[3] = a6;
    uint64_t v80 = v93;
    v79[4] = v20;
    v79[5] = v80;
    unint64_t v101 = sub_1D43654E0;
    unint64_t v102 = v79;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v100 = sub_1D4276428;
    *((void *)&v100 + 1) = &unk_1F2C09B38;
    id v81 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v74, sel_assignSafeLocation_beaconUUIDs_completion_, v77, v78, v81);
    _Block_release(v81);
    swift_release();

    return;
  }
  id v52 = v39;
  id v53 = v39;
  unint64_t v54 = sub_1D44698F8();
  os_log_type_t v55 = sub_1D446A038();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = (uint8_t *)swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    uint64_t v91 = v20;
    uint64_t v58 = v57;
    *(void *)&long long aBlock = v57;
    *(_DWORD *)uint64_t v56 = 136315138;
    uint64_t v103 = (uint64_t)v39;
    id v59 = v39;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    uint64_t v60 = sub_1D4469B68();
    uint64_t v103 = sub_1D42CB9EC(v60, v61, (uint64_t *)&aBlock);
    id v39 = v96;
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v54, v55, "FMIPItemActionsController: Add safe location error %s", v56, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v58, -1, -1);
    MEMORY[0x1D9447730](v56, -1, -1);
  }
  else
  {
  }
  LOBYTE(aBlock) = 4;
  a5(&aBlock, 0, 0, v39, 2);
  swift_release();
}

uint64_t sub_1D4362C78(uint64_t a1, void *a2, void (*a3)(void, void, void, void, void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_1D4469688();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_projectBox();
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D4469928();
  sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
  id v15 = a2;
  id v16 = a2;
  uint64_t v17 = sub_1D44698F8();
  os_log_type_t v18 = sub_1D446A038();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v44 = a6;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v46 = a3;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v45 = v13;
    uint64_t v22 = v21;
    v48[0] = v21;
    uint64_t v43 = v10;
    *(_DWORD *)uint64_t v20 = 136315138;
    uint64_t v42 = v20 + 4;
    uint64_t v47 = (uint64_t)a2;
    id v23 = a2;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    uint64_t v24 = sub_1D4469B68();
    uint64_t v47 = sub_1D42CB9EC(v24, v25, v48);
    uint64_t v10 = v43;
    sub_1D446A188();
    a6 = v44;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v17, v18, "FMIPItemActionsController: Assign safe location completed with error? %s", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v26 = v22;
    uint64_t v13 = v45;
    MEMORY[0x1D9447730](v26, -1, -1);
    os_log_type_t v27 = v20;
    a3 = v46;
    MEMORY[0x1D9447730](v27, -1, -1);
  }
  else
  {
  }
  uint64_t v28 = (unsigned __int8 *)(a6 + 16);
  uint64_t v29 = (void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v30 = (void (**)(char *, uint64_t))(v10 + 8);
  if (a2)
  {
    char v49 = 4;
    swift_beginAccess();
    (*v29)(v12, v13, v9);
    uint64_t v31 = sub_1D4469638();
    uint64_t v33 = v32;
    (*v30)(v12, v9);
    swift_beginAccess();
    uint64_t v34 = *v28;
    uint64_t v35 = v31;
    uint64_t v36 = v33;
    uint64_t v37 = a2;
  }
  else
  {
    char v49 = 2;
    swift_beginAccess();
    (*v29)(v12, v13, v9);
    uint64_t v38 = sub_1D4469638();
    uint64_t v40 = v39;
    (*v30)(v12, v9);
    swift_beginAccess();
    uint64_t v34 = *v28;
    uint64_t v35 = v38;
    uint64_t v36 = v40;
    uint64_t v37 = 0;
  }
  a3(&v49, v35, v36, v37, v34);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4363048(void *a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EBD83228);
  uint64_t v7 = sub_1D44698F8();
  os_log_type_t v8 = sub_1D446A038();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1D4271000, v7, v8, "FMIPItemActionsController: performing remove safe location action", v9, 2u);
    MEMORY[0x1D9447730](v9, -1, -1);
  }

  sub_1D42D5DA0(&qword_1EBD80060);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1D446E050;
  uint64_t v11 = a1[47];
  *(void *)(v10 + 32) = a1[46];
  *(void *)(v10 + 40) = v11;
  uint64_t v12 = a1 + 2;
  memcpy(v15, v12, sizeof(v15));
  type metadata accessor for FMIPRemoveMultipleSafeLocationItemsAction();
  uint64_t v13 = swift_allocObject();
  memcpy((void *)(v13 + 16), v12, 0x160uLL);
  *(void *)(v13 + 368) = v10;
  swift_bridgeObjectRetain();
  sub_1D42FC4A4((uint64_t)v15);
  sub_1D43631E4(v13, a2, a3);
  return swift_release();
}

void sub_1D43631E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v37 = a2;
  uint64_t v7 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D4469688();
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v39 = (char *)&v33 - v14;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1D4469928();
  sub_1D42D7FAC(v15, (uint64_t)qword_1EBD83228);
  id v16 = sub_1D44698F8();
  os_log_type_t v17 = sub_1D446A038();
  if (os_log_type_enabled(v16, v17))
  {
    os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v18 = 0;
    _os_log_impl(&dword_1D4271000, v16, v17, "FMIPItemActionsController: performing remove safe location action", v18, 2u);
    MEMORY[0x1D9447730](v18, -1, -1);
  }

  uint64_t v19 = *(void *)(*(void *)(a1 + 368) + 16);
  if (v19)
  {
    uint64_t v34 = a1;
    uint64_t v35 = v4;
    uint64_t v36 = a3;
    uint64_t v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v40 + 32);
    uint64_t v33 = swift_bridgeObjectRetain();
    uint64_t v22 = v33 + 40;
    unint64_t v23 = MEMORY[0x1E4FBC860];
    uint64_t v38 = v13;
    do
    {
      swift_bridgeObjectRetain();
      sub_1D4469628();
      swift_bridgeObjectRelease();
      if ((*v20)(v9, 1, v10) == 1)
      {
        sub_1D4276C3C((uint64_t)v9, (uint64_t *)&unk_1EBD7E930);
      }
      else
      {
        uint64_t v24 = *v21;
        unint64_t v25 = v39;
        (*v21)(v39, v9, v10);
        v24(v13, v25, v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v23 = sub_1D43B00D4(0, *(void *)(v23 + 16) + 1, 1, v23);
        }
        unint64_t v27 = *(void *)(v23 + 16);
        unint64_t v26 = *(void *)(v23 + 24);
        if (v27 >= v26 >> 1) {
          unint64_t v23 = sub_1D43B00D4(v26 > 1, v27 + 1, 1, v23);
        }
        *(void *)(v23 + 16) = v27 + 1;
        unint64_t v28 = v23
            + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))
            + *(void *)(v40 + 72) * v27;
        uint64_t v13 = v38;
        v24((char *)v28, v38, v10);
      }
      v22 += 16;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    uint64_t v4 = v35;
    a3 = v36;
    a1 = v34;
  }
  else
  {
    unint64_t v23 = MEMORY[0x1E4FBC860];
  }
  uint64_t v29 = *(void **)(v4 + 24);
  uint64_t v30 = (void *)swift_allocObject();
  v30[2] = a1;
  v30[3] = v4;
  uint64_t v31 = v37;
  v30[4] = v23;
  v30[5] = v31;
  v30[6] = a3;
  aBlock[4] = sub_1D4365130;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D4275B70;
  uint64_t aBlock[3] = &unk_1F2C09A20;
  uint64_t v32 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v29, sel_safeLocationsForSeparationMonitoring_, v32);
  _Block_release(v32);
}

uint64_t sub_1D4363628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v82 = a6;
  uint64_t v81 = a5;
  uint64_t v80 = a4;
  uint64_t v79 = a3;
  uint64_t v83 = a2;
  uint64_t v88 = sub_1D4469688();
  uint64_t v7 = *(void *)(v88 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v88);
  double v78 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v85 = (char *)&v70 - v10;
  if (qword_1EBD80068 != -1) {
LABEL_47:
  }
    swift_once();
  uint64_t v11 = sub_1D4469928();
  uint64_t v12 = sub_1D42D7FAC(v11, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain_n();
  uint64_t v84 = v12;
  uint64_t v13 = sub_1D44698F8();
  os_log_type_t v14 = sub_1D446A038();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v16 = MEMORY[0x1E4FBC840];
  if (v15)
  {
    os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    aBlock[0] = v18;
    *(_DWORD *)os_log_type_t v17 = 136315138;
    sub_1D4275AD0(0, &qword_1EA6CA230);
    sub_1D42E2004();
    uint64_t v19 = sub_1D4469F08();
    uint64_t v92 = sub_1D42CB9EC(v19, v20, aBlock);
    sub_1D446A188();
    uint64_t v21 = a1;
    swift_bridgeObjectRelease_n();
    uint64_t v16 = MEMORY[0x1E4FBC840];
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v13, v14, "FMIPItemActionsController: Owner session safe locations %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v18, -1, -1);
    MEMORY[0x1D9447730](v17, -1, -1);
  }
  else
  {

    uint64_t v21 = a1;
    swift_bridgeObjectRelease_n();
  }
  a1 = v83;
  swift_retain_n();
  uint64_t v22 = sub_1D44698F8();
  os_log_type_t v23 = sub_1D446A038();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    aBlock[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    double v87 = (void (**)(char *, uint64_t))(v24 + 4);
    uint64_t v26 = sub_1D4469B98();
    uint64_t v92 = sub_1D42CB9EC(v26, v27, aBlock);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v22, v23, "FMIPItemActionsController: action location identifier %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v25, -1, -1);
    MEMORY[0x1D9447730](v24, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  if ((v21 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1D446A238();
    sub_1D4275AD0(0, &qword_1EA6CA230);
    sub_1D42E2004();
    sub_1D4469F48();
    uint64_t v29 = v92;
    uint64_t v76 = v93;
    uint64_t v30 = v94;
    uint64_t v31 = v95;
    unint64_t v32 = v96;
  }
  else
  {
    uint64_t v33 = -1 << *(unsigned char *)(v21 + 32);
    uint64_t v34 = *(void *)(v21 + 56);
    uint64_t v76 = v21 + 56;
    uint64_t v35 = ~v33;
    uint64_t v36 = -v33;
    if (v36 < 64) {
      uint64_t v37 = ~(-1 << v36);
    }
    else {
      uint64_t v37 = -1;
    }
    unint64_t v32 = v37 & v34;
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v30 = v35;
    uint64_t v31 = 0;
  }
  uint64_t v74 = v29 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v70 = v30;
  int64_t v75 = (unint64_t)(v30 + 64) >> 6;
  double v87 = (void (**)(char *, uint64_t))(v7 + 8);
  double v77 = v91;
  *(void *)&long long v28 = 136315138;
  long long v72 = v28;
  uint64_t v71 = v16 + 8;
  uint64_t v73 = MEMORY[0x1E4FBC838] + 8;
  uint64_t v7 = v29;
  while (v7 < 0)
  {
    uint64_t v50 = sub_1D446A2B8();
    if (!v50) {
      return sub_1D42F9364();
    }
    uint64_t v89 = v50;
    sub_1D4275AD0(0, &qword_1EA6CA230);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v46 = (id)aBlock[0];
    swift_unknownObjectRelease();
    uint64_t v49 = v31;
    uint64_t v47 = v32;
    if (!v46) {
      return sub_1D42F9364();
    }
LABEL_39:
    id v54 = objc_msgSend(v46, sel_identifier, v70, v71);
    os_log_type_t v55 = v85;
    sub_1D4469668();

    uint64_t v56 = sub_1D4469638();
    uint64_t v58 = v57;
    id v59 = *v87;
    (*v87)(v55, v88);
    if (v56 == *(void *)(a1 + 16) && v58 == *(void *)(a1 + 24))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v60 = sub_1D446A758();
      swift_bridgeObjectRelease();
      if ((v60 & 1) == 0) {
        goto LABEL_17;
      }
    }
    uint64_t v86 = v47;
    swift_retain_n();
    unint64_t v61 = sub_1D44698F8();
    os_log_type_t v62 = sub_1D446A038();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = swift_slowAlloc();
      uint64_t v64 = v7;
      uint64_t v65 = swift_slowAlloc();
      aBlock[0] = v65;
      *(_DWORD *)uint64_t v63 = v72;
      uint64_t v66 = sub_1D4469B98();
      *(void *)(v63 + 4) = sub_1D42CB9EC(v66, v67, aBlock);
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v61, v62, "FMIPItemActionsController: REMOVE SAFE LOCATION %s", (uint8_t *)v63, 0xCu);
      swift_arrayDestroy();
      uint64_t v68 = v65;
      uint64_t v7 = v64;
      a1 = v83;
      MEMORY[0x1D9447730](v68, -1, -1);
      MEMORY[0x1D9447730](v63, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v38 = *(void **)(v79 + 24);
    id v39 = objc_msgSend(v46, sel_identifier);
    uint64_t v40 = v78;
    sub_1D4469668();

    id v41 = (void *)sub_1D4469648();
    v59(v40, v88);
    uint64_t v42 = sub_1D4469D58();
    uint64_t v43 = swift_allocObject();
    uint64_t v44 = v82;
    *(void *)(v43 + 16) = v81;
    *(void *)(v43 + 24) = v44;
    v91[2] = sub_1D4365440;
    v91[3] = v43;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    v91[0] = sub_1D4276428;
    v91[1] = &unk_1F2C09A70;
    uint64_t v45 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v38, sel_unassignSafeLocation_beaconUUIDs_completion_, v41, v42, v45);
    _Block_release(v45);

    id v46 = (id)v42;
    uint64_t v47 = v86;
LABEL_17:

    uint64_t v31 = v49;
    unint64_t v32 = v47;
  }
  if (v32)
  {
    uint64_t v47 = (v32 - 1) & v32;
    unint64_t v48 = __clz(__rbit64(v32)) | (v31 << 6);
    uint64_t v49 = v31;
    goto LABEL_38;
  }
  int64_t v51 = v31 + 1;
  if (__OFADD__(v31, 1))
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v51 >= v75) {
    return sub_1D42F9364();
  }
  unint64_t v52 = *(void *)(v76 + 8 * v51);
  uint64_t v49 = v31 + 1;
  if (v52) {
    goto LABEL_37;
  }
  uint64_t v49 = v31 + 2;
  if (v31 + 2 >= v75) {
    return sub_1D42F9364();
  }
  unint64_t v52 = *(void *)(v76 + 8 * v49);
  if (v52) {
    goto LABEL_37;
  }
  uint64_t v49 = v31 + 3;
  if (v31 + 3 >= v75) {
    return sub_1D42F9364();
  }
  unint64_t v52 = *(void *)(v76 + 8 * v49);
  if (v52) {
    goto LABEL_37;
  }
  uint64_t v49 = v31 + 4;
  if (v31 + 4 >= v75) {
    return sub_1D42F9364();
  }
  unint64_t v52 = *(void *)(v76 + 8 * v49);
  if (v52)
  {
LABEL_37:
    uint64_t v47 = (v52 - 1) & v52;
    unint64_t v48 = __clz(__rbit64(v52)) + (v49 << 6);
LABEL_38:
    id v46 = *(id *)(*(void *)(v7 + 48) + 8 * v48);
    if (!v46) {
      return sub_1D42F9364();
    }
    goto LABEL_39;
  }
  uint64_t v53 = v31 + 5;
  while (v75 != v53)
  {
    unint64_t v52 = *(void *)(v76 + 8 * v53++);
    if (v52)
    {
      uint64_t v49 = v53 - 1;
      goto LABEL_37;
    }
  }
  return sub_1D42F9364();
}

uint64_t sub_1D4363FE0(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t *, void, void, void *, uint64_t), uint64_t a4, const char *a5)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D4469928();
  sub_1D42D7FAC(v8, (uint64_t)qword_1EBD83228);
  id v9 = a2;
  id v10 = a2;
  uint64_t v11 = sub_1D44698F8();
  os_log_type_t v12 = sub_1D446A038();
  if (!os_log_type_enabled(v11, v12))
  {

    if (a2) {
      goto LABEL_5;
    }
LABEL_7:
    LOBYTE(v20) = 2;
    uint64_t v18 = 0;
    return a3(&v20, 0, 0, v18, 2);
  }
  uint64_t v13 = (uint8_t *)swift_slowAlloc();
  uint64_t v14 = swift_slowAlloc();
  uint64_t v20 = v14;
  *(_DWORD *)uint64_t v13 = 136315138;
  id v15 = a2;
  sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
  uint64_t v16 = sub_1D4469B68();
  sub_1D42CB9EC(v16, v17, &v20);
  sub_1D446A188();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_1D4271000, v11, v12, a5, v13, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1D9447730](v14, -1, -1);
  MEMORY[0x1D9447730](v13, -1, -1);

  if (!a2) {
    goto LABEL_7;
  }
LABEL_5:
  LOBYTE(v20) = 4;
  uint64_t v18 = a2;
  return a3(&v20, 0, 0, v18, 2);
}

void sub_1D436420C(uint64_t a1, uint64_t a2, void (*a3)(void *, void, void, void, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  v23[2] = a2;
  sub_1D43CB4E8(sub_1D436AA28, (uint64_t)v23, a1);
  if (v10
    && (uint64_t v11 = v10,
        id v12 = objc_msgSend(v10, sel_mutableSafeLocation),
        v11,
        v12))
  {
    uint64_t v13 = *(void *)(a5 + 40);
    id v14 = v12;
    objc_msgSend(v14, sel_setLocation_, v13);
    if (*(void *)(a5 + 360)) {
      id v15 = (void *)sub_1D4469B08();
    }
    else {
      id v15 = 0;
    }
    objc_msgSend(v14, sel_setName_, v15);

    uint64_t v20 = *(void **)(a6 + 24);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a3;
    *(void *)(v21 + 24) = a4;
    aBlock[4] = sub_1D436AA48;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1D4276428;
    uint64_t aBlock[3] = &unk_1F2C0A740;
    uint64_t v22 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v20, sel_updateSafeLocation_completion_, v14, v22);
    _Block_release(v22);
  }
  else
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1D4469928();
    sub_1D42D7FAC(v16, (uint64_t)qword_1EBD83228);
    unint64_t v17 = sub_1D44698F8();
    os_log_type_t v18 = sub_1D446A038();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1D4271000, v17, v18, "FMIPItemActionsController: update safe location completed with error: unable to fetch existing safe location", v19, 2u);
      MEMORY[0x1D9447730](v19, -1, -1);
    }

    LOBYTE(aBlock[0]) = 4;
    a3(aBlock, 0, 0, 0, 2);
  }
}

uint64_t sub_1D4364494(id *a1)
{
  uint64_t v2 = sub_1D4469688();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*a1, sel_identifier);
  sub_1D4469668();

  char v7 = sub_1D4469658();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

uint64_t sub_1D43645A0(char a1, void *a2, uint64_t (*a3)(uint64_t *, void, void, void *, uint64_t))
{
  if (a1)
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1D4469928();
    sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
    unint64_t v5 = sub_1D44698F8();
    os_log_type_t v6 = sub_1D446A038();
    if (os_log_type_enabled(v5, v6))
    {
      char v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v7 = 0;
      _os_log_impl(&dword_1D4271000, v5, v6, "FMIPItemActionsController: update safe location completed successfully", v7, 2u);
      MEMORY[0x1D9447730](v7, -1, -1);
    }

    LOBYTE(v21) = 2;
    uint64_t v8 = 0;
  }
  else
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1D4469928();
    sub_1D42D7FAC(v10, (uint64_t)qword_1EBD83228);
    id v11 = a2;
    id v12 = a2;
    uint64_t v13 = sub_1D44698F8();
    os_log_type_t v14 = sub_1D446A038();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v21 = v16;
      *(_DWORD *)id v15 = 136315138;
      id v17 = a2;
      sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
      uint64_t v18 = sub_1D4469B68();
      sub_1D42CB9EC(v18, v19, &v21);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v13, v14, "FMIPItemActionsController: update safe location completed with error? %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v16, -1, -1);
      MEMORY[0x1D9447730](v15, -1, -1);
    }
    else
    {
    }
    LOBYTE(v21) = 4;
    uint64_t v8 = a2;
  }
  return a3(&v21, 0, 0, v8, 2);
}

void sub_1D436486C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D4469688();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  os_log_type_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4469628();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1D4276C3C((uint64_t)v10, (uint64_t *)&unk_1EBD7E930);
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1D4469928();
    sub_1D42D7FAC(v15, (uint64_t)qword_1EBD83228);
    uint64_t v16 = sub_1D44698F8();
    os_log_type_t v17 = sub_1D446A018();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_1D4271000, v16, v17, "FMItemDetailContentViewController: No UUID specified for firmware update", v18, 2u);
      MEMORY[0x1D9447730](v18, -1, -1);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    unint64_t v19 = self;
    uint64_t v20 = (void *)sub_1D4469648();
    id v21 = objc_msgSend(v19, sel_updateAccessoryFirmware_, v20);
    id v30 = v21;

    id v22 = objc_msgSend(*(id *)(v4 + 24), sel_executeCommand_, v21);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a2;
    *(void *)(v23 + 24) = a3;
    uint64_t v35 = sub_1D436A85C;
    uint64_t v36 = (void *)v23;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v32 = 1107296256;
    uint64_t v33 = sub_1D435C430;
    uint64_t v34 = &unk_1F2C0A588;
    uint64_t v24 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    id v25 = objc_msgSend(v22, sel_addSuccessBlock_, v24);
    _Block_release(v24);

    uint64_t v26 = (void *)swift_allocObject();
    void v26[2] = a2;
    v26[3] = a3;
    v26[4] = a1;
    uint64_t v35 = sub_1D436A868;
    uint64_t v36 = v26;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v32 = 1107296256;
    uint64_t v33 = sub_1D435C428;
    uint64_t v34 = &unk_1F2C0A5D8;
    unint64_t v27 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id v28 = objc_msgSend(v22, sel_addFailureBlock_, v27);
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1D4364CB4(uint64_t a1, uint64_t (*a2)(char *, void, void))
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D4469928();
  sub_1D42D7FAC(v3, (uint64_t)qword_1EBD83228);
  uint64_t v4 = sub_1D44698F8();
  os_log_type_t v5 = sub_1D446A038();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v6 = 0;
    _os_log_impl(&dword_1D4271000, v4, v5, "FMIPItemActionsController: Update accessory firmware successfully completed", v6, 2u);
    MEMORY[0x1D9447730](v6, -1, -1);
  }

  char v8 = 2;
  return a2(&v8, 0, 0);
}

uint64_t sub_1D4364DC4(void *a1, void (*a2)(uint64_t *, uint64_t, void *), uint64_t a3, uint64_t a4)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D4469928();
  sub_1D42D7FAC(v7, (uint64_t)qword_1EBD83228);
  id v8 = a1;
  id v9 = a1;
  uint64_t v10 = sub_1D44698F8();
  os_log_type_t v11 = sub_1D446A038();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v22 = a4;
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    id v14 = a1;
    sub_1D42D5DA0(&qword_1EA6C9360);
    uint64_t v15 = sub_1D4469B68();
    sub_1D42CB9EC(v15, v16, &v23);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v10, v11, "FMIPItemActionsController: Update accessory firmware completed with error: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v13, -1, -1);
    os_log_type_t v17 = v12;
    a4 = v22;
    MEMORY[0x1D9447730](v17, -1, -1);
  }
  else
  {
  }
  LOBYTE(v23) = 4;
  sub_1D42D5DA0(&qword_1EA6C9E70);
  uint64_t v18 = *(void *)(type metadata accessor for FMIPItem() - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1D446E050;
  sub_1D42CA688(a4 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, v20 + v19, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  a2(&v23, v20, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4365080()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43650E0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D4365130(uint64_t a1)
{
  return sub_1D4369738(a1, sub_1D4363628);
}

unint64_t sub_1D4365148(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1D42D5DA0(&qword_1EBD7E870);
  uint64_t v2 = sub_1D446A4C8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D42A3A74(v6, (uint64_t)&v15, &qword_1EA6CA250);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1D4365280(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    os_log_type_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *os_log_type_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1D42C5494(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D4365280(uint64_t a1, uint64_t a2)
{
  sub_1D446A828();
  sub_1D4469BC8();
  uint64_t v4 = sub_1D446A888();
  return sub_1D43652F8(a1, a2, v4);
}

unint64_t sub_1D43652F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1D446A758() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1D446A758() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_1D446A758()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_1D4365440(uint64_t a1, void *a2)
{
  return sub_1D4363FE0(a1, a2, *(uint64_t (**)(uint64_t *, void, void, void *, uint64_t))(v2 + 16), *(void *)(v2 + 24), "FMIPItemActionsController: remove safe location completed with error? %s");
}

uint64_t sub_1D4365464()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D4365474()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1D43654CC(int a1, void *a2)
{
  sub_1D43620AC(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void (**)(void, void, void, void, void))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_1D43654E0(uint64_t a1, void *a2)
{
  return sub_1D4362C78(a1, a2, *(void (**)(void, void, void, void, void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1D43654F0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D4365504(void *a1)
{
  return sub_1D435EFA4(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), "FMIPItemActionsController: play sound action failed %s", (uint64_t)&unk_1F2C09CD8, (uint64_t)sub_1D436AAB0, (uint64_t)&unk_1F2C09CF0);
}

uint64_t sub_1D4365560(uint64_t a1)
{
  return sub_1D435F454(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), "FMIPItemActionsController: play sound action succeeded", (uint64_t)&unk_1F2C09C88, (uint64_t)sub_1D436AAB0, (uint64_t)&unk_1F2C09CA0);
}

uint64_t sub_1D43655C4()
{
  return sub_1D435FB4C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1D43655E0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D43655F4(void *a1)
{
  return sub_1D435EFA4(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), "FMIPItemActionsController: unauthorized play sound action failed %s", (uint64_t)&unk_1F2C09E90, (uint64_t)sub_1D436AAB0, (uint64_t)&unk_1F2C09EA8);
}

uint64_t sub_1D4365650(uint64_t a1)
{
  return sub_1D435F454(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), "FMIPItemActionsController: unauthorized play sound action succeeded", (uint64_t)&unk_1F2C09E40, (uint64_t)sub_1D43656AC, (uint64_t)&unk_1F2C09E58);
}

void sub_1D43656AC()
{
  sub_1D435F80C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D43656CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t, uint64_t, void *, uint64_t), uint64_t a4)
{
  uint64_t v53 = a2;
  uint64_t v7 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  char v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v54 = (char *)v47 - v11;
  uint64_t v12 = sub_1D4469688();
  uint64_t v56 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v57 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  os_log_type_t v55 = (char *)v47 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v47 - v17;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a3;
  *(void *)(v19 + 24) = a4;
  uint64_t v20 = qword_1EBD80068;
  swift_retain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1D4469928();
  uint64_t v52 = sub_1D42D7FAC(v21, (uint64_t)qword_1EBD83228);
  uint64_t v22 = sub_1D44698F8();
  os_log_type_t v23 = sub_1D446A038();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = a1;
    id v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v25 = 0;
    _os_log_impl(&dword_1D4271000, v22, v23, "FMIPItemActionsController: performing assign safe location action", v25, 2u);
    uint64_t v26 = v25;
    a1 = v24;
    MEMORY[0x1D9447730](v26, -1, -1);
  }

  uint64_t v27 = *(void *)(*(void *)(a1 + 368) + 16);
  uint64_t v28 = v56;
  if (v27)
  {
    v47[1] = a1;
    unint64_t v48 = v18;
    uint64_t v49 = a3;
    uint64_t v50 = a4;
    uint64_t v51 = v19;
    uint64_t v29 = (unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
    id v30 = (void (**)(char *, char *, uint64_t))(v56 + 32);
    v47[0] = swift_bridgeObjectRetain();
    uint64_t v31 = v47[0] + 40;
    unint64_t v32 = MEMORY[0x1E4FBC860];
    do
    {
      swift_bridgeObjectRetain();
      sub_1D4469628();
      swift_bridgeObjectRelease();
      if ((*v29)(v10, 1, v12) == 1)
      {
        sub_1D4276C3C((uint64_t)v10, (uint64_t *)&unk_1EBD7E930);
      }
      else
      {
        uint64_t v33 = *v30;
        uint64_t v34 = v55;
        (*v30)(v55, v10, v12);
        v33(v57, v34, v12);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v32 = sub_1D43B00D4(0, *(void *)(v32 + 16) + 1, 1, v32);
        }
        unint64_t v36 = *(void *)(v32 + 16);
        unint64_t v35 = *(void *)(v32 + 24);
        if (v36 >= v35 >> 1) {
          unint64_t v32 = sub_1D43B00D4(v35 > 1, v36 + 1, 1, v32);
        }
        *(void *)(v32 + 16) = v36 + 1;
        v33((char *)(v32+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v36), v57, v12);
      }
      v31 += 16;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    uint64_t v19 = v51;
    uint64_t v18 = v48;
    a3 = v49;
    uint64_t v28 = v56;
  }
  uint64_t v37 = (uint64_t)v54;
  sub_1D4469628();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v37, 1, v12) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1D4276C3C(v37, (uint64_t *)&unk_1EBD7E930);
    uint64_t v38 = sub_1D44698F8();
    os_log_type_t v39 = sub_1D446A038();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl(&dword_1D4271000, v38, v39, "FMIPItemActionsController: Assign safe location failed. No SafeLocationUUID", v40, 2u);
      MEMORY[0x1D9447730](v40, -1, -1);
    }

    LOBYTE(aBlock[0]) = 4;
    sub_1D437B048((char *)aBlock, 0, 0, 0, 2, a3);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v18, v37, v12);
    id v41 = *(void **)(v53 + 24);
    uint64_t v42 = (void *)sub_1D4469648();
    uint64_t v43 = (void *)sub_1D4469D58();
    swift_bridgeObjectRelease();
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = sub_1D436AB6C;
    *(void *)(v44 + 24) = v19;
    aBlock[4] = sub_1D436A87C;
    aBlock[5] = v44;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1D4276428;
    uint64_t aBlock[3] = &unk_1F2C0A678;
    uint64_t v45 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v41, sel_assignSafeLocation_beaconUUIDs_completion_, v42, v43, v45);
    _Block_release(v45);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v12);
  }
  return swift_release();
}

uint64_t sub_1D4365CE0(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t, uint64_t, void *, uint64_t), uint64_t a4)
{
  uint64_t v8 = qword_1EBD80068;
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D4469928();
  sub_1D42D7FAC(v9, (uint64_t)qword_1EBD83228);
  char v10 = sub_1D44698F8();
  os_log_type_t v11 = sub_1D446A038();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_1D4271000, v10, v11, "FMIPItemActionsController: performing assign safe location action", v12, 2u);
    MEMORY[0x1D9447730](v12, -1, -1);
  }

  sub_1D42D5DA0(&qword_1EBD80060);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1D446E050;
  uint64_t v14 = a1[47];
  *(void *)(v13 + 32) = a1[46];
  *(void *)(v13 + 40) = v14;
  memcpy(__dst, a1 + 2, sizeof(__dst));
  type metadata accessor for FMIPAssignMultipleSafeLocationsItemAction();
  uint64_t inited = swift_initStackObject();
  memcpy((void *)(inited + 16), __dst, 0x160uLL);
  *(void *)(inited + 368) = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D42FC4A4((uint64_t)__dst);
  sub_1D43656CC(inited, a2, a3, a4);
  swift_release();
  sub_1D42FC604((uint64_t)__dst);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1D4365E9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t, uint64_t, void *, uint64_t), uint64_t a4)
{
  uint64_t v66 = a1;
  unint64_t v67 = a3;
  uint64_t v69 = a2;
  uint64_t v5 = type metadata accessor for FMIPItem();
  uint64_t v72 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v10 = (char *)v65 - v9;
  uint64_t v11 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v74 = (char *)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for FMIPDevice();
  uint64_t v80 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  uint64_t v14 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = qword_1EBD80068;
  uint64_t v68 = a4;
  swift_retain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1D4469928();
  sub_1D42D7FAC(v16, (uint64_t)qword_1EBD83228);
  uint64_t v17 = sub_1D44698F8();
  os_log_type_t v18 = sub_1D446A038();
  BOOL v19 = os_log_type_enabled(v17, v18);
  int64_t v75 = v14;
  if (v19)
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_1D4271000, v17, v18, "FMIPItemActionsController: performing assign safe location to all supported beacons action", v20, 2u);
    uint64_t v21 = v20;
    uint64_t v14 = v75;
    MEMORY[0x1D9447730](v21, -1, -1);
  }

  uint64_t v22 = *(void *)(v69 + 32);
  swift_beginAccess();
  uint64_t v23 = *(void *)(v22 + 280);
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    uint64_t v81 = v22;
    uint64_t v25 = v23 + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80));
    uint64_t v26 = *(void *)(v72 + 72);
    uint64_t v79 = v23;
    swift_bridgeObjectRetain_n();
    uint64_t v27 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1D42CA688(v25, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      if ((v8[304] & 0x10) != 0)
      {
        uint64_t v28 = *((void *)v8 + 44);
        uint64_t v29 = *((void *)v8 + 45);
        swift_bridgeObjectRetain();
        sub_1D42CA888((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v27 = sub_1D43B0268(0, v27[2] + 1, 1, v27);
        }
        unint64_t v31 = v27[2];
        unint64_t v30 = v27[3];
        unint64_t v32 = v27;
        if (v31 >= v30 >> 1) {
          unint64_t v32 = sub_1D43B0268((void *)(v30 > 1), v31 + 1, 1, v27);
        }
        v32[2] = v31 + 1;
        uint64_t v27 = v32;
        uint64_t v33 = &v32[2 * v31];
        v33[4] = v28;
        v33[5] = v29;
      }
      else
      {
        sub_1D42CA888((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      }
      v25 += v26;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease_n();
    uint64_t v14 = v75;
    uint64_t v22 = v81;
  }
  else
  {
    uint64_t v27 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_beginAccess();
  uint64_t v34 = *(void *)(v22 + 80);
  uint64_t v35 = MEMORY[0x1E4FBC860];
  uint64_t v37 = v73;
  uint64_t v36 = (uint64_t)v74;
  if (*(void *)(v34 + 16))
  {
    uint64_t v77 = *(void *)(v34 + 16);
    uint64_t v38 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v81 = v34 + ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80));
    uint64_t v80 = *(void *)(v80 + 72);
    v65[1] = v34;
    swift_bridgeObjectRetain_n();
    uint64_t v39 = 0;
    long long v70 = xmmword_1D446E050;
    uint64_t v40 = v77;
    uint64_t v71 = v27;
    while (1)
    {
      sub_1D42CA688(v81 + v80 * v39, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      if ((v14[242] & 4) != 0) {
        break;
      }
      sub_1D42CA888((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_20:
      if (++v39 == v40)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v35 = MEMORY[0x1E4FBC860];
        goto LABEL_44;
      }
    }
    sub_1D42A3A74((uint64_t)&v14[*(int *)(v37 + 128)], v36, &qword_1EBD7E670);
    uint64_t v41 = type metadata accessor for FMIPItemGroup();
    int v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v36, 1, v41);
    uint64_t v79 = v39;
    if (v42 == 1)
    {
      sub_1D4276C3C(v36, &qword_1EBD7E670);
      uint64_t v43 = *((void *)v14 + 3);
      if (!v43)
      {
        sub_1D42CA888((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_41:
        uint64_t v39 = v79;
        goto LABEL_20;
      }
      uint64_t v44 = *((void *)v14 + 2);
      sub_1D42D5DA0(&qword_1EBD80060);
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = v70;
      *(void *)(v45 + 32) = v44;
      *(void *)(v45 + 40) = v43;
      swift_bridgeObjectRetain();
    }
    else
    {
      double v78 = v38;
      uint64_t v46 = *(void *)(v36 + 40);
      swift_bridgeObjectRetain();
      sub_1D42CA888(v36, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      int64_t v47 = *(void *)(v46 + 16);
      if (v47)
      {
        v82[0] = MEMORY[0x1E4FBC860];
        sub_1D4337070(0, v47, 0);
        uint64_t v48 = *(unsigned __int8 *)(v72 + 80);
        uint64_t v76 = v46;
        uint64_t v49 = v46 + ((v48 + 32) & ~v48);
        uint64_t v50 = *(void *)(v72 + 72);
        uint64_t v45 = v82[0];
        do
        {
          sub_1D42CA688(v49, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          uint64_t v51 = *((void *)v10 + 44);
          uint64_t v52 = *((void *)v10 + 45);
          swift_bridgeObjectRetain();
          sub_1D42CA888((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1D4337070(0, *(void *)(v45 + 16) + 1, 1);
            uint64_t v45 = v82[0];
          }
          unint64_t v54 = *(void *)(v45 + 16);
          unint64_t v53 = *(void *)(v45 + 24);
          if (v54 >= v53 >> 1)
          {
            sub_1D4337070(v53 > 1, v54 + 1, 1);
            uint64_t v45 = v82[0];
          }
          *(void *)(v45 + 16) = v54 + 1;
          uint64_t v55 = v45 + 16 * v54;
          *(void *)(v55 + 32) = v51;
          *(void *)(v55 + 40) = v52;
          v49 += v50;
          --v47;
        }
        while (v47);
        swift_bridgeObjectRelease();
        uint64_t v37 = v73;
        uint64_t v36 = (uint64_t)v74;
        uint64_t v14 = v75;
        uint64_t v27 = v71;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v45 = MEMORY[0x1E4FBC860];
      }
      uint64_t v38 = v78;
    }
    sub_1D42CA888((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v38 = sub_1D43B0378(0, v38[2] + 1, 1, v38);
    }
    unint64_t v57 = v38[2];
    unint64_t v56 = v38[3];
    if (v57 >= v56 >> 1) {
      uint64_t v38 = sub_1D43B0378((void *)(v56 > 1), v57 + 1, 1, v38);
    }
    v38[2] = v57 + 1;
    v38[v57 + 4] = v45;
    uint64_t v40 = v77;
    goto LABEL_41;
  }
  uint64_t v38 = (void *)MEMORY[0x1E4FBC860];
LABEL_44:
  uint64_t v83 = v35;
  uint64_t v58 = v38[2];
  if (v58)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v58; ++i)
    {
      uint64_t v60 = swift_bridgeObjectRetain();
      sub_1D43AEA98(v60);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v82[0] = v27;
  sub_1D43AEA98(v83);
  uint64_t v61 = v82[0];
  memcpy(v82, (const void *)(v66 + 16), sizeof(v82));
  type metadata accessor for FMIPAssignMultipleSafeLocationsItemAction();
  uint64_t inited = swift_initStackObject();
  memcpy((void *)(inited + 16), v82, 0x160uLL);
  *(void *)(inited + 368) = v61;
  uint64_t v63 = v68;
  swift_retain();
  sub_1D42FC4A4((uint64_t)v82);
  sub_1D43656CC(inited, v69, v67, v63);
  swift_release();
  sub_1D42FC604((uint64_t)v82);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1D43666EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t, uint64_t, void *, uint64_t), uint64_t a4)
{
  uint64_t v46 = a2;
  uint64_t v7 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1D4469688();
  uint64_t v10 = *(void *)(v48 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v48);
  uint64_t v44 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v45 = (char *)&v41 - v13;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  *(void *)(v14 + 24) = a4;
  uint64_t v47 = v14;
  uint64_t v15 = qword_1EBD80068;
  swift_retain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1D4469928();
  sub_1D42D7FAC(v16, (uint64_t)qword_1EBD83228);
  uint64_t v17 = sub_1D44698F8();
  os_log_type_t v18 = sub_1D446A038();
  if (os_log_type_enabled(v17, v18))
  {
    BOOL v19 = a3;
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_1D4271000, v17, v18, "FMIPItemActionsController: performing edit safe location action", v20, 2u);
    uint64_t v21 = v20;
    a3 = v19;
    MEMORY[0x1D9447730](v21, -1, -1);
  }

  sub_1D4469628();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v48) == 1)
  {
    sub_1D4276C3C((uint64_t)v9, (uint64_t *)&unk_1EBD7E930);
    uint64_t v22 = sub_1D44698F8();
    os_log_type_t v23 = sub_1D446A038();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1D4271000, v22, v23, "FMIPItemActionsController: cannot edit safe location for an item with an invalid safe location identifier", v24, 2u);
      MEMORY[0x1D9447730](v24, -1, -1);
    }

    LOBYTE(aBlock[0]) = 4;
    sub_1D43694E4();
    uint64_t v25 = (void *)swift_allocError();
    *uint64_t v26 = 0;
    sub_1D437B048((char *)aBlock, 0, 0, v25, 2, a3);
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    uint64_t v28 = v45;
    uint64_t v29 = v48;
    v27(v45, v9, v48);
    id v43 = *(id *)(v46 + 24);
    unint64_t v30 = v44;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v44, v28, v29);
    unint64_t v31 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v32 = (v11 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (v32 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v34 = v47;
    uint64_t v42 = v10;
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = v30;
    uint64_t v37 = v48;
    v27((char *)(v35 + v31), v36, v48);
    uint64_t v38 = (void *)(v35 + v32);
    void *v38 = sub_1D436AB6C;
    v38[1] = v34;
    *(void *)(v35 + v33) = a1;
    *(void *)(v35 + ((v33 + 15) & 0xFFFFFFFFFFFFFFF8)) = v46;
    aBlock[4] = sub_1D436A970;
    aBlock[5] = v35;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1D4275B70;
    uint64_t aBlock[3] = &unk_1F2C0A6F0;
    uint64_t v39 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v43, sel_safeLocationsForSeparationMonitoring_, v39);
    _Block_release(v39);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v37);
  }
  return swift_release();
}

uint64_t sub_1D4366BD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t, uint64_t, void *, uint64_t), uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  type metadata accessor for FMIPAddSafeLocationItemAction();
  swift_retain();
  uint64_t v8 = swift_dynamicCastClass();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    swift_retain_n();
    swift_retain();
    sub_1D4361A1C(v9, (uint64_t)sub_1D436A874, v7);
LABEL_19:
    swift_release_n();
    swift_release();
    goto LABEL_20;
  }
  type metadata accessor for FMIPAddMultipleSafeLocationsItemAction();
  uint64_t v10 = swift_dynamicCastClass();
  if (v10)
  {
    uint64_t v11 = v10;
    swift_retain_n();
    swift_retain();
    sub_1D4361BBC(v11, (uint64_t)sub_1D436A874, v7);
    goto LABEL_19;
  }
  type metadata accessor for FMIPRemoveSafeLocationItemAction();
  uint64_t v12 = swift_dynamicCastClass();
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    swift_retain_n();
    swift_retain();
    sub_1D4363048(v13, (uint64_t)sub_1D436A874, v7);
    goto LABEL_19;
  }
  type metadata accessor for FMIPRemoveMultipleSafeLocationItemsAction();
  uint64_t v14 = swift_dynamicCastClass();
  if (v14)
  {
    uint64_t v15 = v14;
    swift_retain_n();
    swift_retain();
    sub_1D43631E4(v15, (uint64_t)sub_1D436A874, v7);
    goto LABEL_19;
  }
  type metadata accessor for FMIPAssignSafeLocationItemAction();
  uint64_t v16 = swift_dynamicCastClass();
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    swift_retain_n();
    swift_retain();
    sub_1D4365CE0(v17, a2, a3, a4);
    goto LABEL_19;
  }
  type metadata accessor for FMIPAssignMultipleSafeLocationsItemAction();
  uint64_t v18 = swift_dynamicCastClass();
  if (v18)
  {
    uint64_t v19 = v18;
    swift_retain_n();
    swift_retain();
    sub_1D43656CC(v19, a2, a3, a4);
    goto LABEL_19;
  }
  type metadata accessor for FMIPAssignSafeLocationToAllSupportedBeaconsAction();
  uint64_t v20 = swift_dynamicCastClass();
  if (v20)
  {
    uint64_t v21 = v20;
    swift_retain_n();
    swift_retain();
    sub_1D4365E9C(v21, a2, a3, a4);
    goto LABEL_19;
  }
  type metadata accessor for FMIPEditSafeLocationItemAction();
  uint64_t v22 = swift_dynamicCastClass();
  if (v22)
  {
    uint64_t v23 = v22;
    swift_retain_n();
    swift_retain();
    sub_1D43666EC(v23, a2, a3, a4);
    goto LABEL_19;
  }
  type metadata accessor for FMIPAddSafeLocationToAllSupportedBeaconsAction();
  uint64_t v24 = swift_dynamicCastClass();
  if (v24)
  {
    uint64_t v25 = v24;
    swift_retain_n();
    swift_retain();
    sub_1D43611F0(v25, (uint64_t)sub_1D436A874, v7);
    goto LABEL_19;
  }
  uint64_t v27 = qword_1EBD80068;
  swift_retain_n();
  if (v27 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1D4469928();
  sub_1D42D7FAC(v28, (uint64_t)qword_1EBD83228);
  uint64_t v29 = sub_1D44698F8();
  os_log_type_t v30 = sub_1D446A038();
  if (os_log_type_enabled(v29, v30))
  {
    unint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v31 = 0;
    _os_log_impl(&dword_1D4271000, v29, v30, "FMIPItemActionsController: cannot map safe location action to request", v31, 2u);
    MEMORY[0x1D9447730](v31, -1, -1);
  }

  char v34 = 0;
  sub_1D43694E4();
  unint64_t v32 = (void *)swift_allocError();
  *unint64_t v33 = 6;
  sub_1D437B048(&v34, 0, 0, v32, 2, a3);

  swift_release_n();
LABEL_20:
  return swift_release();
}

uint64_t sub_1D4367034(uint64_t a1, uint64_t (*a2)(uint64_t *, uint64_t, void *))
{
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D4469688();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  sub_1D4469628();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1D4276C3C((uint64_t)v6, (uint64_t *)&unk_1EBD7E930);
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1D4469928();
    sub_1D42D7FAC(v13, (uint64_t)qword_1EBD83228);
    uint64_t v14 = sub_1D44698F8();
    os_log_type_t v15 = sub_1D446A038();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1D4271000, v14, v15, "FMIPItemActionsController: cannot disconnect with an invalid identifier", v16, 2u);
      MEMORY[0x1D9447730](v16, -1, -1);
    }

    char v30 = 4;
    sub_1D42D5DA0(&qword_1EBD80060);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1D446E050;
    *(void *)(v17 + 32) = v12;
    *(void *)(v17 + 40) = v11;
    sub_1D43694E4();
    uint64_t v18 = (void *)swift_allocError();
    *uint64_t v19 = 0;
    swift_bridgeObjectRetain();
    sub_1D437C540(&v30, v17, v18, a2);

    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v21 = qword_1EBD80068;
    swift_retain();
    if (v21 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1D4469928();
    sub_1D42D7FAC(v22, (uint64_t)qword_1EBD83228);
    uint64_t v23 = sub_1D44698F8();
    os_log_type_t v24 = sub_1D446A038();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = v12;
      uint64_t v26 = v25;
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_1D4271000, v23, v24, "FMIPItemActionsController: disconnect is not supported on this platform!", v25, 2u);
      uint64_t v12 = v28;
      MEMORY[0x1D9447730](v26, -1, -1);
    }

    char v29 = 2;
    sub_1D42D5DA0(&qword_1EBD80060);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1D446E050;
    *(void *)(v27 + 32) = v12;
    *(void *)(v27 + 40) = v11;
    swift_bridgeObjectRetain();
    sub_1D437C540(&v29, v27, 0, a2);
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1D4367440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t, void *), uint64_t a6)
{
  uint64_t v47 = a2;
  uint64_t v11 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v51 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D4469688();
  uint64_t v52 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v48 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v15 = (void *)swift_allocObject();
  void v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  v15[5] = a6;
  uint64_t v16 = qword_1EBD80068;
  uint64_t v49 = a3;
  swift_retain();
  uint64_t v50 = a4;
  swift_retain();
  swift_retain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1D4469928();
  sub_1D42D7FAC(v17, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v18 = sub_1D44698F8();
  os_log_type_t v19 = sub_1D446A038();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v46 = a6;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v45 = a5;
    uint64_t v23 = v22;
    uint64_t v54 = v22;
    id v43 = v15;
    uint64_t v44 = v13;
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v24 = FMIPItemAction.debugDescription.getter();
    uint64_t v53 = sub_1D42CB9EC(v24, v25, &v54);
    os_log_type_t v15 = v43;
    uint64_t v13 = v44;
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v18, v19, "FMIPItemActionsController: performing play sound %s", v21, 0xCu);
    swift_arrayDestroy();
    uint64_t v26 = v23;
    a5 = v45;
    MEMORY[0x1D9447730](v26, -1, -1);
    MEMORY[0x1D9447730](v21, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v27 = (uint64_t)v51;
  uint64_t v28 = a1 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item;
  sub_1D4469628();
  uint64_t v29 = v52;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v27, 1, v13) == 1)
  {
    sub_1D4276C3C(v27, (uint64_t *)&unk_1EBD7E930);
    char v30 = sub_1D44698F8();
    os_log_type_t v31 = sub_1D446A038();
    if (os_log_type_enabled(v30, v31))
    {
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v32 = 0;
      _os_log_impl(&dword_1D4271000, v30, v31, "FMIPItemActionsController: cannot play sound for item with an invalid identifier", v32, 2u);
      MEMORY[0x1D9447730](v32, -1, -1);
    }

    LOBYTE(v54) = 4;
    sub_1D42D5DA0(&qword_1EA6C9E70);
    uint64_t v33 = *(void *)(type metadata accessor for FMIPItem() - 8);
    unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1D446E050;
    sub_1D42CA688(v28, v35 + v34, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D43694E4();
    uint64_t v36 = (void *)swift_allocError();
    *uint64_t v37 = 0;
    sub_1D437BB34((char *)&v54, v35, v36, v49, v50, a5);

    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = (uint64_t)v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v48, v27, v13);
    uint64_t v40 = *(void **)(a1 + OBJC_IVAR____TtC8FMIPCore23FMIPPlaySoundItemAction_context);
    char v41 = *(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore23FMIPPlaySoundItemAction_context + 8);
    uint64_t v42 = (void *)swift_allocObject();
    _OWORD v42[2] = sub_1D4369664;
    v42[3] = v15;
    v42[4] = a1;
    swift_retain();
    swift_retain();
    sub_1D435EAA0(v39, v40, v41, (uint64_t)sub_1D4369674, (uint64_t)v42);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v39, v13);
    return swift_release();
  }
}

uint64_t sub_1D43679CC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t, void *), void **a6)
{
  uint64_t v89 = a2;
  uint64_t v11 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D4469688();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = a3;
  v18[3] = a4;
  double v87 = a5;
  v18[4] = a5;
  v18[5] = a6;
  uint64_t v91 = v18;
  uint64_t v84 = a1 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item;
  uint64_t v85 = a3;
  swift_retain();
  uint64_t v86 = a4;
  swift_retain();
  uint64_t v88 = a6;
  swift_retain();
  sub_1D4469628();
  uint64_t v90 = v15;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1D4276C3C((uint64_t)v13, (uint64_t *)&unk_1EBD7E930);
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1D4469928();
    sub_1D42D7FAC(v19, (uint64_t)qword_1EBD83228);
    uint64_t v20 = sub_1D44698F8();
    os_log_type_t v21 = sub_1D446A038();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_1D4271000, v20, v21, "FMIPItemActionsController: cannot enable lost mode for item with an invalid identifier", v22, 2u);
      MEMORY[0x1D9447730](v22, -1, -1);
    }

    LOBYTE(aBlock) = 4;
    sub_1D42D5DA0(&qword_1EA6C9E70);
    uint64_t v23 = *(void *)(type metadata accessor for FMIPItem() - 8);
    unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1D446E050;
    sub_1D42CA688(v84, v25 + v24, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D43694E4();
    uint64_t v26 = (void *)swift_allocError();
    *uint64_t v27 = 0;
    sub_1D437BB34((char *)&aBlock, v25, v26, v85, v86, v87);

    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v17, v13, v14);
    char v29 = *(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_isTrackingEnabled);
    uint64_t v82 = a1;
    uint64_t v83 = v14;
    if ((v29 & 1) == 0)
    {
      os_log_type_t v31 = self;
      unint64_t v32 = (void *)sub_1D4469648();
      uint64_t v33 = (void **)objc_msgSend(v31, sel_disableLostModeForBeaconUUID_, v32);

      if (qword_1EBD80068 == -1) {
        goto LABEL_10;
      }
      goto LABEL_26;
    }
    char v30 = (void *)sub_1D4469648();
    swift_bridgeObjectRetain();
    uint64_t v42 = (void *)sub_1D4469B08();
    swift_bridgeObjectRelease();
    uint64_t v43 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_phoneNumber + 8);
    uint64_t v84 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_phoneNumber);
    uint64_t v85 = v43;
    swift_bridgeObjectRetain();
    uint64_t v44 = (void *)sub_1D4469B08();
    swift_bridgeObjectRelease();
    uint64_t v45 = *(uint64_t (**)(uint64_t *, uint64_t, void *))(a1
                                                               + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_email
                                                               + 8);
    uint64_t v86 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_email);
    uint64_t v46 = self;
    double v87 = v45;
    swift_bridgeObjectRetain();
    uint64_t v47 = (void *)sub_1D4469B08();
    swift_bridgeObjectRelease();
    uint64_t v48 = (void **)objc_msgSend(v46, sel_enableLostModeForBeaconUUID_message_phoneNumber_email_, v30, v42, v44, v47);

    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_1D4469928();
    sub_1D42D7FAC(v49, (uint64_t)qword_1EBD83228);
    swift_retain_n();
    uint64_t v50 = sub_1D44698F8();
    os_log_type_t v51 = sub_1D446A038();
    BOOL v52 = os_log_type_enabled(v50, v51);
    uint64_t v88 = v48;
    if (v52)
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      uint64_t aBlock = v54;
      *(_DWORD *)uint64_t v53 = 136315138;
      uint64_t v55 = FMIPItemAction.debugDescription.getter();
      uint64_t v92 = sub_1D42CB9EC(v55, v56, &aBlock);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v50, v51, "FMIPItemActionsController: enabling lost mode %s", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v54, -1, -1);
      MEMORY[0x1D9447730](v53, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    swift_retain_n();
    unint64_t v57 = sub_1D44698F8();
    os_log_type_t v58 = sub_1D446A038();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      *(_DWORD *)uint64_t v59 = 136315394;
      uint64_t v92 = v60;
      uint64_t aBlock = v84;
      uint64_t v94 = v85;
      swift_bridgeObjectRetain();
      sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
      uint64_t v61 = sub_1D4469B68();
      uint64_t aBlock = sub_1D42CB9EC(v61, v62, &v92);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v59 + 12) = 2080;
      uint64_t aBlock = v86;
      uint64_t v94 = (uint64_t)v87;
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_1D4469B68();
      uint64_t aBlock = sub_1D42CB9EC(v63, v64, &v92);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v57, v58, "FMIPItemActionsController: lost mode: metadata: phone %s, email: %s", (uint8_t *)v59, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v60, -1, -1);
      MEMORY[0x1D9447730](v59, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v33 = v88;
    for (uint64_t i = v89; ; uint64_t i = v89)
    {
      uint64_t v88 = v33;
      id v65 = objc_msgSend(*((id *)i + 3), sel_executeCommand_, v33, v82);
      uint64_t v66 = *((void *)i + 6);
      uint64_t v67 = swift_allocObject();
      *(void *)(v67 + 16) = i;
      *(void *)(v67 + 24) = v65;
      uint64_t v68 = swift_allocObject();
      *(void *)(v68 + 16) = sub_1D436AAB4;
      *(void *)(v68 + 24) = v67;
      uint64_t v97 = sub_1D42AEE88;
      uint64_t v98 = (void *)v68;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v94 = 1107296256;
      uint64_t v33 = &v95;
      uint64_t v95 = sub_1D42AEDE4;
      unint64_t v96 = &unk_1F2C0A1C8;
      uint64_t v69 = _Block_copy(&aBlock);
      swift_retain();
      id v70 = v65;
      swift_retain();
      swift_release();
      dispatch_sync(v66, v69);
      _Block_release(v69);
      LOBYTE(v65) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v65 & 1) == 0) {
        break;
      }
      __break(1u);
LABEL_26:
      swift_once();
LABEL_10:
      uint64_t v34 = sub_1D4469928();
      sub_1D42D7FAC(v34, (uint64_t)qword_1EBD83228);
      swift_retain_n();
      uint64_t v35 = sub_1D44698F8();
      os_log_type_t v36 = sub_1D446A038();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        uint64_t v38 = swift_slowAlloc();
        uint64_t aBlock = v38;
        *(_DWORD *)uint64_t v37 = 136315138;
        uint64_t v39 = FMIPItemAction.debugDescription.getter();
        uint64_t v92 = sub_1D42CB9EC(v39, v40, &aBlock);
        sub_1D446A188();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D4271000, v35, v36, "FMIPItemActionsController: disabling lost mode %s", v37, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v38, -1, -1);
        MEMORY[0x1D9447730](v37, -1, -1);
      }
      else
      {

        swift_release_n();
      }
    }
    uint64_t v71 = swift_allocObject();
    swift_weakInit();
    uint64_t v72 = (void *)swift_allocObject();
    uint64_t v89 = v17;
    uint64_t v73 = v91;
    v72[2] = sub_1D436AAAC;
    v72[3] = v73;
    v72[4] = v82;
    v72[5] = v71;
    v72[6] = v70;
    uint64_t v97 = sub_1D4369720;
    uint64_t v98 = v72;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v94 = 1107296256;
    uint64_t v95 = sub_1D435C428;
    unint64_t v96 = &unk_1F2C0A240;
    uint64_t v74 = _Block_copy(&aBlock);
    swift_retain();
    id v75 = v70;
    swift_retain();
    swift_release();
    id v76 = objc_msgSend(v75, sel_addFailureBlock_, v74);
    _Block_release(v74);

    uint64_t v77 = swift_allocObject();
    swift_weakInit();
    double v78 = (void *)swift_allocObject();
    v78[2] = sub_1D436AAAC;
    v78[3] = v73;
    v78[4] = v77;
    v78[5] = v75;
    uint64_t v97 = sub_1D436979C;
    uint64_t v98 = v78;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v94 = 1107296256;
    uint64_t v95 = sub_1D435C430;
    unint64_t v96 = &unk_1F2C0A290;
    uint64_t v79 = _Block_copy(&aBlock);
    id v80 = v75;
    swift_retain();
    swift_release();
    id v81 = objc_msgSend(v80, sel_addSuccessBlock_, v79);
    _Block_release(v79);

    (*(void (**)(char *, uint64_t))(v90 + 8))(v89, v83);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1D43686DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t, void *), uint64_t a6)
{
  uint64_t v68 = a2;
  uint64_t v11 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v69 = (void (**)(char *, uint64_t))((char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_1D4469688();
  uint64_t v14 = *(void (***)(char *, uint64_t))(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a3;
  v17[3] = a4;
  uint64_t v67 = a5;
  v17[4] = a5;
  v17[5] = a6;
  uint64_t v18 = qword_1EBD80068;
  uint64_t v65 = a3;
  swift_retain();
  uint64_t v66 = a4;
  swift_retain();
  swift_retain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1D4469928();
  uint64_t v20 = sub_1D42D7FAC(v19, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v64 = v20;
  os_log_type_t v21 = sub_1D44698F8();
  os_log_type_t v22 = sub_1D446A038();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v62 = v13;
    unint64_t v24 = (uint8_t *)v23;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v63 = v17;
    uint64_t v26 = v25;
    uint64_t aBlock = v25;
    uint64_t v61 = v16;
    *(_DWORD *)unint64_t v24 = 136315138;
    uint64_t v27 = FMIPItemAction.debugDescription.getter();
    uint64_t v70 = sub_1D42CB9EC(v27, v28, &aBlock);
    uint64_t v16 = v61;
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v21, v22, "FMIPItemActionsController: performing remove action %s", v24, 0xCu);
    swift_arrayDestroy();
    uint64_t v29 = v26;
    uint64_t v17 = v63;
    MEMORY[0x1D9447730](v29, -1, -1);
    char v30 = v24;
    uint64_t v13 = v62;
    MEMORY[0x1D9447730](v30, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v31 = (uint64_t)v69;
  uint64_t v32 = a1 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item;
  sub_1D4469628();
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v14[6])(v31, 1, v13) != 1)
  {
    uint64_t v69 = v14;
    ((void (*)(char *, uint64_t, uint64_t))v14[4])(v16, v31, v13);
    uint64_t v42 = (uint64_t *)(v32 + *(int *)(type metadata accessor for FMIPItem() + 60));
    uint64_t v44 = *v42;
    uint64_t v43 = v42[1];
    id v45 = objc_msgSend(self, sel_SPOwner);
    id v46 = objc_msgSend(v45, sel_destination);

    uint64_t v47 = sub_1D4469B38();
    uint64_t v49 = v48;

    if (v44 == v47 && v43 == v49)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v50 = sub_1D446A758();
      swift_bridgeObjectRelease();
      if ((v50 & 1) == 0)
      {
        uint64_t v57 = v68;
        os_log_type_t v58 = *(void **)(v68 + 16);
        BOOL v52 = (void *)sub_1D4469648();
        uint64_t v59 = (void *)swift_allocObject();
        v59[2] = sub_1D436AAAC;
        v59[3] = v17;
        v59[4] = v57;
        v59[5] = a1;
        id v75 = sub_1D436985C;
        id v76 = v59;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v72 = 1107296256;
        uint64_t v73 = sub_1D437410C;
        uint64_t v74 = &unk_1F2C0A3A8;
        uint64_t v60 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_release();
        objc_msgSend(v58, sel_beaconForUUID_completion_, v52, v60);
        _Block_release(v60);
        goto LABEL_16;
      }
    }
    id v51 = sub_1D430DA10();
    BOOL v52 = (void *)sub_1D4469648();
    uint64_t v53 = (unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore20FMIPRemoveItemAction_forced);
    swift_beginAccess();
    uint64_t v54 = *v53;
    uint64_t v55 = (void *)swift_allocObject();
    _OWORD v55[2] = sub_1D436AAAC;
    v55[3] = v17;
    v55[4] = a1;
    id v75 = sub_1D436986C;
    id v76 = v55;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v72 = 1107296256;
    uint64_t v73 = sub_1D42E1B08;
    uint64_t v74 = &unk_1F2C0A3F8;
    unint64_t v56 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v51, sel_unpairUUID_force_completion_, v52, v54, v56);
    _Block_release(v56);

LABEL_16:
    v69[1](v16, v13);
    return swift_release();
  }
  sub_1D4276C3C(v31, (uint64_t *)&unk_1EBD7E930);
  uint64_t v33 = sub_1D44698F8();
  os_log_type_t v34 = sub_1D446A038();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl(&dword_1D4271000, v33, v34, "FMIPItemActionsController: cannot remove an item with an invalid identifier", v35, 2u);
    MEMORY[0x1D9447730](v35, -1, -1);
  }

  LOBYTE(aBlock) = 4;
  sub_1D42D5DA0(&qword_1EA6C9E70);
  uint64_t v36 = *(void *)(type metadata accessor for FMIPItem() - 8);
  unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1D446E050;
  sub_1D42CA688(v32, v38 + v37, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D43694E4();
  uint64_t v39 = (void *)swift_allocError();
  *unint64_t v40 = 0;
  sub_1D437BB34((char *)&aBlock, v38, v39, v65, v66, v67);

  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4368E94(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t, void *), uint64_t a4)
{
  uint64_t v49 = a2;
  uint64_t v7 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v7 - 8);
  id v51 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D4469688();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v50 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  uint64_t v13 = qword_1EBD80068;
  swift_retain();
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D4469928();
  uint64_t v15 = sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v48 = v15;
  uint64_t v16 = sub_1D44698F8();
  os_log_type_t v17 = sub_1D446A038();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v47 = v12;
    uint64_t v20 = v19;
    aBlock[0] = v19;
    uint64_t v45 = v9;
    uint64_t v46 = a4;
    *(_DWORD *)uint64_t v18 = 136315138;
    swift_retain();
    uint64_t v21 = FMIPItemGroupAction.description.getter();
    uint64_t v44 = v10;
    unint64_t v23 = v22;
    swift_release();
    void aBlock[6] = sub_1D42CB9EC(v21, v23, aBlock);
    uint64_t v9 = v45;
    sub_1D446A188();
    swift_release_n();
    uint64_t v10 = v44;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v16, v17, "FMIPItemActionsController: performing remove item group action %s", v18, 0xCu);
    swift_arrayDestroy();
    uint64_t v24 = v20;
    uint64_t v12 = v47;
    MEMORY[0x1D9447730](v24, -1, -1);
    MEMORY[0x1D9447730](v18, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v25 = (uint64_t)v51;
  uint64_t v26 = a1 + OBJC_IVAR____TtC8FMIPCore19FMIPItemGroupAction_itemGroup;
  sub_1D4469628();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v25, 1, v9) == 1)
  {
    sub_1D4276C3C(v25, (uint64_t *)&unk_1EBD7E930);
    uint64_t v27 = sub_1D44698F8();
    os_log_type_t v28 = sub_1D446A038();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_1D4271000, v27, v28, "FMIPItemActionsController: cannot remove an item group with an invalid identifier", v29, 2u);
      MEMORY[0x1D9447730](v29, -1, -1);
    }

    LOBYTE(aBlock[0]) = 4;
    sub_1D42D5DA0(&qword_1EA6C9EB8);
    uint64_t v30 = *(void *)(type metadata accessor for FMIPItemGroup() - 8);
    unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1D446E050;
    sub_1D42CA688(v26, v32 + v31, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D43694E4();
    uint64_t v33 = (void *)swift_allocError();
    *os_log_type_t v34 = 0;
    sub_1D437CB14((char *)aBlock, v32, v33, a3);

    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v36 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v50, v25, v9);
    id v37 = sub_1D430DA10();
    uint64_t v38 = (void *)sub_1D4469648();
    uint64_t v39 = (unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore25FMIPRemoveItemGroupAction_forced);
    swift_beginAccess();
    uint64_t v40 = *v39;
    char v41 = (void *)swift_allocObject();
    void v41[2] = sub_1D43694DC;
    v41[3] = v12;
    v41[4] = a1;
    aBlock[4] = (uint64_t)sub_1D436953C;
    aBlock[5] = (uint64_t)v41;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_1D42E1B08;
    uint64_t aBlock[3] = (uint64_t)&unk_1F2C09F20;
    uint64_t v42 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v37, sel_unpairUUID_force_completion_, v38, v40, v42);
    _Block_release(v42);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v36, v9);
    return swift_release();
  }
}

uint64_t sub_1D43694A4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D43694DC(char *a1, uint64_t a2, void *a3)
{
  return sub_1D437CB14(a1, a2, a3, *(uint64_t (**)(uint64_t *, uint64_t, void *))(v3 + 16));
}

unint64_t sub_1D43694E4()
{
  unint64_t result = qword_1EA6CA248;
  if (!qword_1EA6CA248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA248);
  }
  return result;
}

uint64_t sub_1D436953C(void *a1)
{
  return sub_1D4360824(a1, *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), "FMIPItemActionsController: remove item group action completed successfuly %s", &qword_1EA6C9EB8, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup, &OBJC_IVAR____TtC8FMIPCore19FMIPItemGroupAction_itemGroup, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
}

uint64_t sub_1D43695A8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D43695BC(uint64_t a1)
{
  return sub_1D4369640(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1D435DDC8);
}

uint64_t sub_1D43695D8()
{
  swift_release();

  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D4369628(uint64_t a1)
{
  return sub_1D4369640(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1D435E2BC);
}

uint64_t sub_1D4369640(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_1D4369664(char *a1, uint64_t a2, void *a3)
{
  return sub_1D437BB34(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(uint64_t (**)(uint64_t *, uint64_t, void *))(v3 + 32));
}

uint64_t sub_1D4369674(uint64_t a1)
{
  return sub_1D435F8B0(a1, *(void (**)(char *, uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1D4369688()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D4369698()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D43696D0()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D4369720(uint64_t a1)
{
  return sub_1D4369738(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1D435FBE8);
}

uint64_t sub_1D4369738(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1D4369754()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D436979C(uint64_t a1)
{
  return sub_1D43601C0(a1, *(void (**)(void, void, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1D43697AC()
{
  return sub_1D43605C0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D43697CC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D4369814()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1D436985C(void *a1)
{
  sub_1D43606C0(a1, *(void (**)(void *, void, void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1D436986C(void *a1)
{
  return sub_1D4360824(a1, *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), "FMIPItemActionsController: remove action completed successfuly %s", &qword_1EA6C9E70, (uint64_t (*)(void))type metadata accessor for FMIPItem, &OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, (uint64_t (*)(void))type metadata accessor for FMIPItem);
}

uint64_t sub_1D43698D8(void *a1)
{
  return sub_1D4360E54(a1, *(void (**)(uint64_t *, uint64_t, void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), "FMIPItemActionsController: remove action completed with error %s");
}

uint64_t sub_1D4369900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t, void *), uint64_t a6)
{
  uint64_t v54 = a2;
  uint64_t v11 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v11 - 8);
  os_log_type_t v58 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D4469688();
  uint64_t v59 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v55 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  v15[5] = a6;
  uint64_t v16 = qword_1EBD80068;
  uint64_t v56 = a3;
  swift_retain();
  uint64_t v57 = a4;
  swift_retain();
  swift_retain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1D4469928();
  sub_1D42D7FAC(v17, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v18 = sub_1D44698F8();
  os_log_type_t v19 = sub_1D446A038();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v53 = a6;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    BOOL v52 = a5;
    uint64_t v23 = v22;
    aBlock[0] = v22;
    uint64_t v50 = v13;
    id v51 = v15;
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v24 = FMIPItemAction.debugDescription.getter();
    uint64_t v60 = sub_1D42CB9EC(v24, v25, aBlock);
    uint64_t v13 = v50;
    uint64_t v15 = v51;
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v18, v19, "FMIPItemActionsController: performing notify action %s, separationEnabled? ", v21, 0xCu);
    swift_arrayDestroy();
    uint64_t v26 = v23;
    a5 = v52;
    MEMORY[0x1D9447730](v26, -1, -1);
    MEMORY[0x1D9447730](v21, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v27 = (uint64_t)v58;
  uint64_t v28 = a1 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item;
  sub_1D4469628();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v27, 1, v13) == 1)
  {
    sub_1D4276C3C(v27, (uint64_t *)&unk_1EBD7E930);
    uint64_t v29 = sub_1D44698F8();
    os_log_type_t v30 = sub_1D446A038();
    if (os_log_type_enabled(v29, v30))
    {
      unint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v31 = 0;
      _os_log_impl(&dword_1D4271000, v29, v30, "FMIPItemActionsController: cannot notify an item with an invalid identifier", v31, 2u);
      MEMORY[0x1D9447730](v31, -1, -1);
    }

    LOBYTE(aBlock[0]) = 4;
    sub_1D42D5DA0(&qword_1EA6C9E70);
    uint64_t v32 = *(void *)(type metadata accessor for FMIPItem() - 8);
    unint64_t v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1D446E050;
    sub_1D42CA688(v28, v34 + v33, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D43694E4();
    uint64_t v35 = (void *)swift_allocError();
    *uint64_t v36 = 0;
    sub_1D437BB34((char *)aBlock, v34, v35, v56, v57, a5);

    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = v59;
    uint64_t v39 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v55, v27, v13);
    uint64_t v40 = v13;
    int v41 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore20FMIPNotifyItemAction_state);
    uint64_t v42 = self;
    uint64_t v43 = (void *)sub_1D4469648();
    uint64_t v44 = &selRef_beginLeashingWithBeaconUUID_;
    if (!v41) {
      uint64_t v44 = &selRef_endLeashingWithBeaconUUID_;
    }
    id v45 = objc_msgSend(v42, *v44, v43);

    uint64_t v46 = *(void **)(v54 + 24);
    uint64_t v47 = (void *)swift_allocObject();
    void v47[2] = sub_1D436AAAC;
    v47[3] = v15;
    v47[4] = a1;
    aBlock[4] = (uint64_t)sub_1D436A7BC;
    aBlock[5] = (uint64_t)v47;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_1D42E1B08;
    uint64_t aBlock[3] = (uint64_t)&unk_1F2C0A4C0;
    uint64_t v48 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v46, sel_executeCommand_completion_, v45, v48);
    _Block_release(v48);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
    return swift_release();
  }
}

uint64_t sub_1D4369F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t, void *), uint64_t a6)
{
  uint64_t v58 = a2;
  uint64_t v11 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D4469688();
  uint64_t v62 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v59 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  void v16[4] = a5;
  v16[5] = a6;
  uint64_t v17 = qword_1EBD80068;
  uint64_t v60 = a3;
  swift_retain();
  uint64_t v61 = a4;
  swift_retain();
  swift_retain();
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1D4469928();
  sub_1D42D7FAC(v18, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  os_log_type_t v19 = sub_1D44698F8();
  os_log_type_t v20 = sub_1D446A038();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v55 = v14;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v56 = a5;
    uint64_t v24 = v23;
    aBlock[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v57 = a6;
    uint64_t v25 = FMIPItemAction.debugDescription.getter();
    uint64_t v63 = sub_1D42CB9EC(v25, v26, aBlock);
    uint64_t v54 = v16;
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    int v27 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore20FMIPNotifyItemAction_state);
    *(_WORD *)(v22 + 12) = 2080;
    if (v27) {
      uint64_t v28 = 0x64656C62616E65;
    }
    else {
      uint64_t v28 = 0x64656C6261736964;
    }
    if (v27) {
      unint64_t v29 = 0xE700000000000000;
    }
    else {
      unint64_t v29 = 0xE800000000000000;
    }
    uint64_t v63 = sub_1D42CB9EC(v28, v29, aBlock);
    uint64_t v16 = v54;
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v19, v20, "FMIPItemActionsController: performing notify when found action %s, state: %s ", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    uint64_t v30 = v24;
    a5 = v56;
    MEMORY[0x1D9447730](v30, -1, -1);
    uint64_t v31 = v22;
    uint64_t v14 = v55;
    MEMORY[0x1D9447730](v31, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v32 = v62;
  uint64_t v33 = a1 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item;
  sub_1D4469628();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v13, 1, v14) == 1)
  {
    sub_1D4276C3C((uint64_t)v13, (uint64_t *)&unk_1EBD7E930);
    uint64_t v34 = sub_1D44698F8();
    os_log_type_t v35 = sub_1D446A038();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_1D4271000, v34, v35, "FMIPItemActionsController: performing notify an item with an invalid identifier", v36, 2u);
      MEMORY[0x1D9447730](v36, -1, -1);
    }

    LOBYTE(aBlock[0]) = 4;
    sub_1D42D5DA0(&qword_1EA6C9E70);
    uint64_t v37 = *(void *)(type metadata accessor for FMIPItem() - 8);
    unint64_t v38 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1D446E050;
    sub_1D42CA688(v33, v39 + v38, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D43694E4();
    uint64_t v40 = (void *)swift_allocError();
    *int v41 = 0;
    sub_1D437BB34((char *)aBlock, v39, v40, v60, v61, a5);

    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v43 = v59;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v59, v13, v14);
    uint64_t v44 = v14;
    int v45 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore20FMIPNotifyItemAction_state);
    uint64_t v46 = self;
    uint64_t v47 = v32;
    uint64_t v48 = (void *)sub_1D4469648();
    uint64_t v49 = &selRef_enableNotifyWhenFound_;
    if (!v45) {
      uint64_t v49 = &selRef_disableNotifyWhenFound_;
    }
    id v50 = objc_msgSend(v46, *v49, v48);

    id v51 = *(void **)(v58 + 24);
    BOOL v52 = (void *)swift_allocObject();
    void v52[2] = sub_1D436AAAC;
    v52[3] = v16;
    v52[4] = a1;
    aBlock[4] = (uint64_t)sub_1D436A834;
    aBlock[5] = (uint64_t)v52;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_1D42E1B08;
    uint64_t aBlock[3] = (uint64_t)&unk_1F2C0A538;
    uint64_t v53 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v51, sel_executeCommand_completion_, v50, v53);
    _Block_release(v53);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v44);
    return swift_release();
  }
}

uint64_t sub_1D436A610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t, void *), uint64_t a6)
{
  uint64_t v12 = qword_1EBD80068;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1D4469928();
  sub_1D42D7FAC(v13, (uint64_t)qword_1EBD83228);
  uint64_t v14 = sub_1D44698F8();
  os_log_type_t v15 = sub_1D446A038();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_1D4271000, v14, v15, "FMIPItemActionsController: Notification action received", v16, 2u);
    MEMORY[0x1D9447730](v16, -1, -1);
  }

  int v17 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore20FMIPNotifyItemAction_type);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v17 == 1) {
    sub_1D4369900(a1, a2, a3, a4, a5, a6);
  }
  else {
    sub_1D4369F40(a1, a2, a3, a4, a5, a6);
  }
  swift_release_n();
  swift_release_n();
  return swift_release_n();
}

uint64_t sub_1D436A7BC(void *a1)
{
  return sub_1D4360E54(a1, *(void (**)(uint64_t *, uint64_t, void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), "FMIPItemActionsController: notify action completed with error: %s");
}

uint64_t sub_1D436A7E8()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D436A834(void *a1)
{
  return sub_1D4360E54(a1, *(void (**)(uint64_t *, uint64_t, void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), "FMIPItemActionsController: notify when found command executed %s");
}

uint64_t sub_1D436A85C(uint64_t a1)
{
  return sub_1D4364CB4(a1, *(uint64_t (**)(char *, void, void))(v1 + 16));
}

uint64_t sub_1D436A868(void *a1)
{
  return sub_1D4364DC4(a1, *(void (**)(uint64_t *, uint64_t, void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1D436A874(char *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  return sub_1D437B048(a1, a2, a3, a4, a5, *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, void *, uint64_t))(v5 + 16));
}

uint64_t sub_1D436A87C(uint64_t a1, void *a2)
{
  return sub_1D4363FE0(a1, a2, *(uint64_t (**)(uint64_t *, void, void, void *, uint64_t))(v2 + 16), *(void *)(v2 + 24), "FMIPItemActionsController: Assign safe location completed with error? %s");
}

uint64_t sub_1D436A8A0()
{
  uint64_t v1 = sub_1D4469688();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

void sub_1D436A970(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1D4469688() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void (**)(void *, void, void, void, uint64_t))(v1 + v5);
  uint64_t v8 = *(void *)(v1 + v5 + 8);
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  sub_1D436420C(a1, v1 + v4, v7, v8, v9, v10);
}

uint64_t sub_1D436AA28(id *a1)
{
  return sub_1D4364494(a1) & 1;
}

uint64_t sub_1D436AA48(char a1, void *a2)
{
  return sub_1D43645A0(a1, a2, *(uint64_t (**)(uint64_t *, void, void, void *, uint64_t))(v2 + 16));
}

uint64_t sub_1D436AA50(char *a1, void *a2)
{
  return sub_1D437A678(a1, a2, *(uint64_t (**)(void, void))(v2 + 16));
}

uint64_t sub_1D436AA5C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(char *, uint64_t))(v1 + 16);
  if (a1)
  {
    char v6 = 0;
    unint64_t v4 = &v6;
  }
  else
  {
    char v7 = 2;
    unint64_t v4 = &v7;
  }
  return v3(v4, a1);
}

uint64_t FMIPURLScheme.getter()
{
  return 0x3170696D66;
}

uint64_t FMIPFindMyURLScheme.getter()
{
  return 0x796D646E6966;
}

uint64_t FMIPHttpsURLScheme.getter()
{
  return 0x7370747468;
}

uint64_t FMIPHttpURLScheme.getter()
{
  return 1886680168;
}

uint64_t FMIPURLBypassHost.getter()
{
  return 0x737361707962;
}

uint64_t FMIPURLDevicesHost.getter()
{
  return 0x73656369766564;
}

unint64_t FMIPURLUniversalLinkHost.getter()
{
  return 0xD000000000000010;
}

uint64_t FMIPURLConfigureHost.getter()
{
  return 0x72756769666E6F63;
}

uint64_t FMIPURLDevicePath.getter()
{
  return 0x6563697665642FLL;
}

uint64_t FMIPURLSiriHost.getter()
{
  return 1769105779;
}

uint64_t FMIPURLItemsHost.getter()
{
  return 0x736D657469;
}

uint64_t FMIPURLItemPath.getter()
{
  return 0x6D6574692FLL;
}

uint64_t FMIPURLInfo.originalURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D4469498();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t FMIPURLInfo.action.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FMIPURLInfo();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for FMIPURLInfo()
{
  uint64_t result = qword_1EA6CA260;
  if (!qword_1EA6CA260) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FMIPURLInfo.action.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for FMIPURLInfo();
  *(unsigned char *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*FMIPURLInfo.action.modify())(void)
{
  return nullsub_1;
}

uint64_t FMIPURLInfo.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPURLInfo() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPURLInfo.identifier.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for FMIPURLInfo() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FMIPURLInfo.identifier.modify())(void)
{
  return nullsub_1;
}

uint64_t FMIPURLInfo.partIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPURLInfo() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPURLInfo.partIdentifier.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for FMIPURLInfo() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FMIPURLInfo.partIdentifier.modify())(void)
{
  return nullsub_1;
}

uint64_t FMIPURLInfo.returnURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMIPURLInfo();
  return sub_1D42A3A74(v1 + *(int *)(v3 + 32), a1, &qword_1EBD7E918);
}

uint64_t FMIPURLInfo.returnURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMIPURLInfo() + 32);
  return sub_1D436B07C(a1, v3);
}

uint64_t sub_1D436B07C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7E918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*FMIPURLInfo.returnURL.modify())(void)
{
  return nullsub_1;
}

uint64_t FMIPURLInfo.returnAppName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPURLInfo() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPURLInfo.returnAppName.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for FMIPURLInfo() + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FMIPURLInfo.returnAppName.modify())(void)
{
  return nullsub_1;
}

uint64_t FMIPURLInfo.manufacturer.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPURLInfo() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPURLInfo.manufacturer.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for FMIPURLInfo() + 40));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FMIPURLInfo.manufacturer.modify())(void)
{
  return nullsub_1;
}

FMIPCore::FMIPURLAction_optional __swiftcall FMIPURLAction.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1D446A788();
  result.value = swift_bridgeObjectRelease();
  char v5 = 17;
  if (v3 < 0x11) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

unint64_t FMIPURLAction.rawValue.getter()
{
  unint64_t result = 0x65646F4D74736F6CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6E756F5379616C70;
      break;
    case 2:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    case 3:
      unint64_t result = 0x7463656C6573;
      break;
    case 4:
      unint64_t result = 0x736E6F69746361;
      break;
    case 5:
      unint64_t result = 0x446C6C41776F6873;
      break;
    case 6:
      unint64_t result = 0x74497463656C6573;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0x6574746142776F6CLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xA:
      unint64_t result = 0x796669746F6ELL;
      break;
    case 0xB:
      unint64_t result = 0x496C6C41776F6873;
      break;
    case 0xC:
      unint64_t result = 0x65766F6D6572;
      break;
    case 0xD:
      unint64_t result = 0x52556E7275746572;
      break;
    case 0xE:
      unint64_t result = 0x7075746573;
      break;
    case 0xF:
      unint64_t result = 0x6974617261706573;
      break;
    case 0x10:
      unint64_t result = 0x61636F4C65666173;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D436B564(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D44152A4(*a1, *a2);
}

unint64_t sub_1D436B574()
{
  unint64_t result = qword_1EA6CA258;
  if (!qword_1EA6CA258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA258);
  }
  return result;
}

uint64_t sub_1D436B5C8()
{
  return sub_1D446A888();
}

uint64_t sub_1D436B630()
{
  FMIPURLAction.rawValue.getter();
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D436B694()
{
  return sub_1D446A888();
}

FMIPCore::FMIPURLAction_optional sub_1D436B6F8(Swift::String *a1)
{
  return FMIPURLAction.init(rawValue:)(*a1);
}

unint64_t sub_1D436B704@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FMIPURLAction.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

char *initializeBufferWithCopyOfBuffer for FMIPURLInfo(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D4469498();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v32(a1, a2, v7);
    uint64_t v9 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    os_log_type_t v15 = &a1[v13];
    uint64_t v16 = &a2[v13];
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)os_log_type_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    uint64_t v18 = &a1[v14];
    os_log_type_t v19 = &a2[v14];
    os_log_type_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20(v19, 1, v7))
    {
      uint64_t v21 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      v32(v18, v19, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v18, 0, 1, v7);
    }
    uint64_t v23 = a3[9];
    uint64_t v24 = a3[10];
    uint64_t v25 = &a1[v23];
    unint64_t v26 = &a2[v23];
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    uint64_t v28 = &a1[v24];
    unint64_t v29 = &a2[v24];
    uint64_t v30 = *((void *)v29 + 1);
    *(void *)uint64_t v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FMIPURLInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469498();
  uint64_t v5 = *(void *)(v4 - 8);
  char v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
    v6(v7, v4);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for FMIPURLInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1D4469498();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v30 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v30(a1, a2, v6);
  uint64_t v8 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *((void *)v10 + 1);
  *(void *)uint64_t v9 = *(void *)v10;
  *((void *)v9 + 1) = v11;
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = &a1[v12];
  os_log_type_t v15 = &a2[v12];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = &a1[v13];
  uint64_t v18 = &a2[v13];
  os_log_type_t v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19(v18, 1, v6))
  {
    uint64_t v20 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    v30(v17, v18, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  }
  uint64_t v21 = a3[9];
  uint64_t v22 = a3[10];
  uint64_t v23 = &a1[v21];
  uint64_t v24 = &a2[v21];
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = v25;
  unint64_t v26 = &a1[v22];
  uint64_t v27 = &a2[v22];
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)unint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for FMIPURLInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1D4469498();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v28 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v28(a1, a2, v6);
  a1[a3[5]] = a2[a3[5]];
  uint64_t v8 = a3[6];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)v10;
  *((void *)v9 + 1) = *((void *)v10 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[8];
  os_log_type_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v18 = v17(&a1[v14], 1, v6);
  int v19 = v17(v16, 1, v6);
  if (!v18)
  {
    if (!v19)
    {
      v28(v15, v16, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
LABEL_7:
  uint64_t v21 = a3[9];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[10];
  uint64_t v25 = &a1[v24];
  unint64_t v26 = &a2[v24];
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for FMIPURLInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1D4469498();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  uint64_t v10 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  return a1;
}

char *assignWithTake for FMIPURLInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1D4469498();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v36 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v36(a1, a2, v6);
  uint64_t v8 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = (uint64_t *)&a2[v8];
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *(void *)uint64_t v9 = v12;
  *((void *)v9 + 1) = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  os_log_type_t v15 = (uint64_t *)&a2[v13];
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *(void *)uint64_t v14 = v17;
  *((void *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  int v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v22 = v21(&a1[v18], 1, v6);
  int v23 = v21(v20, 1, v6);
  if (!v22)
  {
    if (!v23)
    {
      v36(v19, v20, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    uint64_t v24 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
LABEL_7:
  uint64_t v25 = a3[9];
  unint64_t v26 = &a1[v25];
  uint64_t v27 = (uint64_t *)&a2[v25];
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *(void *)unint64_t v26 = v29;
  *((void *)v26 + 1) = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[10];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = (uint64_t *)&a2[v30];
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *(void *)uint64_t v31 = v34;
  *((void *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPURLInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D436C280);
}

uint64_t sub_1D436C280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4469498();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_1D42D5DA0(&qword_1EBD7E918);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 32);
    return v13(v15, a2, v14);
  }
}

uint64_t storeEnumTagSinglePayload for FMIPURLInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D436C3D4);
}

uint64_t sub_1D436C3D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D4469498();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  else
  {
    uint64_t v11 = sub_1D42D5DA0(&qword_1EBD7E918);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 32);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1D436C508()
{
  sub_1D4469498();
  if (v0 <= 0x3F)
  {
    sub_1D4275CC4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for FMIPURLAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPURLAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D436C744);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPURLAction()
{
  return &type metadata for FMIPURLAction;
}

uint64_t sub_1D436C77C(uint64_t a1, void (*a2)(char *, void *), uint64_t a3, void *a4)
{
  long long v138 = a4;
  uint64_t v148 = a2;
  uint64_t v149 = a3;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA270);
  MEMORY[0x1F4188790](v5 - 8);
  v144 = (char *)v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EA6CA278);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v150 = (void (*)(char *, uint64_t))((char *)v135 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v151 = sub_1D44692A8();
  uint64_t v152 = *(void *)(v151 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v151);
  uint64_t v141 = (char *)v135 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v140 = (char *)v135 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v143 = (char *)v135 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  char v142 = (char *)v135 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v153 = (char *)v135 - v17;
  uint64_t v18 = sub_1D4469498();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v135 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v22 = (int *)type metadata accessor for FMIPURLInfo();
  uint64_t v147 = swift_allocBox();
  uint64_t v24 = v23;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  v25(v23, a1, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v24 + v22[8], 1, 1, v18);
  uint64_t v139 = v22[5];
  *(unsigned char *)(v24 + v139) = 17;
  unint64_t v26 = (uint64_t *)(v24 + v22[6]);
  *unint64_t v26 = 0;
  v26[1] = 0;
  uint64_t v137 = v26;
  uint64_t v27 = (void *)(v24 + v22[7]);
  *uint64_t v27 = 0;
  v27[1] = 0;
  uint64_t v28 = (void *)(v24 + v22[9]);
  *uint64_t v28 = 0;
  v28[1] = 0;
  uint64_t v29 = v22[10];
  uint64_t v146 = v24;
  uint64_t v30 = (void *)(v24 + v29);
  *uint64_t v30 = 0;
  v30[1] = 0;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1D4469928();
  uint64_t v32 = sub_1D42D7FAC(v31, (uint64_t)qword_1EBD83228);
  v25((uint64_t)v21, a1, v18);
  uint64_t v145 = v32;
  uint64_t v33 = sub_1D44698F8();
  os_log_type_t v34 = sub_1D446A038();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc();
    char v136 = v22;
    uint64_t v36 = (uint8_t *)v35;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v155 = v37;
    v135[2] = a1;
    *(_DWORD *)uint64_t v36 = 136315138;
    v135[1] = v36 + 4;
    uint64_t v38 = sub_1D4469418();
    uint64_t v154 = sub_1D42CB9EC(v38, v39, &v155);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    _os_log_impl(&dword_1D4271000, v33, v34, "FMIPURLHandler: handle url %s", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v37, -1, -1);
    uint64_t v40 = v36;
    int v22 = v136;
    MEMORY[0x1D9447730](v40, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }

  uint64_t v41 = (uint64_t)v150;
  sub_1D4469258();
  uint64_t v42 = v152;
  uint64_t v43 = v151;
  int v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v152 + 48))(v41, 1, v151);
  int v45 = v153;
  if (v44 != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v153, v41, v43);
    uint64_t v52 = sub_1D4469298();
    if (v53)
    {
      if (v52 == 0x3170696D66 && v53 == 0xE500000000000000) {
        char v54 = 1;
      }
      else {
        char v54 = sub_1D446A758();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      char v54 = 0;
    }
    uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
    uint64_t v56 = v142;
    v55(v142, v45, v43);
    if (v54)
    {
      uint64_t v57 = *(void (**)(char *, uint64_t))(v42 + 8);
      v57(v56, v43);
LABEL_23:
      uint64_t v60 = v140;
      uint64_t v61 = v143;
      v55(v143, v153, v43);
LABEL_24:
      v57(v61, v43);
LABEL_25:
      v55(v60, v153, v43);
LABEL_26:
      v57(v60, v43);
      uint64_t v62 = (uint64_t)v153;
      goto LABEL_27;
    }
    uint64_t v58 = sub_1D4469298();
    if (v59)
    {
      if (v58 == 0x796D646E6966 && v59 == 0xE600000000000000)
      {
        uint64_t v57 = *(void (**)(char *, uint64_t))(v42 + 8);
        v57(v142, v43);
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      char v70 = sub_1D446A758();
      uint64_t v57 = *(void (**)(char *, uint64_t))(v42 + 8);
      v57(v142, v43);
      swift_bridgeObjectRelease();
      v55(v143, v153, v43);
      if (v70)
      {
        uint64_t v60 = v140;
        uint64_t v61 = v143;
        goto LABEL_24;
      }
      int v45 = v153;
      uint64_t v69 = v143;
    }
    else
    {
      uint64_t v57 = *(void (**)(char *, uint64_t))(v42 + 8);
      v57(v56, v43);
      uint64_t v69 = v143;
      v55(v143, v45, v43);
    }
    uint64_t v97 = sub_1D4469298();
    if (v98)
    {
      if (v97 == 0x7370747468 && v98 == 0xE500000000000000)
      {
        v57(v143, v43);
        swift_bridgeObjectRelease();
        uint64_t v60 = v140;
        goto LABEL_25;
      }
      char v99 = sub_1D446A758();
      v57(v143, v43);
      swift_bridgeObjectRelease();
      uint64_t v60 = v140;
      v55(v140, v153, v43);
      if (v99) {
        goto LABEL_26;
      }
    }
    else
    {
      v57(v69, v43);
      uint64_t v60 = v140;
      v55(v140, v45, v43);
    }
    uint64_t v100 = sub_1D4469298();
    if (v101)
    {
      uint64_t v62 = (uint64_t)v153;
      if (v100 == 1886680168 && v101 == 0xE400000000000000)
      {
        v57(v140, v43);
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      char v102 = sub_1D446A758();
      v57(v140, v43);
      swift_bridgeObjectRelease();
      if (v102)
      {
LABEL_27:
        uint64_t v63 = sub_1D4469278();
        if (v64)
        {
          if (v63 == 0x73656369766564 && v64 == 0xE700000000000000)
          {
            swift_bridgeObjectRelease();
            uint64_t v65 = v141;
            v55(v141, (char *)v62, v43);
LABEL_33:
            v57(v65, v43);
LABEL_43:
            unint64_t v150 = v57;
            uint64_t v72 = v22;
            uint64_t v73 = sub_1D44698F8();
            os_log_type_t v74 = sub_1D446A038();
            if (os_log_type_enabled(v73, v74))
            {
              id v75 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)id v75 = 0;
              _os_log_impl(&dword_1D4271000, v73, v74, "FMIPURLHandler: processURL generic devices action", v75, 2u);
              MEMORY[0x1D9447730](v75, -1, -1);
            }

            uint64_t v76 = v146;
            *(unsigned char *)(v146 + v139) = 5;
            uint64_t v77 = sub_1D4469278();
            unint64_t v79 = v78;
            uint64_t v80 = v62;
            id v81 = v144;
            sub_1D436E2C0(v76, (uint64_t)v144);
            uint64_t v82 = *(void (**)(char *, void, uint64_t, int *))(*((void *)v72 - 1) + 56);
            v82(v81, 0, 1, v72);
            _s8FMIPCore13FMIPAnalyticsV19sendLaunchAnalytics7context4infoySSSg_AA11FMIPURLInfoVSgtFZ_0(v77, v79, (uint64_t)v81);
            swift_bridgeObjectRelease();
            sub_1D4276C3C((uint64_t)v81, &qword_1EA6CA270);
            sub_1D436E2C0(v76, (uint64_t)v81);
            v82(v81, 0, 1, v72);
            v148(v81, 0);
            sub_1D4276C3C((uint64_t)v81, &qword_1EA6CA270);
            uint64_t v83 = (char *)v80;
            goto LABEL_46;
          }
          char v66 = sub_1D446A758();
          swift_bridgeObjectRelease();
          uint64_t v65 = v141;
          v55(v141, (char *)v62, v43);
          if (v66) {
            goto LABEL_33;
          }
        }
        else
        {
          uint64_t v65 = v141;
          v55(v141, (char *)v62, v43);
        }
        uint64_t v67 = sub_1D4469278();
        if (v68)
        {
          if (v67 == 1769105779 && v68 == 0xE400000000000000)
          {
            v57(v141, v43);
            swift_bridgeObjectRelease();
            goto LABEL_43;
          }
          char v71 = sub_1D446A758();
          v57(v141, v43);
          swift_bridgeObjectRelease();
          if (v71) {
            goto LABEL_43;
          }
        }
        else
        {
          v57(v65, v43);
        }
        uint64_t v85 = sub_1D4469278();
        if (v86)
        {
          if (v85 == 0x736D657469 && v86 == 0xE500000000000000)
          {
            swift_bridgeObjectRelease();
LABEL_53:
            unint64_t v150 = v57;
            uint64_t v88 = sub_1D44698F8();
            os_log_type_t v89 = sub_1D446A038();
            if (os_log_type_enabled(v88, v89))
            {
              uint64_t v90 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v90 = 0;
              _os_log_impl(&dword_1D4271000, v88, v89, "FMIPURLHandler: processURL generic items action", v90, 2u);
              MEMORY[0x1D9447730](v90, -1, -1);
            }

            uint64_t v91 = v146;
            *(unsigned char *)(v146 + v139) = 11;
            uint64_t v92 = sub_1D4469278();
            unint64_t v94 = v93;
            goto LABEL_87;
          }
          char v87 = sub_1D446A758();
          swift_bridgeObjectRelease();
          if (v87) {
            goto LABEL_53;
          }
        }
        uint64_t v95 = sub_1D4469278();
        if (v96)
        {
          if (v95 == 0xD000000000000010 && v96 == 0x80000001D4480850)
          {
            swift_bridgeObjectRelease();
LABEL_77:
            int v110 = sub_1D44698F8();
            os_log_type_t v111 = sub_1D446A038();
            if (os_log_type_enabled(v110, v111))
            {
              uint64_t v112 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v112 = 0;
              _os_log_impl(&dword_1D4271000, v110, v111, "FMIPURLHandler: process universal link action", v112, 2u);
              MEMORY[0x1D9447730](v112, -1, -1);
            }

            sub_1D43707D0(v62, v148, v149);
LABEL_80:
            v57((char *)v62, v43);
            return swift_release();
          }
          char v109 = sub_1D446A758();
          swift_bridgeObjectRelease();
          if (v109) {
            goto LABEL_77;
          }
        }
        uint64_t v113 = sub_1D4469278();
        if (v114)
        {
          if (v113 == 0x72756769666E6F63 && v114 == 0xE900000000000065)
          {
            swift_bridgeObjectRelease();
LABEL_86:
            unint64_t v150 = v57;
            *(unsigned char *)(v146 + v139) = 6;
            uint64_t v116 = sub_1D4469288();
            unint64_t v118 = sub_1D44373E8(1uLL, v116, v117);
            uint64_t v120 = v119;
            uint64_t v122 = v121;
            uint64_t v124 = v123;
            swift_bridgeObjectRelease();
            uint64_t v125 = MEMORY[0x1D9445EF0](v118, v120, v122, v124);
            uint64_t v127 = v126;
            swift_bridgeObjectRelease();
            int v128 = v137;
            *uint64_t v137 = v125;
            v128[1] = v127;
            swift_bridgeObjectRelease();
            uint64_t v92 = sub_1D4469278();
            unint64_t v94 = v129;
            uint64_t v91 = v146;
LABEL_87:
            uint64_t v130 = v144;
            sub_1D436E2C0(v91, (uint64_t)v144);
            uint64_t v131 = *(void (**)(char *, void, uint64_t, int *))(*((void *)v22 - 1) + 56);
            v131(v130, 0, 1, v22);
            _s8FMIPCore13FMIPAnalyticsV19sendLaunchAnalytics7context4infoySSSg_AA11FMIPURLInfoVSgtFZ_0(v92, v94, (uint64_t)v130);
            swift_bridgeObjectRelease();
            sub_1D4276C3C((uint64_t)v130, &qword_1EA6CA270);
            sub_1D436E2C0(v91, (uint64_t)v130);
            v131(v130, 0, 1, v22);
            v148(v130, 0);
            sub_1D4276C3C((uint64_t)v130, &qword_1EA6CA270);
            uint64_t v83 = v153;
LABEL_46:
            v150(v83, v43);
            return swift_release();
          }
          char v115 = sub_1D446A758();
          swift_bridgeObjectRelease();
          if (v115) {
            goto LABEL_86;
          }
        }
        uint64_t v132 = v149;
        swift_retain();
        uint64_t v133 = v147;
        swift_retain();
        id v134 = v138;
        swift_retain();
        sub_1D4370090(v62, v134, v148, v132, v133, (uint64_t)v134);
        swift_release();
        swift_release();
        swift_release();
        v57((char *)v62, v43);
        return swift_release();
      }
    }
    else
    {
      v57(v60, v43);
      uint64_t v62 = (uint64_t)v153;
    }
    uint64_t v103 = sub_1D44698F8();
    os_log_type_t v104 = sub_1D446A018();
    if (os_log_type_enabled(v103, v104))
    {
      uint64_t v105 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v105 = 0;
      _os_log_impl(&dword_1D4271000, v103, v104, "FMIPURLHandler: scheme not supported", v105, 2u);
      MEMORY[0x1D9447730](v105, -1, -1);
    }

    uint64_t v106 = v144;
    sub_1D436E2C0(v146, (uint64_t)v144);
    (*(void (**)(char *, void, uint64_t, int *))(*((void *)v22 - 1) + 56))(v106, 0, 1, v22);
    sub_1D436E324();
    uint64_t v107 = (void *)swift_allocError();
    *int v108 = 3;
    v148(v106, v107);

    sub_1D4276C3C((uint64_t)v106, &qword_1EA6CA270);
    goto LABEL_80;
  }
  sub_1D4276C3C(v41, &qword_1EA6CA278);
  uint64_t v46 = sub_1D44698F8();
  os_log_type_t v47 = sub_1D446A018();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v48 = 0;
    _os_log_impl(&dword_1D4271000, v46, v47, "FMIPURLHandler: invalid URL", v48, 2u);
    MEMORY[0x1D9447730](v48, -1, -1);
  }

  uint64_t v49 = v144;
  sub_1D436E2C0(v146, (uint64_t)v144);
  (*(void (**)(char *, void, uint64_t, int *))(*((void *)v22 - 1) + 56))(v49, 0, 1, v22);
  sub_1D436E324();
  id v50 = (void *)swift_allocError();
  *id v51 = 2;
  v148(v49, v50);

  sub_1D4276C3C((uint64_t)v49, &qword_1EA6CA270);
  return swift_release();
}

uint64_t sub_1D436DA0C(uint64_t a1, void *a2, void (*a3)(char *, void *), uint64_t a4)
{
  char v66 = a3;
  uint64_t v67 = a4;
  uint64_t v6 = sub_1D42D5DA0(&qword_1EA6CA278);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v58 - v10;
  uint64_t v12 = sub_1D44692A8();
  uint64_t v69 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v64 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D4469498();
  uint64_t v65 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v62 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1D4469928();
  uint64_t v20 = sub_1D42D7FAC(v19, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v63 = v20;
  uint64_t v21 = sub_1D44698F8();
  os_log_type_t v22 = sub_1D446A038();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v68 = v12;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v61 = v9;
    uint64_t v25 = (uint8_t *)v24;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v60 = v14;
    uint64_t v27 = v26;
    uint64_t v59 = v17;
    *(_DWORD *)uint64_t v25 = 136315138;
    uint64_t v70 = a1;
    uint64_t v71 = v26;
    sub_1D42D5DA0(&qword_1EA6CA298);
    uint64_t v28 = sub_1D446A158();
    uint64_t v70 = sub_1D42CB9EC(v28, v29, &v71);
    uint64_t v12 = v68;
    uint64_t v17 = v59;
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v21, v22, "FMIPURLHandler: getURLInfo response received: %s", v25, 0xCu);
    swift_arrayDestroy();
    uint64_t v30 = v27;
    uint64_t v14 = v60;
    MEMORY[0x1D9447730](v30, -1, -1);
    uint64_t v31 = v25;
    uint64_t v9 = v61;
    MEMORY[0x1D9447730](v31, -1, -1);

    uint64_t v33 = (uint64_t)v64;
    uint64_t v32 = v65;
    if (a2) {
      goto LABEL_10;
    }
  }
  else
  {

    swift_release_n();
    uint64_t v33 = (uint64_t)v64;
    uint64_t v32 = v65;
    if (a2)
    {
LABEL_10:
      id v36 = a2;
      id v37 = a2;
      uint64_t v38 = sub_1D44698F8();
      os_log_type_t v39 = sub_1D446A038();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = a2;
        uint64_t v42 = swift_slowAlloc();
        uint64_t v70 = (uint64_t)v41;
        uint64_t v71 = v42;
        *(_DWORD *)uint64_t v40 = 136315138;
        sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
        uint64_t v43 = sub_1D446A158();
        uint64_t v70 = sub_1D42CB9EC(v43, v44, &v71);
        sub_1D446A188();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D4271000, v38, v39, "FMIPURLHandler: error received for getURLInfo request: %s", v40, 0xCu);
        swift_arrayDestroy();
        uint64_t v45 = v42;
        a2 = v41;
        MEMORY[0x1D9447730](v45, -1, -1);
        uint64_t v12 = v68;
        MEMORY[0x1D9447730](v40, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(v9, 1, 1, v12);
      v66(v9, a2);
      return sub_1D4276C3C((uint64_t)v9, &qword_1EA6CA278);
    }
  }
  if (!a1) {
    goto LABEL_10;
  }
  sub_1D42A3A74(a1 + OBJC_IVAR____TtC8FMIPCore22FMIPGetURLInfoResponse_url, v33, &qword_1EBD7E918);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v33, 1, v17) == 1)
  {
    swift_retain();
    os_log_type_t v34 = &qword_1EBD7E918;
    uint64_t v35 = v33;
LABEL_14:
    sub_1D4276C3C(v35, v34);
    uint64_t v65 = a1;
    uint64_t v48 = sub_1D44698F8();
    os_log_type_t v49 = sub_1D446A038();
    if (os_log_type_enabled(v48, v49))
    {
      id v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      uint64_t v70 = 0;
      uint64_t v71 = v51;
      *(_DWORD *)id v50 = 136315138;
      sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
      uint64_t v52 = sub_1D446A158();
      uint64_t v70 = sub_1D42CB9EC(v52, v53, &v71);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v48, v49, "FMIPURLHandler: error received for getURLInfo request: %s", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v51, -1, -1);
      MEMORY[0x1D9447730](v50, -1, -1);
    }

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(v9, 1, 1, v68);
    sub_1D436E324();
    char v54 = (void *)swift_allocError();
    *uint64_t v55 = 2;
    v66(v9, v54);

    swift_release();
    return sub_1D4276C3C((uint64_t)v9, &qword_1EA6CA278);
  }
  uint64_t v46 = v12;
  os_log_type_t v47 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v62, v33, v17);
  swift_retain();
  sub_1D4469258();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v11, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v47, v17);
    os_log_type_t v34 = &qword_1EA6CA278;
    uint64_t v35 = (uint64_t)v11;
    goto LABEL_14;
  }
  uint64_t v57 = v69;
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v14, v11, v46);
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v9, v14, v46);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v9, 0, 1, v46);
  v66(v9, 0);
  swift_release();
  sub_1D4276C3C((uint64_t)v9, &qword_1EA6CA278);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v14, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v47, v17);
}

uint64_t sub_1D436E288()
{
  sub_1D42BEC64(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1D436E2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPURLInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D436E324()
{
  unint64_t result = qword_1EA6CA280;
  if (!qword_1EA6CA280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA280);
  }
  return result;
}

uint64_t sub_1D436E378(NSObject *a1, void (*a2)(char *, void *), uint64_t a3)
{
  uint64_t v229 = a2;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA270);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v210 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D4469228();
  uint64_t v234 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v242 = (char *)&v210 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v241 = (char *)&v210 - v12;
  MEMORY[0x1F4188790](v11);
  unint64_t v240 = (char *)&v210 - v13;
  uint64_t v14 = sub_1D42D5DA0(&qword_1EA6CA288);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v214 = (char *)&v210 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v212 = (uint64_t)&v210 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v211 = (uint64_t)&v210 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v216 = (uint64_t)&v210 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v215 = (uint64_t)&v210 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v217 = (uint64_t)&v210 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v218 = (uint64_t)&v210 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v233 = (uint64_t)&v210 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v231 = (uint64_t)&v210 - v32;
  MEMORY[0x1F4188790](v31);
  uint64_t v235 = (uint64_t)&v210 - v33;
  uint64_t v238 = type metadata accessor for FMIPURLInfo();
  uint64_t v226 = *(void *)(v238 - 8);
  MEMORY[0x1F4188790](v238);
  uint64_t v35 = (uint64_t)&v210 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v36 - 8);
  v230 = (char *)&v210 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v237 = (void *)sub_1D4469498();
  uint64_t v38 = *(v237 - 1);
  MEMORY[0x1F4188790](v237);
  unint64_t v239 = (char *)&v210 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1D44692A8();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  v223 = (char *)&v210 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v42);
  uint64_t v45 = (char *)&v210 - v44;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v243 = v8;
  uint64_t v227 = a3;
  uint64_t v46 = sub_1D4469928();
  uint64_t v47 = sub_1D42D7FAC(v46, (uint64_t)qword_1EBD83228);
  uint64_t v48 = *(void (**)(char *, os_log_t, uint64_t))(v41 + 16);
  os_log_t v236 = a1;
  uint64_t v220 = v41 + 16;
  uint64_t v219 = v48;
  v48(v45, a1, v40);
  uint64_t v228 = v47;
  os_log_type_t v49 = sub_1D44698F8();
  os_log_type_t v50 = sub_1D446A038();
  BOOL v51 = os_log_type_enabled(v49, v50);
  unsigned int v225 = v7;
  uint64_t v232 = (char *)v35;
  uint64_t v224 = v38;
  uint64_t v221 = v40;
  uint64_t v222 = v41;
  if (v51)
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    uint64_t v244 = v53;
    *(_DWORD *)uint64_t v52 = 136315138;
    uint64_t v54 = sub_1D4469248();
    uint64_t v246 = sub_1D42CB9EC(v54, v55, &v244);
    uint64_t v7 = v225;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void (**)(char *, uint64_t))(v41 + 8);
    v56(v45, v40);
    _os_log_impl(&dword_1D4271000, v49, v50, "FMIPURLHandler: processing urlComponents %s", v52, 0xCu);
    swift_arrayDestroy();
    uint64_t v57 = v53;
    uint64_t v35 = (uint64_t)v232;
    MEMORY[0x1D9447730](v57, -1, -1);
    uint64_t v58 = v52;
    uint64_t v38 = v224;
    MEMORY[0x1D9447730](v58, -1, -1);
  }
  else
  {
    uint64_t v56 = *(void (**)(char *, uint64_t))(v41 + 8);
    v56(v45, v40);
  }

  uint64_t v59 = v230;
  os_log_t v60 = v236;
  sub_1D4469268();
  uint64_t v61 = v237;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, void *))(v38 + 48))(v59, 1, v237);
  if (result != 1)
  {
    uint64_t v63 = v239;
    (*(void (**)(char *, char *, void *))(v38 + 32))(v239, v59, v61);
    (*(void (**)(uint64_t, char *, void *))(v38 + 16))(v35, v63, v61);
    uint64_t v64 = (int *)v238;
    (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(v38 + 56))(v35 + *(int *)(v238 + 32), 1, 1, v61);
    uint64_t v65 = (char *)v64[5];
    v65[v35] = 17;
    char v66 = (char *)(v35 + v64[6]);
    *(void *)char v66 = 0;
    *((void *)v66 + 1) = 0;
    v230 = v66;
    uint64_t v67 = (char *)(v35 + v64[7]);
    *(void *)uint64_t v67 = 0;
    *((void *)v67 + 1) = 0;
    uint64_t v213 = v67;
    uint64_t v68 = (char *)(v35 + v64[9]);
    *(void *)uint64_t v68 = 0;
    *((void *)v68 + 1) = 0;
    uint64_t v69 = (char *)(v35 + v64[10]);
    *(void *)uint64_t v69 = 0;
    *((void *)v69 + 1) = 0;
    uint64_t v70 = sub_1D4469278();
    if (v71)
    {
      if (v70 == 0x73656369766564 && v71 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_12:
        uint64_t v73 = sub_1D44698F8();
        os_log_type_t v74 = sub_1D446A038();
        if (os_log_type_enabled(v73, v74))
        {
          id v75 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v75 = 0;
          _os_log_impl(&dword_1D4271000, v73, v74, "FMIPURLHandler: processURL generic devices action", v75, 2u);
          MEMORY[0x1D9447730](v75, -1, -1);
        }

        v65[v35] = 5;
        sub_1D436E2C0(v35, (uint64_t)v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v226 + 56))(v7, 0, 1, v238);
        v229(v7, 0);
LABEL_15:
        uint64_t v76 = &qword_1EA6CA270;
        uint64_t v77 = (uint64_t)v7;
LABEL_16:
        sub_1D4276C3C(v77, v76);
        (*(void (**)(char *, void *))(v38 + 8))(v239, v61);
        return sub_1D4372578(v35);
      }
      char v72 = sub_1D446A758();
      swift_bridgeObjectRelease();
      if (v72) {
        goto LABEL_12;
      }
    }
    if (sub_1D4469288() == 0x6563697665642FLL && v78 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      unint64_t v79 = v223;
      uint64_t v80 = v221;
      v219(v223, v60, v221);
    }
    else
    {
      char v81 = sub_1D446A758();
      swift_bridgeObjectRelease();
      unint64_t v79 = v223;
      uint64_t v80 = v221;
      v219(v223, v60, v221);
      if ((v81 & 1) == 0)
      {
        uint64_t v82 = v80;
        if (sub_1D4469288() != 0x6D6574692FLL || v83 != 0xE500000000000000)
        {
          char v96 = sub_1D446A758();
          swift_bridgeObjectRelease();
          v56(v223, v82);
          if ((v96 & 1) == 0)
          {
            uint64_t v97 = sub_1D44698F8();
            os_log_type_t v98 = sub_1D446A018();
            if (os_log_type_enabled(v97, v98))
            {
              char v99 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)char v99 = 0;
              _os_log_impl(&dword_1D4271000, v97, v98, "FMIPURLHandler: processURL invalid action", v99, 2u);
              MEMORY[0x1D9447730](v99, -1, -1);
            }

            sub_1D436E2C0(v35, (uint64_t)v7);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v226 + 56))(v7, 0, 1, v238);
            sub_1D436E324();
            uint64_t v100 = (void *)swift_allocError();
            unsigned char *v101 = 0;
            v229(v7, v100);

            goto LABEL_15;
          }
LABEL_25:
          uint64_t v84 = sub_1D4469238();
          v223 = v65;
          if (v84)
          {
            uint64_t v85 = *(void *)(v84 + 16);
            uint64_t v86 = v243;
            uint64_t v87 = v234;
            if (v85)
            {
              uint64_t v88 = *(void (**)(char *, unint64_t, uint64_t))(v234 + 16);
              unint64_t v89 = v84
                  + ((*(unsigned __int8 *)(v234 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v234 + 80));
              uint64_t v90 = (void (**)(char *, uint64_t))(v234 + 8);
              uint64_t v91 = *(void *)(v234 + 72);
              swift_bridgeObjectRetain();
              uint64_t v92 = v240;
              while (1)
              {
                v88(v92, v89, v86);
                if (sub_1D4469208() == 25705 && v93 == 0xE200000000000000)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_41;
                }
                char v94 = sub_1D446A758();
                swift_bridgeObjectRelease();
                if (v94) {
                  break;
                }
                uint64_t v92 = v240;
                uint64_t v86 = v243;
                (*v90)(v240, v243);
                v89 += v91;
                if (!--v85)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v35 = (uint64_t)v232;
                  uint64_t v61 = v237;
                  uint64_t v87 = v234;
                  goto LABEL_33;
                }
              }
              uint64_t v86 = v243;
LABEL_41:
              char v102 = v240;
              swift_bridgeObjectRelease();
              uint64_t v87 = v234;
              uint64_t v103 = v235;
              (*(void (**)(uint64_t, char *, uint64_t))(v234 + 32))(v235, v102, v86);
              uint64_t v95 = *(char **)(v87 + 56);
              ((void (*)(uint64_t, void, uint64_t, uint64_t))v95)(v103, 0, 1, v86);
              swift_bridgeObjectRelease();
              uint64_t v35 = (uint64_t)v232;
              uint64_t v61 = v237;
            }
            else
            {
LABEL_33:
              uint64_t v95 = *(char **)(v87 + 56);
              ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v95)(v235, 1, 1, v86);
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            uint64_t v87 = v234;
            uint64_t v95 = *(char **)(v234 + 56);
            uint64_t v86 = v243;
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v95)(v235, 1, 1, v243);
          }
          uint64_t v104 = sub_1D4469238();
          if (v104)
          {
            uint64_t v105 = *(void *)(v104 + 16);
            if (v105)
            {
              unint64_t v240 = v95;
              uint64_t v107 = v87 + 16;
              uint64_t v106 = *(void (**)(char *, unint64_t, uint64_t))(v87 + 16);
              unint64_t v108 = v104
                   + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
              uint64_t v109 = *(void *)(v107 + 56);
              swift_bridgeObjectRetain();
              int v110 = v241;
              while (1)
              {
                v106(v110, v108, v86);
                if (sub_1D4469208() == 0x644974726170 && v111 == 0xE600000000000000)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_54;
                }
                char v112 = sub_1D446A758();
                swift_bridgeObjectRelease();
                if (v112) {
                  break;
                }
                int v110 = v241;
                uint64_t v86 = v243;
                (*(void (**)(char *, uint64_t))(v107 - 8))(v241, v243);
                v108 += v109;
                if (!--v105)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v35 = (uint64_t)v232;
                  uint64_t v61 = v237;
                  uint64_t v87 = v234;
                  uint64_t v95 = v240;
                  goto LABEL_50;
                }
              }
              uint64_t v86 = v243;
LABEL_54:
              swift_bridgeObjectRelease();
              uint64_t v113 = v234;
              uint64_t v114 = v231;
              (*(void (**)(uint64_t, char *, uint64_t))(v234 + 32))(v231, v241, v86);
              uint64_t v115 = v114;
              uint64_t v87 = v113;
              uint64_t v95 = v240;
              ((void (*)(uint64_t, void, uint64_t, uint64_t))v240)(v115, 0, 1, v86);
              swift_bridgeObjectRelease();
              uint64_t v35 = (uint64_t)v232;
              uint64_t v61 = v237;
            }
            else
            {
LABEL_50:
              ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v95)(v231, 1, 1, v86);
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v95)(v231, 1, 1, v86);
          }
          uint64_t v116 = sub_1D4469238();
          if (v116)
          {
            uint64_t v117 = *(void *)(v116 + 16);
            if (v117)
            {
              unint64_t v240 = v95;
              uint64_t v119 = v87 + 16;
              unint64_t v118 = *(void (**)(char *, unint64_t, uint64_t))(v87 + 16);
              unint64_t v120 = v116
                   + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
              uint64_t v121 = *(void *)(v119 + 56);
              swift_bridgeObjectRetain();
              uint64_t v122 = v242;
              while (1)
              {
                v118(v122, v120, v86);
                if (sub_1D4469208() == 28783 && v123 == 0xE200000000000000)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_67;
                }
                char v124 = sub_1D446A758();
                swift_bridgeObjectRelease();
                if (v124) {
                  break;
                }
                uint64_t v122 = v242;
                uint64_t v86 = v243;
                (*(void (**)(char *, uint64_t))(v119 - 8))(v242, v243);
                v120 += v121;
                if (!--v117)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v35 = (uint64_t)v232;
                  uint64_t v61 = v237;
                  uint64_t v87 = v234;
                  uint64_t v95 = v240;
                  goto LABEL_63;
                }
              }
              uint64_t v86 = v243;
LABEL_67:
              swift_bridgeObjectRelease();
              uint64_t v125 = v233;
              uint64_t v126 = v234;
              (*(void (**)(uint64_t, char *, uint64_t))(v234 + 32))(v233, v242, v86);
              uint64_t v127 = v125;
              uint64_t v87 = v126;
              ((void (*)(uint64_t, void, uint64_t, uint64_t))v240)(v127, 0, 1, v86);
              swift_bridgeObjectRelease();
              uint64_t v35 = (uint64_t)v232;
              uint64_t v61 = v237;
            }
            else
            {
LABEL_63:
              ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v95)(v233, 1, 1, v86);
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v95)(v233, 1, 1, v86);
          }
          uint64_t v128 = v218;
          sub_1D42A3A74(v235, v218, &qword_1EA6CA288);
          unint64_t v129 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
          if (v129(v128, 1, v86) == 1)
          {
            sub_1D4276C3C(v128, &qword_1EA6CA288);
LABEL_73:
            uint64_t v139 = sub_1D44698F8();
            os_log_type_t v140 = sub_1D446A018();
            if (os_log_type_enabled(v139, v140))
            {
              uint64_t v141 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v141 = 0;
              _os_log_impl(&dword_1D4271000, v139, v140, "FMIPURLHandler: processURL invalid device identifier", v141, 2u);
              MEMORY[0x1D9447730](v141, -1, -1);
            }

            uint64_t v142 = (uint64_t)v225;
            sub_1D436E2C0(v35, (uint64_t)v225);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v226 + 56))(v142, 0, 1, v238);
            sub_1D436E324();
            uint64_t v143 = (void *)swift_allocError();
            unsigned char *v144 = 1;
            v229((char *)v142, v143);

            uint64_t v145 = v142;
            goto LABEL_85;
          }
          uint64_t v130 = v86;
          uint64_t v131 = sub_1D4469218();
          uint64_t v133 = v132;
          char v136 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
          uint64_t v135 = v87 + 8;
          id v134 = v136;
          v136(v128, v130);
          if (!v133) {
            goto LABEL_73;
          }
          uint64_t v242 = v133;
          uint64_t v137 = (char *)v131;
          uint64_t v138 = v217;
          sub_1D42A3A74(v233, v217, &qword_1EA6CA288);
          if (v129(v138, 1, v130) == 1)
          {
            sub_1D4276C3C(v138, &qword_1EA6CA288);
          }
          else
          {
            uint64_t v146 = sub_1D4469218();
            uint64_t v147 = v135;
            uint64_t v149 = v148;
            uint64_t v234 = v147;
            v134(v138, v130);
            if (v149)
            {
              v150._countAndFlagsBits = v146;
              v150._object = v149;
              FMIPURLAction.init(rawValue:)(v150);
              if (v244 != 17)
              {
                LODWORD(v241) = v244;
                uint64_t v172 = v215;
                sub_1D42A3A74(v235, v215, &qword_1EA6CA288);
                uint64_t v173 = v216;
                sub_1D42A3A74(v233, v216, &qword_1EA6CA288);
                uint64_t v174 = sub_1D44698F8();
                int v175 = sub_1D446A018();
                BOOL v176 = os_log_type_enabled(v174, (os_log_type_t)v175);
                unint64_t v240 = v137;
                v237 = v134;
                if (v176)
                {
                  LODWORD(v228) = v175;
                  os_log_t v236 = v174;
                  unint64_t v177 = (_DWORD *)swift_slowAlloc();
                  uint64_t v222 = swift_slowAlloc();
                  uint64_t v246 = v222;
                  v178 = v177;
                  *unint64_t v177 = 136315394;
                  uint64_t v179 = v211;
                  sub_1D42A3A74(v172, v211, &qword_1EA6CA288);
                  uint64_t v180 = v243;
                  uint64_t v181 = v134;
                  if (v129(v179, 1, v243) == 1)
                  {
                    sub_1D4276C3C(v179, &qword_1EA6CA288);
                    uint64_t v182 = 0;
                    uint64_t v183 = 0;
                  }
                  else
                  {
                    uint64_t v186 = v179;
                    uint64_t v182 = sub_1D4469218();
                    uint64_t v183 = v187;
                    uint64_t v188 = v186;
                    uint64_t v181 = v134;
                    v134(v188, v180);
                  }
                  uint64_t v244 = v182;
                  uint64_t v245 = v183;
                  uint64_t v221 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
                  uint64_t v189 = sub_1D4469B68();
                  uint64_t v244 = sub_1D42CB9EC(v189, v190, &v246);
                  sub_1D446A188();
                  swift_bridgeObjectRelease();
                  sub_1D4276C3C(v215, &qword_1EA6CA288);
                  *((_WORD *)v178 + 6) = 2080;
                  uint64_t v191 = v212;
                  sub_1D42A3A74(v216, v212, &qword_1EA6CA288);
                  unsigned int v192 = v129(v191, 1, v180);
                  uint64_t v185 = v240;
                  if (v192 == 1)
                  {
                    sub_1D4276C3C(v191, &qword_1EA6CA288);
                    uint64_t v193 = 0;
                    uint64_t v194 = 0;
                  }
                  else
                  {
                    uint64_t v193 = sub_1D4469218();
                    uint64_t v195 = v191;
                    uint64_t v194 = v196;
                    v181(v195, v180);
                  }
                  uint64_t v184 = (uint64_t)v214;
                  uint64_t v244 = v193;
                  uint64_t v245 = v194;
                  uint64_t v197 = sub_1D4469B68();
                  uint64_t v244 = sub_1D42CB9EC(v197, v198, &v246);
                  sub_1D446A188();
                  swift_bridgeObjectRelease();
                  sub_1D4276C3C(v216, &qword_1EA6CA288);
                  os_log_t v199 = v236;
                  _os_log_impl(&dword_1D4271000, v236, (os_log_type_t)v228, "FMIPURLHandler: processURL default action device: %s operation: %s", (uint8_t *)v178, 0x16u);
                  uint64_t v200 = v222;
                  swift_arrayDestroy();
                  MEMORY[0x1D9447730](v200, -1, -1);
                  MEMORY[0x1D9447730](v178, -1, -1);
                }
                else
                {
                  sub_1D4276C3C(v172, &qword_1EA6CA288);
                  sub_1D4276C3C(v173, &qword_1EA6CA288);

                  uint64_t v184 = (uint64_t)v214;
                  uint64_t v185 = v240;
                }
                uint64_t v201 = v230;
                swift_bridgeObjectRelease();
                char v202 = v242;
                *uint64_t v201 = v185;
                v201[1] = v202;
                sub_1D42A3A74(v231, v184, &qword_1EA6CA288);
                uint64_t v203 = v243;
                if (v129(v184, 1, v243) == 1)
                {
                  sub_1D4276C3C(v184, &qword_1EA6CA288);
                  uint64_t v204 = 0;
                  uint64_t v205 = 0;
                }
                else
                {
                  uint64_t v204 = sub_1D4469218();
                  uint64_t v205 = v206;
                  ((void (*)(uint64_t, uint64_t))v237)(v184, v203);
                }
                uint64_t v207 = (uint64_t)v225;
                uint64_t v208 = v226;
                uint64_t v38 = v224;
                uint64_t v209 = (uint64_t *)v213;
                swift_bridgeObjectRelease();
                *uint64_t v209 = v204;
                v209[1] = v205;
                v223[v35] = (char)v241;
                sub_1D436E2C0(v35, v207);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v208 + 56))(v207, 0, 1, v238);
                v229((char *)v207, 0);
                sub_1D4276C3C(v207, &qword_1EA6CA270);
                sub_1D4276C3C(v233, &qword_1EA6CA288);
                sub_1D4276C3C(v231, &qword_1EA6CA288);
                uint64_t v77 = v235;
                uint64_t v76 = &qword_1EA6CA288;
                goto LABEL_16;
              }
              swift_bridgeObjectRelease();
              uint64_t v151 = sub_1D44698F8();
              os_log_type_t v152 = sub_1D446A018();
              if (os_log_type_enabled(v151, v152))
              {
                uint64_t v153 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v153 = 0;
                _os_log_impl(&dword_1D4271000, v151, v152, "FMIPURLHandler: processURL invalid action", v153, 2u);
                MEMORY[0x1D9447730](v153, -1, -1);
              }

              uint64_t v154 = sub_1D4469278();
              unint64_t v156 = v155;
              uint64_t v157 = (uint64_t)v225;
              sub_1D436E2C0(v35, (uint64_t)v225);
              char v158 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v226 + 56);
              uint64_t v159 = v238;
              v158(v157, 0, 1, v238);
              _s8FMIPCore13FMIPAnalyticsV19sendLaunchAnalytics7context4infoySSSg_AA11FMIPURLInfoVSgtFZ_0(v154, v156, v157);
              swift_bridgeObjectRelease();
              sub_1D4276C3C(v157, &qword_1EA6CA270);
              sub_1D436E2C0(v35, v157);
              v158(v157, 0, 1, v159);
              sub_1D436E324();
              v160 = (void *)swift_allocError();
              unsigned char *v161 = 0;
              v229((char *)v157, v160);

              goto LABEL_84;
            }
          }
          uint64_t v162 = sub_1D44698F8();
          os_log_type_t v163 = sub_1D446A038();
          if (os_log_type_enabled(v162, v163))
          {
            unint64_t v164 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v164 = 0;
            _os_log_impl(&dword_1D4271000, v162, v163, "FMIPURLHandler: processURL no further operation", v164, 2u);
            MEMORY[0x1D9447730](v164, -1, -1);
          }

          char v165 = v230;
          swift_bridgeObjectRelease();
          uint64_t v166 = v242;
          *char v165 = v137;
          v165[1] = v166;
          v223[v35] = 3;
          uint64_t v167 = sub_1D4469278();
          unint64_t v169 = v168;
          uint64_t v157 = (uint64_t)v225;
          sub_1D436E2C0(v35, (uint64_t)v225);
          uint64_t v170 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v226 + 56);
          uint64_t v171 = v238;
          v170(v157, 0, 1, v238);
          _s8FMIPCore13FMIPAnalyticsV19sendLaunchAnalytics7context4infoySSSg_AA11FMIPURLInfoVSgtFZ_0(v167, v169, v157);
          swift_bridgeObjectRelease();
          sub_1D4276C3C(v157, &qword_1EA6CA270);
          sub_1D436E2C0(v35, v157);
          v170(v157, 0, 1, v171);
          v229((char *)v157, 0);
LABEL_84:
          uint64_t v145 = v157;
LABEL_85:
          sub_1D4276C3C(v145, &qword_1EA6CA270);
          sub_1D4276C3C(v233, &qword_1EA6CA288);
          sub_1D4276C3C(v231, &qword_1EA6CA288);
          sub_1D4276C3C(v235, &qword_1EA6CA288);
          (*(void (**)(char *, void *))(v224 + 8))(v239, v61);
          return sub_1D4372578(v35);
        }
        swift_bridgeObjectRelease();
        unint64_t v79 = v223;
      }
    }
    v56(v79, v80);
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D436FE00(uint64_t a1, void *a2, void (*a3)(char *, void *), uint64_t a4)
{
  uint64_t v20 = a1;
  uint64_t v7 = sub_1D42D5DA0(&qword_1EA6CA270);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D42D5DA0(&qword_1EA6CA278);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D44692A8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = ((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for FMIPURLInfo();
  uint64_t v18 = swift_projectBox();
  if (a2) {
    goto LABEL_4;
  }
  sub_1D42A3A74(v20, (uint64_t)v12, &qword_1EA6CA278);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1D4276C3C((uint64_t)v12, &qword_1EA6CA278);
LABEL_4:
    swift_beginAccess();
    sub_1D436E2C0(v18, (uint64_t)v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 0, 1, v17);
    a3(v9, a2);
    return sub_1D4276C3C((uint64_t)v9, &qword_1EA6CA270);
  }
  (*(void (**)(NSObject *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  sub_1D436E378(v16, a3, a4);
  return (*(uint64_t (**)(NSObject *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1D4370090(uint64_t a1, void *a2, void (*a3)(char *, void *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v59 = a2;
  uint64_t v11 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D42D5DA0(&qword_1EA6CA270);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v54 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1D44692A8();
  uint64_t v55 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v53 = ((char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_1D42D5DA0(&qword_1EA6CA278);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v53 - v22;
  uint64_t v24 = (void *)swift_allocObject();
  uint64_t v56 = a3;
  v24[2] = a3;
  v24[3] = a4;
  uint64_t v25 = a1;
  v24[4] = a5;
  uint64_t v24[5] = a6;
  uint64_t v58 = a4;
  swift_retain();
  uint64_t v57 = a5;
  swift_retain();
  swift_retain();
  uint64_t v26 = sub_1D4469278();
  if (v27)
  {
    if (v26 == 0x737361707962 && v27 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1D4469928();
      sub_1D42D7FAC(v29, (uint64_t)qword_1EBD83228);
      uint64_t v30 = sub_1D44698F8();
      os_log_type_t v31 = sub_1D446A038();
      BOOL v32 = os_log_type_enabled(v30, v31);
      uint64_t v33 = v55;
      if (v32)
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v34 = 0;
        _os_log_impl(&dword_1D4271000, v30, v31, "FMIPURLHandler: fetch bypassed", v34, 2u);
        MEMORY[0x1D9447730](v34, -1, -1);
      }

      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v23, v25, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v23, 0, 1, v16);
      uint64_t v35 = type metadata accessor for FMIPURLInfo();
      uint64_t v36 = swift_projectBox();
      sub_1D42A3A74((uint64_t)v23, (uint64_t)v21, &qword_1EA6CA278);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v21, 1, v16) == 1)
      {
        sub_1D4276C3C((uint64_t)v21, &qword_1EA6CA278);
        swift_beginAccess();
        uint64_t v37 = v54;
        sub_1D436E2C0(v36, (uint64_t)v54);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v37, 0, 1, v35);
        v56(v37, 0);
        sub_1D4276C3C((uint64_t)v37, &qword_1EA6CA270);
      }
      else
      {
        BOOL v51 = v53;
        (*(void (**)(NSObject *, char *, uint64_t))(v33 + 32))(v53, v21, v16);
        sub_1D436E378(v51, v56, v58);
        (*(void (**)(NSObject *, uint64_t))(v33 + 8))(v51, v16);
      }
      sub_1D4276C3C((uint64_t)v23, &qword_1EA6CA278);
      return swift_release();
    }
    char v28 = sub_1D446A758();
    swift_bridgeObjectRelease();
    if (v28) {
      goto LABEL_6;
    }
  }
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1D4469928();
  sub_1D42D7FAC(v38, (uint64_t)qword_1EBD83228);
  uint64_t v39 = sub_1D44698F8();
  os_log_type_t v40 = sub_1D446A038();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    _os_log_impl(&dword_1D4271000, v39, v40, "FMIPURLHandler: Fetching url infos...", v41, 2u);
    MEMORY[0x1D9447730](v41, -1, -1);
  }

  sub_1D4469268();
  uint64_t v42 = sub_1D4469498();
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v13, 1, v42) != 1)
  {
    type metadata accessor for FMIPGetURLInfoRequest();
    uint64_t v44 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v44 + qword_1EA6E4740, v13, v42);
    uint64_t v45 = sub_1D4332A24(0x6E496C7255746567, 0xEA00000000006F66, 0, 0, 1);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v42);
    uint64_t v46 = v59[5];
    uint64_t v47 = v59[6];
    sub_1D42C26F4(v59 + 2, v46);
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = sub_1D4372674;
    *(void *)(v48 + 24) = v24;
    os_log_type_t v49 = *(void (**)(void *, uint64_t (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
    uint64_t v50 = type metadata accessor for FMIPGetURLInfoResponse();
    swift_retain();
    v49(v45, sub_1D43726B8, v48, v50, v46, v47);
    swift_release();
    swift_release();
    return swift_release();
  }
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1D43707D0(uint64_t a1, void (*a2)(char *, void *), uint64_t a3)
{
  uint64_t v238 = a3;
  unint64_t v239 = a2;
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6CA270);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v219 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v249 = sub_1D4469228();
  uint64_t v242 = *(void (***)(uint64_t, char *, uint64_t))(v249 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v249);
  uint64_t v247 = (uint64_t)&v219 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v246 = (char *)&v219 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v245 = (char *)&v219 - v11;
  uint64_t v12 = sub_1D42D5DA0(&qword_1EA6CA288);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v223 = (uint64_t)&v219 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v224 = (uint64_t)&v219 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v227 = (uint64_t)&v219 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v228 = (char *)&v219 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v226 = (uint64_t)&v219 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v230 = (uint64_t)&v219 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v225 = (uint64_t)&v219 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v229 = (uint64_t)&v219 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v234 = (char *)&v219 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v233 = (uint64_t)&v219 - v32;
  MEMORY[0x1F4188790](v31);
  uint64_t v241 = (uint64_t)&v219 - v33;
  uint64_t v243 = type metadata accessor for FMIPURLInfo();
  uint64_t v235 = *(void *)(v243 - 8);
  MEMORY[0x1F4188790](v243);
  uint64_t v237 = (uint64_t)&v219 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v35 - 8);
  uint64_t v37 = (char *)&v219 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v248 = sub_1D4469498();
  uint64_t v38 = *(void *)(v248 - 8);
  MEMORY[0x1F4188790](v248);
  os_log_t v236 = (char *)&v219 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1D44692A8();
  uint64_t v41 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v43 = (char *)&v219 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v44 = sub_1D4469928();
  uint64_t v45 = sub_1D42D7FAC(v44, (uint64_t)qword_1EBD83228);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v43, a1, v40);
  uint64_t v244 = v45;
  uint64_t v46 = sub_1D44698F8();
  os_log_type_t v47 = sub_1D446A038();
  BOOL v48 = os_log_type_enabled(v46, v47);
  uint64_t v240 = a1;
  if (v48)
  {
    uint64_t v49 = swift_slowAlloc();
    uint64_t v232 = v6;
    uint64_t v50 = (uint8_t *)v49;
    uint64_t v51 = swift_slowAlloc();
    uint64_t v231 = v38;
    uint64_t v52 = v51;
    uint64_t v251 = v51;
    *(_DWORD *)uint64_t v50 = 136315138;
    uint64_t v222 = v37;
    sub_1D43725D4();
    uint64_t v53 = sub_1D446A6D8();
    uint64_t v250 = sub_1D42CB9EC(v53, v54, &v251);
    uint64_t v37 = v222;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
    _os_log_impl(&dword_1D4271000, v46, v47, "FMIPURLHandler: processUniversalURL: %s", v50, 0xCu);
    swift_arrayDestroy();
    uint64_t v55 = v52;
    uint64_t v38 = v231;
    MEMORY[0x1D9447730](v55, -1, -1);
    uint64_t v56 = v50;
    uint64_t v6 = v232;
    MEMORY[0x1D9447730](v56, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
  }

  sub_1D4469268();
  uint64_t v57 = v248;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v37, 1, v248) != 1)
  {
    uint64_t v64 = v236;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v236, v37, v57);
    uint64_t v65 = v237;
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v237, v64, v57);
    char v66 = (int *)v243;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v65 + *(int *)(v243 + 32), 1, 1, v57);
    uint64_t v222 = (char *)v66[5];
    v222[v65] = 17;
    uint64_t v67 = (uint64_t *)(v65 + v66[6]);
    *uint64_t v67 = 0;
    v67[1] = 0;
    uint64_t v68 = (void *)(v65 + v66[7]);
    *uint64_t v68 = 0;
    v68[1] = 0;
    uint64_t v69 = (void *)(v65 + v66[9]);
    void *v69 = 0;
    v69[1] = 0;
    uint64_t v70 = (char **)(v65 + v66[10]);
    *uint64_t v70 = 0;
    v70[1] = 0;
    if (sub_1D4469288() == 0x6D6574692FLL && v71 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      uint64_t v72 = v249;
      uint64_t v73 = v242;
    }
    else
    {
      char v74 = sub_1D446A758();
      swift_bridgeObjectRelease();
      uint64_t v72 = v249;
      uint64_t v73 = v242;
      if ((v74 & 1) == 0)
      {
        uint64_t v87 = sub_1D44698F8();
        os_log_type_t v88 = sub_1D446A018();
        if (os_log_type_enabled(v87, v88))
        {
          unint64_t v89 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v89 = 0;
          _os_log_impl(&dword_1D4271000, v87, v88, "FMIPURLHandler: processUniversalURL: invalid action", v89, 2u);
          MEMORY[0x1D9447730](v89, -1, -1);
        }

        uint64_t v90 = v237;
        sub_1D436E2C0(v237, (uint64_t)v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v235 + 56))(v6, 0, 1, v243);
        sub_1D436E324();
        uint64_t v91 = (void *)swift_allocError();
        *uint64_t v92 = 0;
        v239(v6, v91);

        sub_1D4276C3C((uint64_t)v6, &qword_1EA6CA270);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v236, v57);
        uint64_t v93 = v90;
        return sub_1D4372578(v93);
      }
    }
    uint64_t v220 = v67;
    uint64_t v221 = v70;
    uint64_t v75 = sub_1D4469238();
    uint64_t v231 = v38;
    uint64_t v232 = v6;
    if (v75)
    {
      uint64_t v76 = *(void *)(v75 + 16);
      if (v76)
      {
        uint64_t v77 = (char *)(v73 + 2);
        uint64_t v78 = v73[2];
        unint64_t v79 = v75 + ((*((unsigned __int8 *)v73 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v73 + 80));
        uint64_t v80 = *((void *)v77 + 7);
        swift_bridgeObjectRetain();
        char v81 = v245;
        while (1)
        {
          v78((uint64_t)v81, (char *)v79, v72);
          sub_1D4469208();
          uint64_t v82 = sub_1D4469B78();
          uint64_t v84 = v83;
          swift_bridgeObjectRelease();
          if (v82 == 0x6C6169726573 && v84 == 0xE600000000000000) {
            break;
          }
          char v85 = sub_1D446A758();
          swift_bridgeObjectRelease();
          if (v85) {
            goto LABEL_28;
          }
          char v81 = v245;
          uint64_t v72 = v249;
          (*((void (**)(char *, uint64_t))v77 - 1))(v245, v249);
          v79 += v80;
          if (!--v76)
          {
            swift_bridgeObjectRelease();
            uint64_t v6 = v232;
            uint64_t v57 = v248;
            uint64_t v73 = v242;
            goto LABEL_22;
          }
        }
        swift_bridgeObjectRelease();
LABEL_28:
        swift_bridgeObjectRelease();
        uint64_t v94 = v241;
        uint64_t v95 = v242;
        uint64_t v72 = v249;
        v242[4](v241, v245, v249);
        uint64_t v86 = (char *)v95[7];
        uint64_t v96 = v94;
        uint64_t v73 = v95;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v86)(v96, 0, 1, v72);
        swift_bridgeObjectRelease();
        uint64_t v6 = v232;
        uint64_t v57 = v248;
      }
      else
      {
LABEL_22:
        uint64_t v86 = (char *)v73[7];
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v86)(v241, 1, 1, v72);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v86 = (char *)v73[7];
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v86)(v241, 1, 1, v72);
    }
    uint64_t v97 = sub_1D4469238();
    if (v97)
    {
      uint64_t v98 = *(void *)(v97 + 16);
      if (v98)
      {
        uint64_t v245 = v86;
        char v99 = v73[2];
        unint64_t v100 = v97 + ((*((unsigned __int8 *)v73 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v73 + 80));
        uint64_t v101 = (void (**)(char *, uint64_t))(v73 + 1);
        char v102 = v73[9];
        swift_bridgeObjectRetain();
        uint64_t v103 = v246;
        while (1)
        {
          v99((uint64_t)v103, (char *)v100, v72);
          sub_1D4469208();
          uint64_t v104 = sub_1D4469B78();
          uint64_t v106 = v105;
          swift_bridgeObjectRelease();
          if (v104 == 0x74636166756E616DLL && v106 == 0xEC00000072657275) {
            break;
          }
          char v107 = sub_1D446A758();
          swift_bridgeObjectRelease();
          if (v107) {
            goto LABEL_41;
          }
          uint64_t v103 = v246;
          uint64_t v72 = v249;
          (*v101)(v246, v249);
          v100 += (unint64_t)v102;
          if (!--v98)
          {
            swift_bridgeObjectRelease();
            uint64_t v6 = v232;
            uint64_t v57 = v248;
            uint64_t v73 = v242;
            uint64_t v86 = v245;
            goto LABEL_37;
          }
        }
        swift_bridgeObjectRelease();
LABEL_41:
        swift_bridgeObjectRelease();
        uint64_t v109 = v242;
        uint64_t v110 = v233;
        uint64_t v72 = v249;
        v242[4](v233, v246, v249);
        uint64_t v73 = v109;
        uint64_t v86 = v245;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v245)(v110, 0, 1, v72);
        swift_bridgeObjectRelease();
        uint64_t v6 = v232;
        uint64_t v57 = v248;
        uint64_t v108 = (uint64_t)v234;
LABEL_42:
        uint64_t v111 = sub_1D4469238();
        if (v111)
        {
          uint64_t v112 = *(void *)(v111 + 16);
          if (v112)
          {
            uint64_t v245 = v86;
            uint64_t v113 = (char *)(v73 + 2);
            uint64_t v114 = v73[2];
            unint64_t v115 = v111 + ((*((unsigned __int8 *)v73 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v73 + 80));
            uint64_t v116 = *((void *)v113 + 7);
            swift_bridgeObjectRetain();
            uint64_t v117 = v247;
            while (1)
            {
              v114(v117, (char *)v115, v72);
              sub_1D4469208();
              uint64_t v118 = sub_1D4469B78();
              uint64_t v120 = v119;
              swift_bridgeObjectRelease();
              if (v118 == 0x6E6F69746361 && v120 == 0xE600000000000000) {
                break;
              }
              char v121 = sub_1D446A758();
              swift_bridgeObjectRelease();
              if (v121) {
                goto LABEL_53;
              }
              uint64_t v117 = v247;
              uint64_t v72 = v249;
              (*((void (**)(uint64_t, uint64_t))v113 - 1))(v247, v249);
              v115 += v116;
              if (!--v112)
              {
                swift_bridgeObjectRelease();
                uint64_t v6 = v232;
                uint64_t v57 = v248;
                uint64_t v108 = (uint64_t)v234;
                uint64_t v73 = v242;
                uint64_t v86 = v245;
                goto LABEL_50;
              }
            }
            swift_bridgeObjectRelease();
LABEL_53:
            uint64_t v122 = v247;
            swift_bridgeObjectRelease();
            uint64_t v123 = v242;
            uint64_t v108 = (uint64_t)v234;
            uint64_t v124 = v122;
            uint64_t v125 = v249;
            v242[4]((uint64_t)v234, (char *)v124, v249);
            uint64_t v73 = v123;
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v245)(v108, 0, 1, v125);
            swift_bridgeObjectRelease();
            uint64_t v6 = v232;
            uint64_t v57 = v248;
          }
          else
          {
LABEL_50:
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v86)(v108, 1, 1, v72);
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v86)(v108, 1, 1, v72);
        }
        uint64_t v126 = v230;
        uint64_t v127 = v229;
        sub_1D42A3A74(v108, v229, &qword_1EA6CA288);
        uint64_t v128 = sub_1D44698F8();
        os_log_type_t v129 = sub_1D446A038();
        if (!os_log_type_enabled(v128, v129))
        {
          sub_1D4276C3C(v127, &qword_1EA6CA288);

          goto LABEL_61;
        }
        uint64_t v130 = (uint8_t *)swift_slowAlloc();
        uint64_t v131 = swift_slowAlloc();
        uint64_t v251 = v131;
        *(_DWORD *)uint64_t v130 = 136315138;
        uint64_t v132 = v225;
        sub_1D42A3A74(v127, v225, &qword_1EA6CA288);
        uint64_t v133 = v249;
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v73[6])(v132, 1, v249) == 1)
        {
          sub_1D4276C3C(v132, &qword_1EA6CA288);
        }
        else
        {
          id v134 = (void (**)(uint64_t, uint64_t))v73;
          uint64_t v135 = sub_1D4469218();
          unint64_t v137 = v136;
          v134[1](v132, v133);
          if (v137)
          {
LABEL_60:
            uint64_t v108 = (uint64_t)v234;
            uint64_t v250 = sub_1D42CB9EC(v135, v137, &v251);
            sub_1D446A188();
            swift_bridgeObjectRelease();
            sub_1D4276C3C(v229, &qword_1EA6CA288);
            _os_log_impl(&dword_1D4271000, v128, v129, "FMIPURLHandler: processUniversalURL: parameter action: %s", v130, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1D9447730](v131, -1, -1);
            MEMORY[0x1D9447730](v130, -1, -1);

            uint64_t v73 = v242;
            uint64_t v57 = v248;
            uint64_t v126 = v230;
LABEL_61:
            sub_1D42A3A74(v241, v126, &qword_1EA6CA288);
            uint64_t v138 = sub_1D44698F8();
            os_log_type_t v139 = sub_1D446A038();
            if (!os_log_type_enabled(v138, v139))
            {
              sub_1D4276C3C(v126, &qword_1EA6CA288);

              uint64_t v146 = (uint64_t)v228;
              goto LABEL_68;
            }
            uint64_t v140 = v126;
            uint64_t v141 = (uint8_t *)swift_slowAlloc();
            uint64_t v142 = swift_slowAlloc();
            uint64_t v251 = v142;
            *(_DWORD *)uint64_t v141 = 136315138;
            uint64_t v143 = v140;
            uint64_t v144 = v226;
            sub_1D42A3A74(v143, v226, &qword_1EA6CA288);
            uint64_t v145 = v249;
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v73[6])(v144, 1, v249) == 1)
            {
              sub_1D4276C3C(v144, &qword_1EA6CA288);
            }
            else
            {
              uint64_t v147 = (void (**)(uint64_t, uint64_t))v73;
              uint64_t v148 = sub_1D4469218();
              unint64_t v150 = v149;
              v147[1](v144, v145);
              if (v150)
              {
LABEL_67:
                uint64_t v108 = (uint64_t)v234;
                uint64_t v250 = sub_1D42CB9EC(v148, v150, &v251);
                sub_1D446A188();
                swift_bridgeObjectRelease();
                sub_1D4276C3C(v230, &qword_1EA6CA288);
                _os_log_impl(&dword_1D4271000, v138, v139, "FMIPURLHandler: processUniversalURL: parameter serial: %s", v141, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1D9447730](v142, -1, -1);
                MEMORY[0x1D9447730](v141, -1, -1);

                uint64_t v73 = v242;
                uint64_t v146 = (uint64_t)v228;
                uint64_t v57 = v248;
LABEL_68:
                sub_1D42A3A74(v108, v146, &qword_1EA6CA288);
                uint64_t v151 = v73[6];
                uint64_t v152 = v249;
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v151)(v146, 1, v249) == 1)
                {
                  sub_1D4276C3C(v146, &qword_1EA6CA288);
                  goto LABEL_79;
                }
                uint64_t v153 = (void (**)(uint64_t, uint64_t))v73;
                uint64_t v154 = sub_1D4469218();
                uint64_t v156 = v155;
                v153[1](v146, v152);
                if (v156)
                {
                  if (v154 == 0x7075746573 && v156 == 0xE500000000000000)
                  {
                    swift_bridgeObjectRelease();
LABEL_75:
                    char v158 = sub_1D44698F8();
                    os_log_type_t v159 = sub_1D446A038();
                    if (os_log_type_enabled(v158, v159))
                    {
                      v160 = (uint8_t *)swift_slowAlloc();
                      *(_WORD *)v160 = 0;
                      _os_log_impl(&dword_1D4271000, v158, v159, "FMIPURLHandler: processUniversalURL: action received to setup an item", v160, 2u);
                      MEMORY[0x1D9447730](v160, -1, -1);
                    }

                    uint64_t v161 = v237;
                    v222[v237] = 14;
                    goto LABEL_78;
                  }
                  char v157 = sub_1D446A758();
                  swift_bridgeObjectRelease();
                  if (v157) {
                    goto LABEL_75;
                  }
                }
LABEL_79:
                uint64_t v167 = v227;
                sub_1D42A3A74(v241, v227, &qword_1EA6CA288);
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v151)(v167, 1, v152) == 1)
                {
                  uint64_t v168 = v167;
LABEL_84:
                  sub_1D4276C3C(v168, &qword_1EA6CA288);
                  goto LABEL_85;
                }
                uint64_t v247 = sub_1D4469218();
                uint64_t v170 = v169;
                uint64_t v171 = v242[1];
                ((void (*)(uint64_t, uint64_t))v171)(v167, v152);
                if (!v170)
                {
LABEL_85:
                  uint64_t v173 = sub_1D44698F8();
                  os_log_type_t v174 = sub_1D446A018();
                  if (os_log_type_enabled(v173, v174))
                  {
                    int v175 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)int v175 = 0;
                    _os_log_impl(&dword_1D4271000, v173, v174, "FMIPURLHandler: processUniversalURL: invalid serial number", v175, 2u);
                    MEMORY[0x1D9447730](v175, -1, -1);
                  }

                  uint64_t v176 = sub_1D4469278();
                  unint64_t v178 = v177;
                  uint64_t v179 = v237;
                  sub_1D436E2C0(v237, (uint64_t)v6);
                  uint64_t v180 = *(void (**)(char *, void, uint64_t, uint64_t))(v235 + 56);
                  uint64_t v181 = v243;
                  v180(v6, 0, 1, v243);
                  _s8FMIPCore13FMIPAnalyticsV19sendLaunchAnalytics7context4infoySSSg_AA11FMIPURLInfoVSgtFZ_0(v176, v178, (uint64_t)v6);
                  swift_bridgeObjectRelease();
                  sub_1D4276C3C((uint64_t)v6, &qword_1EA6CA270);
                  sub_1D436E2C0(v179, (uint64_t)v6);
                  v180(v6, 0, 1, v181);
                  sub_1D436E324();
                  uint64_t v182 = (void *)swift_allocError();
                  unsigned char *v183 = 1;
                  v239(v6, v182);

                  goto LABEL_88;
                }
                uint64_t v172 = v224;
                sub_1D42A3A74(v233, v224, &qword_1EA6CA288);
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v151)(v172, 1, v152) == 1)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v168 = v172;
                  goto LABEL_84;
                }
                uint64_t v246 = v170;
                uint64_t v245 = (char *)sub_1D4469218();
                uint64_t v185 = v184;
                ((void (*)(uint64_t, uint64_t))v171)(v172, v152);
                uint64_t v242 = v185;
                if (!v185)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_85;
                }
                uint64_t v186 = v223;
                sub_1D42A3A74(v108, v223, &qword_1EA6CA288);
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v151)(v186, 1, v152) == 1)
                {
                  sub_1D4276C3C(v186, &qword_1EA6CA288);
                  unint64_t v187 = (unint64_t)v246;
                }
                else
                {
                  uint64_t v188 = v186;
                  uint64_t v189 = sub_1D4469218();
                  uint64_t v191 = v190;
                  ((void (*)(uint64_t, uint64_t))v171)(v188, v152);
                  unint64_t v187 = (unint64_t)v246;
                  if (v191)
                  {
                    if (v189 == 0x65766F6D6572 && v191 == 0xE600000000000000)
                    {
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      char v192 = sub_1D446A758();
                      swift_bridgeObjectRelease();
                      if ((v192 & 1) == 0) {
                        goto LABEL_101;
                      }
                    }
                    swift_bridgeObjectRetain_n();
                    uint64_t v193 = sub_1D44698F8();
                    os_log_type_t v194 = sub_1D446A038();
                    if (os_log_type_enabled(v193, v194))
                    {
                      uint64_t v195 = (uint8_t *)swift_slowAlloc();
                      uint64_t v196 = swift_slowAlloc();
                      uint64_t v251 = v196;
                      *(_DWORD *)uint64_t v195 = 136315138;
                      swift_bridgeObjectRetain();
                      uint64_t v197 = v247;
                      uint64_t v250 = sub_1D42CB9EC(v247, v187, &v251);
                      uint64_t v108 = (uint64_t)v234;
                      sub_1D446A188();
                      swift_bridgeObjectRelease_n();
                      _os_log_impl(&dword_1D4271000, v193, v194, "FMIPURLHandler: processUniversalURL: action received to remove %s", v195, 0xCu);
                      swift_arrayDestroy();
                      MEMORY[0x1D9447730](v196, -1, -1);
                      MEMORY[0x1D9447730](v195, -1, -1);

                      unint64_t v198 = v222;
                      os_log_t v199 = v221;
                      uint64_t v200 = v220;
                    }
                    else
                    {

                      swift_bridgeObjectRelease_n();
                      unint64_t v198 = v222;
                      os_log_t v199 = v221;
                      uint64_t v200 = v220;
                      uint64_t v197 = v247;
                    }
                    unint64_t v212 = v187;
                    uint64_t v213 = (char *)v242;
                    uint64_t v179 = v237;
                    v198[v237] = 12;
                    swift_bridgeObjectRelease();
                    uint64_t *v200 = v197;
                    v200[1] = v212;
                    swift_bridgeObjectRelease();
                    *os_log_t v199 = v245;
                    v199[1] = v213;
                    uint64_t v214 = sub_1D4469278();
                    unint64_t v216 = v215;
                    sub_1D436E2C0(v179, (uint64_t)v6);
                    uint64_t v217 = *(void (**)(char *, void, uint64_t, uint64_t))(v235 + 56);
                    uint64_t v218 = v243;
                    v217(v6, 0, 1, v243);
                    _s8FMIPCore13FMIPAnalyticsV19sendLaunchAnalytics7context4infoySSSg_AA11FMIPURLInfoVSgtFZ_0(v214, v216, (uint64_t)v6);
                    swift_bridgeObjectRelease();
                    sub_1D4276C3C((uint64_t)v6, &qword_1EA6CA270);
                    sub_1D436E2C0(v179, (uint64_t)v6);
                    v217(v6, 0, 1, v218);
                    v239(v6, 0);
LABEL_88:
                    sub_1D4276C3C((uint64_t)v6, &qword_1EA6CA270);
                    sub_1D4276C3C(v108, &qword_1EA6CA288);
                    sub_1D4276C3C(v233, &qword_1EA6CA288);
                    sub_1D4276C3C(v241, &qword_1EA6CA288);
                    (*(void (**)(char *, uint64_t))(v231 + 8))(v236, v57);
                    uint64_t v93 = v179;
                    return sub_1D4372578(v93);
                  }
                }
LABEL_101:
                swift_bridgeObjectRetain_n();
                uint64_t v201 = sub_1D44698F8();
                os_log_type_t v202 = sub_1D446A038();
                if (os_log_type_enabled(v201, v202))
                {
                  uint64_t v203 = (uint8_t *)swift_slowAlloc();
                  uint64_t v204 = swift_slowAlloc();
                  uint64_t v251 = v204;
                  *(_DWORD *)uint64_t v203 = 136315138;
                  swift_bridgeObjectRetain();
                  uint64_t v205 = v247;
                  uint64_t v250 = sub_1D42CB9EC(v247, v187, &v251);
                  uint64_t v108 = (uint64_t)v234;
                  sub_1D446A188();
                  swift_bridgeObjectRelease_n();
                  _os_log_impl(&dword_1D4271000, v201, v202, "FMIPURLHandler: processUniversalURL: selecting item for serial %s", v203, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x1D9447730](v204, -1, -1);
                  MEMORY[0x1D9447730](v203, -1, -1);

                  uint64_t v206 = v222;
                  uint64_t v207 = v221;
                  uint64_t v208 = v220;
                }
                else
                {

                  swift_bridgeObjectRelease_n();
                  uint64_t v206 = v222;
                  uint64_t v207 = v221;
                  uint64_t v208 = v220;
                  uint64_t v205 = v247;
                }
                unint64_t v209 = v187;
                uint64_t v210 = (char *)v242;
                uint64_t v211 = v245;
                swift_bridgeObjectRelease();
                *uint64_t v208 = v205;
                v208[1] = v209;
                swift_bridgeObjectRelease();
                *uint64_t v207 = v211;
                v207[1] = v210;
                uint64_t v161 = v237;
                v206[v237] = 7;
LABEL_78:
                uint64_t v162 = sub_1D4469278();
                unint64_t v164 = v163;
                sub_1D436E2C0(v161, (uint64_t)v6);
                char v165 = *(void (**)(char *, void, uint64_t, uint64_t))(v235 + 56);
                uint64_t v166 = v243;
                v165(v6, 0, 1, v243);
                _s8FMIPCore13FMIPAnalyticsV19sendLaunchAnalytics7context4infoySSSg_AA11FMIPURLInfoVSgtFZ_0(v162, v164, (uint64_t)v6);
                swift_bridgeObjectRelease();
                sub_1D4276C3C((uint64_t)v6, &qword_1EA6CA270);
                sub_1D436E2C0(v161, (uint64_t)v6);
                v165(v6, 0, 1, v166);
                v239(v6, 0);
                sub_1D4276C3C((uint64_t)v6, &qword_1EA6CA270);
                sub_1D4276C3C(v108, &qword_1EA6CA288);
                sub_1D4276C3C(v233, &qword_1EA6CA288);
                sub_1D4276C3C(v241, &qword_1EA6CA288);
                (*(void (**)(char *, uint64_t))(v231 + 8))(v236, v57);
                uint64_t v93 = v161;
                return sub_1D4372578(v93);
              }
            }
            uint64_t v148 = 7104878;
            swift_bridgeObjectRelease();
            unint64_t v150 = 0xE300000000000000;
            goto LABEL_67;
          }
        }
        uint64_t v135 = 7104878;
        swift_bridgeObjectRelease();
        unint64_t v137 = 0xE300000000000000;
        goto LABEL_60;
      }
LABEL_37:
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v86)(v233, 1, 1, v72);
      swift_bridgeObjectRelease();
    }
    else
    {
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v86)(v233, 1, 1, v72);
    }
    uint64_t v108 = (uint64_t)v234;
    goto LABEL_42;
  }
  sub_1D4276C3C((uint64_t)v37, &qword_1EBD7E918);
  uint64_t v58 = sub_1D44698F8();
  os_log_type_t v59 = sub_1D446A018();
  if (os_log_type_enabled(v58, v59))
  {
    os_log_t v60 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_t v60 = 0;
    _os_log_impl(&dword_1D4271000, v58, v59, "FMIPURLHandler: processUniversalURL: Invalid Universal URL", v60, 2u);
    MEMORY[0x1D9447730](v60, -1, -1);
  }

  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v235 + 56))(v6, 1, 1, v243);
  sub_1D436E324();
  uint64_t v61 = (void *)swift_allocError();
  unsigned char *v62 = 2;
  v239(v6, v61);

  return sub_1D4276C3C((uint64_t)v6, &qword_1EA6CA270);
}

uint64_t sub_1D4372578(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPURLInfo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D43725D4()
{
  unint64_t result = qword_1EA6CA290;
  if (!qword_1EA6CA290)
  {
    sub_1D44692A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA290);
  }
  return result;
}

uint64_t sub_1D437262C()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D4372674(uint64_t a1, void *a2)
{
  return sub_1D436FE00(a1, a2, *(void (**)(char *, void *))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1D4372680()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D43726B8(uint64_t a1, void *a2)
{
  return sub_1D436DA0C(a1, a2, *(void (**)(char *, void *))(v2 + 16), *(void *)(v2 + 24));
}

unsigned char *storeEnumTagSinglePayload for FMIPURLHandlerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D437278CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPURLHandlerError()
{
  return &type metadata for FMIPURLHandlerError;
}

unint64_t sub_1D43727C8()
{
  unint64_t result = qword_1EA6CA2A0;
  if (!qword_1EA6CA2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA2A0);
  }
  return result;
}

unint64_t sub_1D4372820(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EA6CA270);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMIPURLInfo();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = sub_1D4274BFC(MEMORY[0x1E4FBC860]);
  sub_1D4372FA8(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1D4373010((uint64_t)v4);
  }
  else
  {
    sub_1D4373378((uint64_t)v4, (uint64_t)v8);
    id v10 = objc_allocWithZone(NSString);
    swift_bridgeObjectRetain();
    uint64_t v11 = (void *)sub_1D4469B08();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v10, sel_initWithString_, v11);

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = v9;
    sub_1D4299B3C((uint64_t)v12, 0x747865746E6F63, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
    unint64_t v9 = v24;
    swift_bridgeObjectRelease();
    if (v8[*(int *)(v5 + 20)] != 17)
    {
      LOBYTE(v24) = v8[*(int *)(v5 + 20)];
      FMIPURLAction.rawValue.getter();
      id v14 = objc_allocWithZone(NSString);
      uint64_t v15 = (void *)sub_1D4469B08();
      swift_bridgeObjectRelease();
      id v16 = objc_msgSend(v14, sel_initWithString_, v15);

      char v17 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v24 = v9;
      sub_1D4299B3C((uint64_t)v16, 0x6E6F69746361, 0xE600000000000000, v17);
      unint64_t v9 = v24;
      swift_bridgeObjectRelease();
    }
    if (*(void *)&v8[*(int *)(v5 + 40) + 8])
    {
      id v18 = objc_allocWithZone(NSString);
      swift_bridgeObjectRetain();
      uint64_t v19 = (void *)sub_1D4469B08();
      swift_bridgeObjectRelease();
      id v20 = objc_msgSend(v18, sel_initWithString_, v19);

      char v21 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v24 = v9;
      sub_1D4299B3C((uint64_t)v20, 0x74636166756E616DLL, 0xEC00000072657275, v21);
      unint64_t v9 = v24;
      swift_bridgeObjectRelease();
    }
    sub_1D4372578((uint64_t)v8);
  }
  return v9;
}

void _s8FMIPCore13FMIPAnalyticsV19sendLaunchAnalytics7context4infoySSSg_AA11FMIPURLInfoVSgtFZ_0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D42D5DA0(&qword_1EA6CA270);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v6 - 8);
  id v10 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v32 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v32 - v14;
  if (a2)
  {
    uint64_t v16 = qword_1EBD80068;
    swift_bridgeObjectRetain();
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1D4469928();
    sub_1D42D7FAC(v17, (uint64_t)qword_1EBD83228);
    sub_1D4372FA8(a3, (uint64_t)v15);
    swift_bridgeObjectRetain_n();
    id v18 = sub_1D44698F8();
    os_log_type_t v19 = sub_1D446A038();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v36 = a1;
    if (!v20)
    {
      swift_bridgeObjectRelease_n();
      sub_1D4373010((uint64_t)v15);

LABEL_11:
      uint64_t v27 = (void *)sub_1D4469B08();
      sub_1D4372FA8(a3, (uint64_t)v10);
      unint64_t v28 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v29 = swift_allocObject();
      sub_1D437327C((uint64_t)v10, v29 + v28);
      uint64_t v30 = (uint64_t *)(v29 + ((v8 + v28 + 7) & 0xFFFFFFFFFFFFFFF8));
      *uint64_t v30 = v36;
      v30[1] = a2;
      aBlock[4] = (uint64_t)sub_1D43732E4;
      aBlock[5] = v29;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      uint64_t aBlock[2] = (uint64_t)sub_1D4356EBC;
      uint64_t aBlock[3] = (uint64_t)&unk_1F2C0A9C8;
      uint64_t v31 = _Block_copy(aBlock);
      swift_release();
      AnalyticsSendEventLazy();
      _Block_release(v31);

      return;
    }
    uint64_t v34 = v7;
    uint64_t v35 = a3;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    aBlock[0] = v33;
    *(_DWORD *)uint64_t v21 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1D42CB9EC(a1, a2, aBlock);
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2080;
    sub_1D4372FA8((uint64_t)v15, (uint64_t)v13);
    uint64_t v22 = type metadata accessor for FMIPURLInfo();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v13, 1, v22) == 1)
    {
      sub_1D4373010((uint64_t)v13);
    }
    else
    {
      uint64_t v23 = (uint64_t *)&v13[*(int *)(v22 + 36)];
      uint64_t v24 = *v23;
      unint64_t v25 = v23[1];
      swift_bridgeObjectRetain();
      sub_1D4372578((uint64_t)v13);
      if (v25)
      {
LABEL_10:
        uint64_t v37 = sub_1D42CB9EC(v24, v25, aBlock);
        sub_1D446A188();
        swift_bridgeObjectRelease();
        sub_1D4373010((uint64_t)v15);
        _os_log_impl(&dword_1D4271000, v18, v19, "FMIPAnalytics: sendLaunchEvent (%s, returnAppName: %s", (uint8_t *)v21, 0x16u);
        uint64_t v26 = v33;
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v26, -1, -1);
        MEMORY[0x1D9447730](v21, -1, -1);

        uint64_t v7 = v34;
        a3 = v35;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v25 = 0xE300000000000000;
    uint64_t v24 = 7104878;
    goto LABEL_10;
  }
}

uint64_t sub_1D4372FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6CA270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4373010(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EA6CA270);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D4373070()
{
  uint64_t v1 = *(void *)(sub_1D42D5DA0(&qword_1EA6CA270) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = type metadata accessor for FMIPURLInfo();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v3, 1, v5))
  {
    uint64_t v6 = sub_1D4469498();
    uint64_t v7 = *(void *)(v6 - 8);
    id v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v10(v0 + v3, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v0 + v3 + *(int *)(v5 + 32);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6)) {
      v10(v8, v6);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_1D437327C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6CA270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D43732E4()
{
  uint64_t v1 = *(void *)(sub_1D42D5DA0(&qword_1EA6CA270) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1D4372820(v2);
}

uint64_t sub_1D4373378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPURLInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D43733DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4469E88();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1D4469E78();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1D4276C3C(a1, (uint64_t *)&unk_1EBD7E7F8);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D4469E58();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1D4373588(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_1D4275AD0(0, &qword_1EA6C9340);
  sub_1D42B2630((unint64_t *)&unk_1EA6C9348, &qword_1EA6C9340);
  **(void **)(*(void *)(v1 + 64) + 40) = sub_1D4469ED8();
  return MEMORY[0x1F41881F8](v1);
}

uint64_t sub_1D4373634(uint64_t a1)
{
  uint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = *(void **)(*(void *)(a1 + 56) + 24 * i + 8);
    type metadata accessor for FMLocationShiftingRequest();
    id v18 = (void *)swift_allocObject();
    void v18[2] = v17;
    v18[3] = v16;
    v18[4] = v15;
    swift_bridgeObjectRetain();
    MEMORY[0x1D94460A0](v17);
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1D4469DB8();
    }
    sub_1D4469E08();
    uint64_t result = sub_1D4469D98();
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v6) {
      goto LABEL_25;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v6) {
        goto LABEL_25;
      }
      unint64_t v12 = *(void *)(v2 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v6) {
          goto LABEL_25;
        }
        unint64_t v12 = *(void *)(v2 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v6) {
            goto LABEL_25;
          }
          unint64_t v12 = *(void *)(v2 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_25:
    swift_release();
    return v19;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_25;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_1D4373830(uint64_t a1)
{
  uint64_t v3 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v27 = (char *)v23 - v11;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return MEMORY[0x1E4FBC860];
  }
  v23[2] = v1;
  int64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v26 = v10;
  uint64_t v14 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  swift_bridgeObjectRetain();
  v23[1] = a1;
  uint64_t v15 = a1 + 40;
  unint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v24 = v13;
  unint64_t v25 = v9;
  do
  {
    swift_bridgeObjectRetain();
    sub_1D4469628();
    swift_bridgeObjectRelease();
    if ((*v13)(v5, 1, v6) == 1)
    {
      sub_1D4276C3C((uint64_t)v5, (uint64_t *)&unk_1EBD7E930);
    }
    else
    {
      uint64_t v17 = *v14;
      id v18 = v27;
      (*v14)(v27, v5, v6);
      v17(v9, v18, v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v16 = sub_1D43B00D4(0, *(void *)(v16 + 16) + 1, 1, v16);
      }
      unint64_t v20 = *(void *)(v16 + 16);
      unint64_t v19 = *(void *)(v16 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v16 = sub_1D43B00D4(v19 > 1, v20 + 1, 1, v16);
      }
      *(void *)(v16 + 16) = v20 + 1;
      unint64_t v21 = v16
          + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))
          + *(void *)(v26 + 72) * v20;
      unint64_t v9 = v25;
      v17((char *)v21, v25, v6);
      int64_t v13 = v24;
    }
    v15 += 16;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v16;
}

void *sub_1D4373AF0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  uint64_t v6 = (uint64_t *)(v4 + a1 + 24);
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v9 = *v6;
    if (*v6)
    {
      uint64_t v10 = *(v6 - 1);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_1D43B0268(0, v7[2] + 1, 1, v7);
      }
      unint64_t v12 = v7[2];
      unint64_t v11 = v7[3];
      if (v12 >= v11 >> 1) {
        uint64_t v7 = sub_1D43B0268((void *)(v11 > 1), v12 + 1, 1, v7);
      }
      v7[2] = v12 + 1;
      uint64_t v8 = &v7[2 * v12];
      v8[4] = v10;
      v8[5] = v9;
    }
    uint64_t v6 = (uint64_t *)((char *)v6 + v5);
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1D4373C50(uint64_t a1)
{
  uint64_t v1 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v2 = -1;
  if (v1 < 64) {
    uint64_t v2 = ~(-1 << v1);
  }
  unint64_t v3 = v2 & *(void *)(a1 + 64);
  int64_t v24 = (unint64_t)(v1 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v5 = 0;
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  if (!v3) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v7 = __clz(__rbit64(v3));
  v3 &= v3 - 1;
  int64_t v26 = v5;
  for (unint64_t i = v7 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v10)) + (v11 << 6))
  {
    uint64_t v13 = *(void *)(a1 + 56) + 24 * i;
    char v14 = *(unsigned char *)v13;
    char v15 = *(unsigned char *)(v13 + 1);
    char v16 = *(unsigned char *)(v13 + 2);
    char v17 = *(unsigned char *)(v13 + 3);
    uint64_t v18 = *(void *)(v13 + 16);
    id v19 = *(id *)(v13 + 8);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1D43AFC34(0, v6[2] + 1, 1, v6);
      uint64_t v6 = (void *)result;
    }
    unint64_t v21 = v6[2];
    unint64_t v20 = v6[3];
    if (v21 >= v20 >> 1)
    {
      uint64_t result = (uint64_t)sub_1D43AFC34((void *)(v20 > 1), v21 + 1, 1, v6);
      uint64_t v6 = (void *)result;
    }
    v6[2] = v21 + 1;
    uint64_t v22 = &v6[3 * v21];
    *((unsigned char *)v22 + 32) = v14;
    *((unsigned char *)v22 + 33) = v15;
    *((unsigned char *)v22 + 34) = v16;
    *((unsigned char *)v22 + 35) = v17;
    v22[5] = v19;
    v22[6] = v18;
    int64_t v5 = v26;
    if (v3) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v9 >= v24) {
      goto LABEL_27;
    }
    unint64_t v10 = *(void *)(v23 + 8 * v9);
    int64_t v11 = v5 + 1;
    if (!v10)
    {
      int64_t v11 = v5 + 2;
      if (v5 + 2 >= v24) {
        goto LABEL_27;
      }
      unint64_t v10 = *(void *)(v23 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v5 + 3;
        if (v5 + 3 >= v24) {
          goto LABEL_27;
        }
        unint64_t v10 = *(void *)(v23 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v5 + 4;
          if (v5 + 4 >= v24) {
            goto LABEL_27;
          }
          unint64_t v10 = *(void *)(v23 + 8 * v11);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v3 = (v10 - 1) & v10;
    int64_t v26 = v11;
  }
  uint64_t v12 = v5 + 5;
  if (v5 + 5 >= v24)
  {
LABEL_27:
    swift_release();
    return (uint64_t)v6;
  }
  unint64_t v10 = *(void *)(v23 + 8 * v12);
  if (v10)
  {
    int64_t v11 = v5 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_27;
    }
    unint64_t v10 = *(void *)(v23 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1D4373EB0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1D4337070(0, v1, 0);
    uint64_t v2 = v13;
    uint64_t v4 = *(void *)(type metadata accessor for FMIPItem() - 8);
    uint64_t v5 = *(void *)(v4 + 72);
    uint64_t v6 = (uint64_t *)(((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
                   + a1
                   + 360);
    do
    {
      uint64_t v8 = *(v6 - 1);
      uint64_t v7 = *v6;
      unint64_t v10 = *(void *)(v13 + 16);
      unint64_t v9 = *(void *)(v13 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1) {
        sub_1D4337070(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v13 + 16) = v10 + 1;
      uint64_t v11 = v13 + 16 * v10;
      *(void *)(v11 + 32) = v8;
      *(void *)(v11 + 40) = v7;
      uint64_t v6 = (uint64_t *)((char *)v6 + v5);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1D4373FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void (**)(char *))(a1 + 32);
  if (a2)
  {
    sub_1D4469468();
    uint64_t v8 = sub_1D4469498();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
  }
  else
  {
    uint64_t v9 = sub_1D4469498();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  }
  swift_retain();
  v7(v6);
  swift_release();
  return sub_1D4276C3C((uint64_t)v6, &qword_1EBD7E918);
}

void sub_1D437410C(uint64_t a1, void *a2)
{
}

unint64_t FMIPCorePreferenceDomain.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_1D4374130()
{
  uint64_t v0 = sub_1D4354688((uint64_t)&unk_1F2C02048);
  uint64_t result = swift_arrayDestroy();
  qword_1EA6CA2A8 = v0;
  return result;
}

uint64_t FMIPBundleIdsAllowedToUseCache.getter()
{
  if (qword_1EA6C8F80 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

void sub_1D43741D8(uint64_t a1)
{
}

uint64_t FMIPShowLocationSource.getter()
{
  return sub_1D42E6A04(&qword_1EA6C8F88, (unsigned __int8 *)&unk_1EA6CA2B0);
}

uint64_t FMIPShowCrowdSourcedLocationOnly.getter()
{
  return sub_1D42E6A04(&qword_1EA6C8F90, (unsigned __int8 *)&byte_1EA6CA2B1);
}

uint64_t FMIPDemoModeEnabled.getter()
{
  return sub_1D42E6A04(&qword_1EA6C8F98, (unsigned __int8 *)&byte_1EA6CA2B2);
}

double FMIPNotifyWhenFoundAgeThresholdInSeconds.getter()
{
  return 180.0;
}

double FMIPOldLocationAgeThresholdInSeconds.getter()
{
  return 900.0;
}

double FMIPRealtimeLocationThresholdInSeconds.getter()
{
  return 15.0;
}

double FMIPOnlineLocationAgeThresholdInSeconds.getter()
{
  return 180.0;
}

uint64_t FMIPContentObservation.rawValue.getter()
{
  return *v0;
}

uint64_t FMIPContentObservation.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static FMIPContentObservation.devices.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

void static FMIPContentObservation.items.getter(_DWORD *a1@<X8>)
{
  *a1 = 2;
}

void sub_1D43742C8()
{
  int v0 = unk_1F2C01154;
  if ((unk_1F2C01154 & ~dword_1F2C01150) == 0) {
    int v0 = 0;
  }
  dword_1EA6CA2B4 = v0 | dword_1F2C01150;
}

uint64_t static FMIPContentObservation.all.getter@<X0>(_DWORD *a1@<X8>)
{
  if (qword_1EA6C8FA0 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = dword_1EA6CA2B4;
  return result;
}

unint64_t FMIPContentObservation.description.getter()
{
  int v1 = *v0;
  if (qword_1EA6C8FA0 != -1) {
    swift_once();
  }
  unint64_t v2 = 0xD000000000000019;
  if (v1 == 2) {
    unint64_t v2 = 0xD000000000000017;
  }
  if (v1 == dword_1EA6CA2B4) {
    return 0xD000000000000015;
  }
  else {
    return v2;
  }
}

void sub_1D4374414()
{
  int v0 = (void *)sub_1D4469B08();
  char v1 = MGGetBoolAnswer();

  byte_1EA6CA2B8 = v1;
}

uint64_t FMIPManager.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_identifier;
  uint64_t v4 = sub_1D4469688();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FMIPManager.delegate.getter()
{
  return sub_1D4374680(&OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate);
}

uint64_t sub_1D43744E4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRetain();
  FMIPManager.initialize()();
  return swift_unknownObjectRelease();
}

void (*FMIPManager.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1D9447840](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1D43745E4;
}

void sub_1D43745E4(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
    FMIPManager.initialize()();
  }
  free(v3);
}

uint64_t FMIPManager.siriDelegate.getter()
{
  return sub_1D4374680(&OBJC_IVAR____TtC8FMIPCore11FMIPManager_siriDelegate);
}

uint64_t sub_1D4374680(void *a1)
{
  uint64_t v2 = v1 + *a1;
  swift_beginAccess();
  return MEMORY[0x1D9447840](v2);
}

uint64_t FMIPManager.siriDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_siriDelegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*FMIPManager.siriDelegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_siriDelegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1D9447840](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1D43747C0;
}

void sub_1D43747C0(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t FMIPManager.isUTAppAlertDisabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isUTAppAlertDisabled);
  swift_beginAccess();
  return *v1;
}

uint64_t FMIPManager.isUTAppAlertDisabled.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isUTAppAlertDisabled);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*FMIPManager.isUTAppAlertDisabled.modify())()
{
  return j__swift_endAccess;
}

uint64_t FMIPManager.owner.getter()
{
  return sub_1D446A0A8();
}

uint64_t sub_1D43749AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager);
  uint64_t v3 = v2[11];
  uint64_t v4 = v2[12];
  uint64_t v5 = v2[13];
  uint64_t v6 = v2[14];
  uint64_t v7 = v2[15];
  uint64_t v8 = v2[16];
  uint64_t v9 = v2[17];
  uint64_t v10 = v2[18];
  uint64_t v11 = v2[19];
  uint64_t v12 = v2[20];
  uint64_t v13 = v2[21];
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  a2[4] = v7;
  a2[5] = v8;
  a2[6] = v9;
  a2[7] = v10;
  a2[8] = v11;
  a2[9] = v12;
  a2[10] = v13;
  return sub_1D438BD50(v3, v4);
}

uint64_t FMIPManager.familyMembers.getter()
{
  return sub_1D427931C(&qword_1EA6CA5B0);
}

uint64_t FMIPManager.itemGroups.getter()
{
  return sub_1D427931C(&qword_1EA6CA4F0);
}

uint64_t FMIPManager.unknownItems.getter()
{
  return sub_1D427931C(&qword_1EA6CA2C8);
}

void FMIPManager.utAlertState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconRefreshingController)
                 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_utAlertState);
}

void FMIPManager.separationMonitoringState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconRefreshingController)
                 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_separationMonitoringState);
}

uint64_t FMIPManager.safeLocations.getter()
{
  return sub_1D427931C(&qword_1EA6CA3F0);
}

uint64_t FMIPManager.shares.getter()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1D4374B08, 0, 0);
}

uint64_t sub_1D4374B08()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconSharingController);
  *(void *)(v0 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1D4374B34, v1, 0);
}

uint64_t sub_1D4374B34()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24) + 144);
  swift_bridgeObjectRetain();
  return MEMORY[0x1F4188298](sub_1D4374BA8, 0, 0);
}

uint64_t sub_1D4374BA8()
{
  size_t v1 = sub_1D4385FAC(*(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(size_t))(v0 + 8);
  return v2(v1);
}

void FMIPManager.rangingParameters.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_refreshingController);
  if (v2) {
    uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_rangingParameters);
  }
  else {
    uint64_t v3 = 0;
  }
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v2 == 0;
}

uint64_t FMIPManager.selectedDevice.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_selectedDevice;
  swift_beginAccess();
  return sub_1D42A3A74(v3, a1, &qword_1EBD7CBC0);
}

uint64_t sub_1D4374CB4(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7CBC0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42A3A74(a1, (uint64_t)v4, &qword_1EBD7CBC0);
  return FMIPManager.selectedDevice.setter((uint64_t)v4);
}

void (*FMIPManager.selectedDevice.modify(void *a1))(void *a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[6] = v1;
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7CBC0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v6 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_selectedDevice;
  v3[7] = v5;
  v3[8] = v6;
  swift_beginAccess();
  return sub_1D4374DEC;
}

void sub_1D4374DEC(void *a1, char a2)
{
  uint64_t v3 = (void *)*a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[6];
    uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_refreshingController);
    if (v5)
    {
      uint64_t v6 = v3[7];
      sub_1D42A3A74(v4 + v3[8], v6, &qword_1EBD7CBC0);
      uint64_t v7 = v5 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_selectedDevice;
      swift_beginAccess();
      swift_retain();
      sub_1D42E8000(v6, v7, &qword_1EBD7CBC0);
      swift_endAccess();
      swift_release();
    }
  }
  free((void *)v3[7]);
  free(v3);
}

uint64_t sub_1D4374EC8()
{
  uint64_t v135 = type metadata accessor for FMIPProductType();
  uint64_t v1 = MEMORY[0x1F4188790](v135);
  uint64_t v3 = (char *)&v117 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x1F4188790](v1);
  id v134 = (char *)&v117 - v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v117 - v6;
  uint64_t v136 = type metadata accessor for FMIPItem();
  uint64_t v8 = *(void *)(v136 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v136);
  uint64_t v11 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v132 = (uint64_t)&v117 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v120 = (uint64_t)&v117 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v124 = (uint64_t)&v117 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v126 = (uint64_t)&v117 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v121 = (uint64_t)&v117 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  uint64_t v128 = (uint64_t)&v117 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  os_log_type_t v129 = (char *)&v117 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v131 = (uint64_t)&v117 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v117 - v31;
  uint64_t result = MEMORY[0x1F4188790](v30);
  uint64_t v37 = (char *)&v117 - v36;
  uint64_t v118 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemCounts;
  uint64_t v119 = v0;
  uint64_t v38 = *(void *)(v0 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemCounts);
  if (!v38)
  {
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    uint64_t v54 = 0;
    uint64_t v55 = v119;
    goto LABEL_92;
  }
  uint64_t v127 = v35;
  uint64_t v122 = v34;
  uint64_t v39 = MEMORY[0x1E4FBC860];
  uint64_t v137 = MEMORY[0x1E4FBC860];
  uint64_t v40 = *(void *)(v38 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v123 = v11;
  uint64_t v130 = v8;
  uint64_t v125 = v3;
  uint64_t v133 = v40;
  if (!v40)
  {
    uint64_t v51 = v39;
    uint64_t v42 = (uint64_t)v134;
LABEL_24:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v55 = v119;
    uint64_t v56 = *(void *)(v119 + v118);
    uint64_t v57 = v126;
    if (v56)
    {
      uint64_t v131 = v51;
      uint64_t v137 = v39;
      uint64_t v58 = *(void *)(v56 + 16);
      uint64_t result = swift_bridgeObjectRetain();
      if (v58)
      {
        unint64_t v59 = 0;
        uint64_t v133 = MEMORY[0x1E4FBC860];
        uint64_t v60 = v136;
        uint64_t v61 = (uint64_t)v129;
        while (1)
        {
          if (v59 >= *(void *)(v56 + 16)) {
            goto LABEL_96;
          }
          unint64_t v66 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
          uint64_t v67 = *(void *)(v8 + 72);
          sub_1D42CA6F0(v56 + v66 + v67 * v59, v61, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          sub_1D42CA6F0(v61 + *(int *)(v60 + 96), v42, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
          if (swift_getEnumCaseMultiPayload() != 2) {
            break;
          }
          sub_1D4276C3C(v42, &qword_1EA6C97A0);
          uint64_t v68 = v61;
          uint64_t v69 = v58;
          uint64_t v70 = v61;
          uint64_t v71 = v128;
          sub_1D42CA6F0(v68, v128, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          char v72 = *(unsigned char *)(v71 + *(int *)(v60 + 88));
          sub_1D42CA8E8(v71, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          uint64_t v73 = v70;
          uint64_t v58 = v69;
          uint64_t v65 = v127;
          sub_1D42CA6F0(v73, v127, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          if (v72) {
            goto LABEL_28;
          }
          uint64_t v60 = v136;
          char v74 = (void *)(v65 + *(int *)(v136 + 60));
          if (*v74 == 0x6F6C4072656E776FLL && v74[1] == 0xEF74736F686C6163)
          {
            sub_1D42CA8E8(v65, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            uint64_t v61 = (uint64_t)v129;
LABEL_41:
            sub_1D42CAAD0(v61, v121, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            uint64_t v77 = v133;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_1D4337258(0, *(void *)(v77 + 16) + 1, 1);
            }
            uint64_t v78 = v137;
            unint64_t v80 = *(void *)(v137 + 16);
            unint64_t v79 = *(void *)(v137 + 24);
            if (v80 >= v79 >> 1)
            {
              sub_1D4337258(v79 > 1, v80 + 1, 1);
              uint64_t v78 = v137;
            }
            *(void *)(v78 + 16) = v80 + 1;
            uint64_t v133 = v78;
            uint64_t result = sub_1D42CAAD0(v121, v78 + v66 + v80 * v67, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            uint64_t v60 = v136;
            goto LABEL_30;
          }
          char v76 = sub_1D446A758();
          sub_1D42CA8E8(v65, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          uint64_t v61 = (uint64_t)v129;
          if (v76) {
            goto LABEL_41;
          }
LABEL_29:
          uint64_t result = sub_1D42CA8E8(v61, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_30:
          ++v59;
          uint64_t v42 = (uint64_t)v134;
          if (v58 == v59)
          {
            char v81 = (char *)v137;
            uint64_t v55 = v119;
            uint64_t v57 = v126;
            uint64_t v39 = MEMORY[0x1E4FBC860];
            goto LABEL_50;
          }
        }
        sub_1D42CA8E8(v42, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
        uint64_t v62 = v61;
        uint64_t v63 = v61;
        uint64_t v64 = v128;
        sub_1D42CA6F0(v62, v128, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        sub_1D42CA8E8(v64, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v65 = v127;
        sub_1D42CA6F0(v63, v127, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_28:
        sub_1D42CA8E8(v65, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v60 = v136;
        uint64_t v61 = (uint64_t)v129;
        goto LABEL_29;
      }
      char v81 = (char *)v39;
LABEL_50:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v82 = *(void *)(v55 + v118);
      uint64_t v83 = (uint64_t)v125;
      if (v82)
      {
        id v134 = v81;
        uint64_t v137 = v39;
        uint64_t v84 = *(void *)(v82 + 16);
        uint64_t result = swift_bridgeObjectRetain();
        if (v84)
        {
          unint64_t v85 = 0;
          uint64_t v86 = v136;
          while (1)
          {
            if (v85 >= *(void *)(v82 + 16)) {
              goto LABEL_97;
            }
            unint64_t v91 = (*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
            uint64_t v92 = *(void *)(v130 + 72);
            sub_1D42CA6F0(v82 + v91 + v92 * v85, v57, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            sub_1D42CA6F0(v57 + *(int *)(v86 + 96), v83, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
            if (swift_getEnumCaseMultiPayload() != 2) {
              break;
            }
            sub_1D4276C3C(v83, &qword_1EA6C97A0);
            uint64_t v93 = v57;
            uint64_t v94 = v57;
            uint64_t v95 = v124;
            sub_1D42CA6F0(v93, v124, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            char v96 = *(unsigned char *)(v95 + *(int *)(v86 + 88));
            sub_1D42CA8E8(v95, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            uint64_t v90 = v122;
            sub_1D42CA6F0(v94, v122, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            if ((v96 & 1) == 0) {
              goto LABEL_54;
            }
            uint64_t v86 = v136;
            uint64_t v97 = (void *)(v90 + *(int *)(v136 + 60));
            if (*v97 == 0x6F6C4072656E776FLL && v97[1] == 0xEF74736F686C6163)
            {
              sub_1D42CA8E8(v90, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_67:
              uint64_t v57 = v126;
              sub_1D42CAAD0(v126, v120, (uint64_t (*)(void))type metadata accessor for FMIPItem);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                sub_1D4337258(0, *(void *)(v39 + 16) + 1, 1);
              }
              uint64_t v39 = v137;
              unint64_t v101 = *(void *)(v137 + 16);
              unint64_t v100 = *(void *)(v137 + 24);
              if (v101 >= v100 >> 1)
              {
                sub_1D4337258(v100 > 1, v101 + 1, 1);
                uint64_t v39 = v137;
              }
              *(void *)(v39 + 16) = v101 + 1;
              uint64_t result = sub_1D42CAAD0(v120, v39 + v91 + v101 * v92, (uint64_t (*)(void))type metadata accessor for FMIPItem);
              uint64_t v86 = v136;
              goto LABEL_56;
            }
            char v99 = sub_1D446A758();
            sub_1D42CA8E8(v90, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            if (v99) {
              goto LABEL_67;
            }
LABEL_55:
            uint64_t v57 = v126;
            uint64_t result = sub_1D42CA8E8(v126, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_56:
            ++v85;
            uint64_t v83 = (uint64_t)v125;
            if (v84 == v85)
            {
              uint64_t v102 = v137;
              uint64_t v39 = MEMORY[0x1E4FBC860];
              goto LABEL_78;
            }
          }
          sub_1D42CA8E8(v83, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
          uint64_t v87 = v57;
          uint64_t v88 = v57;
          uint64_t v89 = v124;
          sub_1D42CA6F0(v87, v124, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          sub_1D42CA8E8(v89, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          uint64_t v90 = v122;
          sub_1D42CA6F0(v88, v122, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_54:
          sub_1D42CA8E8(v90, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          uint64_t v86 = v136;
          goto LABEL_55;
        }
        uint64_t v102 = v39;
LABEL_78:
        swift_bridgeObjectRelease();
        int64_t v103 = *(void *)(v102 + 16);
        uint64_t v104 = (uint64_t)v123;
        if (v103)
        {
          uint64_t v137 = v39;
          sub_1D4337070(0, v103, 0);
          uint64_t v105 = v102 + ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80));
          uint64_t v106 = *(void *)(v130 + 72);
          do
          {
            uint64_t v107 = v132;
            sub_1D42CA6F0(v105, v132, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            uint64_t v109 = *(void *)(v107 + 336);
            uint64_t v108 = *(void *)(v107 + 344);
            sub_1D42CA6F0(v107, v104, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            if (v108)
            {
              uint64_t v110 = v108;
            }
            else
            {
              uint64_t v109 = *(void *)(v104 + 352);
              uint64_t v110 = *(void *)(v104 + 360);
              swift_bridgeObjectRetain();
            }
            swift_bridgeObjectRetain();
            sub_1D42CA8E8(v104, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            sub_1D42CA8E8(v132, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            uint64_t v111 = v137;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1D4337070(0, *(void *)(v111 + 16) + 1, 1);
              uint64_t v111 = v137;
            }
            unint64_t v113 = *(void *)(v111 + 16);
            unint64_t v112 = *(void *)(v111 + 24);
            if (v113 >= v112 >> 1)
            {
              sub_1D4337070(v112 > 1, v113 + 1, 1);
              uint64_t v111 = v137;
            }
            *(void *)(v111 + 16) = v113 + 1;
            unint64_t v114 = v111 + 16 * v113;
            *(void *)(v114 + 32) = v109;
            *(void *)(v114 + 40) = v110;
            v105 += v106;
            --v103;
            uint64_t v104 = (uint64_t)v123;
          }
          while (v103);
        }
        swift_release();
        uint64_t v82 = sub_1D4469D48();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v55 = v119;
        uint64_t v51 = v131;
        char v81 = v134;
        if (v131)
        {
LABEL_89:
          uint64_t v53 = *(void *)(v51 + 16);
          uint64_t result = swift_bridgeObjectRelease();
          if (v81)
          {
LABEL_90:
            uint64_t v52 = *((void *)v81 + 2);
            uint64_t result = swift_bridgeObjectRelease();
            if (v82) {
              goto LABEL_91;
            }
            goto LABEL_76;
          }
LABEL_75:
          uint64_t v52 = 0;
          if (v82)
          {
LABEL_91:
            uint64_t v54 = *(void *)(v82 + 16);
            uint64_t result = swift_bridgeObjectRelease();
LABEL_92:
            uint64_t v115 = *(void *)(v55 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_refreshingController);
            if (v115)
            {
              uint64_t v116 = v115 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_itemCounts;
              *(void *)uint64_t v116 = v53;
              *(void *)(v116 + 8) = 0;
              *(void *)(v116 + 16) = v52;
              *(void *)(v116 + 24) = 0;
              *(void *)(v116 + 32) = v54;
              *(void *)(v116 + 40) = 0;
              *(unsigned char *)(v116 + 48) = 0;
            }
            return result;
          }
LABEL_76:
          uint64_t v54 = 0;
          goto LABEL_92;
        }
      }
      else
      {
        uint64_t v51 = v131;
        if (v131) {
          goto LABEL_89;
        }
      }
    }
    else
    {
      char v81 = 0;
      uint64_t v82 = 0;
      if (v51) {
        goto LABEL_89;
      }
    }
    uint64_t v53 = 0;
    if (v81) {
      goto LABEL_90;
    }
    goto LABEL_75;
  }
  unint64_t v41 = 0;
  while (v41 < *(void *)(v38 + 16))
  {
    unint64_t v43 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v44 = *(void *)(v8 + 72);
    sub_1D42CA6F0(v38 + v43 + v44 * v41, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v45 = v136;
    sub_1D42CA6F0((uint64_t)&v37[*(int *)(v136 + 96)], (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
    if (swift_getEnumCaseMultiPayload() >= 2)
    {
      sub_1D4276C3C((uint64_t)v7, &qword_1EA6C97A0);
      sub_1D42CA6F0((uint64_t)v37, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      sub_1D42CA8E8((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    }
    else
    {
      sub_1D42CA8E8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
      sub_1D42CA6F0((uint64_t)v37, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v46 = &v32[*(int *)(v45 + 60)];
      if (*(void *)v46 == 0x6F6C4072656E776FLL && *((void *)v46 + 1) == 0xEF74736F686C6163)
      {
        sub_1D42CA8E8((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_16:
        sub_1D42CAAD0((uint64_t)v37, v131, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1D4337258(0, *(void *)(v39 + 16) + 1, 1);
        }
        uint64_t v39 = v137;
        unint64_t v50 = *(void *)(v137 + 16);
        unint64_t v49 = *(void *)(v137 + 24);
        if (v50 >= v49 >> 1)
        {
          sub_1D4337258(v49 > 1, v50 + 1, 1);
          uint64_t v39 = v137;
        }
        *(void *)(v39 + 16) = v50 + 1;
        uint64_t result = sub_1D42CAAD0(v131, v39 + v43 + v50 * v44, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v8 = v130;
        goto LABEL_6;
      }
      char v48 = sub_1D446A758();
      sub_1D42CA8E8((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      if (v48) {
        goto LABEL_16;
      }
    }
    uint64_t result = sub_1D42CA8E8((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_6:
    ++v41;
    uint64_t v42 = (uint64_t)v134;
    if (v133 == v41)
    {
      uint64_t v51 = v137;
      uint64_t v39 = MEMORY[0x1E4FBC860];
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
  return result;
}

uint64_t FMIPManager.initializedSubsystems.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_initializedSubsystems);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_1D4375E00(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t *)(*a2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_initializedSubsystems);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = v2;
  uint64_t v6 = v4;
  return sub_1D4375E68(&v6);
}

uint64_t sub_1D4375E68(uint64_t *a1)
{
  uint64_t v3 = sub_1D4469958();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D44699B8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v12 = (uint64_t *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_initializedSubsystems);
  uint64_t result = swift_beginAccess();
  uint64_t v14 = *v12;
  if (v11 != *v12)
  {
    uint64_t v15 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration)
                    + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems);
    if (v15 == 1)
    {
      if ((~(_BYTE)v14 & 3) != 0) {
        return result;
      }
    }
    else if ((v15 & ~v14) != 0)
    {
      return result;
    }
    v17[1] = *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue);
    aBlock[4] = sub_1D438A0C4;
    aBlock[5] = v1;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1D42BD950;
    uint64_t aBlock[3] = &unk_1F2C0BA90;
    uint64_t v16 = _Block_copy(aBlock);
    swift_retain();
    sub_1D4469988();
    _OWORD v17[2] = MEMORY[0x1E4FBC860];
    sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v10, v6, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return swift_release();
  }
  return result;
}

uint64_t FMIPManager.__allocating_init(configuration:ownerSession:)(uint64_t a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  FMIPManager.init(configuration:ownerSession:)(a1, a2);
  return v4;
}

uint64_t sub_1D43761C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1D446A828();
    sub_1D4469BC8();
    uint64_t v6 = sub_1D446A888();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1D446A758() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1D446A758() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1D43762F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1D4376318, 0, 0);
}

uint64_t sub_1D4376318()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconSharingController);
  *(void *)(v0 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1D4376344, v1, 0);
}

uint64_t sub_1D4376344()
{
  *(void *)(*(void *)(v0 + 32) + 160) = &off_1F2C0B360;
  swift_unknownObjectWeakAssign();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t FMIPManager.deinit()
{
  uint64_t v1 = v0;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  uint64_t v5 = &qword_1EBD83000;
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v17 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = sub_1D4469638();
    unint64_t v10 = sub_1D427A0D0(0xCuLL, v8, v9);
    uint64_t v11 = MEMORY[0x1D9445EF0](v10);
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D42CB9EC(v11, v13, &v17);
    sub_1D446A188();
    swift_release_n();
    uint64_t v5 = &qword_1EBD83000;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPManager<%s>.deinit", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v7, -1, -1);
    MEMORY[0x1D9447730](v6, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v14 = v0 + v5[25];
  uint64_t v15 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  sub_1D42F9538(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate);
  sub_1D42F9538(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_siriDelegate);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_1D4276C3C(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_authenticationUIProvider, &qword_1EBD7F828);
  swift_release();
  swift_release();

  swift_release();
  sub_1D42BEC64(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_interactionController);
  swift_release();
  swift_release();
  swift_release();
  sub_1D4276C3C(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_stopRefreshTimestamp, &qword_1EBD7CB80);
  swift_release();
  sub_1D4276C3C(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_selectedDevice, &qword_1EBD7CBC0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t FMIPManager.__deallocating_deinit()
{
  FMIPManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43767E4(uint64_t a1)
{
  uint64_t v2 = sub_1D4469958();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D44699B8();
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(*(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration)
                 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems);
  unint64_t v10 = (uint64_t *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_initializedSubsystems);
  swift_beginAccess();
  uint64_t v11 = *v10;
  *unint64_t v10 = v9;
  aBlock[0] = v11;
  sub_1D4375E68(aBlock);
  aBlock[4] = (uint64_t)sub_1D438BE74;
  aBlock[5] = a1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = (uint64_t)sub_1D42BD950;
  uint64_t aBlock[3] = (uint64_t)&unk_1F2C0C5A8;
  unint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  sub_1D4469988();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v8, v5, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  return swift_release();
}

uint64_t sub_1D4376ACC(uint64_t a1)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  uint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPManager: loaded cached data", v5, 2u);
    MEMORY[0x1D9447730](v5, -1, -1);
  }

  uint64_t v6 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v6);
  if (result)
  {
    uint64_t v8 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D4376C10()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D42FA10C;
  return sub_1D42E4130();
}

Swift::Void __swiftcall FMIPManager.forceStartRefreshing()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D4469958();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D44699B8();
  uint64_t v20 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D4469928();
  sub_1D42D7FAC(v9, (uint64_t)qword_1EBD83228);
  unint64_t v10 = sub_1D44698F8();
  os_log_type_t v11 = sub_1D446A038();
  if (os_log_type_enabled(v10, v11))
  {
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v12 = 0;
    _os_log_impl(&dword_1D4271000, v10, v11, "FMIPManager: force start refreshing", v12, 2u);
    MEMORY[0x1D9447730](v12, -1, -1);
  }

  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_refreshingController);
  if (!v13) {
    goto LABEL_7;
  }
  dispatch_queue_t v19 = *(dispatch_queue_t *)(v13 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_refreshQueue);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1D42E4A90;
  *(void *)(v14 + 24) = v13;
  uint64_t v26 = sub_1D42AEE88;
  uint64_t v27 = v14;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v23 = 1107296256;
  uint64_t v24 = sub_1D42AEDE4;
  uint64_t v25 = &unk_1F2C0AC98;
  uint64_t v15 = _Block_copy(&aBlock);
  swift_retain_n();
  swift_retain();
  swift_release();
  dispatch_sync(v19, v15);
  _Block_release(v15);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release_n();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
LABEL_7:
    uint64_t v26 = sub_1D42E7A48;
    uint64_t v27 = v1;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v23 = 1107296256;
    uint64_t v24 = sub_1D42BD950;
    uint64_t v25 = &unk_1F2C0ACC0;
    uint64_t v17 = _Block_copy(&aBlock);
    swift_retain();
    sub_1D4469988();
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v8, v5, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
    swift_release();
  }
}

Swift::Void __swiftcall FMIPManager.stopRefreshing()()
{
}

Swift::Void __swiftcall FMIPManager.stopRefreshing(subsystems:)(FMIPCore::FMIPManagerSubsystem subsystems)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D4469958();
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v36 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D44699B8();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D42D5DA0(&qword_1EBD7CB80);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)subsystems.rawValue;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1D4469928();
  sub_1D42D7FAC(v17, (uint64_t)qword_1EBD83228);
  uint64_t v18 = sub_1D44698F8();
  os_log_type_t v19 = sub_1D446A038();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_1D4271000, v18, v19, "FMIPManager: stop refreshing", v20, 2u);
    MEMORY[0x1D9447730](v20, -1, -1);

    if ((v16 & 1) == 0)
    {
LABEL_5:
      if ((v16 & 3) == 0) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
  }
  else
  {

    if ((v16 & 1) == 0) {
      goto LABEL_5;
    }
  }
  if (*(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_refreshingController))
  {
    swift_retain();
    sub_1D440B044();
    swift_release();
  }
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isRefreshingDevices) = 0;
  if ((v16 & 3) != 0)
  {
LABEL_11:
    if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isDevicesSnapshotMode) & 1) == 0
      && (*(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isItemsSnapshotMode) & 1) == 0)
    {
      swift_retain();
      sub_1D443FA54();
      swift_release();
      *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isRefreshingItems) = 0;
      uint64_t v21 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconSharingController);
      uint64_t v22 = sub_1D4469E88();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v15, 1, 1, v22);
      uint64_t v23 = (void *)swift_allocObject();
      v23[2] = 0;
      void v23[3] = 0;
      v23[4] = v21;
      swift_retain();
      sub_1D43733DC((uint64_t)v15, (uint64_t)&unk_1EA6CA300, (uint64_t)v23);
      swift_release();
    }
  }
LABEL_14:
  uint64_t v24 = *(void **)(*(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_safeLocationRefreshingController) + 56);
  swift_retain();
  objc_msgSend(v24, sel_stopRefreshingSafeLocations);
  uint64_t v25 = sub_1D44698F8();
  os_log_type_t v26 = sub_1D446A038();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl(&dword_1D4271000, v25, v26, "FMIPSafeLocationRefreshingController: Stopped refreshing Safe Locations", v27, 2u);
    MEMORY[0x1D9447730](v27, -1, -1);
  }
  swift_release();

  objc_msgSend(*(id *)(*(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_locationController)+ OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_locationManager), sel_stopUpdatingLocation);
  sub_1D4469608();
  uint64_t v28 = sub_1D4469618();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v12, 0, 1, v28);
  uint64_t v29 = v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_stopRefreshTimestamp;
  swift_beginAccess();
  sub_1D42E8000((uint64_t)v12, v29, &qword_1EBD7CB80);
  swift_endAccess();
  aBlock[4] = sub_1D4387F64;
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C0ACE8;
  uint64_t v30 = _Block_copy(aBlock);
  swift_retain();
  sub_1D4469988();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  uint64_t v31 = v36;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v9, v6, v30);
  _Block_release(v30);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v31);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v34);
  swift_release();
}

uint64_t sub_1D43777B8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D42FA10C;
  return sub_1D42EAA8C();
}

uint64_t sub_1D4377848(uint64_t a1)
{
  sub_1D42D5DA0((uint64_t *)&unk_1EA6CA520);
  sub_1D446A0A8();
  uint64_t v2 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  if (MEMORY[0x1D9447840](v2))
  {
    uint64_t v3 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_1D42D5DA0(&qword_1EBD7D8C0);
    sub_1D446A0A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32))(a1, v10, ObjectType, v3);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  if (MEMORY[0x1D9447840](v2))
  {
    uint64_t v5 = *(void *)(v2 + 8);
    uint64_t v6 = swift_getObjectType();
    sub_1D446A0A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 112))(a1, v10, v6, v5);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  if (MEMORY[0x1D9447840](v2))
  {
    uint64_t v7 = *(void *)(v2 + 8);
    uint64_t v8 = swift_getObjectType();
    sub_1D42D5DA0(&qword_1EA6CA4F0);
    sub_1D446A0A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 152))(a1, v10, v8, v7);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemCounts) = v11;
  swift_bridgeObjectRelease();
  return sub_1D4374EC8();
}

Swift::Void __swiftcall FMIPManager.updateLastActiveTimestamp()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D4469618();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_interactionController;
  swift_beginAccess();
  sub_1D42A4D5C(v6, (uint64_t)v11);
  uint64_t v7 = v12;
  uint64_t v8 = v13;
  sub_1D42C26F4(v11, v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 64))(v7, v8);
  sub_1D42BEC64((uint64_t)v11);
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconRefreshingController);
  swift_retain();
  sub_1D4469608();
  uint64_t v10 = v9 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_lastActiveTimestamp;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 40))(v10, v5, v2);
  swift_endAccess();
  swift_release();
}

Swift::Void __swiftcall FMIPManager.refresh()()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration)
                 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems);
  FMIPManager.refresh(subsystems:)((FMIPCore::FMIPManagerSubsystem)&v1);
}

Swift::Void __swiftcall FMIPManager.refresh(subsystems:)(FMIPCore::FMIPManagerSubsystem subsystems)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)subsystems.rawValue;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
  uint64_t v5 = sub_1D44698F8();
  os_log_type_t v6 = sub_1D446A038();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1D4271000, v5, v6, "FMIPManager: forced refresh", v7, 2u);
    MEMORY[0x1D9447730](v7, -1, -1);
  }

  if ((v3 & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_refreshingController);
  if (!v8) {
    goto LABEL_11;
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(unsigned char *)(v9 + 24) = 0;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1D42E4A40;
  *(void *)(v10 + 24) = v9;
  aBlock[4] = sub_1D42AEE88;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1D42AEDE4;
  uint64_t aBlock[3] = &unk_1F2C0AD88;
  uint64_t v22 = _Block_copy(aBlock);
  uint64_t v11 = _Block_copy(v22);
  uint64_t v12 = qword_1EBD7E6F0;
  swift_retain_n();
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1EBD7E6E8;
  swift_unknownObjectRetain();
  uint64_t v14 = _os_activity_create(&dword_1D4271000, "FMIPRefreshingController.refresh", v13, OS_ACTIVITY_FLAG_DEFAULT);
  swift_unknownObjectRelease();
  uint64_t v21 = v11;
  uint64_t v15 = _Block_copy(v11);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1D438C100;
  *(void *)(v17 + 24) = v16;
  v23[4] = sub_1D42AEE88;
  v23[5] = v17;
  v23[0] = MEMORY[0x1E4F143A8];
  v23[1] = 1107296256;
  v23[2] = sub_1D42AEDE4;
  void v23[3] = &unk_1F2C0AE00;
  uint64_t v18 = _Block_copy(v23);
  swift_retain();
  swift_release();
  os_activity_apply(v14, v18);
  _Block_release(v18);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v21);
  swift_unknownObjectRelease();
  _Block_release(v22);
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_15;
  }
  swift_release();
  swift_release();
  char v20 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v20)
  {
LABEL_15:
    __break(1u);
    return;
  }
LABEL_11:
  if ((v3 & 3) != 0)
  {
    swift_retain();
    sub_1D42BE33C(0, 0);
    swift_release();
  }
}

uint64_t FMIPManager.refreshBeacons(completion:)(NSObject *a1, uint64_t a2)
{
  swift_retain();
  sub_1D42BE33C(a1, a2);
  return swift_release();
}

void FMIPManager.refreshUnknownBeacons(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EBD83228);
  sub_1D42972D4(a1);
  uint64_t v7 = sub_1D44698F8();
  os_log_type_t v8 = sub_1D446A038();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 67109120;
    LODWORD(aBlock[0]) = a1 == 0;
    sub_1D446A188();
    sub_1D42E2C6C(a1);
    _os_log_impl(&dword_1D4271000, v7, v8, "FMIPManager: refreshUnknownBeacons, isCompletionNil? %{BOOL}d", v9, 8u);
    MEMORY[0x1D9447730](v9, -1, -1);
  }
  else
  {
    sub_1D42E2C6C(a1);
  }

  uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconRefreshingController);
  uint64_t v11 = (void *)swift_allocObject();
  _OWORD v11[2] = a1;
  void v11[3] = a2;
  v11[4] = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1D42E3784;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_1D42AEE88;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1D42AEDE4;
  uint64_t aBlock[3] = &unk_1F2C0AE78;
  uint64_t v13 = _Block_copy(aBlock);
  uint64_t v14 = _Block_copy(v13);
  swift_retain();
  sub_1D42972D4(a1);
  uint64_t v15 = qword_1EBD7E6F0;
  swift_retain();
  swift_retain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_1EBD7E6E8;
  swift_unknownObjectRetain();
  uint64_t v17 = _os_activity_create(&dword_1D4271000, "FMIPBeaconRefreshingController.refreshUnknownBeacons", v16, OS_ACTIVITY_FLAG_DEFAULT);
  swift_unknownObjectRelease();
  uint64_t v18 = _Block_copy(v14);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v18;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1D438C100;
  *(void *)(v20 + 24) = v19;
  v23[4] = sub_1D42AEE88;
  v23[5] = v20;
  v23[0] = MEMORY[0x1E4F143A8];
  v23[1] = 1107296256;
  v23[2] = sub_1D42AEDE4;
  void v23[3] = &unk_1F2C0AEF0;
  uint64_t v21 = _Block_copy(v23);
  swift_retain();
  swift_release();
  os_activity_apply(v17, v21);
  _Block_release(v21);
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v14);
  swift_unknownObjectRelease();
  _Block_release(v13);
  if (v21)
  {
    __break(1u);
    goto LABEL_12;
  }
  swift_release();
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_12:
  }
    __break(1u);
}

void sub_1D437851C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration);
  uint64_t v7 = OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_snapshotHandlers;
  uint64_t v8 = *(void *)(v6 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_snapshotHandlers);
  if (v8 && (uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 48)) != 0)
  {
    swift_retain();
    a1 = v9(v2, a1);
    sub_1D42E2C6C((uint64_t)v9);
    if (!a2) {
      goto LABEL_4;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    if (!a2)
    {
LABEL_4:
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1D4469928();
      sub_1D42D7FAC(v10, (uint64_t)qword_1EBD83228);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v11 = sub_1D44698F8();
      os_log_type_t v12 = sub_1D446A038();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = swift_slowAlloc();
        uint64_t v35 = v7;
        uint64_t v14 = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 136446466;
        uint64_t v37 = v14;
        sub_1D42D5DA0(&qword_1EA6CA338);
        uint64_t v15 = sub_1D4469B68();
        sub_1D42CB9EC(v15, v16, &v37);
        sub_1D446A188();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2048;
        swift_bridgeObjectRelease();
        sub_1D446A188();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D4271000, v11, v12, "%{public}s: received %ld items with locations", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v14, -1, -1);
        MEMORY[0x1D9447730](v13, -1, -1);

        uint64_t v17 = *(void *)(v6 + v35);
        if (!v17) {
          goto LABEL_22;
        }
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
        uint64_t v17 = *(void *)(v6 + v7);
        if (!v17)
        {
LABEL_22:
          swift_bridgeObjectRelease();
          return;
        }
      }
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v17 + 64);
      if (v33)
      {
        swift_retain();
        v33(v3, a1, a1, 0);
        sub_1D42E2C6C((uint64_t)v33);
      }
      goto LABEL_22;
    }
  }
  id v18 = a2;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1D4469928();
  sub_1D42D7FAC(v19, (uint64_t)qword_1EBD83228);
  id v20 = a2;
  swift_retain();
  id v21 = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1D44698F8();
  os_log_type_t v23 = sub_1D446A038();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v36 = v7;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446722;
    uint64_t v37 = v34;
    sub_1D42D5DA0(&qword_1EA6CA338);
    uint64_t v25 = sub_1D4469B68();
    sub_1D42CB9EC(v25, v26, &v37);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2048;
    swift_bridgeObjectRelease();
    sub_1D446A188();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 2080;
    swift_getErrorValue();
    uint64_t v27 = sub_1D446A7D8();
    sub_1D42CB9EC(v27, v28, &v37);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v22, v23, "%{public}s: received %ld items (with locations asked) (error=%s)", (uint8_t *)v24, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v34, -1, -1);
    uint64_t v29 = v24;
    uint64_t v7 = v36;
    MEMORY[0x1D9447730](v29, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v30 = *(void *)(v6 + v7);
  if (v30)
  {
    uint64_t v31 = *(void (**)(uint64_t, void, void, void *))(v30 + 64);
    if (v31)
    {
      id v32 = a2;
      sub_1D42972D4((uint64_t)v31);
      v31(v2, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], a2);

      sub_1D42E2C6C((uint64_t)v31);
    }
  }
}

uint64_t FMIPManager.refreshSafeLocations(completion:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
  sub_1D42972D4(a1);
  uint64_t v5 = sub_1D44698F8();
  os_log_type_t v6 = sub_1D446A038();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109120;
    sub_1D446A188();
    sub_1D42E2C6C(a1);
    _os_log_impl(&dword_1D4271000, v5, v6, "FMIPManager: refreshSafeLocations, isCompletionNil? %{BOOL}d", v7, 8u);
    MEMORY[0x1D9447730](v7, -1, -1);
  }
  else
  {
    sub_1D42E2C6C(a1);
  }

  swift_retain();
  sub_1D4328AF4(a1, a2);
  return swift_release();
}

uint64_t FMIPManager.refreshShares(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E7F8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D4469928();
  sub_1D42D7FAC(v9, (uint64_t)qword_1EBD83228);
  uint64_t v10 = sub_1D44698F8();
  os_log_type_t v11 = sub_1D446A038();
  if (os_log_type_enabled(v10, v11))
  {
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v12 = 0;
    _os_log_impl(&dword_1D4271000, v10, v11, "FMIPManager: refreshShares", v12, 2u);
    MEMORY[0x1D9447730](v12, -1, -1);
  }

  uint64_t v13 = sub_1D4469E88();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v3;
  v14[5] = a1;
  void v14[6] = a2;
  swift_retain();
  swift_retain();
  sub_1D43733DC((uint64_t)v8, (uint64_t)&unk_1EA6CA310, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1D4378E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[17] = a5;
  v6[18] = a6;
  v6[16] = a4;
  return MEMORY[0x1F4188298](sub_1D4378E70, 0, 0);
}

uint64_t sub_1D4378E70()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 128) + OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconSharingController);
  *(void *)(v0 + 152) = v1;
  return MEMORY[0x1F4188298](sub_1D4378E9C, v1, 0);
}

uint64_t sub_1D4378E9C()
{
  uint64_t v1 = *(void **)(v0[19] + 112);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1D4378F9C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D4373588;
  v0[13] = &unk_1E69E5E60;
  v0[14] = v2;
  objc_msgSend(v1, sel_allSharesWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D4378F9C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  return MEMORY[0x1F4188298](sub_1D4379090, v1, 0);
}

uint64_t sub_1D4379090()
{
  uint64_t v1 = v0[19];
  sub_1D42E4150(v0[15]);
  swift_bridgeObjectRelease();
  v0[20] = *(void *)(v1 + 144);
  swift_bridgeObjectRetain();
  return MEMORY[0x1F4188298](sub_1D4379118, 0, 0);
}

uint64_t sub_1D4379118()
{
  (*(void (**)(void))(v0 + 136))(*(void *)(v0 + 160));
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void FMIPManager.unknownBeacons(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_ownerSession);
  sub_1D4469688();
  uint64_t v7 = (void *)sub_1D4469D58();
  v9[4] = a2;
  v9[5] = a3;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  void v9[2] = sub_1D4275C00;
  v9[3] = &unk_1F2C0AF40;
  uint64_t v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_unknownBeaconsForUUIDs_completion_, v7, v8);
  _Block_release(v8);
}

void FMIPManager.perform(action:completion:)(uint64_t a1, void (*a2)(uint64_t *, void, void *, uint64_t), uint64_t a3)
{
  uint64_t v6 = *(uint64_t *)((char *)&v3->isa + OBJC_IVAR____TtC8FMIPCore11FMIPManager_actionsController);
  if (!v6)
  {
    LOBYTE(aBlock) = 0;
    sub_1D4325284();
    id v18 = (void *)swift_allocError();
    *uint64_t v19 = 5;
    a2(&aBlock, 0, v18, a1);

    return;
  }
  uint64_t v7 = qword_1EBD80068;
  swift_retain();
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D4469928();
  sub_1D42D7FAC(v8, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v9 = sub_1D44698F8();
  os_log_type_t v10 = sub_1D446A038();
  os_activity_t activity = v3;
  uint64_t v51 = v6;
  if (os_log_type_enabled(v9, v10))
  {
    os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t aBlock = v12;
    *(_DWORD *)os_log_type_t v11 = 136315138;
    uint64_t v13 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 344);
    uint64_t v14 = swift_retain();
    uint64_t v15 = v13(v14);
    unint64_t v17 = v16;
    swift_release();
    v63[0] = sub_1D42CB9EC(v15, v17, &aBlock);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v9, v10, "FMIPManager: perform device action %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v12, -1, -1);
    MEMORY[0x1D9447730](v11, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  sub_1D42D5DA0(&qword_1EA6CA5B0);
  sub_1D446A0A8();
  uint64_t v20 = aBlock;
  uint64_t v21 = *(void *)(aBlock + 16);
  if (v21)
  {
    uint64_t v22 = 0;
    uint64_t v46 = a1;
    uint64_t v24 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 32);
    uint64_t v23 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 40);
    while (1)
    {
      uint64_t v25 = *(void *)(v20 + v22 + 40);
      unint64_t v26 = *(uint64_t (**)(uint64_t))(v20 + v22 + 48);
      char v56 = *(unsigned char *)(v20 + v22 + 64);
      char v27 = *(unsigned char *)(v20 + v22 + 65);
      LOBYTE(v55) = *(unsigned char *)(v20 + v22 + 66);
      uint64_t v52 = *(void *)(v20 + v22 + 32);
      LOBYTE(v54) = *(unsigned char *)(v20 + v22 + 67);
      uint64_t v28 = *(void *)(v20 + v22 + 88);
      uint64_t v60 = *(void **)(v20 + v22 + 56);
      uint64_t v61 = *(void *)(v20 + v22 + 80);
      uint64_t v29 = *(void *)(v20 + v22 + 96);
      uint64_t v57 = *(void *)(v20 + v22 + 72);
      uint64_t v58 = *(void **)(v20 + v22 + 104);
      uint64_t v62 = *(void *)(v20 + v22 + 112);
      if (v28 == v24 && v29 == v23) {
        break;
      }
      if (sub_1D446A758()) {
        goto LABEL_19;
      }
      v22 += 88;
      if (!--v21)
      {
        swift_bridgeObjectRelease();
        a1 = v46;
        goto LABEL_16;
      }
    }
    uint64_t v28 = v24;
    uint64_t v29 = v23;
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v30 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1 = v46;
    LOBYTE(v32) = v27;
    uint64_t v33 = v26;
    uint64_t v34 = v52;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_16:
    sub_1D42D5DA0(&qword_1EA6CA2C0);
    sub_1D446A0A8();
    uint64_t v30 = v65;
    if (!v65) {
      goto LABEL_27;
    }
    uint64_t v31 = v72;
    uint64_t v28 = v71;
    uint64_t v61 = v70;
    uint64_t v62 = v74;
    uint64_t v57 = v69;
    uint64_t v58 = v73;
    uint64_t v60 = v67;
    uint64_t v32 = ((unint64_t)v68 >> 8) & 1;
    uint64_t v33 = v66;
    uint64_t v34 = aBlock;
    char v56 = v68 & 1;
    uint64_t v54 = ((unint64_t)v68 >> 24) & 1;
    uint64_t v55 = ((unint64_t)v68 >> 16) & 1;
  }
  uint64_t v35 = (void *)swift_allocObject();
  v35[2] = activity;
  v35[3] = a1;
  v35[4] = a2;
  v35[5] = a3;
  uint64_t v53 = v35;
  uint64_t v36 = qword_1EBD7E6F0;
  swift_retain();
  swift_retain();
  swift_retain();
  if (v36 != -1) {
    swift_once();
  }
  uint64_t v37 = qword_1EBD7E6E8;
  swift_unknownObjectRetain();
  activitya = _os_activity_create(&dword_1D4271000, "FMIPDeviceActionsController.perform", v37, OS_ACTIVITY_FLAG_DEFAULT);
  swift_unknownObjectRelease();
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v34;
  *(void *)(v38 + 24) = v30;
  *(void *)(v38 + 32) = v33;
  *(void *)(v38 + 40) = v60;
  *(unsigned char *)(v38 + 48) = v56;
  *(unsigned char *)(v38 + 49) = v32;
  *(unsigned char *)(v38 + 50) = v55;
  *(unsigned char *)(v38 + 51) = v54;
  *(void *)(v38 + 56) = v57;
  *(void *)(v38 + 64) = v61;
  *(void *)(v38 + 72) = v28;
  *(void *)(v38 + 80) = v31;
  *(void *)(v38 + 88) = v58;
  *(void *)(v38 + 96) = v62;
  *(void *)(v38 + 104) = v51;
  *(void *)(v38 + 112) = a1;
  *(void *)(v38 + 120) = sub_1D43881E0;
  *(void *)(v38 + 128) = v53;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = sub_1D438825C;
  *(void *)(v39 + 24) = v38;
  uint64_t v68 = sub_1D42AEE88;
  uint64_t v69 = v39;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v65 = 1107296256;
  unint64_t v66 = sub_1D42AEDE4;
  uint64_t v67 = &unk_1F2C0AFE0;
  unint64_t v59 = _Block_copy(&aBlock);
  uint64_t v40 = _Block_copy(v59);
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v40;
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = sub_1D438C100;
  *(void *)(v42 + 24) = v41;
  v63[4] = sub_1D42AEE88;
  v63[5] = v42;
  v63[0] = MEMORY[0x1E4F143A8];
  v63[1] = 1107296256;
  v63[2] = sub_1D42AEDE4;
  v63[3] = &unk_1F2C0B058;
  unint64_t v43 = _Block_copy(v63);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  os_activity_apply(activitya, v43);
  _Block_release(v43);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v59);
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_26;
  }
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  char v45 = swift_isEscapingClosureAtFileLocation();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  if (v45)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

uint64_t sub_1D4379A9C(unsigned __int8 *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v46 = a8;
  uint64_t v40 = a4;
  uint64_t v41 = a6;
  uint64_t v43 = a2;
  uint64_t v44 = a5;
  uint64_t v11 = sub_1D44699B8();
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1D4469958();
  uint64_t v45 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v39 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (char)*a1;
  int v16 = *a1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1D4469928();
  sub_1D42D7FAC(v17, (uint64_t)qword_1EBD83228);
  id v18 = a3;
  id v19 = a3;
  uint64_t v20 = sub_1D44698F8();
  os_log_type_t v21 = sub_1D446A038();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v38 = a7;
    uint64_t v23 = v22;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v49 = (uint64_t)a3;
    aBlock[0] = v36;
    *(_DWORD *)uint64_t v23 = 136315394;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    int v37 = v16;
    uint64_t v24 = sub_1D446A158();
    uint64_t v49 = sub_1D42CB9EC(v24, v25, aBlock);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    *(_WORD *)(v23 + 12) = 2048;
    uint64_t v49 = qword_1D4472300[v15];
    LOBYTE(v16) = v37;
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v20, v21, "FMIPManager: performed action with error?: %s status?: %ld", (uint8_t *)v23, 0x16u);
    uint64_t v26 = v36;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v26, -1, -1);
    uint64_t v27 = v23;
    a7 = v38;
    MEMORY[0x1D9447730](v27, -1, -1);
  }
  else
  {
  }
  uint64_t v28 = v44;
  uint64_t v29 = v39;
  sub_1D4469948();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v43;
  *(void *)(v30 + 24) = v28;
  *(void *)(v30 + 32) = v41;
  *(void *)(v30 + 40) = a7;
  *(void *)(v30 + 48) = v46;
  *(unsigned char *)(v30 + 56) = v16;
  uint64_t v31 = v40;
  *(void *)(v30 + 64) = a3;
  *(void *)(v30 + 72) = v31;
  aBlock[4] = (uint64_t)sub_1D438A740;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = (uint64_t)sub_1D42BD950;
  uint64_t aBlock[3] = (uint64_t)&unk_1F2C0BDD8;
  uint64_t v32 = _Block_copy(aBlock);
  id v33 = a3;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v13, v29, v32);
  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v48);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v42);
  return swift_release();
}

void sub_1D4379EF0(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, unint64_t, uint64_t, uint64_t), uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    uint64_t v29 = a8;
    uint64_t v13 = *(void **)(a2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager);
    swift_retain();
    unint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_1D42801AC(v14);
    swift_bridgeObjectRelease();
    v13[36] = v15;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1D42B9654(a1);
    unint64_t v17 = sub_1D42BA8DC(v16, v16);
    swift_bridgeObjectRelease();
    uint64_t v18 = v13[24];
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1D42BA1A4(v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_1D42B55C4(v19);
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v21 = sub_1D4399A44(v20, v13);
    swift_bridgeObjectRelease();
    swift_release_n();
    if (*(void *)(v21 + 16))
    {
      uint64_t v22 = "FMIPManager: updateDevices";
      uint64_t v23 = &unk_1F2C0BF00;
      uint64_t v24 = &unk_1F2C0BF18;
      unint64_t v25 = sub_1D438A814;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1D42D5DA0(&qword_1EBD7D9F0);
      uint64_t v26 = *(void *)(type metadata accessor for FMIPDevice() - 8);
      unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1D446E050;
      sub_1D42CA6F0(a3 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, v21 + v27, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v22 = "FMIPManager: removeDevices";
      uint64_t v23 = &unk_1F2C0BE10;
      uint64_t v24 = &unk_1F2C0BE28;
      unint64_t v25 = sub_1D438A784;
    }
    sub_1D437A1A4(v21, v22, (uint64_t)v23, (uint64_t)v25, (uint64_t)v24);
    swift_bridgeObjectRelease();
    a8 = v29;
  }
  LOBYTE(v30) = a6;
  a4(&v30, a1, a7, a8);
  uint64_t v30 = *(void *)(*(void *)(a2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration)
                  + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems);
  FMIPManager.refresh(subsystems:)((FMIPCore::FMIPManagerSubsystem)&v30);
}

uint64_t sub_1D437A1A4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v6 = v5;
  uint64_t v8 = sub_1D44699B8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D4469958();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1D4469928();
  sub_1D42D7FAC(v16, (uint64_t)qword_1EBD83228);
  unint64_t v17 = sub_1D44698F8();
  os_log_type_t v18 = sub_1D446A038();
  if (os_log_type_enabled(v17, v18))
  {
    unint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = v6;
    uint64_t v20 = v13;
    uint64_t v21 = v9;
    uint64_t v22 = a1;
    uint64_t v23 = v12;
    uint64_t v24 = v8;
    unint64_t v25 = v19;
    *(_WORD *)unint64_t v19 = 0;
    _os_log_impl(&dword_1D4271000, v17, v18, v32, v19, 2u);
    uint64_t v26 = v25;
    uint64_t v8 = v24;
    uint64_t v12 = v23;
    a1 = v22;
    uint64_t v9 = v21;
    uint64_t v13 = v20;
    uint64_t v6 = v31;
    MEMORY[0x1D9447730](v26, -1, -1);
  }

  sub_1D4469948();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v6;
  *(void *)(v27 + 24) = a1;
  aBlock[4] = v34;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = v35;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v11, v15, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

void FMIPManager.perform(action:completion:)(uint64_t a1, uint64_t (*a2)(unsigned char *, void *), uint64_t a3)
{
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemActionsController);
  if (v6)
  {
    uint64_t v8 = qword_1EBD80068;
    swift_retain();
    if (v8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1D4469928();
    sub_1D42D7FAC(v9, (uint64_t)qword_1EBD83228);
    uint64_t v10 = sub_1D44698F8();
    os_log_type_t v11 = sub_1D446A038();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1D4271000, v10, v11, "FMIPManager: perform item action FMIPPlayUTSoundAction", v12, 2u);
      MEMORY[0x1D9447730](v12, -1, -1);
    }

    uint64_t v13 = swift_retain();
    uint64_t v14 = (void *)MEMORY[0x1D9446F50](v13);
    sub_1D435D31C(a1, v6, (uint64_t (*)(void, void))a2, a3);
    swift_release();
  }
  else
  {
    char v17 = 0;
    sub_1D43694E4();
    uint64_t v15 = (void *)swift_allocError();
    *uint64_t v16 = 11;
    a2(&v17, v15);
  }
}

uint64_t sub_1D437A678(char *a1, void *a2, uint64_t (*a3)(void, void))
{
  char v5 = *a1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EBD83228);
  id v7 = a2;
  id v8 = a2;
  uint64_t v9 = sub_1D44698F8();
  os_log_type_t v10 = sub_1D446A038();
  if (os_log_type_enabled(v9, v10))
  {
    char v17 = a3;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v18 = v12;
    *(_DWORD *)uint64_t v11 = 136315394;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    uint64_t v13 = sub_1D446A158();
    sub_1D42CB9EC(v13, v14, &v18);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2048;
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v9, v10, "FMIPManager: performed item action with error?: %s status?: %ld", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v12, -1, -1);
    uint64_t v15 = v11;
    a3 = v17;
    MEMORY[0x1D9447730](v15, -1, -1);
  }
  else
  {
  }
  LOBYTE(v18) = v5;
  return a3(&v18, a2);
}

uint64_t FMIPManager.perform(action:completion:)(uint64_t a1, uint64_t (*a2)(uint64_t *, uint64_t, void *), uint64_t a3)
{
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemActionsController);
  if (v9)
  {
    uint64_t v10 = qword_1EBD80068;
    swift_retain();
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1D4469928();
    sub_1D42D7FAC(v11, (uint64_t)qword_1EBD83228);
    uint64_t v12 = sub_1D44698F8();
    os_log_type_t v13 = sub_1D446A038();
    if (os_log_type_enabled(v12, v13))
    {
      unint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v14 = 0;
      _os_log_impl(&dword_1D4271000, v12, v13, "FMIPManager: perform item action FMIPPlayUTSoundAction", v14, 2u);
      MEMORY[0x1D9447730](v14, -1, -1);
    }

    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a2;
    *(void *)(v15 + 24) = a3;
    uint64_t v16 = swift_retain_n();
    char v17 = (void *)MEMORY[0x1D9446F50](v16);
    type metadata accessor for FMIPFetchEncryptedPayloadAction(0);
    if (swift_dynamicCastClass())
    {
      uint64_t v18 = *(void **)(v9 + 24);
      swift_retain();
      unint64_t v19 = (void *)sub_1D4469648();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = sub_1D43882FC;
      *(void *)(v20 + 24) = v15;
      aBlock[4] = sub_1D4388304;
      aBlock[5] = v20;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      uint64_t aBlock[2] = sub_1D4373FE0;
      uint64_t aBlock[3] = &unk_1F2C0B0D0;
      uint64_t v21 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v18, sel_fetchUnauthorizedEncryptedPayload_completion_, v19, v21);
      _Block_release(v21);
      swift_release();
    }
    else
    {
      uint64_t v26 = sub_1D44698F8();
      os_log_type_t v27 = sub_1D446A038();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl(&dword_1D4271000, v26, v27, "FMIPItemActionsController: cannot map action to request", v28, 2u);
        MEMORY[0x1D9447730](v28, -1, -1);
      }

      LOBYTE(aBlock[0]) = 0;
      uint64_t v29 = sub_1D4469498();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v8, 1, 1, v29);
      sub_1D43694E4();
      uint64_t v30 = (void *)swift_allocError();
      unsigned char *v31 = 6;
      sub_1D437AD04((char *)aBlock, (uint64_t)v8, v30, a2);

      sub_1D4276C3C((uint64_t)v8, &qword_1EBD7E918);
    }
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    LOBYTE(aBlock[0]) = 0;
    uint64_t v22 = sub_1D4469498();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v8, 1, 1, v22);
    sub_1D43694E4();
    uint64_t v23 = (void *)swift_allocError();
    *uint64_t v24 = 11;
    a2(aBlock, (uint64_t)v8, v23);

    return sub_1D4276C3C((uint64_t)v8, &qword_1EBD7E918);
  }
}

uint64_t sub_1D437AD04(char *a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t *, uint64_t, void *))
{
  char v7 = *a1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D4469928();
  sub_1D42D7FAC(v8, (uint64_t)qword_1EBD83228);
  id v9 = a3;
  id v10 = a3;
  uint64_t v11 = sub_1D44698F8();
  os_log_type_t v12 = sub_1D446A038();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v21 = a2;
    uint64_t v13 = swift_slowAlloc();
    char v20 = v7;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    uint64_t v15 = sub_1D446A158();
    sub_1D42CB9EC(v15, v16, &v22);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2048;
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v11, v12, "FMIPManager: performed item action with error?: %s status?: %ld", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    uint64_t v17 = v14;
    char v7 = v20;
    MEMORY[0x1D9447730](v17, -1, -1);
    uint64_t v18 = v13;
    a2 = v21;
    MEMORY[0x1D9447730](v18, -1, -1);
  }
  else
  {
  }
  LOBYTE(v22) = v7;
  return a4(&v22, a2, a3);
}

void FMIPManager.perform(action:completion:)(uint64_t a1, uint64_t (*a2)(uint64_t *, uint64_t, uint64_t, void *, uint64_t), uint64_t a3)
{
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemActionsController);
  if (v6)
  {
    swift_retain();
    swift_retain();
    sub_1D4366BD8(a1, v6, a2, a3);
    swift_release();
    swift_release();
  }
  else
  {
    char v10 = 0;
    sub_1D43694E4();
    uint64_t v8 = (void *)swift_allocError();
    *id v9 = 11;
    a2((uint64_t *)&v10, 0, 0, v8, 2);
  }
}

uint64_t sub_1D437B048(char *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t (*a6)(uint64_t *, uint64_t, uint64_t, void *, uint64_t))
{
  char v11 = *a1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D4469928();
  sub_1D42D7FAC(v12, (uint64_t)qword_1EBD83228);
  id v13 = a4;
  id v14 = a4;
  uint64_t v15 = sub_1D44698F8();
  os_log_type_t v16 = sub_1D446A038();
  if (os_log_type_enabled(v15, v16))
  {
    char v23 = v11;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v24 = v22;
    *(_DWORD *)uint64_t v17 = 136315394;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    uint64_t v18 = sub_1D446A158();
    sub_1D42CB9EC(v18, v19, &v24);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    *(_WORD *)(v17 + 12) = 2048;
    a5 = a5;
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v15, v16, "FMIPManager: performed safe location action with error?: %s status?: %ld", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v22, -1, -1);
    uint64_t v20 = v17;
    char v11 = v23;
    MEMORY[0x1D9447730](v20, -1, -1);
  }
  else
  {
  }
  LOBYTE(v24) = v11;
  return a6(&v24, a2, a3, a4, a5);
}

void FMIPManager.perform(action:completion:)(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemActionsController);
  if (v6)
  {
    uint64_t v8 = qword_1EBD80068;
    swift_retain();
    if (v8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1D4469928();
    sub_1D42D7FAC(v9, (uint64_t)qword_1EBD83228);
    char v10 = sub_1D44698F8();
    os_log_type_t v11 = sub_1D446A038();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_1D4271000, v10, v11, "FMIPManager: perform item action FMIPDisableTagSafetyAlertAction", v12, 2u);
      MEMORY[0x1D9447730](v12, -1, -1);
    }

    uint64_t v13 = swift_allocObject();
    swift_weakInit();
    id v14 = (void *)swift_allocObject();
    v14[2] = v13;
    v14[3] = a2;
    v14[4] = a3;
    uint64_t v15 = *(void **)(v6 + 24);
    uint64_t v16 = *(unsigned __int8 *)(a1 + 16);
    long long v20[4] = sub_1D43884F0;
    v20[5] = v14;
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 1107296256;
    void v20[2] = sub_1D42E1B08;
    uint64_t v20[3] = &unk_1F2C0B120;
    uint64_t v17 = _Block_copy(v20);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v15, sel_disableUTAppAlert_completion_, v16, v17);
    _Block_release(v17);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    sub_1D43694E4();
    uint64_t v18 = (void *)swift_allocError();
    *unint64_t v19 = 11;
    a2();
  }
}

uint64_t sub_1D437B538(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    sub_1D42B0BC0(0, 0);
    swift_release();
  }
  return a3(a1);
}

void FMIPManager.perform(action:completion:)(uint64_t a1, uint64_t (*a2)(uint64_t *, uint64_t, void *), void **a3)
{
  char v5 = *(char **)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemActionsController);
  if (!v5)
  {
    LOBYTE(v42) = 0;
    sub_1D43694E4();
    uint64_t v17 = (void *)swift_allocError();
    *uint64_t v18 = 11;
    a2(&v42, 0, v17);

    return;
  }
  uint64_t v6 = v3;
  uint64_t v8 = qword_1EBD80068;
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D4469928();
  sub_1D42D7FAC(v9, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  char v10 = sub_1D44698F8();
  os_log_type_t v11 = sub_1D446A038();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v40 = v5;
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v42 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v14 = FMIPItemAction.debugDescription.getter();
    sub_1D42CB9EC(v14, v15, &v42);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v10, v11, "FMIPManager: perform item action %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v13, -1, -1);
    uint64_t v16 = v12;
    char v5 = v40;
    MEMORY[0x1D9447730](v16, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  unint64_t v19 = (void *)swift_allocObject();
  v19[2] = v6;
  v19[3] = a1;
  v19[4] = a2;
  v19[5] = a3;
  swift_retain_n();
  swift_retain_n();
  uint64_t v20 = swift_retain_n();
  uint64_t v21 = (void *)MEMORY[0x1D9446F50](v20);
  type metadata accessor for FMIPPlaySoundItemAction(0);
  uint64_t v22 = swift_dynamicCastClass();
  if (v22)
  {
    uint64_t v23 = v22;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1D4367440(v23, (uint64_t)v5, v6, a1, a2, (uint64_t)a3);
LABEL_16:
    swift_release();
    swift_release();
    goto LABEL_17;
  }
  type metadata accessor for FMIPLostModeItemAction(0);
  uint64_t v24 = swift_dynamicCastClass();
  if (v24)
  {
    uint64_t v25 = v24;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1D43679CC(v25, v5, v6, a1, a2, a3);
    goto LABEL_16;
  }
  type metadata accessor for FMIPRemoveItemAction(0);
  uint64_t v26 = swift_dynamicCastClass();
  if (v26)
  {
    uint64_t v27 = v26;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1D43686DC(v27, (uint64_t)v5, v6, a1, a2, (uint64_t)a3);
    goto LABEL_16;
  }
  type metadata accessor for FMIPNotifyItemAction(0);
  uint64_t v28 = swift_dynamicCastClass();
  if (v28)
  {
    uint64_t v29 = v28;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1D436A610(v29, (uint64_t)v5, v6, a1, a2, (uint64_t)a3);
    goto LABEL_16;
  }
  type metadata accessor for FMIPFirmwareUpdateAction();
  uint64_t v30 = swift_dynamicCastClass();
  if (!v30)
  {
    uint64_t v32 = sub_1D44698F8();
    os_log_type_t v33 = sub_1D446A038();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = a1;
      uint64_t v35 = v6;
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_1D4271000, v32, v33, "FMIPItemActionsController: cannot map action to request", v36, 2u);
      int v37 = v36;
      uint64_t v6 = v35;
      a1 = v34;
      MEMORY[0x1D9447730](v37, -1, -1);
    }

    LOBYTE(v42) = 0;
    sub_1D43694E4();
    uint64_t v38 = (void *)swift_allocError();
    *uint64_t v39 = 6;
    sub_1D437BB34((char *)&v42, 0, v38, v6, a1, a2);

    goto LABEL_18;
  }
  uint64_t v31 = v30;
  swift_retain();
  sub_1D436486C(v31, (uint64_t)sub_1D4369664, (uint64_t)v19);
LABEL_17:
  swift_release();
LABEL_18:
  swift_release();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_release();
}

uint64_t sub_1D437BB34(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t *, uint64_t, void *))
{
  char v9 = *a1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  char v10 = v9;
  uint64_t v11 = sub_1D4469928();
  sub_1D42D7FAC(v11, (uint64_t)qword_1EBD83228);
  id v12 = a3;
  id v13 = a3;
  uint64_t v14 = sub_1D44698F8();
  os_log_type_t v15 = sub_1D446A038();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v26 = v24;
    *(_DWORD *)uint64_t v16 = 136315394;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    uint64_t v17 = sub_1D446A158();
    sub_1D42CB9EC(v17, v18, &v26);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    *(_WORD *)(v16 + 12) = 2048;
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v14, v15, "FMIPManager: performed item action with error?: %s status?: %ld", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v24, -1, -1);
    uint64_t v19 = v16;
    char v10 = v9;
    MEMORY[0x1D9447730](v19, -1, -1);

    if (!a2) {
      goto LABEL_9;
    }
  }
  else
  {

    if (!a2) {
      goto LABEL_9;
    }
  }
  if (!*(void *)(a2 + 16))
  {
    sub_1D42D5DA0(&qword_1EA6C9E70);
    uint64_t v20 = *(void *)(type metadata accessor for FMIPItem() - 8);
    unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1D446E050;
    sub_1D42CA6F0(a5 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, v22 + v21, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D4292774(v22, "FMIPManager: removeItems %@", (uint64_t)&unk_1F2C0BCA8, (uint64_t)sub_1D438A240, (uint64_t)&unk_1F2C0BCC0);
    swift_bridgeObjectRelease();
  }
LABEL_9:
  LOBYTE(v26) = v10;
  return a6(&v26, a2, a3);
}

void FMIPManager.perform(action:completion:)(uint64_t a1, uint64_t (*a2)(uint64_t *, uint64_t, void *), uint64_t a3)
{
  uint64_t v54 = a2;
  uint64_t v5 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v5 - 8);
  char v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D4469688();
  MEMORY[0x1F4188790](v8);
  if (*(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemActionsController))
  {
    uint64_t v52 = v7;
    uint64_t v53 = v10;
    unint64_t v50 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v11 = qword_1EBD80068;
    swift_retain();
    if (v11 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1D4469928();
    uint64_t v13 = sub_1D42D7FAC(v12, (uint64_t)qword_1EBD83228);
    swift_retain_n();
    uint64_t v51 = v13;
    uint64_t v14 = sub_1D44698F8();
    os_log_type_t v15 = sub_1D446A038();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v49 = v8;
      uint64_t v18 = v17;
      uint64_t v56 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      uint64_t v19 = FMIPPrewarmAction.debugDescription.getter();
      uint64_t v55 = sub_1D42CB9EC(v19, v20, &v56);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v14, v15, "FMIPManager: perform item action %s", v16, 0xCu);
      swift_arrayDestroy();
      uint64_t v21 = v18;
      uint64_t v8 = v49;
      MEMORY[0x1D9447730](v21, -1, -1);
      MEMORY[0x1D9447730](v16, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v24 = v53;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v54;
    *(void *)(v25 + 24) = a3;
    uint64_t v26 = swift_retain_n();
    uint64_t v27 = (void (**)(char *, uint64_t, uint64_t))MEMORY[0x1D9446F50](v26);
    type metadata accessor for FMIPPrewarmConnectAction();
    uint64_t v28 = swift_dynamicCastClass();
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v53 = v27;
      uint64_t v30 = *(void *)(v28 + 16);
      uint64_t v31 = *(void *)(v28 + 24);
      swift_retain();
      uint64_t v32 = (uint64_t)v52;
      sub_1D4469628();
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v24[6])(v32, 1, v8) == 1)
      {
        sub_1D4276C3C(v32, (uint64_t *)&unk_1EBD7E930);
        os_log_type_t v33 = sub_1D44698F8();
        os_log_type_t v34 = sub_1D446A038();
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v35 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v35 = 0;
          _os_log_impl(&dword_1D4271000, v33, v34, "FMIPItemActionsController: cannot connect with an invalid identifier", v35, 2u);
          MEMORY[0x1D9447730](v35, -1, -1);
        }

        LOBYTE(v56) = 4;
        sub_1D42D5DA0(&qword_1EBD80060);
        uint64_t v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = xmmword_1D446E050;
        *(void *)(v36 + 32) = v30;
        *(void *)(v36 + 40) = v31;
        sub_1D43694E4();
        int v37 = (void *)swift_allocError();
        unsigned char *v38 = 0;
        swift_bridgeObjectRetain();
        sub_1D437C540((char *)&v56, v36, v37, v54);

        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v41 = (uint64_t)v50;
        v24[4](v50, v32, v8);
        uint64_t v42 = v24;
        uint64_t v43 = (void *)swift_allocObject();
        v43[2] = sub_1D4388500;
        v43[3] = v25;
        v43[4] = v29;
        swift_retain();
        swift_retain();
        sub_1D435D8C4(v41, 1, (void (*)(void))sub_1D4388548, (uint64_t)v43);
        swift_release();
        ((void (*)(uint64_t, uint64_t))v42[1])(v41, v8);
        swift_release();
      }
      uint64_t v27 = v53;
    }
    else
    {
      type metadata accessor for FMIPPrewarmDisconnectAction();
      uint64_t v39 = swift_dynamicCastClass();
      if (v39)
      {
        uint64_t v40 = v39;
        swift_retain();
        swift_retain();
        sub_1D4367034(v40, v54);
        swift_release();
        swift_release();
      }
      else
      {
        uint64_t v44 = sub_1D44698F8();
        os_log_type_t v45 = sub_1D446A018();
        if (os_log_type_enabled(v44, v45))
        {
          uint64_t v46 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v46 = 0;
          _os_log_impl(&dword_1D4271000, v44, v45, "FMIPItemGroupAction: cannot map action to request", v46, 2u);
          MEMORY[0x1D9447730](v46, -1, -1);
        }

        LOBYTE(v56) = 0;
        sub_1D43694E4();
        uint64_t v47 = (void *)swift_allocError();
        *uint64_t v48 = 6;
        sub_1D437C540((char *)&v56, 0, v47, v54);
      }
    }
    swift_release();
    swift_release_n();
    swift_release();
  }
  else
  {
    LOBYTE(v56) = 0;
    sub_1D43694E4();
    uint64_t v22 = (void *)swift_allocError();
    unsigned char *v23 = 11;
    v54(&v56, 0, v22);
  }
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t *, uint64_t, void *);
  unint64_t v15;
  unint64_t v16;
  void *v17;
  unsigned char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void *v26;
  unsigned char *v27;
  uint64_t v28;
  uint64_t v29;

  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemActionsController);
  if (v6)
  {
    char v7 = qword_1EBD80068;
    swift_retain();
    if (v7 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1D4469928();
    sub_1D42D7FAC(v8, (uint64_t)qword_1EBD83228);
    swift_retain_n();
    uint64_t v9 = sub_1D44698F8();
    char v10 = sub_1D446A038();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v29 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      swift_retain();
      uint64_t v13 = FMIPItemGroupAction.description.getter();
      uint64_t v28 = a3;
      uint64_t v14 = a2;
      uint64_t v16 = v15;
      swift_release();
      sub_1D42CB9EC(v13, v16, &v29);
      sub_1D446A188();
      swift_release_n();
      a2 = v14;
      a3 = v28;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v9, v10, "FMIPManager: perform item group action %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v12, -1, -1);
      MEMORY[0x1D9447730](v11, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v19 = swift_retain_n();
    unint64_t v20 = (void *)MEMORY[0x1D9446F50](v19);
    type metadata accessor for FMIPRemoveItemGroupAction(0);
    uint64_t v21 = swift_dynamicCastClass();
    if (v21)
    {
      uint64_t v22 = v21;
      swift_retain();
      swift_retain();
      sub_1D4368E94(v22, v6, a2, a3);
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v23 = sub_1D44698F8();
      uint64_t v24 = sub_1D446A038();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v25 = 0;
        _os_log_impl(&dword_1D4271000, v23, v24, "FMIPItemGroupAction: cannot map action to request", v25, 2u);
        MEMORY[0x1D9447730](v25, -1, -1);
      }

      LOBYTE(v29) = 0;
      sub_1D43694E4();
      uint64_t v26 = (void *)swift_allocError();
      *uint64_t v27 = 6;
      sub_1D437CB14((char *)&v29, 0, v26, a2);
    }
    swift_release();
    swift_release_n();
  }
  else
  {
    LOBYTE(v29) = 0;
    sub_1D43694E4();
    uint64_t v17 = (void *)swift_allocError();
    *uint64_t v18 = 11;
    a2(&v29, 0, v17);
  }
}

uint64_t sub_1D437C540(char *a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t *, uint64_t, void *))
{
  char v7 = *a1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D4469928();
  sub_1D42D7FAC(v8, (uint64_t)qword_1EBD83228);
  id v9 = a3;
  id v10 = a3;
  uint64_t v11 = sub_1D44698F8();
  os_log_type_t v12 = sub_1D446A038();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v21 = a2;
    uint64_t v13 = swift_slowAlloc();
    char v20 = v7;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = v14;
    *(_DWORD *)uint64_t v13 = 136446466;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    uint64_t v15 = sub_1D446A158();
    sub_1D42CB9EC(v15, v16, &v22);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2048;
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v11, v12, "FMIPManager: performed item action with error?: %{public}s status?: %ld", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    uint64_t v17 = v14;
    char v7 = v20;
    MEMORY[0x1D9447730](v17, -1, -1);
    uint64_t v18 = v13;
    a2 = v21;
    MEMORY[0x1D9447730](v18, -1, -1);
  }
  else
  {
  }
  LOBYTE(v22) = v7;
  return a4(&v22, a2, a3);
}

uint64_t sub_1D437CB14(char *a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t *, uint64_t, void *))
{
  char v7 = *a1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D4469928();
  sub_1D42D7FAC(v8, (uint64_t)qword_1EBD83228);
  id v9 = a3;
  id v10 = a3;
  uint64_t v11 = sub_1D44698F8();
  os_log_type_t v12 = sub_1D446A038();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v21 = a2;
    uint64_t v13 = swift_slowAlloc();
    char v20 = v7;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    uint64_t v15 = sub_1D446A158();
    sub_1D42CB9EC(v15, v16, &v22);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2048;
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v11, v12, "FMIPManager: performed item group action with error?: %s status?: %ld", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    uint64_t v17 = v14;
    char v7 = v20;
    MEMORY[0x1D9447730](v17, -1, -1);
    uint64_t v18 = v13;
    a2 = v21;
    MEMORY[0x1D9447730](v18, -1, -1);
  }
  else
  {
  }
  LOBYTE(v22) = v7;
  return a4(&v22, a2, a3);
}

void FMIPManager.perform(action:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

{
  sub_1D42EFF40(a1, a2, a3);
}

{
  sub_1D42EF180(a1, a2, a3);
}

uint64_t FMIPManager.perform(action:completion:)(uint64_t a1, void (*a2)(void, void, void), uint64_t a3)
{
  return sub_1D42ECA88(a1, a2, a3);
}

uint64_t FMIPManager.perform(action:completion:)(uint64_t a1, uint64_t (*a2)(uint64_t *, void), uint64_t a3)
{
  return sub_1D42EC7C8(a1, a2, a3);
}

uint64_t FMIPManager.perform(action:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D42F0260(a1, a2, a3);
}

Swift::Void __swiftcall FMIPManager.updateLastLocationStatus(enabled:)(Swift::Bool enabled)
{
  BOOL v1 = enabled;
  uint64_t v2 = sub_1D4469618();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EBD83228);
  char v7 = sub_1D44698F8();
  os_log_type_t v8 = sub_1D446A038();
  BOOL v9 = os_log_type_enabled(v7, v8);
  BOOL v29 = v1;
  if (v9)
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v28 = v2;
    *(_DWORD *)id v10 = 136315138;
    uint64_t v30 = v11;
    uint64_t aBlock = 0;
    unint64_t v32 = 0xE000000000000000;
    sub_1D4469C08();
    swift_bridgeObjectRelease();
    uint64_t aBlock = sub_1D42CB9EC(aBlock, v32, &v30);
    uint64_t v2 = v28;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v7, v8, "FMIPManager: updateLastLocationStatus enabled?: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v11, -1, -1);
    MEMORY[0x1D9447730](v10, -1, -1);
  }

  os_log_type_t v12 = self;
  uint64_t v13 = (void *)sub_1D4469B08();
  uint64_t v14 = (void *)sub_1D4469B08();
  uint64_t v15 = (char *)objc_msgSend(v12, sel_integerForKey_inDomain_, v13, v14);

  unint64_t v16 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1D4469608();
    uint64_t v17 = (void *)sub_1D4469B08();
    uint64_t v18 = (void *)sub_1D4469B08();
    objc_msgSend(v12, sel_setInteger_forKey_inDomain_, v16, v17, v18);

    uint64_t v19 = (void *)sub_1D4469578();
    char v20 = (void *)sub_1D4469B08();
    uint64_t v21 = (void *)sub_1D4469B08();
    objc_msgSend(v12, sel_setDate_forKey_inDomain_, v19, v20, v21);

    uint64_t v22 = (void *)sub_1D4469B08();
    uint64_t v23 = (void *)sub_1D4469B08();
    BOOL v24 = v29;
    objc_msgSend(v12, sel_setBool_forKey_inDomain_, v24, v22, v23);

    id v25 = objc_msgSend(self, sel_sharedInstance);
    uint64_t v35 = sub_1D437D31C;
    uint64_t v36 = 0;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v32 = 1107296256;
    os_log_type_t v33 = sub_1D42E1B08;
    os_log_type_t v34 = &unk_1F2C0B1C0;
    uint64_t v26 = _Block_copy(&aBlock);
    objc_msgSend(v25, sel_setLowBatteryLocateEnabled_withCompletion_, v24, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_1D437D31C(void *a1)
{
  if (a1)
  {
    id v2 = a1;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1D4469928();
    sub_1D42D7FAC(v3, (uint64_t)qword_1EBD83228);
    id v4 = a1;
    id v5 = a1;
    oslog = sub_1D44698F8();
    os_log_type_t v6 = sub_1D446A038();
    if (os_log_type_enabled(oslog, v6))
    {
      char v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v12 = v8;
      *(_DWORD *)char v7 = 136315138;
      swift_getErrorValue();
      uint64_t v9 = sub_1D446A7D8();
      sub_1D42CB9EC(v9, v10, &v12);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, oslog, v6, "FMIPManager: updateLastLocationStatus error setting low battery state in FMIP: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v8, -1, -1);
      MEMORY[0x1D9447730](v7, -1, -1);
    }
    else
    {
    }
  }
}

void FMIPManager.isCompanion(completion:)(uint64_t a1, uint64_t a2)
{
  id v5 = *(void **)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_ownerSession);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  v8[4] = sub_1D4388554;
  v8[5] = v6;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_1D437410C;
  v8[3] = &unk_1F2C0B210;
  char v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_activeCompanionWithCompletion_, v7);
  _Block_release(v7);
}

void FMIPManager.handle(url:completion:)(uint64_t a1, void (*a2)(char *, void *), uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D4469928();
  sub_1D42D7FAC(v8, (uint64_t)qword_1EBD83228);
  uint64_t v9 = sub_1D44698F8();
  os_log_type_t v10 = sub_1D446A038();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_1D4271000, v9, v10, "FMIPManager: handle URL", v11, 2u);
    MEMORY[0x1D9447730](v11, -1, -1);
  }

  uint64_t v12 = *(void **)(v4 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_urlHandler);
  uint64_t v13 = (void *)MEMORY[0x1D9446F50]();
  sub_1D436C77C(a1, a2, a3, v12);
}

uint64_t sub_1D437D754(uint64_t a1, uint64_t a2)
{
  uint64_t v91 = sub_1D4469958();
  uint64_t v4 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  uint64_t v90 = (char *)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1D44699B8();
  uint64_t v6 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  uint64_t v88 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D42D5DA0(&qword_1EBD7D920);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v76 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D42D5DA0(&qword_1EBD7D928);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (void *)((char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  unint64_t v16 = (void *)((char *)v66 - v15);
  uint64_t v17 = type metadata accessor for FMIPDevice();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v20 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v83 = (uint64_t)v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v95 = a1;
  char v96 = (void *)((char *)v66 - v21);
  uint64_t v74 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager;
  uint64_t v22 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager);
  uint64_t result = swift_beginAccess();
  uint64_t v68 = *(void *)(a2 + 16);
  if (!v68) {
    return result;
  }
  uint64_t v24 = *(void *)(v22 + 80);
  uint64_t v25 = v9;
  unint64_t v26 = *(void *)(v24 + 16);
  uint64_t v81 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue;
  uint64_t v27 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v28 = (v27 + 32) & ~v27;
  uint64_t v67 = a2 + v28;
  uint64_t v84 = *(void *)(v18 + 72);
  uint64_t v73 = v28;
  uint64_t v75 = v24 + v28;
  uint64_t v92 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v25 + 48);
  uint64_t v93 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  uint64_t v87 = &v100;
  uint64_t v86 = (void (**)(char *, uint64_t))(v4 + 8);
  unint64_t v85 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v80 = (v27 + 24) & ~v27;
  uint64_t v79 = v80 + v19;
  uint64_t v78 = v27 | 7;
  swift_bridgeObjectRetain();
  v66[1] = a2;
  swift_bridgeObjectRetain();
  uint64_t v29 = 0;
  uint64_t v82 = v14;
  uint64_t v30 = v96;
  uint64_t v77 = v24;
  unint64_t v94 = v26;
  while (2)
  {
    uint64_t v69 = v29 + 1;
    sub_1D42CA6F0(v67 + v84 * v29, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v31 = 0;
    while (1)
    {
      if (v31 == v94)
      {
        uint64_t v40 = 1;
        unint64_t v31 = v94;
      }
      else
      {
        if (v31 >= *(void *)(v77 + 16))
        {
          __break(1u);
LABEL_34:
          __break(1u);
          return result;
        }
        uint64_t v41 = (uint64_t)&v76[*(int *)(v8 + 48)];
        sub_1D42CA6F0(v75 + v31 * v84, v41, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v42 = (uint64_t)v14 + *(int *)(v8 + 48);
        *uint64_t v14 = v31;
        sub_1D42CAAD0(v41, v42, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v40 = 0;
        ++v31;
      }
      (*v93)(v14, v40, 1, v8);
      sub_1D4276C98((uint64_t)v14, (uint64_t)v16, &qword_1EBD7D928);
      if ((*v92)(v16, 1, v8) == 1) {
        break;
      }
      unint64_t v43 = *v16;
      uint64_t v44 = (uint64_t *)((char *)v16 + *(int *)(v8 + 48));
      uint64_t v46 = *v96;
      uint64_t v45 = v96[1];
      uint64_t v48 = *v44;
      uint64_t v47 = v44[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D42CA8E8((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      if (v46 == v48 && v45 == v47)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v51 = v96;
        if ((v43 & 0x8000000000000000) != 0) {
          goto LABEL_6;
        }
LABEL_20:
        uint64_t v52 = *(void *)(v95 + v74);
        swift_beginAccess();
        if (v43 < *(void *)(*(void *)(v52 + 80) + 16))
        {
          swift_beginAccess();
          unint64_t v53 = *(void *)(v52 + 80);
          swift_retain();
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v52 + 80) = v53;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1D439948C(v53);
            unint64_t v53 = result;
            *(void *)(v52 + 80) = result;
          }
          if (v43 >= *(void *)(v53 + 16)) {
            goto LABEL_34;
          }
          sub_1D438AFE4((uint64_t)v51, v53 + v73 + v43 * v84);
          uint64_t v54 = *(void *)(v52 + 80);
          swift_endAccess();
          if (*(unsigned char *)(v52 + 24) == 1 && (uint64_t v55 = *(void *)(v52 + 328)) != 0)
          {
            uint64_t v56 = qword_1EBD80068;
            swift_retain();
            swift_bridgeObjectRetain();
            if (v56 != -1) {
              swift_once();
            }
            uint64_t v57 = sub_1D4469928();
            sub_1D42D7FAC(v57, (uint64_t)qword_1EBD83228);
            uint64_t v58 = sub_1D44698F8();
            os_log_type_t v59 = sub_1D446A038();
            if (os_log_type_enabled(v58, v59))
            {
              uint64_t v60 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v60 = 0;
              _os_log_impl(&dword_1D4271000, v58, v59, "FMDiskIO: save to disk", v60, 2u);
              MEMORY[0x1D9447730](v60, -1, -1);
            }

            uint64_t v72 = *(void *)(v55 + 16);
            uint64_t v61 = swift_allocObject();
            *(void *)(v61 + 16) = v55;
            *(void *)(v61 + 24) = v54;
            uint64_t v102 = sub_1D438C260;
            uint64_t v103 = v61;
            uint64_t aBlock = MEMORY[0x1E4F143A8];
            uint64_t v99 = 1107296256;
            unint64_t v100 = sub_1D42BD950;
            unint64_t v101 = &unk_1F2C0BFB8;
            uint64_t v62 = _Block_copy(&aBlock);
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v63 = v88;
            sub_1D4469988();
            uint64_t v97 = MEMORY[0x1E4FBC860];
            sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
            uint64_t v71 = v54;
            sub_1D42D5DA0(&qword_1EBD7FD78);
            sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
            uint64_t v70 = v55;
            uint64_t v64 = v90;
            uint64_t v65 = v91;
            sub_1D446A1F8();
            MEMORY[0x1D9446420](0, v63, v64, v62);
            _Block_release(v62);
            (*v86)(v64, v65);
            (*v85)(v63, v89);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            uint64_t v51 = v96;
          }
          else
          {
            swift_release();
          }
        }
LABEL_6:
        uint64_t v32 = v95;
        uint64_t v33 = v83;
        sub_1D42CA6F0((uint64_t)v51, v83, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v34 = swift_allocObject();
        *(void *)(v34 + 16) = v32;
        sub_1D42CAAD0(v33, v34 + v80, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v102 = sub_1D438AF38;
        uint64_t v103 = v34;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v99 = 1107296256;
        unint64_t v100 = sub_1D42BD950;
        unint64_t v101 = &unk_1F2C0BF68;
        uint64_t v35 = _Block_copy(&aBlock);
        swift_retain();
        uint64_t v36 = v88;
        sub_1D4469988();
        uint64_t v97 = MEMORY[0x1E4FBC860];
        sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
        sub_1D42D5DA0(&qword_1EBD7FD78);
        sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
        int v37 = v90;
        uint64_t v38 = v91;
        sub_1D446A1F8();
        MEMORY[0x1D9446420](0, v36, v37, v35);
        _Block_release(v35);
        (*v86)(v37, v38);
        uint64_t v39 = v36;
        uint64_t v14 = v82;
        (*v85)(v39, v89);
        uint64_t result = swift_release();
      }
      else
      {
        char v50 = sub_1D446A758();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v50)
        {
          uint64_t v51 = v96;
          if ((v43 & 0x8000000000000000) != 0) {
            goto LABEL_6;
          }
          goto LABEL_20;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v30 = v96;
    sub_1D42CA8E8((uint64_t)v96, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v29 = v69;
    if (v69 != v68) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D437E328(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v4);
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 40))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D437E3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v91 = sub_1D4469958();
  uint64_t v4 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  uint64_t v90 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1D44699B8();
  unint64_t v85 = *(void (***)(char *, uint64_t))(v89 - 8);
  MEMORY[0x1F4188790](v89);
  uint64_t v88 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EBD7D920);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v76 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D42D5DA0(&qword_1EBD7D928);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (unint64_t *)((char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (unint64_t *)((char *)&v65 - v14);
  uint64_t v72 = type metadata accessor for FMIPDevice();
  uint64_t v16 = *(void *)(v72 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = MEMORY[0x1F4188790](v72);
  uint64_t v83 = (uint64_t)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (uint64_t *)((char *)&v65 - v19);
  uint64_t v95 = a1;
  uint64_t v74 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager;
  uint64_t v21 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager);
  uint64_t result = swift_beginAccess();
  uint64_t v67 = *(void *)(a2 + 16);
  if (!v67) {
    return result;
  }
  uint64_t v23 = *(void *)(v21 + 80);
  unint64_t v94 = *(void *)(v23 + 16);
  uint64_t v81 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue;
  uint64_t v24 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v25 = (v24 + 32) & ~v24;
  uint64_t v66 = a2 + v25;
  uint64_t v84 = *(void *)(v16 + 72);
  uint64_t v73 = v25;
  uint64_t v75 = v23 + v25;
  uint64_t v92 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v93 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v87 = &v100;
  uint64_t v86 = (void (**)(char *, uint64_t))(v4 + 8);
  ++v85;
  uint64_t v80 = (v24 + 24) & ~v24;
  uint64_t v79 = v80 + v17;
  uint64_t v78 = v24 | 7;
  swift_bridgeObjectRetain();
  uint64_t v65 = a2;
  swift_bridgeObjectRetain();
  uint64_t v26 = 0;
  uint64_t v82 = v13;
  char v96 = v20;
  uint64_t v77 = v23;
  while (2)
  {
    uint64_t v68 = v26 + 1;
    sub_1D42CA6F0(v66 + v84 * v26, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    swift_bridgeObjectRetain();
    unint64_t v27 = 0;
    while (1)
    {
      if (v27 == v94)
      {
        uint64_t v36 = 1;
        unint64_t v27 = v94;
      }
      else
      {
        if (v27 >= *(void *)(v77 + 16))
        {
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          uint64_t result = sub_1D446A4D8();
          __break(1u);
          return result;
        }
        uint64_t v37 = (uint64_t)&v76[*(int *)(v7 + 48)];
        sub_1D42CA6F0(v75 + v27 * v84, v37, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v38 = (uint64_t)v13 + *(int *)(v7 + 48);
        *uint64_t v13 = v27;
        sub_1D42CAAD0(v37, v38, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v36 = 0;
        ++v27;
      }
      (*v93)(v13, v36, 1, v7);
      sub_1D4276C98((uint64_t)v13, (uint64_t)v15, &qword_1EBD7D928);
      if ((*v92)(v15, 1, v7) == 1) {
        break;
      }
      unint64_t v39 = *v15;
      uint64_t v40 = (uint64_t *)((char *)v15 + *(int *)(v7 + 48));
      uint64_t v42 = *v96;
      uint64_t v41 = v96[1];
      uint64_t v44 = *v40;
      uint64_t v43 = v40[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D42CA8E8((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      if (v42 == v44 && v41 == v43)
      {
        swift_bridgeObjectRelease_n();
        if ((v39 & 0x8000000000000000) != 0) {
          goto LABEL_6;
        }
LABEL_20:
        uint64_t v47 = *(void *)(v95 + v74);
        swift_beginAccess();
        if (v39 < *(void *)(*(void *)(v47 + 80) + 16))
        {
          swift_beginAccess();
          unint64_t v48 = *(void *)(v47 + 80);
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v47 + 80) = v48;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v48 = sub_1D439948C(v48);
            *(void *)(v47 + 80) = v48;
          }
          uint64_t v50 = v84;
          unint64_t v51 = *(void *)(v48 + 16);
          if (v39 >= v51) {
            goto LABEL_40;
          }
          unint64_t v52 = v51 - 1;
          unint64_t v53 = v48 + v73 + v39 * v84;
          sub_1D42CA8E8(v53, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
          if ((uint64_t)(v52 - v39) < 0) {
            goto LABEL_41;
          }
          if (v50 > 0 || v53 >= v53 + v50 + (v52 - v39) * v50)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v50)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          *(void *)(v48 + 16) = v52;
          *(void *)(v47 + 80) = v48;
          swift_endAccess();
          if (*(unsigned char *)(v47 + 24))
          {
            uint64_t v54 = *(void *)(v47 + 328);
            if (v54)
            {
              uint64_t v55 = qword_1EBD80068;
              swift_retain();
              swift_bridgeObjectRetain();
              if (v55 != -1) {
                swift_once();
              }
              uint64_t v56 = sub_1D4469928();
              sub_1D42D7FAC(v56, (uint64_t)qword_1EBD83228);
              uint64_t v57 = sub_1D44698F8();
              os_log_type_t v58 = sub_1D446A038();
              if (os_log_type_enabled(v57, v58))
              {
                os_log_type_t v59 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)os_log_type_t v59 = 0;
                _os_log_impl(&dword_1D4271000, v57, v58, "FMDiskIO: save to disk", v59, 2u);
                MEMORY[0x1D9447730](v59, -1, -1);
              }

              uint64_t v71 = *(void *)(v54 + 16);
              uint64_t v60 = swift_allocObject();
              *(void *)(v60 + 16) = v54;
              *(void *)(v60 + 24) = v48;
              uint64_t v102 = sub_1D42E3174;
              uint64_t v103 = v60;
              uint64_t aBlock = MEMORY[0x1E4F143A8];
              uint64_t v99 = 1107296256;
              unint64_t v100 = sub_1D42BD950;
              unint64_t v101 = &unk_1F2C0BEC8;
              uint64_t v70 = _Block_copy(&aBlock);
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v61 = v88;
              sub_1D4469988();
              uint64_t v97 = MEMORY[0x1E4FBC860];
              sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
              sub_1D42D5DA0(&qword_1EBD7FD78);
              sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
              uint64_t v62 = v90;
              uint64_t v69 = v54;
              uint64_t v63 = v91;
              sub_1D446A1F8();
              uint64_t v64 = v70;
              MEMORY[0x1D9446420](0, v61, v62, v70);
              _Block_release(v64);
              (*v86)(v62, v63);
              (*v85)(v61, v89);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
            }
          }
          swift_release();
        }
LABEL_6:
        uint64_t v28 = v95;
        uint64_t v29 = v83;
        sub_1D42CA6F0((uint64_t)v96, v83, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = v28;
        sub_1D42CAAD0(v29, v30 + v80, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v102 = sub_1D438A790;
        uint64_t v103 = v30;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v99 = 1107296256;
        unint64_t v100 = sub_1D42BD950;
        unint64_t v101 = &unk_1F2C0BE78;
        unint64_t v31 = _Block_copy(&aBlock);
        swift_retain();
        uint64_t v32 = v88;
        sub_1D4469988();
        uint64_t v97 = MEMORY[0x1E4FBC860];
        sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
        sub_1D42D5DA0(&qword_1EBD7FD78);
        sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
        uint64_t v33 = v90;
        uint64_t v34 = v91;
        sub_1D446A1F8();
        MEMORY[0x1D9446420](0, v32, v33, v31);
        _Block_release(v31);
        (*v86)(v33, v34);
        uint64_t v35 = v32;
        uint64_t v13 = v82;
        (*v85)(v35, v89);
        swift_release();
      }
      else
      {
        char v46 = sub_1D446A758();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v46)
        {
          if ((v39 & 0x8000000000000000) != 0) {
            goto LABEL_6;
          }
          goto LABEL_20;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = v96;
    sub_1D42CA8E8((uint64_t)v96, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v26 = v68;
    if (v68 != v67) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D437F048(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v4);
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D437F0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v108 = sub_1D42D5DA0(&qword_1EBD7E818);
  uint64_t v4 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v98 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_1D4469958();
  uint64_t v6 = *(void *)(v117 - 8);
  MEMORY[0x1F4188790](v117);
  uint64_t v116 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_1D44699B8();
  uint64_t v8 = *(void *)(v115 - 8);
  MEMORY[0x1F4188790](v115);
  unint64_t v114 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E820);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v120 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (unint64_t *)((char *)&v84 - v13);
  uint64_t v90 = type metadata accessor for FMIPItem();
  uint64_t v15 = *(void *)(v90 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v90);
  uint64_t v106 = (uint64_t)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v107 = (uint64_t)&v84 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v121 = (uint64_t)&v84 - v20;
  uint64_t v96 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager;
  uint64_t v21 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager);
  swift_beginAccess();
  uint64_t v88 = *(void *)(a2 + 16);
  if (v88)
  {
    uint64_t v22 = *(void *)(v21 + 280);
    uint64_t v23 = v4;
    unint64_t v24 = *(void *)(v22 + 16);
    uint64_t v104 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue;
    uint64_t v25 = *(unsigned __int8 *)(v15 + 80);
    uint64_t v26 = (v25 + 32) & ~v25;
    uint64_t v87 = a2 + v26;
    uint64_t v91 = v26;
    uint64_t v97 = v22 + v26;
    uint64_t v109 = *(void *)(v15 + 72);
    uint64_t v27 = v22;
    uint64_t v118 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v23 + 48);
    uint64_t v119 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    p_uint64_t aBlock = &aBlock;
    unint64_t v112 = &v126;
    uint64_t v86 = v6;
    uint64_t v111 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v85 = v8;
    uint64_t v110 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v103 = (v25 + 24) & ~v25;
    uint64_t v102 = v103 + v16;
    uint64_t v101 = v25 | 7;
    swift_bridgeObjectRetain();
    uint64_t v84 = a2;
    swift_bridgeObjectRetain();
    uint64_t v28 = 0;
    *(void *)&long long v29 = 136315394;
    long long v94 = v29;
    uint64_t v93 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v113 = a1;
    uint64_t v30 = v108;
    uint64_t v31 = v121;
    unint64_t v105 = v24;
    uint64_t v99 = v27;
    uint64_t v92 = v14;
LABEL_4:
    uint64_t v89 = v28 + 1;
    sub_1D42CA6F0(v87 + v109 * v28, v31, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    swift_bridgeObjectRetain();
    unint64_t v122 = 0;
    while (1)
    {
      unint64_t v39 = v122;
      if (v122 == v24)
      {
        uint64_t v40 = 1;
        unint64_t v41 = v24;
        uint64_t v42 = (unint64_t *)v120;
      }
      else
      {
        uint64_t v42 = (unint64_t *)v120;
        if (v122 >= *(void *)(v99 + 16))
        {
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          uint64_t result = sub_1D446A4D8();
          __break(1u);
          return result;
        }
        unint64_t v41 = v122 + 1;
        uint64_t v43 = (uint64_t)&v98[*(int *)(v30 + 48)];
        sub_1D42CA6F0(v97 + v122 * v109, v43, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v44 = (uint64_t)v42 + *(int *)(v30 + 48);
        *uint64_t v42 = v39;
        sub_1D42CAAD0(v43, v44, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v40 = 0;
      }
      (*v119)(v42, v40, 1, v30);
      sub_1D4276C98((uint64_t)v42, (uint64_t)v14, (uint64_t *)&unk_1EBD7E820);
      if ((*v118)(v14, 1, v30) == 1)
      {
        swift_bridgeObjectRelease();
        sub_1D42CA8E8(v31, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v28 = v89;
        if (v89 != v88) {
          goto LABEL_4;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v6 = v86;
        uint64_t v8 = v85;
        a1 = v113;
        goto LABEL_41;
      }
      unint64_t v122 = v41;
      unint64_t v45 = *v14;
      uint64_t v46 = (uint64_t)v14 + *(int *)(v30 + 48);
      uint64_t v48 = *(void *)(v31 + 352);
      uint64_t v47 = *(void *)(v31 + 360);
      uint64_t v50 = *(void *)(v46 + 352);
      uint64_t v49 = *(void *)(v46 + 360);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D42CA8E8(v46, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      if (v48 == v50 && v47 == v49) {
        break;
      }
      char v52 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = v121;
      if (v52)
      {
LABEL_19:
        if (qword_1EBD80068 != -1) {
          swift_once();
        }
        uint64_t v53 = sub_1D4469928();
        sub_1D42D7FAC(v53, (uint64_t)qword_1EBD83228);
        uint64_t v54 = v107;
        sub_1D42CA6F0(v31, v107, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v55 = sub_1D44698F8();
        os_log_type_t v56 = sub_1D446A038();
        if (os_log_type_enabled(v55, v56))
        {
          uint64_t v57 = swift_slowAlloc();
          uint64_t v58 = swift_slowAlloc();
          uint64_t aBlock = v58;
          *(_DWORD *)uint64_t v57 = v94;
          unint64_t v100 = v45;
          uint64_t v59 = FMIPItem.debugDescription.getter();
          uint64_t v123 = sub_1D42CB9EC(v59, v60, &aBlock);
          unint64_t v45 = v100;
          sub_1D446A188();
          swift_bridgeObjectRelease();
          sub_1D42CA8E8(v54, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          *(_WORD *)(v57 + 12) = 2048;
          uint64_t v123 = v45;
          sub_1D446A188();
          _os_log_impl(&dword_1D4271000, v55, v56, "FMIPManager: removeItems item removed %s at index %ld", (uint8_t *)v57, 0x16u);
          swift_arrayDestroy();
          uint64_t v61 = v58;
          uint64_t v14 = v92;
          MEMORY[0x1D9447730](v61, -1, -1);
          MEMORY[0x1D9447730](v57, -1, -1);
        }
        else
        {
          sub_1D42CA8E8(v54, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        }

        uint64_t v62 = v113;
        if ((v45 & 0x8000000000000000) == 0)
        {
          uint64_t v63 = *(void *)(v113 + v96);
          swift_beginAccess();
          if (v45 < *(void *)(*(void *)(v63 + 80) + 16))
          {
            swift_beginAccess();
            unint64_t v64 = *(void *)(v63 + 280);
            swift_retain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v63 + 280) = v64;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              unint64_t v64 = sub_1D43994A0(v64);
              *(void *)(v63 + 280) = v64;
            }
            uint64_t v66 = v109;
            unint64_t v67 = *(void *)(v64 + 16);
            if (v45 >= v67) {
              goto LABEL_43;
            }
            unint64_t v68 = v67 - 1;
            unint64_t v69 = v64 + v91 + v45 * v109;
            sub_1D42CA8E8(v69, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            if ((uint64_t)(v68 - v45) < 0) {
              goto LABEL_44;
            }
            if (v66 > 0 || v69 >= v69 + v66 + (v68 - v45) * v66)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v66)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            *(void *)(v64 + 16) = v68;
            *(void *)(v63 + 280) = v64;
            swift_endAccess();
            if ((*(unsigned char *)(v63 + 24) & 1) != 0 && (uint64_t v70 = *(void *)(v63 + 312)) != 0)
            {
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v71 = sub_1D44698F8();
              os_log_type_t v72 = sub_1D446A038();
              if (os_log_type_enabled(v71, v72))
              {
                uint64_t v73 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v73 = 0;
                _os_log_impl(&dword_1D4271000, v71, v72, "FMDiskIO: save to disk", v73, 2u);
                MEMORY[0x1D9447730](v73, -1, -1);
              }

              unint64_t v100 = *(void *)(v70 + 16);
              uint64_t v74 = swift_allocObject();
              *(void *)(v74 + 16) = v70;
              *(void *)(v74 + 24) = v64;
              uint64_t v128 = sub_1D438A6D4;
              uint64_t v129 = v74;
              uint64_t aBlock = MEMORY[0x1E4F143A8];
              uint64_t v125 = 1107296256;
              uint64_t v126 = sub_1D42BD950;
              uint64_t v127 = &unk_1F2C0BD88;
              uint64_t v75 = _Block_copy(&aBlock);
              swift_retain();
              swift_bridgeObjectRetain();
              char v76 = v114;
              sub_1D4469988();
              uint64_t v123 = MEMORY[0x1E4FBC860];
              sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
              sub_1D42D5DA0(&qword_1EBD7FD78);
              sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
              uint64_t v77 = v116;
              uint64_t v78 = v117;
              sub_1D446A1F8();
              MEMORY[0x1D9446420](0, v76, v77, v75);
              _Block_release(v75);
              (*v111)(v77, v78);
              (*v110)(v76, v115);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              uint64_t v62 = v113;
            }
            else
            {
              swift_release();
            }
          }
        }
        uint64_t v32 = v121;
        uint64_t v33 = v106;
        sub_1D42CA6F0(v121, v106, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v34 = swift_allocObject();
        *(void *)(v34 + 16) = v62;
        sub_1D42CAAD0(v33, v34 + v103, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v128 = sub_1D438A67C;
        uint64_t v129 = v34;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v125 = 1107296256;
        uint64_t v126 = sub_1D42BD950;
        uint64_t v127 = &unk_1F2C0BD38;
        uint64_t v35 = _Block_copy(&aBlock);
        swift_retain();
        uint64_t v36 = v114;
        sub_1D4469988();
        uint64_t v123 = MEMORY[0x1E4FBC860];
        sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
        sub_1D42D5DA0(&qword_1EBD7FD78);
        sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
        uint64_t v37 = v116;
        uint64_t v38 = v117;
        uint64_t v31 = v32;
        sub_1D446A1F8();
        MEMORY[0x1D9446420](0, v36, v37, v35);
        _Block_release(v35);
        (*v111)(v37, v38);
        (*v110)(v36, v115);
        swift_release();
        uint64_t v30 = v108;
        unint64_t v24 = v105;
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v31 = v121;
    goto LABEL_19;
  }
LABEL_41:
  uint64_t v128 = sub_1D438A248;
  uint64_t v129 = a1;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v125 = 1107296256;
  uint64_t v126 = sub_1D42BD950;
  uint64_t v127 = &unk_1F2C0BCE8;
  uint64_t v79 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v80 = v114;
  sub_1D4469988();
  uint64_t v123 = MEMORY[0x1E4FBC860];
  sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  uint64_t v81 = v116;
  uint64_t v82 = v117;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v80, v81, v79);
  _Block_release(v79);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v81, v82);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v80, v115);
  return swift_release();
}

uint64_t sub_1D4380118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v4);
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 128))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D43801B4(uint64_t a1)
{
  sub_1D42D5DA0((uint64_t *)&unk_1EA6CA520);
  sub_1D446A0A8();
  uint64_t v2 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  if (MEMORY[0x1D9447840](v2))
  {
    uint64_t v3 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 112))(a1, v6, ObjectType, v3);
    swift_unknownObjectRelease();
  }
  *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemCounts) = v6;
  swift_bridgeObjectRelease();
  return sub_1D4374EC8();
}

uint64_t FMIPManager.debugDescription.getter()
{
  return 60;
}

uint64_t FMIPManager.hash(into:)()
{
  return sub_1D4469AD8();
}

uint64_t static FMIPManager.== infix(_:_:)()
{
  return sub_1D4469658();
}

uint64_t sub_1D4380410()
{
  return 60;
}

uint64_t sub_1D43804E0()
{
  return sub_1D4469658();
}

void sub_1D43804FC(char a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1D4469928();
    sub_1D42D7FAC(v3, (uint64_t)qword_1EBD83228);
    oslog = sub_1D44698F8();
    os_log_type_t v4 = sub_1D446A038();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_1D4271000, oslog, v4, "FMIPManager: error getting status of lowBatteryLocateEnabled", v5, 2u);
      MEMORY[0x1D9447730](v5, -1, -1);
    }
  }
  else if ((a1 & 1) == 0)
  {
    uint64_t v7 = a3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
    swift_beginAccess();
    if (MEMORY[0x1D9447840](v7))
    {
      uint64_t v8 = *(void *)(v7 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 88))(a3, ObjectType, v8);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1D438066C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v4);
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 64))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D4380708(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v4);
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    long long v8 = *(_OWORD *)(a2 + 48);
    void v10[2] = *(_OWORD *)(a2 + 32);
    v10[3] = v8;
    v10[4] = *(_OWORD *)(a2 + 64);
    uint64_t v11 = *(void *)(a2 + 80);
    long long v9 = *(_OWORD *)(a2 + 16);
    v10[0] = *(_OWORD *)a2;
    v10[1] = v9;
    (*(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t))(v6 + 56))(a1, v10, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D43807C4(uint64_t a1)
{
  uint64_t v2 = sub_1D4469958();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D44699B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  BOOL v10 = sub_1D438E5D4();
  uint64_t result = swift_release();
  if (v10)
  {
    v13[0] = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue);
    aBlock[4] = sub_1D42E7900;
    aBlock[5] = a1;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1D42BD950;
    uint64_t aBlock[3] = &unk_1F2C0B400;
    uint64_t v12 = _Block_copy(aBlock);
    swift_retain();
    sub_1D4469988();
    v13[1] = MEMORY[0x1E4FBC860];
    sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v9, v5, v12);
    _Block_release(v12);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D4380A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469958();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D44699B8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  BOOL v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager);
  uint64_t v12 = *(void *)(v11 + 304);
  swift_retain();
  swift_bridgeObjectRetain();
  char v13 = sub_1D43F0E64(a2, v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    return swift_release();
  }
  else
  {
    swift_beginAccess();
    unint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1D439B9AC(v15, a2);
    swift_bridgeObjectRelease();
    *(void *)(v11 + 80) = v16;
    swift_bridgeObjectRelease();
    *(void *)(v11 + 304) = a2;
    swift_bridgeObjectRetain();
    swift_release();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1D42E7900;
    aBlock[5] = a1;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1D42BD950;
    uint64_t aBlock[3] = &unk_1F2C0B770;
    uint64_t v17 = _Block_copy(aBlock);
    swift_retain();
    sub_1D4469988();
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v10, v6, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return swift_release();
  }
}

uint64_t sub_1D4380E58(unsigned __int8 *a1, uint64_t a2)
{
  return sub_1D4382280(a1, a2, "FMIPManager: appending realtime location %{private}s", (uint64_t)&unk_1F2C0B618, (uint64_t)sub_1D4389EEC, (uint64_t)&unk_1F2C0B630);
}

uint64_t sub_1D4380E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v46 = a1;
  uint64_t v9 = type metadata accessor for FMIPUnknownItem();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9 - 8);
  char v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v45 = (uint64_t)&v41 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v41 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v41 - v19;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v21 = (unint64_t *)(a4 + 16);
  uint64_t v22 = sub_1D4469928();
  sub_1D42D7FAC(v22, (uint64_t)qword_1EBD83228);
  uint64_t v47 = a2;
  sub_1D42CA6F0(a2, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  swift_bridgeObjectRetain_n();
  uint64_t v23 = sub_1D44698F8();
  os_log_type_t v24 = sub_1D446A038();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v43 = v18;
    uint64_t v26 = v25;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v42 = v10;
    uint64_t v28 = v27;
    v49[0] = v27;
    *(_DWORD *)uint64_t v26 = 136315394;
    unint64_t v41 = v21;
    sub_1D4469688();
    uint64_t v44 = a5;
    sub_1D42C61DC((unint64_t *)&qword_1EA6C92C0, MEMORY[0x1E4F27990]);
    uint64_t v29 = sub_1D446A6D8();
    uint64_t v48 = sub_1D42CB9EC(v29, v30, v49);
    uint64_t v21 = v41;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42CA8E8((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    *(_WORD *)(v26 + 12) = 2048;
    uint64_t v31 = *(void *)(a3 + 16);
    swift_bridgeObjectRelease();
    uint64_t v48 = v31;
    a5 = v44;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v23, v24, "FMIPManager: unknownItems shifting completed for item %s, locations: %ld", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    uint64_t v32 = v28;
    uint64_t v10 = v42;
    MEMORY[0x1D9447730](v32, -1, -1);
    uint64_t v33 = v26;
    uint64_t v18 = v43;
    MEMORY[0x1D9447730](v33, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1D42CA8E8((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);

    swift_bridgeObjectRelease();
  }
  uint64_t v34 = sub_1D4373C50(v46);
  uint64_t v35 = v45;
  sub_1D42CA6F0(v47, v45, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  FMIPUnknownItem.init(unknownItem:locations:)(v35, v34, (uint64_t)v18);
  sub_1D42CA6F0((uint64_t)v18, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  swift_beginAccess();
  unint64_t v36 = *v21;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v21 = v36;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v36 = sub_1D43B03C0(0, *(void *)(v36 + 16) + 1, 1, v36);
    *uint64_t v21 = v36;
  }
  unint64_t v39 = *(void *)(v36 + 16);
  unint64_t v38 = *(void *)(v36 + 24);
  if (v39 >= v38 >> 1)
  {
    unint64_t v36 = sub_1D43B03C0(v38 > 1, v39 + 1, 1, v36);
    *uint64_t v21 = v36;
  }
  *(void *)(v36 + 16) = v39 + 1;
  sub_1D42CAAD0((uint64_t)v13, v36+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v39, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  swift_endAccess();
  objc_msgSend(a5, sel_signal);
  return sub_1D42CA8E8((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
}

uint64_t sub_1D438135C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v6);
  if (result)
  {
    uint64_t v8 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    swift_beginAccess();
    uint64_t v10 = *(void *)(a2 + 16);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 136);
    swift_bridgeObjectRetain();
    v11(a1, v10, ObjectType, v8);
    swift_bridgeObjectRelease();
    uint64_t result = swift_unknownObjectRelease();
  }
  if (a3) {
    return a3(result);
  }
  return result;
}

uint64_t sub_1D4381458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v4);
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 152))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D43814F4(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7E918);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v8);
  if (result)
  {
    uint64_t v10 = *(void *)(v8 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = sub_1D4469498();
    char v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    v13(v7, 1, 1, v12);
    v13(v5, 1, 1, v12);
    type metadata accessor for FMIPAlert();
    uint64_t v14 = (_OWORD *)swift_allocObject();
    v14[1] = 0u;
    v14[2] = 0u;
    v14[3] = 0u;
    uint64_t v15 = (void *)((char *)v14 + OBJC_IVAR____TtC8FMIPCore9FMIPAlert_cancelButtonLabel);
    *uint64_t v15 = 0;
    v15[1] = 0;
    sub_1D4276C98((uint64_t)v7, (uint64_t)v14 + OBJC_IVAR____TtC8FMIPCore9FMIPAlert_okButtonURL, &qword_1EBD7E918);
    sub_1D4276C98((uint64_t)v5, (uint64_t)v14 + OBJC_IVAR____TtC8FMIPCore9FMIPAlert_cancelButtonURL, &qword_1EBD7E918);
    *((unsigned char *)v14 + OBJC_IVAR____TtC8FMIPCore9FMIPAlert_type) = 4;
    (*(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t))(v10 + 72))(a1, v14, ObjectType, v10);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D4381704(uint64_t a1, uint64_t a2)
{
  return sub_1D427F2E4(a1, a2, (uint64_t)&unk_1F2C0BAC8, (uint64_t)sub_1D438A0F8, (uint64_t)&unk_1F2C0BAE0);
}

uint64_t sub_1D438172C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469958();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D44699B8();
  uint64_t v9 = *(void **)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager;
  swift_retain();
  LOBYTE(a2) = sub_1D438E8A8(a2);
  uint64_t result = swift_release();
  if (a2)
  {
    uint64_t v14 = *(void *)(*(void *)(a1 + v12) + 240);
    unint64_t v38 = v9;
    uint64_t v15 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue);
    uint64_t v40 = v12;
    uint64_t v41 = v15;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a1;
    *(void *)(v16 + 24) = v14;
    uint64_t v49 = sub_1D438A12C;
    uint64_t v50 = v16;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v46 = 1107296256;
    v33[1] = &v47;
    uint64_t v47 = sub_1D42BD950;
    uint64_t v48 = &unk_1F2C0BB30;
    uint64_t v17 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1D4469988();
    uint64_t v44 = MEMORY[0x1E4FBC860];
    uint64_t v18 = sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    uint64_t v19 = v7;
    uint64_t v20 = sub_1D42D5DA0(&qword_1EBD7FD78);
    uint64_t v21 = sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    uint64_t v36 = v20;
    uint64_t v22 = v19;
    uint64_t v35 = v21;
    uint64_t v37 = v18;
    sub_1D446A1F8();
    uint64_t v23 = v19;
    os_log_type_t v24 = v38;
    MEMORY[0x1D9446420](0, v11, v23, v17);
    _Block_release(v17);
    uint64_t v25 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v39 = v5 + 8;
    uint64_t v34 = v25;
    v25(v22, v4);
    unint64_t v38 = (void *)v24[1];
    ((void (*)(char *, uint64_t))v38)(v11, v8);
    swift_release();
    swift_beginAccess();
    swift_retain();
    unint64_t v26 = swift_bridgeObjectRetain();
    char v27 = sub_1D429BDD4(v26, 1);
    swift_release();
    swift_bridgeObjectRelease();
    if (v27)
    {
      uint64_t v49 = sub_1D42E7900;
      uint64_t v50 = a1;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v46 = 1107296256;
      uint64_t v47 = sub_1D42BD950;
      uint64_t v48 = &unk_1F2C0BB80;
      uint64_t v28 = _Block_copy(&aBlock);
      swift_retain();
      sub_1D4469988();
      uint64_t v43 = MEMORY[0x1E4FBC860];
      sub_1D446A1F8();
      MEMORY[0x1D9446420](0, v11, v22, v28);
      _Block_release(v28);
      v34(v22, v4);
      ((void (*)(char *, uint64_t))v38)(v11, v8);
      swift_release();
    }
    uint64_t v29 = *(void *)(a1 + v40);
    swift_beginAccess();
    uint64_t v30 = *(void *)(v29 + 280);
    swift_bridgeObjectRetain();
    swift_retain();
    char v31 = sub_1D4298AA4(v30, 3, 1);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v31)
    {
      uint64_t v49 = sub_1D42E7AA0;
      uint64_t v50 = a1;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v46 = 1107296256;
      uint64_t v47 = sub_1D42BD950;
      uint64_t v48 = &unk_1F2C0BB58;
      uint64_t v32 = _Block_copy(&aBlock);
      swift_retain();
      sub_1D4469988();
      uint64_t v42 = MEMORY[0x1E4FBC860];
      sub_1D446A1F8();
      MEMORY[0x1D9446420](0, v11, v22, v32);
      _Block_release(v32);
      v34(v22, v4);
      ((void (*)(char *, uint64_t))v38)(v11, v8);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1D4381D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v4);
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 168))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D4381DA0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469958();
  uint64_t v17 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1D44699B8();
  uint64_t v7 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[36];
  swift_beginAccess();
  uint64_t v10 = a1[10];
  v14[1] = *(void *)(a2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue);
  v14[2] = a2;
  aBlock[4] = sub_1D438BD1C;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C0C3F0;
  uint64_t v11 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D4469988();
  uint64_t v18 = MEMORY[0x1E4FBC860];
  sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v9, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
  swift_release();
  swift_beginAccess();
  uint64_t v12 = a1[35];
  swift_bridgeObjectRetain();
  sub_1D42C73B8(v10, v12, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43820C0(uint64_t a1)
{
  uint64_t v2 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  if (MEMORY[0x1D9447840](v2))
  {
    uint64_t v3 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_1D42D5DA0(&qword_1EA6CA4F0);
    sub_1D446A0A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 152))(a1, v8, ObjectType, v3);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t result = MEMORY[0x1D9447840](v2);
  if (result)
  {
    uint64_t v6 = *(void *)(v2 + 8);
    uint64_t v7 = swift_getObjectType();
    sub_1D42D5DA0(&qword_1EBD7D8C0);
    sub_1D446A0A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, v8, v7, v6);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D4382250(unsigned __int8 *a1, uint64_t a2)
{
  return sub_1D4382280(a1, a2, "FMIPManager: appending realtime location to devices %{private}s", (uint64_t)&unk_1F2C0BC08, (uint64_t)sub_1D438A1C8, (uint64_t)&unk_1F2C0BC20);
}

uint64_t sub_1D4382280(unsigned __int8 *a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v50 = a6;
  uint64_t v47 = a4;
  uint64_t v48 = a5;
  uint64_t v42 = a3;
  uint64_t v8 = sub_1D44699B8();
  uint64_t v43 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v45 = sub_1D4469958();
  uint64_t v52 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v49 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v12 = *a1;
  int v44 = a1[1];
  int v53 = a1[2];
  int v46 = a1[3];
  char v13 = (void *)*((void *)a1 + 1);
  uint64_t v14 = (uint64_t (*)(uint64_t))*((void *)a1 + 2);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1D4469928();
  sub_1D42D7FAC(v15, (uint64_t)qword_1EBD83228);
  id v16 = v13;
  uint64_t v17 = sub_1D44698F8();
  os_log_type_t v18 = sub_1D446A038();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v41 = v8;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v54 = v21;
    uint64_t v39 = a2;
    *(_DWORD *)uint64_t v20 = 136380675;
    uint64_t v40 = v10;
    LOBYTE(aBlock) = v12;
    int v38 = v12;
    char v22 = v44;
    BYTE1(aBlock) = v44;
    BYTE2(aBlock) = v53;
    char v23 = v46;
    BYTE3(aBlock) = v46;
    uint64_t v56 = (uint64_t)v16;
    uint64_t v57 = v14;
    uint64_t v24 = FMIPLocation.debugDescription.getter();
    uint64_t aBlock = sub_1D42CB9EC(v24, v25, &v54);
    uint64_t v10 = v40;
    a2 = v39;
    sub_1D446A188();

    swift_bridgeObjectRelease();
    os_log_type_t v26 = v18;
    char v27 = v23;
    char v28 = v22;
    char v29 = v38;
    _os_log_impl(&dword_1D4271000, v17, v26, v42, v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v21, -1, -1);
    uint64_t v30 = v20;
    uint64_t v8 = v41;
    MEMORY[0x1D9447730](v30, -1, -1);
  }
  else
  {

    char v27 = v46;
    char v29 = v12;
    char v28 = v44;
  }
  uint64_t v31 = v51;
  uint64_t v32 = v49;
  sub_1D4469948();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v31;
  *(void *)(v33 + 24) = a2;
  *(unsigned char *)(v33 + 32) = v29;
  *(unsigned char *)(v33 + 33) = v28;
  *(unsigned char *)(v33 + 34) = v53;
  *(unsigned char *)(v33 + 35) = v27;
  *(void *)(v33 + 40) = v16;
  *(void *)(v33 + 48) = v14;
  uint64_t v59 = v48;
  uint64_t v60 = v33;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v56 = 1107296256;
  uint64_t v57 = sub_1D42BD950;
  uint64_t v58 = v50;
  uint64_t v34 = _Block_copy(&aBlock);
  id v35 = v16;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v10, v32, v34);
  _Block_release(v34);
  (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v10, v8);
  (*(void (**)(unsigned char *, uint64_t))(v52 + 8))(v32, v45);
  return swift_release();
}

void sub_1D43826E4(uint64_t a1, uint64_t a2, int a3, void *a4, double a5)
{
  id v72 = a4;
  uint64_t v73 = a2;
  int v71 = a3;
  uint64_t v7 = sub_1D4469958();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D44699B8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v70 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMIPItem();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  os_log_type_t v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v62 - v19;
  uint64_t v74 = a1;
  char v21 = *(unsigned char *)(*(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_locationController)
                 + OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_limitedPrecision);
  if (qword_1EA6C8FA8 != -1) {
    swift_once();
  }
  if (!(v21 & 1 | ((byte_1EA6CA2B8 & 1) == 0)))
  {
    uint64_t v62 = v12;
    unint64_t v69 = v10;
    uint64_t v64 = v8;
    uint64_t v65 = v7;
    uint64_t v22 = v73;
    uint64_t v68 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager;
    uint64_t v23 = *(void *)(v74 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager);
    uint64_t v25 = *(void *)(v23 + 184);
    uint64_t v24 = *(void *)(v23 + 192);
    uint64_t v26 = MEMORY[0x1E4FBC860];
    aBlock[0] = MEMORY[0x1E4FBC860];
    uint64_t v27 = *(void *)(v73 + 16);
    uint64_t v66 = v24;
    swift_bridgeObjectRetain();
    uint64_t v67 = v25;
    uint64_t v28 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27)
    {
      uint64_t v63 = v11;
      unint64_t v29 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v30 = *(void *)(v15 + 72);
      uint64_t v31 = v28 + v29;
      uint64_t v32 = MEMORY[0x1E4FBC860];
      do
      {
        sub_1D42CA6F0(v31, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        if ((v20[*(int *)(v14 + 76)] & 0x40) != 0)
        {
          sub_1D42CAAD0((uint64_t)v20, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1D4337258(0, *(void *)(v32 + 16) + 1, 1);
          }
          uint64_t v32 = aBlock[0];
          unint64_t v34 = *(void *)(aBlock[0] + 16);
          unint64_t v33 = *(void *)(aBlock[0] + 24);
          if (v34 >= v33 >> 1)
          {
            sub_1D4337258(v33 > 1, v34 + 1, 1);
            uint64_t v32 = aBlock[0];
          }
          *(void *)(v32 + 16) = v34 + 1;
          sub_1D42CAAD0((uint64_t)v18, v32 + v29 + v34 * v30, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        }
        else
        {
          sub_1D42CA8E8((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        }
        v31 += v30;
        --v27;
      }
      while (v27);
      uint64_t v35 = aBlock[0];
      uint64_t v11 = v63;
    }
    else
    {
      uint64_t v35 = v26;
    }
    swift_bridgeObjectRelease();
    unsigned int v36 = v71 & 0xFF010101;
    id v37 = v72;
    uint64_t v38 = sub_1D438830C(v35, v36, v37, a5);
    swift_release();

    uint64_t v39 = v69;
    if (*(void *)(v38 + 16))
    {
      sub_1D42D5DA0(&qword_1EA6CA340);
      uint64_t v40 = sub_1D446A4C8();
    }
    else
    {
      uint64_t v40 = MEMORY[0x1E4FBC868];
    }
    aBlock[0] = v40;
    uint64_t v41 = swift_bridgeObjectRetain();
    sub_1D4385C78(v41, 1, aBlock);
    swift_bridgeObjectRelease();
    uint64_t v42 = aBlock[0];
    uint64_t v43 = v66;
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1D4383710(v42, v43);
    LOBYTE(v42) = sub_1D42786DC(v44, v43);
    swift_bridgeObjectRelease();
    if (v42)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_1D4469928();
      sub_1D42D7FAC(v45, (uint64_t)qword_1EBD83228);
      int v46 = sub_1D44698F8();
      os_log_type_t v47 = sub_1D446A038();
      if (!os_log_type_enabled(v46, v47)) {
        goto LABEL_34;
      }
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      uint64_t v49 = "FMIPManager: ignoring location update since no changes were detected.";
LABEL_33:
      _os_log_impl(&dword_1D4271000, v46, v47, v49, v48, 2u);
      MEMORY[0x1D9447730](v48, -1, -1);
LABEL_34:

      return;
    }
    swift_retain();
    char v50 = sub_1D4278240(v44, v67);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v50 & 1) == 0)
    {
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_1D4469928();
      sub_1D42D7FAC(v58, (uint64_t)qword_1EBD83228);
      int v46 = sub_1D44698F8();
      os_log_type_t v47 = sub_1D446A038();
      if (!os_log_type_enabled(v46, v47)) {
        goto LABEL_34;
      }
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      uint64_t v49 = "FMIPManager: ignoring location update since data manager said so.";
      goto LABEL_33;
    }
    swift_beginAccess();
    uint64_t v51 = qword_1EBD80068;
    swift_bridgeObjectRetain();
    if (v51 != -1) {
      swift_once();
    }
    uint64_t v52 = sub_1D4469928();
    sub_1D42D7FAC(v52, (uint64_t)qword_1EBD83228);
    swift_bridgeObjectRetain();
    int v53 = sub_1D44698F8();
    os_log_type_t v54 = sub_1D446A038();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v55 = 138412290;
      uint64_t v57 = sub_1D4469D58();
      aBlock[0] = v57;
      sub_1D446A188();
      *uint64_t v56 = v57;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D4271000, v53, v54, "FMIPManager: items changed after realtime location %@", v55, 0xCu);
      sub_1D42D5DA0(&qword_1EBD7E830);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v56, -1, -1);
      MEMORY[0x1D9447730](v55, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    aBlock[4] = sub_1D42E7AA0;
    aBlock[5] = v74;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1D42BD950;
    uint64_t aBlock[3] = &unk_1F2C0B658;
    uint64_t v59 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v60 = v70;
    sub_1D4469988();
    uint64_t v75 = MEMORY[0x1E4FBC860];
    sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    uint64_t v61 = v65;
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v60, v39, v59);
    _Block_release(v59);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v39, v61);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v11);
    swift_release();
  }
}

double sub_1D438307C@<D0>(uint64_t a1@<X0>, unsigned int a2@<W1>, void *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v71 = a4;
  uint64_t v9 = type metadata accessor for FMIPProductType();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(int *)(type metadata accessor for FMIPItem() + 96);
  uint64_t v70 = a1;
  uint64_t v13 = a1 + v12;
  FMIPProductType.productInformation.getter((uint64_t)v73);
  uint64_t v14 = v74;
  if (v74)
  {
    uint64_t v15 = v75;
    sub_1D42C26F4(v73, v74);
    double v16 = (*(double (**)(uint64_t, uint64_t))(v15 + 56))(v14, v15);
    sub_1D42BEC64((uint64_t)v73);
  }
  else
  {
    sub_1D4276C3C((uint64_t)v73, &qword_1EA6CA348);
    double v16 = 10.0;
  }
  double v17 = 20.0;
  if (v16 <= 20.0) {
    double v17 = v16;
  }
  double v18 = fmax(v17, 4.0);
  sub_1D42CA6F0(v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
  if (swift_getEnumCaseMultiPayload() >= 2)
  {
    sub_1D4276C3C((uint64_t)v11, &qword_1EA6C97A0);
    uint64_t v19 = 3;
  }
  else
  {
    sub_1D42CA8E8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
    uint64_t v19 = 1;
  }
  uint64_t v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E638]), sel_initWithBeaconType_transmitPower_, v19, v18);
  char v21 = self;
  sub_1D42D5DA0(&qword_1EA6CA350);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1D4471F00;
  *(void *)(v22 + 32) = a3;
  v73[0] = v22;
  sub_1D4469D98();
  sub_1D4275AD0(0, (unint64_t *)&qword_1EA6CA358);
  id v23 = a3;
  uint64_t v24 = (void *)sub_1D4469D58();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v21, sel_applyFilterToLocationObservations_options_, v24, v20);

  if (v25)
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1D4469928();
    sub_1D42D7FAC(v26, (uint64_t)qword_1EBD83228);
    id v27 = v23;
    id v28 = v25;
    unint64_t v29 = v27;
    uint64_t v30 = v28;
    uint64_t v31 = sub_1D44698F8();
    os_log_type_t v32 = sub_1D446A038();
    int v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v68 = v20;
      uint64_t v35 = v34;
      uint64_t v36 = swift_slowAlloc();
      uint64_t v66 = v31;
      id v37 = (void *)v36;
      *(_DWORD *)uint64_t v35 = 138412802;
      unsigned int v69 = a2;
      v73[0] = v29;
      uint64_t v38 = v29;
      int v67 = v33;
      uint64_t v39 = v38;
      sub_1D446A188();
      *id v37 = v29;

      *(_WORD *)(v35 + 12) = 2112;
      v73[0] = v30;
      uint64_t v40 = v30;
      sub_1D446A188();
      uint64_t v41 = v37;
      uint64_t v42 = v66;
      v41[1] = v25;

      a2 = v69;
      *(_WORD *)(v35 + 22) = 2048;
      *(double *)uint64_t v73 = v16;
      sub_1D446A188();
      _os_log_impl(&dword_1D4271000, v42, (os_log_type_t)v67, "FMIPManager: Calculated TX adjusted location for %@: %@, txPower: %f.", (uint8_t *)v35, 0x20u);
      sub_1D42D5DA0(&qword_1EBD7E830);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v41, -1, -1);
      uint64_t v43 = v35;
      uint64_t v20 = v68;
      MEMORY[0x1D9447730](v43, -1, -1);
    }
    else
    {

      uint64_t v42 = v29;
    }
    uint64_t v52 = v71;
    int v53 = HIWORD(a2) & 1;
    int v54 = (a2 >> 8) & 1;
    char v55 = a2 & 1;

    uint64_t v56 = *(void *)(v70 + 360);
    *(void *)uint64_t v52 = *(void *)(v70 + 352);
    *(void *)(v52 + 8) = v56;
    char v72 = HIBYTE(a2);
    swift_bridgeObjectRetain();
    uint64_t v57 = v30;
  }
  else
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_1D4469928();
    sub_1D42D7FAC(v44, (uint64_t)qword_1EBD83228);
    uint64_t v45 = v23;
    int v46 = sub_1D44698F8();
    os_log_type_t v47 = sub_1D446A038();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = (void *)swift_slowAlloc();
      unsigned int v69 = a2;
      *(_DWORD *)uint64_t v48 = 138412290;
      v73[0] = v45;
      uint64_t v49 = v20;
      char v50 = v45;
      a2 = v69;
      sub_1D446A188();
      uint64_t v51 = v68;
      *uint64_t v68 = v45;

      uint64_t v20 = v49;
      _os_log_impl(&dword_1D4271000, v46, v47, "FMIPManager: Failed to adjust location for %@ - using default one.", v48, 0xCu);
      sub_1D42D5DA0(&qword_1EBD7E830);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v51, -1, -1);
      MEMORY[0x1D9447730](v48, -1, -1);
    }
    else
    {

      int v46 = v45;
    }
    uint64_t v52 = v71;
    int v53 = HIWORD(a2) & 1;
    int v54 = (a2 >> 8) & 1;
    char v55 = a2 & 1;

    uint64_t v58 = *(void *)(v70 + 360);
    *(void *)uint64_t v52 = *(void *)(v70 + 352);
    *(void *)(v52 + 8) = v58;
    char v72 = HIBYTE(a2);
    uint64_t v59 = v45;
    swift_bridgeObjectRetain();
    uint64_t v57 = v59;
  }
  sub_1D42B7188(v57, &v72, v55, v54, v53, (uint64_t)v73, a5);

  char v60 = BYTE1(v73[0]);
  char v61 = BYTE2(v73[0]);
  char v62 = BYTE3(v73[0]);
  uint64_t v63 = v73[1];
  double result = *(double *)&v73[2];
  *(unsigned char *)(v52 + 16) = v73[0];
  *(unsigned char *)(v52 + 17) = v60;
  *(unsigned char *)(v52 + 18) = v61;
  *(unsigned char *)(v52 + 19) = v62;
  *(void *)(v52 + 24) = v63;
  *(double *)(v52 + 32) = result;
  return result;
}

uint64_t sub_1D4383710(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1D4385A10(a1, (uint64_t)sub_1D43876A0, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1D438379C(uint64_t a1, uint64_t a2, int a3, void *a4, double a5)
{
  LODWORD(v7) = a3;
  uint64_t v138 = a1;
  uint64_t v139 = a2;
  uint64_t v8 = sub_1D4469958();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = sub_1D44699B8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v136 = (char *)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FMIPDevice();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t result = MEMORY[0x1F4188790](v20);
  id v27 = (char *)&v110 - v26;
  if (qword_1EA6C8FA8 != -1)
  {
LABEL_55:
    uint64_t v120 = (uint64_t *)v23;
    uint64_t v119 = v24;
    uint64_t v118 = (uint64_t *)v25;
    uint64_t v109 = v22;
    uint64_t result = swift_once();
    uint64_t v22 = v109;
    uint64_t v25 = (uint64_t)v118;
    uint64_t v24 = v119;
    uint64_t v23 = (uint64_t)v120;
  }
  if (byte_1EA6CA2B8 != 1) {
    return result;
  }
  uint64_t v135 = v13;
  uint64_t v28 = *(void *)(*(void *)(v138 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager) + 192);
  unint64_t v29 = *(void *)(v139 + 16);
  if (!v29)
  {
    swift_bridgeObjectRetain();
    goto LABEL_52;
  }
  uint64_t v117 = v22;
  uint64_t v118 = (uint64_t *)v25;
  uint64_t v119 = v24;
  uint64_t v120 = (uint64_t *)v23;
  uint64_t v121 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager;
  id v134 = a4;
  unint64_t v122 = v11;
  unint64_t v123 = v12;
  uint64_t v124 = v9;
  uint64_t v125 = v8;
  int v133 = *(unsigned __int8 *)(*(void *)(v138 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_locationController)
                            + OBJC_IVAR____TtC8FMIPCore22FMIPLocationController_limitedPrecision);
  a4 = (void *)(v139 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)));
  uint64_t v115 = &v142;
  unsigned int v129 = (v7 >> 8) & 1;
  int v130 = v7 & 1;
  unsigned int v131 = v7;
  unsigned int v128 = WORD1(v7) & 1;
  uint64_t v132 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  unint64_t v30 = 0;
  uint64_t v7 = -(uint64_t)v29;
  uint64_t v137 = MEMORY[0x1E4FBC868];
  uint64_t v11 = (char *)&unk_1EBD80000;
  *(void *)&long long v31 = 136315394;
  long long v116 = v31;
  uint64_t v114 = MEMORY[0x1E4FBC840] + 8;
  unint64_t v12 = v29;
  uint64_t v13 = v135;
LABEL_5:
  if (v30 <= v12) {
    unint64_t v32 = v12;
  }
  else {
    unint64_t v32 = v30;
  }
  uint64_t v9 = -(uint64_t)v32;
  ++v30;
  do
  {
    if (v9 + v30 == 1)
    {
      __break(1u);
      goto LABEL_55;
    }
    sub_1D42CA6F0((uint64_t)a4 + *(void *)(v16 + 72) * (v30 - 1), (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if ((v27[217] & 4) != 0)
    {
      uint64_t v33 = *((void *)v11 + 13);
      unint64_t v127 = v12;
      if (v133)
      {
        if (v33 != -1) {
          swift_once();
        }
        uint64_t v34 = sub_1D4469928();
        sub_1D42D7FAC(v34, (uint64_t)qword_1EBD83228);
        uint64_t v35 = v119;
        sub_1D42CA6F0((uint64_t)v27, v119, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        id v36 = v134;
        id v37 = sub_1D44698F8();
        os_log_type_t v38 = sub_1D446A038();
        int v39 = v38;
        if (os_log_type_enabled(v37, v38))
        {
          unsigned int v111 = HIBYTE(v131);
          uint64_t v40 = swift_slowAlloc();
          os_log_t v113 = v37;
          uint64_t v41 = v40;
          uint64_t v126 = swift_slowAlloc();
          os_log_t v140 = v126;
          *(_DWORD *)uint64_t v41 = v116;
          LODWORD(v112) = v39;
          uint64_t v42 = *(void *)(v35 + 64);
          unint64_t v43 = *(void *)(v35 + 72);
          swift_bridgeObjectRetain();
          *(void *)(v41 + 4) = sub_1D42CB9EC(v42, v43, (uint64_t *)&v140);
          uint64_t v13 = v135;
          swift_bridgeObjectRelease();
          sub_1D42CA8E8(v35, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
          *(_WORD *)(v41 + 12) = 2080;
          LOBYTE(aBlock) = v130;
          BYTE1(aBlock) = v129;
          BYTE2(aBlock) = v128;
          BYTE3(aBlock) = v111;
          uint64_t v142 = (uint64_t)v36;
          uint64_t v143 = *(uint64_t (**)(uint64_t))&a5;
          uint64_t v44 = FMIPLocation.debugDescription.getter();
          *(void *)(v41 + 14) = sub_1D42CB9EC(v44, v45, (uint64_t *)&v140);

          swift_bridgeObjectRelease();
          os_log_t v46 = v113;
          _os_log_impl(&dword_1D4271000, v113, (os_log_type_t)v112, "FMIPManager: trimming realtime location for \"%s\" because of coarse location %s", (uint8_t *)v41, 0x16u);
          uint64_t v47 = (uint64_t)v126;
          swift_arrayDestroy();
          MEMORY[0x1D9447730](v47, -1, -1);
          MEMORY[0x1D9447730](v41, -1, -1);
        }
        else
        {
          sub_1D42CA8E8(v35, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        }
        uint64_t v61 = *((void *)v27 + 2);
        uint64_t v62 = *((void *)v27 + 3);
        uint64_t v63 = v120;
        sub_1D42CA6F0((uint64_t)v27, (uint64_t)v120, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        if (v62)
        {
          uint64_t v64 = v62;
        }
        else
        {
          uint64_t v61 = *v63;
          uint64_t v64 = v63[1];
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRetain();
        sub_1D42CA8E8((uint64_t)v63, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v69 = v137;
        swift_bridgeObjectRetain();
        unint64_t v70 = sub_1D42C4FCC(v61, v64);
        char v72 = v71;
        swift_bridgeObjectRelease();
        if (v72)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t aBlock = v69;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1D43D8F64();
            uint64_t v69 = aBlock;
          }
          swift_bridgeObjectRelease();
          uint64_t v74 = *(void **)(*(void *)(v69 + 56) + 24 * v70 + 8);
          uint64_t v137 = v69;
          sub_1D43FD0D0(v70, v69);

          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        unint64_t v12 = v127;
        uint64_t v11 = (unsigned char *)&unk_1EBD80000;
LABEL_46:
        sub_1D42CA8E8((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v8 = 1;
        if (v7 + v30) {
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
        uint64_t v107 = v132;
        uint64_t v108 = v137;
LABEL_49:
        swift_bridgeObjectRetain();
        char v95 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t aBlock = v107;
        sub_1D4385A10(v108, (uint64_t)sub_1D43876A0, 0, v95, &aBlock);
        uint64_t v96 = aBlock;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v97 = *(void *)(*(void *)(v138 + v121) + 184);
        swift_bridgeObjectRetain();
        swift_retain();
        char v98 = sub_1D4278240(v96, v97);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v99 = v125;
        uint64_t v100 = v124;
        unint64_t v101 = v123;
        uint64_t v102 = v122;
        if (v98)
        {
          uint64_t v103 = v138;
          uint64_t v137 = *(void *)(v138 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue);
          uint64_t v104 = swift_allocObject();
          *(void *)(v104 + 16) = v139;
          *(void *)(v104 + 24) = v103;
          uint64_t v145 = sub_1D438A20C;
          uint64_t v146 = v104;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v142 = 1107296256;
          uint64_t v143 = sub_1D42BD950;
          uint64_t v144 = &unk_1F2C0BC70;
          unint64_t v105 = _Block_copy(&aBlock);
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v106 = v136;
          sub_1D4469988();
          os_log_t v140 = (os_log_t)MEMORY[0x1E4FBC860];
          sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
          sub_1D42D5DA0(&qword_1EBD7FD78);
          sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
          sub_1D446A1F8();
          MEMORY[0x1D9446420](0, v106, v102, v105);
          _Block_release(v105);
          (*(void (**)(char *, uint64_t))(v100 + 8))(v102, v99);
          (*(void (**)(char *, unint64_t))(v13 + 8))(v106, v101);
          return swift_release();
        }
        return result;
      }
      if (v33 != -1) {
        swift_once();
      }
      uint64_t v48 = sub_1D4469928();
      sub_1D42D7FAC(v48, (uint64_t)qword_1EBD83228);
      uint64_t v49 = v117;
      sub_1D42CA6F0((uint64_t)v27, v117, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      id v50 = v134;
      uint64_t v51 = sub_1D44698F8();
      os_log_type_t v52 = sub_1D446A038();
      LODWORD(v126) = v52;
      if (os_log_type_enabled(v51, v52))
      {
        unsigned int v111 = HIBYTE(v131);
        uint64_t v53 = swift_slowAlloc();
        os_log_t v113 = (os_log_t)swift_slowAlloc();
        os_log_t v140 = v113;
        *(_DWORD *)uint64_t v53 = v116;
        os_log_t v112 = v51;
        id v110 = v50;
        uint64_t v54 = *(void *)(v49 + 64);
        unint64_t v55 = *(void *)(v49 + 72);
        swift_bridgeObjectRetain();
        uint64_t aBlock = sub_1D42CB9EC(v54, v55, (uint64_t *)&v140);
        sub_1D446A188();
        swift_bridgeObjectRelease();
        sub_1D42CA8E8(v49, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        *(_WORD *)(v53 + 12) = 2080;
        LOBYTE(aBlock) = v130;
        BYTE1(aBlock) = v129;
        BYTE2(aBlock) = v128;
        BYTE3(aBlock) = v111;
        uint64_t v56 = v110;
        uint64_t v142 = (uint64_t)v110;
        uint64_t v143 = *(uint64_t (**)(uint64_t))&a5;
        uint64_t v57 = FMIPLocation.debugDescription.getter();
        uint64_t aBlock = sub_1D42CB9EC(v57, v58, (uint64_t *)&v140);
        sub_1D446A188();

        swift_bridgeObjectRelease();
        os_log_t v59 = v112;
        _os_log_impl(&dword_1D4271000, v112, (os_log_type_t)v126, "FMIPManager: using realtime location for \"%s\". Location: %s", (uint8_t *)v53, 0x16u);
        os_log_t v60 = v113;
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v60, -1, -1);
        MEMORY[0x1D9447730](v53, -1, -1);
      }
      else
      {
        sub_1D42CA8E8(v49, (uint64_t (*)(void))type metadata accessor for FMIPDevice);

        uint64_t v56 = v50;
      }
      uint64_t v66 = *((void *)v27 + 2);
      uint64_t v65 = *((void *)v27 + 3);
      int v67 = v118;
      sub_1D42CA6F0((uint64_t)v27, (uint64_t)v118, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v68 = v137;
      if (v65)
      {
        uint64_t v126 = v65;
      }
      else
      {
        uint64_t v66 = *v67;
        uint64_t v126 = v67[1];
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      sub_1D42CA8E8((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      os_log_t v113 = v56;
      char v75 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t aBlock = v68;
      unint64_t v77 = sub_1D42C4FCC(v66, (uint64_t)v126);
      uint64_t v78 = v68;
      uint64_t v79 = *(void *)(v68 + 16);
      BOOL v80 = (v76 & 1) == 0;
      uint64_t v81 = v79 + v80;
      if (__OFADD__(v79, v80))
      {
        __break(1u);
      }
      else
      {
        char v82 = v76;
        if (*(void *)(v78 + 24) >= v81)
        {
          if ((v75 & 1) == 0) {
            sub_1D43D8F64();
          }
        }
        else
        {
          sub_1D42C1798(v81, v75);
          unint64_t v83 = sub_1D42C4FCC(v66, (uint64_t)v126);
          if ((v82 & 1) != (v84 & 1))
          {
LABEL_58:
            sub_1D446A7A8();
            __break(1u);
            uint64_t result = swift_bridgeObjectRelease();
            __break(1u);
            return result;
          }
          unint64_t v77 = v83;
        }
        uint64_t v13 = v135;
        uint64_t v85 = (void *)aBlock;
        uint64_t v137 = aBlock;
        if (v82)
        {
          unsigned int v86 = HIBYTE(v131);
          uint64_t v87 = *(void *)(aBlock + 56) + 24 * v77;

          *(unsigned char *)uint64_t v87 = v130;
          *(unsigned char *)(v87 + 1) = v129;
          *(unsigned char *)(v87 + 2) = v128;
          *(unsigned char *)(v87 + 3) = v86;
          *(void *)(v87 + 8) = v113;
          *(double *)(v87 + 16) = a5;
          unint64_t v12 = v127;
          uint64_t v11 = (unsigned char *)&unk_1EBD80000;
LABEL_45:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_46;
        }
        unsigned int v88 = HIBYTE(v131);
        *(void *)(aBlock + 8 * (v77 >> 6) + 64) |= 1 << v77;
        uint64_t v89 = (uint64_t *)(v85[6] + 16 * v77);
        uint64_t v90 = (uint64_t)v126;
        uint64_t *v89 = v66;
        v89[1] = v90;
        uint64_t v91 = v85[7] + 24 * v77;
        *(unsigned char *)uint64_t v91 = v130;
        *(unsigned char *)(v91 + 1) = v129;
        *(unsigned char *)(v91 + 2) = v128;
        *(unsigned char *)(v91 + 3) = v88;
        *(void *)(v91 + 8) = v113;
        *(double *)(v91 + 16) = a5;
        uint64_t v92 = v85[2];
        BOOL v93 = __OFADD__(v92, 1);
        uint64_t v94 = v92 + 1;
        if (!v93)
        {
          v85[2] = v94;
          swift_bridgeObjectRetain();
          unint64_t v12 = v127;
          uint64_t v11 = (unsigned char *)&unk_1EBD80000;
          goto LABEL_45;
        }
      }
      __break(1u);
      goto LABEL_58;
    }
    sub_1D42CA8E8((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    ++v30;
  }
  while (v7 + v30 != 1);
  swift_bridgeObjectRelease();
  uint64_t v107 = v132;
  uint64_t v108 = v137;
  if (v8) {
    goto LABEL_49;
  }
LABEL_52:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43846C8(uint64_t a1, uint64_t a2)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D4469928();
  sub_1D42D7FAC(v3, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1D44698F8();
  os_log_type_t v5 = sub_1D446A038();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    type metadata accessor for FMIPDevice();
    uint64_t v13 = sub_1D4469D58();
    sub_1D446A188();
    *uint64_t v7 = v13;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v4, v5, "FMIPManager: devices changed after realtime location %@", v6, 0xCu);
    sub_1D42D5DA0(&qword_1EBD7E830);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v7, -1, -1);
    MEMORY[0x1D9447730](v6, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v8 = a2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v8);
  if (result)
  {
    uint64_t v10 = *(void *)(v8 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_1D42D5DA0(&qword_1EBD7D8C0);
    sub_1D446A0A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 32))(a2, v12, ObjectType, v10);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D4384928()
{
  void (*v25)(long long *__return_ptr, uint64_t);
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[2];
  uint64_t v47;
  unsigned char v48[40];
  long long v49[2];

  uint64_t v1 = v0;
  uint64_t v2 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D4469928();
  sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
  uint64_t v6 = sub_1D44698F8();
  os_log_type_t v7 = sub_1D446A038();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D4271000, v6, v7, "FMIPManager: resetDataDependantControllers", v8, 2u);
    MEMORY[0x1D9447730](v8, -1, -1);
  }

  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isDevicesSnapshotMode)) {
    int v9 = 1;
  }
  else {
    int v9 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isItemsSnapshotMode);
  }
  if (qword_1EA6C8F80 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1EA6CA2A8;
  id v11 = objc_msgSend(self, sel_mainBundle);
  id v12 = objc_msgSend(v11, sel_bundleIdentifier);

  if (v12)
  {
    uint64_t v13 = sub_1D4469B38();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0xE000000000000000;
  }
  int v16 = sub_1D43761C0(v13, v15, v10);
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration);
  unint64_t v45 = OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems;
  uint64_t v18 = *(void *)(v17 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_cacheDirectory);
  uint64_t v19 = *(void *)(v17 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_cacheDirectory + 8);
  *(void *)&v49[0] = *(void *)(v17 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems);
  uint64_t v20 = v17 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_preferredLocale;
  uint64_t v21 = sub_1D44696C8();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v4, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v4, 0, 1, v21);
  uint64_t v23 = *(void **)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataQueue);
  type metadata accessor for FMIPDataManager();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1D438D298(v18, v19, (uint64_t *)v49, (uint64_t)v4, v16 & (v9 ^ 1u), v9, v23);
  *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager) = v24;
  swift_retain();
  swift_release();
  uint64_t v25 = *(void (**)(long long *__return_ptr, uint64_t))(v17
                                                               + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_interactionControllerProvider);
  uint64_t v26 = swift_retain();
  v25(v49, v26);
  swift_release();
  id v27 = v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_interactionController;
  swift_beginAccess();
  sub_1D42BEC64(v27);
  sub_1D42E4A0C(v49, v27);
  swift_endAccess();
  if (*(unsigned char *)(v17 + v45))
  {
    sub_1D42A4D5C(v27, (uint64_t)v49);
    uint64_t v28 = objc_allocWithZone((Class)type metadata accessor for FMAPSConnectionHandler());
    unint64_t v29 = sub_1D42938D4(0xD00000000000001ELL, 0x80000001D4480A10, 0xD000000000000025, 0x80000001D447EB20, 0, 0);
    type metadata accessor for FMIPRefreshingController();
    swift_allocObject();
    *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_refreshingController) = sub_1D4295760((uint64_t)v49, v29);
    swift_release();
    unint64_t v30 = *(void **)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_ownerSession);
    sub_1D42A4D5C(v27, (uint64_t)v49);
    sub_1D42A3A74(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_authenticationUIProvider, (uint64_t)v48, &qword_1EBD7F828);
    type metadata accessor for FMIPDeviceActionsController();
    memset(v46, 0, sizeof(v46));
    uint64_t v47 = 0;
    swift_allocObject();
    *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_actionsController) = sub_1D42BB6B0(v30, (uint64_t)v49, (uint64_t)v48, (uint64_t)v46);
  }
  else
  {
    *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_refreshingController) = 0;
    swift_release();
    *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_actionsController) = 0;
  }
  swift_release();
  long long v31 = *(id *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_ownerSession);
  sub_1D42E4C38((uint64_t)v49);
  type metadata accessor for FMIPBeaconRefreshingController(0);
  swift_allocObject();
  unint64_t v32 = sub_1D42AAF00(v31, v49);
  uint64_t v33 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconRefreshingController;
  *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_beaconRefreshingController) = v32;
  swift_release();
  type metadata accessor for FMIPSafeLocationRefreshingController();
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = v31;
  id v36 = sub_1D427EAE0((uint64_t)v35, v34);
  id v37 = OBJC_IVAR____TtC8FMIPCore11FMIPManager_safeLocationRefreshingController;
  *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_safeLocationRefreshingController) = v36;
  swift_release();
  type metadata accessor for FMIPItemActionsController();
  swift_allocObject();
  swift_retain();
  *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_itemActionsController) = sub_1D428CAC8(v35, v24);
  swift_release();
  *(void *)(v24 + 40) = &off_1F2C0B318;
  swift_unknownObjectWeakAssign();
  swift_retain();
  sub_1D427F950();
  swift_release();
  swift_beginAccess();
  os_log_type_t v38 = *(void *)(v27 + 24);
  int v39 = *(void *)(v27 + 32);
  sub_1D42E1A94(v27, v38);
  uint64_t v40 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v39 + 16);
  uint64_t v41 = swift_retain();
  v40(v41, &off_1F2C0B2F8, v38, v39);
  swift_endAccess();
  swift_release();
  uint64_t v42 = *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_refreshingController);
  if (v42)
  {
    *(void *)(v42 + 40) = &off_1F2C0B238;
    swift_unknownObjectWeakAssign();
  }
  *(void *)(*(void *)(v1 + v33) + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_delegate + 8) = &off_1F2C0B278;
  swift_unknownObjectWeakAssign();
  *(void *)(*(void *)(v1 + v37) + 24) = &off_1F2C0B2E8;
  return swift_unknownObjectWeakAssign();
}

void sub_1D4385020(uint64_t a1)
{
  uint64_t v2 = sub_1D4469958();
  uint64_t v19 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D44699B8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  uint64_t v18 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[2] = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegateQueue);
  uint64_t v25 = sub_1D42E7900;
  uint64_t v26 = a1;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v22 = 1107296256;
  v16[3] = &v23;
  uint64_t v23 = sub_1D42BD950;
  uint64_t v24 = &unk_1F2C0BA40;
  int v9 = _Block_copy(&aBlock);
  swift_retain();
  sub_1D4469988();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  v16[1] = sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  v16[0] = sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v8, v4, v9);
  _Block_release(v9);
  uint64_t v10 = *(void (**)(char *, uint64_t))(v19 + 8);
  v19 += 8;
  v10(v4, v2);
  uint64_t v11 = v17;
  id v12 = *(void (**)(char *, uint64_t))(v18 + 8);
  v18 += 8;
  v12(v8, v17);
  swift_release();
  uint64_t v25 = sub_1D42E7AA0;
  uint64_t v26 = a1;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v22 = 1107296256;
  uint64_t v23 = sub_1D42BD950;
  uint64_t v24 = &unk_1F2C0BA68;
  uint64_t v13 = _Block_copy(&aBlock);
  swift_retain();
  sub_1D4469988();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v8, v4, v13);
  _Block_release(v13);
  v10(v4, v2);
  v12(v8, v11);
  swift_release();
  uint64_t v14 = (uint64_t *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_initializedSubsystems);
  swift_beginAccess();
  uint64_t v15 = *v14;
  *uint64_t v14 = 0;
  uint64_t v20 = v15;
  sub_1D4375E68(&v20);
  FMIPManager.initialize()();
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isRefreshingItems) & 1) != 0
    || *(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isRefreshingDevices) == 1)
  {
    uint64_t v20 = *(void *)(*(void *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_configuration)
                    + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_enabledSubsystems);
    FMIPManager.startRefreshing(subsystems:)((FMIPCore::FMIPManagerSubsystem)&v20);
  }
}

uint64_t sub_1D4385458(uint64_t a1)
{
  uint64_t v2 = a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v2);
  if (result)
  {
    uint64_t v4 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_1D42D5DA0((uint64_t *)&unk_1EA6CA520);
    sub_1D446A0A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 112))(a1, v6, ObjectType, v4);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D4385544(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1D4469958();
  v17[0] = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D44699B8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  LOBYTE(a2) = sub_1D429BDD4(a2, 0);
  uint64_t result = swift_release();
  if ((a2 & 1) != 0 && (*(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isUpdatingSingleDevices) & 1) == 0)
  {
    aBlock[4] = a3;
    aBlock[5] = a1;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1D42BD950;
    uint64_t aBlock[3] = a4;
    int v16 = _Block_copy(aBlock);
    swift_retain();
    sub_1D4469988();
    v17[1] = MEMORY[0x1E4FBC860];
    sub_1D42C61DC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v14, v10, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v17[0] + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D4385818()
{
  return sub_1D43767E4(v0);
}

uint64_t sub_1D4385820()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D4385858()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D4385868()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D4385878@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D43749AC(v1, a1);
}

uint64_t sub_1D4385894@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager) + 176);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D43858C0@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager) + 296);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D43858EC@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_dataManager) + 240);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D4385918(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 2 * a2;
  type metadata accessor for FMIPDevice();
  return a1;
}

uint64_t sub_1D4385980(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_1D4385990(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D43859B8(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_1D446A188();
  *a1 = v5;
  return result;
}

uint64_t sub_1D4385A10(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = ~v6;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = -v6;
  uint64_t v45 = a1;
  uint64_t v46 = a1 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  uint64_t v47 = v7;
  uint64_t v48 = 0;
  uint64_t v49 = v10 & v8;
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D4387324((uint64_t)&v37);
  uint64_t v11 = v38;
  if (v38)
  {
    while (1)
    {
      char v34 = v39;
      char v35 = v40;
      char v14 = v41;
      char v15 = v42;
      uint64_t v16 = v43;
      uint64_t v17 = v44;
      uint64_t v18 = v37;
      uint64_t v19 = (void *)*a5;
      unint64_t v21 = sub_1D42C4FCC(v37, v11);
      uint64_t v22 = v19[2];
      BOOL v23 = (v20 & 1) == 0;
      uint64_t v24 = v22 + v23;
      if (__OFADD__(v22, v23)) {
        break;
      }
      char v25 = v20;
      if (v19[3] >= v24)
      {
        if ((a4 & 1) == 0) {
          sub_1D43D8F64();
        }
      }
      else
      {
        sub_1D42C1798(v24, a4 & 1);
        unint64_t v26 = sub_1D42C4FCC(v18, v11);
        if ((v25 & 1) != (v27 & 1)) {
          goto LABEL_19;
        }
        unint64_t v21 = v26;
      }
      uint64_t v28 = (void *)*a5;
      if (v25)
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = v28[7] + 24 * v21;

        *(unsigned char *)uint64_t v13 = v34;
        *(unsigned char *)(v13 + 1) = v35;
        *(unsigned char *)(v13 + 2) = v14;
        *(unsigned char *)(v13 + 3) = v15;
        *(void *)(v13 + 8) = v16;
        *(void *)(v13 + 16) = v17;
      }
      else
      {
        v28[(v21 >> 6) + 8] |= 1 << v21;
        unint64_t v29 = (uint64_t *)(v28[6] + 16 * v21);
        *unint64_t v29 = v18;
        v29[1] = v11;
        uint64_t v30 = v28[7] + 24 * v21;
        *(unsigned char *)uint64_t v30 = v34;
        *(unsigned char *)(v30 + 1) = v35;
        *(unsigned char *)(v30 + 2) = v14;
        *(unsigned char *)(v30 + 3) = v15;
        *(void *)(v30 + 8) = v16;
        *(void *)(v30 + 16) = v17;
        uint64_t v31 = v28[2];
        BOOL v32 = __OFADD__(v31, 1);
        uint64_t v33 = v31 + 1;
        if (v32) {
          goto LABEL_18;
        }
        v28[2] = v33;
      }
      sub_1D4387324((uint64_t)&v37);
      uint64_t v11 = v38;
      a4 = 1;
      if (!v38) {
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    uint64_t result = sub_1D446A7A8();
    __break(1u);
  }
  else
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1D42F9364();
    return swift_release();
  }
  return result;
}

void sub_1D4385C78(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v33 = v4;
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  uint64_t v32 = v3;
  while (1)
  {
    if (v6 >= *(void *)(v3 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1D446A7A8();
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v8 = *(void *)(v3 + v5 + 32);
    uint64_t v7 = *(void *)(v3 + v5 + 40);
    char v9 = *(unsigned char *)(v3 + v5 + 48);
    char v10 = *(unsigned char *)(v3 + v5 + 49);
    char v11 = *(unsigned char *)(v3 + v5 + 50);
    char v12 = *(unsigned char *)(v3 + v5 + 51);
    uint64_t v13 = *(void **)(v3 + v5 + 56);
    uint64_t v37 = *(void *)(v3 + v5 + 64);
    swift_bridgeObjectRetain();
    id v14 = v13;
    if (!v7) {
      goto LABEL_18;
    }
    char v34 = v12;
    char v35 = v11;
    id v36 = v14;
    char v15 = (void *)*a3;
    unint64_t v17 = sub_1D42C4FCC(v8, v7);
    uint64_t v18 = v15[2];
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19)) {
      goto LABEL_21;
    }
    char v21 = v16;
    if (v15[3] < v20) {
      break;
    }
    if (a2)
    {
      if (v16) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1D43D8F64();
      if (v21) {
        goto LABEL_16;
      }
    }
LABEL_12:
    uint64_t v24 = (void *)*a3;
    *(void *)(*a3 + 8 * (v17 >> 6) + 64) |= 1 << v17;
    char v25 = (uint64_t *)(v24[6] + 16 * v17);
    *char v25 = v8;
    v25[1] = v7;
    uint64_t v26 = v24[7] + 24 * v17;
    *(unsigned char *)uint64_t v26 = v9;
    *(unsigned char *)(v26 + 1) = v10;
    *(unsigned char *)(v26 + 2) = v35;
    *(unsigned char *)(v26 + 3) = v34;
    *(void *)(v26 + 8) = v36;
    *(void *)(v26 + 16) = v37;
    uint64_t v27 = v24[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_22;
    }
    ++v6;
    v24[2] = v29;
    v5 += 40;
    a2 = 1;
    uint64_t v3 = v32;
    if (v33 == v6) {
      goto LABEL_18;
    }
  }
  sub_1D42C1798(v20, a2 & 1);
  unint64_t v22 = sub_1D42C4FCC(v8, v7);
  if ((v21 & 1) != (v23 & 1)) {
    goto LABEL_23;
  }
  unint64_t v17 = v22;
  if ((v21 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  uint64_t v30 = (void *)swift_allocError();
  swift_willThrow();
  id v31 = v30;
  sub_1D42D5DA0(&qword_1EA6C9360);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_24:
  sub_1D446A378();
  sub_1D4469C08();
  sub_1D446A458();
  sub_1D4469C08();
  sub_1D446A488();
  __break(1u);
}

size_t sub_1D4385FAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1D42D5DA0(&qword_1EA6CA388);
  uint64_t v3 = *(void *)(type metadata accessor for FMIPBeaconShare(0) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_1D438635C(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_1D42F9364();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D4386100(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v5) {
    return MEMORY[0x1E4FBC860];
  }
  if (v5 <= 0)
  {
    char v11 = (void *)MEMORY[0x1E4FBC860];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(sub_1D4469688() - 8);
      char v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      unint64_t v17 = a2 + v16 * a3;
      uint64_t v18 = v16 * v5;
      BOOL v19 = &v15[v18];
      unint64_t v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_1D42D5DA0(&qword_1EA6CA590);
  uint64_t v8 = *(void *)(sub_1D4469688() - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  char v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1) {
      goto LABEL_23;
    }
    _OWORD v11[2] = v5;
    void v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D4386340(uint64_t a1)
{
  return sub_1D42B2C34(a1, &qword_1EBD7CB40, 0x1E4F97BE8, &qword_1EBD7D978);
}

uint64_t sub_1D438635C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FMIPBeaconShare(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8 - 8);
  size_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v10);
  char v15 = (char *)&v29 - v14;
  uint64_t v34 = a4;
  uint64_t v17 = a4 + 56;
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v31 = -1 << *(unsigned char *)(a4 + 32);
  if (-v31 < 64) {
    uint64_t v18 = ~(-1 << -(char)v31);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v28 = ~v31;
    *a1 = v34;
    a1[1] = v17;
    a1[2] = v28;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v30 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v32 = v17;
  int64_t v33 = (unint64_t)(63 - v31) >> 6;
  int64_t v29 = v33 - 1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v27 = *(void *)(v9 + 72);
    sub_1D42CA6F0(*(void *)(v34 + 48) + v27 * v23, (uint64_t)v12, type metadata accessor for FMIPBeaconShare);
    sub_1D42CAAD0((uint64_t)v12, (uint64_t)v15, type metadata accessor for FMIPBeaconShare);
    uint64_t result = sub_1D42CAAD0((uint64_t)v15, a2, type metadata accessor for FMIPBeaconShare);
    if (v21 == a3) {
      goto LABEL_33;
    }
    a2 += v27;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      a3 = v21;
LABEL_33:
      a1 = v30;
      uint64_t v17 = v32;
      goto LABEL_34;
    }
    uint64_t v17 = v32;
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    if (!v25) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v20 = v24;
  }
  v20 += 2;
  if (v24 + 1 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24;
LABEL_39:
    a3 = v21;
    a1 = v30;
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25) {
    goto LABEL_14;
  }
  int64_t v26 = v24 + 2;
  if (v24 + 2 >= v33) {
    goto LABEL_36;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_17;
  }
  int64_t v20 = v24 + 3;
  if (v24 + 3 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24 + 2;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25)
  {
LABEL_14:
    int64_t v24 = v20;
    goto LABEL_18;
  }
  int64_t v26 = v24 + 4;
  if (v24 + 4 >= v33)
  {
LABEL_36:
    unint64_t v19 = 0;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25)
  {
LABEL_17:
    int64_t v24 = v26;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      int64_t v20 = v29;
      goto LABEL_39;
    }
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1D4386680(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D4469688();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t result = MEMORY[0x1F4188790](v11);
  char v40 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 56;
  uint64_t v14 = *(void *)(a4 + 56);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v16 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v28 = ~v32;
    *a1 = v42;
    a1[1] = v15;
    a1[2] = v28;
    a1[3] = v18;
    a1[4] = v17;
    return a3;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v36 = a3;
  int64_t v18 = 0;
  a3 = 0;
  unint64_t v19 = v40;
  uint64_t v38 = v41 + 16;
  char v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v37 = v41 + 48;
  char v35 = (uint64_t (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v33 = v15;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  uint64_t v31 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v21 = v20 | (v18 << 6);
  while (1)
  {
    uint64_t v25 = v41;
    uint64_t v26 = *(void *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v10, *(void *)(v42 + 48) + v26 * v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v33;
      goto LABEL_38;
    }
    ++a3;
    uint64_t v27 = *v35;
    (*v35)(v19, v10, v11);
    uint64_t result = v27(a2, v19, v11);
    if (a3 == v36)
    {
      a3 = v36;
      a1 = v31;
      uint64_t v15 = v33;
      goto LABEL_39;
    }
    a2 += v26;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v33;
    if (v22 >= v34) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v22);
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      ++v18;
      if (v22 + 1 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23) {
        goto LABEL_14;
      }
      int64_t v18 = v22 + 1;
      if (v22 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * (v22 + 2));
      if (v23)
      {
        v22 += 2;
      }
      else
      {
        int64_t v18 = v22 + 2;
        if (v22 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v33 + 8 * (v22 + 3));
        if (!v23)
        {
          int64_t v24 = v22 + 4;
          int64_t v18 = v22 + 3;
          if (v22 + 4 < v34)
          {
            unint64_t v23 = *(void *)(v33 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                int64_t v22 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v22 >= v34)
                {
                  int64_t v18 = v30;
                  goto LABEL_37;
                }
                unint64_t v23 = *(void *)(v33 + 8 * v22);
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v22 = v24;
            goto LABEL_21;
          }
LABEL_37:
          (*v39)(v10, 1, 1, v11);
          unint64_t v17 = 0;
LABEL_38:
          sub_1D4276C3C((uint64_t)v10, (uint64_t *)&unk_1EBD7E930);
          a1 = v31;
          goto LABEL_39;
        }
        v22 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    int64_t v18 = v22;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1D4386A74(void *result, void *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7 = a4;
  uint64_t v9 = a2;
  uint64_t v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1D446A238();
    sub_1D4275AD0(0, a5);
    sub_1D42B2630(a7, a5);
    uint64_t result = (void *)sub_1D4469F48();
    uint64_t v7 = v33;
    uint64_t v12 = v34;
    uint64_t v13 = v35;
    int64_t v14 = v36;
    unint64_t v15 = v37;
    if (v9) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v16 = 0;
    goto LABEL_38;
  }
  int64_t v14 = 0;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v12 = a4 + 56;
  uint64_t v13 = ~v24;
  uint64_t v25 = -v24;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  else {
    uint64_t v26 = -1;
  }
  unint64_t v15 = v26 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v16 = 0;
LABEL_38:
    uint64_t v27 = v29;
LABEL_41:
    *uint64_t v27 = v7;
    v27[1] = v12;
    v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (void *)v16;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v16 = 0;
  int64_t v30 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_1D446A2B8()) {
        goto LABEL_40;
      }
      sub_1D4275AD0(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v19 = v32;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v32) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    int64_t v20 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v20 >= v30)
    {
      unint64_t v15 = 0;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v20);
    if (v21) {
      goto LABEL_23;
    }
    int64_t v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      unint64_t v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30) {
        goto LABEL_44;
      }
      unint64_t v21 = *(void *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        int64_t v20 = v14 + 3;
        goto LABEL_23;
      }
      int64_t v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        unint64_t v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      unint64_t v21 = *(void *)(v12 + 8 * v22);
      if (!v21)
      {
        int64_t v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          unint64_t v15 = 0;
          int64_t v14 = v22;
          goto LABEL_40;
        }
        unint64_t v21 = *(void *)(v12 + 8 * v20);
        if (!v21)
        {
          int64_t v23 = v14 + 6;
          while (v30 != v23)
          {
            unint64_t v21 = *(void *)(v12 + 8 * v23++);
            if (v21)
            {
              int64_t v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v15 = 0;
          int64_t v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v20 = v22;
LABEL_23:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v20 << 6);
    int64_t v14 = v20;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v7 + 48) + 8 * v18);
    id v19 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      uint64_t v16 = a3;
LABEL_40:
      uint64_t v13 = v28;
      uint64_t v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1D4386D74(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1D4386E14()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D4386E5C()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1D42F9444;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x1F4188298](sub_1D4376318, 0, 0);
}

uint64_t sub_1D4386F08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6CA370);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EA6CA378);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  unint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = *v1;
  uint64_t v15 = v1[1];
  uint64_t v17 = v1[2];
  int64_t v16 = v1[3];
  int64_t v18 = v16;
  unint64_t v19 = v1[4];
  unint64_t v37 = v6;
  uint64_t v40 = v17;
  if (v19)
  {
    uint64_t v38 = a1;
    uint64_t v39 = v15;
    uint64_t v20 = (v19 - 1) & v19;
    unint64_t v21 = __clz(__rbit64(v19)) | (v16 << 6);
LABEL_3:
    uint64_t v22 = *(void *)(v14 + 48);
    uint64_t v23 = v14;
    uint64_t v24 = sub_1D4469688();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v13, v22 + *(void *)(*(void *)(v24 - 8) + 72) * v21, v24);
    uint64_t v25 = *(void *)(v23 + 56);
    uint64_t v26 = type metadata accessor for FMIPDeviceConnectedState(0);
    sub_1D42CA6F0(v25 + *(void *)(*(void *)(v26 - 8) + 72) * v21, (uint64_t)&v13[*(int *)(v3 + 48)], type metadata accessor for FMIPDeviceConnectedState);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    a1 = v38;
    uint64_t v15 = v39;
    goto LABEL_23;
  }
  int64_t v27 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v28 = (unint64_t)(v17 + 64) >> 6;
  if (v27 < v28)
  {
    unint64_t v29 = *(void *)(v15 + 8 * v27);
    if (v29)
    {
LABEL_7:
      uint64_t v38 = a1;
      uint64_t v39 = v15;
      uint64_t v20 = (v29 - 1) & v29;
      unint64_t v21 = __clz(__rbit64(v29)) + (v27 << 6);
      int64_t v18 = v27;
      goto LABEL_3;
    }
    int64_t v30 = v16 + 2;
    int64_t v18 = v16 + 1;
    if (v16 + 2 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v30);
      if (v29)
      {
LABEL_10:
        int64_t v27 = v30;
        goto LABEL_7;
      }
      int64_t v18 = v16 + 2;
      if (v16 + 3 < v28)
      {
        unint64_t v29 = *(void *)(v15 + 8 * (v16 + 3));
        if (v29)
        {
          int64_t v27 = v16 + 3;
          goto LABEL_7;
        }
        int64_t v30 = v16 + 4;
        int64_t v18 = v16 + 3;
        if (v16 + 4 < v28)
        {
          unint64_t v29 = *(void *)(v15 + 8 * v30);
          if (v29) {
            goto LABEL_10;
          }
          int64_t v27 = v16 + 5;
          int64_t v18 = v16 + 4;
          if (v16 + 5 < v28)
          {
            unint64_t v29 = *(void *)(v15 + 8 * v27);
            if (v29) {
              goto LABEL_7;
            }
            int64_t v18 = v28 - 1;
            int64_t v31 = v16 + 6;
            while (v28 != v31)
            {
              unint64_t v29 = *(void *)(v15 + 8 * v31++);
              if (v29)
              {
                int64_t v27 = v31 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v23 = v14;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, 1, 1, v3);
  uint64_t v20 = 0;
LABEL_23:
  *uint64_t v1 = v23;
  v1[1] = v15;
  v1[2] = v40;
  v1[3] = v18;
  v1[4] = v20;
  uint64_t v32 = (void (*)(uint64_t))v1[5];
  sub_1D4276C98((uint64_t)v13, (uint64_t)v10, &qword_1EA6CA378);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    uint64_t v33 = sub_1D42D5DA0(&qword_1EA6CA550);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a1, 1, 1, v33);
  }
  else
  {
    uint64_t v34 = (uint64_t)v10;
    uint64_t v35 = (uint64_t)v37;
    sub_1D4276C98(v34, (uint64_t)v37, &qword_1EA6CA370);
    v32(v35);
    sub_1D4276C3C(v35, &qword_1EA6CA370);
    uint64_t v36 = sub_1D42D5DA0(&qword_1EA6CA550);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a1, 0, 1, v36);
  }
}

void sub_1D4387324(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (!v4)
  {
    int64_t v20 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return;
    }
    int64_t v21 = (unint64_t)(v1[2] + 64) >> 6;
    if (v20 < v21)
    {
      uint64_t v22 = v1[1];
      unint64_t v23 = *(void *)(v22 + 8 * v20);
      if (v23)
      {
LABEL_9:
        uint64_t v7 = (v23 - 1) & v23;
        unint64_t v8 = __clz(__rbit64(v23)) + (v20 << 6);
        int64_t v6 = v20;
        goto LABEL_3;
      }
      int64_t v24 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v21)
      {
        unint64_t v23 = *(void *)(v22 + 8 * v24);
        if (v23)
        {
LABEL_12:
          int64_t v20 = v24;
          goto LABEL_9;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v21)
        {
          unint64_t v23 = *(void *)(v22 + 8 * (v5 + 3));
          if (v23)
          {
            int64_t v20 = v5 + 3;
            goto LABEL_9;
          }
          int64_t v24 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v21)
          {
            unint64_t v23 = *(void *)(v22 + 8 * v24);
            if (v23) {
              goto LABEL_12;
            }
            int64_t v20 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v21)
            {
              unint64_t v23 = *(void *)(v22 + 8 * v20);
              if (v23) {
                goto LABEL_9;
              }
              int64_t v6 = v21 - 1;
              int64_t v25 = v5 + 6;
              while (v21 != v25)
              {
                unint64_t v23 = *(void *)(v22 + 8 * v25++);
                if (v23)
                {
                  int64_t v20 = v25 - 1;
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(void *)(a1 + 32) = 0;
    return;
  }
  uint64_t v7 = (v4 - 1) & v4;
  unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
  uint64_t v9 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = *(void *)(v3 + 56) + 24 * v8;
  LOBYTE(v9) = *(unsigned char *)v12;
  char v13 = *(unsigned char *)(v12 + 1);
  char v14 = *(unsigned char *)(v12 + 2);
  char v15 = *(unsigned char *)(v12 + 3);
  int64_t v16 = *(void **)(v12 + 8);
  uint64_t v17 = *(void *)(v12 + 16);
  v1[3] = v6;
  v1[4] = v7;
  int64_t v18 = (void (*)(void *))v1[5];
  v26[0] = v10;
  v26[1] = v11;
  char v27 = (char)v9;
  char v28 = v13;
  char v29 = v14;
  char v30 = v15;
  int64_t v31 = v16;
  uint64_t v32 = v17;
  swift_bridgeObjectRetain();
  id v19 = v16;
  v18(v26);

  swift_bridgeObjectRelease();
}

void sub_1D438750C()
{
  void (*v11)(uint64_t *__return_ptr, void *);
  id v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  void v20[3];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = *(void **)(*(void *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v11 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    void v20[2] = v10;
    swift_bridgeObjectRetain();
    uint64_t v12 = v10;
    v11(&v19, v20);

    swift_bridgeObjectRelease();
    return;
  }
  char v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    char v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      char v15 = v0[1];
      int64_t v16 = *(void *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        uint64_t v5 = (v16 - 1) & v16;
        unint64_t v6 = __clz(__rbit64(v16)) + (v13 << 6);
        int64_t v4 = v13;
        goto LABEL_3;
      }
      uint64_t v17 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        int64_t v16 = *(void *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          char v13 = v17;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          int64_t v16 = *(void *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            char v13 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v17 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            int64_t v16 = *(void *)(v15 + 8 * v17);
            if (v16) {
              goto LABEL_10;
            }
            char v13 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              int64_t v16 = *(void *)(v15 + 8 * v13);
              if (v16) {
                goto LABEL_7;
              }
              int64_t v4 = v14 - 1;
              int64_t v18 = v3 + 6;
              while (v14 != v18)
              {
                int64_t v16 = *(void *)(v15 + 8 * v18++);
                if (v16)
                {
                  char v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
  }
}

id sub_1D43876A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  char v4 = *((unsigned char *)a1 + 17);
  char v5 = *((unsigned char *)a1 + 18);
  char v6 = *((unsigned char *)a1 + 19);
  id v9 = (id)a1[3];
  uint64_t v7 = a1[4];
  *(unsigned char *)(a2 + 16) = *((unsigned char *)a1 + 16);
  *(unsigned char *)(a2 + 17) = v4;
  *(unsigned char *)(a2 + 18) = v5;
  *(unsigned char *)(a2 + 19) = v6;
  *(void *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v7;
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v2;
  swift_bridgeObjectRetain();
  return v9;
}

uint64_t sub_1D4387714(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EA6C9468);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for FMIPItem();
  uint64_t v7 = *(void *)(v63 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v63);
  uint64_t v51 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v50 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v50 = (uint64_t)&v50 - v13;
  uint64_t v14 = sub_1D4469688();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v18 - 8);
  int64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(a1 + 56);
  uint64_t v56 = a1 + 56;
  uint64_t v22 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v70 = v23 & v21;
  int64_t v57 = (unint64_t)(v22 + 63) >> 6;
  uint64_t v58 = v7;
  uint64_t v66 = v15;
  int v67 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v64 = v15 + 48;
  uint64_t v65 = v15 + 16;
  uint64_t v61 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v62 = (void (**)(char *, char *, uint64_t))(v15 + 32);
  os_log_t v59 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  os_log_t v60 = (void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v68 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v25 = 0;
  unint64_t v52 = MEMORY[0x1E4FBC860];
  uint64_t v53 = v20;
  uint64_t v54 = v14;
  unint64_t v55 = v6;
LABEL_4:
  unint64_t v26 = v70;
  if (v70)
  {
LABEL_5:
    unint64_t v27 = __clz(__rbit64(v26));
    v26 &= v26 - 1;
    unint64_t v28 = v27 | (v25 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v29 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v29 >= v57) {
      goto LABEL_45;
    }
    unint64_t v30 = *(void *)(v56 + 8 * v29);
    ++v25;
    if (!v30)
    {
      int64_t v25 = v29 + 1;
      if (v29 + 1 >= v57) {
        goto LABEL_45;
      }
      unint64_t v30 = *(void *)(v56 + 8 * v25);
      if (!v30)
      {
        int64_t v25 = v29 + 2;
        if (v29 + 2 >= v57) {
          goto LABEL_45;
        }
        unint64_t v30 = *(void *)(v56 + 8 * v25);
        if (!v30)
        {
          int64_t v25 = v29 + 3;
          if (v29 + 3 >= v57) {
            goto LABEL_45;
          }
          unint64_t v30 = *(void *)(v56 + 8 * v25);
          if (!v30) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v26 = (v30 - 1) & v30;
    unint64_t v28 = __clz(__rbit64(v30)) + (v25 << 6);
LABEL_22:
    uint64_t v32 = v66;
    (*(void (**)(char *, unint64_t, uint64_t))(v66 + 16))(v20, *(void *)(v68 + 48) + *(void *)(v66 + 72) * v28, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v20, 0, 1, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v20, 1, v14) == 1) {
      goto LABEL_46;
    }
    (*v62)(v17, v20, v14);
    uint64_t v33 = *(void *)(a2 + 16);
    if (v33)
    {
      unint64_t v70 = v26;
      int64_t v69 = v25;
      uint64_t v34 = v58;
      uint64_t v35 = a2 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
      uint64_t v36 = a2;
      swift_bridgeObjectRetain();
      uint64_t v37 = *(void *)(v34 + 72);
      while (1)
      {
        sub_1D42CA6F0(v35, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v39 = *((void *)v12 + 44);
        uint64_t v38 = *((void *)v12 + 45);
        if (v39 == sub_1D4469638() && v38 == v40)
        {
          a2 = v36;
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
        char v42 = sub_1D446A758();
        swift_bridgeObjectRelease();
        if (v42) {
          break;
        }
        sub_1D42CA8E8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        v35 += v37;
        if (!--v33)
        {
          a2 = v36;
          swift_bridgeObjectRelease();
          uint64_t v43 = 1;
          uint64_t v14 = v54;
          char v6 = v55;
          goto LABEL_36;
        }
      }
      a2 = v36;
LABEL_35:
      uint64_t v14 = v54;
      swift_bridgeObjectRelease();
      char v6 = v55;
      sub_1D42CAAD0((uint64_t)v12, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v43 = 0;
LABEL_36:
      int64_t v20 = v53;
      int64_t v25 = v69;
      unint64_t v26 = v70;
    }
    else
    {
      uint64_t v43 = 1;
    }
    uint64_t v44 = v63;
    (*v61)(v6, v43, 1, v63);
    (*v60)(v17, v14);
    if ((*v59)(v6, 1, v44) != 1)
    {
      unint64_t v70 = v26;
      uint64_t v45 = v50;
      sub_1D42CAAD0((uint64_t)v6, v50, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      sub_1D42CAAD0(v45, v51, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v52 = sub_1D43B0108(0, *(void *)(v52 + 16) + 1, 1, v52);
      }
      unint64_t v47 = *(void *)(v52 + 16);
      unint64_t v46 = *(void *)(v52 + 24);
      if (v47 >= v46 >> 1) {
        unint64_t v52 = sub_1D43B0108(v46 > 1, v47 + 1, 1, v52);
      }
      uint64_t v48 = v51;
      unint64_t v49 = v52;
      *(void *)(v52 + 16) = v47 + 1;
      uint64_t result = sub_1D42CAAD0(v48, v49+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v47, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      goto LABEL_4;
    }
    uint64_t result = sub_1D4276C3C((uint64_t)v6, (uint64_t *)&unk_1EA6C9468);
    if (v26) {
      goto LABEL_5;
    }
  }
  int64_t v31 = v29 + 4;
  if (v31 >= v57)
  {
LABEL_45:
    (*v67)(v20, 1, 1, v14);
LABEL_46:
    swift_release();
    return v52;
  }
  unint64_t v30 = *(void *)(v56 + 8 * v31);
  if (v30)
  {
    int64_t v25 = v31;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v25 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v25 >= v57) {
      goto LABEL_45;
    }
    unint64_t v30 = *(void *)(v56 + 8 * v25);
    ++v31;
    if (v30) {
      goto LABEL_21;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1D4387E10()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_1D4387E48()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D4387E58()
{
  return sub_1D438B704(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1D4387E70()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D42FA10C;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  void *v2 = v1;
  v2[1] = sub_1D42FA10C;
  return sub_1D42E4130();
}

uint64_t sub_1D4387F44()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D4387F54()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D4387F64()
{
  return sub_1D4377848(v0);
}

uint64_t sub_1D4387F6C()
{
  return sub_1D438B704(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1D4387F84()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D42FA10C;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  void *v2 = v1;
  v2[1] = sub_1D42FA10C;
  return sub_1D42EAA8C();
}

uint64_t sub_1D4388058()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D4388068()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D4388078()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D43880C0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D43880D0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D43880E0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D4388128()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1D42FA10C;
  *(void *)(v3 + 144) = v2;
  *(_OWORD *)(v3 + 128) = v4;
  return MEMORY[0x1F4188298](sub_1D4378E70, 0, 0);
}

uint64_t sub_1D43881E0(unsigned __int8 *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1D4379A9C(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5]);
}

uint64_t sub_1D43881EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 136, 7);
}

uint64_t sub_1D438825C()
{
  return sub_1D430DD08(v0 + 16, *(void **)(v0 + 104), *(void *)(v0 + 112), *(void (**)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t, void *, uint64_t))(v0 + 120), *(void **)(v0 + 128));
}

uint64_t sub_1D438826C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D438827C()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D43882B4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D43882C4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D43882FC(char *a1, uint64_t a2, void *a3)
{
  return sub_1D437AD04(a1, a2, a3, *(uint64_t (**)(uint64_t *, uint64_t, void *))(v3 + 16));
}

uint64_t sub_1D4388304(uint64_t a1)
{
  return sub_1D435CDDC(a1, *(void (**)(void, void, void))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D438830C(uint64_t a1, int a2, void *a3, double a4)
{
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v37 = MEMORY[0x1E4FBC860];
    sub_1D43372D0(0, v5, 0);
    uint64_t v6 = v37;
    uint64_t v10 = *(void *)(type metadata accessor for FMIPItem() - 8);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v27 = *(void *)(v10 + 72);
    unsigned int v28 = a2 & 0xFF010101;
    while (1)
    {
      sub_1D438307C(v11, v28, a3, (uint64_t)v30, a4);
      if (v4) {
        break;
      }
      uint64_t v13 = v30[0];
      uint64_t v12 = v30[1];
      char v14 = v31;
      char v15 = v32;
      unsigned __int8 v16 = v33;
      char v17 = v34;
      uint64_t v18 = v35;
      uint64_t v19 = v36;
      unint64_t v21 = *(void *)(v6 + 16);
      unint64_t v20 = *(void *)(v6 + 24);
      uint64_t v37 = v6;
      if (v21 >= v20 >> 1)
      {
        char v25 = v34;
        uint64_t v26 = v33;
        uint64_t v24 = v35;
        sub_1D43372D0(v20 > 1, v21 + 1, 1);
        uint64_t v18 = v24;
        char v17 = v25;
        unsigned __int8 v16 = v26;
        uint64_t v6 = v37;
      }
      *(void *)(v6 + 16) = v21 + 1;
      uint64_t v22 = v6 + 40 * v21;
      *(void *)(v22 + 32) = v13;
      *(void *)(v22 + 40) = v12;
      *(unsigned char *)(v22 + 48) = v14;
      *(unsigned char *)(v22 + 49) = v15;
      *(unsigned char *)(v22 + 50) = v16;
      *(unsigned char *)(v22 + 51) = v17;
      *(void *)(v22 + 56) = v18;
      *(void *)(v22 + 64) = v19;
      v11 += v27;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1D43884D8()
{
  return sub_1D438B704(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D43884F0(uint64_t a1)
{
  return sub_1D437B538(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_1D4388500(char *a1, uint64_t a2, void *a3)
{
  return sub_1D437C540(a1, a2, a3, *(uint64_t (**)(uint64_t *, uint64_t, void *))(v3 + 16));
}

uint64_t sub_1D4388508()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D4388548(uint64_t a1)
{
  return sub_1D435D810(a1, *(void (**)(char *, uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1D4388554(uint64_t a1)
{
  return (*(uint64_t (**)(BOOL))(v1 + 16))(a1 != 0);
}

unint64_t sub_1D4388588()
{
  unint64_t result = qword_1EA6CA318;
  if (!qword_1EA6CA318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA318);
  }
  return result;
}

unint64_t sub_1D43885E0()
{
  unint64_t result = qword_1EA6CA320;
  if (!qword_1EA6CA320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA320);
  }
  return result;
}

unint64_t sub_1D4388638()
{
  unint64_t result = qword_1EA6CA328;
  if (!qword_1EA6CA328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA328);
  }
  return result;
}

unint64_t sub_1D4388690()
{
  unint64_t result = qword_1EA6CA330;
  if (!qword_1EA6CA330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA330);
  }
  return result;
}

uint64_t sub_1D43886E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D4388700(a1, &OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate, a2);
}

uint64_t sub_1D43886F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D4388700(a1, &OBJC_IVAR____TtC8FMIPCore11FMIPManager_siriDelegate, a2);
}

uint64_t sub_1D4388700@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1 + *a2;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v4);
  uint64_t v6 = *(void *)(v4 + 8);
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t sub_1D4388758(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_siriDelegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1D43887BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_selectedDevice;
  swift_beginAccess();
  return sub_1D42A3A74(v3, a2, &qword_1EBD7CBC0);
}

uint64_t sub_1D4388820@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_initializedSubsystems);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

ValueMetadata *type metadata accessor for FMIPContentObservation()
{
  return &type metadata for FMIPContentObservation;
}

uint64_t sub_1D4388888()
{
  return type metadata accessor for FMIPManager();
}

uint64_t method lookup function for FMIPManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPManager);
}

uint64_t dispatch thunk of FMIPManager.__allocating_init(configuration:ownerSession:)()
{
  return (*(uint64_t (**)(void))(v0 + 368))();
}

uint64_t sub_1D43888BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D44699B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D4469958();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D4469928();
  sub_1D42D7FAC(v10, (uint64_t)qword_1EBD83228);
  uint64_t v11 = sub_1D44698F8();
  os_log_type_t v12 = sub_1D446A038();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1D4271000, v11, v12, "FMIPManager: garbageCollectorDidPurgeAccountRelatedFiles", v13, 2u);
    MEMORY[0x1D9447730](v13, -1, -1);
  }

  sub_1D4384928();
  sub_1D4469948();
  aBlock[4] = sub_1D438A0BC;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C0BA18;
  char v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v5, v9, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

void sub_1D4388B8C()
{
  uint64_t v1 = v0;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  uint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    int64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v5 = 0;
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPManager: willTriggerLastLocationPrompt", v5, 2u);
    MEMORY[0x1D9447730](v5, -1, -1);
  }

  id v6 = objc_msgSend(self, sel_sharedInstance);
  v8[4] = sub_1D438B990;
  v8[5] = v1;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_1D4276428;
  v8[3] = &unk_1F2C0C2D8;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_lowBatteryLocateEnabledWithCompletion_, v7);
  _Block_release(v7);
}

uint64_t sub_1D4388D2C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v34 = sub_1D44699B8();
  uint64_t v4 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  id v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D4469958();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unsigned __int8 v33 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D4469928();
  sub_1D42D7FAC(v10, (uint64_t)qword_1EBD83228);
  id v11 = a1;
  id v12 = a1;
  uint64_t v13 = sub_1D44698F8();
  os_log_type_t v14 = sub_1D446A038();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v32 = v2;
    char v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v31 = v8;
    uint64_t v17 = v16;
    aBlock[0] = v16;
    *(_DWORD *)char v15 = 136315138;
    unint64_t v30 = v15 + 4;
    uint64_t v36 = (uint64_t)a1;
    id v18 = a1;
    sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
    uint64_t v19 = sub_1D4469B68();
    uint64_t v36 = sub_1D42CB9EC(v19, v20, aBlock);
    sub_1D446A188();
    uint64_t v2 = v32;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, v13, v14, "FMIPManager: initializationDidFail %s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v21 = v17;
    uint64_t v8 = v31;
    MEMORY[0x1D9447730](v21, -1, -1);
    MEMORY[0x1D9447730](v15, -1, -1);
  }
  else
  {
  }
  uint64_t v22 = v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v22);
  if (result)
  {
    uint64_t v24 = *(void *)(v22 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v24 + 24))(v2, a1, ObjectType, v24);
    uint64_t result = swift_unknownObjectRelease();
  }
  if (a1)
  {
    uint64_t v26 = v33;
    sub_1D4469948();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v2;
    *(void *)(v27 + 24) = a1;
    aBlock[4] = (uint64_t)sub_1D438BE44;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_1D42BD950;
    uint64_t aBlock[3] = (uint64_t)&unk_1F2C0C508;
    unsigned int v28 = _Block_copy(aBlock);
    id v29 = a1;
    swift_retain();
    sub_1D4469988();
    MEMORY[0x1D9446420](0, v6, v26, v28);
    _Block_release(v28);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v34);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v26, v7);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D438918C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
  uint64_t v5 = sub_1D44698F8();
  os_log_type_t v6 = sub_1D446A038();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1D4271000, v5, v6, "FMIPManager: didUpdateRangingParameters", v7, 2u);
    MEMORY[0x1D9447730](v7, -1, -1);
  }

  uint64_t v8 = v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v8);
  if (result)
  {
    uint64_t v10 = *(void *)(v8 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = v3;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v10 + 160))(v2, &v12, ObjectType, v10);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D43892E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v41 = a2;
  uint64_t v7 = sub_1D4469618();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v36 - v12;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D4469928();
  sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
  char v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v40 = a1;
  v15(v13, a1, v7);
  v15(v11, v41, v7);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_1D44698F8();
  os_log_type_t v17 = sub_1D446A038();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v39 = v4;
    uint64_t v20 = v19;
    uint64_t v38 = swift_slowAlloc();
    v43[0] = v38;
    *(_DWORD *)uint64_t v20 = 136315650;
    int v37 = v18;
    uint64_t v21 = sub_1D4469528();
    uint64_t v42 = sub_1D42CB9EC(v21, v22, v43);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    os_log_t v36 = v16;
    uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
    v23(v13, v7);
    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v24 = sub_1D4469528();
    uint64_t v42 = sub_1D42CB9EC(v24, v25, v43);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    v23(v11, v7);
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v26 = *(void *)(a3 + 16);
    swift_bridgeObjectRelease();
    uint64_t v42 = v26;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    os_log_t v27 = v36;
    _os_log_impl(&dword_1D4271000, v36, (os_log_type_t)v37, "FMIPManager: didRefresh startDate: %s, endDate: %s, tapContext: %ld", (uint8_t *)v20, 0x20u);
    uint64_t v28 = v38;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v28, -1, -1);
    uint64_t v29 = v20;
    uint64_t v4 = v39;
    MEMORY[0x1D9447730](v29, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v30 = *(void (**)(char *, uint64_t))(v8 + 8);
    v30(v13, v7);
    v30(v11, v7);

    swift_bridgeObjectRelease();
  }
  uint64_t v31 = v4 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v31);
  uint64_t v33 = v40;
  if (result)
  {
    uint64_t v34 = *(void *)(v31 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 80))(v4, v33, v41, a3, ObjectType, v34);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D43896C8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D44699B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D4469958();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v31 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1D4469928();
  sub_1D42D7FAC(v11, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1D44698F8();
  os_log_type_t v13 = sub_1D446A038();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v30 = v4;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    aBlock[0] = v27;
    uint64_t v28 = v2;
    *(_DWORD *)uint64_t v14 = 136315138;
    unint64_t v25 = v14 + 4;
    uint64_t v26 = v14;
    sub_1D4469688();
    type metadata accessor for FMIPDeviceConnectedState(0);
    sub_1D42C61DC(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
    uint64_t v29 = v5;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1D4469A68();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    uint64_t v18 = v15;
    uint64_t v4 = v30;
    uint64_t v32 = sub_1D42CB9EC(v18, v17, aBlock);
    uint64_t v2 = v28;
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    uint64_t v5 = v29;
    swift_bridgeObjectRelease();
    uint64_t v19 = v26;
    _os_log_impl(&dword_1D4271000, v12, v13, "FMIPManager: didReceive deviceConnectedStates: %s", v26, 0xCu);
    uint64_t v20 = v27;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v20, -1, -1);
    MEMORY[0x1D9447730](v19, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v21 = v31;
  sub_1D4469948();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v2;
  *(void *)(v22 + 24) = a1;
  aBlock[4] = (uint64_t)sub_1D4389B4C;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = (uint64_t)sub_1D42BD950;
  uint64_t aBlock[3] = (uint64_t)&unk_1F2C0B3D8;
  uint64_t v23 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v7, v21, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v8);
  return swift_release();
}

uint64_t sub_1D4389B20()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D4389B4C()
{
  return sub_1D43807C4(*(void *)(v0 + 16));
}

uint64_t sub_1D4389B54()
{
  return sub_1D438B704(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D4389B6C()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D4389B98()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

void sub_1D4389BC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_isItemsSnapshotMode) == 1
    && (*(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_snapshotItemsLocatedResponseReceived) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v1 + 24);
    *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_snapshotItemsLocatedResponseReceived) = 1;
    sub_1D437851C(v3, 0);
  }
}

uint64_t sub_1D4389C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4389C84(uint64_t a1)
{
  uint64_t v3 = sub_1D44699B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D4469958();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4469948();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_1D4389F88;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C0B748;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v6, v10, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_1D4389EBC()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D4389EEC(__n128 a1)
{
  return sub_1D42C3910((uint64_t (*)(void, void, void, void, __n128))sub_1D43826E4, a1);
}

uint64_t sub_1D4389F04()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D4389F5C()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D4389F88()
{
  return sub_1D4380A94(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D4389F90()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D4389FBC()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D4389FE8()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D438A014()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D438A040()
{
  return sub_1D4381458(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D438A048()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D438A090()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

void sub_1D438A0BC()
{
  sub_1D4385020(v0);
}

uint64_t sub_1D438A0C4()
{
  return sub_1D4274A24(v0);
}

uint64_t sub_1D438A0CC()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D438A0F8()
{
  return sub_1D438172C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D438A100()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D438A12C()
{
  return sub_1D4381D04(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D438A134()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D438A180()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D438A1C8(__n128 a1)
{
  return sub_1D42C3910((uint64_t (*)(void, void, void, void, __n128))sub_1D438379C, a1);
}

uint64_t sub_1D438A1E0()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC898], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D438A20C()
{
  return sub_1D43846C8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D438A214()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D438A240()
{
  return sub_1D437F0E4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D438A248()
{
  return sub_1D43801B4(v0);
}

uint64_t sub_1D438A250()
{
  uint64_t v1 = (int *)type metadata accessor for FMIPItem();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_release();
  if (*(void *)(v0 + v3 + 176))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v6 = v5 + v1[13];
  uint64_t v7 = type metadata accessor for FMIPItemLostModeMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + *(int *)(v7 + 24);
    uint64_t v9 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + v1[16] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v5 + v1[24];
  type metadata accessor for FMIPProductType();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v12 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v12 - 1) + 48))(v10, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v10 + v12[12];
      uint64_t v14 = sub_1D4469498();
      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
      v15(v13, v14);
      v15(v10 + v12[13], v14);
      v15(v10 + v12[14], v14);
      v15(v10 + v12[15], v14);
      v15(v10 + v12[16], v14);
      v15(v10 + v12[17], v14);
    }
  }
  else if (EnumCaseMultiPayload == 1 || !EnumCaseMultiPayload && *(void *)(v10 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_1D438A67C()
{
  return sub_1D438AF64((uint64_t (*)(void))type metadata accessor for FMIPItem, sub_1D4380118);
}

uint64_t sub_1D438A6A8()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

void sub_1D438A6D4()
{
  sub_1D43996F0(*(void **)(v0 + 16), (uint64_t *)(v0 + 24));
}

uint64_t sub_1D438A6E0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

void sub_1D438A740()
{
  sub_1D4379EF0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(uint64_t *, unint64_t, uint64_t, uint64_t))(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_1D438A758()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D438A784()
{
  return sub_1D437E3C4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D438A790()
{
  return sub_1D438AF64((uint64_t (*)(void))type metadata accessor for FMIPDevice, sub_1D437F048);
}

uint64_t sub_1D438A7BC()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D438A7E8()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D438A814()
{
  return sub_1D437D754(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D438A820()
{
  uint64_t v1 = (int *)type metadata accessor for FMIPDevice();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v35 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + v3 + 472))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v4 + v1[28];
  uint64_t v6 = type metadata accessor for FMIPPlaySoundMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = v5 + *(int *)(v6 + 20);
    uint64_t v8 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = v4 + v1[29];
  uint64_t v10 = type metadata accessor for FMIPDeviceLostModeMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(v10 + 48);
    uint64_t v12 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = v4 + v1[30];
  uint64_t v14 = type metadata accessor for FMIPLockMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = v13 + *(int *)(v14 + 20);
    uint64_t v16 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  uint64_t v17 = v4 + v1[31];
  uint64_t v18 = type metadata accessor for FMIPEraseMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
  {
    uint64_t v19 = v17 + *(int *)(v18 + 20);
    uint64_t v20 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = v4 + v1[32];
  uint64_t v22 = type metadata accessor for FMIPItemGroup();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v21 + *(int *)(v22 + 48);
    uint64_t v24 = type metadata accessor for FMIPItemLostModeMetadata();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v23, 1, v24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = v23 + *(int *)(v24 + 24);
      uint64_t v26 = sub_1D4469618();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = v4 + v1[38];
  uint64_t v28 = sub_1D4469618();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  if (!v30(v27, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
  }
  uint64_t v31 = v4 + v1[39];
  if (!v30(v31, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v28);
  }
  uint64_t v32 = v4 + v1[40];
  if (!v30(v32, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v28);
  }
  uint64_t v33 = v4 + v1[41];
  if (!v30(v33, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v33, v28);
  }
  return MEMORY[0x1F4186498](v0, v3 + v35, v2 | 7);
}

uint64_t sub_1D438AF38()
{
  return sub_1D438AF64((uint64_t (*)(void))type metadata accessor for FMIPDevice, sub_1D437E328);
}

uint64_t sub_1D438AF64(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a2(v4, v5);
}

uint64_t sub_1D438AFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPDevice();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D438B048()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D438B074()
{
  return sub_1D438B77C(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D438B08C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D438B0C4()
{
  uint64_t v1 = (int *)type metadata accessor for FMIPUnknownItem();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + v1[9];
  type metadata accessor for FMIPProductType();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v9 - 1) + 48))(v7, 1, v9))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = v7 + v9[12];
      uint64_t v11 = sub_1D4469498();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
      v12(v10, v11);
      v12(v7 + v9[13], v11);
      v12(v7 + v9[14], v11);
      v12(v7 + v9[15], v11);
      v12(v7 + v9[16], v11);
      uint64_t v13 = v11;
      uint64_t v3 = (v2 + 16) & ~v2;
      v12(v7 + v9[17], v13);
    }
  }
  else if (EnumCaseMultiPayload == 1 || !EnumCaseMultiPayload && *(void *)(v7 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v5 + v1[11];
  uint64_t v15 = type metadata accessor for FMIPUnknownItemUTMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v37 = v4;
    uint64_t v38 = v3;
    uint64_t v36 = v2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v14 + *(int *)(v15 + 24);
    uint64_t v17 = type metadata accessor for FMIPUnknownItemProductMetadata();
    uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    if (!v18(v16, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v16 + *(int *)(v17 + 32);
      uint64_t v20 = sub_1D4469498();
      uint64_t v33 = v19;
      uint64_t v34 = *(void *)(v20 - 8);
      uint64_t v21 = v19;
      uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t))(v34 + 48);
      uint64_t v35 = v20;
      if (!v22(v21, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
      }
      uint64_t v23 = v16 + *(int *)(v17 + 36);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v22)(v23, 1, v35)) {
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v23, v35);
      }
    }
    uint64_t v24 = v14 + *(int *)(v15 + 28);
    uint64_t v4 = v37;
    uint64_t v3 = v38;
    if (!v18(v24, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = v24 + *(int *)(v17 + 32);
      uint64_t v26 = sub_1D4469498();
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
      if (!v28(v25, 1, v26)) {
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
      }
      uint64_t v29 = v24 + *(int *)(v17 + 36);
      unsigned int v30 = v28(v29, 1, v26);
      uint64_t v2 = v36;
      uint64_t v4 = v37;
      uint64_t v3 = v38;
      if (!v30) {
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v26);
      }
    }
  }
  unint64_t v31 = (((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, v31 + 8, v2 | 7);
}

uint64_t sub_1D438B638(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FMIPUnknownItem() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = *(void *)(v1 + v6);
  uint64_t v9 = *(void **)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  return sub_1D4380E88(a1, v1 + v4, v7, v8, v9);
}

uint64_t sub_1D438B6EC()
{
  return sub_1D438B704(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D438B704(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();
  return MEMORY[0x1F4186498](v1, 40, 7);
}

uint64_t sub_1D438B74C()
{
  return sub_1D438B77C(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D438B764()
{
  return sub_1D438B77C(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D438B77C(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();
  if (*(void *)(v1 + 32)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v1, 48, 7);
}

uint64_t sub_1D438B7D4()
{
  return sub_1D438135C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_1D438B7E0()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D438B820()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t sub_1D438B888()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D438B8B4()
{
  return sub_1D438066C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D438B8BC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t sub_1D438B924()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t sub_1D438B984()
{
  return sub_1D4380708(*(void *)(v0 + 16), v0 + 24);
}

void sub_1D438B990(char a1, uint64_t a2)
{
  sub_1D43804FC(a1, a2, v2);
}

uint64_t sub_1D438B998()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D438B9C4()
{
  return sub_1D43814F4(v0);
}

uint64_t sub_1D438B9CC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D44699B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D4469958();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D4469928();
  sub_1D42D7FAC(v12, (uint64_t)qword_1EBD83228);
  uint64_t v13 = sub_1D44698F8();
  os_log_type_t v14 = sub_1D446A038();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = v2;
    uint64_t v16 = v9;
    uint64_t v17 = v5;
    uint64_t v18 = a1;
    uint64_t v19 = v8;
    uint64_t v20 = v4;
    uint64_t v21 = v15;
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_1D4271000, v13, v14, "FMIPManager: dataManager updated items group", v15, 2u);
    uint64_t v22 = v21;
    uint64_t v4 = v20;
    uint64_t v8 = v19;
    a1 = v18;
    uint64_t v5 = v17;
    uint64_t v9 = v16;
    uint64_t v2 = v27;
    MEMORY[0x1D9447730](v22, -1, -1);
  }

  sub_1D4469948();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = v2;
  aBlock[4] = sub_1D438BD14;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C0C3C8;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1D4469988();
  MEMORY[0x1D9446420](0, v7, v11, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_1D438BCE8()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D438BD14()
{
  return sub_1D4381DA0(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D438BD1C()
{
  return sub_1D43820C0(v0);
}

uint64_t sub_1D438BD24()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D438BD50(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D438BDC0()
{
  return sub_1D438BDEC(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8B8]);
}

uint64_t sub_1D438BDEC(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 24));
  return MEMORY[0x1F4186498](v2, 32, 7);
}

void sub_1D438BE44()
{
  sub_1D42E6CFC(MEMORY[0x1E4FBC860], *(id *)(v0 + 24));
}

uint64_t sub_1D438BE74()
{
  return sub_1D4376ACC(v0);
}

unsigned char *storeEnumTagSinglePayload for OfflineFindingDeviceStateType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D438BF48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1D438C230@<X0>(void *a1@<X8>)
{
  return sub_1D4385894(a1);
}

uint64_t sub_1D438C248@<X0>(void *a1@<X8>)
{
  return sub_1D427690C(a1);
}

unint64_t FMDemoManager.DemoContext.assetFilename.getter()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0xD000000000000013;
  }
}

unint64_t FMDemoManager.DemoContext.userDefaultsKey.getter()
{
  if (*v0) {
    return 0xD00000000000001CLL;
  }
  else {
    return 0xD00000000000001BLL;
  }
}

BOOL static FMDemoManager.DemoContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FMDemoManager.DemoContext.hash(into:)()
{
  return sub_1D446A838();
}

uint64_t FMDemoManager.DemoContext.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t sub_1D438C368()
{
  return sub_1D446A888();
}

uint64_t sub_1D438C3AC()
{
  return sub_1D446A838();
}

uint64_t sub_1D438C3D4()
{
  return sub_1D446A888();
}

unint64_t static FMDemoManager.sharedPreferencesDomain.getter()
{
  return 0xD000000000000010;
}

void sub_1D438C430(uint64_t a1)
{
}

id static FMDemoManager.hasDemoModeUserDefault(for:)()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)sub_1D4469B08();
  id v3 = objc_msgSend(v0, sel_BOOLForKey_inDomain_, v1, v2);

  return v3;
}

uint64_t static FMDemoManager.peopleDemoEnabled.getter()
{
  return sub_1D42E6A04(&qword_1EA6C8FB0, byte_1EA6CA398);
}

unint64_t sub_1D438C554()
{
  unint64_t result = qword_1EBD7E878;
  if (!qword_1EBD7E878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7E878);
  }
  return result;
}

uint64_t FMDemoManager.deinit()
{
  return v0;
}

uint64_t FMDemoManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1D438C5C4()
{
  unint64_t result = qword_1EA6CA3A0;
  if (!qword_1EA6CA3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA3A0);
  }
  return result;
}

uint64_t method lookup function for FMDemoManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMDemoManager);
}

unsigned char *storeEnumTagSinglePayload for FMDemoManager.DemoContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D438C6FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMDemoManager.DemoContext()
{
  return &type metadata for FMDemoManager.DemoContext;
}

unsigned char *storeEnumTagSinglePayload for FMDemoManager.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D438C7D0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMDemoManager.Error()
{
  return &type metadata for FMDemoManager.Error;
}

unint64_t sub_1D438C80C()
{
  unint64_t result = qword_1EA6CA3A8;
  if (!qword_1EA6CA3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA3A8);
  }
  return result;
}

uint64_t sub_1D438C860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1D438C874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1D438C888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1D438C89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

unint64_t sub_1D438C8B0(uint64_t a1)
{
  uint64_t v3 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v27 = (char *)v23 - v11;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return MEMORY[0x1E4FBC860];
  }
  v23[2] = v1;
  uint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v26 = v10;
  os_log_type_t v14 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  swift_bridgeObjectRetain();
  v23[1] = a1;
  uint64_t v15 = a1 + 40;
  unint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v24 = v13;
  uint64_t v25 = v9;
  do
  {
    swift_bridgeObjectRetain();
    sub_1D4469628();
    swift_bridgeObjectRelease();
    if ((*v13)(v5, 1, v6) == 1)
    {
      sub_1D4276C3C((uint64_t)v5, (uint64_t *)&unk_1EBD7E930);
    }
    else
    {
      uint64_t v17 = *v14;
      uint64_t v18 = v27;
      (*v14)(v27, v5, v6);
      v17(v9, v18, v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v16 = sub_1D43B00D4(0, *(void *)(v16 + 16) + 1, 1, v16);
      }
      unint64_t v20 = *(void *)(v16 + 16);
      unint64_t v19 = *(void *)(v16 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v16 = sub_1D43B00D4(v19 > 1, v20 + 1, 1, v16);
      }
      *(void *)(v16 + 16) = v20 + 1;
      unint64_t v21 = v16
          + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))
          + *(void *)(v26 + 72) * v20;
      uint64_t v9 = v25;
      v17((char *)v21, v25, v6);
      uint64_t v13 = v24;
    }
    v15 += 16;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1D438CB70(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1D4337070(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = *(void *)(sub_1D4469688() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      uint64_t v7 = sub_1D4469638();
      uint64_t v9 = v8;
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_1D4337070(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1D438CCA8(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1D4398F00(a1, (uint64_t)sub_1D43994B4, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

unint64_t sub_1D438CD3C()
{
  uint64_t v0 = MEMORY[0x1E4FBC860];
  unint64_t v1 = sub_1D43AA678(MEMORY[0x1E4FBC860]);
  unint64_t v2 = sub_1D43AA86C(v0);
  unint64_t v3 = sub_1D43AA880(v0);
  unint64_t result = sub_1D43AA880(v0);
  *(void *)&xmmword_1EA6CA3B0 = v0;
  *((void *)&xmmword_1EA6CA3B0 + 1) = v1;
  qword_1EA6CA3C0 = v2;
  unk_1EA6CA3C8 = v3;
  qword_1EA6CA3D0 = result;
  return result;
}

unint64_t sub_1D438CDA8(char a1)
{
  unint64_t result = 0x61636F4C65666173;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D438CE70(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA458);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D439DE98();
  sub_1D446A8E8();
  uint64_t v11 = *v3;
  HIBYTE(v10) = 0;
  sub_1D42D5DA0(&qword_1EA6CA3F0);
  sub_1D439E09C(&qword_1EA6CA460, &qword_1EA6CA3F0, (void (*)(void))sub_1D42E5B1C);
  sub_1D446A698();
  if (!v2)
  {
    uint64_t v11 = v3[1];
    HIBYTE(v10) = 1;
    sub_1D42D5DA0(&qword_1EA6CA408);
    sub_1D439E108((unint64_t *)&unk_1EA6CA470, &qword_1EA6CA408, (void (*)(void))sub_1D4352F2C);
    sub_1D446A698();
    uint64_t v11 = v3[2];
    HIBYTE(v10) = 2;
    sub_1D42D5DA0(&qword_1EA6CA430);
    sub_1D439E108(&qword_1EA6CA488, &qword_1EA6CA430, (void (*)(void))sub_1D439E1B8);
    sub_1D446A698();
    uint64_t v11 = v3[3];
    HIBYTE(v10) = 3;
    sub_1D42D5DA0(&qword_1EA6CA448);
    sub_1D439E20C();
    sub_1D446A698();
    uint64_t v11 = v3[4];
    HIBYTE(v10) = 4;
    sub_1D446A698();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1D438D16C()
{
  return sub_1D438CDA8(*v0);
}

uint64_t sub_1D438D174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D439D7A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D438D19C(uint64_t a1)
{
  unint64_t v2 = sub_1D439DE98();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D438D1D8(uint64_t a1)
{
  unint64_t v2 = sub_1D439DE98();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1D438D214@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D439D9C0(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1D438D25C(void *a1)
{
  return sub_1D438CE70(a1);
}

uint64_t sub_1D438D298(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, int a5, int a6, void *a7)
{
  uint64_t v8 = v7;
  id v129 = a7;
  LODWORD(v134) = a6;
  LODWORD(v128) = a5;
  uint64_t v132 = a1;
  uint64_t v133 = a4;
  uint64_t v135 = a2;
  uint64_t v10 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v127 = (uint64_t)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v126 = (uint64_t)&v115 - v13;
  uint64_t v14 = sub_1D42D5DA0(&qword_1EA6CA538);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v125 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1D42D5DA0(&qword_1EA6CA4E0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v124 = (char *)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1D42D5DA0(&qword_1EA6CA510);
  MEMORY[0x1F4188790](v18 - 8);
  unint64_t v123 = (char *)&v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1D42D5DA0(&qword_1EA6CA578);
  MEMORY[0x1F4188790](v20 - 8);
  unint64_t v122 = (char *)&v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1D42D5DA0(&qword_1EA6CA5A0);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v121 = (char *)&v115 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1D42D5DA0(&qword_1EA6CA560);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1D42D5DA0((uint64_t *)&unk_1EA6CA568);
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v131 = (uint64_t)&v115 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1D4469688();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v115 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = *a3;
  *(void *)(v8 + 40) = 0;
  swift_unknownObjectWeakInit();
  sub_1D4469678();
  uint64_t v35 = sub_1D4469638();
  uint64_t v37 = v36;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  *(void *)(v8 + 48) = v35;
  *(void *)(v8 + 56) = v37;
  uint64_t v38 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v8 + 64) = 0;
  *(_OWORD *)(v8 + 88) = 0u;
  *(_OWORD *)(v8 + 104) = 0u;
  *(_OWORD *)(v8 + 120) = 0u;
  *(_OWORD *)(v8 + 136) = 0u;
  *(_OWORD *)(v8 + 152) = 0u;
  *(void *)(v8 + 168) = 0;
  *(void *)(v8 + 176) = v38;
  uint64_t v39 = MEMORY[0x1E4FBC868];
  *(void *)(v8 + 184) = MEMORY[0x1E4FBC868];
  *(void *)(v8 + 192) = v39;
  *(void *)(v8 + 200) = v39;
  *(void *)(v8 + 208) = v39;
  *(void *)(v8 + 216) = v39;
  *(void *)(v8 + 224) = v39;
  *(void *)(v8 + 232) = v39;
  *(void *)(v8 + 240) = v38;
  *(void *)(v8 + 248) = v39;
  *(void *)(v8 + 256) = v39;
  *(void *)(v8 + 264) = v39;
  *(void *)(v8 + 272) = v39;
  *(void *)(v8 + 280) = v38;
  *(void *)(v8 + 288) = v38;
  *(void *)(v8 + 296) = v38;
  *(void *)(v8 + 304) = v39;
  *(_OWORD *)(v8 + 328) = 0u;
  *(_OWORD *)(v8 + 344) = 0u;
  *(_OWORD *)(v8 + 312) = 0u;
  uint64_t v130 = v34;
  *(void *)(v8 + 16) = v34;
  LOBYTE(v33) = v128;
  *(unsigned char *)(v8 + 24) = v128;
  *(unsigned char *)(v8 + 25) = v134;
  *(void *)(v8 + 80) = v38;
  id v40 = v129;
  *(void *)(v8 + 72) = v129;
  id v129 = v40;
  if (v33)
  {
    uint64_t v41 = v131;
    sub_1D427C3E4(0xD000000000000012, 0x80000001D4481320, 0x6174614450494D46, 0xEF726567616E614DLL, v131);
    sub_1D42A3A74(v41, (uint64_t)v26, (uint64_t *)&unk_1EA6CA568);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v26, 0, 1, v27);
    sub_1D42D5DA0(&qword_1EBD7FD50);
    swift_allocObject();
    uint64_t v42 = v135;
    swift_bridgeObjectRetain();
    uint64_t v43 = v42;
    *(void *)(v8 + 328) = sub_1D42AA9A0(v132, v42, 0x2E73656369766544, 0xEC00000061746164, (uint64_t)v26, &qword_1EA6CA560);
    swift_release();
    uint64_t v120 = sub_1D4469868();
    uint64_t v44 = *(void *)(v120 - 8);
    uint64_t v119 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
    uint64_t v128 = v44 + 16;
    uint64_t v45 = (uint64_t)v121;
    v119(v121, v41, v120);
    uint64_t v46 = v41 + *(int *)(v27 + 44);
    uint64_t v47 = sub_1D42D5DA0(&qword_1EA6CA5A8);
    uint64_t v48 = v45 + *(int *)(v47 + 44);
    uint64_t v49 = sub_1D4469898();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v117 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
    uint64_t v118 = v50 + 16;
    uint64_t v116 = v46;
    uint64_t v115 = v49;
    v117(v48, v46, v49);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v45, 0, 1, v47);
    sub_1D42D5DA0(&qword_1EBD7FD58);
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v51 = v132;
    *(void *)(v8 + 336) = sub_1D42AA9A0(v132, v43, 0xD000000000000012, 0x80000001D4481340, v45, &qword_1EA6CA5A0);
    swift_release();
    uint64_t v52 = (uint64_t)v122;
    uint64_t v53 = v131;
    unint64_t v55 = v119;
    uint64_t v54 = v120;
    v119(v122, v131, v120);
    uint64_t v56 = sub_1D42D5DA0(&qword_1EA6CA580);
    uint64_t v57 = v49;
    uint64_t v58 = v117;
    v117(v52 + *(int *)(v56 + 44), v46, v57);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v52, 0, 1, v56);
    sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD40);
    swift_allocObject();
    uint64_t v59 = v135;
    swift_bridgeObjectRetain();
    *(void *)(v8 + 344) = sub_1D42AA9A0(v51, v59, 0x61642E72656E774FLL, 0xEA00000000006174, v52, &qword_1EA6CA578);
    swift_release();
    uint64_t v60 = (uint64_t)v123;
    uint64_t v61 = v55;
    v55(v123, v53, v54);
    uint64_t v62 = sub_1D42D5DA0(&qword_1EA6CA518);
    uint64_t v63 = v116;
    v58(v60 + *(int *)(v62 + 44), v116, v115);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v60, 0, 1, v62);
    sub_1D42D5DA0(&qword_1EBD7E7D8);
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v64 = v132;
    *(void *)(v8 + 312) = sub_1D42AA9A0(v132, v59, 0x61642E736D657449, 0xEA00000000006174, v60, &qword_1EA6CA510);
    swift_release();
    uint64_t v65 = (uint64_t)v124;
    uint64_t v66 = v131;
    uint64_t v67 = v120;
    v61(v124, v131, v120);
    uint64_t v68 = sub_1D42D5DA0(&qword_1EA6CA4E8);
    uint64_t v69 = v63;
    uint64_t v70 = v115;
    char v71 = v117;
    v117(v65 + *(int *)(v68 + 44), v69, v115);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v65, 0, 1, v68);
    sub_1D42D5DA0(&qword_1EBD7E7D0);
    swift_allocObject();
    uint64_t v72 = v135;
    swift_bridgeObjectRetain();
    *(void *)(v8 + 320) = sub_1D42AA9A0(v64, v72, 0x756F72476D657449, 0xEF617461642E7370, v65, &qword_1EA6CA4E0);
    swift_release();
    uint64_t v73 = (uint64_t)v125;
    v119(v125, v66, v67);
    uint64_t v74 = sub_1D42D5DA0(&qword_1EA6CA540);
    v71(v73 + *(int *)(v74 + 44), v116, v70);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v73, 0, 1, v74);
    sub_1D42D5DA0(&qword_1EBD7E7C8);
    swift_allocObject();
    char v75 = sub_1D42AA9A0(v64, v72, 0xD000000000000012, 0x80000001D4481360, v73, &qword_1EA6CA538);
    sub_1D4276C3C(v66, (uint64_t *)&unk_1EA6CA568);
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v8 + 312) = 0;
    swift_release();
    *(void *)(v8 + 320) = 0;
    swift_release();
    *(void *)(v8 + 328) = 0;
    swift_release();
    *(void *)(v8 + 336) = 0;
    swift_release();
    *(void *)(v8 + 344) = 0;
    swift_release();
    char v75 = 0;
  }
  *(void *)(v8 + 352) = v75;
  swift_release();
  uint64_t v76 = v133;
  sub_1D42A3A74(v133, v8 + OBJC_IVAR____TtC8FMIPCore15FMIPDataManager_preferredLocale, (uint64_t *)&unk_1EBD7E560);
  if (v134)
  {
    *(void *)(v8 + OBJC_IVAR____TtC8FMIPCore15FMIPDataManager_geocodingCache) = 0;
  }
  else
  {
    uint64_t v77 = v126;
    sub_1D42A3A74(v76, v126, (uint64_t *)&unk_1EBD7E560);
    type metadata accessor for FMIPReverseGeocodingCache();
    *(void *)(swift_allocObject() + qword_1EA6E4A80 + 8) = 0;
    swift_unknownObjectWeakInit();
    uint64_t v78 = v127;
    sub_1D42A3A74(v77, v127, (uint64_t *)&unk_1EBD7E560);
    uint64_t v79 = sub_1D4299224(v78);
    sub_1D4276C3C(v77, (uint64_t *)&unk_1EBD7E560);
    *(void *)(v8 + OBJC_IVAR____TtC8FMIPCore15FMIPDataManager_geocodingCache) = v79;
    *(void *)(v79 + qword_1EA6E4A80 + 8) = &off_1F2C0C810;
    swift_unknownObjectWeakAssign();
  }
  v137[0] = v130;
  if ((sub_1D428C4D0(v137) & 1) == 0)
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v99 = sub_1D4469928();
    sub_1D42D7FAC(v99, (uint64_t)qword_1EBD83228);
    swift_retain_n();
    uint64_t v81 = sub_1D44698F8();
    os_log_type_t v100 = sub_1D446A038();
    if (os_log_type_enabled(v81, v100))
    {
      uint64_t v83 = swift_slowAlloc();
      uint64_t v135 = swift_slowAlloc();
      v137[0] = v135;
      *(_DWORD *)uint64_t v83 = 136315138;
      uint64_t v134 = v83 + 4;
      uint64_t v101 = *(void *)(v8 + 48);
      unint64_t v102 = *(void *)(v8 + 56);
      swift_bridgeObjectRetain();
      unint64_t v103 = sub_1D427A0D0(0xCuLL, v101, v102);
      uint64_t v105 = v104;
      uint64_t v107 = v106;
      uint64_t v109 = v108;
      swift_bridgeObjectRelease();
      uint64_t v110 = MEMORY[0x1D9445EF0](v103, v105, v107, v109);
      unint64_t v112 = v111;
      swift_bridgeObjectRelease();
      uint64_t v136 = sub_1D42CB9EC(v110, v112, v137);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v81, v100, "FMIPDataManager<%s>.init", (uint8_t *)v83, 0xCu);
      uint64_t v98 = v135;
      goto LABEL_16;
    }
LABEL_17:
    swift_release_n();

    uint64_t v113 = v76;
    goto LABEL_18;
  }
  *(unsigned char *)(v8 + 64) = 1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v80 = sub_1D4469928();
  sub_1D42D7FAC(v80, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v81 = sub_1D44698F8();
  os_log_type_t v82 = sub_1D446A038();
  if (!os_log_type_enabled(v81, v82)) {
    goto LABEL_17;
  }
  uint64_t v83 = swift_slowAlloc();
  uint64_t v135 = swift_slowAlloc();
  v137[0] = v135;
  *(_DWORD *)uint64_t v83 = 136315394;
  uint64_t v84 = *(void *)(v8 + 48);
  unint64_t v85 = *(void *)(v8 + 56);
  swift_bridgeObjectRetain();
  unint64_t v86 = sub_1D427A0D0(0xCuLL, v84, v85);
  uint64_t v88 = v87;
  uint64_t v90 = v89;
  uint64_t v92 = v91;
  swift_bridgeObjectRelease();
  uint64_t v93 = MEMORY[0x1D9445EF0](v86, v88, v90, v92);
  unint64_t v95 = v94;
  swift_bridgeObjectRelease();
  uint64_t v136 = sub_1D42CB9EC(v93, v95, v137);
  sub_1D446A188();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v83 + 12) = 2080;
  uint64_t v136 = v130;
  uint64_t v96 = sub_1D4469B68();
  uint64_t v136 = sub_1D42CB9EC(v96, v97, v137);
  sub_1D446A188();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1D4271000, v81, v82, "FMIPDataManager<%s>.init with valid cache for subsystems: %s", (uint8_t *)v83, 0x16u);
  uint64_t v98 = v135;
LABEL_16:
  swift_arrayDestroy();
  MEMORY[0x1D9447730](v98, -1, -1);
  MEMORY[0x1D9447730](v83, -1, -1);

  uint64_t v113 = v133;
LABEL_18:
  sub_1D4276C3C(v113, (uint64_t *)&unk_1EBD7E560);
  return v8;
}

uint64_t sub_1D438E240()
{
  uint64_t v1 = v0;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  unint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    long long v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = v19;
    *(_DWORD *)long long v5 = 136315138;
    uint64_t v6 = *(void *)(v1 + 48);
    unint64_t v7 = *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1D427A0D0(0xCuLL, v6, v7);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x1D9445EF0](v8, v10, v12, v14);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    sub_1D42CB9EC(v15, v17, &v20);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPDataManager<%s>.deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v19, -1, -1);
    MEMORY[0x1D9447730](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  sub_1D42F9538(v1 + 32);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1D42E7D9C(*(void *)(v1 + 88), *(void *)(v1 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1D4276C3C(v1 + OBJC_IVAR____TtC8FMIPCore15FMIPDataManager_preferredLocale, (uint64_t *)&unk_1EBD7E560);
  swift_release();
  return v1;
}

uint64_t sub_1D438E574()
{
  sub_1D438E240();
  return swift_deallocClassInstance();
}

uint64_t sub_1D438E5CC()
{
  return type metadata accessor for FMIPDataManager();
}

BOOL sub_1D438E5D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 208);
  swift_bridgeObjectRetain();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1D438CCA8(v3, v2);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D4469928();
  sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1D44698F8();
  os_log_type_t v7 = sub_1D446A038();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v18[0] = v9;
    *(_DWORD *)unint64_t v8 = 136315138;
    sub_1D4469688();
    type metadata accessor for FMIPDeviceConnectedState(0);
    sub_1D42AAE70(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1D4469A68();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    sub_1D42CB9EC(v10, v12, v18);
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v6, v7, "FMIPManager: updating merged deviceConnectedStates: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v9, -1, -1);
    MEMORY[0x1D9447730](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v13 = *(void *)(v1 + 208);
  swift_bridgeObjectRetain();
  char v14 = sub_1D43F05C8(v4, v13);
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    swift_beginAccess();
    unint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1D439B084(v15, v4);
    swift_bridgeObjectRelease();
    *(void *)(v1 + 80) = v16;
    swift_bridgeObjectRelease();
    *(void *)(v1 + 208) = v4;
  }
  swift_bridgeObjectRelease();
  return (v14 & 1) == 0;
}

BOOL sub_1D438E8A8(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
  uint64_t v5 = sub_1D44698F8();
  os_log_type_t v6 = sub_1D446A038();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v7 = 0;
    _os_log_impl(&dword_1D4271000, v5, v6, "FMIPDataManager: update safe locations", v7, 2u);
    MEMORY[0x1D9447730](v7, -1, -1);
  }

  uint64_t v8 = *(void *)(v2 + 240);
  swift_bridgeObjectRetain();
  char v9 = sub_1D42D96BC(a1, v8);
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    swift_retain();
    uint64_t v10 = sub_1D439A1FC(a1, v2);
    swift_release();
    *(void *)(v2 + 240) = v10;
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v2 + 24) == 1)
    {
      if (*(void *)(v2 + 352))
      {
        uint64_t v11 = *(void *)(v2 + 240);
        uint64_t v12 = *(void *)(v2 + 248);
        uint64_t v13 = *(void *)(v2 + 256);
        uint64_t v14 = *(void *)(v2 + 264);
        uint64_t v15 = *(void *)(v2 + 272);
        v17[0] = v11;
        v17[1] = v12;
        void v17[2] = v13;
        void v17[3] = v14;
        v17[4] = v15;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D43949B0(v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
  }
  return (v9 & 1) == 0;
}

void sub_1D438EA98(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v122 = (uint64_t)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v113 - v7;
  uint64_t v9 = sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4A0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v124 = (void **)((char *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  uint64_t v121 = (uint64_t)&v113 - v16;
  uint64_t v17 = type metadata accessor for FMIPItem() - 8;
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v125 = (void **)((char *)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  unint64_t v22 = (unint64_t)&v113 - v21;
  uint64_t v23 = *(void **)(a1 + 16);
  uint64_t v115 = a1;
  uint64_t v113 = v23;
  if (!v23)
  {
    unint64_t v102 = MEMORY[0x1E4FBC868];
    unint64_t v123 = (void *)MEMORY[0x1E4FBC868];
    unint64_t v103 = (int *)MEMORY[0x1E4FBC868];
LABEL_53:
    v2[24] = v103;
    uint64_t v30 = v103;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v2[23] = v102;
    unint64_t v22 = v102;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(void *)((char *)v2 + OBJC_IVAR____TtC8FMIPCore15FMIPDataManager_geocodingCache))
    {
      uint64_t v104 = swift_bridgeObjectRetain();
      sub_1D43925E4(v104);
      swift_bridgeObjectRelease();
    }
    uint64_t v2 = v113;
    if (qword_1EBD80068 != -1) {
LABEL_65:
    }
      swift_once();
    uint64_t v105 = sub_1D4469928();
    sub_1D42D7FAC(v105, (uint64_t)qword_1EBD83228);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v106 = v123;
    swift_bridgeObjectRetain();
    uint64_t v107 = sub_1D44698F8();
    os_log_type_t v108 = sub_1D446A038();
    if (os_log_type_enabled(v107, v108))
    {
      uint64_t v109 = swift_slowAlloc();
      *(_DWORD *)uint64_t v109 = 134218752;
      v139[0] = v2;
      sub_1D446A188();
      swift_bridgeObjectRelease();
      *(_WORD *)(v109 + 12) = 2048;
      uint64_t v110 = *((void *)v30 + 2);
      swift_bridgeObjectRelease();
      v139[0] = v110;
      sub_1D446A188();
      swift_bridgeObjectRelease();
      *(_WORD *)(v109 + 22) = 2048;
      uint64_t v111 = *(void *)(v22 + 16);
      swift_bridgeObjectRelease();
      v139[0] = v111;
      sub_1D446A188();
      swift_bridgeObjectRelease();
      *(_WORD *)(v109 + 32) = 2048;
      uint64_t v112 = v106[2];
      swift_bridgeObjectRelease();
      v139[0] = v112;
      sub_1D446A188();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v107, v108, "FMIPDataManager: updated ephemerals items: %ld, locations: %ld, original: %ld,  addresses: %ld", (uint8_t *)v109, 0x2Au);
      MEMORY[0x1D9447730](v109, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return;
  }
  uint64_t v117 = (uint64_t)v2 + OBJC_IVAR____TtC8FMIPCore15FMIPDataManager_preferredLocale;
  uint64_t v24 = a1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  uint64_t v126 = v22 + 8;
  uint64_t v118 = (void (**)(uint64_t, uint64_t, uint64_t, int *))(v13 + 56);
  uint64_t v114 = v13;
  uint64_t v116 = (uint64_t (**)(uint64_t, uint64_t, id))(v13 + 48);
  uint64_t v131 = *(void *)(v20 + 72);
  swift_bridgeObjectRetain();
  uint64_t v25 = v23;
  uint64_t v127 = v8;
  unint64_t v128 = MEMORY[0x1E4FBC868];
  unint64_t v123 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v133 = (void *)MEMORY[0x1E4FBC868];
  unint64_t v129 = v22;
  uint64_t v130 = v2;
  uint64_t v119 = (int *)v12;
  uint64_t v120 = v11;
  while (1)
  {
    sub_1D42D22A0(v24, v22, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v26 = *(void **)(v22 + 392);
    uint64_t v134 = v25;
    uint64_t v135 = v24;
    if (!v26) {
      break;
    }
    uint64_t v27 = *(void *)(v22 + 400);
    uint64_t v28 = *(void *)(v22 + 384);
    uint64_t v29 = *(void *)(v22 + 352);
    uint64_t v30 = *(int **)(v22 + 360);
    uint64_t v2 = v26;
    swift_bridgeObjectRetain();
    uint64_t v31 = v133;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    os_log_t v140 = v31;
    unint64_t v22 = sub_1D42C4FCC(v29, (uint64_t)v30);
    uint64_t v34 = v31[2];
    BOOL v35 = (v33 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35))
    {
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    char v37 = v33;
    if (v31[3] >= v36)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1D43D8F64();
      }
    }
    else
    {
      sub_1D42C1798(v36, isUniquelyReferenced_nonNull_native);
      unint64_t v38 = sub_1D42C4FCC(v29, (uint64_t)v30);
      if ((v37 & 1) != (v39 & 1)) {
        goto LABEL_66;
      }
      unint64_t v22 = v38;
    }
    char v40 = v28 & 1;
    char v41 = BYTE1(v28) & 1;
    char v42 = BYTE2(v28) & 1;
    uint64_t v43 = v140;
    id v132 = v2;
    uint64_t v133 = v140;
    if (v37)
    {
      uint64_t v44 = v2;
      uint64_t v45 = v140[7] + 24 * v22;

      *(unsigned char *)uint64_t v45 = v40;
      *(unsigned char *)(v45 + 1) = v41;
      *(unsigned char *)(v45 + 2) = v42;
      *(unsigned char *)(v45 + 3) = BYTE3(v28);
      *(void *)(v45 + 8) = v44;
      *(void *)(v45 + 16) = v27;
    }
    else
    {
      v140[(v22 >> 6) + 8] |= 1 << v22;
      uint64_t v46 = (uint64_t *)(v43[6] + 16 * v22);
      *uint64_t v46 = v29;
      v46[1] = (uint64_t)v30;
      uint64_t v47 = v43[7] + 24 * v22;
      *(unsigned char *)uint64_t v47 = v40;
      *(unsigned char *)(v47 + 1) = v41;
      *(unsigned char *)(v47 + 2) = v42;
      *(unsigned char *)(v47 + 3) = BYTE3(v28);
      *(void *)(v47 + 8) = v2;
      *(void *)(v47 + 16) = v27;
      uint64_t v48 = v43[2];
      BOOL v49 = __OFADD__(v48, 1);
      uint64_t v50 = v48 + 1;
      if (v49) {
        goto LABEL_61;
      }
      v43[2] = v50;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D4276C98(v126, (uint64_t)v138, &qword_1EBD7CC10);
    sub_1D4276C98((uint64_t)v138, (uint64_t)v139, &qword_1EBD7CC10);
    int v51 = sub_1D42FE02C((uint64_t)v139);
    unint64_t v22 = v129;
    uint64_t v2 = v130;
    uint64_t v52 = (uint64_t)v127;
    uint64_t v24 = v135;
    if (v51 == 1)
    {
      sub_1D42D20B8(v129, (uint64_t (*)(void))type metadata accessor for FMIPItem);

      uint64_t v25 = v134;
    }
    else
    {
      uint64_t v53 = v125;
      sub_1D42D22A0(v129, (uint64_t)v125, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      sub_1D42A3A74(v117, v52, (uint64_t *)&unk_1EBD7E560);
      uint64_t v54 = (void *)v53[49];
      if (v54)
      {
        uint64_t v55 = v53[48] >> 24;
        uint64_t v57 = v53[44];
        uint64_t v56 = v53[45];
        sub_1D42A3A74(v52, v122, (uint64_t *)&unk_1EBD7E560);
        v137[0] = v55;
        if (FMIPLocationType.rawValue.getter() == 0x656D69746C616572 && v58 == 0xE800000000000000) {
          char v59 = 1;
        }
        else {
          char v59 = sub_1D446A758();
        }
        id v61 = v54;
        sub_1D42FAC78((uint64_t)v138, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1D4276C3C(v52, (uint64_t *)&unk_1EBD7E560);
        sub_1D42D20B8((uint64_t)v125, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v60 = (uint64_t)v120;
        *uint64_t v120 = v57;
        *(void *)(v60 + 8) = v56;
        uint64_t v30 = v119;
        *(unsigned char *)(v60 + v119[8]) = 0;
        *(unsigned char *)(v60 + v30[7]) = v59 & 1;
        *(void *)(v60 + 16) = v61;
        sub_1D4276C98(v122, v60 + v30[6], (uint64_t *)&unk_1EBD7E560);
        (*v118)(v60, 0, 1, v30);
      }
      else
      {
        sub_1D4276C98((uint64_t)v138, (uint64_t)v137, &qword_1EBD7CC10);
        sub_1D42FC768((uint64_t)v137);
        sub_1D4276C3C(v52, (uint64_t *)&unk_1EBD7E560);
        sub_1D42D20B8((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v30 = v119;
        uint64_t v60 = (uint64_t)v120;
        (*v118)((uint64_t)v120, 1, 1, v119);
      }
      int v62 = (*v116)(v60, 1, v30);
      uint64_t v25 = v134;
      if (v62 != 1)
      {
        uint64_t v63 = v121;
        sub_1D42BB578(v60, v121, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        uint64_t v64 = v124;
        sub_1D42D22A0(v63, (uint64_t)v124, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        uint64_t v65 = v123;
        int v66 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v136 = v65;
        unint64_t v68 = sub_1D43AEFC4(v64);
        uint64_t v69 = v65[2];
        BOOL v70 = (v67 & 1) == 0;
        uint64_t v71 = v69 + v70;
        if (__OFADD__(v69, v70)) {
          goto LABEL_63;
        }
        char v72 = v67;
        if (v65[3] >= v71)
        {
          if (v66)
          {
            if ((v67 & 1) == 0) {
              goto LABEL_30;
            }
          }
          else
          {
            sub_1D43D958C();
            if ((v72 & 1) == 0) {
              goto LABEL_30;
            }
          }
        }
        else
        {
          sub_1D43D4730(v71, v66);
          unint64_t v73 = sub_1D43AEFC4(v124);
          if ((v72 & 1) != (v74 & 1)) {
            goto LABEL_67;
          }
          unint64_t v68 = v73;
          if ((v72 & 1) == 0)
          {
LABEL_30:
            char v75 = v136;
            v136[(v68 >> 6) + 8] |= 1 << v68;
            sub_1D42D22A0((uint64_t)v124, v75[6] + *(void *)(v114 + 72) * v68, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
            memcpy((void *)(v75[7] + 288 * v68), v139, 0x120uLL);
            uint64_t v76 = v75[2];
            BOOL v49 = __OFADD__(v76, 1);
            uint64_t v77 = v76 + 1;
            if (v49) {
              goto LABEL_64;
            }
            unint64_t v123 = v75;
            v75[2] = v77;
            goto LABEL_35;
          }
        }
        unint64_t v123 = v136;
        uint64_t v78 = (void *)(v136[7] + 288 * v68);
        memcpy(v137, v78, sizeof(v137));
        sub_1D42FC8A4((uint64_t)v137);
        memcpy(v78, v139, 0x120uLL);
LABEL_35:
        swift_bridgeObjectRelease();
        sub_1D42D20B8((uint64_t)v124, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);

        sub_1D42D20B8(v121, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        break;
      }
      sub_1D42D20B8(v22, (uint64_t (*)(void))type metadata accessor for FMIPItem);

      sub_1D42FAC78((uint64_t)v138, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
      sub_1D4276C3C(v60, (uint64_t *)&unk_1EA6CA4A0);
    }
LABEL_4:
    v24 += v131;
    uint64_t v25 = (void *)((char *)v25 - 1);
    if (!v25)
    {
      swift_bridgeObjectRelease();
      unint64_t v102 = v128;
      unint64_t v103 = (int *)v133;
      goto LABEL_53;
    }
  }
  uint64_t v79 = *(void **)(v22 + 320);
  if (!v79)
  {
LABEL_48:
    sub_1D42D20B8(v22, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    goto LABEL_4;
  }
  uint64_t v80 = *(void *)(v22 + 328);
  unint64_t v81 = *(void *)(v22 + 312);
  uint64_t v83 = *(void *)(v22 + 352);
  uint64_t v82 = *(void *)(v22 + 360);
  uint64_t v30 = v79;
  swift_bridgeObjectRetain();
  unint64_t v84 = v128;
  char v85 = swift_isUniquelyReferenced_nonNull_native();
  v139[0] = v84;
  unint64_t v22 = sub_1D42C4FCC(v83, v82);
  uint64_t v87 = *(void *)(v84 + 16);
  BOOL v88 = (v86 & 1) == 0;
  uint64_t v89 = v87 + v88;
  if (__OFADD__(v87, v88)) {
    goto LABEL_60;
  }
  char v90 = v86;
  if (*(void *)(v84 + 24) >= v89)
  {
    if ((v85 & 1) == 0) {
      sub_1D43D8F64();
    }
    goto LABEL_43;
  }
  sub_1D42C1798(v89, v85);
  unint64_t v91 = sub_1D42C4FCC(v83, v82);
  if ((v90 & 1) == (v92 & 1))
  {
    unint64_t v22 = v91;
LABEL_43:
    char v93 = v81 & 1;
    unint64_t v94 = v81 >> 24;
    unint64_t v95 = (void *)v139[0];
    uint64_t v2 = (void *)((v81 & 0x100) >> 8);
    unint64_t v96 = (v81 & 0x10000) >> 16;
    unint64_t v128 = v139[0];
    if (v90)
    {
      uint64_t v97 = *(void *)(v139[0] + 56) + 24 * v22;

      *(unsigned char *)uint64_t v97 = v93;
      *(unsigned char *)(v97 + 1) = (_BYTE)v2;
      *(unsigned char *)(v97 + 2) = v96;
      *(unsigned char *)(v97 + 3) = v94;
      *(void *)(v97 + 8) = v30;
      *(void *)(v97 + 16) = v80;
    }
    else
    {
      *(void *)(v139[0] + 8 * (v22 >> 6) + 64) |= 1 << v22;
      uint64_t v98 = (uint64_t *)(v95[6] + 16 * v22);
      *uint64_t v98 = v83;
      v98[1] = v82;
      uint64_t v99 = v95[7] + 24 * v22;
      *(unsigned char *)uint64_t v99 = v93;
      *(unsigned char *)(v99 + 1) = (_BYTE)v2;
      *(unsigned char *)(v99 + 2) = v96;
      *(unsigned char *)(v99 + 3) = v94;
      *(void *)(v99 + 8) = v30;
      *(void *)(v99 + 16) = v80;
      uint64_t v100 = v95[2];
      BOOL v49 = __OFADD__(v100, 1);
      uint64_t v101 = v100 + 1;
      if (v49) {
        goto LABEL_62;
      }
      v95[2] = v101;
      swift_bridgeObjectRetain();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v22 = v129;
    uint64_t v2 = v130;
    uint64_t v25 = v134;
    uint64_t v24 = v135;
    goto LABEL_48;
  }
LABEL_66:
  sub_1D446A7A8();
  __break(1u);
LABEL_67:
  sub_1D446A7A8();
  __break(1u);
}

uint64_t sub_1D438F7F4(uint64_t a1)
{
  uint64_t v36 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v33 = *(void *)(v36 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v36);
  unint64_t v38 = (uint64_t *)((char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v31 - v5);
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v32 = v1;
    uint64_t v35 = v1 + OBJC_IVAR____TtC8FMIPCore15FMIPDataManager_preferredLocale;
    swift_bridgeObjectRetain();
    memcpy(v42, (const void *)(a1 + 32), sizeof(v42));
    uint64_t v8 = v7 - 1;
    uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v10 = 384;
    uint64_t v34 = a1;
    while (1)
    {
      sub_1D4276C98((uint64_t)&v42[5], (uint64_t)v43, &qword_1EBD7CC10);
      if (sub_1D42FE02C((uint64_t)v43) != 1)
      {
        uint64_t v37 = v10;
        uint64_t v11 = (void *)v42[3];
        uint64_t v12 = v42[0];
        uint64_t v13 = v42[1];
        uint64_t v14 = v36;
        sub_1D42A3A74(v35, (uint64_t)v6 + *(int *)(v36 + 24), (uint64_t *)&unk_1EBD7E560);
        *uint64_t v6 = v12;
        v6[1] = v13;
        *((unsigned char *)v6 + *(int *)(v14 + 32)) = 0;
        *((unsigned char *)v6 + *(int *)(v14 + 28)) = 0;
        _OWORD v6[2] = v11;
        uint64_t v15 = v38;
        sub_1D42D22A0((uint64_t)v6, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        sub_1D42FC4A4((uint64_t)v42);
        sub_1D42FAC78((uint64_t)&v42[5], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
        swift_bridgeObjectRetain();
        id v16 = v11;
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        char v41 = v9;
        unint64_t v19 = sub_1D43AEFC4(v15);
        uint64_t v20 = v9[2];
        BOOL v21 = (v18 & 1) == 0;
        uint64_t v22 = v20 + v21;
        if (__OFADD__(v20, v21))
        {
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          sub_1D446A7A8();
          __break(1u);
          JUMPOUT(0x1D438FBECLL);
        }
        char v23 = v18;
        if (v9[3] >= v22)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1D43D958C();
          }
        }
        else
        {
          sub_1D43D4730(v22, isUniquelyReferenced_nonNull_native);
          unint64_t v24 = sub_1D43AEFC4(v38);
          if ((v23 & 1) != (v25 & 1)) {
            goto LABEL_24;
          }
          unint64_t v19 = v24;
        }
        sub_1D4276C98((uint64_t)&v42[5], (uint64_t)v40, &qword_1EBD7CC10);
        if (v23)
        {
          uint64_t v9 = v41;
          uint64_t v26 = (void *)(v41[7] + 288 * v19);
          memcpy(v39, v26, sizeof(v39));
          sub_1D42FC8A4((uint64_t)v39);
          memcpy(v26, v40, 0x120uLL);
        }
        else
        {
          uint64_t v9 = v41;
          v41[(v19 >> 6) + 8] |= 1 << v19;
          sub_1D42D22A0((uint64_t)v38, v9[6] + *(void *)(v33 + 72) * v19, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
          memcpy((void *)(v9[7] + 288 * v19), v40, 0x120uLL);
          uint64_t v27 = v9[2];
          BOOL v28 = __OFADD__(v27, 1);
          uint64_t v29 = v27 + 1;
          if (v28) {
            goto LABEL_23;
          }
          void v9[2] = v29;
        }
        swift_bridgeObjectRelease();
        sub_1D42D20B8((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        sub_1D42FC604((uint64_t)v42);
        sub_1D42D20B8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        a1 = v34;
        uint64_t v10 = v37;
      }
      if (!v8) {
        break;
      }
      memcpy(v42, (const void *)(a1 + v10), sizeof(v42));
      v10 += 352;
      --v8;
    }
    swift_bridgeObjectRelease();
    uint64_t v1 = v32;
  }
  else
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
  }
  if (*(void *)(v1 + OBJC_IVAR____TtC8FMIPCore15FMIPDataManager_geocodingCache)) {
    sub_1D43925E4((uint64_t)v9);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D438FC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a1 + 8) == *(void *)(a2 + 16) && v2 == *(void *)(a1 + 16)) {
    return 1;
  }
  else {
    return sub_1D446A758() & 1;
  }
}

uint64_t sub_1D438FCA4(uint64_t a1)
{
  uint64_t updated = type metadata accessor for FMIPItemUpdateType(0);
  MEMORY[0x1F4188790](updated);
  uint64_t v107 = (char *)&v99 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v122 = (uint64_t)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v99 - v6;
  uint64_t v8 = sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4A0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v120 = (uint64_t *)((char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v119 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v133 = *(char **)(v119 - 8);
  MEMORY[0x1F4188790](v119);
  uint64_t v111 = (uint64_t)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = type metadata accessor for FMIPItem();
  uint64_t v115 = *(void *)(v131 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v131);
  uint64_t v13 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v106 = (uint64_t)&v99 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v109 = (uint64_t)&v99 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (uint64_t *)((char *)&v99 - v19);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  char v23 = (uint64_t *)((char *)&v99 - v22);
  MEMORY[0x1F4188790](v21);
  char v25 = (char *)&v99 - v24;
  uint64_t v136 = sub_1D42D5DA0(&qword_1EBD7E818);
  unint64_t v132 = *(void *)(v136 - 8);
  MEMORY[0x1F4188790](v136);
  uint64_t v114 = (char *)&v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E820);
  uint64_t v28 = MEMORY[0x1F4188790](v27 - 8);
  uint64_t v30 = (unint64_t *)((char *)&v99 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v28);
  uint64_t v135 = (char *)&v99 - v31;
  uint64_t v32 = qword_1EBD80068;
  uint64_t v121 = a1;
  swift_bridgeObjectRetain();
  if (v32 != -1) {
LABEL_38:
  }
    swift_once();
  uint64_t v33 = sub_1D4469928();
  uint64_t v34 = sub_1D42D7FAC(v33, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  uint64_t v125 = v34;
  uint64_t v35 = sub_1D44698F8();
  os_log_type_t v36 = sub_1D446A038();
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v118 = v20;
  uint64_t v134 = v23;
  if (v37)
  {
    unint64_t v38 = (uint8_t *)swift_slowAlloc();
    char v39 = (void *)swift_slowAlloc();
    unint64_t v129 = v38;
    uint64_t v130 = v35;
    *(_DWORD *)unint64_t v38 = 138412290;
    unint64_t v128 = (unsigned int (**)(void *, uint64_t, uint64_t))(v38 + 4);
    uint64_t v40 = sub_1D4469D58();
    v147[0] = v40;
    char v23 = v134;
    sub_1D446A188();
    *char v39 = v40;
    swift_bridgeObjectRelease();
    char v41 = v129;
    _os_log_impl(&dword_1D4271000, v130, v36, "FMIPDataManager: Appending address to items %@", v129, 0xCu);
    sub_1D42D5DA0(&qword_1EBD7E830);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v39, -1, -1);
    MEMORY[0x1D9447730](v41, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v20 = v135;
  char v42 = *(NSObject **)(v121 + 16);
  uint64_t v124 = OBJC_IVAR____TtC8FMIPCore15FMIPDataManager_geocodingCache;
  unint64_t v129 = (uint8_t *)(v132 + 56);
  uint64_t v130 = v42;
  unint64_t v128 = (unsigned int (**)(void *, uint64_t, uint64_t))(v132 + 48);
  uint64_t v116 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v133 + 48);
  uint64_t v117 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v133 + 56);
  uint64_t v104 = &v142[1];
  uint64_t v105 = (long long *)(v25 + 392);
  uint64_t v43 = swift_bridgeObjectRetain();
  unint64_t v44 = 0;
  *(void *)&long long v45 = 136315138;
  long long v113 = v45;
  uint64_t v112 = MEMORY[0x1E4FBC840] + 8;
  *(void *)&long long v45 = 136315394;
  long long v103 = v45;
  unint64_t v110 = v43;
  uint64_t v133 = v7;
  uint64_t v131 = (uint64_t)v25;
  uint64_t v46 = v136;
  uint64_t v126 = v30;
  while (1)
  {
    while (1)
    {
      if (v44 == v130)
      {
        uint64_t v48 = 1;
        unint64_t v44 = (unint64_t)v130;
      }
      else
      {
        if (v44 >= (unint64_t)v130)
        {
          __break(1u);
          goto LABEL_38;
        }
        uint64_t v49 = (uint64_t)&v114[*(int *)(v46 + 48)];
        sub_1D42D22A0(v121+ ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))+ *(void *)(v115 + 72) * v44, v49, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v50 = (uint64_t)v30 + *(int *)(v136 + 48);
        *uint64_t v30 = v44;
        uint64_t v51 = v49;
        uint64_t v46 = v136;
        sub_1D42BB578(v51, v50, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v48 = 0;
        ++v44;
        uint64_t v20 = v135;
      }
      (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))v129)(v30, v48, 1, v46);
      sub_1D4276C98((uint64_t)v30, (uint64_t)v20, (uint64_t *)&unk_1EBD7E820);
      if ((*v128)(v20, 1, v46) == 1)
      {
        swift_bridgeObjectRelease();
        return v110;
      }
      uint64_t v52 = (uint64_t)v13;
      unint64_t v123 = *v20;
      sub_1D42BB578((uint64_t)v20 + *(int *)(v46 + 48), (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v53 = *(void *)(v127 + v124);
      if (!v53)
      {
        uint64_t v13 = (char *)v52;
        goto LABEL_26;
      }
      sub_1D42D22A0((uint64_t)v25, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      sub_1D42A3A74(v53 + qword_1EA6E49F8, (uint64_t)v7, (uint64_t *)&unk_1EBD7E560);
      uint64_t v54 = (void *)v23[49];
      unint64_t v132 = v44;
      if (v54)
      {
        uint64_t v55 = v23[48] >> 24;
        uint64_t v56 = (uint64_t)v7;
        uint64_t v57 = v23[44];
        uint64_t v58 = v23[45];
        sub_1D42A3A74(v56, v122, (uint64_t *)&unk_1EBD7E560);
        LOBYTE(v146[0]) = v55;
        if (FMIPLocationType.rawValue.getter() == 0x656D69746C616572 && v59 == 0xE800000000000000) {
          char v60 = 1;
        }
        else {
          char v60 = sub_1D446A758();
        }
        id v64 = v54;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1D4276C3C((uint64_t)v133, (uint64_t *)&unk_1EBD7E560);
        sub_1D42D20B8((uint64_t)v134, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v62 = (uint64_t)v120;
        *uint64_t v120 = v57;
        *(void *)(v62 + 8) = v58;
        uint64_t v63 = v119;
        *(unsigned char *)(v62 + *(int *)(v119 + 32)) = 0;
        *(unsigned char *)(v62 + *(int *)(v63 + 28)) = v60 & 1;
        *(void *)(v62 + 16) = v64;
        sub_1D4276C98(v122, v62 + *(int *)(v63 + 24), (uint64_t *)&unk_1EBD7E560);
        uint64_t v61 = 0;
      }
      else
      {
        sub_1D4276C3C((uint64_t)v7, (uint64_t *)&unk_1EBD7E560);
        sub_1D42D20B8((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v61 = 1;
        uint64_t v63 = v119;
        uint64_t v62 = (uint64_t)v120;
      }
      (*v117)(v62, v61, 1, v63);
      int v65 = (*v116)(v62, 1, v63);
      char v25 = (char *)v131;
      if (v65 == 1)
      {
        sub_1D4276C3C(v62, (uint64_t *)&unk_1EA6CA4A0);
        sub_1D42FB494(v146);
        sub_1D4276C98((uint64_t)v146, (uint64_t)v147, &qword_1EBD7CC10);
      }
      else
      {
        uint64_t v66 = v111;
        uint64_t v67 = sub_1D42BB578(v62, v111, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        MEMORY[0x1F4188790](v67);
        *(&v99 - 2) = v53;
        *(&v99 - 1) = v66;
        sub_1D42D5DA0(&qword_1EBD7CC10);
        sub_1D446A0A8();
        sub_1D42D20B8(v66, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      }
      uint64_t v7 = v133;
      char v23 = v134;
      uint64_t v13 = (char *)v52;
      unint64_t v44 = v132;
      sub_1D4276C98((uint64_t)v147, (uint64_t)v145, &qword_1EBD7CC10);
      sub_1D4276C98((uint64_t)v145, (uint64_t)v146, &qword_1EBD7CC10);
      int v68 = sub_1D42FE02C((uint64_t)v146);
      uint64_t v69 = (uint64_t)v118;
      if (v68 != 1) {
        break;
      }
LABEL_26:
      sub_1D42D22A0((uint64_t)v25, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      BOOL v70 = sub_1D44698F8();
      os_log_type_t v71 = sub_1D446A038();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = swift_slowAlloc();
        uint64_t v73 = swift_slowAlloc();
        v147[0] = v73;
        *(_DWORD *)uint64_t v72 = v113;
        uint64_t v74 = *((void *)v13 + 44);
        unint64_t v75 = *(void *)(v52 + 360);
        swift_bridgeObjectRetain();
        *(void *)(v72 + 4) = sub_1D42CB9EC(v74, v75, v147);
        uint64_t v13 = (char *)v52;
        swift_bridgeObjectRelease();
        sub_1D42D20B8(v52, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        _os_log_impl(&dword_1D4271000, v70, v71, "FMIPDataManager: Item %s has no address", (uint8_t *)v72, 0xCu);
        swift_arrayDestroy();
        uint64_t v76 = v73;
        char v25 = (char *)v131;
        MEMORY[0x1D9447730](v76, -1, -1);
        uint64_t v77 = v72;
        char v23 = v134;
        MEMORY[0x1D9447730](v77, -1, -1);

        uint64_t v47 = (uint64_t)v25;
        uint64_t v7 = v133;
      }
      else
      {

        sub_1D42D20B8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        uint64_t v47 = (uint64_t)v25;
      }
      sub_1D42D20B8(v47, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v20 = v135;
      uint64_t v46 = v136;
      uint64_t v30 = v126;
    }
    sub_1D42D22A0((uint64_t)v25, (uint64_t)v118, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D4276C98((uint64_t)v145, (uint64_t)v143, &qword_1EBD7CC10);
    sub_1D4276C98((uint64_t)v145, (uint64_t)v144, &qword_1EBD7CC10);
    sub_1D42FC768((uint64_t)v144);
    sub_1D42FC768((uint64_t)v143);
    uint64_t v78 = sub_1D44698F8();
    os_log_type_t v79 = sub_1D446A038();
    int v80 = v79;
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v81 = swift_slowAlloc();
      int v102 = v80;
      uint64_t v82 = v81;
      uint64_t v83 = swift_slowAlloc();
      os_log_t v100 = v78;
      uint64_t v101 = v83;
      v141[0] = v83;
      *(_DWORD *)uint64_t v82 = v103;
      uint64_t v99 = v82 + 4;
      uint64_t v84 = v69;
      uint64_t v85 = *(void *)(v69 + 352);
      unint64_t v86 = *(void *)(v84 + 360);
      swift_bridgeObjectRetain();
      v142[0] = sub_1D42CB9EC(v85, v86, v141);
      sub_1D446A188();
      char v23 = v134;
      swift_bridgeObjectRelease();
      sub_1D42D20B8(v84, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      *(_WORD *)(v82 + 12) = 2080;
      uint64_t v99 = v82 + 14;
      uint64_t v87 = (uint8_t *)v82;
      memcpy(v142, v146, sizeof(v142));
      unint64_t v88 = FMIPAddress.debugDescription.getter();
      v142[0] = sub_1D42CB9EC(v88, v89, v141);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D42FAC78((uint64_t)v145, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
      sub_1D42FAC78((uint64_t)v145, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
      os_log_t v90 = v100;
      _os_log_impl(&dword_1D4271000, v100, (os_log_type_t)v102, "FMIPDataManager: Item %s, Address %s", v87, 0x16u);
      uint64_t v91 = v101;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v91, -1, -1);
      MEMORY[0x1D9447730](v87, -1, -1);
    }
    else
    {
      sub_1D42D20B8(v69, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      sub_1D42FAC78((uint64_t)v145, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
      sub_1D42FAC78((uint64_t)v145, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
    }
    uint64_t v92 = v106;
    sub_1D42D22A0((uint64_t)v25, v106, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v93 = (uint64_t)v107;
    swift_storeEnumTagMultiPayload();
    memcpy(v142, v146, sizeof(v142));
    nullsub_1(v142);
    sub_1D4276C98((uint64_t)v142, (uint64_t)v141, &qword_1EBD7CC10);
    uint64_t v139 = (char *)*((void *)v25 + 48);
    long long v140 = *v105;
    uint64_t v137 = *((void *)v25 + 39);
    long long v138 = *((_OWORD *)v25 + 20);
    unint64_t v94 = (void *)v140;
    id v95 = (id)v138;
    id v96 = v94;
    FMIPItem.init(item:updateType:address:location:crowdSourcedLocation:connected:)(v92, v93, (uint64_t)v141, &v139, &v137, 2u, v109);
    unint64_t v97 = v110;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1D43994A0(v97);
      unint64_t v110 = result;
    }
    uint64_t v20 = v135;
    uint64_t v46 = v136;
    uint64_t v30 = v126;
    if ((v123 & 0x8000000000000000) != 0) {
      break;
    }
    if (v123 >= *(void *)(v110 + 16)) {
      goto LABEL_40;
    }
    sub_1D439ED88(v109, v110+ ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))+ *(void *)(v115 + 72) * v123, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42D20B8((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1D4390C00(uint64_t a1, const void *a2)
{
  swift_retain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1D439A1FC(v4, a1);
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1D44698F8();
  os_log_type_t v8 = sub_1D446A038();
  uint64_t v9 = &loc_1D446B000;
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    __dst[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v12 = MEMORY[0x1D9446130](v5, &type metadata for FMIPSafeLocation);
    v31[1] = sub_1D42CB9EC(v12, v13, __dst);
    uint64_t v9 = (void *)&loc_1D446B000;
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v7, v8, "FMIPDataManager: Geocoding cache callback, appending address to safe locations %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v11, -1, -1);
    MEMORY[0x1D9447730](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  BOOL v14 = sub_1D438E8A8(v5);
  swift_bridgeObjectRelease();
  if (v14)
  {
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_1D438E8A8(v15);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v16 = swift_bridgeObjectRetain();
  unint64_t v17 = sub_1D42B55C4(v16);
  swift_bridgeObjectRelease();
  char v18 = sub_1D429BDD4(v17, 0);
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0 && MEMORY[0x1D9447840](a1 + 32))
  {
    uint64_t v19 = *(void *)(a1 + 80);
    swift_bridgeObjectRetain();
    sub_1D428CE28(a1, v19);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  sub_1D42FC768((uint64_t)a2);
  sub_1D42FC768((uint64_t)a2);
  uint64_t v20 = sub_1D44698F8();
  os_log_type_t v21 = sub_1D446A038();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v31[0] = v23;
    *(_DWORD *)uint64_t v22 = v9[267];
    memcpy(__dst, a2, sizeof(__dst));
    unint64_t v24 = FMIPAddress.debugDescription.getter();
    __dst[0] = sub_1D42CB9EC(v24, v25, v31);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42FC8A4((uint64_t)a2);
    sub_1D42FC8A4((uint64_t)a2);
    _os_log_impl(&dword_1D4271000, v20, v21, "FMIPDataManager: Appending address to items %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v23, -1, -1);
    MEMORY[0x1D9447730](v22, -1, -1);
  }
  else
  {
    sub_1D42FC8A4((uint64_t)a2);
    sub_1D42FC8A4((uint64_t)a2);
  }

  swift_beginAccess();
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_1D438FCA4(v26);
  swift_bridgeObjectRelease();
  char v28 = sub_1D4298AA4(v27, 1, 0);
  uint64_t result = swift_bridgeObjectRelease();
  if (v28)
  {
    uint64_t result = MEMORY[0x1D9447840](a1 + 32);
    if (result)
    {
      swift_bridgeObjectRetain();
      sub_1D428A3B4(a1);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1D4391084(uint64_t a1, uint64_t a2)
{
  uint64_t v146 = a2;
  uint64_t v147 = a1;
  uint64_t v145 = sub_1D4469928();
  uint64_t v3 = *(void **)(v145 - 8);
  MEMORY[0x1F4188790](v145 - 8);
  uint64_t v148 = (char *)v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FMIPDevice();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  os_log_type_t v8 = (char *)v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v135 = v2;
  uint64_t v9 = *(void *)(v2 + 80);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v153 = v3;
    uint64_t v11 = v9 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v12 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain_n();
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1D42D22A0(v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v16 = *((void *)v8 + 2);
      uint64_t v15 = *((void *)v8 + 3);
      swift_bridgeObjectRetain();
      sub_1D42D20B8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      if (v15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v13 = sub_1D43B0268(0, v13[2] + 1, 1, v13);
        }
        unint64_t v18 = v13[2];
        unint64_t v17 = v13[3];
        if (v18 >= v17 >> 1) {
          unint64_t v13 = sub_1D43B0268((void *)(v17 > 1), v18 + 1, 1, v13);
        }
        void v13[2] = v18 + 1;
        BOOL v14 = &v13[2 * v18];
        v14[4] = v16;
        v14[5] = v15;
      }
      v11 += v12;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease_n();
    uint64_t v3 = v153;
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v19 = sub_1D4392408(v135);
  uint64_t v20 = *(void *)(v147 + 64);
  uint64_t v141 = v147 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(v147 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  uint64_t v144 = (void (**)(char *, uint64_t, uint64_t))(v3 + 2);
  int64_t v142 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v143 = (void (**)(char *, uint64_t))(v3 + 1);
  swift_bridgeObjectRetain();
  int64_t v24 = 0;
  uint64_t v137 = v13 + 9;
  uint64_t v153 = v19;
  uint64_t v136 = v19 + 9;
  long long v140 = (void *)MEMORY[0x1E4FBC868];
  *(void *)&long long v25 = 136380675;
  long long v139 = v25;
  uint64_t v138 = MEMORY[0x1E4FBC840] + 8;
  v134[7] = "rk";
  v134[6] = "edLocation";
  v134[5] = "lastConnectionMaintenance";
  v134[4] = "lastDisconnected";
  v134[3] = "xied";
  v134[2] = "lter";
  v134[1] = "intentLocationUpdate";
  if (!v23) {
    goto LABEL_16;
  }
LABEL_15:
  unint64_t v26 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  int64_t v152 = v24;
  for (unint64_t i = v26 | (v24 << 6); ; unint64_t i = __clz(__rbit64(v29)) + (v30 << 6))
  {
    uint64_t v32 = (uint64_t *)(*(void *)(v147 + 48) + 16 * i);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (unsigned __int8 *)(*(void *)(v147 + 56) + 24 * i);
    LODWORD(v32) = v35[1];
    int v149 = *v35;
    int v150 = (int)v32;
    int v151 = v35[2];
    uint64_t v36 = v35[3];
    BOOL v37 = (void *)*((void *)v35 + 1);
    uint64_t v38 = *((void *)v35 + 2);
    uint64_t v39 = v13[2];
    if (!v39) {
      goto LABEL_189;
    }
    BOOL v40 = v13[4] == v34 && v13[5] == v33;
    if (v40 || (sub_1D446A758() & 1) != 0) {
      goto LABEL_73;
    }
    if (v39 == 1) {
      goto LABEL_189;
    }
    BOOL v41 = v13[6] == v34 && v13[7] == v33;
    if (v41 || (sub_1D446A758() & 1) != 0) {
      goto LABEL_73;
    }
    if (v39 == 2)
    {
LABEL_189:
    {
LABEL_51:
      uint64_t v46 = v153[2];
      if (!v46) {
        goto LABEL_72;
      }
      BOOL v47 = v153[4] == v34 && v153[5] == v33;
      if (!v47 && (sub_1D446A758() & 1) == 0)
      {
        if (v46 == 1) {
          goto LABEL_72;
        }
        BOOL v48 = v153[6] == v34 && v153[7] == v33;
        if (!v48 && (sub_1D446A758() & 1) == 0)
        {
          if (v46 == 2)
          {
LABEL_72:
            uint64_t v53 = v145;
            switch(v36)
            {
              case 7:
                swift_bridgeObjectRetain();
                id v84 = v37;
                swift_bridgeObjectRelease();
                LOBYTE(v36) = 7;
                goto LABEL_74;
              default:
                char v73 = sub_1D446A758();
                swift_bridgeObjectRetain();
                id v74 = v37;
                swift_bridgeObjectRelease();
                if (v73) {
                  goto LABEL_74;
                }
                swift_bridgeObjectRelease();
                if (qword_1EBD80068 != -1) {
                  swift_once();
                }
                uint64_t v75 = sub_1D42D7FAC(v53, (uint64_t)qword_1EBD83228);
                uint64_t v76 = v148;
                (*v144)(v148, v75, v53);
                id v77 = v74;
                uint64_t v78 = sub_1D44698F8();
                os_log_type_t v79 = sub_1D446A038();
                if (os_log_type_enabled(v78, v79))
                {
                  uint64_t v80 = swift_slowAlloc();
                  uint64_t v81 = swift_slowAlloc();
                  uint64_t v157 = v81;
                  *(_DWORD *)uint64_t v80 = v139;
                  LOBYTE(v154) = v149;
                  BYTE1(v154) = v150;
                  BYTE2(v154) = v151;
                  BYTE3(v154) = v36;
                  id v155 = v77;
                  uint64_t v156 = v38;
                  uint64_t v82 = FMIPLocation.debugDescription.getter();
                  *(void *)(v80 + 4) = sub_1D42CB9EC(v82, v83, &v157);

                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_1D4271000, v78, v79, "FMIPDataManager: Trimed location because it doesn't belong to anyone %{private}s", (uint8_t *)v80, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x1D9447730](v81, -1, -1);
                  MEMORY[0x1D9447730](v80, -1, -1);

                  (*v143)(v148, v53);
                }
                else
                {

                  (*v143)(v76, v53);
                }
                int64_t v24 = v152;
                if (!v23) {
                  goto LABEL_16;
                }
                goto LABEL_15;
            }
          }
          uint64_t v49 = v136;
          uint64_t v50 = 2;
          while (1)
          {
            uint64_t v51 = v50 + 1;
            if (__OFADD__(v50, 1)) {
              goto LABEL_175;
            }
            BOOL v52 = *(v49 - 1) == v34 && *v49 == v33;
            if (v52 || (sub_1D446A758() & 1) != 0) {
              break;
            }
            v49 += 2;
            ++v50;
            if (v51 == v46) {
              goto LABEL_72;
            }
          }
        }
      }
    }
    }
    else
    {
      char v42 = v137;
      uint64_t v43 = 2;
      while (1)
      {
        uint64_t v44 = v43 + 1;
        if (__OFADD__(v43, 1))
        {
          __break(1u);
          goto LABEL_174;
        }
        BOOL v45 = *(v42 - 1) == v34 && *v42 == v33;
        if (v45 || (sub_1D446A758() & 1) != 0) {
          break;
        }
        v42 += 2;
        ++v43;
        if (v44 == v39) {
          goto LABEL_51;
        }
      }
    }
LABEL_73:
    swift_bridgeObjectRetain();
    id v54 = v37;
LABEL_74:
    id v55 = v37;
    uint64_t v56 = v140;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v154 = v56;
    unint64_t v59 = sub_1D42C4FCC(v34, v33);
    uint64_t v60 = v56[2];
    BOOL v61 = (v58 & 1) == 0;
    uint64_t v62 = v60 + v61;
    if (__OFADD__(v60, v61)) {
      goto LABEL_179;
    }
    char v63 = v58;
    if (v56[3] >= v62)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1D43D8F64();
      }
    }
    else
    {
      sub_1D42C1798(v62, isUniquelyReferenced_nonNull_native);
      unint64_t v64 = sub_1D42C4FCC(v34, v33);
      if ((v63 & 1) != (v65 & 1)) {
        goto LABEL_185;
      }
      unint64_t v59 = v64;
    }
    uint64_t v66 = v154;
    long long v140 = v154;
    if (v63)
    {
      uint64_t v67 = v154[7] + 24 * v59;

      *(unsigned char *)uint64_t v67 = v149;
      *(unsigned char *)(v67 + 1) = v150;
      *(unsigned char *)(v67 + 2) = v151;
      *(unsigned char *)(v67 + 3) = v36;
      *(void *)(v67 + 8) = v55;
      *(void *)(v67 + 16) = v38;
    }
    else
    {
      v154[(v59 >> 6) + 8] |= 1 << v59;
      int v68 = (uint64_t *)(v66[6] + 16 * v59);
      *int v68 = v34;
      v68[1] = v33;
      uint64_t v69 = v66[7] + 24 * v59;
      *(unsigned char *)uint64_t v69 = v149;
      *(unsigned char *)(v69 + 1) = v150;
      *(unsigned char *)(v69 + 2) = v151;
      *(unsigned char *)(v69 + 3) = v36;
      *(void *)(v69 + 8) = v55;
      *(void *)(v69 + 16) = v38;
      uint64_t v70 = v66[2];
      BOOL v71 = __OFADD__(v70, 1);
      uint64_t v72 = v70 + 1;
      if (v71) {
        goto LABEL_181;
      }
      void v66[2] = v72;
      swift_bridgeObjectRetain();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v24 = v152;
    if (v23) {
      goto LABEL_15;
    }
LABEL_16:
    int64_t v28 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      goto LABEL_177;
    }
    if (v28 >= v142) {
      goto LABEL_95;
    }
    unint64_t v29 = *(void *)(v141 + 8 * v28);
    int64_t v30 = v24 + 1;
    if (!v29)
    {
      int64_t v30 = v24 + 2;
      if (v24 + 2 >= v142) {
        goto LABEL_95;
      }
      unint64_t v29 = *(void *)(v141 + 8 * v30);
      if (!v29)
      {
        int64_t v30 = v24 + 3;
        if (v24 + 3 >= v142) {
          goto LABEL_95;
        }
        unint64_t v29 = *(void *)(v141 + 8 * v30);
        if (!v29) {
          break;
        }
      }
    }
LABEL_29:
    unint64_t v23 = (v29 - 1) & v29;
    int64_t v152 = v30;
  }
  uint64_t v31 = v24 + 4;
  if (v24 + 4 >= v142) {
    goto LABEL_95;
  }
  unint64_t v29 = *(void *)(v141 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v24 + 4;
    goto LABEL_29;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      goto LABEL_183;
    }
    if (v30 >= v142) {
      break;
    }
    unint64_t v29 = *(void *)(v141 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_29;
    }
  }
LABEL_95:
  swift_release();
  uint64_t v85 = *(void *)(v146 + 64);
  uint64_t v147 = v146 + 64;
  uint64_t v86 = 1 << *(unsigned char *)(v146 + 32);
  uint64_t v87 = -1;
  if (v86 < 64) {
    uint64_t v87 = ~(-1 << v86);
  }
  unint64_t v88 = v87 & v85;
  uint64_t v148 = (char *)((unint64_t)(v86 + 63) >> 6);
  swift_bridgeObjectRetain();
  uint64_t v89 = 0;
  uint64_t v144 = (void (**)(char *, uint64_t, uint64_t))(v13 + 9);
  int64_t v142 = (int64_t)(v153 + 9);
  uint64_t v145 = MEMORY[0x1E4FBC868];
LABEL_100:
  while (2)
  {
    if (v88)
    {
      unint64_t v90 = __clz(__rbit64(v88));
      v88 &= v88 - 1;
      unint64_t v91 = v90 | (v89 << 6);
LABEL_116:
      id v95 = (uint64_t *)(*(void *)(v146 + 48) + 16 * v91);
      uint64_t v97 = *v95;
      uint64_t v96 = v95[1];
      uint64_t v98 = (unsigned __int8 *)(*(void *)(v146 + 56) + 24 * v91);
      LODWORD(v95) = v98[1];
      int v149 = *v98;
      int v150 = (int)v95;
      LODWORD(v95) = v98[3];
      int v151 = v98[2];
      LODWORD(v152) = v95;
      uint64_t v99 = (void *)*((void *)v98 + 1);
      uint64_t v100 = *((void *)v98 + 2);
      uint64_t v101 = v13[2];
      if (v101)
      {
        BOOL v102 = v13[4] == v97 && v13[5] == v96;
        if (v102 || (sub_1D446A758() & 1) != 0) {
          goto LABEL_159;
        }
        if (v101 != 1)
        {
          BOOL v103 = v13[6] == v97 && v13[7] == v96;
          if (v103 || (sub_1D446A758() & 1) != 0) {
            goto LABEL_159;
          }
          if (v101 != 2)
          {
            uint64_t v104 = v144;
            uint64_t v105 = 2;
            while (1)
            {
              uint64_t v106 = v105 + 1;
              if (__OFADD__(v105, 1)) {
                break;
              }
              BOOL v107 = *(v104 - 1) == (void (*)(char *, uint64_t, uint64_t))v97
                  && *v104 == (void (*)(char *, uint64_t, uint64_t))v96;
              if (v107 || (sub_1D446A758() & 1) != 0) {
                goto LABEL_159;
              }
              v104 += 2;
              ++v105;
              if (v106 == v101) {
                goto LABEL_137;
              }
            }
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            sub_1D446A7A8();
            __break(1u);
            JUMPOUT(0x1D4392154);
          }
        }
      }
LABEL_137:
      uint64_t v108 = v153[2];
      if (!v108) {
        continue;
      }
      BOOL v109 = v153[4] == v97 && v153[5] == v96;
      if (v109 || (sub_1D446A758() & 1) != 0) {
        goto LABEL_159;
      }
      if (v108 == 1)
      {
        swift_bridgeObjectRetain();
        goto LABEL_99;
      }
      BOOL v110 = v153[6] == v97 && v153[7] == v96;
      if (v110 || (sub_1D446A758() & 1) != 0)
      {
LABEL_159:
        swift_bridgeObjectRetain();
        id v115 = v99;
        goto LABEL_161;
      }
      swift_bridgeObjectRetain();
      if (v108 == 2) {
        goto LABEL_99;
      }
      uint64_t v143 = v99;
      swift_bridgeObjectRetain();
      uint64_t v111 = (void *)v142;
      uint64_t v112 = 2;
      do
      {
        uint64_t v113 = v112 + 1;
        if (__OFADD__(v112, 1)) {
          goto LABEL_176;
        }
        BOOL v114 = *(v111 - 1) == v97 && *v111 == v96;
        if (v114 || (sub_1D446A758() & 1) != 0)
        {
          swift_bridgeObjectRelease();
LABEL_161:
          id v116 = v99;
          uint64_t v117 = v145;
          char v118 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v154 = (void *)v117;
          unint64_t v120 = sub_1D42C4FCC(v97, v96);
          uint64_t v121 = *(void *)(v117 + 16);
          BOOL v122 = (v119 & 1) == 0;
          uint64_t v123 = v121 + v122;
          if (__OFADD__(v121, v122)) {
            goto LABEL_180;
          }
          char v124 = v119;
          if (*(void *)(v117 + 24) >= v123)
          {
            if ((v118 & 1) == 0) {
              sub_1D43D8F64();
            }
          }
          else
          {
            sub_1D42C1798(v123, v118);
            unint64_t v125 = sub_1D42C4FCC(v97, v96);
            if ((v124 & 1) != (v126 & 1)) {
              goto LABEL_185;
            }
            unint64_t v120 = v125;
          }
          uint64_t v127 = v154;
          uint64_t v145 = (uint64_t)v154;
          if (v124)
          {
            uint64_t v128 = v154[7] + 24 * v120;

            *(unsigned char *)uint64_t v128 = v149;
            *(unsigned char *)(v128 + 1) = v150;
            *(unsigned char *)(v128 + 2) = v151;
            *(unsigned char *)(v128 + 3) = v152;
            *(void *)(v128 + 8) = v116;
            *(void *)(v128 + 16) = v100;
          }
          else
          {
            v154[(v120 >> 6) + 8] |= 1 << v120;
            unint64_t v129 = (uint64_t *)(v127[6] + 16 * v120);
            uint64_t *v129 = v97;
            v129[1] = v96;
            uint64_t v130 = v127[7] + 24 * v120;
            *(unsigned char *)uint64_t v130 = v149;
            *(unsigned char *)(v130 + 1) = v150;
            *(unsigned char *)(v130 + 2) = v151;
            *(unsigned char *)(v130 + 3) = v152;
            *(void *)(v130 + 8) = v116;
            *(void *)(v130 + 16) = v100;
            uint64_t v131 = v127[2];
            BOOL v71 = __OFADD__(v131, 1);
            uint64_t v132 = v131 + 1;
            if (v71) {
              goto LABEL_182;
            }
            v127[2] = v132;
            swift_bridgeObjectRetain();
          }

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_100;
        }
        v111 += 2;
        ++v112;
      }
      while (v113 != v108);

      swift_bridgeObjectRelease();
LABEL_99:
      swift_bridgeObjectRelease();
      continue;
    }
    break;
  }
  uint64_t v92 = v89 + 1;
  if (__OFADD__(v89, 1)) {
    goto LABEL_178;
  }
  if (v92 < (uint64_t)v148)
  {
    unint64_t v93 = *(void *)(v147 + 8 * v92);
    ++v89;
    if (!v93)
    {
      uint64_t v89 = v92 + 1;
      if (v92 + 1 >= (uint64_t)v148) {
        goto LABEL_172;
      }
      unint64_t v93 = *(void *)(v147 + 8 * v89);
      if (!v93)
      {
        uint64_t v89 = v92 + 2;
        if (v92 + 2 >= (uint64_t)v148) {
          goto LABEL_172;
        }
        unint64_t v93 = *(void *)(v147 + 8 * v89);
        if (!v93)
        {
          uint64_t v94 = v92 + 3;
          if (v94 >= (uint64_t)v148) {
            goto LABEL_172;
          }
          unint64_t v93 = *(void *)(v147 + 8 * v94);
          if (!v93)
          {
            while (1)
            {
              uint64_t v89 = v94 + 1;
              if (__OFADD__(v94, 1)) {
                goto LABEL_184;
              }
              if (v89 >= (uint64_t)v148) {
                goto LABEL_172;
              }
              unint64_t v93 = *(void *)(v147 + 8 * v89);
              ++v94;
              if (v93) {
                goto LABEL_115;
              }
            }
          }
          uint64_t v89 = v94;
        }
      }
    }
LABEL_115:
    unint64_t v88 = (v93 - 1) & v93;
    unint64_t v91 = __clz(__rbit64(v93)) + (v89 << 6);
    goto LABEL_116;
  }
LABEL_172:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1D4278240(v140, v145);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t destroy for FMIPDataManager.SeparationMonitoringCache()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FMIPDataManager.SeparationMonitoringCache(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FMIPDataManager.SeparationMonitoringCache(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FMIPDataManager.SeparationMonitoringCache(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPDataManager.SeparationMonitoringCache(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPDataManager.SeparationMonitoringCache(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void *sub_1D4392408(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPItem();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 280);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = v6 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v9 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    sub_1D42D22A0(v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v12 = *((void *)v5 + 44);
    uint64_t v11 = *((void *)v5 + 45);
    swift_bridgeObjectRetain();
    sub_1D42D20B8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_1D43B0268(0, v10[2] + 1, 1, v10);
    }
    unint64_t v14 = v10[2];
    unint64_t v13 = v10[3];
    if (v14 >= v13 >> 1) {
      uint64_t v10 = sub_1D43B0268((void *)(v13 > 1), v14 + 1, 1, v10);
    }
    void v10[2] = v14 + 1;
    uint64_t v15 = &v10[2 * v14];
    v15[4] = v12;
    v15[5] = v11;
    v8 += v9;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease_n();
  return v10;
}

uint64_t sub_1D43925E4(uint64_t a1)
{
  uint64_t v80 = sub_1D4469958();
  uint64_t v2 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  os_log_type_t v79 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1D44699B8();
  uint64_t v4 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  id v77 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v86 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v75 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v95 = (uint64_t)&v59 - v9;
  uint64_t v10 = sub_1D42D5DA0(&qword_1EA6CA4B0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  unint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v59 - v14;
  uint64_t v84 = sub_1D4469618();
  uint64_t v16 = *(void *)(v84 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v84);
  char v73 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v82 = (char *)&v59 - v19;
  sub_1D4469608();
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v61 = a1 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  BOOL v71 = &v98[2];
  uint64_t v72 = qword_1EA6CB220;
  uint64_t v69 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v70 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v83 = v16;
  uint64_t v67 = v16 + 32;
  uint64_t v68 = v16 + 16;
  uint64_t v66 = v97;
  int64_t v62 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v63 = a1;
  int64_t v60 = v62 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  long long v25 = 0;
  uint64_t v26 = 0;
  int64_t v85 = 0;
  unint64_t v64 = v15;
  char v65 = v13;
  if (!v23) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v47 = __clz(__rbit64(v23));
  uint64_t v48 = (v23 - 1) & v23;
  unint64_t v49 = v47 | (v85 << 6);
LABEL_8:
  uint64_t v50 = v63;
  sub_1D42D22A0(*(void *)(v63 + 48) + *(void *)(v86 + 72) * v49, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  uint64_t v51 = (const void *)(*(void *)(v50 + 56) + 288 * v49);
  uint64_t v52 = sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4B8);
  uint64_t v53 = &v13[*(int *)(v52 + 48)];
  memcpy(v99, v51, 0x120uLL);
  memmove(v53, v51, 0x120uLL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v13, 0, 1, v52);
  sub_1D42FC768((uint64_t)v99);
  while (1)
  {
    sub_1D4276C98((uint64_t)v13, (uint64_t)v15, &qword_1EA6CA4B0);
    uint64_t v58 = sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4B8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 48))(v15, 1, v58) == 1)
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v84);
      return sub_1D42E2C6C((uint64_t)v25);
    }
    unint64_t v87 = v48;
    uint64_t v27 = &v15[*(int *)(v58 + 48)];
    uint64_t v28 = v95;
    uint64_t v92 = type metadata accessor for FMReverseGeocodingRequest;
    sub_1D42BB578((uint64_t)v15, v95, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    memcpy(v99, v27, 0x120uLL);
    uint64_t v29 = v81;
    dispatch_queue_t v94 = *(dispatch_queue_t *)(v81 + v72);
    uint64_t v89 = type metadata accessor for FMReverseGeocodingRequest;
    uint64_t v30 = v75;
    sub_1D42D22A0(v28, v75, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    uint64_t v31 = *(unsigned __int8 *)(v86 + 80);
    uint64_t v93 = v26;
    uint64_t v32 = ((v31 + 24) & ~v31) + v76;
    uint64_t v33 = (v31 + 24) & ~v31;
    uint64_t v90 = v31 | 7;
    uint64_t v91 = v33;
    uint64_t v34 = swift_allocObject();
    unint64_t v35 = (v32 & 0xFFFFFFFFFFFFFFF8) + v34;
    *(void *)(v34 + 16) = v29;
    sub_1D42BB578(v30, v34 + v33, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    *(unsigned char *)(v34 + v32) = 1;
    *(void *)(v35 + 8) = 0;
    *(void *)(v35 + 16) = 0;
    v98[4] = sub_1D439E2DC;
    v98[5] = v34;
    v98[0] = MEMORY[0x1E4F143A8];
    v98[1] = 1107296256;
    v98[2] = sub_1D42BD950;
    v98[3] = &unk_1F2C0C848;
    uint64_t v36 = _Block_copy(v98);
    swift_retain();
    BOOL v37 = v77;
    sub_1D4469988();
    v96[0] = MEMORY[0x1E4FBC860];
    sub_1D42AAE70((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    uint64_t v38 = v79;
    unint64_t v88 = v25;
    uint64_t v39 = v80;
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v37, v38, v36);
    _Block_release(v36);
    (*v70)(v38, v39);
    (*v69)(v37, v78);
    swift_release();
    sub_1D42D22A0(v95, v30, (uint64_t (*)(void))v89);
    memcpy(v98, v99, sizeof(v98));
    uint64_t v40 = v83;
    BOOL v41 = v73;
    uint64_t v42 = v84;
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v73, v82, v84);
    unint64_t v43 = (v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v44 = (v43 + *(unsigned __int8 *)(v40 + 80) + 288) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v29;
    sub_1D42BB578(v30, v26 + v91, (uint64_t (*)(void))v92);
    memcpy((void *)(v26 + v43), v98, 0x120uLL);
    (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v26 + v44, v41, v42);
    swift_retain();
    sub_1D42FC768((uint64_t)v99);
    sub_1D42E2C6C((uint64_t)v88);
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = sub_1D439E55C;
    *(void *)(v45 + 24) = v26;
    v97[2] = sub_1D42AEE34;
    v97[3] = v45;
    v96[0] = MEMORY[0x1E4F143A8];
    v96[1] = 1107296256;
    v97[0] = sub_1D42AEDE4;
    v97[1] = &unk_1F2C0C8C0;
    uint64_t v46 = _Block_copy(v96);
    swift_retain();
    swift_release();
    dispatch_sync(v94, v46);
    _Block_release(v46);
    sub_1D42FC8A4((uint64_t)v99);
    sub_1D42D20B8(v95, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    LOBYTE(v29) = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if (v29) {
      break;
    }
    long long v25 = sub_1D439E55C;
    uint64_t v15 = v64;
    unint64_t v13 = v65;
    unint64_t v23 = v87;
    if (v87) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v54 = v85 + 1;
    if (__OFADD__(v85, 1)) {
      goto LABEL_30;
    }
    if (v54 < v62)
    {
      unint64_t v55 = *(void *)(v61 + 8 * v54);
      if (v55) {
        goto LABEL_12;
      }
      int64_t v56 = v85 + 2;
      ++v85;
      if (v54 + 1 < v62)
      {
        unint64_t v55 = *(void *)(v61 + 8 * v56);
        if (v55) {
          goto LABEL_15;
        }
        int64_t v85 = v54 + 1;
        if (v54 + 2 < v62)
        {
          unint64_t v55 = *(void *)(v61 + 8 * (v54 + 2));
          if (v55)
          {
            v54 += 2;
            goto LABEL_12;
          }
          int64_t v56 = v54 + 3;
          int64_t v85 = v54 + 2;
          if (v54 + 3 < v62)
          {
            unint64_t v55 = *(void *)(v61 + 8 * v56);
            if (!v55)
            {
              while (1)
              {
                int64_t v54 = v56 + 1;
                if (__OFADD__(v56, 1)) {
                  goto LABEL_31;
                }
                if (v54 >= v62)
                {
                  int64_t v85 = v60;
                  goto LABEL_26;
                }
                unint64_t v55 = *(void *)(v61 + 8 * v54);
                ++v56;
                if (v55) {
                  goto LABEL_12;
                }
              }
            }
LABEL_15:
            int64_t v54 = v56;
LABEL_12:
            uint64_t v48 = (v55 - 1) & v55;
            unint64_t v49 = __clz(__rbit64(v55)) + (v54 << 6);
            int64_t v85 = v54;
            goto LABEL_8;
          }
        }
      }
    }
LABEL_26:
    uint64_t v57 = sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4B8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v13, 1, 1, v57);
    uint64_t v48 = 0;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1D4393070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a3;
  unint64_t v43 = (const void *)a2;
  uint64_t v46 = (uint64_t *)a1;
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6CA4C8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v41 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1D4469618();
  uint64_t v6 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for FMReverseGeocodingRequest();
  MEMORY[0x1F4188790](v39);
  uint64_t v10 = (uint64_t *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = (int *)sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4D0);
  uint64_t v44 = *((void *)v11 - 1);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  uint64_t v45 = (uint64_t)&v39 - v15;
  uint64_t v16 = sub_1D44699E8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (uint64_t *)((char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v47 = v3;
  uint64_t v20 = *(void **)(v3 + qword_1EA6CB220);
  *uint64_t v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E4FBCBF0], v16);
  id v21 = v20;
  LOBYTE(v20) = sub_1D4469A08();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if (v20)
  {
    unint64_t v23 = v46;
    sub_1D42D22A0((uint64_t)v46, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    uint64_t v24 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v40, v42);
    uint64_t v25 = v10[1];
    *uint64_t v14 = *v10;
    v14[1] = v25;
    uint64_t v26 = (void *)v10[2];
    uint64_t v27 = v43;
    sub_1D42FC768((uint64_t)v43);
    swift_bridgeObjectRetain();
    v14[2] = sub_1D42A9D18();
    void v14[3] = v28;
    v14[4] = v26;
    LOBYTE(v25) = *((unsigned char *)v10 + *(int *)(v39 + 28));
    id v29 = v26;
    sub_1D42D20B8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    *((unsigned char *)v14 + v11[13]) = v25;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))((char *)v14 + v11[11], v8, v24);
    memcpy((char *)v14 + v11[12], v27, 0x120uLL);
    uint64_t v30 = (uint64_t)v14;
    uint64_t v31 = v45;
    sub_1D4276C98(v30, v45, (uint64_t *)&unk_1EA6CA4D0);
    uint64_t v32 = sub_1D42A9D18();
    uint64_t v34 = v33;
    uint64_t v35 = v41;
    sub_1D42A3A74(v31, v41, (uint64_t *)&unk_1EA6CA4D0);
    uint64_t v36 = *(void (**)(uint64_t, void, uint64_t, int *))(v44 + 56);
    v36(v35, 0, 1, v11);
    swift_beginAccess();
    sub_1D43F81AC(v35, v32, v34);
    swift_endAccess();
    uint64_t v37 = *v23;
    uint64_t v38 = v23[1];
    sub_1D42A3A74(v31, v35, (uint64_t *)&unk_1EA6CA4D0);
    v36(v35, 0, 1, v11);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1D43F81AC(v35, v37, v38);
    swift_endAccess();
    return sub_1D4276C3C(v31, (uint64_t *)&unk_1EA6CA4D0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D4393560(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v29 = a1;
  uint64_t v33 = sub_1D4469958();
  uint64_t v36 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D44699B8();
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *(void *)(a3 + qword_1EA6CB220);
  sub_1D42D22A0(a4, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v19 = (v16 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a3;
  *(void *)(v20 + 24) = a2;
  sub_1D42BB578((uint64_t)v17, v20 + v18, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  id v21 = (uint64_t *)(v20 + v19);
  uint64_t v23 = v30;
  uint64_t v22 = v31;
  *id v21 = v30;
  v21[1] = v22;
  *(void *)(v20 + ((v19 + 23) & 0xFFFFFFFFFFFFFFF8)) = v29;
  aBlock[4] = sub_1D439E9F0;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C0C938;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  id v25 = a2;
  sub_1D42972D4(v23);
  swift_unknownObjectRetain();
  sub_1D4469988();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1D42AAE70((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  uint64_t v26 = v33;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v13, v10, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v26);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
  return swift_release();
}

void sub_1D4393940(uint64_t a1, void *a2, uint64_t a3, void (*a4)(double *), uint64_t a5, uint64_t a6)
{
  uint64_t v131 = a3;
  unint64_t v129 = a2;
  uint64_t v10 = sub_1D4469958();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D44699B8();
  uint64_t v125 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  char v124 = (char *)&v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1D4469968();
  uint64_t v118 = *(void *)(v16 - 8);
  uint64_t v119 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v117 = (char *)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1D4469618();
  uint64_t v121 = *(void *)(v18 - 8);
  uint64_t v122 = v18;
  MEMORY[0x1F4188790](v18);
  unint64_t v120 = (char *)&v111 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v111 = (uint64_t)&v111 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v123 = (uint64_t)&v111 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v126 = (uint64_t)&v111 - v25;
  uint64_t v26 = qword_1EA6CB210;
  uint64_t v27 = *(void *)(a1 + qword_1EA6CB210);
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    uint64_t v116 = v14;
    uint64_t v127 = a5;
    *(void *)(a1 + qword_1EA6CB210) = v29;
    if (qword_1EA6C8F58 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v30 = sub_1D4469928();
  uint64_t v31 = sub_1D42D7FAC(v30, (uint64_t)qword_1EA6E46D0);
  swift_retain_n();
  uint64_t v130 = v31;
  uint64_t v32 = sub_1D44698F8();
  os_log_type_t v33 = sub_1D446A038();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v128 = a4;
  uint64_t v112 = v11;
  uint64_t v113 = v10;
  id v115 = v13;
  if (v34)
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v114 = a6;
    uint64_t v37 = v36;
    *(void *)&v137[0] = v36;
    *(_DWORD *)uint64_t v35 = 136315394;
    uint64_t v38 = sub_1D446A918();
    *(void *)&v136[0] = sub_1D42CB9EC(v38, v39, (uint64_t *)v137);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2048;
    double v40 = *(double *)(a1 + v26);
    swift_release();
    v136[0] = v40;
    sub_1D446A188();
    swift_release();
    _os_log_impl(&dword_1D4271000, v32, v33, "%s: Total operations processed: %ld.", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    uint64_t v41 = v37;
    a6 = v114;
    MEMORY[0x1D9447730](v41, -1, -1);
    MEMORY[0x1D9447730](v35, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v42 = v129;
  uint64_t v43 = *(void *)(a1 + v26);
  uint64_t v44 = v131;
  if (__ROR8__(0xCCCCCCCCCCCCCCCDLL * v43 + 0x1999999999999998, 1) <= 0x1999999999999998uLL)
  {
    sub_1D44695A8();
    double v46 = v45;
    swift_retain_n();
    uint64_t v47 = sub_1D44698F8();
    os_log_type_t v48 = sub_1D446A038();
    if (!os_log_type_enabled(v47, v48))
    {

      swift_release_n();
      if (v42) {
        goto LABEL_10;
      }
      goto LABEL_17;
    }
    uint64_t v49 = swift_slowAlloc();
    uint64_t v50 = a6;
    uint64_t v51 = swift_slowAlloc();
    *(void *)&v137[0] = v51;
    *(_DWORD *)uint64_t v49 = 136315394;
    uint64_t v52 = sub_1D446A918();
    *(void *)&v136[0] = sub_1D42CB9EC(v52, v53, (uint64_t *)v137);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2048;
    v136[0] = (double)v43 / fabs(v46);
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v47, v48, "%s: Current throughput: %f requests per second.", (uint8_t *)v49, 0x16u);
    swift_arrayDestroy();
    uint64_t v54 = v51;
    a6 = v50;
    uint64_t v44 = v131;
    MEMORY[0x1D9447730](v54, -1, -1);
    uint64_t v55 = v49;
    uint64_t v42 = v129;
    MEMORY[0x1D9447730](v55, -1, -1);
  }
  if (v42)
  {
LABEL_10:
    uint64_t v56 = v126;
    sub_1D42D22A0(v44, v126, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    id v57 = v42;
    id v58 = v42;
    uint64_t v59 = sub_1D44698F8();
    os_log_type_t v60 = sub_1D446A038();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = v42;
      uint64_t v62 = swift_slowAlloc();
      uint64_t v130 = swift_slowAlloc();
      *(void *)&v137[0] = v130;
      *(_DWORD *)uint64_t v62 = 136315394;
      uint64_t v63 = FMReverseGeocodingRequest.debugDescription.getter();
      *(void *)&v136[0] = sub_1D42CB9EC(v63, v64, (uint64_t *)v137);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D42D20B8(v56, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      *(_WORD *)(v62 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v65 = sub_1D446A7D8();
      *(void *)&v136[0] = sub_1D42CB9EC(v65, v66, (uint64_t *)v137);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v59, v60, "FMReverseGeocodingCache: Geocoding error: %s for request: %s", (uint8_t *)v62, 0x16u);
      uint64_t v67 = v130;
      swift_arrayDestroy();
      uint64_t v68 = v67;
LABEL_12:
      MEMORY[0x1D9447730](v68, -1, -1);
      MEMORY[0x1D9447730](v62, -1, -1);
      goto LABEL_14;
    }
    sub_1D42D20B8(v56, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);

    goto LABEL_14;
  }
LABEL_17:
  if (!a6)
  {
    uint64_t v92 = v111;
    sub_1D42D22A0(v44, v111, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    swift_retain_n();
    uint64_t v59 = sub_1D44698F8();
    os_log_type_t v93 = sub_1D446A038();
    if (os_log_type_enabled(v59, v93))
    {
      uint64_t v62 = swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      *(void *)&v137[0] = v94;
      *(_DWORD *)uint64_t v62 = 136315394;
      uint64_t v95 = sub_1D446A918();
      *(void *)&v136[0] = sub_1D42CB9EC(v95, v96, (uint64_t *)v137);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v62 + 12) = 2080;
      uint64_t v97 = FMReverseGeocodingRequest.debugDescription.getter();
      *(void *)&v136[0] = sub_1D42CB9EC(v97, v98, (uint64_t *)v137);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D42D20B8(v92, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      _os_log_impl(&dword_1D4271000, v59, v93, "%s: No map items received for request: %s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy();
      uint64_t v68 = v94;
      goto LABEL_12;
    }
    swift_release_n();
    sub_1D42D20B8(v92, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
LABEL_14:

    uint64_t v69 = v128;
    uint64_t v70 = sub_1D42A9D18();
    uint64_t v72 = v71;
    swift_beginAccess();
    char v73 = (void *)sub_1D43FC998(v70, v72);
    swift_endAccess();
    swift_bridgeObjectRelease();

    if (v69)
    {
      sub_1D42FB494(v137);
      sub_1D4276C98((uint64_t)v137, (uint64_t)v136, &qword_1EBD7CC10);
      v69(v136);
    }
    return;
  }
  uint64_t v74 = (void *)swift_unknownObjectRetain_n();
  FMIPAddress.init(mapItem:)(v74, v135);
  uint64_t v75 = sub_1D42A9D18();
  uint64_t v77 = v76;
  swift_beginAccess();
  uint64_t v78 = (void *)sub_1D43FC998(v75, v77);
  swift_endAccess();
  swift_bridgeObjectRelease();

  uint64_t v79 = (uint64_t)v120;
  sub_1D4469608();
  memcpy(v137, v135, sizeof(v137));
  sub_1D4393070(v44, (uint64_t)v137, v79);
  (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v79, v122);
  uint64_t v80 = v44;
  uint64_t v81 = v123;
  sub_1D42D22A0(v80, v123, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  memcpy(v136, v135, sizeof(v136));
  swift_retain();
  sub_1D42FC768((uint64_t)v136);
  swift_retain();
  sub_1D42FC768((uint64_t)v136);
  uint64_t v82 = sub_1D44698F8();
  os_log_type_t v83 = sub_1D446A038();
  if (os_log_type_enabled(v82, v83))
  {
    uint64_t v84 = swift_slowAlloc();
    uint64_t v131 = swift_slowAlloc();
    v133[0] = v131;
    *(_DWORD *)uint64_t v84 = 136315650;
    uint64_t v85 = sub_1D446A918();
    v134[0] = sub_1D42CB9EC(v85, v86, v133);
    uint64_t v114 = a6;
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v84 + 12) = 2080;
    uint64_t v87 = FMReverseGeocodingRequest.debugDescription.getter();
    v134[0] = sub_1D42CB9EC(v87, v88, v133);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42D20B8(v81, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    *(_WORD *)(v84 + 22) = 2080;
    memcpy(v134, v136, sizeof(v134));
    unint64_t v89 = FMIPAddress.debugDescription.getter();
    v134[0] = sub_1D42CB9EC(v89, v90, v133);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42FC8A4((uint64_t)v136);
    sub_1D42FC8A4((uint64_t)v136);
    _os_log_impl(&dword_1D4271000, v82, v83, "%s: address received for request: %s - %s", (uint8_t *)v84, 0x20u);
    uint64_t v91 = v131;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v91, -1, -1);
    MEMORY[0x1D9447730](v84, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_1D42D20B8(v81, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    sub_1D42FC8A4((uint64_t)v136);
    sub_1D42FC8A4((uint64_t)v136);
  }

  uint64_t v99 = (uint64_t)v128;
  uint64_t v101 = v112;
  uint64_t v100 = v113;
  uint64_t v103 = v118;
  uint64_t v102 = v119;
  uint64_t v104 = v117;
  sub_1D42AADA4();
  (*(void (**)(char *, void, uint64_t))(v103 + 104))(v104, *MEMORY[0x1E4FBCB48], v102);
  uint64_t v131 = sub_1D446A0D8();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v102);
  memcpy(v133, v135, sizeof(v133));
  uint64_t v105 = (void *)swift_allocObject();
  v105[2] = a1;
  memcpy(v105 + 3, v135, 0x120uLL);
  uint64_t v106 = v127;
  v105[39] = v99;
  v105[40] = v106;
  v132[4] = sub_1D439EB70;
  v132[5] = v105;
  v132[0] = MEMORY[0x1E4F143A8];
  v132[1] = 1107296256;
  v132[2] = sub_1D42BD950;
  v132[3] = &unk_1F2C0C988;
  BOOL v107 = _Block_copy(v132);
  swift_retain();
  sub_1D42FC768((uint64_t)v133);
  sub_1D42972D4(v99);
  uint64_t v108 = v124;
  sub_1D4469988();
  v134[0] = MEMORY[0x1E4FBC860];
  sub_1D42AAE70((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  BOOL v109 = v115;
  sub_1D446A1F8();
  BOOL v110 = (void *)v131;
  MEMORY[0x1D9446420](0, v108, v109, v107);
  _Block_release(v107);
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v101 + 8))(v109, v100);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v108, v116);
  memcpy(v134, v135, sizeof(v134));
  sub_1D42FC8A4((uint64_t)v134);
  swift_release();
}

uint64_t sub_1D43949B0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D4469958();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1D44699B8();
  uint64_t v8 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1D4469928();
  sub_1D42D7FAC(v11, (uint64_t)qword_1EBD83228);
  uint64_t v12 = sub_1D44698F8();
  os_log_type_t v13 = sub_1D446A038();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_1D4271000, v12, v13, "FMDiskIO: save to disk", v14, 2u);
    MEMORY[0x1D9447730](v14, -1, -1);
  }

  uint64_t v15 = *a1;
  uint64_t v28 = a1[1];
  uint64_t v29 = v15;
  uint64_t v16 = a1[2];
  uint64_t v26 = a1[3];
  uint64_t v27 = v16;
  uint64_t v25 = a1[4];
  uint64_t v17 = swift_allocObject();
  long long v18 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v17 + 24) = *(_OWORD *)a1;
  *(void *)(v17 + 16) = v2;
  *(_OWORD *)(v17 + 40) = v18;
  *(void *)(v17 + 56) = a1[4];
  aBlock[4] = sub_1D439ED28;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C0CAC8;
  uint64_t v19 = _Block_copy(aBlock);
  sub_1D42AB8DC((uint64_t)&v29);
  sub_1D42AB8DC((uint64_t)&v28);
  sub_1D42AB8DC((uint64_t)&v27);
  sub_1D42AB8DC((uint64_t)&v26);
  sub_1D42AB8DC((uint64_t)&v25);
  swift_retain();
  sub_1D4469988();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1D42AAE70((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v10, v7, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
  return swift_release();
}

uint64_t sub_1D4394D78(uint64_t a1)
{
  return sub_1D428ABC4(a1, (uint64_t)&unk_1F2C0CB00, (uint64_t)sub_1D42E3180, (uint64_t)&unk_1F2C0CB18);
}

uint64_t sub_1D4394DA0(uint64_t a1)
{
  return sub_1D428ABC4(a1, (uint64_t)&unk_1F2C0CA60, (uint64_t)sub_1D439EC7C, (uint64_t)&unk_1F2C0CA78);
}

uint64_t sub_1D4394DC8(uint64_t a1)
{
  return sub_1D428ABC4(a1, (uint64_t)&unk_1F2C0CE70, (uint64_t)sub_1D439F204, (uint64_t)&unk_1F2C0CE88);
}

uint64_t sub_1D4394DF0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D4469958();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = sub_1D44699B8();
  uint64_t v8 = *(void *)(v20[0] - 8);
  MEMORY[0x1F4188790](v20[0]);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1D4469928();
  sub_1D42D7FAC(v11, (uint64_t)qword_1EBD83228);
  uint64_t v12 = sub_1D44698F8();
  os_log_type_t v13 = sub_1D446A038();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_1D4271000, v12, v13, "FMDiskIO: save to disk", v14, 2u);
    MEMORY[0x1D9447730](v14, -1, -1);
  }

  uint64_t v15 = swift_allocObject();
  long long v16 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v15 + 56) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v15 + 72) = v16;
  *(_OWORD *)(v15 + 88) = *(_OWORD *)(a1 + 64);
  long long v17 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v15 + 24) = *(_OWORD *)a1;
  *(void *)(v15 + 16) = v2;
  *(void *)(v15 + 104) = *(void *)(a1 + 80);
  *(_OWORD *)(v15 + 40) = v17;
  aBlock[4] = sub_1D439EF14;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C0CB68;
  long long v18 = _Block_copy(aBlock);
  sub_1D4290D4C(a1);
  swift_retain();
  sub_1D4469988();
  v20[1] = MEMORY[0x1E4FBC860];
  sub_1D42AAE70((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v10, v7, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void))(v8 + 8))(v10, v20[0]);
  return swift_release();
}

void sub_1D4395194(uint64_t a1, uint64_t a2)
{
  v99[1] = *MEMORY[0x1E4F143B8];
  uint64_t v84 = sub_1D44698B8();
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  unint64_t v86 = (unint64_t)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA538);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1D42D5DA0(&qword_1EA6CA540);
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v85 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D4469498();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = *(_OWORD *)(a2 + 16);
  long long v94 = *(_OWORD *)a2;
  long long v95 = v13;
  uint64_t v96 = *(void *)(a2 + 32);
  char v93 = 0;
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_defaultManager);
  long long v16 = *(void **)(a1 + 24);
  unint64_t v17 = *(void *)(a1 + 32);
  uint64_t v89 = a1;
  uint64_t v91 = v16;
  unint64_t v92 = v17;
  long long v18 = (void *)sub_1D4469B08();
  LOBYTE(a2) = objc_msgSend(v15, sel_fileExistsAtPath_isDirectory_, v18, &v93);

  if ((a2 & 1) == 0)
  {
    id v19 = objc_msgSend(v14, sel_defaultManager);
    sub_1D4469408();
    uint64_t v20 = (void *)sub_1D4469428();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    id v97 = 0;
    unsigned __int8 v21 = objc_msgSend(v19, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v20, 1, 0, &v97);

    id v22 = v97;
    if ((v21 & 1) == 0)
    {
      uint64_t v54 = v22;
      uint64_t v55 = sub_1D44693D8();

      swift_willThrow();
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v56 = sub_1D4469928();
      sub_1D42D7FAC(v56, (uint64_t)qword_1EBD83228);
      swift_retain_n();
      id v57 = sub_1D44698F8();
      os_log_type_t v58 = sub_1D446A038();
      if (os_log_type_enabled(v57, v58))
      {
        uint64_t v59 = (uint8_t *)swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        unint64_t v90 = (void *)v55;
        *(_DWORD *)uint64_t v59 = 136315138;
        v99[0] = v60;
        id v97 = v91;
        unint64_t v98 = v92;
        swift_bridgeObjectRetain();
        sub_1D4469C08();
        id v97 = (id)sub_1D42CB9EC((uint64_t)v97, v98, v99);
        sub_1D446A188();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D4271000, v57, v58, "FMDiskIO: Could not create directory for content: %s", v59, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v60, -1, -1);
        MEMORY[0x1D9447730](v59, -1, -1);
        uint64_t v61 = v90;
      }
      else
      {
        swift_release_n();
        uint64_t v61 = (void *)v55;
      }

      return;
    }
  }
  sub_1D4469338();
  swift_allocObject();
  uint64_t v23 = sub_1D4469328();
  sub_1D439ED34();
  uint64_t v24 = (uint64_t)v90;
  uint64_t v25 = sub_1D4469318();
  if (v24)
  {
    swift_release();
    uint64_t v27 = (void *)v24;
LABEL_20:
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v63 = sub_1D4469928();
    sub_1D42D7FAC(v63, (uint64_t)qword_1EBD83228);
    id v64 = v27;
    id v65 = v27;
    unint64_t v66 = sub_1D44698F8();
    os_log_type_t v67 = sub_1D446A018();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = (void *)swift_slowAlloc();
      id v97 = v69;
      *(_DWORD *)uint64_t v68 = 136315138;
      swift_getErrorValue();
      uint64_t v70 = sub_1D446A7D8();
      v99[0] = sub_1D42CB9EC(v70, v71, (uint64_t *)&v97);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v66, v67, "FMDiskIO: Could not save objects to disk %s", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v69, -1, -1);
      MEMORY[0x1D9447730](v68, -1, -1);

      return;
    }

    goto LABEL_32;
  }
  uint64_t v28 = v25;
  unint64_t v29 = v26;
  uint64_t v30 = v89;
  sub_1D42A3A74(v89 + *(void *)(*(void *)v89 + 128), (uint64_t)v7, &qword_1EA6CA538);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v7, 1, v88) != 1)
  {
    sub_1D4276C98((uint64_t)v7, v85, &qword_1EA6CA540);
    sub_1D4469878();
    sub_1D42AAE70(&qword_1EA6CA508, MEMORY[0x1E4F61A20]);
    uint64_t v72 = sub_1D4469318();
    unint64_t v74 = v73;
    unint64_t v90 = (void *)v28;
    uint64_t v75 = (void *)sub_1D44694C8();
    sub_1D42DCFDC(v72, v74);
    uint64_t v76 = *(void *)(v30 + 40);
    uint64_t v77 = *(void *)(v30 + 48);
    id v97 = v91;
    unint64_t v98 = v92;
    swift_bridgeObjectRetain();
    uint64_t v88 = v76;
    uint64_t v87 = v77;
    sub_1D4469C08();
    uint64_t v78 = (void *)sub_1D4469B08();
    swift_bridgeObjectRelease();
    LODWORD(v72) = objc_msgSend(v75, sel_writeToFile_atomically_, v78, 1);

    (*(void (**)(unint64_t, uint64_t))(v83 + 8))(v86, v84);
    sub_1D4276C3C(v85, &qword_1EA6CA540);
    if (v72) {
      goto LABEL_7;
    }
LABEL_27:
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v79 = sub_1D4469928();
    sub_1D42D7FAC(v79, (uint64_t)qword_1EBD83228);
    unint64_t v66 = sub_1D44698F8();
    os_log_type_t v80 = sub_1D446A038();
    if (os_log_type_enabled(v66, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v81 = 0;
      _os_log_impl(&dword_1D4271000, v66, v80, "FMDiskIO: Could not save objects to disk", v81, 2u);
      MEMORY[0x1D9447730](v81, -1, -1);
    }
    swift_release();
    sub_1D42DCFDC((uint64_t)v90, v29);
LABEL_32:

    return;
  }
  sub_1D4276C3C((uint64_t)v7, &qword_1EA6CA538);
  unint64_t v90 = (void *)v28;
  uint64_t v31 = (void *)sub_1D44694C8();
  uint64_t v32 = *(void *)(v30 + 40);
  uint64_t v33 = *(void *)(v30 + 48);
  id v97 = v91;
  unint64_t v98 = v92;
  swift_bridgeObjectRetain();
  uint64_t v88 = v32;
  uint64_t v87 = v33;
  sub_1D4469C08();
  BOOL v34 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  unsigned __int8 v35 = objc_msgSend(v31, sel_writeToFile_atomically_, v34, 1);

  if ((v35 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_7:
  id v36 = objc_msgSend(v14, sel_defaultManager);
  sub_1D42D5DA0(qword_1EBD7D9F8);
  uint64_t inited = swift_initStackObject();
  uint64_t v38 = (void **)MEMORY[0x1E4F28370];
  *(_OWORD *)(inited + 16) = xmmword_1D446E050;
  unint64_t v39 = *v38;
  *(void *)(inited + 32) = *v38;
  double v40 = (void *)*MEMORY[0x1E4F28358];
  type metadata accessor for FileProtectionType(0);
  *(void *)(inited + 64) = v41;
  *(void *)(inited + 40) = v40;
  id v42 = v39;
  id v43 = v40;
  sub_1D43AAA74(inited);
  type metadata accessor for FileAttributeKey(0);
  sub_1D42AAE70((unint64_t *)&unk_1EBD7D930, type metadata accessor for FileAttributeKey);
  uint64_t v44 = (void *)sub_1D4469A38();
  swift_bridgeObjectRelease();
  id v97 = v91;
  unint64_t v98 = v92;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  double v45 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v97 = 0;
  LOBYTE(inited) = objc_msgSend(v36, sel_setAttributes_ofItemAtPath_error_, v44, v45, &v97);

  if ((inited & 1) == 0)
  {
    id v62 = v97;
    uint64_t v27 = (void *)sub_1D44693D8();

    swift_willThrow();
    sub_1D42DCFDC((uint64_t)v90, v29);
    swift_release();
    goto LABEL_20;
  }
  unint64_t v86 = v29;
  uint64_t v46 = qword_1EBD80068;
  id v47 = v97;
  if (v46 != -1) {
    swift_once();
  }
  uint64_t v48 = sub_1D4469928();
  sub_1D42D7FAC(v48, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v49 = sub_1D44698F8();
  os_log_type_t v50 = sub_1D446A038();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    uint64_t v85 = 0;
    uint64_t v53 = v52;
    v99[0] = v52;
    *(_DWORD *)uint64_t v51 = 136315138;
    uint64_t v84 = v23;
    id v97 = v91;
    unint64_t v98 = v92;
    swift_bridgeObjectRetain();
    sub_1D4469C08();
    id v97 = (id)sub_1D42CB9EC((uint64_t)v97, v98, v99);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v49, v50, "FMDiskIO: Successfully wrote object to disk @ %s", v51, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v53, -1, -1);
    MEMORY[0x1D9447730](v51, -1, -1);
    swift_release();
    sub_1D42DCFDC((uint64_t)v90, v86);
  }
  else
  {
    swift_release();
    sub_1D42DCFDC((uint64_t)v90, v86);

    swift_release_n();
  }
}

void sub_1D4396040(uint64_t a1, uint64_t a2)
{
  v96[1] = *MEMORY[0x1E4F143B8];
  uint64_t v83 = sub_1D44698B8();
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  uint64_t v84 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA5A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1D42D5DA0(&qword_1EA6CA5A8);
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  unint64_t v85 = (unint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D4469498();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = a2;
  char v92 = 0;
  long long v13 = self;
  id v14 = objc_msgSend(v13, sel_defaultManager);
  id v15 = *(void **)(a1 + 24);
  unint64_t v16 = *(void *)(a1 + 32);
  uint64_t v88 = a1;
  unint64_t v90 = v15;
  unint64_t v91 = v16;
  unint64_t v17 = (void *)sub_1D4469B08();
  LOBYTE(a2) = objc_msgSend(v14, sel_fileExistsAtPath_isDirectory_, v17, &v92);

  if ((a2 & 1) == 0)
  {
    id v18 = objc_msgSend(v13, sel_defaultManager);
    sub_1D4469408();
    id v19 = (void *)sub_1D4469428();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    id v94 = 0;
    unsigned __int8 v20 = objc_msgSend(v18, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v19, 1, 0, &v94);

    id v21 = v94;
    if ((v20 & 1) == 0)
    {
      uint64_t v53 = v21;
      uint64_t v54 = sub_1D44693D8();

      swift_willThrow();
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_1D4469928();
      sub_1D42D7FAC(v55, (uint64_t)qword_1EBD83228);
      swift_retain_n();
      uint64_t v56 = sub_1D44698F8();
      os_log_type_t v57 = sub_1D446A038();
      if (os_log_type_enabled(v56, v57))
      {
        os_log_type_t v58 = (uint8_t *)swift_slowAlloc();
        uint64_t v59 = swift_slowAlloc();
        uint64_t v89 = (void *)v54;
        *(_DWORD *)os_log_type_t v58 = 136315138;
        v96[0] = v59;
        id v94 = v90;
        unint64_t v95 = v91;
        swift_bridgeObjectRetain();
        sub_1D4469C08();
        id v94 = (id)sub_1D42CB9EC((uint64_t)v94, v95, v96);
        sub_1D446A188();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D4271000, v56, v57, "FMDiskIO: Could not create directory for content: %s", v58, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v59, -1, -1);
        MEMORY[0x1D9447730](v58, -1, -1);
        uint64_t v60 = v89;
      }
      else
      {
        swift_release_n();
        uint64_t v60 = (void *)v54;
      }

      return;
    }
  }
  sub_1D4469338();
  swift_allocObject();
  uint64_t v22 = sub_1D4469328();
  sub_1D42D5DA0(&qword_1EA6CA5B0);
  sub_1D439E09C((unint64_t *)&unk_1EA6CA5F8, &qword_1EA6CA5B0, (void (*)(void))sub_1D439EF20);
  uint64_t v23 = (uint64_t)v89;
  uint64_t v24 = sub_1D4469318();
  if (v23)
  {
    swift_release();
    unint64_t v26 = (void *)v23;
LABEL_20:
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v63 = sub_1D4469928();
    sub_1D42D7FAC(v63, (uint64_t)qword_1EBD83228);
    id v64 = v26;
    id v65 = v26;
    unint64_t v66 = sub_1D44698F8();
    os_log_type_t v67 = sub_1D446A018();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = (void *)swift_slowAlloc();
      id v94 = v69;
      *(_DWORD *)uint64_t v68 = 136315138;
      swift_getErrorValue();
      uint64_t v70 = sub_1D446A7D8();
      v96[0] = sub_1D42CB9EC(v70, v71, (uint64_t *)&v94);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v66, v67, "FMDiskIO: Could not save objects to disk %s", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v69, -1, -1);
      MEMORY[0x1D9447730](v68, -1, -1);

      return;
    }

    goto LABEL_32;
  }
  uint64_t v27 = v24;
  unint64_t v28 = v25;
  uint64_t v29 = v88;
  sub_1D42A3A74(v88 + *(void *)(*(void *)v88 + 128), (uint64_t)v7, &qword_1EA6CA5A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v7, 1, v87) != 1)
  {
    sub_1D4276C98((uint64_t)v7, v85, &qword_1EA6CA5A8);
    uint64_t v61 = v84;
    sub_1D4469878();
    sub_1D42AAE70(&qword_1EA6CA508, MEMORY[0x1E4F61A20]);
    uint64_t v72 = sub_1D4469318();
    unint64_t v74 = v73;
    uint64_t v89 = (void *)v27;
    uint64_t v75 = (void *)sub_1D44694C8();
    sub_1D42DCFDC(v72, v74);
    uint64_t v76 = *(void *)(v29 + 40);
    uint64_t v77 = *(void *)(v29 + 48);
    id v94 = v90;
    unint64_t v95 = v91;
    swift_bridgeObjectRetain();
    uint64_t v87 = v76;
    uint64_t v86 = v77;
    sub_1D4469C08();
    uint64_t v78 = (void *)sub_1D4469B08();
    swift_bridgeObjectRelease();
    LODWORD(v72) = objc_msgSend(v75, sel_writeToFile_atomically_, v78, 1);

    (*(void (**)(char *, uint64_t))(v82 + 8))(v61, v83);
    sub_1D4276C3C(v85, &qword_1EA6CA5A8);
    if (v72) {
      goto LABEL_7;
    }
LABEL_27:
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v79 = sub_1D4469928();
    sub_1D42D7FAC(v79, (uint64_t)qword_1EBD83228);
    unint64_t v66 = sub_1D44698F8();
    os_log_type_t v80 = sub_1D446A038();
    if (os_log_type_enabled(v66, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v81 = 0;
      _os_log_impl(&dword_1D4271000, v66, v80, "FMDiskIO: Could not save objects to disk", v81, 2u);
      MEMORY[0x1D9447730](v81, -1, -1);
    }
    swift_release();
    sub_1D42DCFDC((uint64_t)v89, v28);
LABEL_32:

    return;
  }
  sub_1D4276C3C((uint64_t)v7, &qword_1EA6CA5A0);
  uint64_t v89 = (void *)v27;
  uint64_t v30 = (void *)sub_1D44694C8();
  uint64_t v31 = *(void *)(v29 + 40);
  uint64_t v32 = *(void *)(v29 + 48);
  id v94 = v90;
  unint64_t v95 = v91;
  swift_bridgeObjectRetain();
  uint64_t v87 = v31;
  uint64_t v86 = v32;
  sub_1D4469C08();
  uint64_t v33 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  unsigned __int8 v34 = objc_msgSend(v30, sel_writeToFile_atomically_, v33, 1);

  if ((v34 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_7:
  id v35 = objc_msgSend(v13, sel_defaultManager, v82);
  sub_1D42D5DA0(qword_1EBD7D9F8);
  uint64_t inited = swift_initStackObject();
  uint64_t v37 = (void **)MEMORY[0x1E4F28370];
  *(_OWORD *)(inited + 16) = xmmword_1D446E050;
  uint64_t v38 = *v37;
  *(void *)(inited + 32) = *v37;
  unint64_t v39 = (void *)*MEMORY[0x1E4F28358];
  type metadata accessor for FileProtectionType(0);
  *(void *)(inited + 64) = v40;
  *(void *)(inited + 40) = v39;
  id v41 = v38;
  id v42 = v39;
  sub_1D43AAA74(inited);
  type metadata accessor for FileAttributeKey(0);
  sub_1D42AAE70((unint64_t *)&unk_1EBD7D930, type metadata accessor for FileAttributeKey);
  id v43 = (void *)sub_1D4469A38();
  swift_bridgeObjectRelease();
  id v94 = v90;
  unint64_t v95 = v91;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  uint64_t v44 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v94 = 0;
  LOBYTE(inited) = objc_msgSend(v35, sel_setAttributes_ofItemAtPath_error_, v43, v44, &v94);

  if ((inited & 1) == 0)
  {
    id v62 = v94;
    unint64_t v26 = (void *)sub_1D44693D8();

    swift_willThrow();
    sub_1D42DCFDC((uint64_t)v89, v28);
    swift_release();
    goto LABEL_20;
  }
  unint64_t v85 = v28;
  uint64_t v45 = qword_1EBD80068;
  id v46 = v94;
  if (v45 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_1D4469928();
  sub_1D42D7FAC(v47, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v48 = sub_1D44698F8();
  os_log_type_t v49 = sub_1D446A038();
  if (os_log_type_enabled(v48, v49))
  {
    os_log_type_t v50 = (uint8_t *)swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    uint64_t v84 = 0;
    uint64_t v52 = v51;
    v96[0] = v51;
    *(_DWORD *)os_log_type_t v50 = 136315138;
    uint64_t v83 = v22;
    id v94 = v90;
    unint64_t v95 = v91;
    swift_bridgeObjectRetain();
    sub_1D4469C08();
    id v94 = (id)sub_1D42CB9EC((uint64_t)v94, v95, v96);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v48, v49, "FMDiskIO: Successfully wrote object to disk @ %s", v50, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v52, -1, -1);
    MEMORY[0x1D9447730](v50, -1, -1);
    swift_release();
    sub_1D42DCFDC((uint64_t)v89, v85);
  }
  else
  {
    swift_release();
    sub_1D42DCFDC((uint64_t)v89, v85);

    swift_release_n();
  }
}

void sub_1D4396EB8(void *a1, uint64_t a2)
{
  uint64_t v107 = *MEMORY[0x1E4F143B8];
  uint64_t v88 = sub_1D44698B8();
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  unint64_t v90 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA578);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v93 = (uint64_t)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1D42D5DA0(&qword_1EA6CA580);
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  uint64_t v89 = (uint64_t)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D4469498();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *(_OWORD *)(a2 + 48);
  long long v103 = *(_OWORD *)(a2 + 32);
  long long v104 = v12;
  long long v105 = *(_OWORD *)(a2 + 64);
  uint64_t v106 = *(void *)(a2 + 80);
  long long v13 = *(_OWORD *)(a2 + 16);
  long long v101 = *(_OWORD *)a2;
  long long v102 = v13;
  char v97 = 0;
  id v14 = self;
  id v15 = objc_msgSend(v14, sel_defaultManager);
  id v94 = a1;
  unint64_t v16 = (void *)a1[3];
  unint64_t v17 = a1[4];
  uint64_t v96 = v16;
  id v18 = (void *)sub_1D4469B08();
  LOBYTE(a2) = objc_msgSend(v15, sel_fileExistsAtPath_isDirectory_, v18, &v97);

  if ((a2 & 1) == 0)
  {
    id v19 = objc_msgSend(v14, sel_defaultManager);
    sub_1D4469408();
    unsigned __int8 v20 = (void *)sub_1D4469428();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    id v98 = 0;
    unsigned __int8 v21 = objc_msgSend(v19, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v20, 1, 0, &v98);

    id v22 = v98;
    if ((v21 & 1) == 0)
    {
      os_log_type_t v57 = v22;
      uint64_t v58 = sub_1D44693D8();

      swift_willThrow();
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v59 = sub_1D4469928();
      sub_1D42D7FAC(v59, (uint64_t)qword_1EBD83228);
      swift_retain_n();
      uint64_t v60 = sub_1D44698F8();
      os_log_type_t v61 = sub_1D446A038();
      if (os_log_type_enabled(v60, v61))
      {
        id v62 = (uint8_t *)swift_slowAlloc();
        uint64_t v63 = swift_slowAlloc();
        unint64_t v95 = (void *)v58;
        *(_DWORD *)id v62 = 136315138;
        uint64_t v100 = v63;
        id v98 = v96;
        unint64_t v99 = v17;
        swift_bridgeObjectRetain();
        sub_1D4469C08();
        id v98 = (id)sub_1D42CB9EC((uint64_t)v98, v99, &v100);
        sub_1D446A188();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D4271000, v60, v61, "FMDiskIO: Could not create directory for content: %s", v62, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v63, -1, -1);
        MEMORY[0x1D9447730](v62, -1, -1);
        id v64 = v95;
      }
      else
      {
        swift_release_n();
        id v64 = (void *)v58;
      }

      return;
    }
  }
  uint64_t v23 = v14;
  unint64_t v24 = v17;
  sub_1D4469338();
  swift_allocObject();
  uint64_t v25 = sub_1D4469328();
  sub_1D439EF20();
  unint64_t v26 = (unint64_t)v95;
  uint64_t v27 = sub_1D4469318();
  unint64_t v95 = (void *)v28;
  if (v26)
  {
    swift_release();
    uint64_t v29 = (void *)v26;
LABEL_20:
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v67 = sub_1D4469928();
    sub_1D42D7FAC(v67, (uint64_t)qword_1EBD83228);
    id v68 = v29;
    id v69 = v29;
    uint64_t v70 = sub_1D44698F8();
    os_log_type_t v71 = sub_1D446A018();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      unint64_t v73 = (void *)swift_slowAlloc();
      id v98 = v73;
      *(_DWORD *)uint64_t v72 = 136315138;
      swift_getErrorValue();
      uint64_t v74 = sub_1D446A7D8();
      uint64_t v100 = sub_1D42CB9EC(v74, v75, (uint64_t *)&v98);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v70, v71, "FMDiskIO: Could not save objects to disk %s", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v73, -1, -1);
      MEMORY[0x1D9447730](v72, -1, -1);

      return;
    }

    goto LABEL_32;
  }
  uint64_t v30 = v27;
  uint64_t v31 = v94;
  uint64_t v32 = v93;
  sub_1D42A3A74((uint64_t)v31 + *(void *)(*v31 + 128), v93, &qword_1EA6CA578);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v32, 1, v92) != 1)
  {
    sub_1D4276C98(v32, v89, &qword_1EA6CA580);
    sub_1D4469878();
    sub_1D42AAE70(&qword_1EA6CA508, MEMORY[0x1E4F61A20]);
    uint64_t v65 = v88;
    uint64_t v76 = sub_1D4469318();
    unint64_t v78 = v77;
    uint64_t v93 = v30;
    uint64_t v79 = (void *)sub_1D44694C8();
    sub_1D42DCFDC(v76, v78);
    uint64_t v80 = v31[5];
    uint64_t v81 = v31[6];
    id v98 = v96;
    unint64_t v99 = v17;
    swift_bridgeObjectRetain();
    uint64_t v92 = v80;
    uint64_t v91 = v81;
    sub_1D4469C08();
    uint64_t v82 = (void *)sub_1D4469B08();
    swift_bridgeObjectRelease();
    LODWORD(v76) = objc_msgSend(v79, sel_writeToFile_atomically_, v82, 1);

    (*(void (**)(char *, uint64_t))(v87 + 8))(v90, v65);
    sub_1D4276C3C(v89, &qword_1EA6CA580);
    if (v76) {
      goto LABEL_7;
    }
LABEL_27:
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v83 = sub_1D4469928();
    sub_1D42D7FAC(v83, (uint64_t)qword_1EBD83228);
    uint64_t v70 = sub_1D44698F8();
    os_log_type_t v84 = sub_1D446A038();
    if (os_log_type_enabled(v70, v84))
    {
      unint64_t v85 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v85 = 0;
      _os_log_impl(&dword_1D4271000, v70, v84, "FMDiskIO: Could not save objects to disk", v85, 2u);
      MEMORY[0x1D9447730](v85, -1, -1);
    }
    swift_release();
    sub_1D42DCFDC(v93, (unint64_t)v95);
LABEL_32:

    return;
  }
  sub_1D4276C3C(v32, &qword_1EA6CA578);
  uint64_t v93 = v30;
  uint64_t v33 = (void *)sub_1D44694C8();
  uint64_t v34 = v31[5];
  uint64_t v35 = v31[6];
  id v98 = v96;
  unint64_t v99 = v17;
  swift_bridgeObjectRetain();
  uint64_t v92 = v34;
  uint64_t v91 = v35;
  sub_1D4469C08();
  id v36 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  unsigned __int8 v37 = objc_msgSend(v33, sel_writeToFile_atomically_, v36, 1);

  if ((v37 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_7:
  unint64_t v90 = 0;
  id v38 = objc_msgSend(v23, sel_defaultManager);
  sub_1D42D5DA0(qword_1EBD7D9F8);
  uint64_t inited = swift_initStackObject();
  uint64_t v40 = (void **)MEMORY[0x1E4F28370];
  *(_OWORD *)(inited + 16) = xmmword_1D446E050;
  id v41 = *v40;
  *(void *)(inited + 32) = *v40;
  id v42 = (void *)*MEMORY[0x1E4F28358];
  type metadata accessor for FileProtectionType(0);
  *(void *)(inited + 64) = v43;
  *(void *)(inited + 40) = v42;
  id v44 = v41;
  id v45 = v42;
  sub_1D43AAA74(inited);
  type metadata accessor for FileAttributeKey(0);
  sub_1D42AAE70((unint64_t *)&unk_1EBD7D930, type metadata accessor for FileAttributeKey);
  id v46 = (void *)sub_1D4469A38();
  swift_bridgeObjectRelease();
  id v98 = v96;
  unint64_t v99 = v24;
  unint64_t v47 = v24;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  uint64_t v48 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v98 = 0;
  LOBYTE(inited) = objc_msgSend(v38, sel_setAttributes_ofItemAtPath_error_, v46, v48, &v98);

  if ((inited & 1) == 0)
  {
    id v66 = v98;
    uint64_t v29 = (void *)sub_1D44693D8();

    swift_willThrow();
    sub_1D42DCFDC(v93, (unint64_t)v95);
    swift_release();
    goto LABEL_20;
  }
  uint64_t v49 = qword_1EBD80068;
  id v50 = v98;
  if (v49 != -1) {
    swift_once();
  }
  uint64_t v51 = sub_1D4469928();
  sub_1D42D7FAC(v51, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v52 = sub_1D44698F8();
  os_log_type_t v53 = sub_1D446A038();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    uint64_t v89 = v25;
    uint64_t v56 = v55;
    unint64_t v99 = v47;
    uint64_t v100 = v55;
    *(_DWORD *)uint64_t v54 = 136315138;
    id v98 = v96;
    swift_bridgeObjectRetain();
    sub_1D4469C08();
    id v98 = (id)sub_1D42CB9EC((uint64_t)v98, v99, &v100);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v52, v53, "FMDiskIO: Successfully wrote object to disk @ %s", v54, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v56, -1, -1);
    MEMORY[0x1D9447730](v54, -1, -1);
    swift_release();
    sub_1D42DCFDC(v93, (unint64_t)v95);
  }
  else
  {
    swift_release();
    sub_1D42DCFDC(v93, (unint64_t)v95);

    swift_release_n();
  }
}

uint64_t sub_1D4397D84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v15 = 0;
  long long v13 = 0u;
  long long v14 = 0u;
  uint64_t v4 = *(NSObject **)(v1 + 16);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = &v13;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1D439EFEC;
  *(void *)(v6 + 24) = v5;
  aBlock[4] = sub_1D42AEE88;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1D42AEDE4;
  uint64_t aBlock[3] = &unk_1F2C0CDC0;
  uint64_t v7 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    long long v10 = v14;
    long long v11 = v13;
    uint64_t v9 = v15;
    uint64_t result = swift_release();
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v10;
    *(void *)(a1 + 32) = v9;
  }
  return result;
}

uint64_t sub_1D4397F14()
{
  uint64_t v8 = 0;
  uint64_t v1 = *(NSObject **)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  *(void *)(v2 + 24) = &v8;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1D439F0C4;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_1D42AEE88;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1D42AEDE4;
  uint64_t aBlock[3] = &unk_1F2C0CE38;
  uint64_t v4 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v8;
    swift_release();
    return v6;
  }
  return result;
}

void sub_1D4398078(void *a1, uint64_t *a2)
{
  unint64_t v85 = a2;
  uint64_t v82 = sub_1D4469838();
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  os_log_type_t v84 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D44698B8();
  uint64_t v83 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v86 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D42D5DA0(&qword_1EA6CA538);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1D42D5DA0(&qword_1EA6CA540);
  uint64_t v9 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  long long v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D4469498();
  uint64_t v92 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  long long v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v87 = v9;
  uint64_t v88 = v8;
  uint64_t v90 = v4;
  uint64_t v91 = v11;
  uint64_t v15 = sub_1D4469928();
  uint64_t v93 = sub_1D42D7FAC(v15, (uint64_t)qword_1EBD83228);
  unint64_t v16 = sub_1D44698F8();
  os_log_type_t v17 = sub_1D446A038();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v18 = 0;
    _os_log_impl(&dword_1D4271000, v16, v17, "FMDiskIO: read from disk", v18, 2u);
    MEMORY[0x1D9447730](v18, -1, -1);
  }

  id v19 = objc_msgSend(self, sel_defaultManager);
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  uint64_t v22 = a1[5];
  uint64_t v23 = a1[6];
  *(void *)&long long v94 = v20;
  *((void *)&v94 + 1) = v21;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  unint64_t v24 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  unsigned __int8 v25 = objc_msgSend(v19, sel_fileExistsAtPath_, v24);

  if ((v25 & 1) == 0)
  {
    uint64_t v79 = v23;
    uint64_t v80 = v22;
    swift_retain_n();
    unint64_t v26 = sub_1D44698F8();
    os_log_type_t v27 = sub_1D446A018();
    if (os_log_type_enabled(v26, v27))
    {
      unint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v97 = v29;
      *(_DWORD *)unint64_t v28 = 136315138;
      *(void *)&long long v94 = v20;
      *((void *)&v94 + 1) = v21;
      swift_bridgeObjectRetain();
      sub_1D4469C08();
      *(void *)&long long v94 = sub_1D42CB9EC(v94, *((unint64_t *)&v94 + 1), &v97);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v26, v27, "FMDiskIO: Disk archive does not exist at: %s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v29, -1, -1);
      MEMORY[0x1D9447730](v28, -1, -1);

      return;
    }

    goto LABEL_25;
  }
  unint64_t v78 = a1;
  *(void *)&long long v94 = v20;
  *((void *)&v94 + 1) = v21;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  sub_1D4469408();
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_1D44694A8();
  unint64_t v32 = v31;
  uint64_t v33 = v20;
  uint64_t v76 = 0;
  uint64_t v77 = v21;
  (*(void (**)(char *, uint64_t))(v92 + 8))(v14, v12);
  uint64_t v34 = v78;
  swift_retain();
  sub_1D42DD034(v30, v32);
  swift_retain();
  sub_1D42DD034(v30, v32);
  uint64_t v35 = sub_1D44698F8();
  os_log_type_t v36 = sub_1D446A038();
  int v37 = v36;
  BOOL v38 = os_log_type_enabled(v35, v36);
  unint64_t v39 = v32;
  uint64_t v80 = v22;
  uint64_t v79 = v23;
  uint64_t v75 = v33;
  if (v38)
  {
    uint64_t v40 = swift_slowAlloc();
    uint64_t v92 = swift_slowAlloc();
    uint64_t v97 = v92;
    *(_DWORD *)uint64_t v40 = 136315394;
    int v74 = v37;
    *(void *)&long long v94 = v33;
    *((void *)&v94 + 1) = v77;
    swift_bridgeObjectRetain();
    os_log_t v73 = v35;
    unint64_t v39 = v32;
    sub_1D4469C08();
    *(void *)&long long v94 = sub_1D42CB9EC(v94, *((unint64_t *)&v94 + 1), &v97);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    uint64_t v41 = sub_1D44694B8();
    *(void *)&long long v94 = sub_1D42CB9EC(v41, v42, &v97);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42DCFDC(v30, v32);
    sub_1D42DCFDC(v30, v32);
    os_log_t v43 = v73;
    _os_log_impl(&dword_1D4271000, v73, (os_log_type_t)v74, "FMDiskIO: file: %s data: %s", (uint8_t *)v40, 0x16u);
    uint64_t v44 = v92;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v44, -1, -1);
    MEMORY[0x1D9447730](v40, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_1D42DCFDC(v30, v32);
    sub_1D42DCFDC(v30, v32);
  }
  uint64_t v46 = v89;
  uint64_t v45 = v90;
  uint64_t v47 = (uint64_t)v88;
  uint64_t v48 = v87;
  sub_1D4469308();
  swift_allocObject();
  sub_1D44692F8();
  sub_1D42A3A74((uint64_t)v34 + *(void *)(*v34 + 128), v47, &qword_1EA6CA538);
  int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v47, 1, v46);
  uint64_t v50 = (uint64_t)v91;
  if (v49 == 1)
  {
    sub_1D4276C3C(v47, &qword_1EA6CA538);
    sub_1D439F004();
    uint64_t v51 = v76;
    sub_1D44692E8();
    uint64_t v52 = v77;
    if (v51)
    {
      uint64_t v92 = v30;
      goto LABEL_18;
    }
    sub_1D42DCFDC(v30, v39);
    swift_release();
LABEL_20:
    uint64_t v54 = v96;
    uint64_t v55 = v85;
    uint64_t v56 = *v85;
    long long v57 = v95;
    *(_OWORD *)unint64_t v85 = v94;
    *((_OWORD *)v55 + 1) = v57;
    v55[4] = v54;
    sub_1D439F058(v56);
    return;
  }
  sub_1D4276C98(v47, (uint64_t)v91, &qword_1EA6CA540);
  sub_1D42AAE70(&qword_1EA6CA5C8, MEMORY[0x1E4F61A20]);
  os_log_type_t v53 = v86;
  uint64_t v92 = v30;
  uint64_t v51 = v76;
  sub_1D44692E8();
  uint64_t v52 = v77;
  if (!v51)
  {
    uint64_t v58 = v84;
    sub_1D4469848();
    uint64_t v59 = v58;
    uint64_t v60 = sub_1D44698A8();
    unint64_t v62 = v61;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v59, v82);
    sub_1D439F004();
    sub_1D44692E8();
    uint64_t v63 = (void (**)(char *, uint64_t))(v83 + 8);
    swift_release();
    sub_1D42DCFDC(v60, v62);
    sub_1D42DCFDC(v92, v39);
    (*v63)(v53, v45);
    sub_1D4276C3C((uint64_t)v91, &qword_1EA6CA540);
    goto LABEL_20;
  }
  sub_1D4276C3C(v50, &qword_1EA6CA540);
LABEL_18:
  swift_release();
  swift_retain();
  id v64 = v51;
  swift_retain();
  id v65 = v51;
  id v66 = sub_1D44698F8();
  os_log_type_t v67 = sub_1D446A018();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    uint64_t v97 = v69;
    *(_DWORD *)uint64_t v68 = 136315394;
    swift_getErrorValue();
    uint64_t v70 = sub_1D446A7D8();
    *(void *)&long long v94 = sub_1D42CB9EC(v70, v71, &v97);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    *(_WORD *)(v68 + 12) = 2080;
    *(void *)&long long v94 = v75;
    *((void *)&v94 + 1) = v52;
    swift_bridgeObjectRetain();
    sub_1D4469C08();
    *(void *)&long long v94 = sub_1D42CB9EC(v94, *((unint64_t *)&v94 + 1), &v97);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v66, v67, "FMDiskIO: Could not decode the disk archive: %s, %s", (uint8_t *)v68, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v69, -1, -1);
    MEMORY[0x1D9447730](v68, -1, -1);

    sub_1D42DCFDC(v92, v39);
    return;
  }
  sub_1D42DCFDC(v92, v39);

LABEL_25:
  swift_release_n();
}

uint64_t sub_1D4398F00(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10 = type metadata accessor for FMIPDeviceConnectedState(0);
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v44 = (uint64_t)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  long long v14 = (char *)v42 - v13;
  uint64_t v55 = sub_1D4469688();
  uint64_t v45 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  unint64_t v16 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D42D5DA0(&qword_1EA6CA558);
  MEMORY[0x1F4188790](v17 - 8);
  id v19 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = ~v20;
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v23 = -v20;
  uint64_t v48 = a1;
  uint64_t v49 = a1 + 64;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  else {
    uint64_t v24 = -1;
  }
  uint64_t v50 = v21;
  uint64_t v51 = 0;
  uint64_t v52 = v24 & v22;
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  _OWORD v42[2] = a1;
  swift_bridgeObjectRetain();
  v42[1] = a3;
  swift_retain();
  sub_1D4386F08((uint64_t)v19);
  uint64_t v25 = sub_1D42D5DA0(&qword_1EA6CA550);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v19, 1, v25) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1D42F9364();
    return swift_release();
  }
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
  os_log_t v43 = (void (**)(char *, uint64_t))(v45 + 8);
  while (1)
  {
    uint64_t v28 = (uint64_t)&v19[*(int *)(v25 + 48)];
    v47(v16, v19, v55);
    sub_1D42BB578(v28, (uint64_t)v14, type metadata accessor for FMIPDeviceConnectedState);
    uint64_t v29 = *a5;
    unint64_t v31 = sub_1D43AEE98((uint64_t)v16);
    uint64_t v32 = *(void *)(v29 + 16);
    BOOL v33 = (v30 & 1) == 0;
    uint64_t v34 = v32 + v33;
    if (__OFADD__(v32, v33)) {
      break;
    }
    char v35 = v30;
    if (*(void *)(v29 + 24) >= v34)
    {
      if (a4)
      {
        if (v30) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_1D43D9B14();
        if (v35) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_1D43D548C(v34, a4 & 1);
      unint64_t v36 = sub_1D43AEE98((uint64_t)v16);
      if ((v35 & 1) != (v37 & 1)) {
        goto LABEL_22;
      }
      unint64_t v31 = v36;
      if (v35)
      {
LABEL_7:
        uint64_t v27 = v44;
        sub_1D42D22A0((uint64_t)v14, v44, type metadata accessor for FMIPDeviceConnectedState);
        sub_1D42D20B8((uint64_t)v14, type metadata accessor for FMIPDeviceConnectedState);
        (*v43)(v16, v55);
        sub_1D439ED88(v27, *(void *)(*a5 + 56) + *(void *)(v46 + 72) * v31, type metadata accessor for FMIPDeviceConnectedState);
        goto LABEL_8;
      }
    }
    BOOL v38 = (void *)*a5;
    *(void *)(*a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
    v47((char *)(v38[6] + *(void *)(v45 + 72) * v31), v16, v55);
    sub_1D42BB578((uint64_t)v14, v38[7] + *(void *)(v46 + 72) * v31, type metadata accessor for FMIPDeviceConnectedState);
    uint64_t v39 = v38[2];
    BOOL v40 = __OFADD__(v39, 1);
    uint64_t v41 = v39 + 1;
    if (v40) {
      goto LABEL_21;
    }
    v38[2] = v41;
LABEL_8:
    sub_1D4386F08((uint64_t)v19);
    uint64_t v25 = sub_1D42D5DA0(&qword_1EA6CA550);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v19, 1, v25) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1D446A7A8();
  __break(1u);
  return result;
}

uint64_t sub_1D43993E8(unint64_t a1)
{
  return sub_1D43AFD5C(0, *(void *)(a1 + 16), 0, a1);
}

void sub_1D43993FC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1D446A498();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1D9446720);
}

uint64_t sub_1D4399478(unint64_t a1)
{
  return sub_1D43B038C(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1D439948C(unint64_t a1)
{
  return sub_1D42CAE20(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1D43994A0(unint64_t a1)
{
  return sub_1D43B0108(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1D43994B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + *(int *)(sub_1D42D5DA0(&qword_1EA6CA370) + 48);
  uint64_t v5 = a2 + *(int *)(sub_1D42D5DA0(&qword_1EA6CA550) + 48);
  uint64_t v6 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return sub_1D42D22A0(v4, v5, type metadata accessor for FMIPDeviceConnectedState);
}

uint64_t sub_1D4399564(uint64_t a1, const void *a2, void (*a3)(unsigned char *))
{
  memcpy(__dst, a2, sizeof(__dst));
  memcpy(v9, a2, sizeof(v9));
  uint64_t result = (*(uint64_t (**)(unsigned char *))(*(void *)a1 + 352))(v9);
  if (a3)
  {
    memcpy(v8, __dst, sizeof(v8));
    nullsub_1(v8);
    sub_1D4276C98((uint64_t)v8, (uint64_t)v7, &qword_1EBD7CC10);
    sub_1D42FC768((uint64_t)__dst);
    a3(v7);
    return sub_1D42FC8A4((uint64_t)__dst);
  }
  return result;
}

void sub_1D4399654(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v3;
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v4 = (void *)MEMORY[0x1D9446F50]();
  sub_1D4395194(a1, (uint64_t)v5);
}

void sub_1D43996C0(void *a1, uint64_t *a2)
{
}

void sub_1D43996F0(void *a1, uint64_t *a2)
{
}

void sub_1D4399720(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = (void *)MEMORY[0x1D9446F50]();
  sub_1D4396040(a1, v3);
}

void sub_1D4399780(void *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 48);
  _OWORD v6[2] = *(_OWORD *)(a2 + 32);
  v6[3] = v3;
  v6[4] = *(_OWORD *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  long long v4 = *(_OWORD *)(a2 + 16);
  v6[0] = *(_OWORD *)a2;
  v6[1] = v4;
  uint64_t v5 = (void *)MEMORY[0x1D9446F50]();
  sub_1D4396EB8(a1, (uint64_t)v6);
}

uint64_t sub_1D43997FC(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    unint64_t v4 = 0;
    uint64_t v24 = result + 32;
    uint64_t v5 = a2 + 56;
    uint64_t v6 = MEMORY[0x1E4FBC860];
    unint64_t v23 = *(void *)(result + 16);
    while (1)
    {
      uint64_t v22 = v6;
      if (v4 <= v2) {
        unint64_t v7 = v2;
      }
      else {
        unint64_t v7 = v4;
      }
      while (1)
      {
        if (v4 == v7)
        {
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)memcpy(__dst, (const void *)(v24 + 352 * v4++), 0x160uLL);
        if (*(void *)(a2 + 16)) {
          break;
        }
LABEL_7:
        if (v4 == v2) {
          return v22;
        }
      }
      uint64_t v9 = __dst[0];
      uint64_t v8 = __dst[1];
      sub_1D446A828();
      sub_1D42FC4A4((uint64_t)__dst);
      swift_bridgeObjectRetain();
      sub_1D4469BC8();
      uint64_t v10 = sub_1D446A888();
      uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v12 = v10 & ~v11;
      if (((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_6;
      }
      uint64_t v13 = *(void *)(a2 + 48);
      long long v14 = (void *)(v13 + 16 * v12);
      BOOL v15 = *v14 == v9 && v14[1] == v8;
      if (!v15 && (sub_1D446A758() & 1) == 0) {
        break;
      }
LABEL_23:
      swift_bridgeObjectRelease();
      uint64_t v6 = v22;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v26 = v22;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1D433716C(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v6 = v26;
      }
      unint64_t v21 = *(void *)(v6 + 16);
      unint64_t v20 = *(void *)(v6 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1D433716C(v20 > 1, v21 + 1, 1);
        uint64_t v6 = v26;
      }
      *(void *)(v6 + 16) = v21 + 1;
      uint64_t result = (uint64_t)memcpy((void *)(v6 + 352 * v21 + 32), __dst, 0x160uLL);
      unint64_t v2 = v23;
      if (v4 == v23) {
        return v6;
      }
    }
    uint64_t v16 = ~v11;
    while (1)
    {
      unint64_t v12 = (v12 + 1) & v16;
      if (((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        break;
      }
      uint64_t v17 = (void *)(v13 + 16 * v12);
      BOOL v18 = *v17 == v9 && v17[1] == v8;
      if (v18 || (sub_1D446A758() & 1) != 0) {
        goto LABEL_23;
      }
    }
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t result = sub_1D42FC604((uint64_t)__dst);
    unint64_t v2 = v23;
    goto LABEL_7;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1D4399A44(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  BOOL v18 = a2;
  uint64_t v5 = type metadata accessor for FMIPDevice();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1D42E1CF4(0, v9, 0);
    uint64_t v10 = v19;
    unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = *(void *)(v6 + 72);
    while (1)
    {
      sub_1D42B4844(v12, v18, (uint64_t)v8);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      uint64_t v19 = v10;
      unint64_t v15 = *(void *)(v10 + 16);
      unint64_t v14 = *(void *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1D42E1CF4(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v19;
      }
      *(void *)(v10 + 16) = v15 + 1;
      sub_1D42BB578((uint64_t)v8, v10 + v11 + v15 * v13, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      v12 += v13;
      if (!--v9) {
        return v10;
      }
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_1D4399BE0(uint64_t result, void *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    unint64_t v4 = 0;
    uint64_t v20 = result + 32;
    BOOL v18 = a2 + 7;
    uint64_t v19 = MEMORY[0x1E4FBC860];
    while (1)
    {
      if (v4 <= v2) {
        unint64_t v5 = v2;
      }
      else {
        unint64_t v5 = v4;
      }
      unint64_t v21 = v5;
      while (1)
      {
        if (v4 == v21) {
          goto LABEL_34;
        }
        uint64_t result = (uint64_t)memcpy(__dst, (const void *)(v20 + 352 * v4++), 0x160uLL);
        uint64_t v6 = a2[2];
        if (!v6) {
          goto LABEL_7;
        }
        uint64_t v7 = __dst[0];
        uint64_t v8 = __dst[1];
        if (a2[4] == __dst[0] && a2[5] == __dst[1]) {
          break;
        }
        uint64_t result = sub_1D446A758();
        if (result) {
          break;
        }
        if (v6 != 1)
        {
          uint64_t v10 = v18;
          uint64_t v11 = 1;
          while (1)
          {
            uint64_t v12 = v11 + 1;
            if (__OFADD__(v11, 1)) {
              break;
            }
            if (*(v10 - 1) == v7 && *v10 == v8) {
              goto LABEL_25;
            }
            uint64_t result = sub_1D446A758();
            if (result) {
              goto LABEL_25;
            }
            v10 += 2;
            ++v11;
            if (v12 == v6) {
              goto LABEL_7;
            }
          }
          __break(1u);
LABEL_34:
          __break(1u);
          return result;
        }
LABEL_7:
        if (v4 == v2) {
          return v19;
        }
      }
LABEL_25:
      sub_1D42FC4A4((uint64_t)__dst);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v15 = v19;
      uint64_t v23 = v19;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1D433716C(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v15 = v23;
      }
      unint64_t v17 = *(void *)(v15 + 16);
      unint64_t v16 = *(void *)(v15 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1D433716C(v16 > 1, v17 + 1, 1);
        uint64_t v15 = v23;
      }
      *(void *)(v15 + 16) = v17 + 1;
      uint64_t v19 = v15;
      uint64_t result = (uint64_t)memcpy((void *)(v15 + 352 * v17 + 32), __dst, 0x160uLL);
      if (v4 == v2) {
        return v19;
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1D4399DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a2;
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1D4469688();
  uint64_t v7 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  BOOL v40 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPItem();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v36 = (uint64_t)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v35 - v13;
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (v15)
  {
    uint64_t v37 = v2;
    uint64_t v44 = MEMORY[0x1E4FBC860];
    sub_1D4337258(0, v15, 0);
    unint64_t v42 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v17 = a1 + v42;
    uint64_t v18 = *(void *)(v10 + 72);
    uint64_t v19 = v7;
    uint64_t v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    BOOL v38 = (void (**)(uint64_t, uint64_t))(v19 + 8);
    uint64_t v39 = (void (**)(char *, char *, uint64_t))(v19 + 32);
    while (1)
    {
      sub_1D4469628();
      uint64_t v21 = v43;
      if ((*v20)(v6, 1, v43) == 1) {
        break;
      }
      uint64_t v22 = (uint64_t)v40;
      (*v39)(v40, v6, v21);
      uint64_t v23 = *(void *)(v41 + 248);
      if (!*(void *)(v23 + 16)) {
        goto LABEL_9;
      }
      swift_bridgeObjectRetain();
      unint64_t v24 = sub_1D43AEE98(v22);
      if ((v25 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_9:
        (*v38)(v22, v21);
LABEL_10:
        sub_1D42D22A0(v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        goto LABEL_11;
      }
      uint64_t v26 = *(void *)(*(void *)(v23 + 56) + 8 * v24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v27 = v37;
      uint64_t v28 = (void *)sub_1D438CB70(v26);
      swift_bridgeObjectRelease();
      uint64_t v29 = swift_bridgeObjectRetain();
      uint64_t v30 = sub_1D4399BE0(v29, v28);
      uint64_t v37 = v27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = v36;
      sub_1D42D22A0(v17, v36, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      FMIPItem.init(item:safeLocations:)(v31, v30, (uint64_t)v14);
      (*v38)((uint64_t)v40, v43);
LABEL_11:
      uint64_t v16 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D4337258(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v44;
      }
      unint64_t v33 = *(void *)(v16 + 16);
      unint64_t v32 = *(void *)(v16 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_1D4337258(v32 > 1, v33 + 1, 1);
        uint64_t v16 = v44;
      }
      *(void *)(v16 + 16) = v33 + 1;
      sub_1D42BB578((uint64_t)v14, v16 + v42 + v33 * v18, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      v17 += v18;
      if (!--v15) {
        return v16;
      }
    }
    sub_1D4276C3C((uint64_t)v6, (uint64_t *)&unk_1EBD7E930);
    goto LABEL_10;
  }
  return v16;
}

uint64_t sub_1D439A1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = type metadata accessor for FMReverseGeocodingRequest();
  MEMORY[0x1F4188790](v29);
  uint64_t v28 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v42 = MEMORY[0x1E4FBC860];
    sub_1D433716C(0, v5, 0);
    uint64_t v6 = v42;
    uint64_t v7 = (char *)(a1 + 32);
    uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC8FMIPCore15FMIPDataManager_geocodingCache);
    uint64_t v9 = &v41[5];
    uint64_t v30 = &v37[5];
    uint64_t v31 = (char *)&v41[41];
    int64_t v35 = v5 - 1;
    unint64_t v33 = &v41[5];
    while (1)
    {
      uint64_t v34 = v7;
      memcpy(v41, v7, 0x160uLL);
      if (v8)
      {
        uint64_t v10 = v41[0];
        uint64_t v11 = v41[1];
        uint64_t v12 = (void *)v41[3];
        unint64_t v14 = v28;
        uint64_t v13 = v29;
        uint64_t v15 = sub_1D42A3A74(v8 + qword_1EA6E49F8, (uint64_t)&v28[*(int *)(v29 + 24)], (uint64_t *)&unk_1EBD7E560);
        *unint64_t v14 = v10;
        v14[1] = v11;
        *((unsigned char *)v14 + *(int *)(v13 + 32)) = 0;
        *((unsigned char *)v14 + *(int *)(v13 + 28)) = 0;
        v14[2] = v12;
        MEMORY[0x1F4188790](v15);
        *(&v27 - 2) = v8;
        *(&v27 - 1) = (uint64_t)v14;
        sub_1D42FC4A4((uint64_t)v41);
        sub_1D42FC4A4((uint64_t)v41);
        swift_bridgeObjectRetain();
        id v16 = v12;
        sub_1D42D5DA0(&qword_1EBD7CC10);
        uint64_t v17 = v32;
        sub_1D446A0A8();
        sub_1D42D20B8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        sub_1D4276C98((uint64_t)v37, (uint64_t)v36, &qword_1EBD7CC10);
        sub_1D4276C98((uint64_t)v36, (uint64_t)v38, &qword_1EBD7CC10);
        BOOL v18 = sub_1D42FE02C((uint64_t)v38) == 1;
        uint64_t v32 = v17;
        if (!v18)
        {
          sub_1D4276C98((uint64_t)v36, (uint64_t)v39, &qword_1EBD7CC10);
          uint64_t v9 = v33;
          goto LABEL_9;
        }
        sub_1D4276C98((uint64_t)v36, (uint64_t)v40, &qword_1EBD7CC10);
        uint64_t v9 = v33;
      }
      else
      {
        sub_1D42FB494(v38);
        sub_1D42FC4A4((uint64_t)v41);
        sub_1D42FC4A4((uint64_t)v41);
        sub_1D4276C98((uint64_t)v38, (uint64_t)v40, &qword_1EBD7CC10);
      }
      sub_1D42FAC78((uint64_t)v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
      sub_1D42FAC78((uint64_t)v40, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
      sub_1D4276C98((uint64_t)v9, (uint64_t)v39, &qword_1EBD7CC10);
LABEL_9:
      uint64_t v19 = v8;
      sub_1D42FAC78((uint64_t)v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
      sub_1D42FC604((uint64_t)v41);
      uint64_t v42 = v6;
      unint64_t v21 = *(void *)(v6 + 16);
      unint64_t v20 = *(void *)(v6 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1D433716C(v20 > 1, v21 + 1, 1);
        uint64_t v6 = v42;
      }
      char v22 = *v31;
      char v23 = BYTE1(v41[41]);
      uint64_t v24 = v41[42];
      uint64_t v25 = v41[43];
      v37[0] = v41[0];
      v37[1] = v41[1];
      LODWORD(v37[2]) = v41[2];
      v37[3] = v41[3];
      unsigned char v37[4] = v41[4];
      sub_1D4276C98((uint64_t)v39, (uint64_t)v30, &qword_1EBD7CC10);
      LOBYTE(v37[41]) = v22;
      BYTE1(v37[41]) = v23;
      v37[42] = v24;
      v37[43] = v25;
      *(void *)(v6 + 16) = v21 + 1;
      memcpy((void *)(v6 + 352 * v21 + 32), v37, 0x160uLL);
      if (!v35) {
        return v6;
      }
      uint64_t v9 = v33;
      uint64_t v7 = v34 + 352;
      --v35;
      uint64_t v8 = v19;
    }
  }
  return v6;
}

unint64_t sub_1D439A5FC(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t updated = type metadata accessor for FMIPItemUpdateType(0);
  MEMORY[0x1F4188790](updated);
  id v98 = (char *)v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D4469618();
  uint64_t v105 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for FMIPItem();
  uint64_t v104 = *(void *)(v92 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v92);
  uint64_t v10 = (char *)v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v96 = (uint64_t)v89 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v106 = (uint64_t)v89 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v100 = (char *)v89 - v16;
  MEMORY[0x1F4188790](v15);
  BOOL v18 = (char *)v89 - v17;
  int v99 = *a2;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1D4469928();
  uint64_t v20 = sub_1D42D7FAC(v19, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  uint64_t v95 = v20;
  unint64_t v21 = sub_1D44698F8();
  os_log_type_t v22 = sub_1D446A038();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v107 = v18;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    unint64_t v103 = v5;
    *(void *)&long long v102 = v10;
    uint64_t v25 = v24;
    uint64_t v26 = swift_slowAlloc();
    *(void *)&v119[0] = v26;
    *(_DWORD *)uint64_t v25 = 134218242;
    uint64_t v112 = *(void *)(a1 + 16);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    LOBYTE(v112) = v99;
    unint64_t v27 = FMIPLocationType.rawValue.getter();
    uint64_t v112 = sub_1D42CB9EC(v27, v28, (uint64_t *)v119);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v21, v22, "FMIPDataManager: updateItemLocations %ld type %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    uint64_t v29 = v26;
    BOOL v18 = v107;
    MEMORY[0x1D9447730](v29, -1, -1);
    uint64_t v30 = v25;
    uint64_t v10 = (char *)v102;
    uint64_t v5 = v103;
    MEMORY[0x1D9447730](v30, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v31 = *(void *)(a1 + 16);
  uint64_t v32 = (uint64_t)v100;
  if (!v31) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v33 = v104;
  unint64_t v94 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
  uint64_t v34 = a1 + v94;
  v89[1] = a1;
  swift_bridgeObjectRetain();
  sub_1D42FB494(v119);
  uint64_t v35 = v34;
  uint64_t v93 = *(void *)(v33 + 72);
  unint64_t v36 = MEMORY[0x1E4FBC860];
  long long v101 = (void (**)(char *, uint64_t))(v105 + 8);
  uint64_t v91 = MEMORY[0x1E4FBC840] + 8;
  *(void *)&long long v37 = 136315650;
  long long v90 = v37;
  do
  {
    unint64_t v103 = v36;
    uint64_t v104 = v35;
    uint64_t v105 = v31;
    sub_1D42D22A0(v35, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    long long v118 = 0uLL;
    uint64_t v117 = 0;
    long long v116 = 0uLL;
    uint64_t v115 = 0;
    BOOL v38 = (void *)*((void *)v18 + 49);
    if (v38)
    {
      LOBYTE(v110) = 16;
      id v39 = v38;
      id v40 = objc_msgSend(v39, sel_timestamp);
      sub_1D44695D8();

      sub_1D44695A8();
      double v42 = v41;
      (*v101)(v7, v5);
      id v43 = objc_msgSend(v39, sel_floor);
      if (v43)
      {
        uint64_t v44 = v43;
        uint64_t v45 = (uint64_t)objc_msgSend(v43, sel_level);
      }
      else
      {
        uint64_t v45 = -1;
      }
      sub_1D42B7188(v39, (char *)&v110, v42 < -3600.0, 0, 1, (uint64_t)&v112, (double)v45);
      uint64_t v46 = v113;
      uint64_t v47 = v114;
      uint64_t v48 = 256;
      if (!BYTE1(v112)) {
        uint64_t v48 = 0;
      }
      uint64_t v49 = v48 | v112;
      uint64_t v50 = 0x10000;
      if (!BYTE2(v112)) {
        uint64_t v50 = 0;
      }
      unint64_t v51 = v49 | v50 | ((unint64_t)BYTE3(v112) << 24);
      swift_beginAccess();
      uint64_t v52 = (void *)v118;
      uint64_t v117 = (char *)v51;
      *(void *)&long long v118 = v46;
      *((void *)&v118 + 1) = v47;

      BOOL v18 = v107;
    }
    uint64_t v53 = (void *)*((void *)v18 + 40);
    if (v53)
    {
      LOBYTE(v110) = 16;
      id v54 = v53;
      id v55 = objc_msgSend(v54, sel_timestamp);
      sub_1D44695D8();

      sub_1D44695A8();
      double v57 = v56;
      (*v101)(v7, v5);
      id v58 = objc_msgSend(v54, sel_floor);
      if (v58)
      {
        uint64_t v59 = v58;
        uint64_t v60 = (uint64_t)objc_msgSend(v58, sel_level);
      }
      else
      {
        uint64_t v60 = -1;
      }
      sub_1D42B7188(v54, (char *)&v110, v57 < -3600.0, 0, 1, (uint64_t)&v112, (double)v60);
      uint64_t v61 = v113;
      uint64_t v62 = v114;
      uint64_t v63 = 256;
      if (!BYTE1(v112)) {
        uint64_t v63 = 0;
      }
      uint64_t v64 = v63 | v112;
      uint64_t v65 = 0x10000;
      if (!BYTE2(v112)) {
        uint64_t v65 = 0;
      }
      unint64_t v66 = v64 | v65 | ((unint64_t)BYTE3(v112) << 24);
      swift_beginAccess();
      os_log_type_t v67 = (void *)v116;
      uint64_t v115 = v66;
      *(void *)&long long v116 = v61;
      *((void *)&v116 + 1) = v62;

      BOOL v18 = v107;
    }
    sub_1D42D22A0((uint64_t)v18, v32, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v68 = sub_1D44698F8();
    os_log_type_t v69 = sub_1D446A038();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      *(void *)&long long v102 = swift_slowAlloc();
      uint64_t v112 = v102;
      *(_DWORD *)uint64_t v70 = v90;
      unint64_t v71 = (uint64_t *)(v32 + *(int *)(v92 + 56));
      uint64_t v72 = v32;
      os_log_t v73 = v10;
      int v74 = v7;
      uint64_t v75 = v5;
      uint64_t v76 = *v71;
      unint64_t v77 = v71[1];
      swift_bridgeObjectRetain();
      *(void *)(v70 + 4) = sub_1D42CB9EC(v76, v77, &v112);
      uint64_t v5 = v75;
      uint64_t v7 = v74;
      uint64_t v10 = v73;
      swift_bridgeObjectRelease();
      sub_1D42D20B8(v72, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      *(_WORD *)(v70 + 12) = 1024;
      swift_beginAccess();
      *(_DWORD *)(v70 + 14) = (void)v118 != 0;
      *(_WORD *)(v70 + 18) = 1024;
      swift_beginAccess();
      *(_DWORD *)(v70 + 20) = (void)v116 != 0;
      _os_log_impl(&dword_1D4271000, v68, v69, "FMIPDataManager: updateItemLocations item %s location: %{BOOL}d, crowdsourcedLocation: %{BOOL}d", (uint8_t *)v70, 0x18u);
      uint64_t v78 = v102;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v78, -1, -1);
      MEMORY[0x1D9447730](v70, -1, -1);
    }
    else
    {
      sub_1D42D20B8(v32, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    }

    BOOL v18 = v107;
    uint64_t v79 = v96;
    sub_1D42D22A0((uint64_t)v107, v96, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v80 = (uint64_t)v98;
    *id v98 = v99;
    swift_storeEnumTagMultiPayload();
    sub_1D4276C98((uint64_t)v119, (uint64_t)&v112, &qword_1EBD7CC10);
    swift_beginAccess();
    BOOL v110 = v117;
    long long v102 = v118;
    long long v111 = v118;
    swift_beginAccess();
    uint64_t v108 = v115;
    long long v109 = v116;
    uint64_t v81 = (void *)v102;
    id v82 = (id)v116;
    id v83 = v81;
    uint64_t v84 = v106;
    FMIPItem.init(item:updateType:address:location:crowdSourcedLocation:connected:)(v79, v80, (uint64_t)&v112, &v110, &v108, 2u, v106);
    sub_1D42D22A0(v84, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    unint64_t v36 = v103;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v36 = sub_1D43B0108(0, *(void *)(v36 + 16) + 1, 1, v36);
    }
    unint64_t v86 = *(void *)(v36 + 16);
    unint64_t v85 = *(void *)(v36 + 24);
    uint64_t v32 = (uint64_t)v100;
    if (v86 >= v85 >> 1) {
      unint64_t v36 = sub_1D43B0108(v85 > 1, v86 + 1, 1, v36);
    }
    *(void *)(v36 + 16) = v86 + 1;
    uint64_t v87 = v93;
    sub_1D42BB578((uint64_t)v10, v36 + v94 + v86 * v93, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42D20B8(v106, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42D20B8((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMIPItem);

    uint64_t v35 = v104 + v87;
    uint64_t v31 = v105 - 1;
  }
  while (v105 != 1);
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_1D439B084(unint64_t a1, uint64_t a2)
{
  uint64_t v62 = a2;
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v61 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v67 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EA6CA1F8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v66 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v65 = (uint64_t)&v56 - v10;
  uint64_t v11 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v77 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1D4469688();
  uint64_t v13 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v68 = (uint64_t)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FMIPDevice();
  uint64_t v71 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v64 = (uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v63 = (uint64_t)&v56 - v19;
  MEMORY[0x1F4188790](v18);
  unint64_t v21 = (char *)&v56 - v20;
  uint64_t v22 = sub_1D42D5DA0(&qword_1EBD7D920);
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v70 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1D42D5DA0(&qword_1EBD7D928);
  uint64_t v26 = MEMORY[0x1F4188790](v25 - 8);
  unint64_t v28 = (unint64_t *)((char *)&v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v26);
  uint64_t v30 = (unint64_t *)((char *)&v56 - v29);
  uint64_t v31 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v23 + 48);
  unint64_t v32 = *(void *)(a1 + 16);
  uint64_t v75 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  unint64_t v76 = v32;
  os_log_t v73 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  uint64_t v59 = v21 + 304;
  uint64_t v60 = (void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
  id v58 = (void (**)(uint64_t, uint64_t))(v13 + 8);
  uint64_t result = swift_bridgeObjectRetain_n();
  unint64_t v34 = 0;
  unint64_t v72 = a1;
  unint64_t v69 = a1;
  while (1)
  {
    if (v34 == v76)
    {
      uint64_t v35 = 1;
      unint64_t v34 = v76;
      goto LABEL_7;
    }
    if (v34 >= v76) {
      break;
    }
    uint64_t v36 = (uint64_t)&v70[*(int *)(v22 + 48)];
    sub_1D42D22A0(v72+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v34, v36, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v37 = (uint64_t)v28 + *(int *)(v22 + 48);
    *unint64_t v28 = v34;
    sub_1D42BB578(v36, v37, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v35 = 0;
    ++v34;
LABEL_7:
    (*v75)(v28, v35, 1, v22);
    sub_1D4276C98((uint64_t)v28, (uint64_t)v30, &qword_1EBD7D928);
    if ((*v31)(v30, 1, v22) == 1) {
      goto LABEL_21;
    }
    unint64_t v38 = *v30;
    sub_1D42BB578((uint64_t)v30 + *(int *)(v22 + 48), (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (!*((void *)v21 + 3)) {
      goto LABEL_2;
    }
    swift_bridgeObjectRetain();
    uint64_t v39 = (uint64_t)v77;
    sub_1D4469628();
    swift_bridgeObjectRelease();
    if ((*v73)(v39, 1, v74) == 1)
    {
      sub_1D42D20B8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t result = sub_1D4276C3C(v39, (uint64_t *)&unk_1EBD7E930);
    }
    else
    {
      (*v60)(v68, v39, v74);
      uint64_t v40 = v62;
      if (*(void *)(v62 + 16) && (unint64_t v41 = sub_1D43AEE98(v68), (v42 & 1) != 0))
      {
        *(void *)&long long v56 = *(void *)(v40 + 56);
        unint64_t v43 = v41;
        uint64_t v57 = type metadata accessor for FMIPDeviceConnectedState(0);
        uint64_t v44 = *(void *)(v57 - 8);
        uint64_t v45 = v56 + *(void *)(v44 + 72) * v43;
        uint64_t v46 = v65;
        sub_1D42D22A0(v45, v65, type metadata accessor for FMIPDeviceConnectedState);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v46, 0, 1, v57);
      }
      else
      {
        uint64_t v47 = type metadata accessor for FMIPDeviceConnectedState(0);
        uint64_t v46 = v65;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v65, 1, 1, v47);
      }
      sub_1D42D22A0((uint64_t)v21, v64, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v57 = *((void *)v21 + 31);
      sub_1D4276C98((uint64_t)v59, (uint64_t)v84, &qword_1EBD7CC10);
      sub_1D4276C98((uint64_t)v84, (uint64_t)v83, &qword_1EBD7CC10);
      uint64_t v81 = *((void *)v21 + 35);
      long long v56 = *((_OWORD *)v21 + 18);
      long long v82 = v56;
      memset(v80, 0, sizeof(v80));
      uint64_t v48 = type metadata accessor for FMIPItemGroup();
      memset(v79, 0, sizeof(v79));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v67, 1, 1, v48);
      unsigned __int8 v78 = 7;
      sub_1D42A3A74(v46, v66, &qword_1EA6CA1F8);
      uint64_t v49 = type metadata accessor for FMIPDeviceLostModeMetadata();
      uint64_t v50 = (uint64_t)v61;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v61, 1, 1, v49);
      unint64_t v51 = v57;
      swift_bridgeObjectRetain();
      sub_1D42FAC78((uint64_t)v84, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
      id v52 = (id)v56;
      FMIPDevice.init(device:historicalLocations:address:crowdSourcedLocation:location:shiftedLocation:crowdSourcedLocating:itemGroup:deviceWithYou:findingCapable:beaconType:deviceConnectedState:lostModeMetadata:)(v64, v51, v83, &v81, v80, (uint64_t)v79, 2, v67, v63, 2u, 2, &v78, v66, v50);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v53 = v68;
        uint64_t result = v69;
        uint64_t v54 = v65;
        if ((v38 & 0x8000000000000000) != 0) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t result = sub_1D439948C(v69);
        uint64_t v53 = v68;
        uint64_t v54 = v65;
        if ((v38 & 0x8000000000000000) != 0)
        {
LABEL_20:
          __break(1u);
LABEL_21:
          swift_bridgeObjectRelease();
          return v69;
        }
      }
      if (v38 >= *(void *)(result + 16)) {
        goto LABEL_23;
      }
      unint64_t v55 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
      unint64_t v69 = result;
      sub_1D439ED88(v63, result + v55 + *(void *)(v71 + 72) * v38, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      sub_1D4276C3C(v54, &qword_1EA6CA1F8);
      (*v58)(v53, v74);
LABEL_2:
      uint64_t result = sub_1D42D20B8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1D439B9AC(unint64_t a1, uint64_t a2)
{
  uint64_t v73 = a2;
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v64 = (uint64_t)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA1F8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v63 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v69 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v9 = *(void *)(v62 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v62);
  uint64_t v61 = (uint64_t)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v66 = (uint64_t)&v57 - v12;
  uint64_t v13 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v13 - 8);
  id v83 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D4469688();
  unint64_t v80 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for FMIPDevice();
  uint64_t v75 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v67 = (uint64_t)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v65 = (uint64_t)&v57 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v57 - v23;
  uint64_t v25 = sub_1D42D5DA0(&qword_1EBD7D920);
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v74 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1D42D5DA0(&qword_1EBD7D928);
  uint64_t v29 = MEMORY[0x1F4188790](v28 - 8);
  uint64_t v31 = (unint64_t *)((char *)&v57 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v29);
  uint64_t v33 = (unint64_t *)((char *)&v57 - v32);
  uint64_t v81 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v26 + 48);
  long long v82 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  unint64_t v34 = a1;
  unint64_t v35 = *(void *)(a1 + 16);
  uint64_t v79 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
  uint64_t v68 = v9;
  uint64_t v59 = v9 + 56;
  uint64_t v60 = v24 + 304;
  uint64_t v71 = (void (**)(char *, uint64_t))(v80 + 8);
  unint64_t v72 = (void (**)(char *, uint64_t, uint64_t))(v80 + 32);
  unint64_t v36 = v34;
  uint64_t result = swift_bridgeObjectRetain_n();
  unint64_t v38 = 0;
  uint64_t v76 = v15;
  unint64_t v77 = v36;
  unint64_t v70 = v36;
  unint64_t v78 = v35;
  while (1)
  {
    if (v38 == v35)
    {
      uint64_t v39 = 1;
      unint64_t v38 = v35;
      goto LABEL_7;
    }
    if (v38 >= v35) {
      break;
    }
    uint64_t v40 = (uint64_t)&v74[*(int *)(v25 + 48)];
    sub_1D42D22A0(v77+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(void *)(v75 + 72) * v38, v40, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v41 = (uint64_t)v31 + *(int *)(v25 + 48);
    unint64_t *v31 = v38;
    sub_1D42BB578(v40, v41, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v39 = 0;
    ++v38;
    uint64_t v15 = v76;
LABEL_7:
    (*v82)(v31, v39, 1, v25);
    sub_1D4276C98((uint64_t)v31, (uint64_t)v33, &qword_1EBD7D928);
    if ((*v81)(v33, 1, v25) == 1)
    {
      swift_bridgeObjectRelease();
      return v70;
    }
    unint64_t v80 = *v33;
    sub_1D42BB578((uint64_t)v33 + *(int *)(v25 + 48), (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (!*((void *)v24 + 3)) {
      goto LABEL_2;
    }
    uint64_t v42 = v15;
    swift_bridgeObjectRetain();
    uint64_t v43 = (uint64_t)v83;
    sub_1D4469628();
    swift_bridgeObjectRelease();
    if ((*v79)(v43, 1, v42) == 1)
    {
      sub_1D42D20B8((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t result = sub_1D4276C3C(v43, (uint64_t *)&unk_1EBD7E930);
      uint64_t v15 = v42;
      unint64_t v35 = v78;
    }
    else
    {
      (*v72)(v17, v43, v42);
      uint64_t v15 = v42;
      if (*(void *)(v73 + 16) && (unint64_t v44 = sub_1D43AEE98((uint64_t)v17), (v45 & 1) != 0))
      {
        uint64_t v46 = *(void *)(v73 + 56) + *(void *)(v68 + 72) * v44;
        id v58 = type metadata accessor for FMIPDeviceLostModeMetadata;
        uint64_t v47 = v61;
        sub_1D42D22A0(v46, v61, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
        uint64_t v48 = v66;
        sub_1D42BB578(v47, v66, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
        sub_1D42D22A0((uint64_t)v24, v67, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v49 = *((void *)v24 + 31);
        sub_1D4276C98((uint64_t)v60, (uint64_t)v90, &qword_1EBD7CC10);
        sub_1D4276C98((uint64_t)v90, (uint64_t)v89, &qword_1EBD7CC10);
        uint64_t v87 = *((void *)v24 + 35);
        long long v57 = *((_OWORD *)v24 + 18);
        long long v88 = v57;
        memset(v86, 0, sizeof(v86));
        uint64_t v50 = type metadata accessor for FMIPItemGroup();
        memset(v85, 0, sizeof(v85));
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v69, 1, 1, v50);
        unsigned __int8 v84 = 7;
        uint64_t v51 = type metadata accessor for FMIPDeviceConnectedState(0);
        uint64_t v52 = (uint64_t)v63;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v63, 1, 1, v51);
        uint64_t v53 = v48;
        uint64_t v54 = v64;
        sub_1D42D22A0(v53, v64, (uint64_t (*)(void))v58);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v54, 0, 1, v62);
        swift_bridgeObjectRetain();
        sub_1D42FAC78((uint64_t)v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
        id v55 = (id)v57;
        FMIPDevice.init(device:historicalLocations:address:crowdSourcedLocation:location:shiftedLocation:crowdSourcedLocating:itemGroup:deviceWithYou:findingCapable:beaconType:deviceConnectedState:lostModeMetadata:)(v67, v49, v89, &v87, v86, (uint64_t)v85, 2, v69, v65, 2u, 2, &v84, v52, v54);
        unint64_t v56 = v70;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1D439948C(v56);
          unint64_t v70 = result;
        }
        uint64_t v15 = v76;
        unint64_t v35 = v78;
        if ((v80 & 0x8000000000000000) != 0) {
          goto LABEL_21;
        }
        if (v80 >= *(void *)(v70 + 16)) {
          goto LABEL_22;
        }
        sub_1D439ED88(v65, v70+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(void *)(v75 + 72) * v80, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        sub_1D42D20B8(v66, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
        (*v71)(v17, v15);
LABEL_2:
        uint64_t result = sub_1D42D20B8((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      }
      else
      {
        (*v71)(v17, v42);
        uint64_t result = sub_1D42D20B8((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        unint64_t v35 = v78;
      }
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1D439C364(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7E710);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v103 = (uint64_t)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v117 = (char *)&v95 - v10;
  uint64_t v11 = sub_1D4469688();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v127 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v134 = (char *)&v95 - v15;
  uint64_t v16 = type metadata accessor for FMIPItem();
  uint64_t v97 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v114 = (uint64_t)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v118 = (uint64_t)&v95 - v19;
  uint64_t v20 = type metadata accessor for FMIPItemGroup();
  uint64_t v107 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  long long v102 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  long long v111 = (char **)((char *)&v95 - v24);
  MEMORY[0x1F4188790](v23);
  uint64_t v110 = (uint64_t)&v95 - v25;
  uint64_t v106 = sub_1D42D5DA0(&qword_1EBD7E808);
  uint64_t v26 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v95 = (char *)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1D42D5DA0(&qword_1EBD7E810);
  uint64_t v29 = MEMORY[0x1F4188790](v28 - 8);
  uint64_t v31 = (unint64_t *)((char *)&v95 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v29);
  uint64_t v33 = (char **)((char *)&v95 - v32);
  uint64_t v105 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  uint64_t v104 = (uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  unint64_t v34 = *(void *)(a1 + 16);
  uint64_t v135 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  uint64_t v129 = v12 + 16;
  uint64_t v132 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
  unint64_t v133 = v12 + 56;
  uint64_t v115 = v12;
  uint64_t v131 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t result = swift_bridgeObjectRetain_n();
  unint64_t v36 = 0;
  uint64_t v126 = 0;
  unint64_t v96 = a1;
  uint64_t v116 = a2;
  uint64_t v128 = v9;
  uint64_t v98 = v20;
  long long v101 = v31;
  uint64_t v100 = v33;
  unint64_t v99 = v34;
  while (1)
  {
    unint64_t v112 = a1;
    if (v36 == v34)
    {
      uint64_t v37 = 1;
      unint64_t v109 = v34;
      uint64_t v38 = v106;
    }
    else
    {
      uint64_t v38 = v106;
      if (v36 >= v34) {
        goto LABEL_52;
      }
      unint64_t v39 = v36 + 1;
      unint64_t v40 = v36;
      uint64_t v41 = (uint64_t)&v95[*(int *)(v106 + 48)];
      sub_1D42D22A0(v96+ ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80))+ *(void *)(v107 + 72) * v36, v41, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      uint64_t v42 = (uint64_t)v31 + *(int *)(v38 + 48);
      unint64_t *v31 = v40;
      sub_1D42BB578(v41, v42, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      uint64_t v37 = 0;
      unint64_t v109 = v39;
    }
    (*v105)(v31, v37, 1, v38);
    sub_1D4276C98((uint64_t)v31, (uint64_t)v33, &qword_1EBD7E810);
    int v43 = (*v104)(v33, 1, v38);
    uint64_t v44 = (uint64_t)v117;
    uint64_t v45 = v118;
    if (v43 == 1)
    {
      swift_bridgeObjectRelease();
      return v112;
    }
    unint64_t v108 = *v33;
    uint64_t v46 = (uint64_t)v33 + *(int *)(v38 + 48);
    uint64_t v47 = v111;
    sub_1D42BB578(v46, (uint64_t)v111, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v48 = *(void *)((char *)v47 + *(int *)(v20 + 52));
    uint64_t v49 = v47[7];
    uint64_t v50 = MEMORY[0x1E4FBC860];
    uint64_t v136 = MEMORY[0x1E4FBC860];
    uint64_t v51 = *(void *)(a2 + 16);
    uint64_t v125 = v48;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v51)
    {
      uint64_t v52 = 0;
      uint64_t v53 = *(void *)(v97 + 72);
      unint64_t v113 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
      uint64_t v124 = a2 + v113;
      uint64_t v120 = v49;
      uint64_t v121 = v51;
      uint64_t v119 = v53;
      while (1)
      {
        sub_1D42D22A0(v124 + v53 * v52, v45, (uint64_t (*)(void))type metadata accessor for FMIPItem);
        sub_1D4469628();
        uint64_t v54 = *v135;
        if ((*v135)(v44, 1, v11) == 1)
        {
          sub_1D4276C3C(v44, (uint64_t *)&unk_1EBD7E930);
        }
        else
        {
          uint64_t v123 = v52;
          id v55 = *v132;
          (*v132)(v134, v44, v11);
          uint64_t v56 = *(void *)(v125 + 16);
          unint64_t v122 = v133 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
          if (v56)
          {
            uint64_t v57 = v125 + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80));
            uint64_t v130 = *(void *)(v115 + 72);
            id v58 = *(void (**)(char *, uint64_t, uint64_t))(v115 + 16);
            swift_bridgeObjectRetain();
            while (1)
            {
              v58(v9, v57, v11);
              uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v133;
              (*(void (**)(char *, void, uint64_t, uint64_t))v133)(v9, 0, 1, v11);
              if (v54((uint64_t)v9, 1, v11) == 1)
              {
                uint64_t v44 = (uint64_t)v117;
                uint64_t v45 = v118;
                uint64_t v49 = v120;
                uint64_t v51 = v121;
                uint64_t v52 = v123;
                uint64_t v53 = v119;
                goto LABEL_22;
              }
              uint64_t v60 = v11;
              uint64_t v61 = v127;
              v55(v127, (uint64_t)v9, v60);
              sub_1D42AAE70(&qword_1EA6CA0E8, MEMORY[0x1E4F27990]);
              char v62 = sub_1D4469AF8();
              uint64_t v63 = *v131;
              uint64_t v64 = v61;
              uint64_t v11 = v60;
              (*v131)(v64, v60);
              if (v62) {
                break;
              }
              v57 += v130;
              --v56;
              uint64_t v9 = v128;
              if (!v56)
              {
                uint64_t v44 = (uint64_t)v117;
                uint64_t v45 = v118;
                goto LABEL_20;
              }
            }
            swift_bridgeObjectRelease();
            v63(v134, v60);
            uint64_t v45 = v118;
            sub_1D42BB578(v118, v114, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            uint64_t v65 = v136;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v51 = v121;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1D4337258(0, *(void *)(v65 + 16) + 1, 1);
              uint64_t v45 = v118;
              uint64_t v65 = v136;
            }
            uint64_t v9 = v128;
            uint64_t v53 = v119;
            uint64_t v49 = v120;
            unint64_t v68 = *(void *)(v65 + 16);
            unint64_t v67 = *(void *)(v65 + 24);
            if (v68 >= v67 >> 1)
            {
              sub_1D4337258(v67 > 1, v68 + 1, 1);
              uint64_t v45 = v118;
              uint64_t v65 = v136;
            }
            *(void *)(v65 + 16) = v68 + 1;
            sub_1D42BB578(v114, v65 + v113 + v68 * v53, (uint64_t (*)(void))type metadata accessor for FMIPItem);
            uint64_t v44 = (uint64_t)v117;
            uint64_t v52 = v123;
            goto LABEL_11;
          }
          uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v133;
          swift_bridgeObjectRetain();
LABEL_20:
          uint64_t v51 = v121;
          uint64_t v52 = v123;
          uint64_t v53 = v119;
          v59(v9, 1, 1, v11);
          uint64_t v49 = v120;
LABEL_22:
          swift_bridgeObjectRelease();
          (*v131)(v134, v11);
        }
        sub_1D42D20B8(v45, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_11:
        if (++v52 == v51)
        {
          uint64_t v69 = v136;
          goto LABEL_30;
        }
      }
    }
    uint64_t v69 = v50;
LABEL_30:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v70 = *(void *)(v49 + 16);
    if (v70) {
      break;
    }
    uint64_t v71 = MEMORY[0x1E4FBC860];
LABEL_41:
    uint64_t v20 = v98;
    uint64_t v85 = v69;
    uint64_t v86 = sub_1D4351F50(v71);
    swift_bridgeObjectRelease();
    uint64_t v87 = v111;
    uint64_t v89 = v111[2];
    uint64_t v88 = v111[3];
    uint64_t v90 = *v111;
    uint64_t v91 = v102;
    *((void *)v102 + 1) = v111[1];
    v91[2] = v89;
    *(void *)((char *)v91 + *(int *)(v20 + 52)) = v125;
    uint64_t v92 = v87[4];
    v91[3] = v88;
    void v91[4] = v92;
    v91[5] = v85;
    v91[6] = v86;
    uint64_t v93 = v87[9];
    v91[8] = v87[8];
    v91[9] = v93;
    v91[7] = v49;
    *uint64_t v91 = v90;
    uint64_t v94 = v103;
    sub_1D42A3A74((uint64_t)v87 + *(int *)(v20 + 48), v103, &qword_1EBD7E710);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D42D20B8((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    sub_1D4276C98(v94, (uint64_t)v91 + *(int *)(v20 + 48), &qword_1EBD7E710);
    sub_1D42BB578((uint64_t)v91, v110, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    a1 = v112;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1D4399478(a1);
      a1 = result;
    }
    uint64_t v31 = v101;
    uint64_t v33 = v100;
    unint64_t v34 = v99;
    a2 = v116;
    if ((v108 & 0x8000000000000000) != 0) {
      goto LABEL_50;
    }
    if (v108 >= *(void *)(a1 + 16)) {
      goto LABEL_51;
    }
    uint64_t result = sub_1D439ED88(v110, a1+ ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80))+ *(void *)(v107 + 72) * v108, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    unint64_t v36 = v109;
  }
  uint64_t v136 = MEMORY[0x1E4FBC860];
  swift_retain();
  sub_1D4337228(0, v70, 0);
  uint64_t v71 = v136;
  uint64_t result = sub_1D4386D70(v49);
  uint64_t v72 = result;
  uint64_t v74 = v73;
  int v76 = v75 & 1;
  uint64_t v123 = v69;
  uint64_t v124 = v49 + 56;
  while ((v72 & 0x8000000000000000) == 0 && v72 < 1 << *(unsigned char *)(v49 + 32))
  {
    if (((*(void *)(v124 + (((unint64_t)v72 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v72) & 1) == 0) {
      goto LABEL_48;
    }
    if (*(_DWORD *)(v49 + 36) != v74) {
      goto LABEL_49;
    }
    LODWORD(v130) = v76;
    swift_retain();
    uint64_t v77 = swift_bridgeObjectRetain();
    uint64_t v78 = v126;
    uint64_t v79 = sub_1D4387714(v77, v69);
    uint64_t v126 = v78;
    swift_release();
    uint64_t v80 = sub_1D4352030(v79);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v136 = v71;
    unint64_t v82 = *(void *)(v71 + 16);
    unint64_t v81 = *(void *)(v71 + 24);
    if (v82 >= v81 >> 1)
    {
      sub_1D4337228(v81 > 1, v82 + 1, 1);
      uint64_t v71 = v136;
    }
    *(void *)(v71 + 16) = v82 + 1;
    *(void *)(v71 + 8 * v82 + 32) = v80;
    uint64_t result = sub_1D4449D08(v72, v74, v130 & 1, v49);
    uint64_t v72 = result;
    uint64_t v74 = v83;
    int v76 = v84 & 1;
    --v70;
    uint64_t v69 = v123;
    if (!v70)
    {
      sub_1D4329478(result, v83, v76);
      swift_release();
      uint64_t v9 = v128;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_1D439D0C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v68 = a3;
  uint64_t v82 = a2;
  uint64_t updated = type metadata accessor for FMIPItemUpdateType(0);
  MEMORY[0x1F4188790](updated);
  uint64_t v66 = &v58[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for FMIPItem();
  uint64_t v76 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v74 = &v58[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v73 = &v58[-v9];
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v58[-v10];
  uint64_t v12 = sub_1D42D5DA0(&qword_1EBD7E818);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  char v75 = &v58[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E820);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (unint64_t *)&v58[-v17];
  unint64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v21 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v22 = (uint64_t)v11;
  uint64_t v24 = v23;
  uint64_t v78 = v21;
  uint64_t v79 = v20;
  uint64_t v65 = v22 + 8;
  uint64_t result = swift_bridgeObjectRetain_n();
  unint64_t i = 0;
  unint64_t v77 = a1;
  uint64_t v80 = v22;
  BOOL v27 = v19 == 0;
  if (v19) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v28 = 1;
  for (unint64_t i = v19; ; ++i)
  {
    (*v79)(v24, v28, 1, v12);
    sub_1D4276C98((uint64_t)v24, (uint64_t)v18, (uint64_t *)&unk_1EBD7E820);
    if ((*v78)(v18, 1, v12) == 1) {
      goto LABEL_35;
    }
    unint64_t v32 = *v18;
    sub_1D42BB578((uint64_t)v18 + *(int *)(v12 + 48), v22, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    if (!*(void *)(v82 + 16)) {
      goto LABEL_4;
    }
    unint64_t v81 = i;
    uint64_t v33 = v12;
    unint64_t v34 = v24;
    unint64_t v35 = a1;
    uint64_t v36 = *(void *)(v22 + 352);
    uint64_t v37 = *(void *)(v22 + 360);
    swift_bridgeObjectRetain();
    unint64_t v38 = sub_1D42C4FCC(v36, v37);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      a1 = v35;
      uint64_t v24 = v34;
      uint64_t v12 = v33;
      uint64_t v22 = v80;
      unint64_t i = v81;
LABEL_4:
      uint64_t result = sub_1D42D20B8(v22, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      BOOL v27 = i >= v19;
      if (i == v19) {
        goto LABEL_5;
      }
      goto LABEL_6;
    }
    unint64_t v40 = (unsigned __int8 *)(*(void *)(v82 + 56) + 24 * v38);
    uint64_t v71 = *v40;
    int v59 = v40[1];
    int v69 = v40[2];
    uint64_t v70 = v40[3];
    uint64_t v41 = (char *)*((void *)v40 + 2);
    id v72 = *((id *)v40 + 1);
    swift_bridgeObjectRelease();
    uint64_t v42 = v68;
    if (!*(void *)(v68 + 16)) {
      goto LABEL_15;
    }
    swift_bridgeObjectRetain();
    unint64_t v43 = sub_1D42C4FCC(v36, v37);
    if ((v44 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_15:
      id v64 = v72;
      int v48 = v59;
      int v62 = v59;
      unsigned int v63 = v71;
      int v61 = v69;
      uint64_t v60 = v70;
      uint64_t v47 = (uint64_t)v41;
      goto LABEL_16;
    }
    uint64_t v45 = (unsigned __int8 *)(*(void *)(v42 + 56) + 24 * v43);
    unsigned int v46 = *v45;
    int v62 = v45[1];
    unsigned int v63 = v46;
    int v61 = v45[2];
    uint64_t v60 = v45[3];
    uint64_t v47 = *((void *)v45 + 2);
    id v64 = *((id *)v45 + 1);
    swift_bridgeObjectRelease();
    int v48 = v59;
LABEL_16:
    sub_1D42D22A0(v80, (uint64_t)v74, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v49 = (uint64_t)v66;
    *uint64_t v66 = 1;
    swift_storeEnumTagMultiPayload();
    sub_1D4276C98(v65, (uint64_t)v86, &qword_1EBD7CC10);
    sub_1D4276C98((uint64_t)v86, (uint64_t)v85, &qword_1EBD7CC10);
    uint64_t v50 = v48 ? 256 : 0;
    uint64_t v51 = v50 | v71;
    uint64_t v52 = v69 ? 0x10000 : 0;
    v84[0] = (char *)(v51 | v52 | (v70 << 24));
    v84[1] = (char *)v72;
    v84[2] = v41;
    uint64_t v53 = v62 ? 256 : 0;
    uint64_t v54 = v53 | v63;
    uint64_t v55 = v61 ? 0x10000 : 0;
    uint64_t v56 = v64;
    v83[0] = v54 | v55 | (v60 << 24);
    v83[1] = (uint64_t)v64;
    v83[2] = v47;
    id v72 = v72;
    sub_1D42FAC78((uint64_t)v86, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
    id v57 = v56;
    FMIPItem.init(item:updateType:address:location:crowdSourcedLocation:connected:)((uint64_t)v74, v49, (uint64_t)v85, v84, v83, 2u, (uint64_t)v73);
    a1 = v35;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result)
    {
      uint64_t v24 = v34;
      if ((v32 & 0x8000000000000000) != 0) {
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t result = sub_1D43994A0(v35);
      a1 = result;
      uint64_t v24 = v34;
      if ((v32 & 0x8000000000000000) != 0)
      {
LABEL_34:
        __break(1u);
LABEL_35:
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    if (v32 >= *(void *)(a1 + 16)) {
      goto LABEL_37;
    }
    uint64_t v12 = v33;
    sub_1D439ED88((uint64_t)v73, a1+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(void *)(v76 + 72) * v32, (uint64_t (*)(void))type metadata accessor for FMIPItem);

    uint64_t v22 = v80;
    uint64_t result = sub_1D42D20B8(v80, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    unint64_t i = v81;
    BOOL v27 = v81 >= v19;
    if (v81 == v19) {
      goto LABEL_5;
    }
LABEL_6:
    if (v27) {
      break;
    }
    uint64_t v29 = (uint64_t)&v75[*(int *)(v12 + 48)];
    sub_1D42D22A0(v77+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(void *)(v76 + 72) * i, v29, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v30 = (uint64_t)v24 + *(int *)(v12 + 48);
    *uint64_t v24 = i;
    uint64_t v31 = v29;
    uint64_t v22 = v80;
    sub_1D42BB578(v31, v30, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v28 = 0;
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D439D7A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61636F4C65666173 && a2 == 0xED0000736E6F6974;
  if (v2 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D44811D0 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D44811F0 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D4481210 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D4481230)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1D446A758();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1D439D9C0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA3E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D439DE98();
  sub_1D446A8C8();
  if (v2) {
    return sub_1D42BEC64((uint64_t)a1);
  }
  sub_1D42D5DA0(&qword_1EA6CA3F0);
  char v24 = 0;
  sub_1D439E09C(&qword_1EA6CA3F8, &qword_1EA6CA3F0, (void (*)(void))sub_1D42E5AC8);
  sub_1D446A5D8();
  uint64_t v9 = v25;
  sub_1D42D5DA0(&qword_1EA6CA408);
  char v24 = 1;
  sub_1D439DEEC((unint64_t *)&unk_1EA6CA410, &qword_1EA6CA408, (void (*)(void))sub_1D43476BC);
  swift_bridgeObjectRetain();
  sub_1D446A5D8();
  uint64_t v23 = v9;
  uint64_t v10 = v25;
  sub_1D42D5DA0(&qword_1EA6CA430);
  char v24 = 2;
  sub_1D439DEEC(&qword_1EA6CA438, &qword_1EA6CA430, (void (*)(void))sub_1D439DF9C);
  swift_bridgeObjectRetain();
  sub_1D446A5D8();
  uint64_t v22 = v10;
  uint64_t v11 = v25;
  sub_1D42D5DA0(&qword_1EA6CA448);
  char v24 = 3;
  unint64_t v12 = sub_1D439DFF0();
  swift_bridgeObjectRetain();
  unint64_t v21 = v12;
  sub_1D446A5D8();
  char v24 = 4;
  uint64_t v20 = v25;
  swift_bridgeObjectRetain();
  sub_1D446A5D8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v13 = v25;
  swift_bridgeObjectRetain();
  sub_1D42BEC64((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v14 = v20;
  swift_bridgeObjectRelease();
  uint64_t v15 = v11;
  swift_bridgeObjectRelease();
  uint64_t v16 = v22;
  swift_bridgeObjectRelease();
  uint64_t v17 = v23;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v15;
  a2[3] = v14;
  a2[4] = v13;
  return result;
}

unint64_t sub_1D439DE98()
{
  unint64_t result = qword_1EA6CA3E8;
  if (!qword_1EA6CA3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA3E8);
  }
  return result;
}

uint64_t sub_1D439DEEC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D42DB55C(a2);
    sub_1D42AAE70(&qword_1EA6C9FD8, MEMORY[0x1E4F27990]);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D439DF9C()
{
  unint64_t result = qword_1EA6CA440;
  if (!qword_1EA6CA440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA440);
  }
  return result;
}

unint64_t sub_1D439DFF0()
{
  unint64_t result = qword_1EA6CA450;
  if (!qword_1EA6CA450)
  {
    sub_1D42DB55C(&qword_1EA6CA448);
    sub_1D42AAE70(&qword_1EA6C9FD8, MEMORY[0x1E4F27990]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA450);
  }
  return result;
}

uint64_t sub_1D439E09C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D42DB55C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D439E108(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D42DB55C(a2);
    sub_1D42AAE70(&qword_1EA6C9FE0, MEMORY[0x1E4F27990]);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D439E1B8()
{
  unint64_t result = qword_1EA6CA490;
  if (!qword_1EA6CA490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA490);
  }
  return result;
}

unint64_t sub_1D439E20C()
{
  unint64_t result = qword_1EA6CA498;
  if (!qword_1EA6CA498)
  {
    sub_1D42DB55C(&qword_1EA6CA448);
    sub_1D42AAE70(&qword_1EA6C9FE0, MEMORY[0x1E4F27990]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA498);
  }
  return result;
}

uint64_t sub_1D439E2B8(uint64_t a1)
{
  return sub_1D438FC3C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1D439E2E0()
{
  uint64_t v1 = (int *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v14 = sub_1D4469618();
  uint64_t v5 = *(void *)(v14 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v8 = v0 + v3 + v1[8];
  uint64_t v9 = sub_1D44696C8();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v2 | v6 | 7;
  unint64_t v12 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 288) & ~v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v12, v14);
  return MEMORY[0x1F4186498](v0, v12 + v7, v11);
}

uint64_t sub_1D439E55C()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(sub_1D4469618() - 8);
  uint64_t v5 = v0 + v2;
  uint64_t v6 = (const void *)(v0 + v3);
  uint64_t v7 = v0 + ((v3 + *(unsigned __int8 *)(v4 + 80) + 288) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  memcpy(v9, v6, sizeof(v9));
  return sub_1D4393070(v5, (uint64_t)v9, v7);
}

uint64_t sub_1D439E65C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D439E66C()
{
  uint64_t v1 = (int *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();

  uint64_t v6 = v5 + v1[8];
  uint64_t v7 = sub_1D44696C8();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  if (*(void *)(v0 + v4)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, v4 + 16, v2 | 7);
}

uint64_t sub_1D439E7C4(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  return sub_1D4393560(a1, a2, v7, v8, v10, v11);
}

uint64_t sub_1D439E878()
{
  uint64_t v1 = (int *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();

  uint64_t v6 = v5 + v1[8];
  uint64_t v7 = sub_1D44696C8();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  if (*(void *)(v0 + v4)) {
    swift_release();
  }
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, ((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void sub_1D439E9F0()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void **)(v0 + 24);
  uint64_t v6 = *(void (**)(double *))(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v3 + 8);
  uint64_t v8 = *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));
  sub_1D4393940(v4, v5, v0 + v2, v6, v7, v8);
}

uint64_t sub_1D439EA90()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 312)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 328, 7);
}

uint64_t sub_1D439EB70()
{
  return sub_1D4399564(*(void *)(v0 + 16), (const void *)(v0 + 24), *(void (**)(unsigned char *))(v0 + 312));
}

void sub_1D439EB88()
{
  sub_1D42E30E4(*(void **)(v0 + 16), (uint64_t *)(v0 + 24), &qword_1EA6CA4E0, &qword_1EA6CA4E8, &qword_1EA6CA4F0, (void (*)(void))sub_1D439EBD4);
}

unint64_t sub_1D439EBD4()
{
  unint64_t result = qword_1EA6CA4F8;
  if (!qword_1EA6CA4F8)
  {
    sub_1D42DB55C(&qword_1EA6CA4F0);
    sub_1D42AAE70(&qword_1EA6CA500, (void (*)(uint64_t))type metadata accessor for FMIPItemGroup);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA4F8);
  }
  return result;
}

void sub_1D439EC7C()
{
  sub_1D42E30E4(*(void **)(v0 + 16), (uint64_t *)(v0 + 24), &qword_1EA6CA510, &qword_1EA6CA518, (uint64_t *)&unk_1EA6CA520, (void (*)(void))sub_1D4352DE4);
}

uint64_t sub_1D439ECC8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1D439ED28()
{
  sub_1D4399654(*(void *)(v0 + 16), v0 + 24);
}

unint64_t sub_1D439ED34()
{
  unint64_t result = qword_1EA6CA548;
  if (!qword_1EA6CA548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA548);
  }
  return result;
}

uint64_t sub_1D439ED88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t *sub_1D439EDF4(uint64_t *a1)
{
  uint64_t v2 = a1[11];
  uint64_t v3 = a1[12];
  sub_1D42E7D9C(*a1, a1[1]);
  sub_1D42E7D9C(v2, v3);
  return a1;
}

uint64_t sub_1D439EEB4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 112, 7);
}

void sub_1D439EF14()
{
  sub_1D4399780(*(void **)(v0 + 16), v0 + 24);
}

unint64_t sub_1D439EF20()
{
  unint64_t result = qword_1EA6CA588;
  if (!qword_1EA6CA588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA588);
  }
  return result;
}

uint64_t sub_1D439EF74()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D439EFAC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D439EFBC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D439EFCC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D439EFDC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D439EFEC()
{
  sub_1D4398078(*(void **)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1D439EFF4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_1D439F004()
{
  unint64_t result = qword_1EA6CA5E0;
  if (!qword_1EA6CA5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA5E0);
  }
  return result;
}

uint64_t sub_1D439F058(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1D439F0C4()
{
  sub_1D42A1E20(*(void **)(v0 + 16), *(void **)(v0 + 24), &qword_1EA6CA4E0, &qword_1EA6CA4E8, &qword_1EA6CA4F0, (void (*)(void))sub_1D439F11C);
}

uint64_t sub_1D439F10C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_1D439F11C()
{
  unint64_t result = qword_1EA6CA5E8;
  if (!qword_1EA6CA5E8)
  {
    sub_1D42DB55C(&qword_1EA6CA4F0);
    sub_1D42AAE70(&qword_1EA6CA5F0, (void (*)(uint64_t))type metadata accessor for FMIPItemGroup);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA5E8);
  }
  return result;
}

uint64_t sub_1D439F1C4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D439F204()
{
  sub_1D4399720(*(void *)(v0 + 16), (uint64_t *)(v0 + 24));
}

unint64_t sub_1D439F210()
{
  unint64_t result = qword_1EA6CA610;
  if (!qword_1EA6CA610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA610);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPDataManagerItemUpdateSource()
{
  return &type metadata for FMIPDataManagerItemUpdateSource;
}

unsigned char *_s8FMIPCore31FMIPDataManagerItemUpdateSourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D439F348);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPDataManager.SeparationMonitoringCache.CodingKeys()
{
  return &type metadata for FMIPDataManager.SeparationMonitoringCache.CodingKeys;
}

unint64_t sub_1D439F384()
{
  unint64_t result = qword_1EA6CA630;
  if (!qword_1EA6CA630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA630);
  }
  return result;
}

unint64_t sub_1D439F3DC()
{
  unint64_t result = qword_1EA6CA638;
  if (!qword_1EA6CA638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA638);
  }
  return result;
}

unint64_t sub_1D439F434()
{
  unint64_t result = qword_1EA6CA640;
  if (!qword_1EA6CA640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA640);
  }
  return result;
}

unint64_t sub_1D439F48C()
{
  unint64_t result = qword_1EA6CA648;
  if (!qword_1EA6CA648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA648);
  }
  return result;
}

uint64_t sub_1D439F570@<X0>(void *a1@<X8>)
{
  return sub_1D42E4E9C(a1);
}

uint64_t sub_1D439F58C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for FMIPInitClientResponse();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    uint64_t v5 = v4;
    swift_retain();
    uint64_t v6 = sub_1D439F66C(v5);
  }
  else
  {
    type metadata accessor for FMIPRefreshClientResponse();
    uint64_t v7 = swift_dynamicCastClass();
    swift_retain();
    if (!v7) {
      return a1;
    }
    uint64_t v6 = sub_1D439F654(v7);
  }
  uint64_t v8 = v6;
  swift_release();
  return MEMORY[0x1F41864C8](v8, a2, 0, 0, 0);
}

uint64_t sub_1D439F654(uint64_t a1)
{
  return sub_1D439F684(a1, (void (*)(void))type metadata accessor for FMIPRefreshClientResponse);
}

uint64_t sub_1D439F66C(uint64_t a1)
{
  return sub_1D439F684(a1, (void (*)(void))type metadata accessor for FMIPInitClientResponse);
}

uint64_t sub_1D439F684(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = v2;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D4469928();
  sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v6 = sub_1D44698F8();
  os_log_type_t v7 = sub_1D446A038();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v40 = v9;
    uint64_t v10 = sub_1D446A918();
    sub_1D42CB9EC(v10, v11, &v40);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v6, v7, "FMIPDemoDataInjector: Injecting demo content into %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v9, -1, -1);
    MEMORY[0x1D9447730](v8, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  if (*(void *)(a1 + 56)) {
    uint64_t v12 = *(void *)(a1 + 56);
  }
  else {
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1D439F9D4(v12);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  if (v14)
  {
    uint64_t v16 = *(void *)(v14 + 16);
    uint64_t v17 = *(void *)(v14 + 24);
    uint64_t v37 = v13;
    uint64_t v38 = *(void *)(a1 + 16);
    uint64_t v18 = *(void *)(v14 + 32);
    uint64_t v19 = *(void *)(v14 + 40);
    char v35 = *(unsigned char *)(v14 + 49);
    char v36 = *(unsigned char *)(v14 + 48);
    char v33 = *(unsigned char *)(v14 + 51);
    char v34 = *(unsigned char *)(v14 + 50);
    uint64_t v20 = *(void *)(v14 + 64);
    uint64_t v21 = *(void *)(v14 + 80);
    uint64_t v31 = *(void *)(v14 + 72);
    uint64_t v32 = *(void *)(v14 + 56);
    uint64_t v22 = *(void *)(v14 + 96);
    uint64_t v30 = *(void *)(v14 + 88);
    uint64_t v23 = *(void *)(*(void *)(v3 + 16) + 112);
    type metadata accessor for FMIPUserInfoResponseFragment();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v16;
    *(void *)(v24 + 24) = v17;
    *(void *)(v24 + 32) = v18;
    *(void *)(v24 + 40) = v19;
    *(unsigned char *)(v24 + 48) = v36;
    *(unsigned char *)(v24 + 49) = v35;
    *(unsigned char *)(v24 + 50) = v34;
    *(unsigned char *)(v24 + 51) = v33;
    *(void *)(v24 + 56) = v32;
    *(void *)(v24 + 64) = v20;
    *(void *)(v24 + 72) = v31;
    *(void *)(v24 + 80) = v21;
    *(void *)(v24 + 88) = v30;
    *(void *)(v24 + 96) = v22;
    *(void *)(v24 + 104) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = v37;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v24 = 0;
  }
  uint64_t v25 = *(void *)(a1 + 32);
  char v26 = *(unsigned char *)(a1 + 40);
  uint64_t v27 = *(void *)(a1 + 48);
  a2(0);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 56) = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v28 + 16) = v15;
  *(void *)(v28 + 24) = v24;
  *(void *)(v28 + 32) = v25;
  *(unsigned char *)(v28 + 40) = v26;
  *(void *)(v28 + 48) = v27;
  return v28;
}

uint64_t sub_1D439F9D4(uint64_t a1)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = type metadata accessor for FMIPDevice();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  os_log_type_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v36 = (uint64_t)&v35 - v8;
  uint64_t v9 = sub_1D42D5DA0(&qword_1EBD7CBC0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = sub_1D4469618();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v1;
  uint64_t v19 = *(void *)(v1 + 16);
  sub_1D4469608();
  uint64_t v38 = v19;
  sub_1D440E7A4((uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v21 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v22 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1D42B2458(v21, (uint64_t)v7);
      if ((v7[217] & 4) != 0) {
        break;
      }
      sub_1D42B24BC((uint64_t)v7);
      v21 += v22;
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    sub_1D42B2518((uint64_t)v7, (uint64_t)v14);
    uint64_t v23 = 0;
  }
  else
  {
LABEL_6:
    uint64_t v23 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v14, v23, 1, v3);
  uint64_t v24 = v37 + OBJC_IVAR____TtC8FMIPCore20FMIPDemoDataInjector_hostDevice;
  swift_beginAccess();
  sub_1D42E7F98((uint64_t)v14, v24);
  swift_endAccess();
  sub_1D42E8064((uint64_t)v14, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
  {
    sub_1D42E7F38((uint64_t)v12);
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1D4469928();
    sub_1D42D7FAC(v25, (uint64_t)qword_1EBD83228);
    char v26 = sub_1D44698F8();
    os_log_type_t v27 = sub_1D446A018();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      MEMORY[0x1D9447730](v28, -1, -1);
    }

    sub_1D42E7F38((uint64_t)v14);
    uint64_t v29 = *(void *)(v38 + 104);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v30 = v36;
    sub_1D42B2518((uint64_t)v12, v36);
    uint64_t v31 = *(void *)(v38 + 104);
    sub_1D42D5DA0(&qword_1EBD7D9F0);
    unint64_t v32 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1D446E050;
    sub_1D42B2458(v30, v33 + v32);
    uint64_t v39 = v31;
    swift_bridgeObjectRetain();
    sub_1D43AEC7C(v33);
    uint64_t v29 = v39;
    sub_1D42B24BC(v30);
    sub_1D42E7F38((uint64_t)v14);
  }
  return v29;
}

uint64_t sub_1D439FE5C()
{
  swift_release();
  sub_1D42E7F38(v0 + OBJC_IVAR____TtC8FMIPCore20FMIPDemoDataInjector_hostDevice);
  return swift_deallocClassInstance();
}

uint64_t sub_1D439FEC8()
{
  return type metadata accessor for FMIPDemoDataInjector();
}

uint64_t type metadata accessor for FMIPDemoDataInjector()
{
  uint64_t result = qword_1EA6CA650;
  if (!qword_1EA6CA650) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1D439FF1C()
{
  sub_1D42E80CC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t destroy for FMIPDemoDeviceTemplate(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 144) != 1)
  {
    if (*(void *)(a1 + 128) != 1) {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FMIPDemoDeviceTemplate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v5;
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  uint64_t v8 = (_OWORD *)(a1 + 120);
  uint64_t v9 = (_OWORD *)(a2 + 120);
  uint64_t v10 = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 == 1)
  {
    long long v11 = v9[3];
    *(_OWORD *)(a1 + 152) = v9[2];
    *(_OWORD *)(a1 + 168) = v11;
    *(_OWORD *)(a1 + 184) = v9[4];
    long long v12 = v9[1];
    _OWORD *v8 = *v9;
    *(_OWORD *)(a1 + 136) = v12;
  }
  else
  {
    uint64_t v13 = *(void *)(a2 + 128);
    if (v13 == 1)
    {
      _OWORD *v8 = *v9;
    }
    else
    {
      *(void *)(a1 + 120) = *(void *)v9;
      *(void *)(a1 + 128) = v13;
      swift_bridgeObjectRetain();
    }
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v10;
    uint64_t v14 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v14;
    uint64_t v15 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = v15;
    uint64_t v16 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  return a1;
}

uint64_t assignWithCopy for FMIPDemoDeviceTemplate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = (_OWORD *)(a1 + 120);
  uint64_t v8 = (_OWORD *)(a2 + 120);
  uint64_t v9 = *(void *)(a2 + 144);
  if (*(void *)(a1 + 144) != 1)
  {
    if (v9 == 1)
    {
      sub_1D43A045C(a1 + 120);
      *uint64_t v7 = *v8;
      long long v13 = *(_OWORD *)(a2 + 184);
      long long v15 = *(_OWORD *)(a2 + 136);
      long long v14 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = v13;
      *(_OWORD *)(a1 + 136) = v15;
      *(_OWORD *)(a1 + 152) = v14;
      goto LABEL_18;
    }
    uint64_t v16 = *(void *)(a2 + 128);
    if (*(void *)(a1 + 128) == 1)
    {
      if (v16 != 1)
      {
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        swift_bridgeObjectRetain();
LABEL_17:
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        *(void *)(a1 + 176) = *(void *)(a2 + 176);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(a1 + 184) = *(void *)(a2 + 184);
        *(void *)(a1 + 192) = *(void *)(a2 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    else
    {
      if (v16 != 1)
      {
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      sub_1D4276C3C(a1 + 120, &qword_1EA6CA660);
    }
    *uint64_t v7 = *v8;
    goto LABEL_17;
  }
  if (v9 == 1)
  {
    *uint64_t v7 = *v8;
    long long v10 = *(_OWORD *)(a2 + 136);
    long long v11 = *(_OWORD *)(a2 + 152);
    long long v12 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v12;
    *(_OWORD *)(a1 + 136) = v10;
    *(_OWORD *)(a1 + 152) = v11;
  }
  else
  {
    if (*(void *)(a2 + 128) == 1)
    {
      *uint64_t v7 = *v8;
    }
    else
    {
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
    }
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
LABEL_18:
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  return a1;
}

uint64_t sub_1D43A045C(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for FMIPDemoDeviceTemplate(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for FMIPDemoDeviceTemplate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v5 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v6;
  swift_bridgeObjectRelease();
  long long v7 = (_OWORD *)(a1 + 120);
  uint64_t v8 = (void *)(a2 + 120);
  if (*(void *)(a1 + 144) == 1) {
    goto LABEL_4;
  }
  uint64_t v9 = *(void *)(a2 + 144);
  if (v9 != 1)
  {
    if (*(void *)(a1 + 128) != 1)
    {
      uint64_t v12 = *(void *)(a2 + 128);
      if (v12 != 1)
      {
        *(void *)(a1 + 120) = *v8;
        *(void *)(a1 + 128) = v12;
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      sub_1D4276C3C(a1 + 120, &qword_1EA6CA660);
    }
    *long long v7 = *(_OWORD *)v8;
LABEL_10:
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v9;
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v13;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = v14;
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v15;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_1D43A045C(a1 + 120);
LABEL_4:
  long long v10 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v10;
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  long long v11 = *(_OWORD *)(a2 + 136);
  *long long v7 = *(_OWORD *)v8;
  *(_OWORD *)(a1 + 136) = v11;
LABEL_11:
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPDemoDeviceTemplate(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 201)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPDemoDeviceTemplate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 200) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 201) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 201) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPDemoDeviceTemplate()
{
  return &type metadata for FMIPDemoDeviceTemplate;
}

uint64_t destroy for FMIPDemoDeviceTemplateOverrides(uint64_t a1)
{
  if (*(void *)(a1 + 8) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMIPDemoDeviceTemplateOverrides(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_bridgeObjectRetain();
  }
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FMIPDemoDeviceTemplateOverrides(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  if (a1[1] != 1)
  {
    if (v4 != 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1D4276C3C((uint64_t)a1, &qword_1EA6CA660);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
LABEL_8:
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FMDemoLocation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

void *assignWithTake for FMIPDemoDeviceTemplateOverrides(void *a1, void *a2)
{
  if (a1[1] != 1)
  {
    uint64_t v4 = a2[1];
    if (v4 != 1)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D4276C3C((uint64_t)a1, &qword_1EA6CA660);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPDemoDeviceTemplateOverrides(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPDemoDeviceTemplateOverrides(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPDemoDeviceTemplateOverrides()
{
  return &type metadata for FMIPDemoDeviceTemplateOverrides;
}

void *sub_1D43A0AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, int a5@<W4>, uint64_t a6@<X8>, double a7@<D0>)
{
  LODWORD(v7) = a5;
  sub_1D42D5DA0(&qword_1EBD7E670);
  ((void (*)(void))MEMORY[0x1F4188790])();
  uint64_t v120 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42D5DA0(&qword_1EBD7CB80);
  uint64_t v15 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v119 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v118 = (char *)&v100 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v117 = (char *)&v100 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v116 = (char *)&v100 - v21;
  uint64_t v22 = sub_1D42D5DA0(&qword_1EBD7CE38);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v115 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1D42D5DA0(&qword_1EBD7CDF8);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v128 = (uint64_t)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v127 = (uint64_t)&v100 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1D42D5DA0(&qword_1EBD7CEA0);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v126 = (uint64_t)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1D4469618();
  uint64_t v124 = *(void **)(v30 - 8);
  uint64_t v125 = v30;
  MEMORY[0x1F4188790](v30);
  unint64_t v32 = (char *)&v100 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v34 = *a4;
  uint64_t v33 = (void *)a4[1];
  unint64_t v35 = a4[2];
  uint64_t v36 = unk_1F2C013B8;
  if ((unk_1F2C013B8 & ~qword_1F2C013B0) == 0) {
    uint64_t v36 = 0;
  }
  uint64_t v37 = v36 | qword_1F2C013B0;
  uint64_t v38 = *(void *)(a1 + 104);
  unint64_t v39 = *(void *)(a1 + 112);
  uint64_t v121 = a6;
  if (v39)
  {
    if (v38 == 0x72656E776FLL && v39 == 0xE500000000000000) {
      goto LABEL_10;
    }
    LODWORD(v114) = v7;
    uint64_t v40 = a2;
    uint64_t v41 = a3;
    uint64_t v42 = v36 | qword_1F2C013B0;
    unint64_t v43 = v33;
    uint64_t v7 = v38;
    char v44 = sub_1D446A758();
    uint64_t v33 = v43;
    uint64_t v37 = v42;
    a3 = v41;
    a2 = v40;
    if (v44)
    {
      uint64_t v38 = v7;
      if ((v114 & 1) == 0) {
        goto LABEL_17;
      }
      goto LABEL_11;
    }
    uint64_t v38 = v7;
    LOBYTE(v7) = v114;
  }
  if ((v37 & 0x80) == 0) {
    v37 |= 0x80uLL;
  }
LABEL_10:
  if ((v7 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_11:
  if (*(unsigned char *)(a1 + 200))
  {
    if ((v37 & 0x10) != 0) {
      goto LABEL_17;
    }
    uint64_t v45 = 16;
  }
  else
  {
    if ((v37 & 0x800) != 0) {
      goto LABEL_17;
    }
    uint64_t v45 = 2048;
  }
  v37 |= v45;
LABEL_17:
  uint64_t v122 = a2;
  uint64_t v123 = a3;
  uint64_t v114 = v37;
  if (v33)
  {
    unint64_t v46 = v34 >> 24;
    unsigned int v47 = v34 & 1;
    uint64_t v48 = (v34 >> 8) & 1;
    uint64_t v49 = (v34 >> 16) & 1;
    uint64_t v50 = v33;
  }
  else
  {
    uint64_t v51 = v38;
    sub_1D43A3594();
    long long v52 = *(_OWORD *)(a1 + 40);
    long long v53 = *(_OWORD *)(a1 + 72);
    v140[2] = *(_OWORD *)(a1 + 56);
    v140[3] = v53;
    v140[4] = *(_OWORD *)(a1 + 88);
    v140[0] = *(_OWORD *)(a1 + 24);
    v140[1] = v52;
    sub_1D43A35D4((uint64_t)v140);
    id v54 = sub_1D43E798C((uint64_t)v140);
    v129[0] = 6;
    id v55 = objc_msgSend(v54, sel_timestamp);
    sub_1D44695D8();

    sub_1D44695A8();
    double v57 = v56;
    ((void (*)(char *, uint64_t))v124[1])(v32, v125);
    id v58 = objc_msgSend(v54, sel_floor);
    if (v58)
    {
      int v59 = v58;
      id v60 = objc_msgSend(v58, sel_level);

      double v61 = (double)(uint64_t)v60;
    }
    else
    {
      double v61 = -1.0;
    }
    sub_1D42B7188(v54, v129, v57 < -3600.0, 0, 1, (uint64_t)&v138, v61);
    unsigned int v47 = v138;
    LODWORD(v48) = BYTE1(v138);
    LODWORD(v49) = BYTE2(v138);
    LOBYTE(v46) = BYTE3(v138);
    unint64_t v35 = v139;
    uint64_t v38 = v51;
    uint64_t v50 = (void *)*((void *)&v138 + 1);
  }
  if (v39) {
    uint64_t v62 = v38;
  }
  else {
    uint64_t v62 = 0x72656E776FLL;
  }
  unint64_t v63 = 0xE500000000000000;
  if (v39) {
    unint64_t v63 = v39;
  }
  unint64_t v112 = v63;
  uint64_t v113 = v62;
  BOOL v64 = (*(unsigned char *)(a1 + 200) & 1) == 0;
  uint64_t v65 = *(void *)(a1 + 8);
  uint64_t v111 = *(void *)a1;
  BOOL v137 = v64;
  swift_bridgeObjectRetain();
  uint64_t v100 = v65;
  swift_bridgeObjectRetain();
  uint64_t v66 = sub_1D43A159C();
  uint64_t v109 = v67;
  uint64_t v110 = v66;
  uint64_t v68 = sub_1D43A1AA8();
  uint64_t v107 = v69;
  uint64_t v108 = v68;
  unint64_t v70 = sub_1D43A1C48();
  uint64_t v105 = v71;
  unint64_t v106 = v70;
  uint64_t v72 = sub_1D43A1728();
  uint64_t v103 = v73;
  uint64_t v104 = v72;
  uint64_t v74 = sub_1D43A18F8();
  uint64_t v101 = v75;
  uint64_t v102 = v74;
  char v136 = 1;
  uint64_t v135 = v114;
  uint64_t v76 = *(unsigned __int8 *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_1D4459D38(v76, &v134);
  uint64_t v77 = 256;
  if (!v48) {
    uint64_t v77 = 0;
  }
  uint64_t v78 = v77 | v47;
  uint64_t v79 = 0x10000;
  if (!v49) {
    uint64_t v79 = 0;
  }
  *(void *)&long long v132 = (v78 | v79) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v46 << 24);
  *((void *)&v132 + 1) = v50;
  unint64_t v133 = v35;
  *(void *)&long long v130 = v132;
  *((void *)&v130 + 1) = v50;
  unint64_t v131 = v35;
  sub_1D42FB494(&v138);
  sub_1D4276C98((uint64_t)&v138, (uint64_t)v129, &qword_1EBD7CC10);
  uint64_t v80 = type metadata accessor for FMIPPlaySoundMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v126, 1, 1, v80);
  uint64_t v81 = type metadata accessor for FMIPDeviceLostModeMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v127, 1, 1, v81);
  uint64_t v82 = type metadata accessor for FMIPLockMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v128, 1, 1, v82);
  uint64_t v83 = type metadata accessor for FMIPEraseMetadata();
  uint64_t v84 = (uint64_t)v115;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v115, 1, 1, v83);
  uint64_t v85 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v124[7];
  uint64_t v86 = (uint64_t)v116;
  uint64_t v124 = (void *)a1;
  uint64_t v87 = v125;
  v85(v116, 1, 1, v125);
  uint64_t v88 = (uint64_t)v117;
  v85(v117, 1, 1, v87);
  uint64_t v89 = (uint64_t)v118;
  v85(v118, 1, 1, v87);
  uint64_t v90 = (uint64_t)v119;
  v85(v119, 1, 1, v87);
  uint64_t v91 = type metadata accessor for FMIPItemGroup();
  uint64_t v92 = (uint64_t)v120;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v120, 1, 1, v91);
  id v93 = v50;
  *((void *)&v99 + 1) = v101;
  *(void *)&long long v99 = v102;
  *((void *)&v98 + 1) = v103;
  *(void *)&long long v98 = v104;
  *((void *)&v97 + 1) = v105;
  *(void *)&long long v97 = v106;
  *((void *)&v96 + 1) = v107;
  *(void *)&long long v96 = v108;
  *((void *)&v95 + 1) = v109;
  *(void *)&long long v95 = v110;
  sub_1D43A1FF8(v122, v123, 0, 0, v113, v112, 0, 0, v121, a7, v111, v100, (char *)&v137, v95, v96, v97, v98, v99, v111,
    v100,
    &v136,
    6,
    160,
    &v135,
    MEMORY[0x1E4FBC860],
    &v134,
    MEMORY[0x1E4FBC860],
    &v132,
    &v130,
    (uint64_t)v129,
    v126,
    v127,
    v128,
    v84,
    v86,
    v88,
    v89,
    v90,
    0,
    0,
    0,
    v92,
    0);
  return sub_1D435C2F8(v124);
}

unint64_t sub_1D43A13DC()
{
  unint64_t result = 0x6F43656369766564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6369766544776172;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6C43656369766564;
      break;
    case 4:
      unint64_t result = 0x6F4D656369766564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D43A14B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D43A23F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43A14D8(uint64_t a1)
{
  unint64_t v2 = sub_1D43A34D4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D43A1514(uint64_t a1)
{
  unint64_t v2 = sub_1D43A34D4();
  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1D43A1550@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D43A2674(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1D43A159C()
{
  uint64_t v1 = 0x6172676563617073;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t v1 = 0x302D322D31;
      break;
    case 2:
    case 3:
      uint64_t v1 = 0x302D312D31;
      break;
    case 4:
      uint64_t v1 = 0x7265766C6973;
      break;
    case 5:
      uint64_t v1 = 48;
      break;
    default:
      break;
  }
  sub_1D4276C98(v0 + 120, (uint64_t)v4, &qword_1EA6CA6A8);
  sub_1D4276C98((uint64_t)v4, (uint64_t)&v5, &qword_1EA6CA6A8);
  if (*((void *)&v6 + 1) != 1)
  {
    void v10[2] = v7;
    v10[3] = v8;
    v10[4] = v9;
    v10[0] = v5;
    v10[1] = v6;
    sub_1D4276C98((uint64_t)v10, (uint64_t)v11, qword_1EA6CA6B8);
    sub_1D4276C98((uint64_t)v11, (uint64_t)&v3, qword_1EA6CA6B8);
    sub_1D4276C98((uint64_t)v11, (uint64_t)v12, qword_1EA6CA6B8);
    if (v13 == 1) {
      swift_bridgeObjectRetain();
    }
    else {
      uint64_t v1 = v3;
    }
    sub_1D43A362C(v11);
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_1D43A1728()
{
  uint64_t v1 = 0x506B6F6F4263614DLL;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t v1 = 0x3231656E6F685069;
      break;
    case 2:
      uint64_t v1 = 0x312C3864615069;
      break;
    case 3:
      uint64_t v1 = 0x312C336863746157;
      break;
    case 4:
      uint64_t v1 = 0x316F725063614D69;
      break;
    case 5:
      uint64_t v1 = 0x5F73646F50726941;
      break;
    default:
      break;
  }
  sub_1D4276C98(v0 + 120, (uint64_t)v4, &qword_1EA6CA6A8);
  sub_1D4276C98((uint64_t)v4, (uint64_t)&v5, &qword_1EA6CA6A8);
  if (*((void *)&v6 + 1) != 1)
  {
    v11[1] = v7;
    uint64_t v11[2] = v8;
    void v11[3] = v9;
    long long v10 = v5;
    v11[0] = v6;
    sub_1D4276C98((uint64_t)v11, (uint64_t)v12, &qword_1EA6CA6B0);
    sub_1D4276C98((uint64_t)v12, (uint64_t)&v3, &qword_1EA6CA6B0);
    sub_1D4276C98((uint64_t)v12, (uint64_t)v13, &qword_1EA6CA6B0);
    if (v14) {
      uint64_t v1 = v3;
    }
    else {
      swift_bridgeObjectRetain();
    }
    sub_1D43A3600((uint64_t)v12);
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_1D43A18F8()
{
  uint64_t v1 = 0x206B6F6F4263614DLL;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t v1 = 0x656E6F685069;
      break;
    case 2:
      uint64_t v1 = 1684099177;
      break;
    case 3:
      uint64_t v1 = 0x615720656C707041;
      break;
    case 4:
      uint64_t v1 = 1667321193;
      break;
    case 5:
      uint64_t v1 = 0x726F737365636341;
      break;
    default:
      break;
  }
  sub_1D4276C98(v0 + 120, (uint64_t)v4, &qword_1EA6CA6A8);
  sub_1D4276C98((uint64_t)v4, (uint64_t)&v5, &qword_1EA6CA6A8);
  if (*((void *)&v6 + 1) != 1)
  {
    v12[0] = v7;
    v12[1] = v8;
    _OWORD v12[2] = v9;
    long long v10 = v5;
    long long v11 = v6;
    sub_1D4276C98((uint64_t)v12, (uint64_t)v13, &qword_1EA6CA6B0);
    sub_1D4276C98((uint64_t)v13, (uint64_t)&v3, &qword_1EA6CA6B0);
    sub_1D4276C98((uint64_t)v13, (uint64_t)v14, &qword_1EA6CA6B0);
    if (v15) {
      uint64_t v1 = v3;
    }
    else {
      swift_bridgeObjectRetain();
    }
    sub_1D43A3600((uint64_t)v13);
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_1D43A1AA8()
{
  uint64_t v1 = 0x506B6F6F4263614DLL;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t v1 = 0x656E6F685069;
      break;
    case 2:
      uint64_t v1 = 1684099177;
      break;
    case 3:
      uint64_t v1 = 0x6863746157;
      break;
    case 4:
      uint64_t v1 = 1667321193;
      break;
    case 5:
      uint64_t v1 = 0x726F737365636341;
      break;
    default:
      break;
  }
  sub_1D4276C98(v0 + 120, (uint64_t)v4, &qword_1EA6CA6A8);
  sub_1D4276C98((uint64_t)v4, (uint64_t)&v5, &qword_1EA6CA6A8);
  if (*((void *)&v6 + 1) != 1)
  {
    long long v12 = v7;
    v13[0] = v8;
    v13[1] = v9;
    long long v10 = v5;
    long long v11 = v6;
    sub_1D4276C98((uint64_t)v13, (uint64_t)v14, &qword_1EA6CA6B0);
    sub_1D4276C98((uint64_t)v14, (uint64_t)&v3, &qword_1EA6CA6B0);
    sub_1D4276C98((uint64_t)v14, (uint64_t)v15, &qword_1EA6CA6B0);
    if (v16) {
      uint64_t v1 = v3;
    }
    else {
      swift_bridgeObjectRetain();
    }
    sub_1D43A3600((uint64_t)v14);
    swift_bridgeObjectRelease();
  }
  return v1;
}

unint64_t sub_1D43A1C48()
{
  unint64_t v1 = 0xD000000000000018;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      unint64_t v1 = 0xD000000000000014;
      break;
    case 2:
      unint64_t v1 = 0x2D315F3864615069;
      break;
    case 3:
      unint64_t v1 = 0x315F336863746157;
      break;
    case 4:
      unint64_t v1 = 0xD000000000000011;
      break;
    case 5:
      unint64_t v1 = 0x5F73646F50726941;
      break;
    default:
      break;
  }
  sub_1D4276C98(v0 + 120, (uint64_t)v4, &qword_1EA6CA6A8);
  sub_1D4276C98((uint64_t)v4, (uint64_t)&v5, &qword_1EA6CA6A8);
  if (*((void *)&v6 + 1) != 1)
  {
    long long v12 = v7;
    long long v13 = v8;
    long long v14 = v9;
    long long v10 = v5;
    long long v11 = v6;
    sub_1D4276C98((uint64_t)&v14, (uint64_t)v15, &qword_1EA6CA6B0);
    sub_1D4276C98((uint64_t)v15, (uint64_t)&v3, &qword_1EA6CA6B0);
    sub_1D4276C98((uint64_t)v15, (uint64_t)v16, &qword_1EA6CA6B0);
    if (v17) {
      unint64_t v1 = v3;
    }
    else {
      swift_bridgeObjectRetain();
    }
    sub_1D43A3600((uint64_t)v15);
    swift_bridgeObjectRelease();
  }
  return v1;
}

unint64_t sub_1D43A1E28()
{
  unint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 3:
      unint64_t result = 0x72656E776FLL;
      break;
    case 4:
      unint64_t result = 0x656469727265766FLL;
      break;
    case 5:
      unint64_t result = 0x656E696C6E4F7369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D43A1EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D43A2A10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43A1F14(uint64_t a1)
{
  unint64_t v2 = sub_1D43A3384();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D43A1F50(uint64_t a1)
{
  unint64_t v2 = sub_1D43A3384();
  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1D43A1F8C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D43A2C80(a1, v10);
  if (!v2)
  {
    long long v5 = v11[0];
    *(_OWORD *)(a2 + 160) = v10[10];
    *(_OWORD *)(a2 + 176) = v5;
    *(_OWORD *)(a2 + 185) = *(_OWORD *)((char *)v11 + 9);
    long long v6 = v10[7];
    *(_OWORD *)(a2 + 96) = v10[6];
    *(_OWORD *)(a2 + 112) = v6;
    long long v7 = v10[9];
    *(_OWORD *)(a2 + 128) = v10[8];
    *(_OWORD *)(a2 + 144) = v7;
    long long v8 = v10[3];
    *(_OWORD *)(a2 + 32) = v10[2];
    *(_OWORD *)(a2 + 48) = v8;
    long long v9 = v10[5];
    *(_OWORD *)(a2 + 64) = v10[4];
    *(_OWORD *)(a2 + 80) = v9;
    __n128 result = (__n128)v10[1];
    *(_OWORD *)a2 = v10[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1D43A1FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, char *a13, long long a14, long long a15, long long a16, long long a17, long long a18, uint64_t a19, uint64_t a20,char *a21,uint64_t a22,uint64_t a23,uint64_t *a24,uint64_t a25,uint64_t *a26,uint64_t a27,long long *a28,long long *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,char a40,char a41,uint64_t a42,char a43)
{
  char v45 = *a13;
  char v46 = *a21;
  uint64_t v47 = *a24;
  uint64_t v48 = *a26;
  long long v53 = *a28;
  uint64_t v49 = *((void *)a28 + 2);
  long long v54 = *a29;
  uint64_t v55 = *((void *)a29 + 2);
  sub_1D4276C98(a30, (uint64_t)v64, &qword_1EBD7CC10);
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a11;
  *(void *)(a9 + 72) = a12;
  *(unsigned char *)(a9 + 80) = v45;
  *(_OWORD *)(a9 + 88) = a14;
  *(_OWORD *)(a9 + 104) = a15;
  *(_OWORD *)(a9 + 120) = a16;
  *(_OWORD *)(a9 + 136) = a17;
  *(_OWORD *)(a9 + 152) = a18;
  *(void *)(a9 + 168) = a19;
  *(void *)(a9 + 176) = a20;
  *(double *)(a9 + 184) = a10;
  *(unsigned char *)(a9 + 192) = v46;
  *(void *)(a9 + 200) = a22;
  *(void *)(a9 + 208) = a23;
  *(void *)(a9 + 216) = v47;
  *(void *)(a9 + 232) = a25;
  *(void *)(a9 + 240) = v48;
  *(void *)(a9 + 248) = a27;
  *(_OWORD *)(a9 + 256) = v53;
  *(void *)(a9 + 272) = v49;
  *(_OWORD *)(a9 + 280) = v54;
  *(void *)(a9 + 296) = v55;
  sub_1D4276C98((uint64_t)v64, a9 + 304, &qword_1EBD7CC10);
  uint64_t v50 = (int *)type metadata accessor for FMIPDevice();
  sub_1D42A3A74(a31, a9 + v50[28], &qword_1EBD7CEA0);
  sub_1D42A3A74(a32, a9 + v50[29], &qword_1EBD7D4E0);
  sub_1D42A3A74(a33, a9 + v50[30], &qword_1EBD7CDF8);
  sub_1D42A3A74(a34, a9 + v50[31], &qword_1EBD7CE38);
  sub_1D42A3A74(a35, a9 + v50[38], &qword_1EBD7CB80);
  sub_1D42A3A74(a36, a9 + v50[39], &qword_1EBD7CB80);
  sub_1D42A3A74(a37, a9 + v50[40], &qword_1EBD7CB80);
  sub_1D42A3A74(a38, a9 + v50[41], &qword_1EBD7CB80);
  *(void *)(a9 + v50[37]) = 0;
  *(unsigned char *)(a9 + v50[42]) = a39;
  *(unsigned char *)(a9 + v50[43]) = a40;
  *(unsigned char *)(a9 + v50[44]) = a41;
  sub_1D4276C3C(a38, &qword_1EBD7CB80);
  sub_1D4276C3C(a37, &qword_1EBD7CB80);
  sub_1D4276C3C(a36, &qword_1EBD7CB80);
  sub_1D4276C3C(a35, &qword_1EBD7CB80);
  sub_1D4276C3C(a34, &qword_1EBD7CE38);
  sub_1D4276C3C(a33, &qword_1EBD7CDF8);
  sub_1D4276C3C(a32, &qword_1EBD7D4E0);
  sub_1D4276C3C(a31, &qword_1EBD7CEA0);
  *(void *)(a9 + 224) = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1D4276C98(a42, a9 + v50[32], &qword_1EBD7E670);
  *(unsigned char *)(a9 + v50[33]) = a43;
  *(unsigned char *)(a9 + v50[34]) = 0;
  *(unsigned char *)(a9 + v50[35]) = 0;
  long long v52 = (void *)(a9 + v50[36]);
  *long long v52 = 0;
  v52[1] = 0;
  return result;
}

uint64_t sub_1D43A23F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F43656369766564 && a2 == 0xEB00000000726F6CLL;
  if (v2 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6369766544776172 && a2 == 0xEE006C65646F4D65 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D447DE20 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C43656369766564 && a2 == 0xEB00000000737361 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F4D656369766564 && a2 == 0xEB000000006C6564)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1D446A758();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1D43A2674@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA690);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43A34D4();
  sub_1D446A8C8();
  if (v2) {
    return sub_1D42BEC64((uint64_t)a1);
  }
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
  char v26 = 0;
  sub_1D43A3528();
  sub_1D446A5D8();
  uint64_t v10 = v25;
  char v26 = 1;
  uint64_t v22 = v24;
  sub_1D435C2E4(v24, v25);
  sub_1D446A5D8();
  uint64_t v20 = v24;
  uint64_t v23 = v6;
  char v26 = 2;
  uint64_t v21 = v25;
  swift_bridgeObjectRetain();
  sub_1D446A5D8();
  uint64_t v11 = v25;
  uint64_t v19 = v24;
  char v26 = 3;
  swift_bridgeObjectRetain();
  sub_1D446A5D8();
  uint64_t v12 = v25;
  uint64_t v18 = v24;
  char v26 = 4;
  swift_bridgeObjectRetain();
  sub_1D446A5D8();
  uint64_t v13 = v25;
  uint64_t v17 = v24;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v5);
  uint64_t v14 = v22;
  sub_1D435C2E4(v22, v10);
  swift_bridgeObjectRetain();
  sub_1D435C414(v14, v10);
  sub_1D42BEC64((uint64_t)a1);
  sub_1D435C414(v14, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v21;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v14;
  a2[1] = v10;
  a2[2] = v20;
  a2[3] = v15;
  a2[4] = v19;
  a2[5] = v11;
  a2[6] = v18;
  a2[7] = v12;
  a2[8] = v17;
  a2[9] = v13;
  return result;
}

uint64_t sub_1D43A2A10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D4481460 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x72656E776FLL && a2 == 0xE500000000000000 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656469727265766FLL && a2 == 0xE900000000000073 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656E696C6E4F7369 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1D446A758();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1D43A2C80@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v64 = sub_1D42D5DA0(&qword_1EA6CA668);
  uint64_t v5 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43A3384();
  uint64_t v110 = v7;
  sub_1D446A8C8();
  if (v2) {
    return sub_1D42BEC64((uint64_t)a1);
  }
  uint64_t v62 = a2;
  unint64_t v63 = a1;
  uint64_t v8 = v5;
  LOBYTE(v77) = 0;
  uint64_t v9 = v64;
  uint64_t v10 = v110;
  uint64_t v12 = sub_1D446A598();
  uint64_t v14 = v13;
  LOBYTE(v65) = 1;
  sub_1D43A33D8();
  swift_bridgeObjectRetain();
  sub_1D446A5D8();
  int v15 = v77;
  LOBYTE(v65) = 2;
  sub_1D43A342C();
  sub_1D446A5D8();
  int v58 = v15;
  uint64_t v16 = v77;
  uint64_t v54 = *((void *)&v78 + 1);
  uint64_t v17 = v78;
  uint64_t v55 = v80;
  int v18 = v81;
  int v19 = v83;
  uint64_t v56 = v82;
  uint64_t v57 = v84;
  int v53 = v79;
  char v108 = v79;
  char v106 = v81;
  char v104 = v83;
  LOBYTE(v77) = 3;
  uint64_t v60 = v85;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1D446A558();
  uint64_t v61 = 0;
  uint64_t v59 = v21;
  int v44 = v19;
  int v45 = v18;
  uint64_t v46 = v20;
  LOBYTE(v65) = 4;
  sub_1D43A3480();
  swift_bridgeObjectRetain();
  uint64_t v22 = v61;
  sub_1D446A588();
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D42BEC64((uint64_t)v63);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v61) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v23 = v84;
    uint64_t v24 = v85;
    char v102 = 5;
    uint64_t v41 = v77;
    uint64_t v42 = v80;
    long long v49 = v78;
    uint64_t v51 = v82;
    uint64_t v52 = v79;
    uint64_t v43 = v81;
    uint64_t v50 = v83;
    sub_1D435C274(v77, v78, *((uint64_t *)&v78 + 1), v79);
    char v25 = sub_1D446A5A8();
    uint64_t v47 = v24;
    uint64_t v48 = v23;
    char v26 = v25;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v110, v9);
    LODWORD(v110) = v26 & 1;
    *(void *)&long long v65 = v12;
    *((void *)&v65 + 1) = v14;
    LOBYTE(v66) = v58;
    *((void *)&v66 + 1) = v16;
    *(void *)&long long v67 = v17;
    *((void *)&v67 + 1) = v54;
    LOBYTE(v68) = v53;
    *((void *)&v68 + 1) = v55;
    LOBYTE(v69) = v45;
    *((void *)&v69 + 1) = v56;
    LOBYTE(v70) = v44;
    long long v27 = v49;
    *((void *)&v70 + 1) = v57;
    *(void *)&long long v71 = v60;
    *((void *)&v71 + 1) = v46;
    *(void *)&long long v72 = v59;
    *((void *)&v72 + 1) = v41;
    long long v73 = v49;
    *(void *)&long long v74 = v52;
    *((void *)&v74 + 1) = v42;
    *(void *)&long long v75 = v43;
    *((void *)&v75 + 1) = v51;
    *(void *)&v76[0] = v50;
    *((void *)&v76[0] + 1) = v23;
    *(void *)&v76[1] = v24;
    BYTE8(v76[1]) = v26 & 1;
    sub_1D435C1C4(&v65);
    uint64_t v28 = v41;
    uint64_t v29 = v42;
    uint64_t v30 = v50;
    sub_1D435C3A4(v41, v27, *((uint64_t *)&v27 + 1), v52);
    swift_bridgeObjectRelease();
    uint64_t v31 = v60;
    swift_bridgeObjectRelease();
    uint64_t v32 = v59;
    swift_bridgeObjectRelease();
    sub_1D42BEC64((uint64_t)v63);
    uint64_t v77 = v12;
    *(void *)&long long v78 = v14;
    BYTE8(v78) = v58;
    *(_DWORD *)((char *)&v78 + 9) = v109[0];
    HIDWORD(v78) = *(_DWORD *)((char *)v109 + 3);
    uint64_t v79 = v16;
    uint64_t v80 = v17;
    uint64_t v81 = v54;
    LOBYTE(v82) = v108;
    *(_DWORD *)((char *)&v82 + 1) = *(_DWORD *)v107;
    HIDWORD(v82) = *(_DWORD *)&v107[3];
    uint64_t v83 = v55;
    LOBYTE(v84) = v106;
    HIDWORD(v84) = *(_DWORD *)&v105[3];
    *(_DWORD *)((char *)&v84 + 1) = *(_DWORD *)v105;
    uint64_t v85 = v56;
    char v86 = v104;
    *(_DWORD *)&v87[3] = *(_DWORD *)&v103[3];
    *(_DWORD *)uint64_t v87 = *(_DWORD *)v103;
    uint64_t v88 = v57;
    uint64_t v89 = v31;
    uint64_t v90 = v46;
    uint64_t v91 = v32;
    uint64_t v92 = v28;
    long long v93 = v49;
    uint64_t v94 = v52;
    uint64_t v95 = v29;
    uint64_t v96 = v43;
    uint64_t v97 = v51;
    uint64_t v98 = v30;
    uint64_t v99 = v48;
    uint64_t v100 = v47;
    char v101 = (char)v110;
    uint64_t result = (uint64_t)sub_1D435C2F8(&v77);
    long long v33 = v76[0];
    unint64_t v34 = v62;
    v62[10] = v75;
    v34[11] = v33;
    *(_OWORD *)((char *)v34 + 185) = *(_OWORD *)((char *)v76 + 9);
    long long v35 = v72;
    void v34[6] = v71;
    v34[7] = v35;
    long long v36 = v74;
    v34[8] = v73;
    v34[9] = v36;
    long long v37 = v68;
    void v34[2] = v67;
    v34[3] = v37;
    long long v38 = v70;
    v34[4] = v69;
    v34[5] = v38;
    long long v39 = v66;
    *unint64_t v34 = v65;
    v34[1] = v39;
  }
  return result;
}

unint64_t sub_1D43A3384()
{
  unint64_t result = qword_1EA6CA670;
  if (!qword_1EA6CA670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA670);
  }
  return result;
}

unint64_t sub_1D43A33D8()
{
  unint64_t result = qword_1EA6CA678;
  if (!qword_1EA6CA678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA678);
  }
  return result;
}

unint64_t sub_1D43A342C()
{
  unint64_t result = qword_1EA6CA680;
  if (!qword_1EA6CA680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA680);
  }
  return result;
}

unint64_t sub_1D43A3480()
{
  unint64_t result = qword_1EA6CA688;
  if (!qword_1EA6CA688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA688);
  }
  return result;
}

unint64_t sub_1D43A34D4()
{
  unint64_t result = qword_1EA6CA698;
  if (!qword_1EA6CA698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA698);
  }
  return result;
}

unint64_t sub_1D43A3528()
{
  unint64_t result = qword_1EA6CA6A0;
  if (!qword_1EA6CA6A0)
  {
    sub_1D42DB55C((uint64_t *)&unk_1EBD7FD68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA6A0);
  }
  return result;
}

unint64_t sub_1D43A3594()
{
  unint64_t result = qword_1EA6CA358;
  if (!qword_1EA6CA358)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA6CA358);
  }
  return result;
}

uint64_t sub_1D43A35D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D43A3600(uint64_t a1)
{
  return a1;
}

uint64_t *sub_1D43A362C(uint64_t *a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FMIPDemoDeviceTemplateOverrides.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43A3728);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPDemoDeviceTemplateOverrides.CodingKeys()
{
  return &type metadata for FMIPDemoDeviceTemplateOverrides.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FMIPDemoDeviceTemplate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43A382CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPDemoDeviceTemplate.CodingKeys()
{
  return &type metadata for FMIPDemoDeviceTemplate.CodingKeys;
}

uint64_t sub_1D43A3864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 8);
}

uint64_t sub_1D43A386C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_1D43A38E8(void *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  int v8 = *(_DWORD *)(v6 + 84);
  uint64_t v9 = *(void *)(v6 + 64);
  if (v8) {
    size_t v10 = *(void *)(v6 + 64);
  }
  else {
    size_t v10 = v9 + 1;
  }
  uint64_t v11 = *(_DWORD *)(v6 + 80);
  if (v11 > 7 || (*(_DWORD *)(v7 + 80) & 0x100000) != 0 || v10 > 0x18)
  {
    uint64_t v14 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v14 + ((v11 + 16) & ~v11));
    swift_retain();
    return a1;
  }
  if (!v8)
  {
    if (!*((unsigned char *)a2 + v9)) {
      goto LABEL_31;
    }
    int v15 = (*((unsigned __int8 *)a2 + v9) - 1) << (8 * v9);
    if (v9 > 3) {
      int v15 = 0;
    }
    if (v9)
    {
      int v16 = v9 <= 3 ? v9 : 4;
      switch(v16)
      {
        case 2:
          int v17 = *a2;
          break;
        case 3:
          int v17 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v17 = *(_DWORD *)a2;
          break;
        default:
          int v17 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v17 = 0;
    }
    if ((v17 | v15) == 0xFFFFFFFF) {
      goto LABEL_31;
    }
LABEL_30:
    memcpy(a1, a2, v10);
    return a1;
  }
  if ((*(unsigned int (**)(unsigned __int16 *, void, uint64_t))(v7 + 48))(a2, *(unsigned int *)(v7 + 84), v5))
  {
    goto LABEL_30;
  }
LABEL_31:
  (*(void (**)(void *, unsigned __int16 *, uint64_t))(v7 + 16))(a1, a2, v5);
  if (!v8) {
    *((unsigned char *)a1 + v9) = 0;
  }
  return a1;
}

uint64_t sub_1D43A3AB0(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5)
  {
    uint64_t v11 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v4 + 48))(a1, v5, v3);
    uint64_t v4 = v11;
    if (result) {
      return result;
    }
    goto LABEL_17;
  }
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_17;
  }
  int v8 = (*((unsigned __int8 *)a1 + v6) - 1) << (8 * v6);
  if (v6 > 3) {
    int v8 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  int v9 = v6 | v8;
  uint64_t result = (v9 + 1);
  if (v9 == -1)
  {
LABEL_17:
    size_t v10 = *(uint64_t (**)(unsigned __int16 *, uint64_t))(v4 + 8);
    return v10(a1, v3);
  }
  return result;
}

unsigned char *sub_1D43A3C18(unsigned char *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (v7)
  {
    if (!(*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
    {
LABEL_22:
      (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v6 + 16))(a1, a2, v5);
      if (!v7) {
        a1[v8] = 0;
      }
      return a1;
    }
  }
  else
  {
    if (!*((unsigned char *)a2 + v8)) {
      goto LABEL_22;
    }
    int v9 = (*((unsigned __int8 *)a2 + v8) - 1) << (8 * v8);
    if (v8 > 3) {
      int v9 = 0;
    }
    if (v8)
    {
      int v10 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
      switch(v10)
      {
        case 2:
          int v11 = *a2;
          break;
        case 3:
          int v11 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v11 = *(_DWORD *)a2;
          break;
        default:
          int v11 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v11 = 0;
    }
    if ((v11 | v9) == 0xFFFFFFFF) {
      goto LABEL_22;
    }
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  memcpy(a1, a2, v12);
  return a1;
}

unsigned __int16 *sub_1D43A3D9C(unsigned __int16 *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (!v7)
  {
    char v12 = 8 * v8;
    if (*((unsigned char *)a1 + v8))
    {
      int v13 = (*((unsigned __int8 *)a1 + v8) - 1) << v12;
      if (v8 > 3) {
        int v13 = 0;
      }
      if (v8)
      {
        int v14 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
        switch(v14)
        {
          case 2:
            int v15 = *a1;
            break;
          case 3:
            int v15 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v15 = *(_DWORD *)a1;
            break;
          default:
            int v15 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v15 = 0;
      }
      if ((v15 | v13) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)a2 + v8)) {
          goto LABEL_54;
        }
        int v16 = (*((unsigned __int8 *)a2 + v8) - 1) << v12;
        if (v8 > 3) {
          int v16 = 0;
        }
        if (v8)
        {
          int v17 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
          switch(v17)
          {
            case 2:
              int v18 = *a2;
              break;
            case 3:
              int v18 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
              break;
            case 4:
              int v18 = *(_DWORD *)a2;
              break;
            default:
              int v18 = *(unsigned __int8 *)a2;
              break;
          }
        }
        else
        {
          int v18 = 0;
        }
        if ((v18 | v16) == 0xFFFFFFFF) {
          goto LABEL_54;
        }
        goto LABEL_45;
      }
    }
    if (!*((unsigned char *)a2 + v8))
    {
LABEL_49:
      (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    int v19 = (*((unsigned __int8 *)a2 + v8) - 1) << v12;
    if (v8 > 3) {
      int v19 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v20 = *(void *)(v6 + 64);
      }
      else {
        int v20 = 4;
      }
      switch(v20)
      {
        case 2:
          int v21 = *a2;
          break;
        case 3:
          int v21 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v21 = *(_DWORD *)a2;
          break;
        default:
          int v21 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v21 = 0;
    }
    int v11 = (v21 | v19) + 1;
LABEL_43:
    if (v11)
    {
      (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_45;
    }
    goto LABEL_49;
  }
  int v9 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
  int v10 = v9(a1, v7, v5);
  int v11 = v9(a2, v7, v5);
  if (!v10) {
    goto LABEL_43;
  }
  if (!v11)
  {
LABEL_54:
    (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 16))(a1, a2, v5);
    if (!v7) {
      *((unsigned char *)a1 + v8) = 0;
    }
    return a1;
  }
LABEL_45:
  if (v7) {
    size_t v22 = v8;
  }
  else {
    size_t v22 = v8 + 1;
  }
  memcpy(a1, a2, v22);
  return a1;
}

unsigned char *sub_1D43A40B0(unsigned char *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (v7)
  {
    if (!(*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
    {
LABEL_22:
      (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v6 + 32))(a1, a2, v5);
      if (!v7) {
        a1[v8] = 0;
      }
      return a1;
    }
  }
  else
  {
    if (!*((unsigned char *)a2 + v8)) {
      goto LABEL_22;
    }
    int v9 = (*((unsigned __int8 *)a2 + v8) - 1) << (8 * v8);
    if (v8 > 3) {
      int v9 = 0;
    }
    if (v8)
    {
      int v10 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
      switch(v10)
      {
        case 2:
          int v11 = *a2;
          break;
        case 3:
          int v11 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v11 = *(_DWORD *)a2;
          break;
        default:
          int v11 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v11 = 0;
    }
    if ((v11 | v9) == 0xFFFFFFFF) {
      goto LABEL_22;
    }
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  memcpy(a1, a2, v12);
  return a1;
}

unsigned __int16 *sub_1D43A4234(unsigned __int16 *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (!v7)
  {
    char v12 = 8 * v8;
    if (*((unsigned char *)a1 + v8))
    {
      int v13 = (*((unsigned __int8 *)a1 + v8) - 1) << v12;
      if (v8 > 3) {
        int v13 = 0;
      }
      if (v8)
      {
        int v14 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
        switch(v14)
        {
          case 2:
            int v15 = *a1;
            break;
          case 3:
            int v15 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v15 = *(_DWORD *)a1;
            break;
          default:
            int v15 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v15 = 0;
      }
      if ((v15 | v13) != 0xFFFFFFFF)
      {
        if (!*((unsigned char *)a2 + v8)) {
          goto LABEL_54;
        }
        int v16 = (*((unsigned __int8 *)a2 + v8) - 1) << v12;
        if (v8 > 3) {
          int v16 = 0;
        }
        if (v8)
        {
          int v17 = v8 <= 3 ? *(void *)(v6 + 64) : 4;
          switch(v17)
          {
            case 2:
              int v18 = *a2;
              break;
            case 3:
              int v18 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
              break;
            case 4:
              int v18 = *(_DWORD *)a2;
              break;
            default:
              int v18 = *(unsigned __int8 *)a2;
              break;
          }
        }
        else
        {
          int v18 = 0;
        }
        if ((v18 | v16) == 0xFFFFFFFF) {
          goto LABEL_54;
        }
        goto LABEL_45;
      }
    }
    if (!*((unsigned char *)a2 + v8))
    {
LABEL_49:
      (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    int v19 = (*((unsigned __int8 *)a2 + v8) - 1) << v12;
    if (v8 > 3) {
      int v19 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v20 = *(void *)(v6 + 64);
      }
      else {
        int v20 = 4;
      }
      switch(v20)
      {
        case 2:
          int v21 = *a2;
          break;
        case 3:
          int v21 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v21 = *(_DWORD *)a2;
          break;
        default:
          int v21 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v21 = 0;
    }
    int v11 = (v21 | v19) + 1;
LABEL_43:
    if (v11)
    {
      (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_45;
    }
    goto LABEL_49;
  }
  int v9 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
  int v10 = v9(a1, v7, v5);
  int v11 = v9(a2, v7, v5);
  if (!v10) {
    goto LABEL_43;
  }
  if (!v11)
  {
LABEL_54:
    (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 32))(a1, a2, v5);
    if (!v7) {
      *((unsigned char *)a1 + v8) = 0;
    }
    return a1;
  }
LABEL_45:
  if (v7) {
    size_t v22 = v8;
  }
  else {
    size_t v22 = v8 + 1;
  }
  memcpy(a1, a2, v22);
  return a1;
}

uint64_t sub_1D43A4548(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_1D43A46E8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  size_t v10 = *(void *)(v7 + 64);
  if (v8) {
    size_t v11 = *(void *)(v7 + 64);
  }
  else {
    size_t v11 = v10 + 1;
  }
  BOOL v12 = a3 >= v9;
  unsigned int v13 = a3 - v9;
  if (v13 == 0 || !v12)
  {
LABEL_16:
    if (v9 < a2) {
      goto LABEL_17;
    }
    goto LABEL_24;
  }
  if (v11 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_17;
    }
    goto LABEL_24;
  }
  unsigned int v14 = ((v13 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
  if (!HIWORD(v14))
  {
    if (v14 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v14 > 1;
    }
    goto LABEL_16;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_17:
    unsigned int v15 = ~v9 + a2;
    if (v11 < 4)
    {
      int v16 = (v15 >> (8 * v11)) + 1;
      if (v11)
      {
        int v17 = v15 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v15;
      int v16 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v11] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v16;
        return;
      case 3:
        goto LABEL_56;
      case 4:
        *(_DWORD *)&a1[v11] = v16;
        return;
      default:
        return;
    }
  }
LABEL_24:
  switch(v6)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_56:
      __break(1u);
      JUMPOUT(0x1D43A49B8);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        if (v8 >= 2)
        {
          if (a2 + 1 <= v8)
          {
            if (a2 != -1)
            {
              int v21 = *(void (**)(void))(v7 + 56);
              v21();
            }
          }
          else
          {
            if (v10 <= 3) {
              int v18 = ~(-1 << (8 * v10));
            }
            else {
              int v18 = -1;
            }
            if (v10)
            {
              int v19 = v18 & (a2 - v8);
              if (v10 <= 3) {
                int v20 = v10;
              }
              else {
                int v20 = 4;
              }
              bzero(a1, v10);
              switch(v20)
              {
                case 2:
                  *(_WORD *)a1 = v19;
                  break;
                case 3:
                  *(_WORD *)a1 = v19;
                  a1[2] = BYTE2(v19);
                  break;
                case 4:
                  *(_DWORD *)a1 = v19;
                  break;
                default:
                  *a1 = v19;
                  break;
              }
            }
          }
        }
      }
      return;
  }
}

uint64_t sub_1D43A49F0(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  if (*(_DWORD *)(v2 + 84)) {
    return (*(uint64_t (**)(void))(v2 + 48))();
  }
  if (!*((unsigned char *)a1 + v3)) {
    return 0;
  }
  int v5 = (*((unsigned __int8 *)a1 + v3) - 1) << (8 * v3);
  if (v3 > 3) {
    int v5 = 0;
  }
  if (v3)
  {
    if (v3 > 3) {
      LODWORD(v3) = 4;
    }
    switch((int)v3)
    {
      case 2:
        LODWORD(v3) = *a1;
        break;
      case 3:
        LODWORD(v3) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v3) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v3) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v3 | v5) + 1;
}

void sub_1D43A4AE8(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  size_t v6 = *(void *)(v4 + 64);
  if (v5 >= a2)
  {
    if (v5)
    {
      if (!a2) {
        return;
      }
    }
    else
    {
      a1[v6] = 0;
      if (!a2) {
        return;
      }
    }
    size_t v10 = *(void (**)(void))(v4 + 56);
    v10();
    return;
  }
  unsigned int v7 = ~v5 + a2;
  if (v6 >= 4)
  {
    bzero(a1, v6);
    *(_DWORD *)a1 = v7;
    LOBYTE(v8) = 1;
    if (v5) {
      return;
    }
    goto LABEL_19;
  }
  int v8 = (v7 >> (8 * v6)) + 1;
  if (!v6)
  {
LABEL_18:
    if (v5) {
      return;
    }
    goto LABEL_19;
  }
  int v9 = v7 & ~(-1 << (8 * v6));
  bzero(a1, v6);
  if (v6 == 3)
  {
    *(_WORD *)a1 = v9;
    a1[2] = BYTE2(v9);
    goto LABEL_18;
  }
  if (v6 == 2)
  {
    *(_WORD *)a1 = v9;
    if (v5) {
      return;
    }
    goto LABEL_19;
  }
  *a1 = v9;
  if (!v5) {
LABEL_19:
  }
    a1[v6] = v8;
}

uint64_t type metadata accessor for FMIPDemoDeviceTemplateOverrides.Override()
{
  return sub_1D429BD44();
}

unint64_t sub_1D43A4C64()
{
  unint64_t result = qword_1EA6CA740;
  if (!qword_1EA6CA740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA740);
  }
  return result;
}

unint64_t sub_1D43A4CBC()
{
  unint64_t result = qword_1EA6CA748;
  if (!qword_1EA6CA748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA748);
  }
  return result;
}

unint64_t sub_1D43A4D14()
{
  unint64_t result = qword_1EA6CA750;
  if (!qword_1EA6CA750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA750);
  }
  return result;
}

unint64_t sub_1D43A4D6C()
{
  unint64_t result = qword_1EA6CA758;
  if (!qword_1EA6CA758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA758);
  }
  return result;
}

unint64_t sub_1D43A4DC4()
{
  unint64_t result = qword_1EA6CA760;
  if (!qword_1EA6CA760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA760);
  }
  return result;
}

unint64_t sub_1D43A4E1C()
{
  unint64_t result = qword_1EA6CA768;
  if (!qword_1EA6CA768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA768);
  }
  return result;
}

uint64_t static FMIPManagerSubsystem.all.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EBD7E6E0 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_1EBD7E6D0;
  return result;
}

uint64_t FMIPManagerSubsystem.rawValue.getter()
{
  return *(void *)v0;
}

FMIPCore::FMIPManagerSubsystem __swiftcall FMIPManagerSubsystem.init(rawValue:)(FMIPCore::FMIPManagerSubsystem rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FMIPManagerSubsystem.devices.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static FMIPManagerSubsystem.items.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void *sub_1D43A4EF4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1D43A4F08@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_1D43A4F1C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1D43A4F48@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1D43A4F6C(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1D43A4F80(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1D43A4F94@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1D43A4FA8(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1D43A4FBC()
{
  return *v0 == 0;
}

void *sub_1D43A4FCC(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *FMIPSnapshotHandlers.__allocating_init(devicesResponseFilter:devicesResponseHandler:itemsResponseFilter:itemsResponseHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[6] = a5;
  result[7] = a6;
  result[8] = a7;
  result[9] = a8;
  return result;
}

void *FMIPSnapshotHandlers.init(devicesResponseFilter:devicesResponseHandler:itemsResponseFilter:itemsResponseHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _OWORD v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  void v8[6] = a5;
  v8[7] = a6;
  v8[8] = a7;
  v8[9] = a8;
  return v8;
}

uint64_t *FMIPSnapshotHandlers.deinit()
{
  sub_1D42E2C6C(v0[2]);
  sub_1D42E2C6C(v0[4]);
  sub_1D42E2C6C(v0[6]);
  sub_1D42E2C6C(v0[8]);
  return v0;
}

uint64_t FMIPSnapshotHandlers.__deallocating_deinit()
{
  sub_1D42E2C6C(v0[2]);
  sub_1D42E2C6C(v0[4]);
  sub_1D42E2C6C(v0[6]);
  sub_1D42E2C6C(v0[8]);
  return swift_deallocClassInstance();
}

uint64_t FMIPManagerConfiguration.cacheDirectory.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_cacheDirectory);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPManagerConfiguration.authenticationUIProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D43A5150(v1 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_authenticationUIProvider, a1);
}

uint64_t sub_1D43A5150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7F828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FMIPManagerConfiguration.snapshotHandlers.getter()
{
  return swift_retain();
}

uint64_t FMIPManagerConfiguration.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_preferredLocale;
  uint64_t v2 = sub_1D44696C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_1D43A5274(v0 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_authenticationUIProvider);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1D43A5274(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7F828);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FMIPManagerConfiguration.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_preferredLocale;
  uint64_t v2 = sub_1D44696C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_1D43A5274(v0 + OBJC_IVAR____TtC8FMIPCore24FMIPManagerConfiguration_authenticationUIProvider);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_1D43A53C0()
{
  unint64_t result = qword_1EA6CA770;
  if (!qword_1EA6CA770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA770);
  }
  return result;
}

unint64_t sub_1D43A5418()
{
  unint64_t result = qword_1EA6CA778;
  if (!qword_1EA6CA778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA778);
  }
  return result;
}

unint64_t sub_1D43A5470()
{
  unint64_t result = qword_1EA6CA780;
  if (!qword_1EA6CA780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA780);
  }
  return result;
}

unint64_t sub_1D43A54C8()
{
  unint64_t result = qword_1EA6CA788;
  if (!qword_1EA6CA788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA788);
  }
  return result;
}

uint64_t type metadata accessor for FMIPSnapshotHandlers()
{
  return self;
}

uint64_t method lookup function for FMIPSnapshotHandlers(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPSnapshotHandlers);
}

uint64_t dispatch thunk of FMIPSnapshotHandlers.__allocating_init(devicesResponseFilter:devicesResponseHandler:itemsResponseFilter:itemsResponseHandler:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1D43A556C()
{
  return type metadata accessor for FMIPManagerConfiguration();
}

uint64_t method lookup function for FMIPManagerConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPManagerConfiguration);
}

id sub_1D43A5590(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  uint64_t v6 = sub_1D446A738();
  if (v6)
  {
    unsigned int v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    unsigned int v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  int v9 = (void *)sub_1D44693C8();

  id v10 = objc_msgSend(v9, sel_code);
  return v10;
}

BOOL sub_1D43A56F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  uint64_t v6 = sub_1D446A738();
  if (v6)
  {
    unsigned int v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    unsigned int v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  int v9 = (void *)sub_1D44693C8();

  BOOL v10 = sub_1D43A5844();
  return v10;
}

BOOL sub_1D43A5844()
{
  id v1 = objc_msgSend(v0, sel_domain);
  uint64_t v2 = sub_1D4469B38();
  uint64_t v4 = v3;

  if (v2 == sub_1D4469B38() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = sub_1D446A758();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v7 & 1) == 0) {
      return result;
    }
  }
  return (uint64_t)objc_msgSend(v0, sel_code) >= 500 && (uint64_t)objc_msgSend(v0, sel_code) < 600;
}

uint64_t type metadata accessor for FMIPVerifyTrustedStateRequest()
{
  uint64_t result = qword_1EA6CA790;
  if (!qword_1EA6CA790) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D43A5978()
{
  uint64_t result = type metadata accessor for FMIPDevice();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D43A5A10()
{
  uint64_t v2 = *(void *)(v0 + qword_1EA6E4878);
  uint64_t v1 = *(void *)(v0 + qword_1EA6E4878 + 8);
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v9 = v2;
  *((void *)&v9 + 1) = v1;
  uint64_t v3 = qword_1EA6C9D80;
  uint64_t v4 = *(void *)(v0 + qword_1EA6C9D80);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));
  sub_1D433313C((void *)(v4 + 16), v8);
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 24));
  swift_release();
  sub_1D42C5494(&v9, v8);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D42C4E78(v8, 0x656369766564, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v0 + v3);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
  sub_1D4306B48((void *)(v6 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43A5B50()
{
  return sub_1D42B24BC(v0 + qword_1EA6E4878);
}

uint64_t sub_1D43A5B60()
{
  uint64_t v0 = sub_1D427B074();
  sub_1D42B24BC(v0 + qword_1EA6E4878);
  return swift_deallocClassInstance();
}

uint64_t sub_1D43A5BD4()
{
  return type metadata accessor for FMIPVerifyTrustedStateRequest();
}

uint64_t FMIPLockAction.isSoundEnabled.getter()
{
  return 0;
}

uint64_t FMIPLockAction.isUserTextEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_isUserTextEnabled);
}

uint64_t FMIPLockAction.message.getter()
{
  return sub_1D435A648(&OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_message);
}

uint64_t FMIPLockAction.passcode.getter()
{
  return sub_1D435A648(&OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_passcode);
}

uint64_t sub_1D43A5C0C()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 216) & 0x80) == 0) {
    return 0;
  }
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 240);
  if (v2) {
    return 1;
  }
  else {
    return (v2 >> 13) & 1;
  }
}

uint64_t FMIPLockAction.__allocating_init(device:message:passcode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  FMIPLockAction.init(device:message:passcode:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t FMIPLockAction.init(device:message:passcode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(unsigned char *)(v5 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_isSoundEnabled) = 0;
  uint64_t v6 = (void *)(v5 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_message);
  *uint64_t v6 = a2;
  v6[1] = a3;
  char v7 = (void *)(v5 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_passcode);
  *char v7 = a4;
  v7[1] = a5;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_isUserTextEnabled) = a3 != 0;
  *(void *)(v5 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext) = 0;
  uint64_t v8 = (void *)(v5 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  void *v8 = 0;
  v8[1] = 0;
  long long v9 = (void *)(v5 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
  *long long v9 = 0;
  v9[1] = 0;
  uint64_t v10 = (void *)(v5 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_username);
  *uint64_t v10 = 0;
  v10[1] = 0;
  size_t v11 = (void *)(v5 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  *size_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = (void *)(v5 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_escrowUUID);
  *uint64_t v12 = 0;
  v12[1] = 0;
  *(_OWORD *)(v5 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession) = xmmword_1D446D300;
  sub_1D42B2518(a1, v5 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  return v5;
}

void FMIPLockAction.__allocating_init(device:)()
{
}

void FMIPLockAction.init(device:)()
{
}

uint64_t sub_1D43A5E10()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FMIPLockAction.deinit()
{
  uint64_t v0 = FMIPDeviceAction.deinit();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMIPLockAction.__deallocating_deinit()
{
  FMIPDeviceAction.deinit();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43A5F34(uint64_t *a1, uint64_t *a2)
{
  return _s8FMIPCore14FMIPLockActionC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s8FMIPCore14FMIPLockActionC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_message + 8);
  uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_message + 8);
  if (v4)
  {
    if (!v5) {
      return 0;
    }
    BOOL v6 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_message) == *(void *)(a2
                                                                                          + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_message)
      && v4 == v5;
    if (!v6 && (sub_1D446A758() & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_passcode + 8);
  uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_passcode + 8);
  if (!v7)
  {
    if (!v8) {
      goto LABEL_19;
    }
    return 0;
  }
  if (!v8) {
    return 0;
  }
  BOOL v9 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_passcode) == *(void *)(a2
                                                                                         + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_passcode)
    && v7 == v8;
  if (!v9 && (sub_1D446A758() & 1) == 0) {
    return 0;
  }
LABEL_19:
  if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_isUserTextEnabled) != *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_isUserTextEnabled)) {
    return 0;
  }
  uint64_t v11 = a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
  return static FMIPDevice.== infix(_:_:)(v11);
}

uint64_t sub_1D43A6040()
{
  return type metadata accessor for FMIPLockAction();
}

uint64_t type metadata accessor for FMIPLockAction()
{
  uint64_t result = qword_1EA6CA7A0;
  if (!qword_1EA6CA7A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D43A6094()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FMIPLockAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPLockAction);
}

uint64_t dispatch thunk of FMIPLockAction.__allocating_init(device:message:passcode:)()
{
  return (*(uint64_t (**)(void))(v0 + 384))();
}

uint64_t FMImageCache.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1D43A6158(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43A61A0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43A61E8()
{
  return sub_1D446A0A8();
}

uint64_t sub_1D43A626C()
{
  uint64_t v1 = v0;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  uint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1D4271000, v3, v4, "FMImageCache: Purging cache...", v5, 2u);
    MEMORY[0x1D9447730](v5, -1, -1);
  }

  BOOL v6 = *(NSObject **)(v1 + 24);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1D43A9358;
  *(void *)(v7 + 24) = v1;
  v10[4] = sub_1D42AEE34;
  _OWORD v10[5] = v7;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  void v10[2] = sub_1D42AEDE4;
  v10[3] = &unk_1F2C0D2F8;
  uint64_t v8 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v8);
  _Block_release(v8);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D43A6458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v4 = v3;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v27 = *v3;
  uint64_t v6 = v27;
  uint64_t v31 = sub_1D4469958();
  uint64_t v34 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D44699B8();
  uint64_t v32 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v6 + 80);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v10);
  int v17 = (char *)&v26 - v16;
  uint64_t v30 = v4[3];
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v26 - v16, a1, v13);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v13;
  *(_OWORD *)(v19 + 24) = *(_OWORD *)(v27 + 88);
  *(void *)(v19 + 40) = *(void *)(v6 + 104);
  *(void *)(v19 + 48) = v4;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v19 + v18, v17, v13);
  int v20 = (uint64_t *)(v19 + ((v15 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v22 = v28;
  uint64_t v21 = v29;
  uint64_t *v20 = v28;
  v20[1] = v21;
  aBlock[4] = sub_1D42BD994;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C0D5D0;
  uint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  sub_1D42972D4(v22);
  sub_1D4469988();
  uint64_t v35 = MEMORY[0x1E4FBC860];
  sub_1D42DDB1C((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  uint64_t v24 = v31;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v12, v8, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v24);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v33);
  return swift_release();
}

void sub_1D43A6850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)MEMORY[0x1D9446F50]();
  sub_1D43A8910(v3, a3, a1, a2);
}

uint64_t sub_1D43A68C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v2 = *v1;
  uint64_t v3 = *((void *)*v1 + 12);
  uint64_t v4 = sub_1D446A168();
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v42 = (char *)&v39 - v5;
  uint64_t v6 = sub_1D4469498();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  int v44 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v39 - v14;
  (*((void (**)(uint64_t))v2 + 20))(v13);
  uint64_t v16 = *((void *)v2 + 10);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(v16, AssociatedConformanceWitness);
  sub_1D4469448();
  swift_bridgeObjectRelease();
  uint64_t v18 = v6;
  int v45 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v46 = v7 + 8;
  v45(v12, v6);
  uint64_t v19 = v15;
  uint64_t v20 = sub_1D44694A8();
  unint64_t v22 = v21;
  uint64_t v24 = v40;
  uint64_t v23 = v41;
  char v25 = v42;
  v1[7]();
  sub_1D42DCFDC(v20, v22);
  uint64_t v26 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v25, 1, v3) == 1)
  {
    uint64_t v43 = v3;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v23);
    uint64_t v27 = v18;
    uint64_t v28 = v44;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1D4469928();
    sub_1D42D7FAC(v29, (uint64_t)qword_1EBD83228);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v28, v19, v27);
    uint64_t v30 = sub_1D44698F8();
    os_log_type_t v31 = sub_1D446A038();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v49 = v33;
      *(_DWORD *)uint64_t v32 = 136315138;
      sub_1D42DDB1C(&qword_1EA6CA838, MEMORY[0x1E4F276F0]);
      uint64_t v34 = sub_1D446A6D8();
      uint64_t v48 = sub_1D42CB9EC(v34, v35, &v49);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      long long v36 = v45;
      v45(v28, v27);
      _os_log_impl(&dword_1D4271000, v30, v31, "FMImageCache: Failed to load cached image from disk: %s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v33, -1, -1);
      MEMORY[0x1D9447730](v32, -1, -1);
    }
    else
    {

      long long v36 = v45;
      v45(v28, v27);
    }
    v36(v19, v27);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v47, 1, 1);
  }
  else
  {
    v45(v19, v18);
    uint64_t v38 = v47;
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v47, v25, v3);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v38, 0, 1, v3);
  }
}

BOOL static FMImageCacheError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FMImageCacheError.hash(into:)()
{
  return sub_1D446A838();
}

uint64_t FMImageCacheError.hashValue.getter()
{
  return sub_1D446A888();
}

unint64_t sub_1D43A6EF4()
{
  return 0xD00000000000001BLL;
}

uint64_t FMImageCache.__allocating_init(converter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  FMImageCache.init(converter:)(a1, a2);
  return v4;
}

uint64_t sub_1D43A6F60@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v113 = a5;
  uint64_t v107 = a4;
  uint64_t v111 = (void (*)(char *))a3;
  uint64_t v7 = *a1;
  uint64_t v8 = *(void *)(*a1 + 96);
  sub_1D42DB55C(&qword_1EA6C9360);
  uint64_t v9 = sub_1D446A8A8();
  uint64_t v103 = *(void *)(v9 - 8);
  uint64_t v104 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  char v102 = (char *)&v93 - v11;
  uint64_t v12 = *(void *)(v7 + 80);
  uint64_t v110 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v95 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v99 = (char *)&v93 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v96 = (char *)&v93 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v105 = (char *)&v93 - v19;
  uint64_t v109 = (void (*)(uint64_t, uint8_t *, uint64_t))sub_1D446A168();
  uint64_t v114 = *((void *)v109 - 1);
  uint64_t v20 = MEMORY[0x1F4188790](v109);
  uint64_t v98 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  unint64_t v112 = (char *)&v93 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v93 - v25;
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v24);
  char v106 = (uint8_t *)&v93 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  os_log_type_t v31 = (char *)&v93 - v30;
  uint64_t v97 = a1 + 6;
  swift_beginAccess();
  uint64_t v32 = a1[6];
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v33 = *(char **)(AssociatedConformanceWitness + 16);
  swift_bridgeObjectRetain();
  uint64_t v115 = v12;
  MEMORY[0x1D9445E10](a2, v32, v12, v8, v33);
  swift_bridgeObjectRelease();
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  if (v34((uint64_t)v26, 1, v8) == 1)
  {
    uint64_t v105 = v33;
    uint64_t v108 = v27;
    unint64_t v35 = *(void (**)(char *, void (*)(uint64_t, uint8_t *, uint64_t)))(v114 + 8);
    v114 += 8;
    v35(v26, v109);
    uint64_t v36 = (uint64_t)v112;
    sub_1D43A68C4((uint64_t)v112);
    int v37 = v34(v36, 1, v8);
    uint64_t v38 = v8;
    uint64_t v100 = (uint8_t *)a2;
    if (v37 == 1)
    {
      v35(v112, v109);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v39 = v115;
      char v40 = sub_1D4469F58();
      swift_bridgeObjectRelease();
      uint64_t v41 = v108;
      if ((v40 & 1) == 0)
      {
        if (qword_1EBD80068 != -1) {
          swift_once();
        }
        uint64_t v42 = sub_1D4469928();
        sub_1D42D7FAC(v42, (uint64_t)qword_1EBD83228);
        uint64_t v43 = v110;
        int v44 = v95;
        (*(void (**)(char *, uint8_t *, uint64_t))(v110 + 16))(v95, v100, v39);
        int v45 = sub_1D44698F8();
        os_log_type_t v46 = sub_1D446A038();
        if (os_log_type_enabled(v45, v46))
        {
          uint64_t v47 = (uint8_t *)swift_slowAlloc();
          uint64_t v114 = swift_slowAlloc();
          uint64_t v118 = v114;
          *(_DWORD *)uint64_t v47 = 136315138;
          uint64_t v48 = sub_1D446A768();
          uint64_t v116 = sub_1D42CB9EC(v48, v49, &v118);
          uint64_t v41 = v108;
          sub_1D446A188();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v43 + 8))(v95, v115);
          _os_log_impl(&dword_1D4271000, v45, v46, "FMImageCache: Cached data for request: %s not found, regenerating.", v47, 0xCu);
          uint64_t v50 = v114;
          swift_arrayDestroy();
          MEMORY[0x1D9447730](v50, -1, -1);
          MEMORY[0x1D9447730](v47, -1, -1);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v39);
        }

        sub_1D43A6458((uint64_t)v100, (uint64_t)v111, v107);
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v113, 1, 1, v38);
    }
    else
    {
      uint64_t v67 = v108;
      long long v68 = *(void (**)(uint64_t, uint8_t *, uint64_t))(v108 + 32);
      uint64_t v69 = (uint64_t)v112;
      uint64_t v114 = v8;
      unint64_t v112 = (char *)(v108 + 32);
      uint64_t v109 = v68;
      v68((uint64_t)v106, (uint8_t *)v69, v8);
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v70 = sub_1D4469928();
      sub_1D42D7FAC(v70, (uint64_t)qword_1EBD83228);
      uint64_t v71 = v110;
      long long v72 = v96;
      uint64_t v73 = v115;
      uint64_t v95 = *(char **)(v110 + 16);
      ((void (*)(char *, uint8_t *, uint64_t))v95)(v96, v100, v115);
      long long v74 = sub_1D44698F8();
      os_log_type_t v75 = sub_1D4469FF8();
      if (os_log_type_enabled(v74, v75))
      {
        uint64_t v76 = (uint8_t *)swift_slowAlloc();
        uint64_t v94 = swift_slowAlloc();
        v117[0] = v94;
        *(_DWORD *)uint64_t v76 = 136315138;
        uint64_t v77 = sub_1D446A768();
        uint64_t v118 = sub_1D42CB9EC(v77, v78, v117);
        uint64_t v73 = v115;
        uint64_t v67 = v108;
        sub_1D446A188();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
        _os_log_impl(&dword_1D4271000, v74, v75, "FMImageCache: Found cached data for request: %s in disk cache.", v76, 0xCu);
        uint64_t v79 = v94;
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v79, -1, -1);
        MEMORY[0x1D9447730](v76, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
      }

      uint64_t v85 = v106;
      ((void (*)(char *, uint8_t *, uint64_t))v95)(v99, v100, v73);
      char v86 = *(void (**)(char *, uint8_t *, uint64_t))(v67 + 16);
      uint64_t v87 = v98;
      uint64_t v88 = v114;
      v86(v98, v85, v114);
      uint64_t v110 = *(void *)(v67 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v110)(v87, 0, 1, v88);
      swift_beginAccess();
      sub_1D4469A98();
      sub_1D4469AB8();
      swift_endAccess();
      uint64_t v89 = v111;
      if (v111)
      {
        uint64_t v90 = v102;
        v86(v102, v85, v88);
        uint64_t v91 = v104;
        swift_storeEnumTagMultiPayload();
        v89(v90);
        (*(void (**)(char *, uint64_t))(v103 + 8))(v90, v91);
      }
      uint64_t v92 = v113;
      v109(v113, v85, v88);
      return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v110)(v92, 0, 1, v88);
    }
  }
  else
  {
    uint64_t v51 = *(void (**)(uint64_t, uint8_t *, uint64_t))(v27 + 32);
    unint64_t v112 = (char *)(v27 + 32);
    uint64_t v109 = v51;
    v51((uint64_t)v31, (uint8_t *)v26, v8);
    uint64_t v52 = v8;
    int v53 = v31;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_1D4469928();
    sub_1D42D7FAC(v54, (uint64_t)qword_1EBD83228);
    uint64_t v55 = v110;
    uint64_t v56 = v105;
    uint64_t v57 = v115;
    (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v105, a2, v115);
    int v58 = sub_1D44698F8();
    os_log_type_t v59 = sub_1D4469FF8();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      uint64_t v114 = v52;
      uint64_t v62 = v61;
      v117[0] = v61;
      uint64_t v108 = v27;
      char v106 = v60;
      *(_DWORD *)uint64_t v60 = 136315138;
      uint64_t v100 = v60 + 4;
      uint64_t v63 = sub_1D446A768();
      uint64_t v118 = sub_1D42CB9EC(v63, v64, v117);
      uint64_t v27 = v108;
      sub_1D446A188();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
      long long v65 = v106;
      _os_log_impl(&dword_1D4271000, v58, v59, "FMImageCache: Found cached data for request: %s in memory cache.", v106, 0xCu);
      swift_arrayDestroy();
      uint64_t v66 = v62;
      uint64_t v52 = v114;
      MEMORY[0x1D9447730](v66, -1, -1);
      MEMORY[0x1D9447730](v65, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
    }

    uint64_t v80 = v111;
    if (v111)
    {
      uint64_t v81 = v102;
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v102, v53, v52);
      uint64_t v82 = v104;
      swift_storeEnumTagMultiPayload();
      v80(v81);
      (*(void (**)(char *, uint64_t))(v103 + 8))(v81, v82);
    }
    uint64_t v83 = v113;
    v109(v113, (uint8_t *)v53, v52);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v83, 0, 1, v52);
  }
}

void sub_1D43A7C70(void *a1)
{
  v54[7] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v52 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D4469498();
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v44 - v9;
  swift_getAssociatedConformanceWitness();
  uint64_t v11 = sub_1D4469A28();
  swift_beginAccess();
  a1[4] = v11;
  swift_bridgeObjectRelease();
  swift_getTupleTypeMetadata2();
  sub_1D4469DD8();
  uint64_t v12 = sub_1D4469A88();
  swift_beginAccess();
  a1[6] = v12;
  swift_bridgeObjectRelease();
  id v51 = self;
  id v13 = objc_msgSend(v51, sel_defaultManager);
  (*(void (**)(void))(*a1 + 160))();
  uint64_t v14 = (void *)sub_1D4469428();
  unint64_t v49 = (void (*)(char *, uint64_t))v5[1];
  uint64_t v50 = v5 + 1;
  v49(v10, v4);
  v54[0] = 0;
  id v15 = objc_msgSend(v13, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v14, 0, 5, v54);

  id v16 = v54[0];
  if (!v15)
  {
    uint64_t v32 = v16;
    uint64_t v33 = (void *)sub_1D44693D8();

    swift_willThrow();
LABEL_13:
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1D4469928();
    sub_1D42D7FAC(v35, (uint64_t)qword_1EBD83228);
    id v36 = v33;
    id v37 = v33;
    uint64_t v38 = sub_1D44698F8();
    os_log_type_t v39 = sub_1D446A038();
    if (os_log_type_enabled(v38, v39))
    {
      char v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = (void *)swift_slowAlloc();
      v54[0] = v41;
      *(_DWORD *)char v40 = 136315138;
      swift_getErrorValue();
      uint64_t v42 = sub_1D446A7D8();
      uint64_t v53 = sub_1D42CB9EC(v42, v43, (uint64_t *)v54);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v38, v39, "FMImageCache: Error deleting file : %s", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v41, -1, -1);
      MEMORY[0x1D9447730](v40, -1, -1);
    }
    else
    {
    }
    return;
  }
  uint64_t v17 = sub_1D4469D78();

  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v20 = (void (*)(char *, unint64_t, uint64_t))v5[2];
    uint64_t v19 = v5 + 2;
    uint64_t v47 = v20;
    unint64_t v21 = (*((unsigned __int8 *)v19 + 64) + 32) & ~(unint64_t)*((unsigned __int8 *)v19 + 64);
    v44[2] = v17;
    unint64_t v22 = v17 + v21;
    uint64_t v45 = v19[7];
    unint64_t v23 = (unint64_t)(v19 + 5);
    os_log_type_t v46 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 4);
    uint64_t v48 = v19;
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v19 + 2);
    v44[1] = v23 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v25 = v52;
    uint64_t v26 = v8;
    while (1)
    {
      v47(v25, v22, v4);
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v23;
      (*(void (**)(char *, void, uint64_t, uint64_t))v23)(v25, 0, 1, v4);
      if ((*v46)(v25, 1, v4) == 1)
      {
        swift_bridgeObjectRelease();
        return;
      }
      (*v24)(v26, v25, v4);
      id v28 = objc_msgSend(v51, sel_defaultManager);
      uint64_t v29 = (void *)sub_1D4469428();
      v54[0] = 0;
      unsigned int v30 = objc_msgSend(v28, sel_removeItemAtURL_error_, v29, v54);

      if (!v30) {
        break;
      }
      id v31 = v54[0];
      v49(v26, v4);
      v22 += v45;
      --v18;
      uint64_t v25 = v52;
      if (!v18) {
        goto LABEL_10;
      }
    }
    id v34 = v54[0];
    swift_bridgeObjectRelease();
    uint64_t v33 = (void *)sub_1D44693D8();

    swift_willThrow();
    v49(v26, v4);
    goto LABEL_13;
  }
  uint64_t v27 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v5[7];
  uint64_t v25 = v52;
LABEL_10:
  v27(v25, 1, 1, v4);
  swift_bridgeObjectRelease();
}

uint64_t sub_1D43A834C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v6 = (void *)*a1;
  uint64_t v7 = *(void *)(*a1 + 80);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  uint64_t v26 = (char *)&v21 - v10;
  uint64_t v24 = v9 + 40;
  swift_beginAccess();
  uint64_t v11 = a1[5];
  uint64_t v12 = v6[12];
  swift_bridgeObjectRetain();
  sub_1D42DB55C(&qword_1EA6C9360);
  sub_1D446A8A8();
  swift_getFunctionTypeMetadata1();
  uint64_t v13 = sub_1D4469E48();
  uint64_t v14 = v6[13];
  uint64_t v15 = v6[11];
  uint64_t v16 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v25 = a2;
  MEMORY[0x1D9445E10](v27, a2, v11, v7, v13, v16);
  swift_bridgeObjectRelease();
  uint64_t v17 = v27[0];
  if (!v27[0]) {
    uint64_t v17 = sub_1D4469DD8();
  }
  uint64_t v28 = v17;
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = v7;
  v18[3] = v15;
  uint64_t v18[4] = v12;
  v18[5] = v14;
  uint64_t v19 = v23;
  v18[6] = v22;
  v18[7] = v19;
  v27[0] = sub_1D43A9964;
  v27[1] = v18;
  swift_retain();
  sub_1D4469E28();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v26, v25, v7);
  v27[3] = v28;
  swift_beginAccess();
  sub_1D4469A98();
  sub_1D4469AB8();
  return swift_endAccess();
}

uint64_t sub_1D43A85F4(void (**a1)(char *), char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = TupleTypeMetadata2 - 8;
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v11 = (_OWORD *)((char *)&v20 - v10);
  sub_1D42DB55C(&qword_1EA6C9360);
  uint64_t v12 = sub_1D446A8A8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v20 - v14;
  uint64_t v21 = *a1;
  uint64_t v16 = *(int *)(v9 + 56);
  uint64_t v17 = (char *)v11 + v16;
  *uint64_t v11 = *(_OWORD *)a2;
  uint64_t v18 = *(void *)(a5 - 8);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v17, &a2[v16], a5);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v17, a5);
  swift_storeEnumTagMultiPayload();
  v21(v15);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1D43A87F0(void (**a1)(char *), void *a2)
{
  sub_1D42DB55C(&qword_1EA6C9360);
  uint64_t v4 = sub_1D446A8A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = *a1;
  *(uint64_t *)((char *)&v11 - v6) = (uint64_t)a2;
  swift_storeEnumTagMultiPayload();
  id v9 = a2;
  v8(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1D43A8910(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v75 = a4;
  uint64_t v74 = a3;
  v83[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = *a1;
  uint64_t v6 = sub_1D4469498();
  uint64_t v80 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  long long v72 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v71 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v71 - v14;
  uint64_t v77 = *(void (**)(void))(v5 + 160);
  ((void (*)(uint64_t))v77)(v13);
  uint64_t v16 = *(void *)(v5 + 80);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(v16, AssociatedConformanceWitness);
  unint64_t v78 = v15;
  sub_1D4469448();
  swift_bridgeObjectRelease();
  uint64_t v71 = v7;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v18 = (void (*)(void))(v7 + 8);
  v19(v12, v6);
  char v82 = 0;
  uint64_t v20 = self;
  id v21 = objc_msgSend(v20, sel_defaultManager);
  uint64_t v73 = a1;
  uint64_t v22 = v77;
  v77();
  sub_1D4469478();
  uint64_t v79 = v19;
  v19(v12, v80);
  uint64_t v23 = v20;
  uint64_t v24 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  LOBYTE(v15) = objc_msgSend(v21, sel_fileExistsAtPath_isDirectory_, v24, &v82);

  if (v15) {
    goto LABEL_3;
  }
  id v25 = objc_msgSend(v20, sel_defaultManager);
  v22();
  uint64_t v26 = (void *)sub_1D4469428();
  v79(v12, v80);
  v83[0] = 0;
  unsigned int v27 = objc_msgSend(v25, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v26, 1, 0, v83);

  id v28 = v83[0];
  if (v27)
  {
LABEL_3:
    uint64_t v29 = v78;
    id v30 = v76;
    sub_1D44694F8();
    id v31 = v30;
    if (!v30)
    {
      uint64_t v32 = v18;
      id v33 = objc_msgSend(v23, (SEL)&off_1E69E6338 + 3);
      sub_1D42D5DA0(qword_1EBD7D9F8);
      uint64_t inited = swift_initStackObject();
      uint64_t v35 = (void **)MEMORY[0x1E4F28370];
      *(_OWORD *)(inited + 16) = xmmword_1D446E050;
      id v36 = *v35;
      *(void *)(inited + 32) = *v35;
      id v37 = (void *)*MEMORY[0x1E4F28358];
      type metadata accessor for FileProtectionType(0);
      *(void *)(inited + 64) = v38;
      *(void *)(inited + 40) = v37;
      id v39 = v36;
      id v40 = v37;
      sub_1D43AAA74(inited);
      type metadata accessor for FileAttributeKey(0);
      sub_1D42DDB1C((unint64_t *)&unk_1EBD7D930, type metadata accessor for FileAttributeKey);
      uint64_t v41 = (void *)sub_1D4469A38();
      swift_bridgeObjectRelease();
      sub_1D4469478();
      uint64_t v42 = (void *)sub_1D4469B08();
      swift_bridgeObjectRelease();
      v83[0] = 0;
      unsigned int v43 = objc_msgSend(v33, sel_setAttributes_ofItemAtPath_error_, v41, v42, v83);

      if (v43)
      {
        id v44 = v83[0];
        return ((uint64_t (*)(char *, uint64_t))v79)(v29, v80);
      }
      id v60 = v83[0];
      id v31 = (void *)sub_1D44693D8();

      swift_willThrow();
      uint64_t v18 = v32;
    }
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_1D4469928();
    sub_1D42D7FAC(v61, (uint64_t)qword_1EBD83228);
    id v62 = v31;
    id v63 = v31;
    unint64_t v64 = sub_1D44698F8();
    os_log_type_t v65 = sub_1D446A018();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v77 = v18;
      uint64_t v66 = (uint8_t *)swift_slowAlloc();
      uint64_t v67 = (void *)swift_slowAlloc();
      v83[0] = v67;
      *(_DWORD *)uint64_t v66 = 136315138;
      swift_getErrorValue();
      uint64_t v68 = sub_1D446A7D8();
      uint64_t v81 = sub_1D42CB9EC(v68, v69, (uint64_t *)v83);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v64, v65, "FMImageCache: Could not save objects to disk %s", v66, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v67, -1, -1);
      MEMORY[0x1D9447730](v66, -1, -1);
    }
    else
    {
    }
    return ((uint64_t (*)(char *, uint64_t))v79)(v29, v80);
  }
  else
  {
    os_log_type_t v46 = v28;
    uint64_t v47 = (void *)sub_1D44693D8();

    swift_willThrow();
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_1D4469928();
    sub_1D42D7FAC(v48, (uint64_t)qword_1EBD83228);
    unint64_t v49 = v72;
    uint64_t v50 = v78;
    uint64_t v51 = v80;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v72, v78, v80);
    uint64_t v52 = sub_1D44698F8();
    os_log_type_t v53 = sub_1D446A038();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v77 = v18;
      uint64_t v54 = swift_slowAlloc();
      id v76 = v47;
      uint64_t v55 = (uint8_t *)v54;
      uint64_t v56 = (void *)swift_slowAlloc();
      v83[0] = v56;
      *(_DWORD *)uint64_t v55 = 136315138;
      sub_1D42DDB1C(&qword_1EA6CA838, MEMORY[0x1E4F276F0]);
      uint64_t v57 = sub_1D446A6D8();
      uint64_t v81 = sub_1D42CB9EC(v57, v58, (uint64_t *)v83);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      os_log_type_t v59 = (uint64_t (*)(char *, uint64_t))v79;
      v79(v49, v51);
      _os_log_impl(&dword_1D4271000, v52, v53, "FMImageCache: Could not create directory for content: %s", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v56, -1, -1);
      MEMORY[0x1D9447730](v55, -1, -1);

      return v59(v78, v51);
    }
    else
    {

      uint64_t v70 = (uint64_t (*)(char *, uint64_t))v79;
      v79(v49, v51);
      return v70(v50, v51);
    }
  }
}

uint64_t FMImageCache.__deallocating_deinit()
{
  FMImageCache.deinit();
  return swift_deallocClassInstance();
}

void *sub_1D43A9264(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_1D446A4D8();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_1D43A9308@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1D43A9338@<X0>(uint64_t a1@<X8>)
{
  return sub_1D43A6F60(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

void sub_1D43A9358()
{
  sub_1D43A7C70(v0);
}

uint64_t sub_1D43A9360()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_1D43A9374()
{
  unint64_t result = qword_1EA6CA7B0[0];
  if (!qword_1EA6CA7B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA6CA7B0);
  }
  return result;
}

uint64_t dispatch thunk of FMImageCacheRequest.fileName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FMImageCacheOperation.init(request:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

unsigned char *storeEnumTagSinglePayload for FMImageCacheError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43A94BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMImageCacheError()
{
  return &type metadata for FMImageCacheError;
}

uint64_t method lookup function for FMImageCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMImageCache);
}

uint64_t dispatch thunk of FMImageCache.cacheRoot.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of FMImageCache.__allocating_init(converter:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of FMImageCache.cachedImage(for:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of FMImageCache.purge()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of FMImageCache.forwardToDelegate(request:result:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t sub_1D43A95C8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1D43A96AC()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80);
  unint64_t v2 = (*(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64) + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D43A834C(*(void **)(v0 + 48), v0 + v1, *(void *)(v0 + v2), *(void *)(v0 + v2 + 8));
}

uint64_t sub_1D43A971C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D43A972C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D43A9764()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D43A9828()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release();
  sub_1D42D9898(*(id *)(v0 + v5), *(void *)(v0 + v5 + 8), *(unsigned char *)(v0 + v5 + 16));
  return MEMORY[0x1F4186498](v0, v5 + 17, v4);
}

uint64_t sub_1D43A98E4(void (**a1)(char *))
{
  return sub_1D43A87F0(a1, *(void **)(v1 + 48));
}

uint64_t sub_1D43A9908(void (**a1)(char *))
{
  return sub_1D43A85F4(a1, *(char **)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1D43A992C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1D43A9964()
{
  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_1D43A998C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, v5 + 16, v3 | 7);
}

uint64_t type metadata accessor for FMIPRepairRequest()
{
  uint64_t result = qword_1EA6CA840;
  if (!qword_1EA6CA840) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D43A9AB8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D43A9B08()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + qword_1EA6E48B0) + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v10 = v3;
  *((void *)&v10 + 1) = v2;
  uint64_t v4 = qword_1EA6C9D80;
  uint64_t v5 = *(void *)(v0 + qword_1EA6C9D80);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  sub_1D433313C((void *)(v5 + 16), v9);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  swift_release();
  sub_1D42C5494(&v10, v9);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D42C4E78(v9, 0x656369766564, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v0 + v4);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  sub_1D4306B48((void *)(v7 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43A9C58()
{
  return swift_release();
}

uint64_t sub_1D43A9C68()
{
  sub_1D427B074();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43A9CDC()
{
  return type metadata accessor for FMIPRepairRequest();
}

char sub_1D43A9CE4@<W0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7CE38);
  char result = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 56);
  if (!v7) {
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for FMIPDevice();
    sub_1D43AA090(v7+ *(int *)(v9 + 124)+ ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80)), (uint64_t)v6);
    uint64_t v10 = type metadata accessor for FMIPEraseMetadata();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v6, 1, v10) == 1)
    {
      char result = sub_1D43AA0F8((uint64_t)v6);
LABEL_5:
      LOBYTE(v8) = 0;
      goto LABEL_8;
    }
    uint64_t v11 = *v6;
    sub_1D430CAB8((uint64_t)v6);
    char result = FMIPActionStatus.init(rawValue:)(qword_1D4473168[v11]).value;
    LOBYTE(v8) = v13;
    if (v13 == 18) {
      LOBYTE(v8) = 0;
    }
  }
LABEL_8:
  *a1 = v8;
  return result;
}

uint64_t sub_1D43A9E3C(uint64_t a1)
{
  return sub_1D43A9E88(a1);
}

uint64_t sub_1D43A9E88(uint64_t a1)
{
  sub_1D42A4D5C(a1, (uint64_t)v13);
  uint64_t v3 = sub_1D432C7E4(v13);
  if (!v1)
  {
    uint64_t v4 = qword_1EBD80068;
    swift_retain();
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1D4469928();
    sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
    swift_retain();
    uint64_t v6 = sub_1D44698F8();
    os_log_type_t v7 = sub_1D446A038();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      v13[0] = v9;
      uint64_t v10 = sub_1D432CBAC();
      v13[6] = sub_1D42CB9EC(v10, v11, v13);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v6, v7, "FMIPEraseResponse: initialized with coder %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v9, -1, -1);
      MEMORY[0x1D9447730](v8, -1, -1);
    }
    else
    {
      swift_release_n();
    }
  }
  sub_1D42BEC64(a1);
  return v3;
}

uint64_t type metadata accessor for FMIPEraseResponse()
{
  return self;
}

uint64_t sub_1D43AA090(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7CE38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D43AA0F8(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7CE38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D43AA158(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EA6CA9D8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    os_log_type_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1D42D5DA0(&qword_1EA6CA9E0);
  uint64_t v6 = sub_1D446A4C8();
  os_log_type_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D42A3A74(v12, (uint64_t)v5, &qword_1EA6CA9D8);
    unint64_t result = sub_1D43AEE98((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1D4469688();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D43AA34C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1D42D5DA0(&qword_1EA6C9488);
  uint64_t v2 = (void *)sub_1D446A4C8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    os_log_type_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1D42C4FCC(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D43AA468(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1D42D5DA0(&qword_1EA6CAA40);
  uint64_t v2 = (void *)sub_1D446A4C8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 40);
  while (1)
  {
    long long v11 = *v4;
    id v5 = *((id *)v4 - 1);
    unint64_t result = sub_1D43AEF30((uint64_t)v5);
    if (v7) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v5;
    *(_OWORD *)(v2[7] + 16 * result) = v11;
    uint64_t v8 = v2[2];
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      goto LABEL_11;
    }
    v2[2] = v10;
    uint64_t v4 = (_OWORD *)((char *)v4 + 24);
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D43AA578(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1D42D5DA0(&qword_1EA6CAA48);
  uint64_t v2 = (void *)sub_1D446A4C8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_1D43AEF30((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D43AA678(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EA6CA9B8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1D42D5DA0(&qword_1EA6CA9C0);
  uint64_t v6 = sub_1D446A4C8();
  char v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D42A3A74(v12, (uint64_t)v5, &qword_1EA6CA9B8);
    unint64_t result = sub_1D43AEE98((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1D4469688();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D43AA86C(uint64_t a1)
{
  return sub_1D43AAEF4(a1, &qword_1EA6CA9A8, &qword_1EA6CA9B0);
}

unint64_t sub_1D43AA880(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EA6CA998);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1D42D5DA0(&qword_1EA6CA9A0);
  uint64_t v6 = sub_1D446A4C8();
  char v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D42A3A74(v12, (uint64_t)v5, &qword_1EA6CA998);
    unint64_t result = sub_1D43AEE98((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1D4469688();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(unsigned char *)(v7[7] + v16) = v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D43AAA74(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1D42D5DA0(&qword_1EBD7CB48);
  uint64_t v2 = sub_1D446A4C8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D42A3A74(v6, (uint64_t)&v13, (uint64_t *)&unk_1EBD7D958);
    uint64_t v7 = v13;
    unint64_t result = sub_1D43AEF30(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1D42C5494(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D43AABA4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1D42D5DA0(&qword_1EA6CAA08);
  uint64_t v2 = (void *)sub_1D446A4C8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1D43AF084((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D43AACB0(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EA6CAA60);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    id v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1D42D5DA0(&qword_1EA6CAA68);
  uint64_t v6 = sub_1D446A4C8();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D42A3A74(v12, (uint64_t)v5, &qword_1EA6CAA60);
    unint64_t result = sub_1D43AEE98((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1D4469688();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7];
    uint64_t v20 = type metadata accessor for FMIPDeviceLostModeMetadata();
    unint64_t result = sub_1D43BA040(v9, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D43AAEE0(uint64_t a1)
{
  return sub_1D43AAEF4(a1, &qword_1EA6CAA50, &qword_1EA6CAA58);
}

unint64_t sub_1D43AAEF4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = sub_1D42D5DA0(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    unint64_t v11 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1D42D5DA0(a3);
  uint64_t v10 = sub_1D446A4C8();
  unint64_t v11 = (void *)v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  uint64_t v13 = *(int *)(v6 + 48);
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v26[1] = a1;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_1D42A3A74(v16, (uint64_t)v9, a2);
    unint64_t result = sub_1D43AEE98((uint64_t)v9);
    if (v19) {
      break;
    }
    unint64_t v20 = result;
    *(void *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v21 = v11[6];
    uint64_t v22 = sub_1D4469688();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, v9, v22);
    *(unsigned char *)(v11[7] + v20) = v9[v13];
    uint64_t v23 = v11[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    _OWORD v11[2] = v25;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D43AB0E0(uint64_t a1)
{
  return sub_1D427937C(a1, &qword_1EA6CA960, &qword_1EA6CA968);
}

uint64_t FMIPUnknownItem.init(unknownItem:locations:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (int *)type metadata accessor for FMIPUnknownItem();
  *(unsigned char *)(a3 + v6[15]) = *(unsigned char *)(a1 + v6[15]);
  *(void *)(a3 + v6[13]) = *(void *)(a1 + v6[13]);
  uint64_t v7 = v6[6];
  uint64_t v8 = *(void *)(a1 + v7);
  uint64_t v9 = *(void *)(a1 + v7 + 8);
  uint64_t v10 = (void *)(a3 + v7);
  *uint64_t v10 = v8;
  v10[1] = v9;
  uint64_t v11 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a3, a1, v11);
  *(unsigned char *)(a3 + v6[16]) = *(unsigned char *)(a1 + v6[16]);
  *(unsigned char *)(a3 + v6[7]) = *(unsigned char *)(a1 + v6[7]);
  uint64_t v21 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D43B09A0(&v21);
  swift_bridgeObjectRelease();
  *(void *)(a3 + v6[8]) = v21;
  sub_1D43B9ED0(a1 + v6[9], a3 + v6[9], (uint64_t (*)(void))type metadata accessor for FMIPProductType);
  *(unsigned char *)(a3 + v6[10]) = *(unsigned char *)(a1 + v6[10]);
  *(void *)(a3 + v6[14]) = *(void *)(a1 + v6[14]);
  uint64_t v12 = v6[12];
  uint64_t v13 = *(void **)(a1 + v12);
  *(void *)(a3 + v12) = v13;
  sub_1D42A3A74(a1 + v6[11], a3 + v6[11], &qword_1EA6CA850);
  uint64_t v14 = v6[5];
  uint64_t v15 = *(void *)(a1 + v14);
  uint64_t v16 = *(void *)(a1 + v14 + 8);
  uint64_t v17 = (void *)(a3 + v14);
  void *v17 = v15;
  v17[1] = v16;
  *(unsigned char *)(a3 + v6[17]) = *(unsigned char *)(a1 + v6[17]);
  char v18 = *(unsigned char *)(a1 + v6[18]);
  id v19 = v13;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D43B9F38(a1, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  *(unsigned char *)(a3 + v6[18]) = v18;
  return result;
}

uint64_t FMIPItemType.rawValue.getter()
{
  return *(void *)v0;
}

FMIPCore::FMIPItemType __swiftcall FMIPItemType.init(rawValue:)(FMIPCore::FMIPItemType rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FMIPItemType.none.getter(void *a1@<X8>)
{
  *a1 = 0;
}

void static FMIPItemType.selfBeaconing.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static FMIPItemType.durian.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static FMIPItemType.accessory.getter(void *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1D43AB2F8()
{
  return sub_1D446A888();
}

uint64_t sub_1D43AB340()
{
  return sub_1D446A838();
}

uint64_t sub_1D43AB36C()
{
  return sub_1D446A888();
}

FMIPCore::FMIPUnknownItemAlertState_optional __swiftcall FMIPUnknownItemAlertState.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 5;
  if ((unint64_t)rawValue < 5) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (FMIPCore::FMIPUnknownItemAlertState_optional)rawValue;
}

uint64_t FMIPUnknownItemAlertState.rawValue.getter()
{
  return *v0;
}

FMIPCore::FMIPUnknownItemAlertState_optional sub_1D43AB3CC(Swift::Int *a1)
{
  return FMIPUnknownItemAlertState.init(rawValue:)(*a1);
}

uint64_t sub_1D43AB3D4()
{
  return sub_1D4469D28();
}

uint64_t sub_1D43AB434()
{
  return sub_1D4469D08();
}

FMIPCore::FMIPUnknownItemObservationType_optional __swiftcall FMIPUnknownItemObservationType.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (FMIPCore::FMIPUnknownItemObservationType_optional)rawValue;
}

uint64_t FMIPUnknownItemObservationType.rawValue.getter()
{
  return *v0;
}

uint64_t sub_1D43AB4A8()
{
  return sub_1D4469D28();
}

uint64_t sub_1D43AB508()
{
  return sub_1D4469D08();
}

uint64_t FMIPUnknownItem.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D4469688();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t FMIPUnknownItem.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPUnknownItem() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPUnknownItem.handle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPUnknownItem() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPUnknownItem.isIgnored.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMIPUnknownItem() + 28));
}

uint64_t FMIPUnknownItem.locations.getter()
{
  type metadata accessor for FMIPUnknownItem();
  return swift_bridgeObjectRetain();
}

uint64_t FMIPUnknownItem.productType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMIPUnknownItem();
  return sub_1D43B9ED0(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
}

uint64_t FMIPUnknownItem.observationType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FMIPUnknownItem();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t FMIPUnknownItem.utMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMIPUnknownItem();
  return sub_1D42A3A74(v1 + *(int *)(v3 + 44), a1, &qword_1EA6CA850);
}

void *FMIPUnknownItem.unknownBeacon.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for FMIPUnknownItem() + 48));
  id v2 = v1;
  return v1;
}

uint64_t FMIPUnknownItem.capabilities.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = type metadata accessor for FMIPUnknownItem();
  *a1 = *(void *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t FMIPUnknownItem.state.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = type metadata accessor for FMIPUnknownItem();
  *a1 = *(void *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t FMIPUnknownItem.alertState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FMIPUnknownItem();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t FMIPUnknownItem.isAppleAudioAccessory.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMIPUnknownItem() + 64));
}

uint64_t FMIPUnknownItem.isFindMyNetwork.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMIPUnknownItem() + 68));
}

uint64_t FMIPUnknownItem.isPosh.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMIPUnknownItem() + 72));
}

void *FMIPUnknownItem.isRequestable.getter()
{
  uint64_t v1 = type metadata accessor for FMIPUnknownItem();
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + *(int *)(v2 + 48));
  if (v5)
  {
    unint64_t v6 = (unint64_t)objc_msgSend(v5, sel_capabilities);
    sub_1D43B9ED0(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v7 = (void *)((v6 >> 13) & 1);
  }
  else
  {
    sub_1D43B9ED0(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v9 = *(void **)&v4[*(int *)(v1 + 48)];
    if (v9)
    {
      id v10 = objc_msgSend(v9, sel_metadata);
      uint64_t v7 = v10;
      if (v10)
      {
        unint64_t v11 = (unint64_t)objc_msgSend(v10, sel_capabilities);

        uint64_t v7 = (void *)((v11 >> 13) & 1);
      }
    }
    else
    {
      uint64_t v7 = 0;
    }
  }
  sub_1D43B9F38((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  return v7;
}

unint64_t sub_1D43AB9D8(char a1)
{
  unint64_t result = 0x6174537472656C61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696C696261706163;
      break;
    case 2:
      unint64_t result = 0x656C646E6168;
      break;
    case 3:
      unint64_t result = 0x696669746E656469;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0x65726F6E67497369;
      break;
    case 6:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 7:
      unint64_t result = 1701667182;
      break;
    case 8:
      unint64_t result = 0x54746375646F7270;
      break;
    case 9:
      unint64_t result = 0x746176726573626FLL;
      break;
    case 10:
      unint64_t result = 0x6574617473;
      break;
    case 11:
      unint64_t result = 0x426E776F6E6B6E75;
      break;
    case 12:
      unint64_t result = 0x61646174654D7475;
      break;
    case 13:
      unint64_t result = 0x794D646E69467369;
      break;
    case 14:
      unint64_t result = 0x68736F507369;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D43ABBE0(char a1)
{
  unint64_t result = 0x6174537472656C61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696C696261706163;
      break;
    case 2:
      unint64_t result = 0x656C646E6168;
      break;
    case 3:
      unint64_t result = 0x696669746E656469;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0x65726F6E67497369;
      break;
    case 6:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 7:
      unint64_t result = 1701667182;
      break;
    case 8:
      unint64_t result = 0x54746375646F7270;
      break;
    case 9:
      unint64_t result = 0x746176726573626FLL;
      break;
    case 10:
      unint64_t result = 0x6574617473;
      break;
    case 11:
      unint64_t result = 0x426E776F6E6B6E75;
      break;
    case 12:
      unint64_t result = 0x61646174654D7475;
      break;
    case 13:
      unint64_t result = 0x794D646E69467369;
      break;
    case 14:
      unint64_t result = 0x68736F507369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D43ABDE8(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1D43AB9D8(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1D43AB9D8(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D43ABE74()
{
  char v1 = *v0;
  sub_1D446A828();
  sub_1D43AB9D8(v1);
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  return sub_1D446A888();
}

uint64_t sub_1D43ABED8()
{
  sub_1D43AB9D8(*v0);
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43ABF2C()
{
  char v1 = *v0;
  sub_1D446A828();
  sub_1D43AB9D8(v1);
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  return sub_1D446A888();
}

uint64_t sub_1D43ABF8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43B9BD8();
  *a1 = result;
  return result;
}

unint64_t sub_1D43ABFBC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1D43AB9D8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1D43ABFE8()
{
  return sub_1D43ABBE0(*v0);
}

uint64_t sub_1D43ABFF0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43B9BD8();
  *a1 = result;
  return result;
}

void sub_1D43AC018(unsigned char *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_1D43AC024(uint64_t a1)
{
  unint64_t v2 = sub_1D43B089C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D43AC060(uint64_t a1)
{
  unint64_t v2 = sub_1D43B089C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPUnknownItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = type metadata accessor for FMIPUnknownItemUTMetadata();
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v50 = &v35[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v54 = type metadata accessor for FMIPProductType();
  MEMORY[0x1F4188790](v54);
  uint64_t v51 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1D4469688();
  uint64_t v52 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v8 = &v35[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1D42D5DA0(&qword_1EA6CA858);
  uint64_t v53 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = &v35[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = (int *)type metadata accessor for FMIPUnknownItem();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = &v35[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = a1[3];
  uint64_t v55 = a1;
  sub_1D42C26F4(a1, v15);
  sub_1D43B089C();
  uint64_t v16 = v56;
  sub_1D446A8C8();
  if (!v16)
  {
    uint64_t v56 = v14;
    uint64_t v45 = v6;
    os_log_type_t v46 = v8;
    uint64_t v17 = v53;
    char v59 = 0;
    sub_1D43B08F0();
    sub_1D446A5D8();
    int v18 = v57;
    char v59 = 1;
    sub_1D4347668();
    sub_1D446A5D8();
    int v58 = v18;
    uint64_t v20 = v57;
    LOBYTE(v57) = 2;
    uint64_t v21 = sub_1D446A598();
    uint64_t v42 = v20;
    uint64_t v43 = v21;
    uint64_t v44 = v22;
    LOBYTE(v57) = 3;
    sub_1D42AAEB8(&qword_1EA6C9FD8, MEMORY[0x1E4F27990]);
    sub_1D446A5D8();
    LOBYTE(v57) = 4;
    int v41 = sub_1D446A5A8();
    LOBYTE(v57) = 5;
    int v40 = sub_1D446A5A8();
    sub_1D42D5DA0(&qword_1EA6CA870);
    char v59 = 6;
    sub_1D43B3F8C(&qword_1EA6CA878, (void (*)(void))sub_1D42D75CC);
    sub_1D446A5D8();
    uint64_t v39 = v57;
    LOBYTE(v57) = 7;
    uint64_t v37 = sub_1D446A598();
    uint64_t v38 = v23;
    LOBYTE(v57) = 8;
    sub_1D42AAEB8(&qword_1EA6CA880, (void (*)(uint64_t))type metadata accessor for FMIPProductType);
    sub_1D446A5D8();
    char v59 = 9;
    sub_1D43B0944();
    uint64_t v54 = v9;
    BOOL v24 = v11;
    sub_1D446A5D8();
    LOBYTE(v20) = v57;
    LOBYTE(v57) = 12;
    sub_1D42AAEB8(&qword_1EA6CA890, (void (*)(uint64_t))type metadata accessor for FMIPUnknownItemUTMetadata);
    sub_1D446A5D8();
    LOBYTE(v57) = 13;
    char v25 = sub_1D446A5A8();
    LOBYTE(v57) = 14;
    int v36 = sub_1D446A5A8();
    uint64_t v26 = v56;
    v56[v12[15]] = v58;
    *(void *)&v26[v12[13]] = v42;
    unsigned int v27 = (uint64_t *)&v26[v12[6]];
    uint64_t v29 = v44;
    uint64_t v28 = v45;
    *unsigned int v27 = v43;
    v27[1] = v29;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v52 + 16))(v26, v46, v28);
    v26[v12[16]] = v41 & 1;
    v26[v12[7]] = v40 & 1;
    uint64_t v57 = v39;
    swift_bridgeObjectRetain();
    sub_1D43B09A0(&v57);
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t)v56;
    *(void *)&v56[v12[8]] = v57;
    id v31 = (uint64_t *)(v30 + v12[5]);
    uint64_t v32 = v38;
    uint64_t *v31 = v37;
    v31[1] = v32;
    id v33 = v51;
    sub_1D43B9ED0((uint64_t)v51, v30 + v12[9], (uint64_t (*)(void))type metadata accessor for FMIPProductType);
    *(unsigned char *)(v30 + v12[10]) = v20;
    sub_1D43B9F38((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
    (*(void (**)(unsigned char *, uint64_t))(v52 + 8))(v46, v45);
    (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v24, v54);
    *(void *)(v30 + v12[14]) = 0;
    *(void *)(v30 + v12[12]) = 0;
    uint64_t v34 = v30 + v12[11];
    sub_1D43BA040((uint64_t)v50, v34, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v34, 0, 1, v49);
    *(unsigned char *)(v30 + v12[17]) = v25 & 1;
    *(unsigned char *)(v30 + v12[18]) = v36 & 1;
    sub_1D43BA040(v30, v47, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  }
  return sub_1D42BEC64((uint64_t)v55);
}

void FMIPUnknownItem.init(with:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D42D5DA0(&qword_1EA6CA110);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D4473200;
  uint64_t v5 = (void *)*MEMORY[0x1E4F97D68];
  *(void *)(inited + 32) = *MEMORY[0x1E4F97D68];
  *(void *)(inited + 40) = 4;
  uint64_t v6 = (void *)*MEMORY[0x1E4F97D30];
  *(void *)(inited + 48) = *MEMORY[0x1E4F97D30];
  *(void *)(inited + 56) = 256;
  uint64_t v7 = (void *)*MEMORY[0x1E4F97D40];
  *(void *)(inited + 64) = *MEMORY[0x1E4F97D40];
  *(void *)(inited + 72) = 64;
  id v8 = v5;
  id v9 = v6;
  id v10 = v7;
  unint64_t v11 = sub_1D43AA578(inited);
  sub_1D43B3960(v11, (void (*)(void *__return_ptr))sub_1D43B0998);
  uint64_t v114 = v12;
  swift_bridgeObjectRelease();
  sub_1D42D5DA0(&qword_1EA6CA108);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1D446E050;
  *(void *)(v13 + 32) = v8;
  *(_OWORD *)(v13 + 40) = xmmword_1D4471250;
  id v14 = v8;
  unint64_t v15 = sub_1D43AA468(v13);
  sub_1D43B3CC0(v15, (void (*)(void *__return_ptr))sub_1D43B3BCC);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  v122[0] = (uint64_t)qword_1F2C01158;
  sub_1D43AE948(v17);
  int v18 = qword_1F2C01158;
  id v19 = v14;
  id v117 = a1;
  id v20 = objc_msgSend(a1, sel_taskInformation);
  type metadata accessor for SPBeaconTaskName(0);
  sub_1D4275AD0(0, &qword_1EA6CA118);
  sub_1D42AAEB8((unint64_t *)&qword_1EA6C92C8, type metadata accessor for SPBeaconTaskName);
  uint64_t v21 = sub_1D4469A58();

  if (*(void *)(v21 + 16) && (unint64_t v22 = sub_1D43AEF30((uint64_t)v19), (v23 & 1) != 0))
  {
    id v24 = *(id *)(*(void *)(v21 + 56) + 8 * v22);

    swift_bridgeObjectRelease();
    id v25 = objc_msgSend(v24, sel_state);

    if (v25 == (id)4)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v18 = sub_1D43AFFC8(0, qword_1F2C01158[2] + 1, 1, qword_1F2C01158, &qword_1EA6CAA38);
      }
      unint64_t v27 = v18[2];
      unint64_t v26 = v18[3];
      if (v27 >= v26 >> 1) {
        int v18 = sub_1D43AFFC8((void *)(v26 > 1), v27 + 1, 1, v18, &qword_1EA6CAA38);
      }
      void v18[2] = v27 + 1;
      v18[v27 + 4] = 2048;
    }
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  if (!objc_msgSend(a1, sel_connected)) {
    goto LABEL_15;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_74;
  }
  while (1)
  {
    unint64_t v29 = v18[2];
    unint64_t v28 = v18[3];
    if (v29 >= v28 >> 1) {
      int v18 = sub_1D43AFFC8((void *)(v28 > 1), v29 + 1, 1, v18, &qword_1EA6CAA38);
    }
    void v18[2] = v29 + 1;
    v18[v29 + 4] = 64;
LABEL_15:
    id v30 = objc_msgSend(a1, sel_beaconLocations);
    sub_1D4275AD0(0, &qword_1EA6CA898);
    unint64_t v31 = sub_1D4469D78();

    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1D446A498();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v115 = v18;
    uint64_t v116 = a2;
    uint64_t v113 = v19;
    if (!v32)
    {
      uint64_t v34 = (void *)MEMORY[0x1E4FBC860];
      goto LABEL_30;
    }
    if (v32 >= 1) {
      break;
    }
    __break(1u);
LABEL_74:
    int v18 = sub_1D43AFFC8(0, v18[2] + 1, 1, v18, &qword_1EA6CAA38);
  }
  uint64_t v33 = 0;
  unint64_t v118 = v31 & 0xC000000000000001;
  uint64_t v34 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v119 = v32;
  unint64_t v120 = v31;
  do
  {
    if (v118) {
      id v35 = (id)MEMORY[0x1D9446710](v33, v31);
    }
    else {
      id v35 = *(id *)(v31 + 8 * v33 + 32);
    }
    id v36 = v35;
    FMIPLocation.init(beaconLocation:)(v36, (uint64_t)v122);
    char v37 = v122[0];
    char v38 = BYTE1(v122[0]);
    char v39 = BYTE2(v122[0]);
    char v40 = BYTE3(v122[0]);
    uint64_t v41 = v122[1];
    uint64_t v42 = v122[2];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v34 = sub_1D43AFC34(0, v34[2] + 1, 1, v34);
    }
    unint64_t v44 = v34[2];
    unint64_t v43 = v34[3];
    if (v44 >= v43 >> 1) {
      uint64_t v34 = sub_1D43AFC34((void *)(v43 > 1), v44 + 1, 1, v34);
    }
    void v34[2] = v44 + 1;
    uint64_t v45 = &v34[3 * v44];
    *((unsigned char *)v45 + 32) = v37;
    ++v33;
    *((unsigned char *)v45 + 33) = v38;
    *((unsigned char *)v45 + 34) = v39;
    *((unsigned char *)v45 + 35) = v40;
    v45[5] = v41;
    v45[6] = v42;

    unint64_t v31 = v120;
  }
  while (v119 != v33);
LABEL_30:
  swift_bridgeObjectRelease();
  id v46 = objc_msgSend(v117, sel_name);
  uint64_t v47 = sub_1D4469B38();
  uint64_t v49 = v48;

  uint64_t v50 = (int *)type metadata accessor for FMIPUnknownItem();
  uint64_t v51 = (uint64_t *)(v116 + v50[5]);
  *uint64_t v51 = v47;
  v51[1] = v49;
  uint64_t v52 = *(void *)(v114 + 16);
  if (v52)
  {
    uint64_t v53 = 0;
    uint64_t v54 = (uint64_t *)(v114 + 32);
    do
    {
      uint64_t v56 = *v54++;
      uint64_t v55 = v56;
      if ((v56 & ~v53) == 0) {
        uint64_t v55 = 0;
      }
      v53 |= v55;
      --v52;
    }
    while (v52);
  }
  else
  {
    uint64_t v53 = 0;
  }
  swift_bridgeObjectRelease();
  *(void *)(v116 + v50[13]) = v53;
  id v57 = objc_msgSend(v117, sel_identifier);
  sub_1D4469668();

  *(unsigned char *)(v116 + v50[16]) = objc_msgSend(v117, sel_isAppleAudioAccessory);
  v122[0] = (uint64_t)v34;
  swift_bridgeObjectRetain_n();
  sub_1D43B09A0(v122);
  swift_bridgeObjectRelease_n();
  *(void *)(v116 + v50[8]) = v122[0];
  id v58 = objc_msgSend(v117, sel_handle);
  char v59 = v58;
  if (v58)
  {
    id v60 = objc_msgSend(v58, sel_destination);

    char v59 = (void *)sub_1D4469B38();
    uint64_t v62 = v61;
  }
  else
  {
    uint64_t v62 = 0;
  }
  id v63 = (void *)(v116 + v50[6]);
  *id v63 = v59;
  v63[1] = v62;
  *(unsigned char *)(v116 + v50[7]) = objc_msgSend(v117, sel_isIgnored);
  uint64_t v64 = v116 + v50[9];
  id v65 = v117;
  sub_1D4300E0C(v65, v64);
  id v66 = objc_msgSend(v65, sel_observationType);
  if (v66)
  {
    if (v66 != (id)1)
    {
      sub_1D446A488();
      __break(1u);
      return;
    }
    char v67 = 1;
  }
  else
  {
    char v67 = 0;
  }
  *(unsigned char *)(v116 + v50[10]) = v67;
  id v68 = objc_msgSend(v65, sel_alertState);
  if ((unint64_t)v68 >= 5) {
    char v69 = 4;
  }
  else {
    char v69 = (char)v68;
  }
  *(unsigned char *)(v116 + v50[15]) = v69;
  *(unsigned char *)(v116 + v50[17]) = objc_msgSend(v65, sel_isFindMyNetwork);
  *(unsigned char *)(v116 + v50[18]) = objc_msgSend(v65, sel_isPosh);
  id v70 = objc_msgSend(v65, sel_productInformation);
  uint64_t v71 = v50[11];
  uint64_t v72 = v116 + v71;
  if (v70)
  {
    FMIPUnknownItemUTMetadata.init(productInfo:)(v70, (uint64_t *)(v116 + v71));
    uint64_t v73 = type metadata accessor for FMIPUnknownItemUTMetadata();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v72, 0, 1, v73);
  }
  else
  {
    uint64_t v74 = type metadata accessor for FMIPUnknownItemUTMetadata();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v72, 1, 1, v74);
  }
  *(void *)(v116 + v50[12]) = v65;
  uint64_t v75 = v115[2];
  if (v75)
  {
    uint64_t v76 = 0;
    uint64_t v77 = v115 + 4;
    do
    {
      uint64_t v79 = *v77++;
      uint64_t v78 = v79;
      if ((v79 & ~v76) == 0) {
        uint64_t v78 = 0;
      }
      v76 |= v78;
      --v75;
    }
    while (v75);
  }
  else
  {
    uint64_t v76 = 0;
  }
  id v80 = v65;
  swift_bridgeObjectRelease();
  *(void *)(v116 + v50[14]) = v76;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v81 = sub_1D4469928();
  sub_1D42D7FAC(v81, (uint64_t)qword_1EBD83228);
  id v82 = v80;
  uint64_t v83 = sub_1D44698F8();
  os_log_type_t v84 = sub_1D446A038();
  if (os_log_type_enabled(v83, v84))
  {
    uint64_t v85 = swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    v122[0] = v86;
    *(_DWORD *)uint64_t v85 = 136316162;
    id v87 = objc_msgSend(v82, sel_productInformation);
    if (v87)
    {
      uint64_t v88 = v87;
      id v89 = objc_msgSend(v87, sel_modelName);

      uint64_t v90 = sub_1D4469B38();
      unint64_t v92 = v91;
    }
    else
    {
      unint64_t v92 = 0xE300000000000000;
      uint64_t v90 = 7104878;
    }
    sub_1D42CB9EC(v90, v92, v122);
    sub_1D446A188();

    swift_bridgeObjectRelease();
    *(_WORD *)(v85 + 12) = 1024;
    objc_msgSend(v82, sel_isFindMyNetwork);

    sub_1D446A188();
    *(_WORD *)(v85 + 18) = 2080;
    id v93 = v113;
    id v94 = objc_msgSend(v82, sel_taskInformation);
    uint64_t v95 = sub_1D4469A58();

    os_log_type_t v121 = v84;
    if (*(void *)(v95 + 16))
    {
      unint64_t v96 = sub_1D43AEF30((uint64_t)v93);
      if (v97) {
        id v98 = *(id *)(*(void *)(v95 + 56) + 8 * v96);
      }
    }

    swift_bridgeObjectRelease();
    sub_1D42D5DA0(&qword_1EA6CA128);
    uint64_t v99 = sub_1D4469B68();
    sub_1D42CB9EC(v99, v100, v122);
    sub_1D446A188();

    swift_bridgeObjectRelease();
    *(_WORD *)(v85 + 28) = 2080;
    id v101 = (id)*MEMORY[0x1E4F97D88];
    id v102 = objc_msgSend(v82, sel_taskInformation);
    uint64_t v103 = sub_1D4469A58();

    if (*(void *)(v103 + 16))
    {
      unint64_t v104 = sub_1D43AEF30((uint64_t)v101);
      if (v105) {
        id v106 = *(id *)(*(void *)(v103 + 56) + 8 * v104);
      }
    }

    swift_bridgeObjectRelease();
    uint64_t v107 = sub_1D4469B68();
    sub_1D42CB9EC(v107, v108, v122);
    sub_1D446A188();

    swift_bridgeObjectRelease();
    *(_WORD *)(v85 + 38) = 2080;
    id v109 = objc_msgSend(v82, sel_taskInformation);
    sub_1D4469A58();

    uint64_t v110 = sub_1D4469A68();
    unint64_t v112 = v111;
    swift_bridgeObjectRelease();
    sub_1D42CB9EC(v110, v112, v122);
    sub_1D446A188();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v83, v121, "FMIPUnknownItem: Initialized model: %s\nFMIPUnknownItem: isFindMyNetwork: %{BOOL}d\nFMIPUnknownItem: taskInfo -> play sound %s\nFMIPUnknownItem: taskInfo -> stop sound %s\nFMIPUnknownItem: allTaskInfo ->  %s", (uint8_t *)v85, 0x30u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v86, -1, -1);
    MEMORY[0x1D9447730](v85, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1D43AD728@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a2;
  id v7 = a1;
  id v8 = objc_msgSend(a3, sel_taskInformation);
  type metadata accessor for SPBeaconTaskName(0);
  sub_1D4275AD0(0, &qword_1EA6CA118);
  sub_1D42AAEB8((unint64_t *)&qword_1EA6C92C8, type metadata accessor for SPBeaconTaskName);
  uint64_t v9 = sub_1D4469A58();

  if (*(void *)(v9 + 16))
  {
    sub_1D43AEF30((uint64_t)v7);
    if (v10) {
      uint64_t v11 = v6;
    }
    else {
      uint64_t v11 = 0;
    }
    char v12 = v10 ^ 1;
  }
  else
  {
    uint64_t v11 = 0;
    char v12 = 1;
  }

  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a4 = v11;
  *(unsigned char *)(a4 + 8) = v12 & 1;
  return result;
}

void sub_1D43AD83C(void *a1@<X0>, id a2@<X1>, uint64_t *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *a3;
  id v9 = a1;
  id v10 = objc_msgSend(a4, sel_taskInformation);
  type metadata accessor for SPBeaconTaskName(0);
  sub_1D4275AD0(0, &qword_1EA6CA118);
  sub_1D42AAEB8((unint64_t *)&qword_1EA6C92C8, type metadata accessor for SPBeaconTaskName);
  uint64_t v11 = sub_1D4469A58();

  if (!*(void *)(v11 + 16) || (unint64_t v12 = sub_1D43AEF30((uint64_t)v9), (v13 & 1) == 0))
  {

    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  id v14 = *(id *)(*(void *)(v11 + 56) + 8 * v12);

  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v14, sel_state);

  if (v15 != a2)
  {
LABEL_6:
    uint64_t v8 = 0;
    char v16 = 1;
    goto LABEL_7;
  }
  char v16 = 0;
LABEL_7:
  *(void *)a5 = v8;
  *(unsigned char *)(a5 + 8) = v16;
}

uint64_t FMIPUnknownItem.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA8A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43B089C();
  sub_1D446A8E8();
  id v9 = (int *)type metadata accessor for FMIPUnknownItem();
  LOBYTE(v11) = *(unsigned char *)(v3 + v9[15]);
  char v12 = 0;
  sub_1D43B3F38();
  sub_1D446A698();
  if (!v2)
  {
    *(void *)&long long v11 = *(void *)(v3 + v9[13]);
    char v12 = 1;
    sub_1D4352D90();
    sub_1D446A698();
    long long v11 = *(_OWORD *)(v3 + v9[6]);
    char v12 = 2;
    sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
    sub_1D42BD508();
    sub_1D446A698();
    LOBYTE(v11) = 3;
    sub_1D4469688();
    sub_1D42AAEB8(&qword_1EA6C9FE0, MEMORY[0x1E4F27990]);
    sub_1D446A698();
    LOBYTE(v11) = 4;
    sub_1D446A668();
    LOBYTE(v11) = 5;
    sub_1D446A668();
    *(void *)&long long v11 = *(void *)(v3 + v9[8]);
    char v12 = 6;
    sub_1D42D5DA0(&qword_1EA6CA870);
    sub_1D43B3F8C(&qword_1EA6CA8B0, (void (*)(void))sub_1D42E6A58);
    sub_1D446A698();
    LOBYTE(v11) = 8;
    type metadata accessor for FMIPProductType();
    sub_1D42AAEB8(&qword_1EA6CA8B8, (void (*)(uint64_t))type metadata accessor for FMIPProductType);
    sub_1D446A698();
    LOBYTE(v11) = *(unsigned char *)(v3 + v9[10]);
    char v12 = 9;
    sub_1D43B3FFC();
    sub_1D446A698();
    LOBYTE(v11) = 10;
    sub_1D446A688();
    LOBYTE(v11) = 12;
    sub_1D42D5DA0(&qword_1EA6CA850);
    sub_1D43B4050();
    sub_1D446A698();
    LOBYTE(v11) = 7;
    sub_1D446A658();
    LOBYTE(v11) = 13;
    sub_1D446A668();
    LOBYTE(v11) = 14;
    sub_1D446A668();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FMIPUnknownItem.debugDescription.getter()
{
  sub_1D446A378();
  sub_1D4469C08();
  sub_1D4469C08();
  sub_1D4469C08();
  sub_1D4469688();
  sub_1D42AAEB8((unint64_t *)&qword_1EA6C92C0, MEMORY[0x1E4F27990]);
  sub_1D446A6D8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v1 = type metadata accessor for FMIPUnknownItem();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  if (*(void *)(*(void *)(v0 + *(int *)(v1 + 32)) + 16)) {
    FMIPLocation.debugDescription.getter();
  }
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  type metadata accessor for FMIPProductType();
  sub_1D446A458();
  sub_1D4469C08();
  sub_1D446A458();
  sub_1D4469C08();
  uint64_t v2 = (void *)sub_1D4469D58();
  id v3 = objc_msgSend(v2, sel_description);
  sub_1D4469B38();

  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D446A458();
  sub_1D4469C08();
  sub_1D446A458();
  sub_1D4469C08();
  sub_1D446A458();
  sub_1D4469C08();
  return 0;
}

uint64_t FMIPUnknownItem.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FMIPUnknownItemUTMetadata();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D42D5DA0(&qword_1EA6CA850);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4469688();
  sub_1D42AAEB8(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
  sub_1D4469AD8();
  long long v11 = (int *)type metadata accessor for FMIPUnknownItem();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + v11[6] + 8))
  {
    sub_1D446A848();
    swift_bridgeObjectRetain();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D446A848();
  }
  sub_1D446A848();
  uint64_t v12 = *(void *)(v1 + v11[8]);
  swift_bridgeObjectRetain();
  sub_1D43B1C04(a1, v12);
  swift_bridgeObjectRelease();
  FMIPProductType.hash(into:)();
  sub_1D446A838();
  sub_1D42A3A74(v2 + v11[11], (uint64_t)v10, &qword_1EA6CA850);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1D446A848();
  }
  else
  {
    sub_1D43BA040((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    sub_1D446A848();
    FMIPUnknownItemUTMetadata.hash(into:)();
    sub_1D43B9F38((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
  }
  char v13 = *(void **)(v2 + v11[12]);
  sub_1D446A848();
  if (v13)
  {
    id v14 = v13;
    sub_1D446A128();
  }
  sub_1D446A838();
  sub_1D446A838();
  sub_1D446A838();
  sub_1D446A848();
  sub_1D446A848();
  return sub_1D446A848();
}

uint64_t FMIPUnknownItem.hashValue.getter()
{
  sub_1D446A828();
  FMIPUnknownItem.hash(into:)((uint64_t)v1);
  return sub_1D446A888();
}

uint64_t sub_1D43AE734@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPUnknownItem.init(from:)(a1, a2);
}

uint64_t sub_1D43AE74C(void *a1)
{
  return FMIPUnknownItem.encode(to:)(a1);
}

uint64_t sub_1D43AE768()
{
  sub_1D446A828();
  FMIPUnknownItem.hash(into:)((uint64_t)v1);
  return sub_1D446A888();
}

uint64_t sub_1D43AE7AC()
{
  sub_1D446A828();
  FMIPUnknownItem.hash(into:)((uint64_t)v1);
  return sub_1D446A888();
}

uint64_t sub_1D43AE7EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  id v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  id v3 = sub_1D43AFC34(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D43AE948(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  id v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  id v3 = sub_1D43AFFC8(isUniquelyReferenced_nonNull_native, v14, 1, v3, &qword_1EA6CAA38);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D43AEA98(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  id v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  id v3 = sub_1D43B0268(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D43AEBEC(uint64_t a1)
{
  return sub_1D43AECC4(a1, &qword_1EA6CA590, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
}

uint64_t sub_1D43AEC34(uint64_t a1)
{
  return sub_1D43AECC4(a1, &qword_1EA6C9E70, (uint64_t (*)(void))type metadata accessor for FMIPItem, (uint64_t (*)(void))type metadata accessor for FMIPItem, (uint64_t (*)(void))type metadata accessor for FMIPItem);
}

uint64_t sub_1D43AEC7C(uint64_t a1)
{
  return sub_1D43AECC4(a1, &qword_1EBD7D9F0, (uint64_t (*)(void))type metadata accessor for FMIPDevice, (uint64_t (*)(void))type metadata accessor for FMIPDevice, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
}

uint64_t sub_1D43AECC4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *v5;
  int64_t v8 = *(void *)(*v5 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v9 <= *(void *)(v7 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v8 <= v9) {
    int64_t v30 = v8 + v6;
  }
  else {
    int64_t v30 = v8;
  }
  unint64_t v7 = sub_1D42CABA0(isUniquelyReferenced_nonNull_native, v30, 1, v7, a2, a3, a4);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v6) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v16 = *(void *)(v7 + 16);
  uint64_t v17 = (*(void *)(v7 + 24) >> 1) - v16;
  uint64_t v18 = *(void *)(a5(0) - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  if (v17 < v6)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v21 = v7 + v20 + v19 * v16;
  unint64_t v22 = a1 + v20;
  uint64_t v23 = v19 * v6;
  unint64_t v24 = v21 + v23;
  unint64_t v25 = v22 + v23;
  if (v22 < v24 && v21 < v25) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v6)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *int64_t v5 = v7;
    return result;
  }
  uint64_t v27 = *(void *)(v7 + 16);
  BOOL v28 = __OFADD__(v27, v6);
  uint64_t v29 = v27 + v6;
  if (!v28)
  {
    *(void *)(v7 + 16) = v29;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

unint64_t sub_1D43AEE98(uint64_t a1)
{
  sub_1D4469688();
  sub_1D42AAEB8(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
  uint64_t v2 = sub_1D4469AC8();
  return sub_1D43AF138(a1, v2);
}

unint64_t sub_1D43AEF30(uint64_t a1)
{
  sub_1D4469B38();
  sub_1D446A828();
  sub_1D4469BC8();
  uint64_t v2 = sub_1D446A888();
  swift_bridgeObjectRelease();
  return sub_1D43AF2F8(a1, v2);
}

unint64_t sub_1D43AEFC4(void *a1)
{
  sub_1D446A828();
  FMReverseGeocodingRequest.hash(into:)();
  uint64_t v2 = sub_1D446A888();
  return sub_1D43AF470(a1, v2);
}

unint64_t sub_1D43AF030(uint64_t a1)
{
  uint64_t v2 = sub_1D446A2E8();
  return sub_1D43AF9F0(a1, v2);
}

unint64_t sub_1D43AF084(uint64_t a1)
{
  sub_1D446A828();
  type metadata accessor for CFString(0);
  sub_1D42AAEB8(&qword_1EA6CAA10, type metadata accessor for CFString);
  sub_1D44698D8();
  uint64_t v2 = sub_1D446A888();
  return sub_1D43AFAD8(a1, v2);
}

unint64_t sub_1D43AF138(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1D4469688();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_1D42AAEB8(&qword_1EA6CA0E8, MEMORY[0x1E4F27990]);
      char v15 = sub_1D4469AF8();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_1D43AF2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1D4469B38();
    uint64_t v8 = v7;
    if (v6 == sub_1D4469B38() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1D446A758();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1D4469B38();
          uint64_t v15 = v14;
          if (v13 == sub_1D4469B38() && v15 == v16) {
            break;
          }
          char v18 = sub_1D446A758();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1D43AF470(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D44696C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v40 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1D42D5DA0(&qword_1EA6C9CA8);
  MEMORY[0x1F4188790](v49);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v50 = (uint64_t)&v38 - v15;
  uint64_t v51 = (int *)type metadata accessor for FMReverseGeocodingRequest();
  MEMORY[0x1F4188790](v51);
  char v18 = (uint64_t *)((char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v20 = a2 & ~v19;
  uint64_t v53 = v3 + 64;
  if ((*(void *)(v3 + 64 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
  {
    uint64_t v52 = ~v19;
    uint64_t v47 = (uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v48 = v6;
    uint64_t v21 = *(void *)(v16 + 72);
    char v39 = (void (**)(char *, uint64_t, uint64_t))(v7 + 32);
    uint64_t v42 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    unint64_t v43 = v10;
    uint64_t v45 = v21;
    uint64_t v46 = v3;
    unint64_t v44 = a1;
    uint64_t v41 = v14;
    do
    {
      sub_1D43B9ED0(*(void *)(v3 + 48) + v21 * v20, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      BOOL v22 = *v18 == *a1 && v18[1] == a1[1];
      if (!v22 && (sub_1D446A758() & 1) == 0) {
        goto LABEL_5;
      }
      sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7D970);
      if ((sub_1D446A118() & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v23 = v51[6];
      uint64_t v24 = (uint64_t)v18 + v23;
      uint64_t v25 = (uint64_t)a1 + v23;
      uint64_t v26 = v50;
      sub_1D42A3A74(v25, v50, (uint64_t *)&unk_1EBD7E560);
      uint64_t v27 = (uint64_t)&v10[*(int *)(v49 + 48)];
      sub_1D42A3A74(v24, (uint64_t)v10, (uint64_t *)&unk_1EBD7E560);
      sub_1D42A3A74(v26, v27, (uint64_t *)&unk_1EBD7E560);
      uint64_t v28 = v48;
      uint64_t v29 = *v47;
      if ((*v47)(v10, 1, v48) == 1)
      {
        sub_1D4276C3C(v26, (uint64_t *)&unk_1EBD7E560);
        int v30 = v29((char *)v27, 1, v28);
        uint64_t v21 = v45;
        uint64_t v3 = v46;
        a1 = v44;
        if (v30 != 1) {
          goto LABEL_4;
        }
        uint64_t v10 = v43;
        sub_1D4276C3C((uint64_t)v43, (uint64_t *)&unk_1EBD7E560);
      }
      else
      {
        uint64_t v31 = (uint64_t)v10;
        uint64_t v32 = (uint64_t)v10;
        uint64_t v33 = (uint64_t)v41;
        sub_1D42A3A74(v32, (uint64_t)v41, (uint64_t *)&unk_1EBD7E560);
        if (v29((char *)v27, 1, v28) == 1)
        {
          sub_1D4276C3C(v50, (uint64_t *)&unk_1EBD7E560);
          (*v42)(v33, v28);
          uint64_t v21 = v45;
          uint64_t v3 = v46;
          a1 = v44;
LABEL_4:
          uint64_t v10 = v43;
          sub_1D4276C3C((uint64_t)v43, &qword_1EA6C9CA8);
          goto LABEL_5;
        }
        uint64_t v34 = v40;
        (*v39)(v40, v27, v28);
        sub_1D42AAEB8(&qword_1EA6C9CB0, MEMORY[0x1E4F27A78]);
        char v35 = sub_1D4469AF8();
        id v36 = *v42;
        (*v42)((uint64_t)v34, v28);
        sub_1D4276C3C(v50, (uint64_t *)&unk_1EBD7E560);
        v36(v33, v28);
        sub_1D4276C3C(v31, (uint64_t *)&unk_1EBD7E560);
        uint64_t v21 = v45;
        uint64_t v3 = v46;
        uint64_t v10 = (char *)v31;
        a1 = v44;
        if ((v35 & 1) == 0) {
          goto LABEL_5;
        }
      }
      if (*((unsigned __int8 *)v18 + v51[7]) == *((unsigned __int8 *)a1 + v51[7])
        && *((unsigned __int8 *)v18 + v51[8]) == *((unsigned __int8 *)a1 + v51[8]))
      {
        sub_1D43B9F38((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        return v20;
      }
LABEL_5:
      sub_1D43B9F38((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      unint64_t v20 = (v20 + 1) & v52;
    }
    while (((*(void *)(v53 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) != 0);
  }
  return v20;
}

unint64_t sub_1D43AF9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1D43B9E20(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1D9446660](v9, a1);
      sub_1D43B9E7C((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1D43AFAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_1D42AAEB8(&qword_1EA6CAA10, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_1D44698C8();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_1D44698C8();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

void *sub_1D43AFC34(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1D42D5DA0(&qword_1EA6C9ED8);
      id v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1D43B1F94(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D43AFD5C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D42CABA0(a1, a2, a3, a4, &qword_1EA6CA9D0, type metadata accessor for FMIPBeaconShareStateOverride, type metadata accessor for FMIPBeaconShareStateOverride);
}

void *sub_1D43AFD90(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1D42D5DA0(&qword_1EA6CAA70);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D43B3BD4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1D43AFEA0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1D42D5DA0(&qword_1EA6CAA78);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D43B99F0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1D43AFFB0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D43AFFC8(a1, a2, a3, a4, &qword_1EA6CAA38);
}

void *sub_1D43AFFBC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D43AFFC8(a1, a2, a3, a4, &qword_1EA6CAA20);
}

void *sub_1D43AFFC8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_1D42D5DA0(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      _OWORD v11[2] = v9;
      void v11[3] = 2 * (v13 >> 3);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4]) {
          memmove(v14, a4 + 4, 8 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D43B3BD4(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D43B00D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D42CABA0(a1, a2, a3, a4, &qword_1EA6CA590, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
}

uint64_t sub_1D43B0108(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D42CABA0(a1, a2, a3, a4, &qword_1EA6C9E70, (uint64_t (*)(void))type metadata accessor for FMIPItem, (uint64_t (*)(void))type metadata accessor for FMIPItem);
}

void *sub_1D43B013C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1D42D5DA0(&qword_1EA6C9EC0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 352);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[44 * v8 + 4]) {
          memmove(v12, a4 + 4, 352 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1D43B9AE4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1D43B0268(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1D42D5DA0(&qword_1EBD80060);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D43B9814(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1D43B0378(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D43B0408(a1, a2, a3, a4, &qword_1EA6CA9C8, &qword_1EA6C9E30);
}

uint64_t sub_1D43B038C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D42CABA0(a1, a2, a3, a4, &qword_1EA6C9EB8, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
}

uint64_t sub_1D43B03C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D42CABA0(a1, a2, a3, a4, &qword_1EA6CAA18, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
}

void *sub_1D43B03F4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D43B0408(a1, a2, a3, a4, &qword_1EA6C9EA8, &qword_1EA6C9EB0);
}

void *sub_1D43B0408(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_1D42D5DA0(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      _OWORD v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D43B9C24(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

char *sub_1D43B0524(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_1D42D5DA0(&qword_1EA6CA990);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1D43B9908(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D43B0620(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D42CABA0(a1, a2, a3, a4, &qword_1EA6CAA28, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
}

void *sub_1D43B0654(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, void (*a6)(void))
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_1D42D5DA0(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      _OWORD v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D42AC2AC(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1D43B0770(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1D42D5DA0(&qword_1EA6C9EF0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4]) {
          memmove(v12, a4 + 4, 88 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1D43B9D2C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_1D43B089C()
{
  unint64_t result = qword_1EA6CA860;
  if (!qword_1EA6CA860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA860);
  }
  return result;
}

unint64_t sub_1D43B08F0()
{
  unint64_t result = qword_1EA6CA868;
  if (!qword_1EA6CA868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA868);
  }
  return result;
}

unint64_t sub_1D43B0944()
{
  unint64_t result = qword_1EA6CA888;
  if (!qword_1EA6CA888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA888);
  }
  return result;
}

uint64_t sub_1D43B0998@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1D43AD728(a1, a2, *(void **)(v3 + 16), a3);
}

void sub_1D43B09A0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1D441CC70(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_1D43B0A0C(v4);
  *a1 = v2;
}

void sub_1D43B0A0C(uint64_t *a1)
{
  uint64_t v149 = sub_1D4469618();
  uint64_t v2 = *(void *)(v149 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v149);
  uint64_t v148 = (char *)&v133 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  int v150 = (char *)&v133 - v5;
  uint64_t v6 = a1[1];
  uint64_t v7 = sub_1D446A6C8();
  if (v7 >= v6)
  {
    if ((v6 & 0x8000000000000000) == 0)
    {
      if (v6) {
        sub_1D43B142C(0, v6, 1, a1);
      }
      return;
    }
    goto LABEL_139;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1)
  {
LABEL_147:
    sub_1D446A478();
    __break(1u);
    return;
  }
  uint64_t v138 = v7;
  uint64_t v135 = a1;
  if (v6 < 2)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    uint64_t v144 = (id *)(MEMORY[0x1E4FBC860] + 32);
    if (v6 != 1)
    {
      unint64_t v15 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      int64_t v14 = (char *)MEMORY[0x1E4FBC860];
      goto LABEL_103;
    }
    uint64_t v137 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    uint64_t v10 = sub_1D4469DE8();
    *(void *)(v10 + 16) = v9;
    uint64_t v137 = v10;
    uint64_t v144 = (id *)(v10 + 32);
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v147 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v136 = v13 + 32;
  uint64_t v134 = v13 + 16;
  int64_t v14 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v141 = v6;
  uint64_t v151 = v13;
  while (1)
  {
    uint64_t v16 = v12 + 1;
    uint64_t v142 = v12;
    if (v12 + 1 < v6)
    {
      unint64_t v139 = v14;
      uint64_t v17 = *(void **)(v13 + 24 * v12 + 8);
      id v18 = *(id *)(v13 + 24 * v16 + 8);
      id v19 = v17;
      id v20 = objc_msgSend(v18, sel_timestamp);
      uint64_t v21 = v150;
      sub_1D44695D8();

      id v22 = objc_msgSend(v19, sel_timestamp);
      uint64_t v23 = v148;
      sub_1D44695D8();

      LODWORD(v146) = sub_1D4469598();
      uint64_t v24 = *v147;
      uint64_t v25 = v23;
      uint64_t v26 = v149;
      (*v147)(v25, v149);
      uint64_t v27 = v26;
      uint64_t v12 = v142;
      v24(v21, v27);

      uint64_t v16 = v12 + 2;
      if (v12 + 2 < v6)
      {
        uint64_t v28 = (void **)(v136 + 24 * v12);
        while (1)
        {
          uint64_t v29 = *v28;
          id v30 = v28[3];
          id v31 = v29;
          id v32 = objc_msgSend(v30, sel_timestamp);
          uint64_t v33 = v150;
          sub_1D44695D8();

          id v34 = objc_msgSend(v31, sel_timestamp);
          char v35 = v148;
          sub_1D44695D8();

          LODWORD(v34) = sub_1D4469598();
          uint64_t v36 = v149;
          v24(v35, v149);
          v24(v33, v36);

          if ((v146 ^ v34)) {
            break;
          }
          v28 += 3;
          uint64_t v6 = v141;
          if (v141 == ++v16)
          {
            uint64_t v16 = v141;
            goto LABEL_23;
          }
        }
        uint64_t v6 = v141;
LABEL_23:
        uint64_t v12 = v142;
      }
      int64_t v14 = v139;
      uint64_t v13 = v151;
      if (v146)
      {
        if (v16 < v12) {
          goto LABEL_140;
        }
        if (v12 < v16)
        {
          uint64_t v37 = 24 * v16;
          uint64_t v38 = 24 * v12;
          uint64_t v39 = v16;
          uint64_t v40 = v12;
          do
          {
            if (v40 != --v39)
            {
              if (!v13) {
                goto LABEL_145;
              }
              uint64_t v41 = v13 + v38;
              char v42 = *(unsigned char *)(v13 + v38);
              uint64_t v43 = v13 + v37;
              char v44 = *(unsigned char *)(v13 + v38 + 1);
              char v45 = *(unsigned char *)(v13 + v38 + 2);
              char v46 = *(unsigned char *)(v13 + v38 + 3);
              uint64_t v47 = *(void *)(v13 + v38 + 8);
              uint64_t v48 = *(void *)(v13 + v38 + 16);
              uint64_t v49 = *(void *)(v13 + v37 - 8);
              *(_OWORD *)uint64_t v41 = *(_OWORD *)(v13 + v37 - 24);
              *(void *)(v41 + 16) = v49;
              *(unsigned char *)(v43 - 24) = v42;
              *(unsigned char *)(v43 - 23) = v44;
              *(unsigned char *)(v43 - 22) = v45;
              *(unsigned char *)(v43 - 21) = v46;
              *(void *)(v43 - 16) = v47;
              *(void *)(v43 - 8) = v48;
            }
            ++v40;
            v37 -= 24;
            v38 += 24;
          }
          while (v40 < v39);
        }
      }
    }
    if (v16 < v6)
    {
      if (__OFSUB__(v16, v12)) {
        goto LABEL_138;
      }
      if (v16 - v12 < v138)
      {
        if (__OFADD__(v12, v138)) {
          goto LABEL_141;
        }
        if (v12 + v138 >= v6) {
          uint64_t v50 = v6;
        }
        else {
          uint64_t v50 = v12 + v138;
        }
        if (v50 < v12) {
          goto LABEL_142;
        }
        if (v16 != v50)
        {
          unint64_t v139 = v14;
          uint64_t v140 = v50;
          uint64_t v51 = v134 + 24 * v16;
          do
          {
            uint64_t v53 = *(void **)(v13 + 24 * v16 + 8);
            uint64_t v143 = v51;
            uint64_t v146 = v16;
            while (1)
            {
              uint64_t v54 = *(void **)(v51 - 32);
              id v55 = v53;
              id v56 = v54;
              id v57 = objc_msgSend(v55, sel_timestamp);
              id v58 = v150;
              sub_1D44695D8();

              id v59 = objc_msgSend(v56, sel_timestamp);
              id v60 = v148;
              sub_1D44695D8();

              LOBYTE(v59) = sub_1D4469598();
              uint64_t v61 = *v147;
              uint64_t v62 = v60;
              uint64_t v63 = v149;
              (*v147)(v62, v149);
              v61(v58, v63);

              if ((v59 & 1) == 0) {
                break;
              }
              uint64_t v13 = v151;
              if (!v151) {
                goto LABEL_143;
              }
              uint64_t v64 = v51 - 16;
              id v65 = (_OWORD *)(v51 - 40);
              uint64_t v66 = *(void *)(v51 - 24);
              *(void *)(v51 - 24) = *(void *)v51;
              v51 -= 24;
              char v67 = *(unsigned char *)(v51 + 8);
              char v68 = *(unsigned char *)(v51 + 9);
              char v69 = *(unsigned char *)(v51 + 10);
              char v70 = *(unsigned char *)(v51 + 11);
              uint64_t v53 = *(void **)(v51 + 16);
              *(_OWORD *)uint64_t v64 = *v65;
              *(void *)(v64 + 16) = v66;
              *(unsigned char *)(v51 - 16) = v67;
              *(unsigned char *)(v51 - 15) = v68;
              *(unsigned char *)(v51 - 14) = v69;
              *(unsigned char *)(v51 - 13) = v70;
              *(void *)(v51 - 8) = v53;
              ++v12;
              uint64_t v52 = v146;
              if (v146 == v12) {
                goto LABEL_44;
              }
            }
            uint64_t v13 = v151;
            uint64_t v52 = v146;
LABEL_44:
            uint64_t v16 = v52 + 1;
            uint64_t v12 = v142;
            uint64_t v51 = v143 + 24;
          }
          while (v16 != v140);
          uint64_t v16 = v140;
          int64_t v14 = v139;
        }
      }
    }
    if (v16 < v12)
    {
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    uint64_t v71 = v14;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      int64_t v14 = v71;
    }
    else {
      int64_t v14 = sub_1D441C918(0, *((void *)v71 + 2) + 1, 1, v71);
    }
    unint64_t v73 = *((void *)v14 + 2);
    unint64_t v72 = *((void *)v14 + 3);
    unint64_t v15 = v73 + 1;
    uint64_t v13 = v151;
    if (v73 >= v72 >> 1)
    {
      uint64_t v123 = sub_1D441C918((char *)(v72 > 1), v73 + 1, 1, v14);
      uint64_t v13 = v151;
      int64_t v14 = v123;
    }
    *((void *)v14 + 2) = v15;
    uint64_t v74 = v14 + 32;
    uint64_t v75 = &v14[16 * v73 + 32];
    *(void *)uint64_t v75 = v12;
    *((void *)v75 + 1) = v16;
    if (v73) {
      break;
    }
    unint64_t v15 = 1;
LABEL_15:
    uint64_t v6 = v141;
    uint64_t v12 = v16;
    if (v16 >= v141)
    {
      uint64_t v11 = v137;
LABEL_103:
      uint64_t v137 = v11;
      uint64_t v125 = v145;
      if (v15 < 2)
      {
LABEL_114:
        swift_bridgeObjectRelease();
        *(void *)(v137 + 16) = 0;
        goto LABEL_115;
      }
      uint64_t v126 = *v135;
      while (1)
      {
        unint64_t v127 = v15 - 2;
        if (v15 < 2) {
          break;
        }
        if (!v126) {
          goto LABEL_146;
        }
        uint64_t v128 = v14;
        uint64_t v129 = *(void *)&v14[16 * v127 + 32];
        uint64_t v130 = *(void *)&v14[16 * v15 + 24];
        sub_1D43B16B0((char *)(v126 + 24 * v129), (id *)(v126 + 24 * *(void *)&v14[16 * v15 + 16]), (id *)(v126 + 24 * v130), v144);
        if (v125)
        {
          uint64_t v124 = v137;
          goto LABEL_100;
        }
        if (v130 < v129) {
          goto LABEL_135;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v128 = sub_1D441CBB0((uint64_t)v128);
        }
        if (v127 >= *((void *)v128 + 2)) {
          goto LABEL_136;
        }
        unint64_t v131 = &v128[16 * v127 + 32];
        *(void *)unint64_t v131 = v129;
        *((void *)v131 + 1) = v130;
        unint64_t v132 = *((void *)v128 + 2);
        if (v15 > v132) {
          goto LABEL_137;
        }
        memmove(&v128[16 * v15 + 16], &v128[16 * v15 + 32], 16 * (v132 - v15));
        int64_t v14 = v128;
        *((void *)v128 + 2) = v132 - 1;
        unint64_t v15 = v132 - 1;
        if (v132 <= 2) {
          goto LABEL_114;
        }
      }
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
      goto LABEL_147;
    }
  }
  while (1)
  {
    unint64_t v76 = v15 - 1;
    if (v15 >= 4)
    {
      uint64_t v81 = &v74[16 * v15];
      uint64_t v82 = *((void *)v81 - 8);
      uint64_t v83 = *((void *)v81 - 7);
      BOOL v87 = __OFSUB__(v83, v82);
      uint64_t v84 = v83 - v82;
      if (v87) {
        goto LABEL_122;
      }
      uint64_t v86 = *((void *)v81 - 6);
      uint64_t v85 = *((void *)v81 - 5);
      BOOL v87 = __OFSUB__(v85, v86);
      uint64_t v79 = v85 - v86;
      char v80 = v87;
      if (v87) {
        goto LABEL_123;
      }
      unint64_t v88 = v15 - 2;
      id v89 = &v74[16 * v15 - 32];
      uint64_t v91 = *(void *)v89;
      uint64_t v90 = *((void *)v89 + 1);
      BOOL v87 = __OFSUB__(v90, v91);
      uint64_t v92 = v90 - v91;
      if (v87) {
        goto LABEL_125;
      }
      BOOL v87 = __OFADD__(v79, v92);
      uint64_t v93 = v79 + v92;
      if (v87) {
        goto LABEL_128;
      }
      if (v93 >= v84)
      {
        unint64_t v111 = &v74[16 * v76];
        uint64_t v113 = *(void *)v111;
        uint64_t v112 = *((void *)v111 + 1);
        BOOL v87 = __OFSUB__(v112, v113);
        uint64_t v114 = v112 - v113;
        if (v87) {
          goto LABEL_132;
        }
        BOOL v104 = v79 < v114;
        goto LABEL_88;
      }
    }
    else
    {
      if (v15 != 3)
      {
        uint64_t v105 = *((void *)v14 + 4);
        uint64_t v106 = *((void *)v14 + 5);
        BOOL v87 = __OFSUB__(v106, v105);
        uint64_t v98 = v106 - v105;
        char v99 = v87;
        goto LABEL_82;
      }
      uint64_t v78 = *((void *)v14 + 4);
      uint64_t v77 = *((void *)v14 + 5);
      BOOL v87 = __OFSUB__(v77, v78);
      uint64_t v79 = v77 - v78;
      char v80 = v87;
    }
    if (v80) {
      goto LABEL_124;
    }
    unint64_t v88 = v15 - 2;
    id v94 = &v74[16 * v15 - 32];
    uint64_t v96 = *(void *)v94;
    uint64_t v95 = *((void *)v94 + 1);
    BOOL v97 = __OFSUB__(v95, v96);
    uint64_t v98 = v95 - v96;
    char v99 = v97;
    if (v97) {
      goto LABEL_127;
    }
    unint64_t v100 = &v74[16 * v76];
    uint64_t v102 = *(void *)v100;
    uint64_t v101 = *((void *)v100 + 1);
    BOOL v87 = __OFSUB__(v101, v102);
    uint64_t v103 = v101 - v102;
    if (v87) {
      goto LABEL_130;
    }
    if (__OFADD__(v98, v103)) {
      goto LABEL_131;
    }
    if (v98 + v103 >= v79)
    {
      BOOL v104 = v79 < v103;
LABEL_88:
      if (v104) {
        unint64_t v76 = v88;
      }
      goto LABEL_90;
    }
LABEL_82:
    if (v99) {
      goto LABEL_126;
    }
    uint64_t v107 = &v74[16 * v76];
    uint64_t v109 = *(void *)v107;
    uint64_t v108 = *((void *)v107 + 1);
    BOOL v87 = __OFSUB__(v108, v109);
    uint64_t v110 = v108 - v109;
    if (v87) {
      goto LABEL_129;
    }
    if (v110 < v98) {
      goto LABEL_15;
    }
LABEL_90:
    unint64_t v115 = v76 - 1;
    if (v76 - 1 >= v15)
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if (!v13) {
      goto LABEL_144;
    }
    uint64_t v116 = v14;
    id v117 = &v74[16 * v115];
    uint64_t v118 = *(void *)v117;
    uint64_t v119 = &v74[16 * v76];
    uint64_t v120 = *((void *)v119 + 1);
    uint64_t v121 = v145;
    sub_1D43B16B0((char *)(v13 + 24 * *(void *)v117), (id *)(v13 + 24 * *(void *)v119), (id *)(v13 + 24 * v120), v144);
    uint64_t v145 = v121;
    if (v121) {
      break;
    }
    if (v120 < v118) {
      goto LABEL_119;
    }
    if (v76 > *((void *)v116 + 2)) {
      goto LABEL_120;
    }
    *(void *)id v117 = v118;
    *(void *)&v74[16 * v115 + 8] = v120;
    unint64_t v122 = *((void *)v116 + 2);
    if (v76 >= v122) {
      goto LABEL_121;
    }
    unint64_t v15 = v122 - 1;
    memmove(&v74[16 * v76], v119 + 16, 16 * (v122 - 1 - v76));
    int64_t v14 = v116;
    *((void *)v116 + 2) = v122 - 1;
    uint64_t v13 = v151;
    if (v122 <= 2) {
      goto LABEL_15;
    }
  }
  uint64_t v124 = v137;
LABEL_100:
  swift_bridgeObjectRelease();
  *(void *)(v124 + 16) = 0;
LABEL_115:
  swift_bridgeObjectRelease();
}

void sub_1D43B142C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v36 = a1;
  uint64_t v41 = sub_1D4469618();
  uint64_t v7 = MEMORY[0x1F4188790](v41);
  uint64_t v40 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v39 = (char *)&v34 - v10;
  uint64_t v35 = a2;
  if (a3 != a2)
  {
    uint64_t v11 = *a4;
    uint64_t v38 = v9 + 8;
    uint64_t v42 = v11;
    uint64_t v12 = v11 + 24 * a3 + 16;
    uint64_t v13 = (void (**)(char *, uint64_t))(v9 + 8);
LABEL_5:
    int64_t v14 = *(void **)(v42 + 24 * a3 + 8);
    uint64_t v15 = v36;
    uint64_t v37 = v12;
    while (1)
    {
      uint64_t v16 = *(void **)(v12 - 32);
      id v17 = v14;
      id v43 = v17;
      id v18 = v16;
      id v19 = objc_msgSend(v17, sel_timestamp);
      id v20 = v39;
      sub_1D44695D8();

      id v21 = objc_msgSend(v18, sel_timestamp);
      id v22 = v40;
      sub_1D44695D8();

      LOBYTE(v21) = sub_1D4469598();
      uint64_t v23 = a3;
      uint64_t v24 = *v13;
      uint64_t v25 = v22;
      uint64_t v26 = v41;
      (*v13)(v25, v41);
      v24(v20, v26);
      a3 = v23;

      if ((v21 & 1) == 0)
      {
LABEL_4:
        a3 = v23 + 1;
        uint64_t v12 = v37 + 24;
        if (v23 + 1 == v35) {
          return;
        }
        goto LABEL_5;
      }
      if (!v42) {
        break;
      }
      uint64_t v27 = v12 - 16;
      uint64_t v28 = (_OWORD *)(v12 - 40);
      uint64_t v29 = *(void *)(v12 - 24);
      *(void *)(v12 - 24) = *(void *)v12;
      v12 -= 24;
      char v30 = *(unsigned char *)(v12 + 8);
      char v31 = *(unsigned char *)(v12 + 9);
      char v32 = *(unsigned char *)(v12 + 10);
      char v33 = *(unsigned char *)(v12 + 11);
      int64_t v14 = *(void **)(v12 + 16);
      *(_OWORD *)uint64_t v27 = *v28;
      *(void *)(v27 + 16) = v29;
      *(unsigned char *)(v12 - 16) = v30;
      *(unsigned char *)(v12 - 15) = v31;
      *(unsigned char *)(v12 - 14) = v32;
      *(unsigned char *)(v12 - 13) = v33;
      *(void *)(v12 - 8) = v14;
      if (v23 == ++v15) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1D43B16B0(char *a1, id *a2, id *a3, id *a4)
{
  uint64_t v60 = sub_1D4469618();
  uint64_t v8 = *(void *)(v60 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v60);
  id v59 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v58 = (char *)&v51 - v11;
  uint64_t v12 = (char *)a2 - a1;
  uint64_t v13 = ((char *)a2 - a1) / 24;
  id v56 = a3;
  uint64_t v14 = (char *)a3 - (char *)a2;
  uint64_t v15 = v14 / 24;
  uint64_t v63 = (id *)a1;
  uint64_t v62 = a4;
  if (v13 >= v14 / 24)
  {
    if (v14 >= -23)
    {
      if (a4 != a2 || &a2[3 * v15] <= a4) {
        memmove(a4, a2, 24 * v15);
      }
      char v32 = &a4[3 * v15];
      uint64_t v61 = v32;
      uint64_t v63 = a2;
      if (v14 >= 24 && a1 < (char *)a2)
      {
        uint64_t v54 = a4;
        id v55 = (id *)(v8 + 8);
        char v33 = (char *)(v56 - 3);
        uint64_t v53 = a1;
        uint64_t v34 = v58;
        while (1)
        {
          id v56 = v32;
          id v57 = (id *)(v33 + 24);
          uint64_t v35 = *(a2 - 2);
          id v36 = *(v32 - 2);
          id v37 = v35;
          id v38 = objc_msgSend(v36, sel_timestamp);
          sub_1D44695D8();

          id v39 = objc_msgSend(v37, sel_timestamp);
          uint64_t v40 = v59;
          sub_1D44695D8();

          LOBYTE(v39) = sub_1D4469598();
          uint64_t v41 = (void (*)(char *, uint64_t))*v55;
          uint64_t v42 = v40;
          uint64_t v43 = v60;
          ((void (*)(char *, uint64_t))*v55)(v42, v60);
          v41(v34, v43);

          if (v39)
          {
            char v44 = v56;
            char v45 = a2 - 3;
            if (v57 != a2 || v33 >= (char *)a2)
            {
              long long v46 = *(_OWORD *)v45;
              *((void *)v33 + 2) = *(a2 - 1);
              *(_OWORD *)char v33 = v46;
            }
            uint64_t v63 = a2 - 3;
            unint64_t v47 = (unint64_t)v53;
            char v32 = v44;
            if (v44 <= v54) {
              goto LABEL_43;
            }
          }
          else
          {
            char v32 = v56 - 3;
            uint64_t v61 = v56 - 3;
            if (v57 < v56 || v33 >= (char *)v56)
            {
              long long v49 = *(_OWORD *)v32;
              *((void *)v33 + 2) = *(v56 - 1);
              *(_OWORD *)char v33 = v49;
              char v45 = a2;
              unint64_t v47 = (unint64_t)v53;
              if (v32 <= v54) {
                goto LABEL_43;
              }
            }
            else
            {
              unint64_t v47 = (unint64_t)v53;
              if (v57 != v56)
              {
                long long v48 = *(_OWORD *)v32;
                *((void *)v33 + 2) = *(v56 - 1);
                *(_OWORD *)char v33 = v48;
              }
              char v45 = a2;
              if (v32 <= v54) {
                goto LABEL_43;
              }
            }
          }
          v33 -= 24;
          a2 = v45;
          if ((unint64_t)v45 <= v47) {
            goto LABEL_43;
          }
        }
      }
      goto LABEL_43;
    }
  }
  else if (v12 >= -23)
  {
    if (a4 != (id *)a1 || &a1[24 * v13] <= (char *)a4) {
      memmove(a4, a1, 24 * v13);
    }
    id v55 = &a4[3 * v13];
    uint64_t v61 = v55;
    if (v12 >= 24 && a2 < v56)
    {
      uint64_t v52 = (void (**)(char *, uint64_t))(v8 + 8);
      do
      {
        id v16 = a4[1];
        id v17 = (id *)a2[1];
        id v57 = v17;
        id v18 = v16;
        id v19 = a2;
        id v20 = (char *)a4;
        id v21 = objc_msgSend(v17, sel_timestamp);
        id v22 = v58;
        sub_1D44695D8();

        id v23 = objc_msgSend(v18, sel_timestamp);
        uint64_t v24 = v59;
        sub_1D44695D8();

        LOBYTE(v23) = sub_1D4469598();
        uint64_t v25 = *v52;
        uint64_t v26 = v24;
        uint64_t v27 = v60;
        (*v52)(v26, v60);
        v25(v22, v27);

        if (v23)
        {
          uint64_t v28 = v19 + 3;
          if (a1 < (char *)v19 || a1 >= (char *)v28)
          {
            long long v31 = *(_OWORD *)v19;
            *((void *)a1 + 2) = v19[2];
            *(_OWORD *)a1 = v31;
          }
          else if (a1 != (char *)v19)
          {
            long long v29 = *(_OWORD *)v19;
            *((void *)a1 + 2) = v19[2];
            *(_OWORD *)a1 = v29;
          }
        }
        else
        {
          a4 += 3;
          if (a1 != v20 || a1 >= (char *)a4)
          {
            long long v30 = *(_OWORD *)v20;
            *((void *)a1 + 2) = *((void *)v20 + 2);
            *(_OWORD *)a1 = v30;
          }
          uint64_t v62 = (id *)(v20 + 24);
          uint64_t v28 = v19;
        }
        a1 += 24;
        uint64_t v63 = (id *)a1;
        if (a4 >= v55) {
          break;
        }
        a2 = v28;
      }
      while (v28 < v56);
    }
LABEL_43:
    sub_1D441CA14((void **)&v63, (const void **)&v62, &v61);
    return 1;
  }
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

void sub_1D43B1C04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  sub_1D446A838();
  if (v3)
  {
    uint64_t v4 = a2 + 32;
    do
    {
      uint64_t v7 = *(void **)(v4 + 8);
      sub_1D446A848();
      sub_1D446A848();
      sub_1D446A848();
      v4 += 24;
      id v5 = v7;
      sub_1D4469BC8();
      swift_bridgeObjectRelease();
      id v6 = v5;
      sub_1D446A128();

      sub_1D446A868();
      --v3;
    }
    while (v3);
  }
}

uint64_t sub_1D43B1F94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t _s8FMIPCore15FMIPUnknownItemV2eeoiySbAC_ACtFZ_0(unsigned char *a1, uint64_t a2)
{
  uint64_t v169 = type metadata accessor for FMIPUnknownItemUTMetadata();
  uint64_t v171 = *(void *)(v169 - 8);
  MEMORY[0x1F4188790](v169);
  uint64_t v166 = &v163[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CA850);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v167 = &v163[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v168 = sub_1D42D5DA0(&qword_1EA6CAA30);
  MEMORY[0x1F4188790](v168);
  uint64_t v170 = &v163[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for FMIPUnknownItem();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v179 = &v163[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  unint64_t v177 = &v163[-v12];
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v176 = &v163[-v14];
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  unint64_t v187 = &v163[-v16];
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  os_log_type_t v194 = &v163[-v18];
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v188 = &v163[-v20];
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v189 = &v163[-v22];
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v190 = &v163[-v24];
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v185 = &v163[-v26];
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v186 = &v163[-v28];
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v183 = &v163[-v30];
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v184 = &v163[-v32];
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v181 = &v163[-v34];
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v182 = &v163[-v36];
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  char v192 = &v163[-v38];
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v191 = &v163[-v40];
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  int v175 = &v163[-v42];
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  uint64_t v172 = &v163[-v44];
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  uint64_t v180 = &v163[-v46];
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  uint64_t v195 = &v163[-v48];
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  os_log_type_t v174 = &v163[-v50];
  uint64_t v51 = MEMORY[0x1F4188790](v49);
  uint64_t v173 = &v163[-v52];
  uint64_t v53 = MEMORY[0x1F4188790](v51);
  unint64_t v178 = &v163[-v54];
  uint64_t v55 = MEMORY[0x1F4188790](v53);
  uint64_t v193 = &v163[-v56];
  uint64_t v57 = MEMORY[0x1F4188790](v55);
  id v59 = &v163[-v58];
  uint64_t v60 = MEMORY[0x1F4188790](v57);
  uint64_t v62 = &v163[-v61];
  uint64_t v63 = MEMORY[0x1F4188790](v60);
  id v65 = &v163[-v64];
  uint64_t v66 = MEMORY[0x1F4188790](v63);
  char v68 = &v163[-v67];
  uint64_t v69 = *(int *)(v66 + 60);
  int v70 = a1[v69];
  int v71 = *(unsigned __int8 *)(a2 + v69);
  sub_1D43B9ED0((uint64_t)a1, (uint64_t)&v163[-v67], (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9ED0(a2, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  if (v70 != v71)
  {
    sub_1D43B9F38((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9ED0((uint64_t)a1, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9ED0(a2, (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v75 = a2;
    goto LABEL_9;
  }
  uint64_t v72 = *(int *)(v8 + 52);
  uint64_t v73 = *(void *)&v68[v72];
  uint64_t v74 = *(void *)&v65[v72];
  sub_1D43B9F38((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9F38((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9ED0((uint64_t)a1, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9ED0(a2, (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  uint64_t v75 = a2;
  if (v73 != v74)
  {
LABEL_9:
    sub_1D43B9F38((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v82 = v194;
    uint64_t v84 = (uint64_t)v195;
    uint64_t v85 = (uint64_t)v172;
    uint64_t v83 = (uint64_t)v180;
    uint64_t v81 = v193;
LABEL_10:
    sub_1D43B9ED0((uint64_t)a1, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v86 = v178;
    sub_1D43B9ED0(v75, (uint64_t)v178, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    goto LABEL_11;
  }
  uint64_t v76 = *(int *)(v8 + 24);
  uint64_t v77 = &v62[v76];
  uint64_t v78 = *(void *)&v62[v76 + 8];
  uint64_t v79 = &v59[v76];
  uint64_t v80 = v79[1];
  uint64_t v81 = v193;
  uint64_t v82 = v194;
  uint64_t v83 = (uint64_t)v180;
  char v165 = (int *)v8;
  if (!v78)
  {
    swift_bridgeObjectRetain();
    sub_1D43B9F38((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v84 = (uint64_t)v195;
    if (!v80) {
      goto LABEL_27;
    }
    goto LABEL_29;
  }
  uint64_t v84 = (uint64_t)v195;
  if (!v80)
  {
    swift_bridgeObjectRetain();
    sub_1D43B9F38((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t v85 = (uint64_t)v172;
    goto LABEL_10;
  }
  if (*v77 == *v79 && v78 == v80)
  {
    swift_bridgeObjectRetain();
    sub_1D43B9F38((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    swift_bridgeObjectRelease();
LABEL_27:
    sub_1D43B9ED0((uint64_t)a1, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v86 = v178;
    sub_1D43B9ED0(v75, (uint64_t)v178, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v85 = (uint64_t)v172;
    goto LABEL_31;
  }
  int v164 = sub_1D446A758();
  swift_bridgeObjectRetain();
  sub_1D43B9F38((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  uint64_t v81 = v193;
  uint64_t v84 = (uint64_t)v195;
  sub_1D43B9F38((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  swift_bridgeObjectRelease();
  sub_1D43B9ED0((uint64_t)a1, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  uint64_t v86 = v178;
  sub_1D43B9ED0(v75, (uint64_t)v178, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  uint64_t v85 = (uint64_t)v172;
  if ((v164 & 1) == 0)
  {
LABEL_11:
    sub_1D43B9F38((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    BOOL v87 = v173;
    sub_1D43B9ED0((uint64_t)a1, (uint64_t)v173, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    unint64_t v88 = v174;
    sub_1D43B9ED0(v75, (uint64_t)v174, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
LABEL_12:
    sub_1D43B9F38((uint64_t)v88, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9ED0((uint64_t)a1, v84, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9ED0(v75, v83, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    id v89 = v176;
    uint64_t v91 = v191;
    uint64_t v90 = (uint64_t)v192;
LABEL_13:
    sub_1D43B9F38(v83, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38(v84, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9ED0((uint64_t)a1, v85, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v92 = v85;
    uint64_t v93 = v175;
    sub_1D43B9ED0(v75, (uint64_t)v175, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
LABEL_14:
    sub_1D43B9F38(v92, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9ED0((uint64_t)a1, (uint64_t)v91, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9ED0(v75, v90, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v94 = (uint64_t)v185;
LABEL_15:
    uint64_t v95 = (uint64_t)v89;
    uint64_t v96 = (uint64_t)v91;
    BOOL v97 = v187;
    sub_1D43B9F38(v96, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38(v90, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v98 = v182;
    sub_1D43B9ED0((uint64_t)a1, (uint64_t)v182, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    char v99 = v181;
    sub_1D43B9ED0(v75, (uint64_t)v181, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
LABEL_16:
    sub_1D43B9F38((uint64_t)v99, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    unint64_t v100 = v184;
    sub_1D43B9ED0((uint64_t)a1, (uint64_t)v184, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v101 = v183;
    sub_1D43B9ED0(v75, (uint64_t)v183, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
LABEL_17:
    sub_1D43B9F38((uint64_t)v101, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v100, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v102 = v186;
    sub_1D43B9ED0((uint64_t)a1, (uint64_t)v186, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9ED0(v75, v94, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
LABEL_18:
    sub_1D43B9F38(v94, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v102, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v103 = v190;
    sub_1D43B9ED0((uint64_t)a1, (uint64_t)v190, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    BOOL v104 = v189;
    sub_1D43B9ED0(v75, (uint64_t)v189, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v105 = (uint64_t)v97;
LABEL_19:
    sub_1D43B9F38((uint64_t)v104, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v103, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v106 = v95;
LABEL_20:
    uint64_t v107 = v188;
    sub_1D43B9ED0((uint64_t)a1, (uint64_t)v188, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9ED0(v75, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
LABEL_21:
    sub_1D43B9F38((uint64_t)v82, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v107, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
LABEL_22:
    sub_1D43B9ED0((uint64_t)a1, v105, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9ED0(v75, v106, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v108 = (uint64_t)v179;
LABEL_23:
    sub_1D43B9F38(v106, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38(v105, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v109 = (uint64_t)a1;
    uint64_t v110 = v177;
    sub_1D43B9ED0(v109, (uint64_t)v177, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9ED0(v75, v108, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    goto LABEL_24;
  }
LABEL_31:
  char v113 = sub_1D4469658();
  sub_1D43B9F38((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9F38((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  BOOL v87 = v173;
  sub_1D43B9ED0((uint64_t)a1, (uint64_t)v173, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  unint64_t v88 = v174;
  uint64_t v84 = (uint64_t)v195;
  sub_1D43B9ED0(v75, (uint64_t)v174, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  if ((v113 & 1) == 0) {
    goto LABEL_12;
  }
  uint64_t v114 = v165;
  int v115 = v87[v165[16]];
  sub_1D43B9F38((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  uint64_t v116 = v114[16];
  uint64_t v193 = a1;
  LODWORD(v114) = v88[v116];
  sub_1D43B9F38((uint64_t)v88, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9ED0((uint64_t)v193, v84, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9ED0(v75, v83, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  BOOL v117 = v115 == v114;
  a1 = v193;
  uint64_t v82 = v194;
  id v89 = v176;
  uint64_t v91 = v191;
  uint64_t v90 = (uint64_t)v192;
  if (!v117) {
    goto LABEL_13;
  }
  uint64_t v118 = v165;
  int v119 = *(unsigned __int8 *)(v84 + v165[7]);
  sub_1D43B9F38(v84, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  int v120 = *(unsigned __int8 *)(v83 + v118[7]);
  sub_1D43B9F38(v83, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9ED0((uint64_t)v193, v85, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  uint64_t v92 = v85;
  uint64_t v93 = v175;
  sub_1D43B9ED0(v75, (uint64_t)v175, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  BOOL v117 = v119 == v120;
  uint64_t v90 = (uint64_t)v192;
  a1 = v193;
  uint64_t v82 = v194;
  if (!v117) {
    goto LABEL_14;
  }
  uint64_t v121 = v165;
  char v122 = sub_1D4415EE4(*(void *)(v92 + v165[8]), *(void *)&v93[v165[8]]);
  sub_1D43B9F38(v92, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9F38((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9ED0((uint64_t)v193, (uint64_t)v91, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  a1 = v193;
  uint64_t v82 = v194;
  sub_1D43B9ED0(v75, v90, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  uint64_t v94 = (uint64_t)v185;
  if ((v122 & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v123 = v121;
  uint64_t v95 = (uint64_t)v89;
  uint64_t v124 = v123;
  uint64_t v125 = v123[5];
  uint64_t v126 = *(void *)&v91[v125];
  uint64_t v127 = *(void *)&v91[v125 + 8];
  uint64_t v128 = (void *)(v90 + v125);
  BOOL v97 = v187;
  if (v126 == *v128 && v127 == v128[1])
  {
    sub_1D43B9F38((uint64_t)v191, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38(v90, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v98 = v182;
    sub_1D43B9ED0((uint64_t)a1, (uint64_t)v182, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    char v99 = v181;
    sub_1D43B9ED0(v75, (uint64_t)v181, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  }
  else
  {
    char v129 = sub_1D446A758();
    sub_1D43B9F38((uint64_t)v191, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38(v90, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    uint64_t v98 = v182;
    sub_1D43B9ED0((uint64_t)v193, (uint64_t)v182, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    char v99 = v181;
    a1 = v193;
    uint64_t v82 = v194;
    sub_1D43B9ED0(v75, (uint64_t)v181, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    if ((v129 & 1) == 0) {
      goto LABEL_16;
    }
  }
  BOOL v130 = _s8FMIPCore15FMIPProductTypeO2eeoiySbAC_ACtFZ_0((uint64_t)&v98[v124[9]], (uint64_t)&v99[v124[9]]);
  sub_1D43B9F38((uint64_t)v99, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9F38((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  unint64_t v100 = v184;
  sub_1D43B9ED0((uint64_t)v193, (uint64_t)v184, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  uint64_t v101 = v183;
  a1 = v193;
  uint64_t v82 = v194;
  sub_1D43B9ED0(v75, (uint64_t)v183, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  if (!v130) {
    goto LABEL_17;
  }
  uint64_t v131 = v124[10];
  LODWORD(v195) = v100[v131];
  int v132 = v101[v131];
  sub_1D43B9F38((uint64_t)v101, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9F38((uint64_t)v100, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  uint64_t v102 = v186;
  sub_1D43B9ED0((uint64_t)v193, (uint64_t)v186, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9ED0(v75, v94, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  BOOL v117 = v195 == v132;
  a1 = v193;
  uint64_t v82 = v194;
  if (!v117) {
    goto LABEL_18;
  }
  uint64_t v133 = v124[14];
  uint64_t v134 = (uint64_t)v102;
  uint64_t v135 = *(void *)&v102[v133];
  uint64_t v136 = *(void *)(v94 + v133);
  sub_1D43B9F38(v94, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9F38(v134, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  uint64_t v103 = v190;
  sub_1D43B9ED0((uint64_t)v193, (uint64_t)v190, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  uint64_t v137 = v189;
  sub_1D43B9ED0(v75, (uint64_t)v189, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  BOOL v117 = v135 == v136;
  BOOL v104 = v137;
  a1 = v193;
  uint64_t v82 = v194;
  uint64_t v105 = (uint64_t)v97;
  if (!v117) {
    goto LABEL_19;
  }
  uint64_t v138 = v124[12];
  unint64_t v139 = v124;
  uint64_t v140 = *(void **)&v103[v138];
  uint64_t v141 = *(void **)&v104[v138];
  uint64_t v142 = v139;
  uint64_t v106 = v95;
  if (!v140)
  {
    id v147 = v141;
    sub_1D43B9F38((uint64_t)v189, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v190, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    if (!v141)
    {
      uint64_t v107 = v188;
      sub_1D43B9ED0((uint64_t)v193, (uint64_t)v188, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
      uint64_t v82 = v194;
      sub_1D43B9ED0(v75, (uint64_t)v194, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
      uint64_t v143 = v171;
      goto LABEL_52;
    }
LABEL_56:

    a1 = v193;
    uint64_t v82 = v194;
    goto LABEL_20;
  }
  uint64_t v143 = v171;
  if (!v141)
  {
    id v147 = v140;
    sub_1D43B9F38((uint64_t)v189, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v190, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    goto LABEL_56;
  }
  sub_1D4275AD0(0, &qword_1EA6CA380);
  id v144 = v141;
  id v145 = v140;
  char v146 = sub_1D446A118();
  sub_1D43B9F38((uint64_t)v189, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9F38((uint64_t)v190, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);

  a1 = v193;
  uint64_t v107 = v188;
  sub_1D43B9ED0((uint64_t)v193, (uint64_t)v188, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  uint64_t v82 = v194;
  sub_1D43B9ED0(v75, (uint64_t)v194, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  if ((v146 & 1) == 0) {
    goto LABEL_21;
  }
LABEL_52:
  uint64_t v148 = v142[11];
  uint64_t v149 = (uint64_t)&v82[v148];
  int v150 = v170;
  uint64_t v151 = (uint64_t)&v170[*(int *)(v168 + 48)];
  sub_1D42A3A74((uint64_t)&v107[v148], (uint64_t)v170, &qword_1EA6CA850);
  sub_1D42A3A74(v149, v151, &qword_1EA6CA850);
  int64_t v152 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48);
  uint64_t v153 = v169;
  if (v152((uint64_t)v150, 1, v169) == 1)
  {
    sub_1D43B9F38((uint64_t)v194, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v188, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    if (v152(v151, 1, v153) == 1)
    {
      sub_1D4276C3C((uint64_t)v150, &qword_1EA6CA850);
      a1 = v193;
      sub_1D43B9ED0((uint64_t)v193, v105, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
      sub_1D43B9ED0(v75, v106, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
      uint64_t v108 = (uint64_t)v179;
      goto LABEL_61;
    }
LABEL_59:
    sub_1D4276C3C((uint64_t)v150, &qword_1EA6CAA30);
    a1 = v193;
    goto LABEL_22;
  }
  uint64_t v154 = v167;
  sub_1D42A3A74((uint64_t)v150, (uint64_t)v167, &qword_1EA6CA850);
  if (v152(v151, 1, v153) == 1)
  {
    sub_1D43B9F38((uint64_t)v194, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v188, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D43B9F38((uint64_t)v154, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
    goto LABEL_59;
  }
  id v155 = v166;
  sub_1D43BA040(v151, (uint64_t)v166, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
  char v156 = _s8FMIPCore25FMIPUnknownItemUTMetadataV2eeoiySbAC_ACtFZ_0(v154, v155);
  sub_1D43B9F38((uint64_t)v155, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
  sub_1D43B9F38((uint64_t)v194, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9F38((uint64_t)v188, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9F38((uint64_t)v154, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
  sub_1D4276C3C((uint64_t)v150, &qword_1EA6CA850);
  a1 = v193;
  sub_1D43B9ED0((uint64_t)v193, v105, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9ED0(v75, v106, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  uint64_t v108 = (uint64_t)v179;
  if ((v156 & 1) == 0) {
    goto LABEL_23;
  }
LABEL_61:
  uint64_t v157 = v142;
  int v158 = *(unsigned __int8 *)(v105 + v142[17]);
  sub_1D43B9F38(v105, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  os_log_type_t v159 = v157;
  LODWORD(v157) = *(unsigned __int8 *)(v106 + v157[17]);
  sub_1D43B9F38(v106, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  uint64_t v160 = (uint64_t)a1;
  uint64_t v110 = v177;
  sub_1D43B9ED0(v160, (uint64_t)v177, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9ED0(v75, v108, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  if (v158 == v157)
  {
    char v161 = v110[v159[18]];
    sub_1D43B9F38((uint64_t)v110, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    char v162 = *(unsigned char *)(v108 + v159[18]);
    sub_1D43B9F38(v108, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    char v111 = v161 ^ v162 ^ 1;
    return v111 & 1;
  }
LABEL_24:
  sub_1D43B9F38(v108, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  sub_1D43B9F38((uint64_t)v110, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  char v111 = 0;
  return v111 & 1;
}