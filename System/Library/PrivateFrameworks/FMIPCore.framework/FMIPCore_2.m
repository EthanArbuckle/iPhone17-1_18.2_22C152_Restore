unint64_t sub_1D43B385C(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  unsigned __int8 v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  void *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;

  v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  sub_1D42D5DA0(&qword_1EA6CA978);
  v3 = (void *)sub_1D446A4C8();
  v4 = *(unsigned char *)(a1 + 32);
  v5 = *(void *)(a1 + 40);
  result = sub_1D4282178(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    v12 = v8 + 2;
    v4 = *((unsigned char *)v8 - 8);
    v13 = *v8;
    swift_bridgeObjectRetain();
    result = sub_1D4282178(v4);
    v8 = v12;
    v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

void sub_1D43B3960(uint64_t a1, void (*a2)(void *__return_ptr))
{
  void (*v21)(void *__return_ptr);
  uint64_t v22;
  uint64_t v23;
  char v24;
  void *v25;
  uint64_t v26;
  int64_t v27;

  v22 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  v27 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  v8 = (void *)MEMORY[0x1E4FBC860];
  v21 = a2;
  while (v6)
  {
    unint64_t v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v10 = v9 | (v7 << 6);
LABEL_22:
    uint64_t v14 = 8 * v10;
    v15 = *(void **)(*(void *)(a1 + 48) + v14);
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + v14);
    v25 = v15;
    v26 = v16;
    id v17 = v15;
    a2(&v23);

    if ((v24 & 1) == 0)
    {
      uint64_t v18 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v8 = sub_1D43AFFC8(0, v8[2] + 1, 1, v8, &qword_1EA6CAA20);
      }
      unint64_t v20 = v8[2];
      unint64_t v19 = v8[3];
      if (v20 >= v19 >> 1) {
        v8 = sub_1D43AFFC8((void *)(v19 > 1), v20 + 1, 1, v8, &qword_1EA6CAA20);
      }
      v8[2] = v20 + 1;
      v8[v20 + 4] = v18;
      a2 = v21;
    }
  }
  int64_t v11 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v11 >= v27) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v22 + 8 * v11);
  ++v7;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 1;
  if (v11 + 1 >= v27) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v22 + 8 * v7);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 2;
  if (v11 + 2 >= v27) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v22 + 8 * v7);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 3;
  if (v11 + 3 >= v27) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v22 + 8 * v7);
  if (v12)
  {
LABEL_21:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
    goto LABEL_22;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v27)
  {
LABEL_28:
    swift_release();
    return;
  }
  unint64_t v12 = *(void *)(v22 + 8 * v13);
  if (v12)
  {
    int64_t v7 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v7 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v7 >= v27) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v22 + 8 * v7);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
}

void sub_1D43B3BCC(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  sub_1D43AD83C(a1, a2, a3, *(void **)(v4 + 16), a4);
}

char *sub_1D43B3BD4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    int64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1D446A4D8();
  __break(1u);
  return result;
}

void sub_1D43B3CC0(uint64_t a1, void (*a2)(void *__return_ptr))
{
  void (*v19)(void *__return_ptr);
  uint64_t v20;
  uint64_t v21;
  char v22;
  id v23;
  long long v24;
  int64_t v25;

  unint64_t v20 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  v25 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  v8 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v19 = a2;
  while (v6)
  {
    unint64_t v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v10 = v9 | (v7 << 6);
LABEL_22:
    uint64_t v14 = *(void *)(a1 + 56);
    v23 = *(id *)(*(void *)(a1 + 48) + 8 * v10);
    v24 = *(_OWORD *)(v14 + 16 * v10);
    id v15 = v23;
    a2(&v21);

    if ((v22 & 1) == 0)
    {
      uint64_t v16 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v8 = sub_1D43AFFC8(0, v8[2] + 1, 1, v8, &qword_1EA6CAA38);
      }
      unint64_t v18 = v8[2];
      unint64_t v17 = v8[3];
      if (v18 >= v17 >> 1) {
        v8 = sub_1D43AFFC8((void *)(v17 > 1), v18 + 1, 1, v8, &qword_1EA6CAA38);
      }
      v8[2] = v18 + 1;
      v8[v18 + 4] = v16;
      a2 = v19;
    }
  }
  int64_t v11 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v11 >= v25) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v20 + 8 * v11);
  ++v7;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 1;
  if (v11 + 1 >= v25) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v20 + 8 * v7);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 2;
  if (v11 + 2 >= v25) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v20 + 8 * v7);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 3;
  if (v11 + 3 >= v25) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v20 + 8 * v7);
  if (v12)
  {
LABEL_21:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
    goto LABEL_22;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v25)
  {
LABEL_28:
    swift_release();
    return;
  }
  unint64_t v12 = *(void *)(v20 + 8 * v13);
  if (v12)
  {
    int64_t v7 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v7 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v7 >= v25) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v20 + 8 * v7);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
}

unint64_t sub_1D43B3F38()
{
  unint64_t result = qword_1EA6CA8A8;
  if (!qword_1EA6CA8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA8A8);
  }
  return result;
}

uint64_t sub_1D43B3F8C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D42DB55C(&qword_1EA6CA870);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D43B3FFC()
{
  unint64_t result = qword_1EA6CA8C0;
  if (!qword_1EA6CA8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA8C0);
  }
  return result;
}

unint64_t sub_1D43B4050()
{
  unint64_t result = qword_1EA6CA8C8;
  if (!qword_1EA6CA8C8)
  {
    sub_1D42DB55C(&qword_1EA6CA850);
    sub_1D42AAEB8(&qword_1EA6CA8D0, (void (*)(uint64_t))type metadata accessor for FMIPUnknownItemUTMetadata);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA8C8);
  }
  return result;
}

unint64_t sub_1D43B40F8()
{
  unint64_t result = qword_1EA6CA8D8;
  if (!qword_1EA6CA8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA8D8);
  }
  return result;
}

unint64_t sub_1D43B4150()
{
  unint64_t result = qword_1EA6CA8E0;
  if (!qword_1EA6CA8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA8E0);
  }
  return result;
}

unint64_t sub_1D43B41A8()
{
  unint64_t result = qword_1EA6CA8E8;
  if (!qword_1EA6CA8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA8E8);
  }
  return result;
}

unint64_t sub_1D43B4200()
{
  unint64_t result = qword_1EA6CA8F0;
  if (!qword_1EA6CA8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA8F0);
  }
  return result;
}

unint64_t sub_1D43B4258()
{
  unint64_t result = qword_1EA6CA8F8;
  if (!qword_1EA6CA8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA8F8);
  }
  return result;
}

unint64_t sub_1D43B42B0()
{
  unint64_t result = qword_1EA6CA900;
  if (!qword_1EA6CA900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA900);
  }
  return result;
}

uint64_t sub_1D43B4304()
{
  return sub_1D42AAEB8(&qword_1EA6CA908, (void (*)(uint64_t))type metadata accessor for FMIPUnknownItem);
}

ValueMetadata *type metadata accessor for FMIPItemType()
{
  return &type metadata for FMIPItemType;
}

unsigned char *storeEnumTagSinglePayload for FMIPUnknownItemAlertState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    char *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43B4428);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPUnknownItemAlertState()
{
  return &type metadata for FMIPUnknownItemAlertState;
}

unsigned char *storeEnumTagSinglePayload for FMIPUnknownItemObservationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    char *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43B452CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPUnknownItemObservationType()
{
  return &type metadata for FMIPUnknownItemObservationType;
}

void *initializeBufferWithCopyOfBuffer for FMIPUnknownItem(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v7 = sub_1D4469688();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  unint64_t v10 = (void *)((char *)a1 + v8);
  int64_t v11 = (void *)((char *)a2 + v8);
  uint64_t v12 = v11[1];
  *unint64_t v10 = *v11;
  v10[1] = v12;
  int64_t v13 = (void *)((char *)a1 + v9);
  uint64_t v14 = (void *)((char *)a2 + v9);
  uint64_t v15 = v14[1];
  *int64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  uint64_t v17 = a3[9];
  unint64_t v18 = (_OWORD *)((char *)a1 + v17);
  unint64_t v19 = (_OWORD *)((char *)a2 + v17);
  type metadata accessor for FMIPProductType();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v24 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
    uint64_t v25 = *((void *)v24 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v25 + 48))(v19, 1, v24))
    {
      uint64_t v26 = sub_1D42D5DA0(&qword_1EA6C97A0);
      memcpy(v18, v19, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      *unint64_t v18 = *v19;
      uint64_t v53 = *((void *)v19 + 3);
      *((void *)v18 + 2) = *((void *)v19 + 2);
      *((void *)v18 + 3) = v53;
      uint64_t v54 = *((void *)v19 + 5);
      *((void *)v18 + 4) = *((void *)v19 + 4);
      *((void *)v18 + 5) = v54;
      uint64_t v55 = *((void *)v19 + 7);
      *((void *)v18 + 6) = *((void *)v19 + 6);
      *((void *)v18 + 7) = v55;
      *((void *)v18 + 8) = *((void *)v19 + 8);
      *((unsigned char *)v18 + 72) = *((unsigned char *)v19 + 72);
      *((unsigned char *)v18 + 73) = *((unsigned char *)v19 + 73);
      uint64_t v56 = v24[12];
      __srcb = (char *)v19 + v56;
      v98 = (char *)v18 + v56;
      uint64_t v106 = v25;
      uint64_t v57 = sub_1D4469498();
      v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v58(v98, __srcb, v57);
      v58((char *)v18 + v24[13], (char *)v19 + v24[13], v57);
      v58((char *)v18 + v24[14], (char *)v19 + v24[14], v57);
      v58((char *)v18 + v24[15], (char *)v19 + v24[15], v57);
      v58((char *)v18 + v24[16], (char *)v19 + v24[16], v57);
      v58((char *)v18 + v24[17], (char *)v19 + v24[17], v57);
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v106 + 56))(v18, 0, 1, v24);
    }
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload == 1)
  {
    *unint64_t v18 = *v19;
    uint64_t v22 = *((void *)v19 + 2);
    uint64_t v21 = *((void *)v19 + 3);
  }
  else
  {
    uint64_t v21 = *((void *)v19 + 3);
    if (!v21)
    {
      long long v59 = v19[3];
      v18[2] = v19[2];
      v18[3] = v59;
      *((void *)v18 + 8) = *((void *)v19 + 8);
      long long v60 = v19[1];
      *unint64_t v18 = *v19;
      v18[1] = v60;
      goto LABEL_11;
    }
    *unint64_t v18 = *v19;
    uint64_t v22 = *((void *)v19 + 2);
  }
  *((void *)v18 + 2) = v22;
  *((void *)v18 + 3) = v21;
  uint64_t v27 = *((void *)v19 + 5);
  *((void *)v18 + 4) = *((void *)v19 + 4);
  *((void *)v18 + 5) = v27;
  uint64_t v28 = *((void *)v19 + 7);
  *((void *)v18 + 6) = *((void *)v19 + 6);
  *((void *)v18 + 7) = v28;
  *((void *)v18 + 8) = *((void *)v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_11:
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  v30 = (void *)((char *)a1 + v29);
  v31 = (void *)((char *)a2 + v29);
  uint64_t v32 = type metadata accessor for FMIPUnknownItemUTMetadata();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    uint64_t v34 = sub_1D42D5DA0(&qword_1EA6CA850);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    uint64_t v103 = v33;
    uint64_t v104 = v32;
    uint64_t v35 = v31[1];
    void *v30 = *v31;
    v30[1] = v35;
    uint64_t v36 = v31[3];
    v30[2] = v31[2];
    v30[3] = v36;
    uint64_t v37 = *(int *)(v32 + 24);
    v105 = v30;
    v38 = (void *)((char *)v30 + v37);
    v39 = (void *)((char *)v31 + v37);
    uint64_t v40 = type metadata accessor for FMIPUnknownItemProductMetadata();
    uint64_t v100 = *(void *)(v40 - 8);
    v41 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v100 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v101 = v41;
    if (v41(v39, 1, v40))
    {
      uint64_t v42 = sub_1D42D5DA0(&qword_1EA6C9D08);
      memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
      uint64_t v44 = v104;
      v43 = v105;
      v45 = v101;
    }
    else
    {
      uint64_t v90 = v39[1];
      void *v38 = *v39;
      v38[1] = v90;
      uint64_t v46 = v39[3];
      v38[2] = v39[2];
      v38[3] = v46;
      *((unsigned char *)v38 + 32) = *((unsigned char *)v39 + 32);
      v38[5] = v39[5];
      *((unsigned char *)v38 + 48) = *((unsigned char *)v39 + 48);
      uint64_t v97 = v40;
      uint64_t v47 = *(int *)(v40 + 32);
      __dst = (char *)v38 + v47;
      __src = (char *)v39 + v47;
      uint64_t v48 = sub_1D4469498();
      uint64_t v49 = *(void *)(v48 - 8);
      v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v91 = v48;
      v92 = v50;
      uint64_t v88 = v49;
      if (v50(__src, 1, v48))
      {
        uint64_t v51 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(__dst, __src, *(void *)(*(void *)(v51 - 8) + 64));
        uint64_t v40 = v97;
        uint64_t v52 = v91;
      }
      else
      {
        uint64_t v52 = v48;
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(__dst, __src, v48);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(__dst, 0, 1, v48);
        uint64_t v40 = v97;
      }
      uint64_t v61 = *(int *)(v40 + 36);
      v62 = (char *)v38 + v61;
      v63 = (char *)v39 + v61;
      if (v92(v63, 1, v52))
      {
        uint64_t v64 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v62, v63, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v62, 0, 1, v52);
      }
      uint64_t v44 = v104;
      v43 = v105;
      v45 = v101;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v100 + 56))(v38, 0, 1, v40);
    }
    uint64_t v65 = *(int *)(v44 + 28);
    v66 = (void *)((char *)v43 + v65);
    v67 = (void *)((char *)v31 + v65);
    if (v45(v67, 1, v40))
    {
      uint64_t v68 = sub_1D42D5DA0(&qword_1EA6C9D08);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      uint64_t v69 = v40;
      uint64_t v70 = v67[1];
      void *v66 = *v67;
      v66[1] = v70;
      uint64_t v71 = v67[3];
      v66[2] = v67[2];
      v66[3] = v71;
      *((unsigned char *)v66 + 32) = *((unsigned char *)v67 + 32);
      v66[5] = v67[5];
      *((unsigned char *)v66 + 48) = *((unsigned char *)v67 + 48);
      uint64_t v99 = v69;
      uint64_t v72 = *(int *)(v69 + 32);
      v93 = (char *)v66 + v72;
      __srca = (char *)v67 + v72;
      uint64_t v73 = sub_1D4469498();
      uint64_t v74 = *(void *)(v73 - 8);
      v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v102 = v75;
      if (v75(__srca, 1, v73))
      {
        uint64_t v76 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(v93, __srca, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v93, __srca, v73);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v93, 0, 1, v73);
      }
      uint64_t v77 = *(int *)(v99 + 36);
      v78 = (char *)v66 + v77;
      v79 = (char *)v67 + v77;
      if (v102(v79, 1, v73))
      {
        uint64_t v80 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v78, v79, v73);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v78, 0, 1, v73);
      }
      uint64_t v44 = v104;
      v43 = v105;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v100 + 56))(v66, 0, 1, v99);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v103 + 56))(v43, 0, 1, v44);
  }
  uint64_t v81 = a3[12];
  uint64_t v82 = a3[13];
  v83 = *(void **)((char *)a2 + v81);
  *(void *)((char *)a1 + v81) = v83;
  *(void *)((char *)a1 + v82) = *(void *)((char *)a2 + v82);
  uint64_t v84 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *((unsigned char *)a1 + v84) = *((unsigned char *)a2 + v84);
  uint64_t v85 = a3[17];
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  *((unsigned char *)a1 + v85) = *((unsigned char *)a2 + v85);
  *((unsigned char *)a1 + a3[18]) = *((unsigned char *)a2 + a3[18]);
  id v86 = v83;
  return a1;
}

void destroy for FMIPUnknownItem(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[9];
  type metadata accessor for FMIPProductType();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v5 + v7[12];
      uint64_t v9 = sub_1D4469498();
      unint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
      v10(v8, v9);
      v10(v5 + v7[13], v9);
      v10(v5 + v7[14], v9);
      v10(v5 + v7[15], v9);
      v10(v5 + v7[16], v9);
      v10(v5 + v7[17], v9);
    }
  }
  else if (EnumCaseMultiPayload == 1 || !EnumCaseMultiPayload && *(void *)(v5 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = a1 + a2[11];
  uint64_t v12 = type metadata accessor for FMIPUnknownItemUTMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v11 + *(int *)(v12 + 24);
    uint64_t v14 = type metadata accessor for FMIPUnknownItemProductMetadata();
    uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    if (!v15(v13, 1, v14))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v13 + *(int *)(v14 + 32);
      uint64_t v17 = sub_1D4469498();
      uint64_t v28 = v16;
      uint64_t v29 = *(void *)(v17 - 8);
      uint64_t v18 = v16;
      uint64_t v19 = v17;
      v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
      if (!v30(v18, 1, v17)) {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v19);
      }
      uint64_t v20 = v13 + *(int *)(v14 + 36);
      if (!v30(v20, 1, v19)) {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v20, v19);
      }
    }
    uint64_t v21 = v11 + *(int *)(v12 + 28);
    if (!v15(v21, 1, v14))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = v21 + *(int *)(v14 + 32);
      uint64_t v23 = sub_1D4469498();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
      if (!v25(v22, 1, v23)) {
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
      }
      uint64_t v26 = v21 + *(int *)(v14 + 36);
      if (!v25(v26, 1, v23)) {
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v23);
      }
    }
  }
  uint64_t v27 = *(void **)(a1 + a2[12]);
}

uint64_t initializeWithCopy for FMIPUnknownItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  unint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[9];
  uint64_t v17 = (_OWORD *)(a1 + v16);
  uint64_t v18 = (_OWORD *)(a2 + v16);
  type metadata accessor for FMIPProductType();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v22 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
    uint64_t v23 = *((void *)v22 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v23 + 48))(v18, 1, v22))
    {
      uint64_t v24 = sub_1D42D5DA0(&qword_1EA6C97A0);
      memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      *uint64_t v17 = *v18;
      uint64_t v50 = *((void *)v18 + 3);
      *((void *)v17 + 2) = *((void *)v18 + 2);
      *((void *)v17 + 3) = v50;
      uint64_t v51 = *((void *)v18 + 5);
      *((void *)v17 + 4) = *((void *)v18 + 4);
      *((void *)v17 + 5) = v51;
      uint64_t v52 = *((void *)v18 + 7);
      *((void *)v17 + 6) = *((void *)v18 + 6);
      *((void *)v17 + 7) = v52;
      *((void *)v17 + 8) = *((void *)v18 + 8);
      *((unsigned char *)v17 + 72) = *((unsigned char *)v18 + 72);
      *((unsigned char *)v17 + 73) = *((unsigned char *)v18 + 73);
      uint64_t v53 = v22[12];
      __srcb = (char *)v18 + v53;
      v93 = (char *)v17 + v53;
      uint64_t v101 = v23;
      uint64_t v54 = sub_1D4469498();
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v55(v93, __srcb, v54);
      v55((char *)v17 + v22[13], (char *)v18 + v22[13], v54);
      v55((char *)v17 + v22[14], (char *)v18 + v22[14], v54);
      v55((char *)v17 + v22[15], (char *)v18 + v22[15], v54);
      v55((char *)v17 + v22[16], (char *)v18 + v22[16], v54);
      v55((char *)v17 + v22[17], (char *)v18 + v22[17], v54);
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v101 + 56))(v17, 0, 1, v22);
    }
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v17 = *v18;
      uint64_t v21 = *((void *)v18 + 2);
      uint64_t v20 = *((void *)v18 + 3);
LABEL_8:
      *((void *)v17 + 2) = v21;
      *((void *)v17 + 3) = v20;
      uint64_t v25 = *((void *)v18 + 5);
      *((void *)v17 + 4) = *((void *)v18 + 4);
      *((void *)v17 + 5) = v25;
      uint64_t v26 = *((void *)v18 + 7);
      *((void *)v17 + 6) = *((void *)v18 + 6);
      *((void *)v17 + 7) = v26;
      *((void *)v17 + 8) = *((void *)v18 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
    uint64_t v20 = *((void *)v18 + 3);
    if (v20)
    {
      *uint64_t v17 = *v18;
      uint64_t v21 = *((void *)v18 + 2);
      goto LABEL_8;
    }
    long long v56 = v18[3];
    v17[2] = v18[2];
    v17[3] = v56;
    *((void *)v17 + 8) = *((void *)v18 + 8);
    long long v57 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v57;
  }
LABEL_9:
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  uint64_t v30 = type metadata accessor for FMIPUnknownItemUTMetadata();
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = sub_1D42D5DA0(&qword_1EA6CA850);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v98 = v31;
    uint64_t v99 = v30;
    uint64_t v33 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v33;
    uint64_t v34 = v29[3];
    v28[2] = v29[2];
    v28[3] = v34;
    uint64_t v35 = *(int *)(v30 + 24);
    uint64_t v100 = v28;
    uint64_t v36 = (void *)((char *)v28 + v35);
    uint64_t v37 = (void *)((char *)v29 + v35);
    uint64_t v38 = type metadata accessor for FMIPUnknownItemProductMetadata();
    uint64_t v95 = *(void *)(v38 - 8);
    v39 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v95 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v96 = v39;
    if (v39(v37, 1, v38))
    {
      uint64_t v40 = sub_1D42D5DA0(&qword_1EA6C9D08);
      memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
      v41 = v100;
      uint64_t v42 = v99;
    }
    else
    {
      uint64_t v43 = v37[1];
      *uint64_t v36 = *v37;
      v36[1] = v43;
      uint64_t v44 = v37[3];
      v36[2] = v37[2];
      v36[3] = v44;
      *((unsigned char *)v36 + 32) = *((unsigned char *)v37 + 32);
      v36[5] = v37[5];
      *((unsigned char *)v36 + 48) = *((unsigned char *)v37 + 48);
      uint64_t v45 = *(int *)(v38 + 32);
      __dst = (char *)v36 + v45;
      __src = (char *)v37 + v45;
      uint64_t v92 = v38;
      uint64_t v46 = sub_1D4469498();
      uint64_t v47 = *(void *)(v46 - 8);
      uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v85 = v46;
      v87 = v48;
      if (v48(__src, 1, v46))
      {
        uint64_t v49 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(__dst, __src, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dst, __src, v46);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v46);
      }
      uint64_t v42 = v99;
      uint64_t v38 = v92;
      uint64_t v58 = *(int *)(v92 + 36);
      long long v59 = (char *)v36 + v58;
      long long v60 = (char *)v37 + v58;
      if (v87(v60, 1, v85))
      {
        uint64_t v61 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v59, v60, v85);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v59, 0, 1, v85);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v36, 0, 1, v92);
      v41 = v100;
    }
    uint64_t v62 = *(int *)(v42 + 28);
    v63 = (void *)((char *)v41 + v62);
    uint64_t v64 = (void *)((char *)v29 + v62);
    if (v96(v64, 1, v38))
    {
      uint64_t v65 = sub_1D42D5DA0(&qword_1EA6C9D08);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      uint64_t v66 = v38;
      uint64_t v67 = v64[1];
      void *v63 = *v64;
      v63[1] = v67;
      uint64_t v68 = v64[3];
      v63[2] = v64[2];
      v63[3] = v68;
      *((unsigned char *)v63 + 32) = *((unsigned char *)v64 + 32);
      v63[5] = v64[5];
      *((unsigned char *)v63 + 48) = *((unsigned char *)v64 + 48);
      uint64_t v94 = v66;
      uint64_t v69 = *(int *)(v66 + 32);
      uint64_t v88 = (char *)v64 + v69;
      __srca = (char *)v63 + v69;
      uint64_t v70 = sub_1D4469498();
      uint64_t v71 = *(void *)(v70 - 8);
      uint64_t v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v97 = v72;
      if (v72(v88, 1, v70))
      {
        uint64_t v73 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(__srca, v88, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(__srca, v88, v70);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(__srca, 0, 1, v70);
      }
      uint64_t v74 = *(int *)(v94 + 36);
      v75 = (char *)v63 + v74;
      uint64_t v76 = (char *)v64 + v74;
      if (v97(v76, 1, v70))
      {
        uint64_t v77 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v75, v76, v70);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v75, 0, 1, v70);
      }
      v41 = v100;
      uint64_t v42 = v99;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v63, 0, 1, v94);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v98 + 56))(v41, 0, 1, v42);
  }
  uint64_t v78 = a3[12];
  uint64_t v79 = a3[13];
  uint64_t v80 = *(void **)(a2 + v78);
  *(void *)(a1 + v78) = v80;
  *(void *)(a1 + v79) = *(void *)(a2 + v79);
  uint64_t v81 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v81) = *(unsigned char *)(a2 + v81);
  uint64_t v82 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v82) = *(unsigned char *)(a2 + v82);
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  id v83 = v80;
  return a1;
}

uint64_t assignWithCopy for FMIPUnknownItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v13 = a3[9];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (void *)(a2 + v13);
    sub_1D43B9F38(a1 + v13, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
    type metadata accessor for FMIPProductType();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v17 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
      uint64_t v18 = *((void *)v17 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v18 + 48))(v15, 1, v17))
      {
        uint64_t v19 = sub_1D42D5DA0(&qword_1EA6C97A0);
        memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        *uint64_t v14 = *v15;
        v14[1] = v15[1];
        v14[2] = v15[2];
        v14[3] = v15[3];
        v14[4] = v15[4];
        v14[5] = v15[5];
        v14[6] = v15[6];
        v14[7] = v15[7];
        v14[8] = v15[8];
        *((unsigned char *)v14 + 72) = *((unsigned char *)v15 + 72);
        *((unsigned char *)v14 + 73) = *((unsigned char *)v15 + 73);
        uint64_t v23 = v17[12];
        v156 = (char *)v15 + v23;
        v159 = (char *)v14 + v23;
        uint64_t v172 = v18;
        uint64_t v24 = sub_1D4469498();
        uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25(v159, v156, v24);
        v25((char *)v14 + v17[13], (char *)v15 + v17[13], v24);
        v25((char *)v14 + v17[14], (char *)v15 + v17[14], v24);
        v25((char *)v14 + v17[15], (char *)v15 + v17[15], v24);
        v25((char *)v14 + v17[16], (char *)v15 + v17[16], v24);
        v25((char *)v14 + v17[17], (char *)v15 + v17[17], v24);
        (*(void (**)(void *, void, uint64_t, int *))(v172 + 56))(v14, 0, 1, v17);
      }
    }
    else if (EnumCaseMultiPayload == 1 || v15[3])
    {
      *uint64_t v14 = *v15;
      v14[1] = v15[1];
      v14[2] = v15[2];
      v14[3] = v15[3];
      v14[4] = v15[4];
      v14[5] = v15[5];
      v14[6] = v15[6];
      v14[7] = v15[7];
      v14[8] = v15[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      long long v20 = *((_OWORD *)v15 + 1);
      long long v21 = *((_OWORD *)v15 + 2);
      long long v22 = *((_OWORD *)v15 + 3);
      v14[8] = v15[8];
      *((_OWORD *)v14 + 2) = v21;
      *((_OWORD *)v14 + 3) = v22;
      *((_OWORD *)v14 + 1) = v20;
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v26 = a3[11];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (char *)(a2 + v26);
  uint64_t v29 = type metadata accessor for FMIPUnknownItemUTMetadata();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  int v32 = v31((char *)v27, 1, v29);
  int v33 = v31(v28, 1, v29);
  if (!v32)
  {
    if (v33)
    {
      sub_1D43B9F38((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
      goto LABEL_17;
    }
    *uint64_t v27 = *(void *)v28;
    v27[1] = *((void *)v28 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v27[2] = *((void *)v28 + 2);
    v27[3] = *((void *)v28 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v174 = v29;
    uint64_t v45 = *(int *)(v29 + 24);
    uint64_t v46 = (char *)v27 + v45;
    uint64_t v47 = &v28[v45];
    uint64_t v48 = type metadata accessor for FMIPUnknownItemProductMetadata();
    __src = *(void **)(v48 - 8);
    uint64_t v158 = (uint64_t)v46;
    uint64_t v49 = (uint64_t (*)(char *, uint64_t, uint64_t))__src[6];
    LODWORD(v46) = v49(v46, 1, v48);
    v164 = v47;
    uint64_t v170 = v48;
    v161 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v49;
    int v50 = v49(v47, 1, v48);
    if (v46)
    {
      if (!v50)
      {
        *(void *)uint64_t v158 = *(void *)v47;
        *(void *)(v158 + 8) = *((void *)v47 + 1);
        *(void *)(v158 + 16) = *((void *)v47 + 2);
        uint64_t v63 = *((void *)v47 + 3);
        *(unsigned char *)(v158 + 32) = v47[32];
        *(void *)(v158 + 24) = v63;
        uint64_t v64 = *((void *)v47 + 5);
        *(unsigned char *)(v158 + 48) = v47[48];
        *(void *)(v158 + 40) = v64;
        uint64_t v65 = *(int *)(v48 + 32);
        v146 = (void *)(v158 + v65);
        v151 = &v47[v65];
        uint64_t v66 = sub_1D4469498();
        uint64_t v67 = *(void *)(v66 - 8);
        uint64_t v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
        uint64_t v69 = v66;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v148 = v68;
        uint64_t v145 = v67;
        if (v68(v151, 1, v69))
        {
          uint64_t v70 = sub_1D42D5DA0(&qword_1EBD7E918);
          memcpy(v146, v151, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v67 + 16))(v146, v151, v69);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v146, 0, 1, v69);
        }
        uint64_t v106 = *(int *)(v170 + 36);
        v107 = (void *)(v158 + v106);
        v108 = &v47[v106];
        uint64_t v62 = v174;
        if (v148(&v164[v106], 1, v69))
        {
          uint64_t v109 = sub_1D42D5DA0(&qword_1EBD7E918);
          memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v145 + 16))(v107, v108, v69);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v145 + 56))(v107, 0, 1, v69);
        }
        ((void (*)(uint64_t, void, uint64_t, uint64_t))__src[7])(v158, 0, 1, v170);
LABEL_55:
        uint64_t v110 = *(int *)(v62 + 28);
        uint64_t v111 = (uint64_t)v27 + v110;
        v112 = &v28[v110];
        int v113 = v161(v111, 1, v170);
        int v114 = v161((uint64_t)v112, 1, v170);
        if (v113)
        {
          if (!v114)
          {
            *(void *)uint64_t v111 = *(void *)v112;
            *(void *)(v111 + 8) = *((void *)v112 + 1);
            *(void *)(v111 + 16) = *((void *)v112 + 2);
            uint64_t v115 = *((void *)v112 + 3);
            *(unsigned char *)(v111 + 32) = v112[32];
            *(void *)(v111 + 24) = v115;
            uint64_t v116 = *((void *)v112 + 5);
            *(unsigned char *)(v111 + 48) = v112[48];
            *(void *)(v111 + 40) = v116;
            uint64_t v117 = *(int *)(v170 + 32);
            v175 = (void *)(v111 + v117);
            v167 = &v112[v117];
            uint64_t v118 = sub_1D4469498();
            v171 = *(void **)(v118 - 8);
            v119 = (unsigned int (*)(char *, uint64_t, uint64_t))v171[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v119(v167, 1, v118))
            {
              uint64_t v120 = sub_1D42D5DA0(&qword_1EBD7E918);
              memcpy(v175, v167, *(void *)(*(void *)(v120 - 8) + 64));
              v121 = v171;
            }
            else
            {
              v121 = v171;
              ((void (*)(void *, char *, uint64_t))v171[2])(v175, v167, v118);
              ((void (*)(void *, void, uint64_t, uint64_t))v171[7])(v175, 0, 1, v118);
            }
            uint64_t v133 = *(int *)(v170 + 36);
            v134 = (void *)(v111 + v133);
            v135 = &v112[v133];
            if (v119(v135, 1, v118))
            {
              uint64_t v136 = sub_1D42D5DA0(&qword_1EBD7E918);
              memcpy(v134, v135, *(void *)(*(void *)(v136 - 8) + 64));
            }
            else
            {
              ((void (*)(void *, char *, uint64_t))v121[2])(v134, v135, v118);
              ((void (*)(void *, void, uint64_t, uint64_t))v121[7])(v134, 0, 1, v118);
            }
            ((void (*)(uint64_t, void, uint64_t, uint64_t))__src[7])(v111, 0, 1, v170);
            goto LABEL_46;
          }
          goto LABEL_61;
        }
        if (v114)
        {
          sub_1D43B9F38(v111, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
LABEL_61:
          v122 = &qword_1EA6C9D08;
LABEL_62:
          size_t v42 = *(void *)(*(void *)(sub_1D42D5DA0(v122) - 8) + 64);
          uint64_t v43 = (void *)v111;
          uint64_t v44 = v112;
          goto LABEL_18;
        }
        *(void *)uint64_t v111 = *(void *)v112;
        *(void *)(v111 + 8) = *((void *)v112 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v111 + 16) = *((void *)v112 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v123 = *((void *)v112 + 3);
        *(unsigned char *)(v111 + 32) = v112[32];
        *(void *)(v111 + 24) = v123;
        uint64_t v124 = *((void *)v112 + 5);
        *(unsigned char *)(v111 + 48) = v112[48];
        *(void *)(v111 + 40) = v124;
        uint64_t v125 = *(int *)(v170 + 32);
        v126 = (void *)(v111 + v125);
        v127 = &v112[v125];
        uint64_t v128 = sub_1D4469498();
        uint64_t v176 = *(void *)(v128 - 8);
        v129 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v176 + 48);
        v168 = v126;
        LODWORD(v126) = v129(v126, 1, v128);
        int v130 = v129(v127, 1, v128);
        if (v126)
        {
          if (!v130)
          {
            (*(void (**)(void *, char *, uint64_t))(v176 + 16))(v168, v127, v128);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v176 + 56))(v168, 0, 1, v128);
            goto LABEL_87;
          }
          size_t v131 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E918) - 8) + 64);
          v132 = v168;
        }
        else
        {
          if (!v130)
          {
            (*(void (**)(void *, char *, uint64_t))(v176 + 24))(v168, v127, v128);
            goto LABEL_87;
          }
          (*(void (**)(void *, uint64_t))(v176 + 8))(v168, v128);
          size_t v131 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E918) - 8) + 64);
          v132 = v168;
        }
        memcpy(v132, v127, v131);
LABEL_87:
        uint64_t v141 = *(int *)(v170 + 36);
        v111 += v141;
        v112 += v141;
        int v142 = v129((void *)v111, 1, v128);
        int v143 = v129(v112, 1, v128);
        if (v142)
        {
          if (!v143)
          {
            (*(void (**)(uint64_t, char *, uint64_t))(v176 + 16))(v111, v112, v128);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v176 + 56))(v111, 0, 1, v128);
            goto LABEL_46;
          }
        }
        else
        {
          if (!v143)
          {
            (*(void (**)(uint64_t, char *, uint64_t))(v176 + 24))(v111, v112, v128);
            goto LABEL_46;
          }
          (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v111, v128);
        }
        v122 = &qword_1EBD7E918;
        goto LABEL_62;
      }
      uint64_t v51 = &qword_1EA6C9D08;
LABEL_22:
      size_t v52 = *(void *)(*(void *)(sub_1D42D5DA0(v51) - 8) + 64);
      uint64_t v53 = (void *)v158;
LABEL_27:
      memcpy(v53, v164, v52);
LABEL_28:
      uint64_t v62 = v174;
      goto LABEL_55;
    }
    if (v50)
    {
      sub_1D43B9F38(v158, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
      size_t v52 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EA6C9D08) - 8) + 64);
      uint64_t v53 = (void *)v158;
      goto LABEL_27;
    }
    *(void *)uint64_t v158 = *(void *)v47;
    *(void *)(v158 + 8) = *((void *)v47 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v158 + 16) = *((void *)v47 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v97 = *((void *)v47 + 3);
    *(unsigned char *)(v158 + 32) = v47[32];
    *(void *)(v158 + 24) = v97;
    uint64_t v98 = *((void *)v47 + 5);
    *(unsigned char *)(v158 + 48) = v47[48];
    *(void *)(v158 + 40) = v98;
    uint64_t v99 = *(int *)(v48 + 32);
    uint64_t v100 = (void *)(v158 + v99);
    v152 = &v47[v99];
    uint64_t v101 = sub_1D4469498();
    __dsta = *(void **)(v101 - 8);
    v102 = (uint64_t (*)(void))__dsta[6];
    v147 = v100;
    LODWORD(v100) = ((uint64_t (*)(void *, uint64_t, uint64_t))v102)(v100, 1, v101);
    int v103 = ((uint64_t (*)(char *, uint64_t, uint64_t))v102)(v152, 1, v101);
    if (v100)
    {
      if (!v103)
      {
        ((void (*)(void *, char *, uint64_t))__dsta[2])(v147, v152, v101);
        ((void (*)(void *, void, uint64_t, uint64_t))__dsta[7])(v147, 0, 1, v101);
        goto LABEL_80;
      }
      size_t v104 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E918) - 8) + 64);
      v105 = v147;
    }
    else
    {
      if (!v103)
      {
        ((void (*)(void *, char *, uint64_t))__dsta[3])(v147, v152, v101);
        goto LABEL_80;
      }
      ((void (*)(void *, uint64_t))__dsta[1])(v147, v101);
      size_t v104 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E918) - 8) + 64);
      v105 = v147;
    }
    memcpy(v105, v152, v104);
LABEL_80:
    uint64_t v137 = *(int *)(v48 + 36);
    v138 = &v47[v137];
    v158 += v137;
    int v139 = v102();
    v164 = v138;
    int v140 = ((uint64_t (*)(char *, uint64_t, uint64_t))v102)(v138, 1, v101);
    if (!v139)
    {
      if (!v140)
      {
        ((void (*)(uint64_t, char *, uint64_t))__dsta[3])(v158, v138, v101);
        goto LABEL_28;
      }
      ((void (*)(uint64_t, uint64_t))__dsta[1])(v158, v101);
      size_t v52 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E918) - 8) + 64);
      uint64_t v53 = (void *)v158;
      goto LABEL_27;
    }
    if (!v140)
    {
      ((void (*)(uint64_t, char *, uint64_t))__dsta[2])(v158, v138, v101);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))__dsta[7])(v158, 0, 1, v101);
      goto LABEL_28;
    }
    uint64_t v51 = &qword_1EBD7E918;
    goto LABEL_22;
  }
  if (v33)
  {
LABEL_17:
    size_t v42 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EA6CA850) - 8) + 64);
    uint64_t v43 = v27;
    uint64_t v44 = v28;
LABEL_18:
    memcpy(v43, v44, v42);
    goto LABEL_46;
  }
  uint64_t v169 = v30;
  *uint64_t v27 = *(void *)v28;
  v27[1] = *((void *)v28 + 1);
  v27[2] = *((void *)v28 + 2);
  v27[3] = *((void *)v28 + 3);
  uint64_t v173 = v29;
  uint64_t v34 = *(int *)(v29 + 24);
  uint64_t v35 = (void *)((char *)v27 + v34);
  uint64_t v36 = &v28[v34];
  uint64_t v37 = type metadata accessor for FMIPUnknownItemProductMetadata();
  uint64_t v157 = *(void *)(v37 - 8);
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, int *))(v157 + 48);
  v39 = (int *)v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v160 = v38;
  if (v38(v36, 1, v39))
  {
    uint64_t v40 = sub_1D42D5DA0(&qword_1EA6C9D08);
    memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
    uint64_t v41 = v173;
  }
  else
  {
    *uint64_t v35 = *(void *)v36;
    v35[1] = *((void *)v36 + 1);
    v35[2] = *((void *)v36 + 2);
    uint64_t v54 = *((void *)v36 + 3);
    *((unsigned char *)v35 + 32) = v36[32];
    v35[3] = v54;
    uint64_t v55 = *((void *)v36 + 5);
    *((unsigned char *)v35 + 48) = v36[48];
    v35[5] = v55;
    v165 = v39;
    uint64_t v56 = v39[8];
    __dst = (char *)v35 + v56;
    __srca = &v36[v56];
    uint64_t v57 = sub_1D4469498();
    uint64_t v58 = *(void *)(v57 - 8);
    long long v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
    uint64_t v60 = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v144 = v58;
    if (v59(__srca, 1, v60))
    {
      uint64_t v61 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(__dst, __srca, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(__dst, __srca, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(__dst, 0, 1, v60);
    }
    uint64_t v71 = v165[9];
    uint64_t v72 = (char *)v35 + v71;
    uint64_t v73 = &v36[v71];
    if (v59(v73, 1, v60))
    {
      uint64_t v74 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v72, v73, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v72, 0, 1, v60);
    }
    uint64_t v41 = v173;
    v39 = v165;
    (*(void (**)(void *, void, uint64_t, int *))(v157 + 56))(v35, 0, 1, v165);
  }
  uint64_t v75 = v169;
  uint64_t v76 = *(int *)(v41 + 28);
  uint64_t v77 = (void *)((char *)v27 + v76);
  uint64_t v78 = &v28[v76];
  if (v160(v78, 1, v39))
  {
    uint64_t v79 = sub_1D42D5DA0(&qword_1EA6C9D08);
    memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
  }
  else
  {
    *uint64_t v77 = *(void *)v78;
    v77[1] = *((void *)v78 + 1);
    v77[2] = *((void *)v78 + 2);
    uint64_t v80 = *((void *)v78 + 3);
    *((unsigned char *)v77 + 32) = v78[32];
    v77[3] = v80;
    uint64_t v81 = *((void *)v78 + 5);
    *((unsigned char *)v77 + 48) = v78[48];
    v77[5] = v81;
    uint64_t v82 = v39[8];
    v163 = (char *)v77 + v82;
    v166 = v39;
    __srcb = &v78[v82];
    uint64_t v83 = sub_1D4469498();
    uint64_t v84 = *(void *)(v83 - 8);
    uint64_t v85 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48);
    uint64_t v86 = v83;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v162 = v85;
    if (v85(__srcb, 1, v86))
    {
      uint64_t v87 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(v163, __srcb, *(void *)(*(void *)(v87 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v163, __srcb, v86);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v163, 0, 1, v86);
    }
    uint64_t v88 = v39[9];
    v89 = (char *)v77 + v88;
    uint64_t v90 = &v78[v88];
    uint64_t v75 = v169;
    if (v162(v90, 1, v86))
    {
      uint64_t v91 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v89, v90, v86);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v89, 0, 1, v86);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v157 + 56))(v77, 0, 1, v166);
    uint64_t v41 = v173;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))((char *)v27, 0, 1, v41);
LABEL_46:
  uint64_t v92 = a3[12];
  v93 = *(void **)(a1 + v92);
  uint64_t v94 = *(void **)(a2 + v92);
  *(void *)(a1 + v92) = v94;
  id v95 = v94;

  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  return a1;
}

uint64_t initializeWithTake for FMIPUnknownItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[9];
  uint64_t v10 = (_OWORD *)(a1 + v9);
  uint64_t v11 = (_OWORD *)(a2 + v9);
  uint64_t v12 = type metadata accessor for FMIPProductType();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v13 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
    uint64_t v14 = *((void *)v13 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v14 + 48))(v11, 1, v13))
    {
      uint64_t v15 = sub_1D42D5DA0(&qword_1EA6C97A0);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      long long v16 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v16;
      long long v17 = v11[3];
      v10[2] = v11[2];
      v10[3] = v17;
      *((void *)v10 + 8) = *((void *)v11 + 8);
      *((_WORD *)v10 + 36) = *((_WORD *)v11 + 36);
      uint64_t v18 = v13[12];
      uint64_t v71 = (char *)v11 + v18;
      uint64_t v74 = (char *)v10 + v18;
      uint64_t v19 = sub_1D4469498();
      uint64_t v77 = v14;
      long long v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
      v20(v74, v71, v19);
      v20((char *)v10 + v13[13], (char *)v11 + v13[13], v19);
      v20((char *)v10 + v13[14], (char *)v11 + v13[14], v19);
      v20((char *)v10 + v13[15], (char *)v11 + v13[15], v19);
      v20((char *)v10 + v13[16], (char *)v11 + v13[16], v19);
      v20((char *)v10 + v13[17], (char *)v11 + v13[17], v19);
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v77 + 56))(v10, 0, 1, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  uint64_t v21 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  long long v22 = (_OWORD *)(a1 + v21);
  uint64_t v23 = (_OWORD *)(a2 + v21);
  uint64_t v24 = type metadata accessor for FMIPUnknownItemUTMetadata();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    uint64_t v26 = sub_1D42D5DA0(&qword_1EA6CA850);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    long long v27 = v23[1];
    *long long v22 = *v23;
    v22[1] = v27;
    uint64_t v28 = *(int *)(v24 + 24);
    uint64_t v78 = v22;
    uint64_t v29 = (_OWORD *)((char *)v22 + v28);
    uint64_t v30 = (_OWORD *)((char *)v23 + v28);
    uint64_t v31 = type metadata accessor for FMIPUnknownItemProductMetadata();
    uint64_t v70 = *(void *)(v31 - 8);
    uint64_t v72 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v70 + 48);
    if (v72(v30, 1, v31))
    {
      uint64_t v32 = sub_1D42D5DA0(&qword_1EA6C9D08);
      memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      *uint64_t v29 = *v30;
      uint64_t v33 = *((void *)v30 + 3);
      *((void *)v29 + 2) = *((void *)v30 + 2);
      *((void *)v29 + 3) = v33;
      *((unsigned char *)v29 + 32) = *((unsigned char *)v30 + 32);
      *((void *)v29 + 5) = *((void *)v30 + 5);
      *((unsigned char *)v29 + 48) = *((unsigned char *)v30 + 48);
      uint64_t v75 = v31;
      uint64_t v34 = *(int *)(v31 + 32);
      __dst = (char *)v29 + v34;
      uint64_t v69 = v25;
      uint64_t v35 = (char *)v30 + v34;
      uint64_t v36 = sub_1D4469498();
      uint64_t v37 = *(void *)(v36 - 8);
      __src = v35;
      uint64_t v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      uint64_t v38 = v35;
      uint64_t v39 = v36;
      uint64_t v64 = v37;
      if (v66(v38, 1, v36))
      {
        uint64_t v40 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(__dst, __src, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, void *, uint64_t))(v37 + 32))(__dst, __src, v39);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v39);
      }
      uint64_t v41 = *(int *)(v75 + 36);
      size_t v42 = (char *)v29 + v41;
      uint64_t v43 = (char *)v30 + v41;
      if (v66(v43, 1, v39))
      {
        uint64_t v44 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *))(v64 + 32))(v42, v43);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v42, 0, 1, v39);
      }
      uint64_t v25 = v69;
      uint64_t v31 = v75;
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v70 + 56))(v29, 0, 1, v75);
    }
    uint64_t v45 = v78;
    uint64_t v46 = *(int *)(v24 + 28);
    uint64_t v47 = (_OWORD *)((char *)v78 + v46);
    uint64_t v48 = (_OWORD *)((char *)v23 + v46);
    if (v72(v48, 1, v31))
    {
      uint64_t v49 = sub_1D42D5DA0(&qword_1EA6C9D08);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      *uint64_t v47 = *v48;
      uint64_t v50 = *((void *)v48 + 3);
      *((void *)v47 + 2) = *((void *)v48 + 2);
      *((void *)v47 + 3) = v50;
      *((unsigned char *)v47 + 32) = *((unsigned char *)v48 + 32);
      *((void *)v47 + 5) = *((void *)v48 + 5);
      *((unsigned char *)v47 + 48) = *((unsigned char *)v48 + 48);
      uint64_t v51 = *(int *)(v31 + 32);
      uint64_t v73 = (char *)v47 + v51;
      uint64_t v76 = v31;
      size_t v52 = (char *)v48 + v51;
      uint64_t v53 = sub_1D4469498();
      uint64_t v54 = *(void *)(v53 - 8);
      __dsta = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
      if (__dsta(v52, 1, v53))
      {
        uint64_t v55 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(v73, v52, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v73, v52, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v73, 0, 1, v53);
      }
      uint64_t v56 = *(int *)(v76 + 36);
      uint64_t v57 = (char *)v47 + v56;
      uint64_t v58 = (char *)v48 + v56;
      if (__dsta(v58, 1, v53))
      {
        uint64_t v59 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v57, v58, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v57, 0, 1, v53);
      }
      uint64_t v45 = v78;
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v70 + 56))(v47, 0, 1, v76);
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v25 + 56))(v45, 0, 1, v24);
  }
  uint64_t v60 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v60) = *(void *)(a2 + v60);
  uint64_t v61 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v61) = *(unsigned char *)(a2 + v61);
  uint64_t v62 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v62) = *(unsigned char *)(a2 + v62);
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  return a1;
}

uint64_t assignWithTake for FMIPUnknownItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v18 = a3[9];
    uint64_t v19 = (_OWORD *)(a1 + v18);
    long long v20 = (_OWORD *)(a2 + v18);
    sub_1D43B9F38(a1 + v18, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
    uint64_t v21 = type metadata accessor for FMIPProductType();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      long long v22 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
      uint64_t v23 = *((void *)v22 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v23 + 48))(v20, 1, v22))
      {
        uint64_t v24 = sub_1D42D5DA0(&qword_1EA6C97A0);
        memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        long long v25 = v20[1];
        *uint64_t v19 = *v20;
        v19[1] = v25;
        long long v26 = v20[3];
        v19[2] = v20[2];
        v19[3] = v26;
        *((void *)v19 + 8) = *((void *)v20 + 8);
        *((_WORD *)v19 + 36) = *((_WORD *)v20 + 36);
        uint64_t v27 = v22[12];
        v167 = (char *)v20 + v27;
        v171 = (char *)v19 + v27;
        uint64_t v28 = sub_1D4469498();
        uint64_t v178 = v23;
        uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32);
        v29(v171, v167, v28);
        v29((char *)v19 + v22[13], (char *)v20 + v22[13], v28);
        v29((char *)v19 + v22[14], (char *)v20 + v22[14], v28);
        v29((char *)v19 + v22[15], (char *)v20 + v22[15], v28);
        v29((char *)v19 + v22[16], (char *)v20 + v22[16], v28);
        v29((char *)v19 + v22[17], (char *)v20 + v22[17], v28);
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v178 + 56))(v19, 0, 1, v22);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  uint64_t v30 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v31 = (char *)(a1 + v30);
  uint64_t v32 = (char *)(a2 + v30);
  uint64_t v33 = type metadata accessor for FMIPUnknownItemUTMetadata();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (v37)
    {
      sub_1D43B9F38((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemUTMetadata);
      goto LABEL_14;
    }
    uint64_t v48 = *((void *)v32 + 1);
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = v48;
    swift_bridgeObjectRelease();
    uint64_t v49 = *((void *)v32 + 3);
    *((void *)v31 + 2) = *((void *)v32 + 2);
    *((void *)v31 + 3) = v49;
    swift_bridgeObjectRelease();
    __dst = (int *)v33;
    uint64_t v50 = *(int *)(v33 + 24);
    uint64_t v51 = &v31[v50];
    size_t v52 = &v32[v50];
    uint64_t v53 = type metadata accessor for FMIPUnknownItemProductMetadata();
    uint64_t v157 = *(void *)(v53 - 8);
    uint64_t v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v157 + 48);
    uint64_t v169 = v51;
    LODWORD(v51) = v54(v51, 1, v53);
    uint64_t v172 = v52;
    uint64_t v180 = v53;
    uint64_t v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v54;
    int v56 = v54(v52, 1, v53);
    if (v51)
    {
      if (v56)
      {
        size_t v57 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EA6C9D08) - 8) + 64);
        uint64_t v58 = v169;
LABEL_23:
        memcpy(v58, v52, v57);
        uint64_t v65 = __dst;
        goto LABEL_62;
      }
      *(_OWORD *)uint64_t v169 = *(_OWORD *)v52;
      uint64_t v66 = *((void *)v52 + 3);
      *((void *)v169 + 2) = *((void *)v52 + 2);
      *((void *)v169 + 3) = v66;
      v169[32] = v52[32];
      *((void *)v169 + 5) = *((void *)v52 + 5);
      v169[48] = v52[48];
      uint64_t v67 = *(int *)(v53 + 32);
      __src = &v169[v67];
      uint64_t v68 = &v52[v67];
      uint64_t v69 = sub_1D4469498();
      uint64_t v70 = *(void *)(v69 - 8);
      v150 = v68;
      v152 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
      uint64_t v71 = v68;
      uint64_t v72 = v69;
      uint64_t v147 = v70;
      if (v152(v71, 1, v69))
      {
        uint64_t v73 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(__src, v150, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, void *, uint64_t))(v70 + 32))(__src, v150, v72);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(__src, 0, 1, v72);
      }
      uint64_t v106 = *(int *)(v53 + 36);
      v107 = &v169[v106];
      v108 = &v172[v106];
      if (v152(&v172[v106], 1, v72))
      {
        uint64_t v109 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v107, v108, v72);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v107, 0, 1, v72);
      }
      uint64_t v65 = __dst;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v169, 0, 1, v180);
LABEL_62:
      uint64_t v116 = v65[7];
      uint64_t v117 = (uint64_t)&v31[v116];
      uint64_t v118 = &v32[v116];
      int v119 = v55(v117, 1, v180);
      int v120 = v55((uint64_t)v118, 1, v180);
      if (v119)
      {
        if (!v120)
        {
          *(_OWORD *)uint64_t v117 = *(_OWORD *)v118;
          uint64_t v121 = *((void *)v118 + 3);
          *(void *)(v117 + 16) = *((void *)v118 + 2);
          *(void *)(v117 + 24) = v121;
          *(unsigned char *)(v117 + 32) = v118[32];
          *(void *)(v117 + 40) = *((void *)v118 + 5);
          *(unsigned char *)(v117 + 48) = v118[48];
          uint64_t v122 = *(int *)(v180 + 32);
          uint64_t v176 = (void *)(v117 + v122);
          uint64_t v123 = &v118[v122];
          uint64_t v124 = sub_1D4469498();
          uint64_t v125 = *(void *)(v124 - 8);
          v126 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48);
          if (v126(v123, 1, v124))
          {
            uint64_t v127 = sub_1D42D5DA0(&qword_1EBD7E918);
            memcpy(v176, v123, *(void *)(*(void *)(v127 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v125 + 32))(v176, v123, v124);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v125 + 56))(v176, 0, 1, v124);
          }
          uint64_t v138 = *(int *)(v180 + 36);
          int v139 = (void *)(v117 + v138);
          int v140 = &v118[v138];
          if (v126(v140, 1, v124))
          {
            uint64_t v141 = sub_1D42D5DA0(&qword_1EBD7E918);
            memcpy(v139, v140, *(void *)(*(void *)(v141 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v125 + 32))(v139, v140, v124);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v125 + 56))(v139, 0, 1, v124);
          }
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v157 + 56))(v117, 0, 1, v180);
          goto LABEL_41;
        }
        goto LABEL_68;
      }
      if (v120)
      {
        sub_1D43B9F38(v117, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
LABEL_68:
        uint64_t v128 = &qword_1EA6C9D08;
LABEL_69:
        size_t v45 = *(void *)(*(void *)(sub_1D42D5DA0(v128) - 8) + 64);
        uint64_t v46 = (void *)v117;
        uint64_t v47 = v118;
        goto LABEL_15;
      }
      uint64_t v129 = *((void *)v118 + 1);
      *(void *)uint64_t v117 = *(void *)v118;
      *(void *)(v117 + 8) = v129;
      swift_bridgeObjectRelease();
      *(void *)(v117 + 16) = *((void *)v118 + 2);
      swift_bridgeObjectRelease();
      *(void *)(v117 + 24) = *((void *)v118 + 3);
      *(unsigned char *)(v117 + 32) = v118[32];
      *(void *)(v117 + 40) = *((void *)v118 + 5);
      *(unsigned char *)(v117 + 48) = v118[48];
      uint64_t v130 = *(int *)(v180 + 32);
      size_t v131 = (void *)(v117 + v130);
      v132 = &v118[v130];
      uint64_t v133 = sub_1D4469498();
      v177 = *(void **)(v133 - 8);
      v134 = (uint64_t (*)(void *, uint64_t, uint64_t))v177[6];
      v166 = v131;
      LODWORD(v131) = v134(v131, 1, v133);
      int v135 = v134(v132, 1, v133);
      if (v131)
      {
        if (!v135)
        {
          ((void (*)(void *, char *, uint64_t))v177[4])(v166, v132, v133);
          ((void (*)(void *, void, uint64_t, uint64_t))v177[7])(v166, 0, 1, v133);
          goto LABEL_83;
        }
        size_t v136 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E918) - 8) + 64);
        uint64_t v137 = v166;
      }
      else
      {
        if (!v135)
        {
          ((void (*)(void *, char *, uint64_t))v177[5])(v166, v132, v133);
          goto LABEL_83;
        }
        ((void (*)(void *, uint64_t))v177[1])(v166, v133);
        size_t v136 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E918) - 8) + 64);
        uint64_t v137 = v166;
      }
      memcpy(v137, v132, v136);
LABEL_83:
      uint64_t v142 = *(int *)(v180 + 36);
      v117 += v142;
      v118 += v142;
      int v143 = v134((void *)v117, 1, v133);
      int v144 = v134(v118, 1, v133);
      if (v143)
      {
        if (!v144)
        {
          ((void (*)(uint64_t, char *, uint64_t))v177[4])(v117, v118, v133);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v177[7])(v117, 0, 1, v133);
          goto LABEL_41;
        }
      }
      else
      {
        if (!v144)
        {
          ((void (*)(uint64_t, char *, uint64_t))v177[5])(v117, v118, v133);
          goto LABEL_41;
        }
        ((void (*)(uint64_t, uint64_t))v177[1])(v117, v133);
      }
      uint64_t v128 = &qword_1EBD7E918;
      goto LABEL_69;
    }
    if (v56)
    {
      sub_1D43B9F38((uint64_t)v169, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItemProductMetadata);
      size_t v57 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EA6C9D08) - 8) + 64);
      uint64_t v58 = v169;
      goto LABEL_23;
    }
    uint64_t v99 = *((void *)v52 + 1);
    *(void *)uint64_t v169 = *(void *)v52;
    *((void *)v169 + 1) = v99;
    swift_bridgeObjectRelease();
    *((void *)v169 + 2) = *((void *)v52 + 2);
    swift_bridgeObjectRelease();
    *((void *)v169 + 3) = *((void *)v52 + 3);
    v169[32] = v52[32];
    *((void *)v169 + 5) = *((void *)v52 + 5);
    v169[48] = v52[48];
    uint64_t v100 = *(int *)(v53 + 32);
    v153 = &v52[v100];
    __srcb = &v169[v100];
    uint64_t v101 = sub_1D4469498();
    uint64_t v148 = *(void *)(v101 - 8);
    v102 = *(uint64_t (**)(void))(v148 + 48);
    int v145 = ((uint64_t (*)(char *, uint64_t, uint64_t))v102)(__srcb, 1, v101);
    v151 = (void *)v101;
    v146 = v102;
    int v103 = ((uint64_t (*)(char *, uint64_t, uint64_t))v102)(v153, 1, v101);
    if (v145)
    {
      if (v103)
      {
        uint64_t v104 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(__srcb, v153, *(void *)(*(void *)(v104 - 8) + 64));
        uint64_t v105 = v101;
      }
      else
      {
        uint64_t v105 = v101;
        (*(void (**)(char *, char *, uint64_t))(v148 + 32))(__srcb, v153, v101);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v148 + 56))(__srcb, 0, 1, v101);
      }
    }
    else
    {
      uint64_t v105 = v101;
      if (v103)
      {
        (*(void (**)(char *, uint64_t))(v148 + 8))(__srcb, v101);
        uint64_t v110 = sub_1D42D5DA0(&qword_1EBD7E918);
        memcpy(__srcb, v153, *(void *)(*(void *)(v110 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v148 + 40))(__srcb, v153, v101);
      }
    }
    uint64_t v65 = __dst;
    uint64_t v111 = *(int *)(v180 + 36);
    v112 = &v172[v111];
    v175 = &v169[v111];
    int __dstd = v146();
    int v113 = ((uint64_t (*)(char *, uint64_t, uint64_t))v146)(v112, 1, v105);
    if (__dstd)
    {
      if (!v113)
      {
        (*(void (**)(char *, char *, void *))(v148 + 32))(v175, v112, v151);
        (*(void (**)(char *, void, uint64_t, void *))(v148 + 56))(v175, 0, 1, v151);
        goto LABEL_62;
      }
      size_t v114 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E918) - 8) + 64);
      uint64_t v115 = v175;
    }
    else
    {
      if (!v113)
      {
        (*(void (**)(char *, char *, void *))(v148 + 40))(v175, v112, v151);
        goto LABEL_62;
      }
      (*(void (**)(char *, void *))(v148 + 8))(v175, v151);
      size_t v114 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E918) - 8) + 64);
      uint64_t v115 = v175;
    }
    memcpy(v115, v112, v114);
    goto LABEL_62;
  }
  if (v37)
  {
LABEL_14:
    size_t v45 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EA6CA850) - 8) + 64);
    uint64_t v46 = v31;
    uint64_t v47 = v32;
LABEL_15:
    memcpy(v46, v47, v45);
    goto LABEL_41;
  }
  long long v38 = *((_OWORD *)v32 + 1);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v38;
  uint64_t v39 = *(int *)(v33 + 24);
  v179 = v31;
  uint64_t v40 = &v31[v39];
  uint64_t v41 = &v32[v39];
  uint64_t v42 = type metadata accessor for FMIPUnknownItemProductMetadata();
  uint64_t v43 = (void **)(*(void *)(v42 - 8) + 48);
  uint64_t v165 = *(void *)(v42 - 8);
  v168 = (unsigned int (*)(char *, uint64_t, uint64_t))*v43;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))*v43)(v41, 1, v42))
  {
    uint64_t v44 = sub_1D42D5DA0(&qword_1EA6C9D08);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    *uint64_t v40 = *(_OWORD *)v41;
    uint64_t v59 = *((void *)v41 + 3);
    *((void *)v40 + 2) = *((void *)v41 + 2);
    *((void *)v40 + 3) = v59;
    *((unsigned char *)v40 + 32) = v41[32];
    *((void *)v40 + 5) = *((void *)v41 + 5);
    *((unsigned char *)v40 + 48) = v41[48];
    uint64_t v173 = (int *)v42;
    uint64_t v60 = *(int *)(v42 + 32);
    __dsta = (char *)v40 + v60;
    uint64_t v61 = &v41[v60];
    uint64_t v62 = sub_1D4469498();
    uint64_t v63 = *(void *)(v62 - 8);
    uint64_t v158 = v62;
    v149 = *(unsigned int (**)(char *, uint64_t))(v63 + 48);
    if (v149(v61, 1))
    {
      uint64_t v64 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(__dsta, v61, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(__dsta, v61, v158);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(__dsta, 0, 1, v158);
    }
    uint64_t v74 = v173[9];
    __dstb = (char *)v40 + v74;
    uint64_t v75 = &v41[v74];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v149)(v75, 1, v158))
    {
      uint64_t v76 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(__dstb, v75, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(__dstb, v75, v158);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(__dstb, 0, 1, v158);
    }
    uint64_t v42 = (uint64_t)v173;
    (*(void (**)(char *, void, uint64_t, int *))(v165 + 56))((char *)v40, 0, 1, v173);
  }
  uint64_t v77 = *(int *)(v33 + 28);
  uint64_t v78 = (_OWORD *)((char *)v179 + v77);
  uint64_t v79 = &v32[v77];
  if (v168(v79, 1, v42))
  {
    uint64_t v80 = sub_1D42D5DA0(&qword_1EA6C9D08);
    memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
    uint64_t v81 = v179;
  }
  else
  {
    _OWORD *v78 = *(_OWORD *)v79;
    uint64_t v82 = *((void *)v79 + 3);
    *((void *)v78 + 2) = *((void *)v79 + 2);
    *((void *)v78 + 3) = v82;
    *((unsigned char *)v78 + 32) = v79[32];
    *((void *)v78 + 5) = *((void *)v79 + 5);
    *((unsigned char *)v78 + 48) = v79[48];
    uint64_t v83 = *(int *)(v42 + 32);
    uint64_t v170 = (char *)v78 + v83;
    uint64_t v174 = (int *)v42;
    uint64_t v84 = &v79[v83];
    uint64_t v85 = sub_1D4469498();
    uint64_t v86 = *(void *)(v85 - 8);
    v159 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
    __dstc = v84;
    uint64_t v87 = v84;
    uint64_t v88 = v85;
    __srca = (void (**)(void *, const void *, void))v86;
    if (v159(v87, 1, v85))
    {
      uint64_t v89 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(v170, __dstc, *(void *)(*(void *)(v89 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, void *, uint64_t))(v86 + 32))(v170, __dstc, v88);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v170, 0, 1, v88);
    }
    uint64_t v81 = v179;
    uint64_t v90 = v174[9];
    v181 = (char *)v78 + v90;
    uint64_t v91 = &v79[v90];
    if (v159(v91, 1, v88))
    {
      uint64_t v92 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(v181, v91, *(void *)(*(void *)(v92 - 8) + 64));
    }
    else
    {
      __srca[4](v181, v91, v88);
      ((void (*)(char *, void, uint64_t, uint64_t))__srca[7])(v181, 0, 1, v88);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v165 + 56))(v78, 0, 1, v174);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v81, 0, 1, v33);
LABEL_41:
  uint64_t v93 = a3[12];
  uint64_t v94 = *(void **)(a1 + v93);
  *(void *)(a1 + v93) = *(void *)(a2 + v93);

  uint64_t v95 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v95) = *(void *)(a2 + v95);
  uint64_t v96 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v96) = *(unsigned char *)(a2 + v96);
  uint64_t v97 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(unsigned char *)(a1 + v97) = *(unsigned char *)(a2 + v97);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPUnknownItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D43B9254);
}

uint64_t sub_1D43B9254(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = type metadata accessor for FMIPProductType();
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[9];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    uint64_t v15 = sub_1D42D5DA0(&qword_1EA6CA850);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[11];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for FMIPUnknownItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D43B93F0);
}

uint64_t sub_1D43B93F0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1D4469688();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = type metadata accessor for FMIPProductType();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[9];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = sub_1D42D5DA0(&qword_1EA6CA850);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[11];
  return v16(v18, a2, a2, v17);
}

uint64_t getEnumTagSinglePayload for FMIPUnknownItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPUnknownItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    char *result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43B96D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPUnknownItem.CodingKeys()
{
  return &type metadata for FMIPUnknownItem.CodingKeys;
}

unint64_t sub_1D43B9710()
{
  unint64_t result = qword_1EA6CA928;
  if (!qword_1EA6CA928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA928);
  }
  return result;
}

unint64_t sub_1D43B9768()
{
  unint64_t result = qword_1EA6CA930;
  if (!qword_1EA6CA930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA930);
  }
  return result;
}

unint64_t sub_1D43B97C0()
{
  unint64_t result = qword_1EA6CA938;
  if (!qword_1EA6CA938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA938);
  }
  return result;
}

uint64_t sub_1D43B9814(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

char *sub_1D43B9908(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D43B99F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D43B9AE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 352 * a1 + 32;
    unint64_t v6 = a3 + 352 * v4;
    if (v5 >= v6 || v5 + 352 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D43B9BD8()
{
  unint64_t v0 = sub_1D446A518();
  swift_bridgeObjectRelease();
  if (v0 >= 0xF) {
    return 15;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D43B9C24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      sub_1D42D5DA0(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D43B9D2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

uint64_t sub_1D43B9E20(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D43B9E7C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D43B9ED0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D43B9F38(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1D43B9F98()
{
  unint64_t result = qword_1EA6CA9E8;
  if (!qword_1EA6CA9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA9E8);
  }
  return result;
}

unint64_t sub_1D43B9FEC()
{
  unint64_t result = qword_1EA6CA9F0;
  if (!qword_1EA6CA9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CA9F0);
  }
  return result;
}

uint64_t sub_1D43BA040(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D43BA0A8()
{
  v1 = (uint64_t *)(v0 + qword_1EA6E48C8);
  if ((*(unsigned char *)(v0 + qword_1EA6E48C8 + 48) & 1) == 0)
  {
    uint64_t v3 = v1[4];
    uint64_t v2 = v1[5];
    uint64_t v5 = v1[2];
    uint64_t v4 = v1[3];
    uint64_t v6 = *v1;
    uint64_t v7 = *(void *)(v0 + qword_1EA6E48C8 + 8);
    uint64_t v8 = MEMORY[0x1E4FBB550];
    uint64_t v11 = MEMORY[0x1E4FBB550];
    v10[0] = v6;
    swift_beginAccess();
    sub_1D42C4018((uint64_t)v10, 0x3156676174726961, 0xE800000000000000);
    swift_endAccess();
    sub_1D43331A4();
    uint64_t v11 = v8;
    v10[0] = v7;
    swift_beginAccess();
    sub_1D42C4018((uint64_t)v10, 0x3256676174726961, 0xE800000000000000);
    swift_endAccess();
    sub_1D43331A4();
    uint64_t v11 = v8;
    v10[0] = v5;
    swift_beginAccess();
    sub_1D42C4018((uint64_t)v10, 0x3156616E6D66, 0xE600000000000000);
    swift_endAccess();
    sub_1D43331A4();
    uint64_t v11 = v8;
    v10[0] = v4;
    swift_beginAccess();
    sub_1D42C4018((uint64_t)v10, 0x3256616E6D66, 0xE600000000000000);
    swift_endAccess();
    sub_1D43331A4();
    uint64_t v11 = v8;
    v10[0] = v3;
    swift_beginAccess();
    sub_1D42C4018((uint64_t)v10, 0x6E6D66656C707061, 0xEB00000000315661);
    swift_endAccess();
    sub_1D43331A4();
    uint64_t v11 = v8;
    v10[0] = v2;
    swift_beginAccess();
    sub_1D42C4018((uint64_t)v10, 0x6E6D66656C707061, 0xEB00000000325661);
    swift_endAccess();
    return sub_1D43331A4();
  }
  return result;
}

uint64_t sub_1D43BA2FC()
{
  return type metadata accessor for FMIPInitClientRequest();
}

double FMIPLocation.init(safeLocation:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_location);
  char v14 = 4;
  id v5 = objc_msgSend(a1, sel_location);
  id v6 = objc_msgSend(v5, sel_floor);

  if (v6)
  {
    id v7 = objc_msgSend(v6, sel_level);

    double v8 = (double)(uint64_t)v7;
  }
  else
  {
    double v8 = -1.0;
  }
  sub_1D42B7188(v4, &v14, 1, 0, 1, (uint64_t)v15, v8);

  char v9 = v15[1];
  char v10 = v15[2];
  char v11 = v15[3];
  uint64_t v12 = v16;
  double result = v17;
  *(unsigned char *)a2 = v15[0];
  *(unsigned char *)(a2 + 1) = v9;
  *(unsigned char *)(a2 + 2) = v10;
  *(unsigned char *)(a2 + 3) = v11;
  *(void *)(a2 + 8) = v12;
  *(double *)(a2 + 16) = result;
  return result;
}

double FMIPLocation.init(location:type:)@<D0>(void *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1D4469618();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  HIBYTE(v22) = *a2;
  id v10 = objc_msgSend(a1, sel_timestamp);
  sub_1D44695D8();

  sub_1D44695A8();
  double v12 = v11;
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  id v13 = objc_msgSend(a1, sel_floor);
  if (v13)
  {
    char v14 = v13;
    id v15 = objc_msgSend(v13, sel_level);

    double v16 = (double)(uint64_t)v15;
  }
  else
  {
    double v16 = -1.0;
  }
  sub_1D42B7188(a1, (char *)&v22 + 7, v12 < -3600.0, 0, 1, (uint64_t)v23, v16);
  char v17 = v23[1];
  char v18 = v23[2];
  char v19 = v23[3];
  uint64_t v20 = v24;
  double result = v25;
  *(unsigned char *)a3 = v23[0];
  *(unsigned char *)(a3 + 1) = v17;
  *(unsigned char *)(a3 + 2) = v18;
  *(unsigned char *)(a3 + 3) = v19;
  *(void *)(a3 + 8) = v20;
  *(double *)(a3 + 16) = result;
  return result;
}

double FMIPLocation.init(location:shiftedLocation:)@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = *(unsigned char *)a1;
  char v5 = *(unsigned char *)(a1 + 1);
  char v6 = *(unsigned char *)(a1 + 2);
  uint64_t v7 = *(void **)(a1 + 8);
  double v8 = *(double *)(a1 + 16);
  char v14 = *(unsigned char *)(a1 + 3);
  sub_1D42B7188(a2, &v14, v4, v5, v6, (uint64_t)v15, v8);

  char v9 = v15[1];
  char v10 = v15[2];
  char v11 = v15[3];
  uint64_t v12 = v16;
  double result = v17;
  *(unsigned char *)a3 = v15[0];
  *(unsigned char *)(a3 + 1) = v9;
  *(unsigned char *)(a3 + 2) = v10;
  *(unsigned char *)(a3 + 3) = v11;
  *(void *)(a3 + 8) = v12;
  *(double *)(a3 + 16) = result;
  return result;
}

double FMIPLocation.init(beaconLocation:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D4469618();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  objc_msgSend(a1, sel_latitude);
  double v9 = v8;
  objc_msgSend(a1, sel_longitude);
  double v11 = v10;
  objc_msgSend(a1, sel_horizontalAccuracy);
  double v13 = v12;
  id v14 = objc_msgSend(a1, sel_timestamp);
  sub_1D44695D8();

  id v15 = objc_allocWithZone(MEMORY[0x1E4F1E5F0]);
  uint64_t v16 = (void *)sub_1D4469578();
  id v17 = objc_msgSend(v15, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_speed_timestamp_, v16, v9, v11, -1.0, v13, -1.0, -1.0, -1.0);

  char v18 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  id v19 = objc_msgSend(a1, sel_source);
  sub_1D43BAF54((char *)&v28 + 7);

  id v20 = objc_msgSend(a1, sel_timestamp);
  sub_1D44695D8();

  sub_1D44695A8();
  double v22 = v21;
  v18(v7, v4);
  sub_1D42B7188(v17, (char *)&v28 + 7, v22 < -3600.0, 0, 1, (uint64_t)v29, -1.0);

  char v23 = v29[1];
  char v24 = v29[2];
  char v25 = v29[3];
  uint64_t v26 = v30;
  double result = v31;
  *(unsigned char *)a2 = v29[0];
  *(unsigned char *)(a2 + 1) = v23;
  *(unsigned char *)(a2 + 2) = v24;
  *(unsigned char *)(a2 + 3) = v25;
  *(void *)(a2 + 8) = v26;
  *(double *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1D43BA958(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D44119D4(*a1, *a2);
}

uint64_t sub_1D43BA964()
{
  return sub_1D446A888();
}

uint64_t sub_1D43BA9CC()
{
  FMIPLocationType.rawValue.getter();
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43BAA30()
{
  return sub_1D446A888();
}

FMIPCore::FMIPLocationType_optional sub_1D43BAA94(Swift::String *a1)
{
  return FMIPLocationType.init(rawValue:)(*a1);
}

unint64_t sub_1D43BAAA0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FMIPLocationType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t FMIPLocation.isOld.getter()
{
  return *v0;
}

uint64_t FMIPLocation.isInaccurate.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t FMIPLocation.isLocationFinished.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

void FMIPLocation.locationType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 3);
}

id FMIPLocation.location.getter()
{
  return *(id *)(v0 + 8);
}

uint64_t sub_1D43BAAF4(char a1)
{
  uint64_t result = 0x6564757469746C61;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x76654C726F6F6C66;
      break;
    case 2:
      uint64_t result = 0xD000000000000012;
      break;
    case 3:
      uint64_t result = 0x756363616E497369;
      break;
    case 4:
    case 11:
      uint64_t result = 0xD000000000000010;
      break;
    case 5:
      uint64_t result = 0x646C4F7369;
      break;
    case 6:
      uint64_t result = 0x656475746974616CLL;
      break;
    case 7:
      unsigned int v3 = 1633906540;
      goto LABEL_10;
    case 8:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    case 9:
      unsigned int v3 = 1769172848;
LABEL_10:
      uint64_t result = v3 | 0x6E6F697400000000;
      break;
    case 10:
      uint64_t result = 0x6D617453656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D43BACA8(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1D43BAAF4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1D43BAAF4(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D43BAD34()
{
  char v1 = *v0;
  sub_1D446A828();
  sub_1D43BAAF4(v1);
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  return sub_1D446A888();
}

uint64_t sub_1D43BAD98()
{
  sub_1D43BAAF4(*v0);
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43BADEC()
{
  char v1 = *v0;
  sub_1D446A828();
  sub_1D43BAAF4(v1);
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  return sub_1D446A888();
}

uint64_t sub_1D43BAE4C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43BC2C4();
  *a1 = result;
  return result;
}

uint64_t sub_1D43BAE7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D43BAAF4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D43BAEA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43BC2C4();
  *a1 = result;
  return result;
}

void sub_1D43BAED0(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_1D43BAEDC(uint64_t a1)
{
  unint64_t v2 = sub_1D42D8CE8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D43BAF18(uint64_t a1)
{
  unint64_t v2 = sub_1D42D8CE8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D43BAF54@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D4469B38();
  uint64_t v4 = v3;
  if (v2 == sub_1D4469B38() && v4 == v5)
  {
    char v9 = 7;
LABEL_8:
    uint64_t result = swift_bridgeObjectRelease_n();
    goto LABEL_9;
  }
  char v7 = sub_1D446A758();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v7)
  {
    char v9 = 7;
    goto LABEL_9;
  }
  uint64_t v10 = sub_1D4469B38();
  uint64_t v12 = v11;
  if (v10 == sub_1D4469B38() && v12 == v13)
  {
    char v9 = 8;
    goto LABEL_8;
  }
  char v15 = sub_1D446A758();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v15)
  {
    char v9 = 8;
    goto LABEL_9;
  }
  uint64_t v16 = sub_1D4469B38();
  uint64_t v18 = v17;
  if (v16 == sub_1D4469B38() && v18 == v19)
  {
    char v9 = 9;
    goto LABEL_8;
  }
  char v20 = sub_1D446A758();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v20)
  {
    char v9 = 9;
    goto LABEL_9;
  }
  uint64_t v21 = sub_1D4469B38();
  uint64_t v23 = v22;
  if (v21 == sub_1D4469B38() && v23 == v24)
  {
    char v9 = 10;
    goto LABEL_8;
  }
  char v25 = sub_1D446A758();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v25)
  {
    char v9 = 10;
    goto LABEL_9;
  }
  uint64_t v26 = sub_1D4469B38();
  uint64_t v28 = v27;
  if (v26 == sub_1D4469B38() && v28 == v29)
  {
    char v9 = 11;
    goto LABEL_8;
  }
  char v30 = sub_1D446A758();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v30)
  {
    char v9 = 11;
    goto LABEL_9;
  }
  uint64_t v31 = sub_1D4469B38();
  uint64_t v33 = v32;
  if (v31 == sub_1D4469B38() && v33 == v34)
  {
    char v9 = 12;
    goto LABEL_8;
  }
  char v35 = sub_1D446A758();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v35)
  {
    char v9 = 12;
    goto LABEL_9;
  }
  uint64_t v36 = sub_1D4469B38();
  uint64_t v38 = v37;
  if (v36 == sub_1D4469B38() && v38 == v39)
  {
    char v9 = 14;
    goto LABEL_8;
  }
  char v40 = sub_1D446A758();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v40)
  {
    char v9 = 14;
    goto LABEL_9;
  }
  uint64_t v41 = sub_1D4469B38();
  uint64_t v43 = v42;
  if (v41 == sub_1D4469B38() && v43 == v44)
  {
    char v9 = 1;
    goto LABEL_8;
  }
  char v45 = sub_1D446A758();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v45)
  {
    char v9 = 1;
    goto LABEL_9;
  }
  uint64_t v46 = sub_1D4469B38();
  uint64_t v48 = v47;
  if (v46 == sub_1D4469B38() && v48 == v49)
  {
    char v9 = 15;
    goto LABEL_8;
  }
  char v50 = sub_1D446A758();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v50)
  {
    char v9 = 15;
    goto LABEL_9;
  }
  uint64_t v51 = sub_1D4469B38();
  uint64_t v53 = v52;
  if (v51 == sub_1D4469B38() && v53 == v54)
  {
    char v9 = 18;
    goto LABEL_8;
  }
  char v55 = sub_1D446A758();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v55)
  {
    char v9 = 18;
    goto LABEL_9;
  }
  uint64_t v56 = sub_1D4469B38();
  uint64_t v58 = v57;
  if (v56 == sub_1D4469B38() && v58 == v59)
  {
    char v9 = 17;
    goto LABEL_8;
  }
  char v60 = sub_1D446A758();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v60)
  {
    char v9 = 17;
    goto LABEL_9;
  }
  uint64_t v61 = sub_1D4469B38();
  uint64_t v63 = v62;
  char v9 = 19;
  if (v61 == sub_1D4469B38() && v63 == v64) {
    goto LABEL_8;
  }
  char v65 = sub_1D446A758();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v65) {
    char v9 = 19;
  }
  else {
    char v9 = 0;
  }
LABEL_9:
  *a1 = v9;
  return result;
}

uint64_t FMIPLocation.hash(into:)()
{
  char v1 = *(void **)(v0 + 8);
  sub_1D446A848();
  sub_1D446A848();
  sub_1D446A848();
  FMIPLocationType.rawValue.getter();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  id v2 = v1;
  sub_1D446A128();

  return sub_1D446A868();
}

uint64_t FMIPLocation.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t sub_1D43BB62C()
{
  return sub_1D446A888();
}

uint64_t sub_1D43BB6A4()
{
  return sub_1D446A888();
}

uint64_t sub_1D43BB714(void *a1)
{
  id v1 = a1;
  uint64_t v2 = CLLocation.hash.getter();

  return v2;
}

uint64_t CLLocation.hash.getter()
{
  uint64_t v1 = sub_1D4469618();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D446A898();
  objc_msgSend(v0, sel_coordinate);
  sub_1D446A868();
  objc_msgSend(v0, sel_coordinate);
  sub_1D446A868();
  objc_msgSend(v0, sel_altitude);
  sub_1D446A868();
  objc_msgSend(v0, sel_course);
  sub_1D446A868();
  objc_msgSend(v0, sel_horizontalAccuracy);
  sub_1D446A868();
  objc_msgSend(v0, sel_verticalAccuracy);
  sub_1D446A868();
  id v5 = objc_msgSend(v0, sel_timestamp);
  sub_1D44695D8();

  sub_1D44695F8();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  long long v14 = v9;
  long long v15 = v10;
  uint64_t v16 = v11;
  long long v12 = *(_OWORD *)&v7[8];
  long long v13 = v8;
  return sub_1D446A878();
}

uint64_t sub_1D43BB934(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_1D43BBDD8(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    long long v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  long long v13 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_1D4469CB8();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_1D4469BE8();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_1D4469BE8();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_1D4469CD8();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v13 = sub_1D43AFEA0(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    long long v13 = sub_1D43AFEA0((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_1D4469BE8();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_1D4469CD8();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v13 = sub_1D43AFEA0(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      long long v13 = sub_1D43AFEA0((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    v13[2] = v39 + 1;
    char v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1D446A478();
  __break(1u);
LABEL_42:
  uint64_t result = sub_1D446A478();
  __break(1u);
  return result;
}

uint64_t sub_1D43BBDD8(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_1D4469CD8();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_1D43AFEA0(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_1D43AFEA0((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_1D446A478();
  __break(1u);
  return result;
}

unint64_t sub_1D43BBF38()
{
  unint64_t result = qword_1EA6CAA98;
  if (!qword_1EA6CAA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAA98);
  }
  return result;
}

unint64_t sub_1D43BBF90()
{
  unint64_t result = qword_1EA6CAAA0;
  if (!qword_1EA6CAAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAAA0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPLocationType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPLocationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    char *result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43BC140);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPLocationType()
{
  return &type metadata for FMIPLocationType;
}

uint64_t assignWithCopy for FMIPLocation(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  unsigned int v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for FMIPLocation(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  unsigned int v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

unint64_t sub_1D43BC270()
{
  unint64_t result = qword_1EA6CAAA8;
  if (!qword_1EA6CAAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAAA8);
  }
  return result;
}

uint64_t sub_1D43BC2C4()
{
  unint64_t v0 = sub_1D446A518();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D43BC310(void *a1)
{
  int v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_1D446A758() & 1;
  }
}

uint64_t sub_1D43BC368()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D43BC3A0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D43BC3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void sub_1D43BC3C4(void *a1)
{
  uint64_t v2 = v1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
  swift_retain();
  uint64_t v5 = sub_1D44698F8();
  os_log_type_t v6 = sub_1D446A038();
  if (os_log_type_enabled(v5, v6))
  {
    BOOL v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)BOOL v7 = 67109120;
    v18[0] = *(unsigned __int8 *)(v2 + 40);
    sub_1D446A188();
    swift_release();
    _os_log_impl(&dword_1D4271000, v5, v6, "FMIPGarbageCollector: scheduleAccountVerification alreadyPending?: %{BOOL}d", v7, 8u);
    MEMORY[0x1D9447730](v7, -1, -1);

    if (*(unsigned char *)(v2 + 40)) {
      return;
    }
  }
  else
  {

    swift_release();
    if (*(unsigned char *)(v2 + 40)) {
      return;
    }
  }
  if (*(void *)(v2 + 56))
  {
    id v8 = objc_msgSend(a1, sel_userInfo);
    if (!v8) {
      return;
    }
    uint64_t v9 = v8;
    uint64_t v10 = sub_1D4469A58();

    uint64_t v16 = sub_1D4469B38();
    uint64_t v17 = v11;
    sub_1D446A308();
    if (*(void *)(v10 + 16) && (unint64_t v12 = sub_1D43AF030((uint64_t)v18), (v13 & 1) != 0))
    {
      sub_1D42CBAC0(*(void *)(v10 + 56) + 32 * v12, (uint64_t)&v19);
    }
    else
    {
      long long v19 = 0u;
      long long v20 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1D43B9E7C((uint64_t)v18);
    if (!*((void *)&v20 + 1))
    {
      sub_1D429D4F4((uint64_t)&v19);
      return;
    }
    if ((swift_dynamicCast() & 1) == 0) {
      return;
    }
    uint64_t v14 = *(void *)(v2 + 56);
    if (!v14)
    {
      swift_bridgeObjectRelease();
      return;
    }
    if (v16 == *(void *)(v2 + 48) && v14 == v17)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v15 = sub_1D446A758();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0) {
        return;
      }
    }
  }
  sub_1D43BC6B4();
}

uint64_t sub_1D43BC6B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D4469958();
  uint64_t v37 = *(void *)(v2 - 8);
  uint64_t v38 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v35 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1D44699B8();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v33 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1D44699D8();
  uint64_t v5 = *(void *)(v32 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v32);
  id v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = sub_1D4469968();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v0 + 40) = 1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1D4469928();
  sub_1D42D7FAC(v15, (uint64_t)qword_1EBD83228);
  uint64_t v16 = sub_1D44698F8();
  os_log_type_t v17 = sub_1D446A038();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = v1;
    long long v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v19 = 0;
    _os_log_impl(&dword_1D4271000, v16, v17, "FMIPGarbageCollector: Dispatching verification on background", v19, 2u);
    long long v20 = v19;
    uint64_t v1 = v18;
    MEMORY[0x1D9447730](v20, -1, -1);
  }

  sub_1D42AADA4();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FBCB10], v11);
  uint64_t v31 = sub_1D446A0D8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1D44699C8();
  uint64_t v21 = v10;
  MEMORY[0x1D9445D60](v8, 0.2);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v23 = v32;
  v22(v8, v32);
  aBlock[4] = sub_1D43BD044;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0D9D0;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v25 = v33;
  sub_1D4469988();
  uint64_t v39 = MEMORY[0x1E4FBC860];
  sub_1D42E81D4();
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42E2378();
  unint64_t v26 = v35;
  uint64_t v27 = v38;
  sub_1D446A1F8();
  uint64_t v28 = (void *)v31;
  MEMORY[0x1D94463E0](v21, v25, v26, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v27);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v36);
  v22(v21, v23);
  return swift_release();
}

void sub_1D43BCBA0(uint64_t a1)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  uint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPGarbageCollector: Async verifying account", v5, 2u);
    MEMORY[0x1D9447730](v5, -1, -1);
  }

  sub_1D429F4E8();
  *(unsigned char *)(a1 + 40) = 0;
}

void sub_1D43BCC88()
{
  v29[3] = *(id *)MEMORY[0x1E4F143B8];
  id v1 = objc_msgSend(self, sel_defaultManager);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v28 = *(void *)(v2 + 16);
  if (v28)
  {
    uint64_t v25 = v0;
    uint64_t v27 = v2 + 32;
    swift_bridgeObjectRetain();
    unint64_t v3 = 0;
    uint64_t v26 = v2;
    do
    {
      if (v3 >= *(void *)(v2 + 16)) {
        __break(1u);
      }
      uint64_t v4 = v27 + 16 * v3;
      uint64_t v6 = *(void **)v4;
      uint64_t v5 = *(void **)(v4 + 8);
      swift_bridgeObjectRetain();
      uint64_t v7 = (void *)sub_1D4469B08();
      v29[0] = 0;
      id v8 = objc_msgSend(v1, sel_contentsOfDirectoryAtPath_error_, v7, v29);

      id v9 = v29[0];
      if (v8)
      {
        uint64_t v10 = sub_1D4469D78();
        id v11 = v9;

        uint64_t v12 = *(void *)(v10 + 16);
        if (v12)
        {
          uint64_t v13 = v10 + 40;
          for (uint64_t i = v12 - 1; ; --i)
          {
            v29[0] = v6;
            v29[1] = v5;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1D4469C08();
            swift_bridgeObjectRelease();
            uint64_t v15 = (void *)sub_1D4469B08();
            swift_bridgeObjectRelease();
            v29[0] = 0;
            unsigned int v16 = objc_msgSend(v1, sel_removeItemAtPath_error_, v15, v29);

            if (!v16)
            {
              id v18 = v29[0];
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v2 = v26;
              goto LABEL_15;
            }
            if (!i) {
              break;
            }
            v13 += 16;
            id v17 = v29[0];
          }
          id v24 = v29[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v2 = v26;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        id v18 = v29[0];
        swift_bridgeObjectRelease();
LABEL_15:
        long long v19 = (void *)sub_1D44693D8();

        swift_willThrow();
        if (qword_1EBD80068 != -1) {
          swift_once();
        }
        uint64_t v20 = sub_1D4469928();
        sub_1D42D7FAC(v20, (uint64_t)qword_1EBD83228);
        uint64_t v21 = sub_1D44698F8();
        os_log_type_t v22 = sub_1D446A018();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v23 = 0;
          _os_log_impl(&dword_1D4271000, v21, v22, "FMIPGarbageCollector: Error deleting file", v23, 2u);
          MEMORY[0x1D9447730](v23, -1, -1);
        }
      }
      ++v3;
    }
    while (v3 != v28);
    swift_bridgeObjectRelease();
    uint64_t v0 = v25;
  }
  if (MEMORY[0x1D9447840](v0 + 64))
  {
    sub_1D43888BC();

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

uint64_t sub_1D43BCFEC()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1D42F9538(v0 + 64);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1D43BD044()
{
  sub_1D43BCBA0(v0);
}

char sub_1D43BD04C@<W0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7CEA0);
  char result = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 56);
  if (!v7) {
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for FMIPDevice();
    sub_1D43BD5E4(v7+ *(int *)(v9 + 112)+ ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80)), (uint64_t)v6);
    uint64_t v10 = type metadata accessor for FMIPPlaySoundMetadata();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v6, 1, v10) == 1)
    {
      char result = sub_1D43BD64C((uint64_t)v6);
LABEL_5:
      LOBYTE(v8) = 0;
      goto LABEL_8;
    }
    uint64_t v11 = *v6;
    sub_1D42D9F90((uint64_t)v6);
    char result = FMIPActionStatus.init(rawValue:)(qword_1D4473E08[v11]).value;
    LOBYTE(v8) = v13;
    if (v13 == 18) {
      LOBYTE(v8) = 0;
    }
  }
LABEL_8:
  *a1 = v8;
  return result;
}

uint64_t sub_1D43BD1A4(uint64_t a1)
{
  return sub_1D43BD1F0(a1);
}

uint64_t sub_1D43BD1F0(uint64_t a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7CEA0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42A4D5C(a1, (uint64_t)v28);
  uint64_t v6 = sub_1D432C7E4(v28);
  uint64_t v7 = v6;
  if (!v1)
  {
    uint64_t v8 = *(void *)(v6 + 56);
    if (v8 && *(void *)(v8 + 16))
    {
      uint64_t v9 = type metadata accessor for FMIPDevice();
      sub_1D43BD5E4(v8+ *(int *)(v9 + 112)+ ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80)), (uint64_t)v5);
      uint64_t v10 = type metadata accessor for FMIPPlaySoundMetadata();
      int v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10);
      swift_retain();
      if (v11 == 1)
      {
        unint64_t v12 = 7104878;
        sub_1D43BD64C((uint64_t)v5);
        unint64_t v13 = 0xE300000000000000;
      }
      else
      {
        unint64_t v12 = FMIPPlaySoundMetadata.debugDescription.getter();
        unint64_t v13 = v14;
        sub_1D42D9F90((uint64_t)v5);
      }
    }
    else
    {
      unint64_t v12 = 7104878;
      swift_retain();
      unint64_t v13 = 0xE300000000000000;
    }
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1D4469928();
    sub_1D42D7FAC(v15, (uint64_t)qword_1EBD83228);
    swift_retain_n();
    swift_bridgeObjectRetain();
    unsigned int v16 = sub_1D44698F8();
    os_log_type_t v17 = sub_1D446A038();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      v28[0] = v27;
      *(_DWORD *)uint64_t v19 = 134218498;
      unint64_t v25 = v12;
      int v26 = v18;
      sub_1D43BD04C(&v29);
      uint64_t v20 = qword_1D4473E08[(char)v29];
      swift_release();
      uint64_t v29 = v20;
      sub_1D446A188();
      swift_release();
      *(_WORD *)(v19 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1D42CB9EC(v25, v13, v28);
      sub_1D446A188();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 22) = 2080;
      uint64_t v21 = sub_1D432CBAC();
      uint64_t v29 = sub_1D42CB9EC(v21, v22, v28);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v16, (os_log_type_t)v26, "FMIPPlaySoundResponse: initialized with coder status %ld metadata: %s - %s", (uint8_t *)v19, 0x20u);
      uint64_t v23 = v27;
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v23, -1, -1);
      MEMORY[0x1D9447730](v19, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_release_n();
    }
  }
  sub_1D42BEC64(a1);
  return v7;
}

uint64_t type metadata accessor for FMIPPlaySoundResponse()
{
  return self;
}

uint64_t sub_1D43BD5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7CEA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D43BD64C(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7CEA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1D43BD6DC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5 = sub_1D4469B38();
  a4(v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  return v6;
}

id FMPhoneNumberUtil.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id FMPhoneNumberUtil.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPhoneNumberUtil();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for FMPhoneNumberUtil()
{
  return self;
}

id FMPhoneNumberUtil.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPhoneNumberUtil();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D43BDA80()
{
  uint64_t result = CPPhoneNumberCopyHomeCountryCode();
  if (!result)
  {
    __break(1u);
    goto LABEL_27;
  }
  id v1 = (void *)result;
  uint64_t v2 = sub_1D4469B38();
  unint64_t v4 = v3;

  uint64_t v5 = v4 & 0x2000000000000000;
  uint64_t v6 = HIBYTE(v4) & 0xF;
  uint64_t v7 = v2 & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0) {
    uint64_t v8 = HIBYTE(v4) & 0xF;
  }
  else {
    uint64_t v8 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8)
  {
    swift_bridgeObjectRelease();
    uint64_t result = CPPhoneNumberCopyActiveCountryCode();
    if (result)
    {
      uint64_t v9 = (void *)result;
      uint64_t v2 = sub_1D4469B38();
      unint64_t v11 = v10;

      uint64_t v5 = v11 & 0x2000000000000000;
      uint64_t v6 = HIBYTE(v11) & 0xF;
      uint64_t v7 = v2 & 0xFFFFFFFFFFFFLL;
      goto LABEL_8;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
LABEL_8:
  if (v5) {
    uint64_t v12 = v6;
  }
  else {
    uint64_t v12 = v7;
  }
  if (!v12)
  {
    swift_bridgeObjectRelease();
    uint64_t result = CPPhoneNumberCopyNetworkCountryCode();
    if (result)
    {
      unint64_t v13 = (void *)result;
      uint64_t v2 = sub_1D4469B38();
      unint64_t v15 = v14;

      uint64_t v5 = v15 & 0x2000000000000000;
      uint64_t v6 = HIBYTE(v15) & 0xF;
      uint64_t v7 = v2 & 0xFFFFFFFFFFFFLL;
      goto LABEL_14;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
LABEL_14:
  if (v5) {
    uint64_t v16 = v6;
  }
  else {
    uint64_t v16 = v7;
  }
  if (v16) {
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  uint64_t result = CPPhoneNumberCopyLastKnownNetworkCountryCode();
  if (!result)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  os_log_type_t v17 = (void *)result;
  uint64_t v2 = sub_1D4469B38();
  unint64_t v19 = v18;

  uint64_t v5 = v19 & 0x2000000000000000;
  uint64_t v6 = HIBYTE(v19) & 0xF;
  uint64_t v7 = v2 & 0xFFFFFFFFFFFFLL;
LABEL_20:
  if (v5) {
    uint64_t v20 = v6;
  }
  else {
    uint64_t v20 = v7;
  }
  if (!v20)
  {
    swift_bridgeObjectRelease();
    return 29557;
  }
  return v2;
}

uint64_t sub_1D43BDBB0(uint64_t a1)
{
  sub_1D43BDA80();
  uint64_t v2 = (void *)sub_1D4469B08();
  unint64_t v3 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  unint64_t v4 = (void *)CFPhoneNumberCreate();

  if (!v4) {
    goto LABEL_5;
  }
  id v5 = v4;
  uint64_t String = CFPhoneNumberCreateString();
  if (!String)
  {

LABEL_5:
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t v7 = (void *)String;
  a1 = sub_1D4469B38();

  return a1;
}

uint64_t sub_1D43BDCA0(uint64_t a1)
{
  if (qword_1EA6C8FF0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1EA6CB778;
  unint64_t v3 = (void *)sub_1D4469B08();
  LOBYTE(v2) = objc_msgSend((id)v2, sel_evaluateWithObject_, v3);

  if (v2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    a1 = sub_1D43BDBB0(a1);
    swift_bridgeObjectRetain();
    if ((sub_1D4469C98() & 1) != 0 || sub_1D4469BD8() <= 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D4469C08();
      swift_bridgeObjectRelease_n();
      return 43;
    }
  }
  return a1;
}

uint64_t sub_1D43BDDD0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v23 = a3;
  uint64_t v6 = sub_1D44691F8();
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  uint64_t v10 = HIBYTE(a2) & 0xF;
  uint64_t v28 = a1;
  uint64_t v20 = a1 & 0xFFFFFFFFFFFFLL;
  uint64_t v21 = v10;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v10 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v22 = v10;
  if (!v10) {
    return 0;
  }
  uint64_t v11 = 0;
  uint64_t v19 = a2 & 0xFFFFFFFFFFFFFFLL;
  v18[1] = v3;
  v18[2] = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v12 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  unint64_t v13 = (void (**)(char *, uint64_t))(v7 + 8);
  do
  {
    if ((a2 & 0x1000000000000000) != 0)
    {
      sub_1D446A368();
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        uint64_t v24 = v28;
        uint64_t v25 = v19;
      }
      else if ((v28 & 0x1000000000000000) == 0)
      {
        sub_1D446A3E8();
      }
      sub_1D446A3F8();
    }
    uint64_t v15 = v14;
    (*v12)(v9, v23, v6);
    char v16 = sub_1D44691D8();
    (*v13)(v9, v6);
    if (v16) {
      sub_1D4469BA8();
    }
    v11 += v15;
  }
  while (v11 < v22);
  return v26;
}

uint64_t sub_1D43BDFC4(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1D44691F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    sub_1D4469188();
    sub_1D44691C8();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1D43BDDD0(a1, a2, (uint64_t)v7);
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v12 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0) {
      uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
    }
    if (!v12)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    if (v9 == a1 && v11 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v14 = sub_1D446A758();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        return 1;
      }
    }
  }
  return 0;
}

unint64_t sub_1D43BE154(char a1)
{
  unint64_t result = 0x6E656B6F54736168;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FMIPPeopleFindingEvent.hasToken.getter()
{
  return *v0;
}

uint64_t FMIPPeopleFindingEvent.hasToken.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t (*FMIPPeopleFindingEvent.hasToken.modify())()
{
  return nullsub_1;
}

uint64_t FMIPPeopleFindingEvent.findButtonAvailable.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t FMIPPeopleFindingEvent.findButtonAvailable.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*FMIPPeopleFindingEvent.findButtonAvailable.modify())()
{
  return nullsub_1;
}

double FMIPPeopleFindingEvent.availabilityLatency.getter()
{
  return *(double *)(v0 + 8);
}

void FMIPPeopleFindingEvent.availabilityLatency.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*FMIPPeopleFindingEvent.availabilityLatency.modify())()
{
  return nullsub_1;
}

uint64_t FMIPPeopleFindingEvent.withinNearbyRange.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t FMIPPeopleFindingEvent.withinNearbyRange.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*FMIPPeopleFindingEvent.withinNearbyRange.modify())()
{
  return nullsub_1;
}

uint64_t FMIPPeopleFindingEvent.startedDiscovering.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t FMIPPeopleFindingEvent.startedDiscovering.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

uint64_t (*FMIPPeopleFindingEvent.startedDiscovering.modify())()
{
  return nullsub_1;
}

FMIPCore::FMIPPeopleFindingEvent __swiftcall FMIPPeopleFindingEvent.init(hasToken:findButtonAvailable:availabilityLatency:withinNearbyRange:startedDiscovering:)(Swift::Bool hasToken, Swift::Bool findButtonAvailable, Swift::Double availabilityLatency, Swift::Bool withinNearbyRange, Swift::Bool startedDiscovering)
{
  *(unsigned char *)uint64_t v5 = hasToken;
  *(unsigned char *)(v5 + 1) = findButtonAvailable;
  *(Swift::Double *)(v5 + 8) = availabilityLatency;
  *(unsigned char *)(v5 + 16) = withinNearbyRange;
  *(unsigned char *)(v5 + 17) = startedDiscovering;
  result.availabilityLatency = availabilityLatency;
  result.withinNearbyRange = findButtonAvailable;
  result.hasToken = hasToken;
  return result;
}

Swift::Void __swiftcall FMIPManager.enqueue(event:)(FMIPCore::FMIPPeopleFindingEvent event)
{
  char v1 = **(unsigned char **)&event.hasToken;
  char v2 = *(unsigned char *)(*(void *)&event.hasToken + 1);
  uint64_t v3 = *(void *)(*(void *)&event.hasToken + 8);
  char v4 = *(unsigned char *)(*(void *)&event.hasToken + 16);
  char v5 = *(unsigned char *)(*(void *)&event.hasToken + 17);
  uint64_t v6 = (void *)sub_1D4469B08();
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = v1;
  *(unsigned char *)(v7 + 17) = v2;
  *(void *)(v7 + 24) = v3;
  *(unsigned char *)(v7 + 32) = v4;
  *(unsigned char *)(v7 + 33) = v5;
  v9[4] = sub_1D43BE780;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  v9[2] = sub_1D4356EBC;
  v9[3] = &unk_1F2C0DA20;
  uint64_t v8 = _Block_copy(v9);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v8);
}

void static FMIPAnalytics.sendPeopleFindingEventAnalytics(event:)(char *a1)
{
  char v1 = *a1;
  char v2 = a1[1];
  uint64_t v3 = *((void *)a1 + 1);
  char v4 = a1[16];
  char v5 = a1[17];
  uint64_t v6 = (void *)sub_1D4469B08();
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = v1;
  *(unsigned char *)(v7 + 17) = v2;
  *(void *)(v7 + 24) = v3;
  *(unsigned char *)(v7 + 32) = v4;
  *(unsigned char *)(v7 + 33) = v5;
  v9[4] = sub_1D43BE780;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  v9[2] = sub_1D4356EBC;
  v9[3] = &unk_1F2C0DA70;
  uint64_t v8 = _Block_copy(v9);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v8);
}

unint64_t sub_1D43BE544(unsigned int a1, unsigned int a2, double a3)
{
  char v3 = a2;
  char v5 = a1;
  uint64_t v6 = (a1 >> 8) & 1;
  uint64_t v7 = (a2 >> 8) & 1;
  unint64_t v8 = sub_1D4274BFC(MEMORY[0x1E4FBC860]);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v5 & 1);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v9, 0x6E656B6F54736168, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v6);
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v11, 0xD000000000000013, 0x80000001D4481C80, v12);
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithDouble_, a3);
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v13, 0xD000000000000013, 0x80000001D4481CA0, v14);
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v3 & 1);
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v15, 0xD000000000000011, 0x80000001D4481CC0, v16);
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v7);
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v17, 0xD000000000000012, 0x80000001D4481CE0, v18);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1D43BE770()
{
  return MEMORY[0x1F4186498](v0, 34, 7);
}

uint64_t sub_1D43BE784()
{
  return MEMORY[0x1F4186498](v0, 34, 7);
}

unint64_t sub_1D43BE794()
{
  if (*(unsigned char *)(v0 + 17)) {
    int v1 = 256;
  }
  else {
    int v1 = 0;
  }
  if (*(unsigned char *)(v0 + 33)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return sub_1D43BE544(v1 | *(unsigned __int8 *)(v0 + 16), v2 | *(unsigned __int8 *)(v0 + 32), *(double *)(v0 + 24));
}

__n128 initializeBufferWithCopyOfBuffer for FMIPPeopleFindingEvent(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPPeopleFindingEvent(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[18]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPPeopleFindingEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPPeopleFindingEvent()
{
  return &type metadata for FMIPPeopleFindingEvent;
}

id sub_1D43BE88C()
{
  return objc_msgSend(v0, sel_shutdown);
}

uint64_t sub_1D43BE89C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  return MEMORY[0x1D9447840](v1);
}

uint64_t sub_1D43BE8EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1D43BE958(void *a1))(uint64_t a1, char a2)
{
  unsigned int v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1D9447840](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1D43747C0;
}

uint64_t sub_1D43BE9E0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_topicAPSToken);
  if (*(void *)(v0 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_topicAPSToken + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = (void *)sub_1D4469B08();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  unsigned int v3 = self;
  uint64_t v4 = (void *)sub_1D4469B08();
  uint64_t v5 = (void *)sub_1D4469B08();
  objc_msgSend(v3, sel_setString_forKey_inDomain_, v2, v4, v5);

  uint64_t v6 = v0 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v6);
  if (result)
  {
    uint64_t v8 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = *v1;
    uint64_t v11 = v1[1];
    uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_publicAPSToken);
    uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_publicAPSToken + 8);
    char v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v0, v10, v11, v12, v13, ObjectType, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

id FMAPSConnectionHandler.__deallocating_deinit()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_connection];
  if (*(void *)&v0[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_connection])
  {
    uint64_t v2 = *((void *)v1 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v4 = *(void (**)(void, uint64_t, uint64_t))(v2 + 16);
    swift_unknownObjectRetain();
    v4(0, ObjectType, v2);
    swift_unknownObjectRelease();
    if (*(void *)v1)
    {
      uint64_t v5 = *((void *)v1 + 1);
      uint64_t v6 = swift_getObjectType();
      uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 40);
      swift_unknownObjectRetain();
      v7(v6, v5);
      swift_unknownObjectRelease();
    }
  }
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for FMAPSConnectionHandler();
  return objc_msgSendSuper2(&v9, sel_dealloc);
}

uint64_t sub_1D43BED4C()
{
  return sub_1D427EE1C((uint64_t)&unk_1F2C0DB68, (uint64_t)sub_1D43BF850, (uint64_t)&unk_1F2C0DB80);
}

uint64_t sub_1D43BED74(uint64_t result)
{
  if (*(void *)(result + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_connection))
  {
    uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_connection + 8);
    uint64_t ObjectType = swift_getObjectType();
    unsigned int v3 = *(void (**)(void, uint64_t, uint64_t))(v1 + 32);
    swift_unknownObjectRetain();
    v3(0, ObjectType, v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

id FMAPSConnectionHandler.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void FMAPSConnectionHandler.init()()
{
}

void FMAPSConnectionHandler.connection(_:didReceivePublicToken:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

void FMAPSConnectionHandler.connection(_:didReceiveToken:forTopic:identifier:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

uint64_t FMAPSConnectionHandler.connection(_:didReceiveMessageForTopic:userInfo:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1D4290DB8(a2, a3, a4);
}

void sub_1D43BEFE4(uint64_t a1, unint64_t a2)
{
  unsigned int v3 = v2;
  uint64_t v5 = sub_1D4469958();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D44699B8();
  uint64_t v10 = (char *)MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 60 == 15)
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1D4469928();
    sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
    unint64_t v48 = v3;
    id v15 = sub_1D44698F8();
    os_log_type_t v16 = sub_1D446A038();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      aBlock[0] = v18;
      *(_DWORD *)id v17 = 136315138;
      uint64_t v19 = *(void *)&v48[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_topic];
      unint64_t v20 = *(void *)&v48[OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_topic + 8];
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1D42CB9EC(v19, v20, aBlock);
      sub_1D446A188();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v15, v16, "FMAPSConnectionHandler: Topic APS Token was nil for %s.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v18, -1, -1);
      MEMORY[0x1D9447730](v17, -1, -1);
    }
    else
    {

      uint64_t v32 = v48;
    }
  }
  else
  {
    uint64_t v46 = v11;
    unint64_t v48 = v10;
    uint64_t v21 = (void *)sub_1D44694C8();
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v47 = v8;
    uint64_t v22 = sub_1D4469928();
    sub_1D42D7FAC(v22, (uint64_t)qword_1EBD83228);
    id v23 = v21;
    uint64_t v24 = sub_1D44698F8();
    os_log_type_t v25 = sub_1D446A038();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v45 = v6;
      uint64_t v43 = (void *)v27;
      *(_DWORD *)uint64_t v26 = 138412290;
      aBlock[0] = (uint64_t)v23;
      id v28 = v23;
      uint64_t v44 = v13;
      uint64_t v29 = v3;
      id v30 = v28;
      sub_1D446A188();
      uint64_t v31 = v43;
      void *v43 = v23;

      unsigned int v3 = v29;
      uint64_t v13 = v44;
      _os_log_impl(&dword_1D4271000, v24, v25, "FMAPSConnectionHandler: Topic APS Token received %@.", v26, 0xCu);
      sub_1D42D5DA0(&qword_1EBD7E830);
      swift_arrayDestroy();
      uint64_t v6 = v45;
      MEMORY[0x1D9447730](v31, -1, -1);
      MEMORY[0x1D9447730](v26, -1, -1);
    }
    else
    {
    }
    uint64_t v33 = v23;
    id v34 = objc_msgSend(v23, sel_fm_hexString);
    uint64_t v35 = sub_1D4469B38();
    uint64_t v37 = v36;

    uint64_t v38 = (void *)swift_allocObject();
    v38[2] = v3;
    v38[3] = v35;
    v38[4] = v37;
    aBlock[4] = (uint64_t)sub_1D43BF85C;
    aBlock[5] = (uint64_t)v38;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1D42BD950;
    aBlock[3] = (uint64_t)&unk_1F2C0DC20;
    uint64_t v39 = _Block_copy(aBlock);
    id v40 = v3;
    sub_1D4469988();
    uint64_t v50 = MEMORY[0x1E4FBC860];
    sub_1D42C6224((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    uint64_t v41 = v47;
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v13, v41, v39);
    _Block_release(v39);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v41, v5);
    (*(void (**)(char *, char *))(v46 + 8))(v13, v48);
    swift_release();
  }
}

uint64_t sub_1D43BF618@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1D43BF674(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of FMAPSConnectionHandlerDelegate.connectionHandler(_:didReceive:publicToken:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of FMAPSConnectionHandlerDelegate.connectionHandler(_:didReceive:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1D43BF700(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1D43BF714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1D43BF728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1D43BF73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1D43BF750(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t method lookup function for FMAPSConnectionHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMAPSConnectionHandler);
}

uint64_t dispatch thunk of FMAPSConnectionHandler.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of FMAPSConnectionHandler.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of FMAPSConnectionHandler.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t sub_1D43BF818()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D43BF850()
{
  return sub_1D43BED74(*(void *)(v0 + 16));
}

uint64_t sub_1D43BF85C()
{
  return sub_1D42748E0(v0[2], v0[3], v0[4], &OBJC_IVAR____TtC8FMIPCore22FMAPSConnectionHandler_topicAPSToken, (uint64_t (*)(uint64_t))sub_1D43BE9E0);
}

uint64_t FMIPLostModeAction.isLostModeEnabled.getter()
{
  return 1;
}

uint64_t FMIPLostModeAction.isSoundEnabled.getter()
{
  return 0;
}

uint64_t FMIPLostModeAction.isTrackingEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isTrackingEnabled);
}

uint64_t FMIPLostModeAction.isUserTextEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isUserTextEnabled);
}

uint64_t FMIPLostModeAction.isEmailUpdatesEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isEmailUpdatesEnabled);
}

uint64_t FMIPLostModeAction.email.getter()
{
  return sub_1D435A648(&OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_email);
}

uint64_t FMIPLostModeAction.message.getter()
{
  return sub_1D435A648(&OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_message);
}

uint64_t FMIPLostModeAction.phoneNumber.getter()
{
  return sub_1D435A648(&OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_phoneNumber);
}

uint64_t FMIPLostModeAction.passcode.getter()
{
  return sub_1D435A648(&OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_passcode);
}

uint64_t FMIPLostModeAction.__allocating_init(device:message:phoneNumber:email:passcode:trackingEnabled:emailUpdatesEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11)
{
  uint64_t v17 = swift_allocObject();
  FMIPLostModeAction.init(device:message:phoneNumber:email:passcode:trackingEnabled:emailUpdatesEnabled:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  return v17;
}

uint64_t FMIPLostModeAction.init(device:message:phoneNumber:email:passcode:trackingEnabled:emailUpdatesEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11)
{
  *(unsigned char *)(v11 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isLostModeEnabled) = 1;
  *(unsigned char *)(v11 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isSoundEnabled) = 0;
  uint64_t v12 = (void *)(v11 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_email);
  *uint64_t v12 = a6;
  v12[1] = a7;
  uint64_t v13 = (void *)(v11 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_message);
  *uint64_t v13 = a2;
  v13[1] = a3;
  uint64_t v14 = (void *)(v11 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_phoneNumber);
  *uint64_t v14 = a4;
  v14[1] = a5;
  id v15 = (void *)(v11 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_passcode);
  void *v15 = a8;
  v15[1] = a9;
  *(unsigned char *)(v11 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isUserTextEnabled) = (a3 | a5) != 0;
  *(unsigned char *)(v11 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isTrackingEnabled) = a10;
  *(unsigned char *)(v11 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isEmailUpdatesEnabled) = a11;
  *(void *)(v11 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext) = 0;
  os_log_type_t v16 = (void *)(v11 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  *os_log_type_t v16 = 0;
  v16[1] = 0;
  uint64_t v17 = (void *)(v11 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
  *uint64_t v17 = 0;
  v17[1] = 0;
  uint64_t v18 = (void *)(v11 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_username);
  *uint64_t v18 = 0;
  v18[1] = 0;
  uint64_t v19 = (void *)(v11 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  *uint64_t v19 = 0;
  v19[1] = 0;
  unint64_t v20 = (void *)(v11 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_escrowUUID);
  *unint64_t v20 = 0;
  v20[1] = 0;
  *(_OWORD *)(v11 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession) = xmmword_1D446D300;
  sub_1D42BB510(a1, v11 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  return v11;
}

void FMIPLostModeAction.__allocating_init(device:)()
{
}

void FMIPLostModeAction.init(device:)()
{
}

uint64_t sub_1D43BFB94()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FMIPLostModeAction.deinit()
{
  uint64_t v0 = FMIPDeviceAction.deinit();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMIPLostModeAction.__deallocating_deinit()
{
  FMIPDeviceAction.deinit();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43BFD30(uint64_t *a1, uint64_t *a2)
{
  return _s8FMIPCore18FMIPLostModeActionC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FMIPLostModeItemAction.isTrackingEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_isTrackingEnabled);
}

uint64_t FMIPLostModeItemAction.isUserTextEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_isUserTextEnabled);
}

uint64_t FMIPLostModeItemAction.isEmailUpdatesEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_isEmailUpdatesEnabled);
}

uint64_t FMIPLostModeItemAction.message.getter()
{
  return sub_1D435A648(&OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_message);
}

uint64_t FMIPLostModeItemAction.phoneNumber.getter()
{
  return sub_1D435A648(&OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_phoneNumber);
}

uint64_t FMIPLostModeItemAction.email.getter()
{
  return sub_1D435A648(&OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_email);
}

uint64_t FMIPLostModeItemAction.__allocating_init(item:message:phoneNumber:email:trackingEnabled:emailUpdatesEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9)
{
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = (void *)(v17 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_message);
  *uint64_t v18 = a2;
  v18[1] = a3;
  uint64_t v19 = (void *)(v17 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_phoneNumber);
  *uint64_t v19 = a4;
  v19[1] = a5;
  *(unsigned char *)(v17 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_isUserTextEnabled) = (a3 | a5) != 0;
  *(unsigned char *)(v17 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_isTrackingEnabled) = a8;
  *(unsigned char *)(v17 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_isEmailUpdatesEnabled) = a9;
  unint64_t v20 = (void *)(v17 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_email);
  *unint64_t v20 = a6;
  v20[1] = a7;
  sub_1D42BB510(a1, v17 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  return v17;
}

uint64_t FMIPLostModeItemAction.init(item:message:phoneNumber:email:trackingEnabled:emailUpdatesEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9)
{
  uint64_t v10 = (void *)(v9 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_message);
  *uint64_t v10 = a2;
  v10[1] = a3;
  uint64_t v11 = (void *)(v9 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_phoneNumber);
  *uint64_t v11 = a4;
  v11[1] = a5;
  *(unsigned char *)(v9 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_isUserTextEnabled) = (a3 | a5) != 0;
  *(unsigned char *)(v9 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_isTrackingEnabled) = a8;
  *(unsigned char *)(v9 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_isEmailUpdatesEnabled) = a9;
  uint64_t v12 = (void *)(v9 + OBJC_IVAR____TtC8FMIPCore22FMIPLostModeItemAction_email);
  *uint64_t v12 = a6;
  v12[1] = a7;
  sub_1D42BB510(a1, v9 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  return v9;
}

void FMIPLostModeItemAction.__allocating_init(item:)()
{
}

void FMIPLostModeItemAction.init(item:)()
{
}

uint64_t sub_1D43BFF98()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FMIPLostModeItemAction.deinit()
{
  sub_1D42FA678(v0 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMIPLostModeItemAction.__deallocating_deinit()
{
  sub_1D42FA678(v0 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t _s8FMIPCore18FMIPLostModeActionC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_message + 8);
  uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_message + 8);
  if (v4)
  {
    if (!v5) {
      return 0;
    }
    BOOL v6 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_message) == *(void *)(a2
                                                                                              + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_message)
      && v4 == v5;
    if (!v6 && (sub_1D446A758() & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_phoneNumber + 8);
  uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_phoneNumber + 8);
  if (v7)
  {
    if (!v8) {
      return 0;
    }
    BOOL v9 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_phoneNumber) == *(void *)(a2
                                                                                                  + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_phoneNumber)
      && v7 == v8;
    if (!v9 && (sub_1D446A758() & 1) == 0) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_email + 8);
  uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_email + 8);
  if (v10)
  {
    if (!v11) {
      return 0;
    }
    BOOL v12 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_email) == *(void *)(a2
                                                                                             + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_email)
       && v10 == v11;
    if (!v12 && (sub_1D446A758() & 1) == 0) {
      return 0;
    }
  }
  else if (v11)
  {
    return 0;
  }
  uint64_t v13 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_passcode + 8);
  uint64_t v14 = *(void *)(a2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_passcode + 8);
  if (!v13)
  {
    if (!v14) {
      goto LABEL_37;
    }
    return 0;
  }
  if (!v14) {
    return 0;
  }
  BOOL v15 = *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_passcode) == *(void *)(a2
                                                                                              + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_passcode)
     && v13 == v14;
  if (!v15 && (sub_1D446A758() & 1) == 0) {
    return 0;
  }
LABEL_37:
  if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isUserTextEnabled) != *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isUserTextEnabled)
    || *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isTrackingEnabled) != *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isTrackingEnabled)
    || *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isEmailUpdatesEnabled) != *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isEmailUpdatesEnabled))
  {
    return 0;
  }
  uint64_t v17 = a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
  return static FMIPDevice.== infix(_:_:)(v17);
}

uint64_t sub_1D43C02C0()
{
  return type metadata accessor for FMIPLostModeAction(0);
}

uint64_t type metadata accessor for FMIPLostModeAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6CAB48);
}

uint64_t sub_1D43C02E8()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FMIPLostModeAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPLostModeAction);
}

uint64_t dispatch thunk of FMIPLostModeAction.__allocating_init(device:message:phoneNumber:email:passcode:trackingEnabled:emailUpdatesEnabled:)()
{
  return (*(uint64_t (**)(void))(v0 + 424))();
}

uint64_t sub_1D43C0388()
{
  return type metadata accessor for FMIPLostModeItemAction(0);
}

uint64_t type metadata accessor for FMIPLostModeItemAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, qword_1EA6CAB58);
}

uint64_t sub_1D43C03B0()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FMIPLostModeItemAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPLostModeItemAction);
}

uint64_t dispatch thunk of FMIPLostModeItemAction.__allocating_init(item:message:phoneNumber:email:trackingEnabled:emailUpdatesEnabled:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

void sub_1D43C0508(unint64_t a1, id a2, char *a3)
{
  unint64_t v6 = 0x1EA6C8000uLL;
  uint64_t v7 = &unk_1EA6E4000;
  uint64_t v8 = (SEL *)&property descriptor for FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback;
  if (a2)
  {
    id v9 = a2;
    if (qword_1EA6C8F58 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1D4469928();
    sub_1D42D7FAC(v10, (uint64_t)qword_1EA6E46D0);
    id v11 = a2;
    id v12 = a2;
    uint64_t v13 = sub_1D44698F8();
    os_log_type_t v14 = sub_1D446A018();
    if (os_log_type_enabled(v13, v14))
    {
      BOOL v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v31 = v16;
      *(_DWORD *)BOOL v15 = 136315138;
      swift_getErrorValue();
      uint64_t v17 = sub_1D446A7D8();
      uint64_t v33 = sub_1D42CB9EC(v17, v18, &v31);
      uint64_t v7 = (void *)&unk_1EA6E4000;
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v13, v14, "FMReverseGeocodingOperation: reverse geocoding completed with error: %s", v15, 0xCu);
      swift_arrayDestroy();
      uint64_t v19 = v16;
      uint64_t v8 = (SEL *)&property descriptor for FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback;
      MEMORY[0x1D9447730](v19, -1, -1);
      unint64_t v20 = v15;
      unint64_t v6 = 0x1EA6C8000;
      MEMORY[0x1D9447730](v20, -1, -1);
    }
    else
    {
    }
    uint64_t v21 = *(void (**)(void, id))&a3[v7[298]];
    id v22 = a2;
    v21(0, a2);

    objc_msgSend(a3, v8[214], 1);
  }
  if (a1)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      if (sub_1D446A498())
      {
LABEL_11:
        if ((a1 & 0xC000000000000001) != 0)
        {
          MEMORY[0x1D9446710](0, a1);
        }
        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_24;
          }
          swift_unknownObjectRetain();
        }
        swift_bridgeObjectRelease();
        if (*(void *)(v6 + 3928) == -1)
        {
LABEL_15:
          uint64_t v24 = sub_1D4469928();
          sub_1D42D7FAC(v24, (uint64_t)qword_1EA6E46D0);
          swift_unknownObjectRetain_n();
          os_log_type_t v25 = sub_1D44698F8();
          os_log_type_t v26 = sub_1D446A038();
          if (os_log_type_enabled(v25, v26))
          {
            uint64_t v27 = (uint8_t *)swift_slowAlloc();
            uint64_t v28 = swift_slowAlloc();
            *(_DWORD *)uint64_t v27 = 136315138;
            uint64_t v31 = 0;
            unint64_t v32 = 0xE000000000000000;
            uint64_t v33 = v28;
            sub_1D42D5DA0((uint64_t *)&unk_1EA6CAC00);
            sub_1D446A458();
            uint64_t v31 = sub_1D42CB9EC(v31, v32, &v33);
            uint64_t v7 = (void *)&unk_1EA6E4000;
            uint64_t v8 = (SEL *)&property descriptor for FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback;
            sub_1D446A188();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1D4271000, v25, v26, "FMReverseGeocodingOperation: reverse geocoding completed with item: %s", v27, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1D9447730](v28, -1, -1);
            MEMORY[0x1D9447730](v27, -1, -1);
          }
          else
          {

            swift_unknownObjectRelease_n();
          }
          uint64_t v29 = *(void (**)(uint64_t, id))&a3[v7[298]];
          uint64_t v30 = swift_unknownObjectRetain();
          v29(v30, a2);
          swift_unknownObjectRelease();
          objc_msgSend(a3, v8[214], 1);
          swift_unknownObjectRelease();
          return;
        }
LABEL_24:
        swift_once();
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v23) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D43C09A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1D42D5DA0((uint64_t *)&unk_1EA6CAC00);
    uint64_t v4 = sub_1D4469D78();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1D43C0A6C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMReverseGeocodingOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D43C0AF4()
{
  return type metadata accessor for FMReverseGeocodingOperation();
}

uint64_t sub_1D43C0AFC(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D43C0B5C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1D43C0B94(unint64_t a1, void *a2)
{
  sub_1D43C0508(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_1D43C0B9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMReverseGeocodingRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D43C0BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void sub_1D43C0C0C()
{
  id v1 = v0;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  uint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPDeviceConnectionStateProvider: registering for notifications", v5, 2u);
    MEMORY[0x1D9447730](v5, -1, -1);
  }

  id v6 = CFNotificationCenterGetDarwinNotifyCenter();
  uint64_t v7 = (__CFString *)sub_1D4469B08();
  CFNotificationCenterAddObserver(v6, v1, (CFNotificationCallback)sub_1D43C0DD4, v7, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

  id v8 = objc_msgSend(self, sel_defaultCenter);
  id v9 = (id)sub_1D4469B08();
  objc_msgSend(v8, sel_addObserver_selector_name_object_, v1, sel_handleDeviceStateChanged, v9, 0);
}

void sub_1D43C0DD4(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v8 = self;
  id v9 = a1;
  id v10 = a3;
  id v11 = a5;
  id v12 = objc_msgSend(v8, sel_defaultCenter);
  id v13 = (id)sub_1D4469B08();
  objc_msgSend(v12, sel_postNotificationName_object_, v13, 0);
}

uint64_t sub_1D43C0EE8()
{
  swift_bridgeObjectRelease();
  sub_1D42F9538(v0 + 24);
  return swift_deallocClassInstance();
}

void FMIPItemLostModeMetadata.init(lostModeInfo:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7CB80);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D4469618();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v34 - v12;
  id v14 = objc_msgSend(a1, sel_phoneNumber);
  if (v14)
  {
    BOOL v15 = v14;
    uint64_t v16 = sub_1D4469B38();
    unint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    unint64_t v18 = 0xE000000000000000;
  }
  *a2 = v16;
  a2[1] = v18;
  id v19 = objc_msgSend(a1, sel_message);
  if (v19)
  {
    unint64_t v20 = v19;
    uint64_t v21 = sub_1D4469B38();
    unint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    unint64_t v23 = 0xE000000000000000;
  }
  a2[2] = v21;
  a2[3] = v23;
  id v24 = objc_msgSend(a1, sel_timestamp);
  if (v24)
  {
    os_log_type_t v25 = v24;
    sub_1D44695D8();

    os_log_type_t v26 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v26(v6, v11, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      v26(v13, v6, v7);
      goto LABEL_12;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_1D4469608();
  sub_1D43C1234((uint64_t)v6);
LABEL_12:
  uint64_t v27 = type metadata accessor for FMIPItemLostModeMetadata();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))((char *)a2 + *(int *)(v27 + 24), v13, v7);
  id v28 = objc_msgSend(a1, sel_email);
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = sub_1D4469B38();
    unint64_t v32 = v31;
  }
  else
  {

    uint64_t v30 = 0;
    unint64_t v32 = 0xE000000000000000;
  }
  uint64_t v33 = (uint64_t *)((char *)a2 + *(int *)(v27 + 28));
  *uint64_t v33 = v30;
  v33[1] = v32;
}

uint64_t sub_1D43C1234(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7CB80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FMIPItemLostModeMetadata.ownerNumber.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPItemLostModeMetadata.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPItemLostModeMetadata.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMIPItemLostModeMetadata() + 24);
  uint64_t v4 = sub_1D4469618();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FMIPItemLostModeMetadata.email.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPItemLostModeMetadata() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D43C13AC(unsigned __int8 *a1, char *a2)
{
  return sub_1D44131F0(*a1, *a2);
}

uint64_t sub_1D43C13B8()
{
  return sub_1D446A888();
}

uint64_t sub_1D43C149C()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43C1568()
{
  return sub_1D446A888();
}

uint64_t sub_1D43C1648@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43C2D1C();
  *a1 = result;
  return result;
}

void sub_1D43C1678(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEB00000000726562;
  uint64_t v3 = 0x6D754E72656E776FLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x6567617373656DLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x6D617473656D6974;
      a1[1] = 0xE900000000000070;
      break;
    case 3:
      *a1 = 0x6C69616D65;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1D43C171C()
{
  uint64_t result = 0x6D754E72656E776FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6567617373656DLL;
      break;
    case 2:
      uint64_t result = 0x6D617473656D6974;
      break;
    case 3:
      uint64_t result = 0x6C69616D65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D43C17B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43C2D1C();
  *a1 = result;
  return result;
}

uint64_t sub_1D43C17DC(uint64_t a1)
{
  unint64_t v2 = sub_1D43C1C1C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D43C1818(uint64_t a1)
{
  unint64_t v2 = sub_1D43C1C1C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPItemLostModeMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v35 = sub_1D4469618();
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1D42D5DA0(&qword_1EA6CAC10);
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  id v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPItemLostModeMetadata();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43C1C1C();
  uint64_t v10 = v37;
  sub_1D446A8C8();
  if (!v10)
  {
    id v11 = v9;
    uint64_t v37 = v7;
    uint64_t v12 = v4;
    uint64_t v14 = v34;
    uint64_t v13 = v35;
    char v41 = 0;
    uint64_t v15 = v36;
    uint64_t v16 = sub_1D446A598();
    uint64_t v18 = v17;
    uint64_t v31 = v16;
    char v40 = 1;
    uint64_t v29 = sub_1D446A598();
    uint64_t v30 = v19;
    char v39 = 2;
    sub_1D43C247C(&qword_1EA6CAC20);
    sub_1D446A5D8();
    char v38 = 3;
    uint64_t v21 = sub_1D446A598();
    unint64_t v22 = *(void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v34 = v21;
    uint64_t v24 = v23;
    v22(v6, v15);
    *(void *)id v11 = v31;
    *((void *)v11 + 1) = v18;
    uint64_t v25 = v30;
    *((void *)v11 + 2) = v29;
    *((void *)v11 + 3) = v25;
    uint64_t v26 = v37;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v11[*(int *)(v37 + 24)], v12, v13);
    uint64_t v27 = (uint64_t *)&v11[*(int *)(v26 + 28)];
    *uint64_t v27 = v34;
    v27[1] = v24;
    sub_1D43C1C70((uint64_t)v11, v32);
  }
  return sub_1D42BEC64((uint64_t)a1);
}

unint64_t sub_1D43C1C1C()
{
  unint64_t result = qword_1EA6CAC18;
  if (!qword_1EA6CAC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAC18);
  }
  return result;
}

uint64_t sub_1D43C1C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPItemLostModeMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FMIPItemLostModeMetadata.init(ownerNumber:message:timestamp:email:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  uint64_t v12 = type metadata accessor for FMIPItemLostModeMetadata();
  uint64_t v13 = (char *)a8 + *(int *)(v12 + 24);
  uint64_t v14 = sub_1D4469618();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a5, v14);
  uint64_t v16 = (void *)((char *)a8 + *(int *)(v12 + 28));
  *uint64_t v16 = a6;
  v16[1] = a7;
  return result;
}

uint64_t FMIPItemLostModeMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6CAC28);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43C1C1C();
  sub_1D446A8E8();
  v8[15] = 0;
  sub_1D446A658();
  if (!v1)
  {
    v8[14] = 1;
    sub_1D446A658();
    type metadata accessor for FMIPItemLostModeMetadata();
    v8[13] = 2;
    sub_1D4469618();
    sub_1D43C247C(&qword_1EA6CAC30);
    sub_1D446A698();
    v8[12] = 3;
    sub_1D446A658();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t FMIPItemLostModeMetadata.debugDescription.getter()
{
  return 0;
}

uint64_t sub_1D43C2160@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPItemLostModeMetadata.init(from:)(a1, a2);
}

uint64_t sub_1D43C2178(void *a1)
{
  return FMIPItemLostModeMetadata.encode(to:)(a1);
}

uint64_t _s8FMIPCore24FMIPItemLostModeMetadataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FMIPItemLostModeMetadata();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v33 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v33 - v20;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1D43C2D68((uint64_t)a1, (uint64_t)&v33 - v20);
    sub_1D43C2D68((uint64_t)a2, (uint64_t)v19);
  }
  else
  {
    char v22 = sub_1D446A758();
    sub_1D43C2D68((uint64_t)a1, (uint64_t)v21);
    sub_1D43C2D68((uint64_t)a2, (uint64_t)v19);
    if ((v22 & 1) == 0)
    {
      sub_1D43C2DCC((uint64_t)v21);
      sub_1D43C2DCC((uint64_t)v19);
      sub_1D43C2D68((uint64_t)a1, (uint64_t)v16);
      sub_1D43C2D68((uint64_t)a2, (uint64_t)v13);
LABEL_19:
      sub_1D43C2DCC((uint64_t)v13);
      sub_1D43C2DCC((uint64_t)v16);
      sub_1D43C2D68((uint64_t)a1, (uint64_t)v10);
      sub_1D43C2D68((uint64_t)a2, (uint64_t)v7);
      goto LABEL_20;
    }
  }
  if (*((void *)v21 + 2) == *((void *)v19 + 2) && *((void *)v21 + 3) == *((void *)v19 + 3))
  {
    sub_1D43C2DCC((uint64_t)v21);
    sub_1D43C2DCC((uint64_t)v19);
    sub_1D43C2D68((uint64_t)a1, (uint64_t)v16);
    sub_1D43C2D68((uint64_t)a2, (uint64_t)v13);
  }
  else
  {
    char v24 = sub_1D446A758();
    sub_1D43C2DCC((uint64_t)v21);
    sub_1D43C2DCC((uint64_t)v19);
    sub_1D43C2D68((uint64_t)a1, (uint64_t)v16);
    sub_1D43C2D68((uint64_t)a2, (uint64_t)v13);
    if ((v24 & 1) == 0) {
      goto LABEL_19;
    }
  }
  char v25 = sub_1D44695C8();
  sub_1D43C2DCC((uint64_t)v13);
  sub_1D43C2DCC((uint64_t)v16);
  sub_1D43C2D68((uint64_t)a1, (uint64_t)v10);
  sub_1D43C2D68((uint64_t)a2, (uint64_t)v7);
  if ((v25 & 1) == 0)
  {
LABEL_20:
    char v31 = 0;
    goto LABEL_21;
  }
  uint64_t v26 = *(int *)(v4 + 28);
  uint64_t v27 = *(void *)&v10[v26];
  uint64_t v28 = *(void *)&v10[v26 + 8];
  uint64_t v29 = &v7[v26];
  if (v27 == *(void *)v29 && v28 == *((void *)v29 + 1)) {
    char v31 = 1;
  }
  else {
    char v31 = sub_1D446A758();
  }
LABEL_21:
  sub_1D43C2DCC((uint64_t)v10);
  sub_1D43C2DCC((uint64_t)v7);
  return v31 & 1;
}

uint64_t sub_1D43C247C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D4469618();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FMIPItemLostModeMetadata(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1D4469618();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(a3 + 28);
    uint64_t v15 = (uint64_t *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FMIPItemLostModeMetadata(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FMIPItemLostModeMetadata(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1D4469618();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FMIPItemLostModeMetadata(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1D4469618();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FMIPItemLostModeMetadata(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1D4469618();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *assignWithTake for FMIPItemLostModeMetadata(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1D4469618();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPItemLostModeMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D43C29A4);
}

uint64_t sub_1D43C29A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1D4469618();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FMIPItemLostModeMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D43C2A68);
}

uint64_t sub_1D43C2A68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1D4469618();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPItemLostModeMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    char *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43C2BDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPItemLostModeMetadata.CodingKeys()
{
  return &type metadata for FMIPItemLostModeMetadata.CodingKeys;
}

unint64_t sub_1D43C2C18()
{
  unint64_t result = qword_1EA6CAC38;
  if (!qword_1EA6CAC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAC38);
  }
  return result;
}

unint64_t sub_1D43C2C70()
{
  unint64_t result = qword_1EA6CAC40;
  if (!qword_1EA6CAC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAC40);
  }
  return result;
}

unint64_t sub_1D43C2CC8()
{
  unint64_t result = qword_1EA6CAC48;
  if (!qword_1EA6CAC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAC48);
  }
  return result;
}

uint64_t sub_1D43C2D1C()
{
  unint64_t v0 = sub_1D446A518();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D43C2D68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPItemLostModeMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D43C2DCC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPItemLostModeMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D43C2E28(uint64_t a1)
{
  uint64_t v63 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v66 = *(void *)(v63 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v63);
  uint64_t v4 = (char *)v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v7 = (void *)((char *)v54 - v6);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v65 = (uint64_t)v54 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v64 = (uint64_t)v54 - v10;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1D446A238();
    sub_1D4275AD0(0, &qword_1EA6CAC50);
    sub_1D43C4328();
    uint64_t result = sub_1D4469F48();
    a1 = v70;
    uint64_t v60 = v71;
    uint64_t v12 = v72;
    uint64_t v13 = v73;
    unint64_t v14 = v74;
  }
  else
  {
    uint64_t v15 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = *(void *)(a1 + 56);
    uint64_t v60 = a1 + 56;
    uint64_t v17 = ~v15;
    uint64_t v18 = -v15;
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v14 = v19 & v16;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v12 = v17;
    uint64_t v13 = 0;
  }
  uint64_t v58 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v54[1] = v12;
  int64_t v59 = (unint64_t)(v12 + 64) >> 6;
  uint64_t v56 = v7 + 1;
  unint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t v21 = (SEL *)&property descriptor for FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback;
  uint64_t v57 = MEMORY[0x1E4FBC838] + 8;
  uint64_t v61 = v7;
  uint64_t v62 = v4;
  uint64_t v55 = a1;
  if (a1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v14)
    {
      uint64_t v22 = (v14 - 1) & v14;
      unint64_t v23 = __clz(__rbit64(v14)) | (v13 << 6);
      uint64_t v68 = v13;
      goto LABEL_29;
    }
    int64_t v26 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v26 >= v59) {
      goto LABEL_44;
    }
    unint64_t v27 = *(void *)(v60 + 8 * v26);
    uint64_t v28 = v13 + 1;
    if (!v27)
    {
      uint64_t v28 = v13 + 2;
      if (v13 + 2 >= v59) {
        goto LABEL_44;
      }
      unint64_t v27 = *(void *)(v60 + 8 * v28);
      if (!v27)
      {
        uint64_t v28 = v13 + 3;
        if (v13 + 3 >= v59) {
          goto LABEL_44;
        }
        unint64_t v27 = *(void *)(v60 + 8 * v28);
        if (!v27)
        {
          uint64_t v28 = v13 + 4;
          if (v13 + 4 >= v59) {
            goto LABEL_44;
          }
          unint64_t v27 = *(void *)(v60 + 8 * v28);
          if (!v27)
          {
            uint64_t v28 = v13 + 5;
            if (v13 + 5 >= v59) {
              goto LABEL_44;
            }
            unint64_t v27 = *(void *)(v60 + 8 * v28);
            if (!v27)
            {
              uint64_t v29 = v13 + 6;
              while (v59 != v29)
              {
                unint64_t v27 = *(void *)(v60 + 8 * v29++);
                if (v27)
                {
                  uint64_t v28 = v29 - 1;
                  goto LABEL_28;
                }
              }
LABEL_44:
              sub_1D42F9364();
              return v20;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v22 = (v27 - 1) & v27;
    uint64_t v68 = v28;
    unint64_t v23 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_29:
    id v25 = *(id *)(*(void *)(a1 + 48) + 8 * v23);
    if (!v25) {
      goto LABEL_44;
    }
    while (1)
    {
      id v30 = [v25 v21[208]];
      if (v30)
      {
        char v31 = v30;
        id v32 = [v25 v21[208]];
        uint64_t v33 = v32;
        unint64_t v67 = v20;
        if (v32)
        {
          id v34 = objc_msgSend(v32, sel_defaultRole);

          if (v34)
          {
            id v35 = v34;
            id v36 = objc_msgSend(v35, sel_roleEmoji);
            id v34 = (id)sub_1D4469B38();
            uint64_t v38 = v37;

            id v39 = objc_msgSend(v35, sel_role);
            uint64_t v40 = sub_1D4469B38();
            uint64_t v33 = v41;

            id v42 = objc_msgSend(v35, sel_roleId);
            a1 = v55;
          }
          else
          {
            id v42 = 0;
            uint64_t v38 = 0;
            uint64_t v40 = 0;
            uint64_t v33 = 0;
          }
        }
        else
        {
          id v42 = 0;
          id v34 = 0;
          uint64_t v38 = 0;
          uint64_t v40 = 0;
        }
        uint64_t v46 = v61;
        v61[2] = v34;
        v46[3] = v38;
        v46[4] = v40;
        v46[5] = v33;
        *uint64_t v46 = v25;
        v46[1] = v42;
        uint64_t v7 = v46;
        uint64_t v47 = (uint64_t)v46 + *(int *)(v63 + 24);
        FMIPHawkeyeProductInformation.init(productInformation:vendorIdentifier:productIdentifier:requiresAdditionalConnectionTime:)(v31, 0, 0, 1, v47);
        uint64_t v48 = type metadata accessor for FMIPHawkeyeProductInformation();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
        uint64_t v4 = v62;
        unint64_t v20 = v67;
      }
      else
      {
        uint64_t v43 = v56;
        v56[4] = 0;
        _OWORD *v43 = 0u;
        v43[1] = 0u;
        uint64_t v44 = (char *)v7 + *(int *)(v63 + 24);
        uint64_t v45 = type metadata accessor for FMIPHawkeyeProductInformation();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1, v45);
        *uint64_t v7 = v25;
      }
      unint64_t v14 = v22;
      uint64_t v49 = v65;
      sub_1D43C7E54((uint64_t)v7, v65);
      uint64_t v50 = v49;
      uint64_t v51 = v64;
      sub_1D43C7E54(v50, v64);
      sub_1D43C7E54(v51, (uint64_t)v4);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v20 = sub_1D43B0620(0, *(void *)(v20 + 16) + 1, 1, v20);
      }
      unint64_t v53 = *(void *)(v20 + 16);
      unint64_t v52 = *(void *)(v20 + 24);
      if (v53 >= v52 >> 1) {
        unint64_t v20 = sub_1D43B0620(v52 > 1, v53 + 1, 1, v20);
      }
      *(void *)(v20 + 16) = v53 + 1;
      uint64_t result = sub_1D43C7E54((uint64_t)v4, v20+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v53);
      uint64_t v13 = v68;
      uint64_t v21 = (SEL *)&property descriptor for FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback;
      if ((a1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      uint64_t v24 = sub_1D446A2B8();
      if (v24)
      {
        uint64_t v69 = v24;
        sub_1D4275AD0(0, &qword_1EA6CAC50);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v25 = v75;
        swift_unknownObjectRelease();
        uint64_t v68 = v13;
        uint64_t v22 = v14;
        uint64_t v21 = (SEL *)&property descriptor for FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback;
        if (v25) {
          continue;
        }
      }
      goto LABEL_44;
    }
  }
  __break(1u);
  return result;
}

BOOL static DiscoveryType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DiscoveryType.hash(into:)()
{
  return sub_1D446A838();
}

uint64_t DiscoveryType.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t sub_1D43C3520@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1D43C9740;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_1D42972D4(v3);
}

uint64_t sub_1D43C35A0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1D43C9758;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  sub_1D42972D4(v3);
  uint64_t result = sub_1D42E2C6C(v7);
  *a2 = (uint64_t)v6;
  a2[1] = v5;
  return result;
}

uint64_t FMIPAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback.getter()
{
  uint64_t v1 = *v0;
  sub_1D42972D4(*v0);
  return v1;
}

uint64_t FMIPAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1D42E2C6C(*v2);
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FMIPAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D43C36C8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1D43C90B4;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_1D42972D4(v3);
}

uint64_t sub_1D43C3748(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1D43C907C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  sub_1D42972D4(v3);
  uint64_t result = sub_1D42E2C6C(v7);
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v5;
  return result;
}

uint64_t FMIPAccessoryDiscoveryController.Callbacks.lostAccessoriesCallback.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1D42972D4(v1);
  return v1;
}

uint64_t FMIPAccessoryDiscoveryController.Callbacks.lostAccessoriesCallback.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1D42E2C6C(*(void *)(v2 + 16));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FMIPAccessoryDiscoveryController.Callbacks.lostAccessoriesCallback.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D43C3870@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1D43C9074;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)(uint64_t))v5;
  return sub_1D42972D4(v3);
}

uint64_t sub_1D43C38F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1D43C906C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  sub_1D42972D4(v3);
  uint64_t result = sub_1D42E2C6C(v7);
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v5;
  return result;
}

uint64_t FMIPAccessoryDiscoveryController.Callbacks.errorHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1D42972D4(v1);
  return v1;
}

uint64_t FMIPAccessoryDiscoveryController.Callbacks.errorHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1D42E2C6C(*(void *)(v2 + 32));
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FMIPAccessoryDiscoveryController.Callbacks.errorHandler.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D43C3A18()
{
  uint64_t v1 = *v0;
  sub_1D42972D4(*v0);
  return v1;
}

uint64_t sub_1D43C3A50(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v4 = a2;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = sub_1D42E2C6C(*v2);
  *uint64_t v2 = a1;
  v2[1] = v4;
  return result;
}

void *(*sub_1D43C3A8C(void *a1))(void *result)
{
  uint64_t v2 = v1[1];
  if (!*v1) {
    uint64_t v2 = 0;
  }
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v1;
  return sub_1D43C3AC0;
}

void *sub_1D43C3AC0(void *result)
{
  uint64_t v2 = result[1];
  uint64_t v1 = (void *)result[2];
  if (!*result) {
    uint64_t v2 = 0;
  }
  void *v1 = *result;
  v1[1] = v2;
  return result;
}

uint64_t sub_1D43C3AD8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1D42972D4(v1);
  return v1;
}

uint64_t sub_1D43C3B10(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v4 = a2;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = sub_1D42E2C6C(*(void *)(v2 + 16));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v4;
  return result;
}

void *(*sub_1D43C3B4C(void *a1))(void *result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  if (!v2) {
    uint64_t v3 = 0;
  }
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v1;
  return sub_1D43C3B80;
}

void *sub_1D43C3B80(void *result)
{
  uint64_t v2 = result[1];
  uint64_t v1 = result[2];
  if (!*result) {
    uint64_t v2 = 0;
  }
  *(void *)(v1 + 16) = *result;
  *(void *)(v1 + 24) = v2;
  return result;
}

uint64_t sub_1D43C3B98()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1D42972D4(v1);
  return v1;
}

uint64_t sub_1D43C3BCC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1D42E2C6C(*(void *)(v2 + 32));
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*sub_1D43C3C04())()
{
  return nullsub_1;
}

uint64_t sub_1D43C3C24@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (void *)*a1;
  swift_beginAccess();
  uint64_t v4 = v3[2];
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  uint64_t v7 = v3[5];
  uint64_t v8 = v3[6];
  uint64_t v9 = v3[7];
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  a2[5] = v9;
  sub_1D42972D4(v4);
  sub_1D42972D4(v6);
  return sub_1D42972D4(v8);
}

uint64_t sub_1D43C3CA8(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = (void *)*a2;
  swift_beginAccess();
  uint64_t v9 = v8[2];
  uint64_t v12 = v8[6];
  uint64_t v11 = v8[4];
  v8[2] = v2;
  v8[3] = v3;
  v8[4] = v4;
  v8[5] = v5;
  v8[6] = v6;
  v8[7] = v7;
  sub_1D42972D4(v2);
  sub_1D42972D4(v4);
  sub_1D42972D4(v6);
  sub_1D42E2C6C(v9);
  sub_1D42E2C6C(v11);
  return sub_1D42E2C6C(v12);
}

uint64_t sub_1D43C3D78@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v7 = v1[7];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v8;
  a1[5] = v7;
  sub_1D42972D4(v3);
  sub_1D42972D4(v5);
  return sub_1D42972D4(v8);
}

uint64_t sub_1D43C3DF8(long long *a1)
{
  uint64_t v2 = *((void *)a1 + 2);
  long long v8 = *(long long *)((char *)a1 + 24);
  long long v9 = *a1;
  uint64_t v3 = *((void *)a1 + 5);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 48);
  *(_OWORD *)(v1 + 16) = v9;
  *(void *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 40) = v8;
  *(void *)(v1 + 56) = v3;
  sub_1D42E2C6C(v4);
  sub_1D42E2C6C(v5);
  return sub_1D42E2C6C(v6);
}

uint64_t (*sub_1D43C3E9C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1D43C3EF0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 96) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43C3F50()
{
  return swift_bridgeObjectRetain();
}

uint64_t FMIPAccessoryDiscoveryController.__allocating_init(discoveryType:)(unsigned __int8 *a1)
{
  uint64_t v2 = swift_allocObject();
  FMIPAccessoryDiscoveryController.init(discoveryType:)(a1);
  return v2;
}

uint64_t FMIPAccessoryDiscoveryController.init(discoveryType:)(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D446A088();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D446A068();
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = sub_1D44699B8();
  MEMORY[0x1F4188790](v9 - 8);
  HIDWORD(v17) = *a1;
  sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7E860);
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  sub_1D4469988();
  uint64_t v18 = MEMORY[0x1E4FBC860];
  sub_1D42DDB64((unint64_t *)&qword_1EBD7FDB0, MEMORY[0x1E4FBCC10]);
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  sub_1D43C42CC();
  sub_1D446A1F8();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCC58], v4);
  *(void *)(v1 + 64) = sub_1D446A0C8();
  *(void *)(v1 + 80) = 0;
  *(unsigned char *)(v1 + 88) = 0;
  *(void *)(v1 + 96) = MEMORY[0x1E4FBC870];
  id v10 = objc_allocWithZone(MEMORY[0x1E4F97BC8]);
  sub_1D4275AD0(0, &qword_1EA6CAC50);
  sub_1D43C4328();
  uint64_t v11 = (void *)sub_1D4469EC8();
  id v12 = objc_msgSend(v10, sel_initWithAccessories_, v11);

  *(unsigned char *)(v2 + 72) = BYTE4(v17);
  id v13 = v12;
  id v14 = sub_1D43C7570((uint64_t)v12);

  uint64_t v15 = *(void **)(v2 + 80);
  *(void *)(v2 + 80) = v14;

  return v2;
}

unint64_t sub_1D43C42CC()
{
  unint64_t result = qword_1EBD7FDA0;
  if (!qword_1EBD7FDA0)
  {
    sub_1D42DB55C((uint64_t *)&unk_1EBD7FD90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7FDA0);
  }
  return result;
}

unint64_t sub_1D43C4328()
{
  unint64_t result = qword_1EA6CAC58;
  if (!qword_1EA6CAC58)
  {
    sub_1D4275AD0(255, &qword_1EA6CAC50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAC58);
  }
  return result;
}

void *FMIPAccessoryDiscoveryController.deinit()
{
  unint64_t result = *(void **)(v0 + 80);
  if (result)
  {
    objc_msgSend(result, sel_stop);
    uint64_t v2 = *(void *)(v0 + 32);
    uint64_t v3 = *(void *)(v0 + 48);
    sub_1D42E2C6C(*(void *)(v0 + 16));
    sub_1D42E2C6C(v2);
    sub_1D42E2C6C(v3);

    swift_bridgeObjectRelease();
    return (void *)v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *FMIPAccessoryDiscoveryController.__deallocating_deinit()
{
  unint64_t result = *(void **)(v0 + 80);
  if (result)
  {
    objc_msgSend(result, sel_stop);
    uint64_t v2 = *(void *)(v0 + 32);
    uint64_t v3 = *(void *)(v0 + 48);
    sub_1D42E2C6C(*(void *)(v0 + 16));
    sub_1D42E2C6C(v2);
    sub_1D42E2C6C(v3);

    swift_bridgeObjectRelease();
    return (void *)swift_deallocClassInstance();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D43C44B8(char a1, uint64_t a2, uint64_t a3)
{
  if ((*(unsigned char *)(v3 + 88) & 1) == 0)
  {
    id v10 = *(NSObject **)(v3 + 64);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_1D43C77B4;
    *(void *)(v11 + 24) = v3;
    uint64_t v29 = sub_1D42AEE34;
    id v30 = (void *)v11;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v26 = 1107296256;
    unint64_t v27 = sub_1D42AEDE4;
    uint64_t v28 = &unk_1F2C0DE18;
    id v12 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v10, v12);
    _Block_release(v12);
    LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v10)
    {
      __break(1u);
    }
    else
    {
      os_log_type_t v13 = sub_1D446A038();
      if ((a1 & 1) == 0)
      {
        sub_1D43C8E90(v13, 0xD000000000000027, 0x80000001D4482650);
        uint64_t v19 = *(void **)(v3 + 80);
        if (v19)
        {
          uint64_t v20 = swift_allocObject();
          swift_weakInit();
          uint64_t v21 = (void *)swift_allocObject();
          v21[2] = v20;
          v21[3] = a2;
          v21[4] = a3;
          uint64_t v29 = sub_1D43C7BEC;
          id v30 = v21;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v26 = 1107296256;
          unint64_t v27 = sub_1D42E1B08;
          uint64_t v28 = &unk_1F2C0DE90;
          uint64_t v22 = _Block_copy(&aBlock);
          sub_1D42972D4(a2);
          id v23 = v19;
          swift_release();
          objc_msgSend(v23, sel_startAccessoryDiscoveryWithCompletion_, v22);
          _Block_release(v22);
          swift_release();

          return;
        }
        goto LABEL_17;
      }
      sub_1D43C8E90(v13, 0xD000000000000036, 0x80000001D44825A0);
      id v14 = *(void **)(v3 + 80);
      if (v14)
      {
        uint64_t v15 = swift_allocObject();
        swift_weakInit();
        uint64_t v16 = (void *)swift_allocObject();
        v16[2] = v15;
        v16[3] = a2;
        v16[4] = a3;
        uint64_t v29 = sub_1D43C7BFC;
        id v30 = v16;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v26 = 1107296256;
        unint64_t v27 = sub_1D42E1B08;
        uint64_t v28 = &unk_1F2C0DEE0;
        uint64_t v17 = _Block_copy(&aBlock);
        id v18 = v14;
        sub_1D42972D4(a2);
        swift_release();
        objc_msgSend(v18, sel_startLocalFindableAccessoryDiscoveryWithCompletion_, v17);
        _Block_release(v17);
        swift_release();

        return;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
  oslog = sub_1D44698F8();
  os_log_type_t v5 = sub_1D446A038();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1D4271000, oslog, v5, "FMIPAccessoryDiscoveryController: Tried to start new session while the old one is still running, aborting.", v6, 2u);
    MEMORY[0x1D9447730](v6, -1, -1);
  }
}

uint64_t sub_1D43C4914(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 96);
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 96) + 16))
  {
    swift_beginAccess();
    uint64_t v4 = *(void (**)(uint64_t))(a1 + 32);
    if (v4)
    {
      sub_1D42972D4((uint64_t)v4);
      uint64_t v5 = swift_bridgeObjectRetain();
      v4(v5);
      sub_1D42E2C6C((uint64_t)v4);
      swift_bridgeObjectRelease();
    }
    *uint64_t v2 = MEMORY[0x1E4FBC870];
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1D43C49CC(void *a1, uint64_t a2, void (*a3)(id *))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    if (a1)
    {
      id v7 = a1;
      os_log_type_t v8 = sub_1D446A018();
      sub_1D43C8C64(v8);
      LOBYTE(v23) = *(unsigned char *)(v6 + 72);
      id v9 = a1;
      FMIPAccessoryError.init(underlyingError:discoveryType:)(a1, (char *)&v23, (uint64_t)&v18);
      id v10 = v18;
      unsigned __int8 v11 = v19;
      sub_1D43C9224(v18, v19);
      os_log_type_t v12 = sub_1D446A038();
      sub_1D43C7C08(v12);
      sub_1D43C90E0(v10, v11);
      swift_beginAccess();
      os_log_type_t v13 = *(void (**)(void **))(v6 + 48);
      if (v13)
      {
        uint64_t v21 = v10;
        unsigned __int8 v22 = v11;
        swift_retain();
        v13(&v21);
        sub_1D42E2C6C((uint64_t)v13);
      }
      sub_1D43C90E0(v10, v11);
      if (a3)
      {
        LOBYTE(v18) = *(unsigned char *)(v6 + 72);
        id v14 = a1;
        FMIPAccessoryError.init(underlyingError:discoveryType:)(a1, (char *)&v18, (uint64_t)&v21);
        uint64_t v15 = v21;
        unsigned __int8 v16 = v22;
        id v18 = v21;
        unsigned __int8 v19 = v22;
        char v20 = 1;
        a3(&v18);
        swift_release();

        sub_1D43C90E0(v15, v16);
        return;
      }
    }
    else
    {
      os_log_type_t v17 = sub_1D446A038();
      sub_1D43C8E90(v17, 0xD000000000000037, 0x80000001D4482560);
      *(unsigned char *)(v6 + 88) = 1;
      if (a3)
      {
        uint64_t v23 = 0;
        __int16 v24 = 0;
        a3((id *)&v23);
      }
    }
    swift_release();
  }
}

void sub_1D43C4BDC(void *a1, uint64_t a2, void (*a3)(id *))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    if (a1)
    {
      id v7 = a1;
      os_log_type_t v8 = sub_1D446A018();
      sub_1D43C8C64(v8);
      LOBYTE(v23) = *(unsigned char *)(v6 + 72);
      id v9 = a1;
      FMIPAccessoryError.init(underlyingError:discoveryType:)(a1, (char *)&v23, (uint64_t)&v18);
      id v10 = v18;
      unsigned __int8 v11 = v19;
      sub_1D43C9224(v18, v19);
      os_log_type_t v12 = sub_1D446A038();
      sub_1D43C7C08(v12);
      sub_1D43C90E0(v10, v11);
      swift_beginAccess();
      os_log_type_t v13 = *(void (**)(void **))(v6 + 48);
      if (v13)
      {
        uint64_t v21 = v10;
        unsigned __int8 v22 = v11;
        swift_retain();
        v13(&v21);
        sub_1D42E2C6C((uint64_t)v13);
      }
      sub_1D43C90E0(v10, v11);
      if (a3)
      {
        LOBYTE(v18) = *(unsigned char *)(v6 + 72);
        id v14 = a1;
        FMIPAccessoryError.init(underlyingError:discoveryType:)(a1, (char *)&v18, (uint64_t)&v21);
        uint64_t v15 = v21;
        unsigned __int8 v16 = v22;
        id v18 = v21;
        unsigned __int8 v19 = v22;
        char v20 = 1;
        a3(&v18);
        swift_release();

        sub_1D43C90E0(v15, v16);
        return;
      }
    }
    else
    {
      os_log_type_t v17 = sub_1D446A038();
      sub_1D43C8E90(v17, 0xD000000000000028, 0x80000001D4482620);
      *(unsigned char *)(v6 + 88) = 1;
      if (a3)
      {
        uint64_t v23 = 0;
        __int16 v24 = 0;
        a3((id *)&v23);
      }
    }
    swift_release();
  }
}

void sub_1D43C4DEC(char a1, uint64_t a2, uint64_t a3)
{
  int v7 = *(unsigned __int8 *)(v3 + 88);
  os_log_type_t v8 = sub_1D446A038();
  if (v7 != 1)
  {
    sub_1D43C8E90(v8, 0xD00000000000003ELL, 0x80000001D44824D0);
    return;
  }
  if (a1)
  {
    sub_1D43C8E90(v8, 0xD000000000000035, 0x80000001D44823F0);
    id v9 = *(void **)(v3 + 80);
    if (v9)
    {
      uint64_t v10 = swift_allocObject();
      swift_weakInit();
      unsigned __int8 v11 = (void *)swift_allocObject();
      v11[2] = v10;
      v11[3] = a2;
      v11[4] = a3;
      uint64_t v23 = sub_1D43C7E44;
      __int16 v24 = v11;
      uint64_t v19 = MEMORY[0x1E4F143A8];
      uint64_t v20 = 1107296256;
      uint64_t v21 = sub_1D42E1B08;
      unsigned __int8 v22 = &unk_1F2C0DF80;
      os_log_type_t v12 = _Block_copy(&v19);
      id v13 = v9;
      sub_1D42972D4(a2);
      swift_release();
      objc_msgSend(v13, sel_stopLocalFindableAccessoryDiscoveryWithCompletion_, v12);
      _Block_release(v12);

      return;
    }
    __break(1u);
    goto LABEL_10;
  }
  sub_1D43C8E90(v8, 0xD000000000000026, 0x80000001D44824A0);
  id v14 = *(void **)(v3 + 80);
  if (!v14)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  unsigned __int8 v16 = (void *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a2;
  v16[4] = a3;
  uint64_t v23 = sub_1D43C7E34;
  __int16 v24 = v16;
  uint64_t v19 = MEMORY[0x1E4F143A8];
  uint64_t v20 = 1107296256;
  uint64_t v21 = sub_1D42E1B08;
  unsigned __int8 v22 = &unk_1F2C0DF30;
  os_log_type_t v17 = _Block_copy(&v19);
  sub_1D42972D4(a2);
  id v18 = v14;
  swift_release();
  objc_msgSend(v18, sel_stopAccessoryDiscoveryWithCompletion_, v17);
  _Block_release(v17);
}

void sub_1D43C5084(void *a1, uint64_t a2, void (*a3)(id *))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    if (a1)
    {
      id v7 = a1;
      os_log_type_t v8 = sub_1D446A018();
      sub_1D43C8C64(v8);
      LOBYTE(v23) = *(unsigned char *)(v6 + 72);
      id v9 = a1;
      FMIPAccessoryError.init(underlyingError:discoveryType:)(a1, (char *)&v23, (uint64_t)&v18);
      id v10 = v18;
      unsigned __int8 v11 = v19;
      sub_1D43C9224(v18, v19);
      os_log_type_t v12 = sub_1D446A038();
      sub_1D43C7C08(v12);
      sub_1D43C90E0(v10, v11);
      swift_beginAccess();
      id v13 = *(void (**)(void **))(v6 + 48);
      if (v13)
      {
        uint64_t v21 = v10;
        unsigned __int8 v22 = v11;
        swift_retain();
        v13(&v21);
        sub_1D42E2C6C((uint64_t)v13);
      }
      sub_1D43C90E0(v10, v11);
      if (a3)
      {
        LOBYTE(v18) = *(unsigned char *)(v6 + 72);
        id v14 = a1;
        FMIPAccessoryError.init(underlyingError:discoveryType:)(a1, (char *)&v18, (uint64_t)&v21);
        uint64_t v15 = v21;
        unsigned __int8 v16 = v22;
        id v18 = v21;
        unsigned __int8 v19 = v22;
        char v20 = 1;
        a3(&v18);
        swift_release();

        sub_1D43C90E0(v15, v16);
        return;
      }
    }
    else
    {
      os_log_type_t v17 = sub_1D446A038();
      sub_1D43C8E90(v17, 0xD000000000000038, 0x80000001D44823B0);
      *(unsigned char *)(v6 + 88) = 0;
      if (a3)
      {
        uint64_t v23 = 0;
        __int16 v24 = 0;
        a3((id *)&v23);
      }
    }
    swift_release();
  }
}

void sub_1D43C5290(void *a1, uint64_t a2, void (*a3)(id *))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    if (a1)
    {
      id v7 = a1;
      os_log_type_t v8 = sub_1D446A018();
      sub_1D43C8C64(v8);
      LOBYTE(v23) = *(unsigned char *)(v6 + 72);
      id v9 = a1;
      FMIPAccessoryError.init(underlyingError:discoveryType:)(a1, (char *)&v23, (uint64_t)&v18);
      id v10 = v18;
      unsigned __int8 v11 = v19;
      sub_1D43C9224(v18, v19);
      os_log_type_t v12 = sub_1D446A038();
      sub_1D43C7C08(v12);
      sub_1D43C90E0(v10, v11);
      swift_beginAccess();
      id v13 = *(void (**)(void **))(v6 + 48);
      if (v13)
      {
        uint64_t v21 = v10;
        unsigned __int8 v22 = v11;
        swift_retain();
        v13(&v21);
        sub_1D42E2C6C((uint64_t)v13);
      }
      sub_1D43C90E0(v10, v11);
      if (a3)
      {
        LOBYTE(v18) = *(unsigned char *)(v6 + 72);
        id v14 = a1;
        FMIPAccessoryError.init(underlyingError:discoveryType:)(a1, (char *)&v18, (uint64_t)&v21);
        uint64_t v15 = v21;
        unsigned __int8 v16 = v22;
        id v18 = v21;
        unsigned __int8 v19 = v22;
        char v20 = 1;
        a3(&v18);
        swift_release();

        sub_1D43C90E0(v15, v16);
        return;
      }
    }
    else
    {
      os_log_type_t v17 = sub_1D446A038();
      sub_1D43C8E90(v17, 0xD000000000000029, 0x80000001D4482470);
      *(unsigned char *)(v6 + 88) = 0;
      if (a3)
      {
        uint64_t v23 = 0;
        __int16 v24 = 0;
        a3((id *)&v23);
      }
    }
    swift_release();
  }
}

void sub_1D43C549C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  if (*(unsigned char *)(v3 + 88) == 1)
  {
    uint64_t v26 = a2;
    uint64_t v27 = a3;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1D4469928();
    sub_1D42D7FAC(v11, (uint64_t)qword_1EBD83228);
    os_log_type_t v12 = sub_1D446A018();
    id v13 = sub_1D44698F8();
    if (os_log_type_enabled(v13, v12))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = v9;
      uint64_t v15 = swift_slowAlloc();
      aBlock[0] = v15;
      *(_DWORD *)id v14 = 136315138;
      uint64_t v28 = sub_1D42CB9EC(0xD000000000000037, 0x80000001D44820F0, aBlock);
      sub_1D446A188();
      _os_log_impl(&dword_1D4271000, v13, v12, "%s", v14, 0xCu);
      swift_arrayDestroy();
      uint64_t v16 = v15;
      uint64_t v9 = v25;
      MEMORY[0x1D9447730](v16, -1, -1);
      MEMORY[0x1D9447730](v14, -1, -1);
    }

    a2 = v26;
    a3 = v27;
  }
  os_log_type_t v17 = *(void **)(v4 + 80);
  if (v17)
  {
    uint64_t v18 = *a1;
    uint64_t v19 = swift_allocObject();
    swift_weakInit();
    sub_1D43C915C((uint64_t)a1, (uint64_t)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v19;
    sub_1D43C7E54((uint64_t)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20);
    unsigned __int8 v22 = (void *)(v21 + ((v10 + v20 + 7) & 0xFFFFFFFFFFFFFFF8));
    *unsigned __int8 v22 = a2;
    v22[1] = a3;
    aBlock[4] = (uint64_t)sub_1D43C7EB8;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1D42E1B08;
    aBlock[3] = (uint64_t)&unk_1F2C0DFD0;
    uint64_t v23 = _Block_copy(aBlock);
    id v24 = v17;
    swift_retain();
    swift_release();
    objc_msgSend(v24, sel_initiatePairingWith_completion_, v18, v23);
    _Block_release(v23);
  }
  else
  {
    __break(1u);
  }
}

void sub_1D43C57FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v37 = a6;
  uint64_t v38 = a4;
  uint64_t v12 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v36 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v36 + 64);
  MEMORY[0x1F4188790](v12 - 8);
  if (*(unsigned char *)(v7 + 88) == 1)
  {
    uint64_t v35 = a7;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1D4469928();
    sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
    os_log_type_t v15 = sub_1D446A018();
    uint64_t v16 = sub_1D44698F8();
    if (os_log_type_enabled(v16, v15))
    {
      v33[1] = a2;
      os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
      id v34 = a1;
      uint64_t v18 = swift_slowAlloc();
      aBlock[0] = v18;
      *(_DWORD *)os_log_type_t v17 = 136315138;
      v33[0] = v17 + 4;
      uint64_t v39 = sub_1D42CB9EC(0xD000000000000037, 0x80000001D44820F0, aBlock);
      sub_1D446A188();
      _os_log_impl(&dword_1D4271000, v16, v15, "%s", v17, 0xCu);
      swift_arrayDestroy();
      uint64_t v19 = v18;
      a1 = v34;
      MEMORY[0x1D9447730](v19, -1, -1);
      MEMORY[0x1D9447730](v17, -1, -1);
    }

    a7 = v35;
  }
  uint64_t v20 = *MEMORY[0x1E4F97D20];
  id v21 = objc_allocWithZone(MEMORY[0x1E4F97BD8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unsigned __int8 v22 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  uint64_t v23 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v21, sel_initWithName_roleId_roleEmoji_, v22, v20, v23);

  uint64_t v25 = *(void **)(v8 + 80);
  if (v25)
  {
    uint64_t v26 = *a1;
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    sub_1D43C915C((uint64_t)a1, (uint64_t)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    unint64_t v28 = (*(unsigned __int8 *)(v36 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v27;
    sub_1D43C7E54((uint64_t)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v28);
    id v30 = (void *)(v29 + ((v13 + v28 + 7) & 0xFFFFFFFFFFFFFFF8));
    void *v30 = v37;
    v30[1] = a7;
    aBlock[4] = (uint64_t)sub_1D43C7EE0;
    aBlock[5] = v29;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1D43C6864;
    aBlock[3] = (uint64_t)&unk_1F2C0E020;
    char v31 = _Block_copy(aBlock);
    id v32 = v25;
    swift_retain();
    swift_release();
    objc_msgSend(v32, sel_finalizePairingWith_configuration_completion_, v26, v24, v31);
    _Block_release(v31);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D43C5C08(void *a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v79 = a6;
  uint64_t v80 = a5;
  uint64_t v73 = sub_1D4469618();
  uint64_t v71 = *(void *)(v73 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v73);
  uint64_t v75 = (char *)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v70 = (char *)v67 - v11;
  uint64_t v12 = sub_1D42D5DA0(&qword_1EBD7CB80);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  unint64_t v74 = (char *)v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v67 - v15;
  uint64_t updated = type metadata accessor for FMIPItemUpdateType(0);
  MEMORY[0x1F4188790](updated);
  uint64_t v19 = (char *)v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for FMIPItem();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v72 = (uint64_t)v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1D42D5DA0(&qword_1EA6CAC70);
  MEMORY[0x1F4188790](v77);
  uint64_t v78 = (void *)((char *)v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v76 = (id)type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v23 = MEMORY[0x1F4188790](v76);
  uint64_t v25 = (char *)v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  unint64_t v28 = (char *)v67 - v27;
  MEMORY[0x1F4188790](v26);
  id v30 = (char *)v67 - v29;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v32 = result;
    if (a2)
    {
      sub_1D43C915C(a4, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      id v33 = a2;
      id v34 = a2;
      os_log_type_t v35 = sub_1D446A018();
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1D4469928();
      sub_1D42D7FAC(v36, (uint64_t)qword_1EBD83228);
      uint64_t v37 = sub_1D44698F8();
      os_log_type_t v38 = v35;
      if (os_log_type_enabled(v37, v35))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        uint64_t v75 = (char *)v40;
        *(_DWORD *)uint64_t v39 = 136315138;
        uint64_t v86 = v40;
        unint64_t v74 = (char *)(v39 + 4);
        uint64_t v82 = 0;
        unint64_t v83 = 0xE000000000000000;
        sub_1D446A378();
        sub_1D4469C08();
        sub_1D446A458();
        sub_1D4469C08();
        uint64_t v81 = a2;
        sub_1D42D5DA0(&qword_1EA6C9360);
        sub_1D446A458();
        sub_1D4469C08();
        uint64_t v82 = sub_1D42CB9EC(v82, v83, &v86);
        sub_1D446A188();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D4271000, v37, v38, "FMIPAccessoryDiscoveryController: %s", v39, 0xCu);
        char v41 = v75;
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v41, -1, -1);
        MEMORY[0x1D9447730](v39, -1, -1);
      }

      sub_1D43C91C4((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      LOBYTE(v86) = *(unsigned char *)(v32 + 72);
      id v42 = a2;
      FMIPAccessoryError.init(underlyingError:discoveryType:)(a2, (char *)&v86, (uint64_t)&v82);
      char v43 = v83;
      uint64_t v44 = v78;
      uint64_t *v78 = v82;
      *((unsigned char *)v44 + 8) = v43;
      swift_storeEnumTagMultiPayload();
      v80(v44);
      swift_release();

      return sub_1D4276C3C((uint64_t)v44, &qword_1EA6CAC70);
    }
    if (!a1)
    {
      sub_1D43C915C(a4, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      os_log_type_t v59 = sub_1D446A018();
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v60 = sub_1D4469928();
      sub_1D42D7FAC(v60, (uint64_t)qword_1EBD83228);
      uint64_t v61 = sub_1D44698F8();
      os_log_type_t v62 = v59;
      if (os_log_type_enabled(v61, v59))
      {
        uint64_t v63 = (uint8_t *)swift_slowAlloc();
        uint64_t v64 = swift_slowAlloc();
        *(_DWORD *)uint64_t v63 = 136315138;
        uint64_t v86 = v64;
        uint64_t v82 = 0;
        unint64_t v83 = 0xE000000000000000;
        sub_1D446A378();
        sub_1D4469C08();
        sub_1D446A458();
        sub_1D4469C08();
        uint64_t v82 = sub_1D42CB9EC(v82, v83, &v86);
        sub_1D446A188();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D4271000, v61, v62, "FMIPAccessoryDiscoveryController: %s", v63, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v64, -1, -1);
        MEMORY[0x1D9447730](v63, -1, -1);
      }

      sub_1D43C91C4((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      uint64_t v44 = v78;
      uint64_t *v78 = 0;
      *((unsigned char *)v44 + 8) = 0;
      swift_storeEnumTagMultiPayload();
      v80(v44);
      swift_release();
      return sub_1D4276C3C((uint64_t)v44, &qword_1EA6CAC70);
    }
    uint64_t v69 = result;
    sub_1D43C915C(a4, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    id v45 = a1;
    os_log_type_t v46 = sub_1D446A038();
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v47 = sub_1D4469928();
    sub_1D42D7FAC(v47, (uint64_t)qword_1EBD83228);
    uint64_t v48 = sub_1D44698F8();
    os_log_type_t v49 = v46;
    if (os_log_type_enabled(v48, v46))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      id v68 = v45;
      *(_DWORD *)uint64_t v50 = 136315138;
      uint64_t v86 = v51;
      v67[1] = v50 + 4;
      uint64_t v82 = 0;
      unint64_t v83 = 0xE000000000000000;
      sub_1D446A378();
      sub_1D4469C08();
      sub_1D446A458();
      sub_1D4469C08();
      uint64_t v82 = sub_1D42CB9EC(v82, v83, &v86);
      id v45 = v68;
      sub_1D446A188();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v48, v49, "FMIPAccessoryDiscoveryController: %s", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v51, -1, -1);
      MEMORY[0x1D9447730](v50, -1, -1);
    }

    uint64_t v52 = (uint64_t)v74;
    unint64_t v53 = v75;
    sub_1D43C91C4((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    uint64_t v84 = sub_1D4275AD0(0, &qword_1EBD7CB40);
    uint64_t v85 = &protocol witness table for SPBeacon;
    uint64_t v82 = (uint64_t)v45;
    swift_storeEnumTagMultiPayload();
    uint64_t v54 = v71;
    uint64_t v55 = v73;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v16, 1, 1, v73);
    type metadata accessor for FMIPItemUpdateContext(0);
    uint64_t v56 = swift_allocObject();
    sub_1D43C915C((uint64_t)v19, v56 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_type, type metadata accessor for FMIPItemUpdateType);
    id v76 = v45;
    uint64_t v57 = v70;
    sub_1D4469608();
    uint64_t v58 = *(void (**)(uint64_t, char *, uint64_t))(v54 + 32);
    v58(v56 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_timestamp, v57, v55);
    sub_1D43C90F4((uint64_t)v16, v52);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v52, 1, v55) == 1)
    {
      sub_1D4469608();
      sub_1D4276C3C((uint64_t)v16, &qword_1EBD7CB80);
      sub_1D43C91C4((uint64_t)v19, type metadata accessor for FMIPItemUpdateType);
      sub_1D4276C3C(v52, &qword_1EBD7CB80);
    }
    else
    {
      sub_1D4276C3C((uint64_t)v16, &qword_1EBD7CB80);
      sub_1D43C91C4((uint64_t)v19, type metadata accessor for FMIPItemUpdateType);
      v58((uint64_t)v53, (char *)v52, v55);
    }
    v58(v56 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_creationTimestamp, v53, v55);
    uint64_t v65 = v72;
    FMIPItem.init(with:from:)(&v82, v56, v72);
    uint64_t v66 = v78;
    sub_1D43C915C(v65, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    swift_storeEnumTagMultiPayload();
    v80(v66);

    swift_release();
    sub_1D4276C3C((uint64_t)v66, &qword_1EA6CAC70);
    return sub_1D43C91C4(v65, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  }
  return result;
}

void sub_1D43C6864(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_1D43C68F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = *(void **)(v3 + 80);
  if (v10)
  {
    uint64_t v11 = *a1;
    uint64_t v12 = swift_allocObject();
    swift_weakInit();
    sub_1D43C915C((uint64_t)a1, (uint64_t)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v12;
    sub_1D43C7E54((uint64_t)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
    uint64_t v15 = (void *)(v14 + ((v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
    void *v15 = a2;
    v15[1] = a3;
    aBlock[4] = sub_1D43C81B4;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D42E1B08;
    aBlock[3] = &unk_1F2C0E070;
    uint64_t v16 = _Block_copy(aBlock);
    id v17 = v10;
    swift_retain();
    swift_release();
    objc_msgSend(v17, sel_invalidatePairingWith_completion_, v11, v16);
    _Block_release(v16);
  }
  else
  {
    __break(1u);
  }
}

void sub_1D43C6AF0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a7;
  uint64_t v44 = a8;
  uint64_t v12 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v17 = (char *)&v39 - v16;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v19 = Strong;
    if (a1)
    {
      sub_1D43C915C(a3, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      id v20 = a1;
      id v21 = a1;
      os_log_type_t v22 = sub_1D446A018();
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_1D4469928();
      sub_1D42D7FAC(v23, (uint64_t)qword_1EBD83228);
      uint64_t v24 = sub_1D44698F8();
      if (os_log_type_enabled(v24, v22))
      {
        uint64_t v42 = a5;
        uint64_t v25 = swift_slowAlloc();
        char v41 = a4;
        uint64_t v26 = (uint8_t *)v25;
        uint64_t v27 = swift_slowAlloc();
        uint64_t v40 = (uint8_t *)v27;
        *(_DWORD *)uint64_t v26 = 136315138;
        os_log_type_t v46 = (void *)v27;
        uint64_t v39 = v26 + 4;
        uint64_t v48 = 0;
        unint64_t v49 = 0xE000000000000000;
        sub_1D446A378();
        sub_1D4469C08();
        sub_1D446A458();
        sub_1D4469C08();
        id v45 = a1;
        sub_1D42D5DA0(&qword_1EA6C9360);
        sub_1D446A458();
        sub_1D4469C08();
        uint64_t v48 = sub_1D42CB9EC(v48, v49, (uint64_t *)&v46);
        sub_1D446A188();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D4271000, v24, v22, "FMIPAccessoryDiscoveryController: %s", v26, 0xCu);
        unint64_t v28 = v40;
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v28, -1, -1);
        uint64_t v29 = v26;
        a4 = v41;
        MEMORY[0x1D9447730](v29, -1, -1);
      }

      sub_1D43C91C4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      LOBYTE(v48) = *(unsigned char *)(v19 + 72);
      id v30 = a1;
      FMIPAccessoryError.init(underlyingError:discoveryType:)(a1, (char *)&v48, (uint64_t)&v46);
      char v31 = v46;
      unsigned __int8 v32 = v47;
      uint64_t v48 = (uint64_t)v46;
      LOBYTE(v49) = v47;
      BYTE1(v49) = 1;
      a4(&v48);
      swift_release();

      sub_1D43C90E0(v31, v32);
    }
    else
    {
      uint64_t v42 = a5;
      sub_1D43C915C(a3, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      os_log_type_t v33 = sub_1D446A038();
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_1D4469928();
      sub_1D42D7FAC(v34, (uint64_t)qword_1EBD83228);
      os_log_type_t v35 = sub_1D44698F8();
      os_log_type_t v36 = v33;
      if (os_log_type_enabled(v35, v33))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        uint64_t v38 = swift_slowAlloc();
        char v41 = a4;
        *(_DWORD *)uint64_t v37 = 136315138;
        os_log_type_t v46 = (void *)v38;
        uint64_t v40 = v37 + 4;
        uint64_t v48 = 0;
        unint64_t v49 = 0xE000000000000000;
        sub_1D446A378();
        sub_1D4469C08();
        sub_1D446A458();
        sub_1D4469C08();
        uint64_t v48 = sub_1D42CB9EC(v48, v49, (uint64_t *)&v46);
        a4 = v41;
        sub_1D446A188();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D4271000, v35, v36, "FMIPAccessoryDiscoveryController: %s", v37, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v38, -1, -1);
        MEMORY[0x1D9447730](v37, -1, -1);
      }

      sub_1D43C91C4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      uint64_t v48 = 0;
      LOWORD(v49) = 0;
      a4(&v48);
      swift_release();
    }
  }
}

uint64_t sub_1D43C709C@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 96);
  swift_bridgeObjectRetain();
  sub_1D43CB968((uint64_t (*)(char *))sub_1D43C82A8, v3, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43C7124(id *a1)
{
  uint64_t v2 = sub_1D4469688();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*a1, sel_identifier);
  sub_1D4469668();

  char v7 = sub_1D4469658();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

void sub_1D43C7230()
{
  os_log_type_t v1 = sub_1D446A018();
  sub_1D43C8E90(v1, 0xD000000000000018, 0x80000001D4482250);
  uint64_t v2 = *(void **)(v0 + 80);
  if (v2)
  {
    id v3 = objc_msgSend(v2, sel_state);
    uint64_t v4 = sub_1D43C7570();

    uint64_t v5 = *(void **)(v0 + 80);
    *(void *)(v0 + 80) = v4;

    if (*(unsigned char *)(v0 + 88) == 1)
    {
      os_log_type_t v6 = sub_1D446A038();
      sub_1D43C8E90(v6, 0xD000000000000053, 0x80000001D44821F0);
      *(unsigned char *)(v0 + 88) = 0;
      sub_1D43C44B8(0, 0, 0);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D43C7310(void *a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  os_log_type_t v4 = sub_1D446A038();
  sub_1D43C92A8(v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1D43C2E28(a2);
  uint64_t v6 = sub_1D4352258(v5);
  swift_bridgeObjectRelease();
  char v7 = a1 + 12;
  swift_beginAccess();
  if (*(void *)(a1[12] + 16) <= *(void *)(v6 + 16) >> 3)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = swift_bridgeObjectRetain();
    sub_1D442ABFC(v10);
    swift_bridgeObjectRelease();
    uint64_t v9 = v6;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = sub_1D442B16C(v8, v6);
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = *v7;
  if (*(void *)(v6 + 16) <= *(void *)(*v7 + 16) >> 3)
  {
    uint64_t v18 = *v7;
    swift_bridgeObjectRetain();
    sub_1D442ABFC(v6);
    uint64_t v12 = v18;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1D442B16C(v6, v11);
  }
  *char v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  os_log_type_t v13 = sub_1D446A038();
  sub_1D43C94E0(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  os_log_type_t v14 = sub_1D446A038();
  sub_1D43C94E0(v14);
  swift_bridgeObjectRelease();
  if (*(void *)(v9 + 16))
  {
    swift_beginAccess();
    uint64_t v15 = (void (*)(uint64_t))a1[2];
    if (v15)
    {
      swift_retain();
      v15(v9);
      sub_1D42E2C6C((uint64_t)v15);
    }
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v12 + 16))
  {
    swift_beginAccess();
    uint64_t v16 = (void (*)(uint64_t))a1[4];
    if (v16)
    {
      swift_retain();
      v16(v12);
      sub_1D42E2C6C((uint64_t)v16);
    }
  }
  return swift_bridgeObjectRelease();
}

id sub_1D43C7570(uint64_t a1)
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F97BC0]), sel_initWithPreviousState_, a1);
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  os_log_type_t v13 = sub_1D43C9238;
  uint64_t v14 = v2;
  uint64_t v9 = MEMORY[0x1E4F143A8];
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_1D43C7960;
  uint64_t v12 = &unk_1F2C0E2A0;
  id v3 = _Block_copy(&v9);
  swift_release();
  objc_msgSend(v1, sel_setAccessoryDiscoveredCallback_, v3);
  _Block_release(v3);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  os_log_type_t v13 = sub_1D43C9240;
  uint64_t v14 = v4;
  uint64_t v9 = MEMORY[0x1E4F143A8];
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_1D42BD950;
  uint64_t v12 = &unk_1F2C0E2C8;
  uint64_t v5 = _Block_copy(&v9);
  swift_release();
  objc_msgSend(v1, sel_setSessionInvalidatedCallback_, v5);
  _Block_release(v5);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  os_log_type_t v13 = sub_1D43C9248;
  uint64_t v14 = v6;
  uint64_t v9 = MEMORY[0x1E4F143A8];
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_1D435C428;
  uint64_t v12 = &unk_1F2C0E2F0;
  char v7 = _Block_copy(&v9);
  swift_release();
  objc_msgSend(v1, sel_setAccessoryDiscoveryErrorCallback_, v7);
  _Block_release(v7);
  return v1;
}

uint64_t sub_1D43C77B4()
{
  return sub_1D43C4914(v0);
}

uint64_t sub_1D43C77BC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D43C77CC(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(NSObject **)(result + 64);
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = a1;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_1D43C9290;
    *(void *)(v6 + 24) = v5;
    aBlock[4] = sub_1D42AEE88;
    aBlock[5] = v6;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D42AEDE4;
    aBlock[3] = &unk_1F2C0E368;
    char v7 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    dispatch_sync(v4, v7);
    _Block_release(v7);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1D43C7960(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1D4275AD0(0, &qword_1EA6CAC50);
  sub_1D43C4328();
  uint64_t v2 = sub_1D4469ED8();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43C79F0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D43C7230();
    return swift_release();
  }
  return result;
}

void sub_1D43C7A48(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    v11[0] = *(unsigned char *)(Strong + 72);
    id v4 = a1;
    FMIPAccessoryError.init(underlyingError:discoveryType:)(a1, v11, (uint64_t)&v12);
    id v5 = v12;
    unsigned __int8 v6 = v13;
    sub_1D43C9224(v12, v13);
    os_log_type_t v7 = sub_1D446A038();
    sub_1D43C7C08(v7);
    sub_1D43C90E0(v5, v6);
    swift_beginAccess();
    uint64_t v8 = *(void (**)(id *))(v3 + 48);
    if (v8)
    {
      id v9 = v5;
      unsigned __int8 v10 = v6;
      swift_retain();
      v8(&v9);
      sub_1D42E2C6C((uint64_t)v8);
    }
    swift_release();
    sub_1D43C90E0(v5, v6);
  }
}

uint64_t (*sub_1D43C7B54())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D43C7BB0()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1D43C7BEC(void *a1)
{
  sub_1D43C4BDC(a1, *(void *)(v1 + 16), *(void (**)(id *))(v1 + 24));
}

void sub_1D43C7BFC(void *a1)
{
  sub_1D43C49CC(a1, *(void *)(v1 + 16), *(void (**)(id *))(v1 + 24));
}

void sub_1D43C7C08(os_log_type_t a1)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  os_log_type_t v3 = a1;
  log = sub_1D44698F8();
  if (os_log_type_enabled(log, a1))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)id v4 = 136315138;
    uint64_t v7 = v5;
    sub_1D446A378();
    sub_1D4469C08();
    FMIPAccessoryError.localizedDescription.getter();
    sub_1D4469C08();
    swift_bridgeObjectRelease();
    sub_1D4469C08();
    sub_1D42CB9EC(0, 0xE000000000000000, &v7);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, log, v3, "FMIPAccessoryDiscoveryController: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v5, -1, -1);
    MEMORY[0x1D9447730](v4, -1, -1);
  }
  else
  {
  }
}

void sub_1D43C7E34(void *a1)
{
  sub_1D43C5290(a1, *(void *)(v1 + 16), *(void (**)(id *))(v1 + 24));
}

void sub_1D43C7E44(void *a1)
{
  sub_1D43C5084(a1, *(void *)(v1 + 16), *(void (**)(id *))(v1 + 24));
}

uint64_t sub_1D43C7E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPDiscoveredAccessory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D43C7EB8(void *a1)
{
}

uint64_t sub_1D43C7EE0(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for FMIPDiscoveredAccessory() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  unsigned __int8 v10 = *(void (**)(uint64_t *))v9;
  uint64_t v11 = *(void *)(v9 + 8);
  return sub_1D43C5C08(a1, a2, v7, v8, v10, v11);
}

uint64_t sub_1D43C7F98()
{
  uint64_t v1 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();

  if (*(void *)(v0 + v3 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 24);
  unint64_t v6 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v6 - 1) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v5 + v6[12];
    uint64_t v8 = sub_1D4469498();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    v9(v7, v8);
    v9(v5 + v6[13], v8);
    v9(v5 + v6[14], v8);
    v9(v5 + v6[15], v8);
    v9(v5 + v6[16], v8);
    v9(v5 + v6[17], v8);
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

void sub_1D43C81B4(void *a1)
{
}

void sub_1D43C81D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for FMIPDiscoveredAccessory() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1D43C6AF0(a1, *(void *)(v4 + 16), v4 + v10, *(void (**)(void))(v4 + v11), *(void *)(v4 + v11 + 8), a2, a3, a4);
}

uint64_t sub_1D43C82A8(id *a1)
{
  return sub_1D43C7124(a1) & 1;
}

unint64_t sub_1D43C82CC()
{
  unint64_t result = qword_1EA6CAC60;
  if (!qword_1EA6CAC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAC60);
  }
  return result;
}

uint64_t sub_1D43C8320()
{
  return sub_1D42DDB64(&qword_1EA6CA188, (void (*)(uint64_t))type metadata accessor for FMIPDiscoveredAccessory);
}

unint64_t sub_1D43C836C()
{
  unint64_t result = qword_1EA6CAC68;
  if (!qword_1EA6CAC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAC68);
  }
  return result;
}

uint64_t sub_1D43C83E0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 96);
  return swift_bridgeObjectRetain();
}

unsigned char *storeEnumTagSinglePayload for DiscoveryType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43C84FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryType()
{
  return &type metadata for DiscoveryType;
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.discoveredAccessoriesCallback.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.discoveredAccessoriesCallback.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.discoveredAccessoriesCallback.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.lostAccessoriesCallback.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.lostAccessoriesCallback.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.lostAccessoriesCallback.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.errorHandler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.errorHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.errorHandler.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.callbacks.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.callbacks.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.callbacks.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.discoveredAccessories.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.startDiscovery(localFindable:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.stopDiscovery(localFindable:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t type metadata accessor for FMIPAccessoryDiscoveryController()
{
  return self;
}

uint64_t method lookup function for FMIPAccessoryDiscoveryController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPAccessoryDiscoveryController);
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.callbacks.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.callbacks.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.callbacks.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.discoveredAccessories.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.__allocating_init(discoveryType:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.startDiscovery(localFindable:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.stopDiscovery(localFindable:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.initiatePairing(accessory:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.finalizePairing(accessory:name:emoji:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.invalidatePairing(accessory:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of FMIPAccessoryDiscoveryController.accessory(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

void *destroy for FMIPAccessoryDiscoveryController.Callbacks(void *result)
{
  uint64_t v1 = result;
  if (*result) {
    unint64_t result = (void *)swift_release();
  }
  if (v1[2]) {
    unint64_t result = (void *)swift_release();
  }
  if (v1[4])
  {
    return (void *)swift_release();
  }
  return result;
}

void *initializeWithCopy for FMIPAccessoryDiscoveryController.Callbacks(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = a2[2];
  if (v5)
  {
    uint64_t v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  uint64_t v7 = a2[4];
  if (v7)
  {
    uint64_t v8 = a2[5];
    a1[4] = v7;
    a1[5] = v8;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  return a1;
}

void *assignWithCopy for FMIPAccessoryDiscoveryController.Callbacks(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    swift_retain();
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (!a1[4])
  {
    if (v10)
    {
      uint64_t v12 = a2[5];
      a1[4] = v10;
      a1[5] = v12;
      swift_retain();
      return a1;
    }
LABEL_21:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v11 = a2[5];
  a1[4] = v10;
  a1[5] = v11;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithCopy for ItemCounts(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for FMIPAccessoryDiscoveryController.Callbacks(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (!a1[4])
  {
    if (v10)
    {
      uint64_t v12 = a2[5];
      a1[4] = v10;
      a1[5] = v12;
      return a1;
    }
LABEL_21:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v11 = a2[5];
  a1[4] = v10;
  a1[5] = v11;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPAccessoryDiscoveryController.Callbacks(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPAccessoryDiscoveryController.Callbacks(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPAccessoryDiscoveryController.Callbacks()
{
  return &type metadata for FMIPAccessoryDiscoveryController.Callbacks;
}

void sub_1D43C8C64(os_log_type_t a1)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  os_log_type_t v3 = a1;
  log = sub_1D44698F8();
  if (os_log_type_enabled(log, a1))
  {
    int v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)int v4 = 136315138;
    uint64_t v7 = v5;
    sub_1D446A378();
    sub_1D4469C08();
    swift_getErrorValue();
    sub_1D446A7D8();
    sub_1D4469C08();
    swift_bridgeObjectRelease();
    sub_1D4469C08();
    sub_1D42CB9EC(0, 0xE000000000000000, &v7);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, log, v3, "FMIPAccessoryDiscoveryController: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v5, -1, -1);
    MEMORY[0x1D9447730](v4, -1, -1);
  }
  else
  {
  }
}

void sub_1D43C8E90(os_log_type_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EBD83228);
  log = sub_1D44698F8();
  if (os_log_type_enabled(log, a1))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v10 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_1D42CB9EC(a2, a3, &v10);
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, log, a1, "FMIPAccessoryDiscoveryController: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v8, -1, -1);
    MEMORY[0x1D9447730](v7, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1D43C9034()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D43C906C(uint64_t a1)
{
  return sub_1D44245C8(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1D43C9074(uint64_t a1)
{
  return sub_1D44245A0(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1D43C907C(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_1D43C90B4(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_1D43C90E0(id a1, unsigned __int8 a2)
{
  if (a2 <= 3u) {
}
  }

uint64_t sub_1D43C90F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7CB80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D43C915C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D43C91C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_1D43C9224(id result, unsigned __int8 a2)
{
  if (a2 <= 3u) {
    return result;
  }
  return result;
}

uint64_t sub_1D43C9238(uint64_t a1)
{
  return sub_1D43C77CC(a1);
}

uint64_t sub_1D43C9240()
{
  return sub_1D43C79F0();
}

void sub_1D43C9248(void *a1)
{
}

uint64_t sub_1D43C9250()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D43C9290()
{
  return sub_1D43C7310(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D43C9298()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D43C92A8(os_log_type_t a1)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  os_log_type_t v3 = a1;
  log = sub_1D44698F8();
  if (os_log_type_enabled(log, a1))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v7 = v5;
    sub_1D446A378();
    sub_1D4469C08();
    sub_1D4275AD0(0, &qword_1EA6CAC50);
    sub_1D43C4328();
    sub_1D4469EE8();
    sub_1D4469C08();
    swift_bridgeObjectRelease();
    sub_1D4469C08();
    sub_1D42CB9EC(0, 0xE000000000000000, &v7);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, log, v3, "FMIPAccessoryDiscoveryController: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v5, -1, -1);
    MEMORY[0x1D9447730](v4, -1, -1);
  }
  else
  {
  }
}

void sub_1D43C94E0(os_log_type_t a1)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  os_log_type_t v3 = a1;
  log = sub_1D44698F8();
  if (os_log_type_enabled(log, a1))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v7 = v5;
    sub_1D446A378();
    sub_1D4469C08();
    type metadata accessor for FMIPDiscoveredAccessory();
    sub_1D42DDB64(&qword_1EA6CA188, (void (*)(uint64_t))type metadata accessor for FMIPDiscoveredAccessory);
    sub_1D4469EE8();
    sub_1D4469C08();
    swift_bridgeObjectRelease();
    sub_1D4469C08();
    sub_1D42CB9EC(0, 0xE000000000000000, &v7);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, log, v3, "FMIPAccessoryDiscoveryController: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v5, -1, -1);
    MEMORY[0x1D9447730](v4, -1, -1);
  }
  else
  {
  }
}

uint64_t type metadata accessor for FMIPLockRequest()
{
  uint64_t result = qword_1EA6CAC78;
  if (!qword_1EA6CAC78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D43C97EC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D43C983C()
{
  uint64_t v27 = *(void *)(v0 + qword_1EA6E4958);
  uint64_t v2 = *(void *)(v27 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  uint64_t v1 = *(void *)(v27 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 8);
  uint64_t v30 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v29 = v2;
  *((void *)&v29 + 1) = v1;
  uint64_t v3 = qword_1EA6C9D80;
  uint64_t v4 = *(void *)(v0 + qword_1EA6C9D80);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));
  sub_1D433313C((void *)(v4 + 16), v28);
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 24));
  swift_release();
  sub_1D42C5494(&v29, v28);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D42C4E78(v28, 0x656369766564, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v0 + v3);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
  sub_1D4306B48((void *)(v6 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = MEMORY[0x1E4FBB390];
  uint64_t v30 = MEMORY[0x1E4FBB390];
  LOBYTE(v29) = 0;
  uint64_t v8 = *(void *)(v0 + v3);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
  sub_1D433313C((void *)(v8 + 16), v28);
  os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 24));
  swift_release();
  sub_1D42C5494(&v29, v28);
  char v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D42C4E78(v28, 0x646E756F73, 0xE500000000000000, v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v0 + v3);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  sub_1D433A560((void *)(v10 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  char v11 = *(unsigned char *)(v27 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_isUserTextEnabled);
  uint64_t v30 = v7;
  LOBYTE(v29) = v11;
  uint64_t v12 = *(void *)(v0 + v3);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v12 + 24));
  sub_1D433313C((void *)(v12 + 16), v28);
  os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 24));
  swift_release();
  sub_1D42C5494(&v29, v28);
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D42C4E78(v28, 0x7478655472657375, 0xE800000000000000, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v0 + v3);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
  sub_1D433A560((void *)(v14 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v27 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_message + 8);
  if (v15)
  {
    uint64_t v16 = *(void *)(v27 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_message);
    uint64_t v30 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v29 = v16;
    *((void *)&v29 + 1) = v15;
    uint64_t v17 = *(void *)(v0 + v3);
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v17 + 24));
    sub_1D433313C((void *)(v17 + 16), v28);
    os_unfair_lock_unlock((os_unfair_lock_t)(v17 + 24));
    swift_release();
    sub_1D42C5494(&v29, v28);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D42C4E78(v28, 1954047348, 0xE400000000000000, v18);
    uint64_t v19 = swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)(v0 + v3);
    MEMORY[0x1F4188790](v19);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v20 + 24));
    sub_1D433A560((void *)(v20 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v20 + 24));
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)(v27 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_passcode + 8);
  if (result)
  {
    uint64_t v22 = *(void *)(v27 + OBJC_IVAR____TtC8FMIPCore14FMIPLockAction_passcode);
    uint64_t v30 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v29 = v22;
    *((void *)&v29 + 1) = result;
    uint64_t v23 = *(void *)(v0 + v3);
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v23 + 24));
    sub_1D433313C((void *)(v23 + 16), v28);
    os_unfair_lock_unlock((os_unfair_lock_t)(v23 + 24));
    swift_release();
    sub_1D42C5494(&v29, v28);
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D42C4E78(v28, 0x65646F6373736170, 0xE800000000000000, v24);
    uint64_t v25 = swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(v0 + v3);
    MEMORY[0x1F4188790](v25);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
    sub_1D433A560((void *)(v26 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D43C9DA8()
{
  return swift_release();
}

uint64_t sub_1D43C9DB8()
{
  sub_1D427B074();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43C9E2C()
{
  return type metadata accessor for FMIPLockRequest();
}

void FMIPHistoricalLocation.locationType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

id FMIPHistoricalLocation.location.getter()
{
  return *(id *)(v0 + 8);
}

double FMIPHistoricalLocation.batteryLevel.getter()
{
  return *(double *)(v0 + 16);
}

void FMIPHistoricalLocation.batteryStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

uint64_t sub_1D43C9E5C(char a1)
{
  uint64_t result = 0x4C79726574746162;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x5379726574746162;
      break;
    case 2:
      uint64_t result = 0xD000000000000012;
      break;
    case 3:
      uint64_t result = 0x656475746974616CLL;
      break;
    case 4:
      unsigned int v3 = 1633906540;
      goto LABEL_8;
    case 5:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    case 6:
      unsigned int v3 = 1769172848;
LABEL_8:
      uint64_t result = v3 | 0x6E6F697400000000;
      break;
    case 7:
      uint64_t result = 0x6D617473656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D43C9F80(char a1)
{
  uint64_t result = 0x4C79726574746162;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x5379726574746162;
      break;
    case 2:
      uint64_t result = 0xD000000000000012;
      break;
    case 3:
      uint64_t result = 0x656475746974616CLL;
      break;
    case 4:
      unsigned int v3 = 1633906540;
      goto LABEL_8;
    case 5:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    case 6:
      unsigned int v3 = 1769172848;
LABEL_8:
      uint64_t result = v3 | 0x6E6F697400000000;
      break;
    case 7:
      uint64_t result = 0x6D617473656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D43CA0A4(unsigned __int8 *a1, char *a2)
{
  return sub_1D4413AA8(*a1, *a2);
}

uint64_t sub_1D43CA0B0()
{
  return sub_1D43F4784();
}

uint64_t sub_1D43CA0BC()
{
  return sub_1D445D418();
}

uint64_t sub_1D43CA0C4()
{
  return sub_1D43F4784();
}

uint64_t sub_1D43CA0CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43CB46C();
  *a1 = result;
  return result;
}

uint64_t sub_1D43CA0FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D43C9E5C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D43CA128()
{
  return sub_1D43C9F80(*v0);
}

uint64_t sub_1D43CA130@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43CB46C();
  *a1 = result;
  return result;
}

void sub_1D43CA158(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1D43CA164(uint64_t a1)
{
  unint64_t v2 = sub_1D43CA7F8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D43CA1A0(uint64_t a1)
{
  unint64_t v2 = sub_1D43CA7F8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPHistoricalLocation.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v4 = sub_1D4469618();
  uint64_t v56 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EA6CAC88);
  uint64_t v58 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43CA7F8();
  sub_1D446A8C8();
  if (!v2)
  {
    uint64_t v55 = v6;
    LOBYTE(v59[0]) = 6;
    uint64_t v10 = sub_1D446A598();
    uint64_t v12 = v11;
    uint64_t v54 = v10;
    LOBYTE(v59[0]) = 0;
    sub_1D446A5B8();
    uint64_t v14 = v13;
    LOBYTE(v59[0]) = 1;
    uint64_t v53 = sub_1D446A598();
    uint64_t v16 = v15;
    LOBYTE(v59[0]) = 3;
    sub_1D446A5B8();
    double v18 = v17;
    LOBYTE(v59[0]) = 5;
    sub_1D446A5B8();
    double v20 = v19;
    LOBYTE(v59[0]) = 2;
    sub_1D446A5B8();
    double v22 = v21;
    LOBYTE(v59[0]) = 7;
    uint64_t v24 = sub_1D446A5E8();
    uint64_t v52 = v9;
    id v25 = objc_msgSend(self, sel_fm_dateFromEpoch_, v24);
    sub_1D44695D8();

    id v26 = objc_allocWithZone(MEMORY[0x1E4F1E5F0]);
    uint64_t v27 = (void *)sub_1D4469578();
    id v28 = objc_msgSend(v26, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_speed_timestamp_, v27, v18, v20, -1.0, v22, -1.0, -1.0, -1.0);

    v29._countAndFlagsBits = v54;
    v29._object = v12;
    FMIPLocationType.init(rawValue:)(v29);
    if (LOBYTE(v59[0]) == 20) {
      int v30 = 0;
    }
    else {
      int v30 = LOBYTE(v59[0]);
    }
    v31._countAndFlagsBits = v53;
    v31._object = v16;
    FMIPBatteryStatus.init(rawValue:)(v31);
    int v32 = LOBYTE(v59[0]);
    if (LOBYTE(v59[0]) == 4) {
      int v32 = 0;
    }
    LODWORD(v54) = v30;
    LOBYTE(v59[0]) = v30;
    v59[1] = (uint64_t)v28;
    v59[2] = v14;
    LODWORD(v53) = v32;
    char v60 = v32;
    id v51 = v28;
    uint64_t v50 = FMIPHistoricalLocation.debugDescription.getter();
    unint64_t v34 = v33;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1D4469928();
    sub_1D42D7FAC(v35, (uint64_t)qword_1EBD83228);
    swift_bridgeObjectRetain();
    os_log_type_t v36 = sub_1D44698F8();
    os_log_type_t v37 = sub_1D4469FF8();
    BOOL v38 = os_log_type_enabled(v36, v37);
    uint64_t v39 = v4;
    uint64_t v40 = v56;
    if (v38)
    {
      uint64_t v41 = swift_slowAlloc();
      unint64_t v49 = a1;
      uint64_t v42 = (uint8_t *)v41;
      uint64_t v43 = swift_slowAlloc();
      v59[0] = v43;
      uint64_t v48 = v39;
      *(_DWORD *)uint64_t v42 = 136315138;
      v47[1] = v42 + 4;
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_1D42CB9EC(v50, v34, v59);
      sub_1D446A188();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D4271000, v36, v37, "FMIPHistoricalLocation: initialized %s", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v43, -1, -1);
      uint64_t v44 = v42;
      a1 = v49;
      MEMORY[0x1D9447730](v44, -1, -1);
      id v45 = v51;

      (*(void (**)(char *, uint64_t))(v40 + 8))(v55, v48);
    }
    else
    {
      id v45 = v51;

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v55, v39);
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v52, v7);
    os_log_type_t v46 = v57;
    *uint64_t v57 = v54;
    *((void *)v46 + 1) = v45;
    *((void *)v46 + 2) = v14;
    v46[24] = v53;
  }
  return sub_1D42BEC64((uint64_t)a1);
}

unint64_t sub_1D43CA7F8()
{
  unint64_t result = qword_1EA6CAC90;
  if (!qword_1EA6CAC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAC90);
  }
  return result;
}

uint64_t FMIPHistoricalLocation.debugDescription.getter()
{
  uint64_t v1 = *(void **)(v0 + 8);
  sub_1D4469C08();
  sub_1D4469C08();
  sub_1D4469C08();
  objc_msgSend(v1, sel_coordinate);
  sub_1D4469EA8();
  sub_1D4469C08();
  sub_1D446A378();
  sub_1D4469C08();
  objc_msgSend(v1, sel_coordinate);
  sub_1D4469EA8();
  sub_1D4469C08();
  objc_msgSend(v1, sel_horizontalAccuracy);
  sub_1D4469EA8();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D446A378();
  sub_1D4469C08();
  sub_1D446A458();
  sub_1D4469C08();
  sub_1D4469EA8();
  sub_1D4469C08();
  sub_1D446A458();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

void FMIPHistoricalLocation.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6CAC98);
  uint64_t v12 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  uint64_t v8 = (void *)*((void *)v1 + 1);
  v11[1] = v1[24];
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43CA7F8();
  sub_1D446A8E8();
  id v9 = objc_msgSend(v8, sel_timestamp);
  if (!v9)
  {
    __break(1u);
    JUMPOUT(0x1D43CAEC8);
  }
  uint64_t v10 = v9;
  char v20 = v7;
  FMIPLocationType.rawValue.getter();
  char v19 = 6;
  sub_1D446A658();
  if (!v2)
  {
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_coordinate);
    char v18 = 3;
    sub_1D446A678();
    objc_msgSend(v8, sel_coordinate);
    char v17 = 5;
    sub_1D446A678();
    objc_msgSend(v8, sel_horizontalAccuracy);
    char v16 = 2;
    sub_1D446A678();
    objc_msgSend(v10, sel_fm_epoch);
    char v15 = 7;
    sub_1D446A6A8();
    char v14 = 0;
    sub_1D446A678();
    char v13 = 1;
    sub_1D446A658();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v4);

  swift_bridgeObjectRelease();
}

uint64_t sub_1D43CAEDC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FMIPHistoricalLocation.init(from:)(a1, a2);
}

void sub_1D43CAEF4(void *a1)
{
}

uint64_t _s8FMIPCore22FMIPHistoricalLocationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 24);
  double v4 = *(double *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  sub_1D432B88C();
  if ((sub_1D446A118() & 1) == 0) {
    return 0;
  }
  unint64_t v6 = FMIPLocationType.rawValue.getter();
  uint64_t v8 = v7;
  if (v6 == FMIPLocationType.rawValue.getter() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_1D446A758();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  if (v2 != v4) {
    return 0;
  }
  return sub_1D42D9544(v3, v5);
}

uint64_t initializeWithCopy for FMIPHistoricalLocation(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unsigned __int8 v3 = *(void **)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for FMIPHistoricalLocation(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  id v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 initializeWithTake for FMIPHistoricalLocation(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FMIPHistoricalLocation(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPHistoricalLocation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPHistoricalLocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPHistoricalLocation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPHistoricalLocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    void *result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43CB32CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPHistoricalLocation.CodingKeys()
{
  return &type metadata for FMIPHistoricalLocation.CodingKeys;
}

unint64_t sub_1D43CB368()
{
  unint64_t result = qword_1EA6CACA0;
  if (!qword_1EA6CACA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CACA0);
  }
  return result;
}

unint64_t sub_1D43CB3C0()
{
  unint64_t result = qword_1EA6CACA8;
  if (!qword_1EA6CACA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CACA8);
  }
  return result;
}

unint64_t sub_1D43CB418()
{
  unint64_t result = qword_1EA6CACB0;
  if (!qword_1EA6CACB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CACB0);
  }
  return result;
}

uint64_t sub_1D43CB46C()
{
  unint64_t v0 = sub_1D446A518();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

void sub_1D43CB4B8(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
}

void sub_1D43CB4E8(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
}

void sub_1D43CB518(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  uint64_t v7 = v6;
  uint64_t v8 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1D446A238();
    sub_1D4275AD0(0, a4);
    sub_1D42B2630(a6, a4);
    sub_1D4469F48();
    uint64_t v8 = v30;
    uint64_t v29 = v31;
    uint64_t v12 = v32;
    int64_t v13 = v33;
    unint64_t v14 = v34;
  }
  else
  {
    uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v29 = a3 + 56;
    uint64_t v16 = ~v15;
    uint64_t v17 = -v15;
    if (v17 < 64) {
      uint64_t v18 = ~(-1 << v17);
    }
    else {
      uint64_t v18 = -1;
    }
    unint64_t v14 = v18 & *(void *)(a3 + 56);
    swift_bridgeObjectRetain();
    uint64_t v12 = v16;
    int64_t v13 = 0;
  }
  int64_t v28 = (unint64_t)(v12 + 64) >> 6;
  if ((v8 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!sub_1D446A2B8()) {
    goto LABEL_36;
  }
  sub_1D4275AD0(0, a4);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v19 = v35;
  swift_unknownObjectRelease();
  int64_t v20 = v13;
  uint64_t v21 = v14;
  if (!v19) {
    goto LABEL_36;
  }
  while (1)
  {
    id v35 = v19;
    char v25 = a1(&v35);
    if (v7)
    {

      goto LABEL_36;
    }
    if (v25) {
      goto LABEL_36;
    }

    int64_t v13 = v20;
    unint64_t v14 = v21;
    if (v8 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v14) {
      break;
    }
    uint64_t v21 = (v14 - 1) & v14;
    unint64_t v22 = __clz(__rbit64(v14)) | (v13 << 6);
    int64_t v20 = v13;
LABEL_24:
    id v19 = *(id *)(*(void *)(v8 + 48) + 8 * v22);
    if (!v19) {
      goto LABEL_36;
    }
  }
  int64_t v20 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    return;
  }
  if (v20 >= v28) {
    goto LABEL_36;
  }
  unint64_t v23 = *(void *)(v29 + 8 * v20);
  if (v23)
  {
LABEL_23:
    uint64_t v21 = (v23 - 1) & v23;
    unint64_t v22 = __clz(__rbit64(v23)) + (v20 << 6);
    goto LABEL_24;
  }
  int64_t v24 = v13 + 2;
  if (v13 + 2 >= v28) {
    goto LABEL_36;
  }
  unint64_t v23 = *(void *)(v29 + 8 * v24);
  if (v23) {
    goto LABEL_22;
  }
  int64_t v24 = v13 + 3;
  if (v13 + 3 >= v28) {
    goto LABEL_36;
  }
  unint64_t v23 = *(void *)(v29 + 8 * v24);
  if (v23) {
    goto LABEL_22;
  }
  int64_t v24 = v13 + 4;
  if (v13 + 4 >= v28) {
    goto LABEL_36;
  }
  unint64_t v23 = *(void *)(v29 + 8 * v24);
  if (v23)
  {
LABEL_22:
    int64_t v20 = v24;
    goto LABEL_23;
  }
  int64_t v20 = v13 + 5;
  if (v13 + 5 >= v28) {
    goto LABEL_36;
  }
  unint64_t v23 = *(void *)(v29 + 8 * v20);
  if (v23) {
    goto LABEL_23;
  }
  int64_t v26 = v13 + 6;
  while (v28 != v26)
  {
    unint64_t v23 = *(void *)(v29 + 8 * v26++);
    if (v23)
    {
      int64_t v20 = v26 - 1;
      goto LABEL_23;
    }
  }
LABEL_36:
  sub_1D42F9364();
}

void *sub_1D43CB840(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_1D446A498())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D9446710](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1D43CB968@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1D43CBA38(a1, a2, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory, a3);
}

uint64_t sub_1D43CB9D0@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1D43CBA38(a1, a2, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem, a3);
}

uint64_t sub_1D43CBA38@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(void)@<X3>, uint64_t (*a4)(void)@<X4>, uint64_t (*a5)(void)@<X5>, uint64_t (*a6)(void)@<X6>, uint64_t a7@<X8>)
{
  id v35 = a6;
  os_log_type_t v36 = a5;
  uint64_t v32 = a7;
  uint64_t v31 = a3(0);
  uint64_t v37 = *(void *)(v31 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v31);
  id v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = *(void *)(a2 + 56);
  uint64_t v33 = a2 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v34 = (unint64_t)(v17 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  if (!v19) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v22 | (v21 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v21 << 6))
  {
    sub_1D42CA758(*(void *)(a2 + 48) + *(void *)(v37 + 72) * i, (uint64_t)v15, a4);
    sub_1D42CAB38((uint64_t)v15, (uint64_t)v13, v36);
    char v27 = a1(v13);
    if (v7)
    {
      sub_1D42CA948((uint64_t)v13, v35);
      return swift_release();
    }
    if (v27)
    {
      swift_release();
      uint64_t v28 = v32;
      sub_1D42CAB38((uint64_t)v13, v32, v36);
      uint64_t v29 = 0;
      uint64_t v30 = v31;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v28, v29, 1, v30);
    }
    uint64_t result = sub_1D42CA948((uint64_t)v13, v35);
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v21++, 1)) {
      break;
    }
    if (v21 >= v34) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v33 + 8 * v21);
    if (!v25)
    {
      int64_t v26 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v33 + 8 * v26);
      if (v25) {
        goto LABEL_16;
      }
      int64_t v26 = v21 + 2;
      if (v21 + 2 >= v34) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v33 + 8 * v26);
      if (v25) {
        goto LABEL_16;
      }
      int64_t v26 = v21 + 3;
      if (v21 + 3 >= v34) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v33 + 8 * v26);
      if (v25)
      {
LABEL_16:
        int64_t v21 = v26;
        goto LABEL_17;
      }
      int64_t v26 = v21 + 4;
      if (v21 + 4 < v34)
      {
        unint64_t v25 = *(void *)(v33 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v21 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_31;
            }
            if (v21 >= v34) {
              goto LABEL_28;
            }
            unint64_t v25 = *(void *)(v33 + 8 * v21);
            ++v26;
            if (v25) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      uint64_t v30 = v31;
      uint64_t v28 = v32;
      swift_release();
      uint64_t v29 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v28, v29, 1, v30);
    }
LABEL_17:
    unint64_t v19 = (v25 - 1) & v25;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1D43CBD3C(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    uint64_t v18 = *(void *)(*(void *)(a3 + 48) + 8 * i);
    uint64_t v20 = v18;
    swift_bridgeObjectRetain();
    char v19 = a1(&v20);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v18;
    }
    if (v19)
    {
      swift_release();
      return v18;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_28;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16)
    {
      int64_t v17 = v12 + 1;
      if (v12 + 1 >= v10) {
        goto LABEL_28;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v17);
      if (v16) {
        goto LABEL_16;
      }
      int64_t v17 = v12 + 2;
      if (v12 + 2 >= v10) {
        goto LABEL_28;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v17);
      if (v16) {
        goto LABEL_16;
      }
      int64_t v17 = v12 + 3;
      if (v12 + 3 >= v10) {
        goto LABEL_28;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v17);
      if (v16)
      {
LABEL_16:
        int64_t v12 = v17;
        goto LABEL_17;
      }
      int64_t v17 = v12 + 4;
      if (v12 + 4 < v10)
      {
        unint64_t v16 = *(void *)(v6 + 8 * v17);
        if (!v16)
        {
          while (1)
          {
            int64_t v12 = v17 + 1;
            if (__OFADD__(v17, 1)) {
              goto LABEL_31;
            }
            if (v12 >= v10) {
              goto LABEL_28;
            }
            unint64_t v16 = *(void *)(v6 + 8 * v12);
            ++v17;
            if (v16) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      swift_release();
      return 0;
    }
LABEL_17:
    unint64_t v9 = (v16 - 1) & v16;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t FMIPItem.partType.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FMIPItem();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v2 + *(int *)(v5 + 64);
  uint64_t v9 = *(void *)(v8 + 8);
  char v10 = *(unsigned char *)(v8 + 32);
  sub_1D42CA758(v2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  if (!v9)
  {
    uint64_t v11 = &v7[*(int *)(v4 + 56)];
    if (*(void *)v11 == 1702060355 && *((void *)v11 + 1) == 0xE400000000000000) {
      char v10 = 1;
    }
    else {
      char v10 = sub_1D446A758() & 1;
    }
  }
  *a1 = v10;
  return sub_1D42CA948((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPItem);
}

uint64_t FMIPItem.primaryItemPart.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPItem();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = v1 + *(int *)(v9 + 64);
  uint64_t v13 = *(void *)(v12 + 8);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 32);
  sub_1D42CA758(v1, (uint64_t)&v25 - v10, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  if (v13)
  {
    sub_1D42CA948((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    switch(v14)
    {
      case 1:
        goto LABEL_9;
      default:
        goto LABEL_11;
    }
  }
  uint64_t v15 = &v11[*(int *)(v2 + 56)];
  BOOL v16 = *(void *)v15 == 1702060355 && *((void *)v15 + 1) == 0xE400000000000000;
  if (v16 || (sub_1D446A758() & 1) != 0)
  {
    sub_1D42CA948((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1D42CA758(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    goto LABEL_12;
  }
  sub_1D42CA948((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_11:
  char v17 = sub_1D446A758();
  swift_bridgeObjectRelease();
  sub_1D42CA758(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  if (v17) {
    goto LABEL_12;
  }
  char v19 = &v8[*(int *)(v2 + 64)];
  uint64_t v20 = *((void *)v19 + 1);
  uint64_t v21 = v19[32];
  sub_1D42CA758((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  if (v20)
  {
    sub_1D42CA948((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    switch(v21)
    {
      case 1:
      case 2:
      case 3:
      case 4:
        goto LABEL_21;
      default:
        goto LABEL_24;
    }
  }
  unint64_t v22 = &v5[*(int *)(v2 + 56)];
  BOOL v23 = *(void *)v22 == 1702060355 && *((void *)v22 + 1) == 0xE400000000000000;
  if (!v23 && (sub_1D446A758() & 1) == 0)
  {
    sub_1D42CA948((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_24:
    swift_bridgeObjectRelease();
LABEL_12:
    char v18 = 1;
    goto LABEL_22;
  }
  sub_1D42CA948((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_21:
  char v18 = sub_1D446A758();
  swift_bridgeObjectRelease();
LABEL_22:
  sub_1D42CA948((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  return v18 & 1;
}

BOOL static FMIPPartType.isEqualSortOrder(lhs:rhs:)(char *a1, char *a2)
{
  return flt_1D4475408[*a1] == flt_1D4475408[*a2];
}

FMIPCore::FMIPItemState __swiftcall FMIPItemState.init(rawValue:)(FMIPCore::FMIPItemState rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t FMIPItem.isOwner.getter()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for FMIPItem() + 60));
  if (*v1 == 0x6F6C4072656E776FLL && v1[1] == 0xEF74736F686C6163) {
    return 1;
  }
  return sub_1D446A758();
}

uint64_t FMIPItem.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPProductType();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for FMIPItem();
  uint64_t v5 = v0 + *(int *)(v42 + 96);
  FMIPProductType.productInformation.getter((uint64_t)v45);
  uint64_t v6 = v45[3];
  if (v45[3])
  {
    uint64_t v7 = v45[4];
    sub_1D42C26F4(v45, v45[3]);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
    uint64_t v39 = v9;
    uint64_t v40 = v8;
    sub_1D42BEC64((uint64_t)v45);
  }
  else
  {
    sub_1D4276C3C((uint64_t)v45, &qword_1EA6CA348);
    uint64_t v39 = 0;
    uint64_t v40 = 0;
  }
  FMIPProductType.productInformation.getter((uint64_t)v45);
  uint64_t v10 = v45[3];
  if (v45[3])
  {
    uint64_t v11 = v45[4];
    sub_1D42C26F4(v45, v45[3]);
    uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
    sub_1D42BEC64((uint64_t)v45);
  }
  else
  {
    sub_1D4276C3C((uint64_t)v45, &qword_1EA6CA348);
    uint64_t v41 = 0;
  }
  FMIPProductType.productInformation.getter((uint64_t)v45);
  uint64_t v12 = v45[3];
  if (v45[3])
  {
    uint64_t v13 = v45[4];
    sub_1D42C26F4(v45, v45[3]);
    uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
    sub_1D42BEC64((uint64_t)v45);
  }
  else
  {
    sub_1D4276C3C((uint64_t)v45, &qword_1EA6CA348);
    uint64_t v38 = 0;
  }
  sub_1D42CA758(v5, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
  v36[1] = swift_getEnumCaseMultiPayload();
  sub_1D42CA948((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
  v45[0] = 0;
  v45[1] = 0xE000000000000000;
  sub_1D446A378();
  uint64_t v46 = v45[0];
  uint64_t v47 = v45[1];
  sub_1D4469C08();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  uint64_t v37 = "% locationType: ";
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1D42D944C(10);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  MEMORY[0x1D9445EF0](v14, v16, v18, v20);
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v21 = *(void *)(v1 + 392);
  if (v21)
  {
    uint64_t v22 = *(void *)(v1 + 400);
    uint64_t v23 = *(void *)(v1 + 384);
    LOWORD(v45[0]) = v23 & 0x101;
    BYTE2(v45[0]) = BYTE2(v23) & 1;
    BYTE3(v45[0]) = BYTE3(v23);
    v45[1] = v21;
    v45[2] = v22;
    FMIPLocation.debugDescription.getter();
  }
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v24 = *(void *)(v1 + 320);
  if (v24)
  {
    uint64_t v25 = *(void *)(v1 + 328);
    uint64_t v26 = *(void *)(v1 + 312);
    LOWORD(v45[0]) = v26 & 0x101;
    BYTE2(v45[0]) = BYTE2(v26) & 1;
    BYTE3(v45[0]) = BYTE3(v26);
    v45[1] = v24;
    v45[2] = v25;
    FMIPLocation.debugDescription.getter();
  }
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v27 = *(void *)(v1 + 344);
  v45[0] = *(void *)(v1 + 336);
  v45[1] = v27;
  swift_bridgeObjectRetain();
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v28 = v42;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  v45[0] = v40;
  v45[1] = v39;
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  v45[0] = v38;
  LOBYTE(v45[1]) = v12 == 0;
  sub_1D42D5DA0(&qword_1EA6C9C78);
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  v45[0] = v41;
  LOBYTE(v45[1]) = v10 == 0;
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v29 = v1 + *(int *)(v28 + 64);
  uint64_t v30 = *(void *)(v29 + 8);
  uint64_t v31 = *(void *)(v29 + 16);
  uint64_t v32 = *(void *)(v29 + 24);
  char v33 = *(unsigned char *)(v29 + 32);
  v45[0] = *(void *)v29;
  v45[1] = v30;
  v45[2] = v31;
  v45[3] = v32;
  LOBYTE(v45[4]) = v33;
  sub_1D43DD670(v45[0], v30);
  sub_1D42D5DA0(&qword_1EA6CACB8);
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D4276C98(v1 + 8, (uint64_t)v44, &qword_1EBD7CC10);
  sub_1D4276C98((uint64_t)v44, (uint64_t)v45, &qword_1EBD7CC10);
  if (sub_1D42FE02C((uint64_t)v45) == 1
    || (memcpy(v43, v45, sizeof(v43)), FMIPAddress.displayAddress.getter(), !v34))
  {
    swift_bridgeObjectRelease();
  }
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  v43[0] = *(unsigned char *)(v1 + 296);
  sub_1D446A458();
  sub_1D4469C08();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  return v46;
}

uint64_t FMIPItem.init(item:updateType:address:location:crowdSourcedLocation:connected:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char **a4@<X3>, uint64_t *a5@<X4>, unsigned __int8 a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v93 = a2;
  int v12 = a6;
  uint64_t v13 = sub_1D42D5DA0(&qword_1EBD7CB80);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v91 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for FMIPItemUpdateType(0);
  MEMORY[0x1F4188790](updated - 8);
  uint64_t v90 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (int *)type metadata accessor for FMIPItem();
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v88 = (uint64_t *)((char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v92 = (char *)&v79 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v79 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (uint64_t *)((char *)&v79 - v25);
  sub_1D4276C98(a3, (uint64_t)v99, &qword_1EBD7CC10);
  uint64_t v27 = a4[1];
  uint64_t v28 = *(void *)(a1 + v17[19]);
  if (v12 != 2 && !(v12 & 1 | ((*(void *)(a1 + v17[19]) & 0x40) == 0))) {
    v28 &= ~0x40uLL;
  }
  uint64_t v89 = v28;
  uint64_t v29 = *a4;
  uint64_t v94 = a4[2];
  uint64_t v30 = *a5;
  long long v95 = *(_OWORD *)(a5 + 1);
  sub_1D42CA758(a1, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  if (!v27)
  {
    uint64_t v29 = (char *)v26[48];
    uint64_t v27 = (char *)v26[49];
    uint64_t v94 = (char *)v26[50];
    uint64_t v31 = v27;
  }
  sub_1D42CA948((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v32 = v17[25];
  if (*(unsigned char *)(a1 + v32) == 1)
  {

    uint64_t v29 = 0;
    uint64_t v27 = 0;
    uint64_t v94 = 0;
  }
  sub_1D42CA758(a1, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D4276C98((uint64_t)v99, (uint64_t)v98, &qword_1EBD7CC10);
  if (sub_1D42FE02C((uint64_t)v98) == 1)
  {
    sub_1D4276C98((uint64_t)(v24 + 8), (uint64_t)v96, &qword_1EBD7CC10);
    sub_1D42FAC78((uint64_t)v96, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
    char v33 = v96;
  }
  else
  {
    char v33 = v99;
  }
  sub_1D4276C98((uint64_t)v33, (uint64_t)v97, &qword_1EBD7CC10);
  uint64_t v34 = (uint64_t)v92;
  uint64_t v92 = v29;
  sub_1D42CA948((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D4276C98((uint64_t)v97, a7 + 8, &qword_1EBD7CC10);
  *(unsigned char *)(a7 + 296) = *(unsigned char *)(a1 + 296);
  *(void *)(a7 + 304) = *(void *)(a1 + 304);
  sub_1D42CA758(a1, v34, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  if (!(void)v95)
  {
    uint64_t v30 = *(void *)(v34 + 312);
    long long v95 = *(_OWORD *)(v34 + 320);
    id v35 = (id)v95;
  }
  sub_1D42CA948(v34, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  *(void *)(a7 + 312) = v30;
  *(_OWORD *)(a7 + 320) = v95;
  uint64_t v36 = *(void *)(a1 + 344);
  *(void *)(a7 + 336) = *(void *)(a1 + 336);
  *(void *)(a7 + 344) = v36;
  uint64_t v37 = *(void *)(a1 + 360);
  *(void *)(a7 + 352) = *(void *)(a1 + 352);
  *(void *)(a7 + 360) = v37;
  uint64_t v38 = *(void *)(a1 + 376);
  *(void *)(a7 + 368) = *(void *)(a1 + 368);
  *(void *)(a7 + 376) = v38;
  *(unsigned char *)(a7 + v17[21]) = *(unsigned char *)(a1 + v17[21]);
  *(unsigned char *)(a7 + v17[22]) = *(unsigned char *)(a1 + v17[22]);
  *(unsigned char *)(a7 + v17[25]) = *(unsigned char *)(a1 + v32);
  uint64_t v39 = v88;
  sub_1D42CA758(a1, (uint64_t)v88, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v40 = v27;
  if (!v27)
  {
    uint64_t v40 = (char *)v39[49];
    uint64_t v92 = (char *)v39[48];
    uint64_t v94 = (char *)v39[50];
    uint64_t v41 = v40;
  }
  *(void *)&long long v95 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v87 = type metadata accessor for FMIPItem;
  sub_1D42CA948((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  *(void *)(a7 + 384) = v92;
  *(void *)(a7 + 392) = v40;
  *(void *)(a7 + 400) = v94;
  sub_1D42A3A74(a1 + v17[13], a7 + v17[13], &qword_1EBD7E710);
  uint64_t v42 = v17[14];
  uint64_t v44 = *(void *)(a1 + v42);
  uint64_t v94 = *(char **)(a1 + v42 + 8);
  uint64_t v43 = v94;
  id v45 = (void *)(a7 + v42);
  *id v45 = v44;
  v45[1] = v43;
  uint64_t v46 = v17[15];
  uint64_t v48 = *(void *)(a1 + v46);
  uint64_t v92 = *(char **)(a1 + v46 + 8);
  uint64_t v47 = v92;
  unint64_t v49 = (void *)(a7 + v46);
  *unint64_t v49 = v48;
  v49[1] = v47;
  uint64_t v50 = v17[16];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = *(void *)(a1 + v50 + 8);
  uint64_t v88 = *(void **)(a1 + v50);
  uint64_t v54 = *(void *)(a1 + v50 + 24);
  uint64_t v85 = *(void *)(a1 + v50 + 16);
  uint64_t v53 = v85;
  uint64_t v86 = v52;
  uint64_t v84 = v54;
  uint64_t v55 = a7 + v50;
  *(void *)uint64_t v55 = v88;
  *(void *)(v55 + 8) = v52;
  *(void *)(v55 + 16) = v53;
  *(void *)(v55 + 24) = v54;
  int v83 = *(unsigned __int8 *)(v51 + 32);
  *(unsigned char *)(v55 + 32) = v83;
  sub_1D42CA758(a1 + v17[24], a7 + v17[24], (uint64_t (*)(void))type metadata accessor for FMIPProductType);
  uint64_t v56 = v17[17];
  uint64_t v57 = (_OWORD *)(a1 + v56);
  uint64_t v58 = *(void *)(a1 + v56 + 24);
  uint64_t v60 = *(void *)(a1 + v56 + 32);
  uint64_t v81 = *(void *)(a1 + v56 + 16);
  uint64_t v59 = v81;
  uint64_t v82 = v60;
  uint64_t v61 = a7 + v56;
  *(_OWORD *)uint64_t v61 = *v57;
  *(void *)(v61 + 16) = v59;
  *(void *)(v61 + 24) = v58;
  *(void *)(v61 + 32) = v60;
  uint64_t v62 = v17[18];
  uint64_t v64 = *(void *)(a1 + v62);
  uint64_t v80 = *(void *)(a1 + v62 + 8);
  uint64_t v63 = v80;
  uint64_t v65 = (void *)(a7 + v62);
  *uint64_t v65 = v64;
  v65[1] = v63;
  uint64_t v66 = (uint64_t)v90;
  *(void *)(a7 + v17[19]) = v89;
  uint64_t v67 = v17[20];
  uint64_t v69 = *(void *)(a1 + v67);
  uint64_t v89 = *(void *)(a1 + v67 + 8);
  uint64_t v68 = v89;
  uint64_t v70 = (void *)(a7 + v67);
  *uint64_t v70 = v69;
  v70[1] = v68;
  *(void *)(a7 + v17[23]) = *(void *)(a1 + v17[23]);
  uint64_t v71 = *(void *)a1;
  sub_1D42CA758(v93, v66, type metadata accessor for FMIPItemUpdateType);
  uint64_t v72 = v71 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_creationTimestamp;
  uint64_t v73 = sub_1D4469618();
  uint64_t v74 = *(void *)(v73 - 8);
  uint64_t v75 = (uint64_t)v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v91, v72, v73);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56))(v75, 0, 1, v73);
  type metadata accessor for FMIPItemUpdateContext(0);
  uint64_t v76 = swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D43DD670((uint64_t)v88, v86);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v77 = sub_1D43EE98C(v66, v75, v76, v71);
  swift_release();
  sub_1D42CA948(v93, type metadata accessor for FMIPItemUpdateType);

  uint64_t result = sub_1D42CA948(a1, (uint64_t (*)(void))v87);
  *(void *)a7 = v77;
  return result;
}

uint64_t FMIPItem.init(item:safeLocations:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7CB80);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v78 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for FMIPItemUpdateType(0);
  uint64_t v9 = MEMORY[0x1F4188790](updated);
  uint64_t v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = v11;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v66 - v12;
  sub_1D4276C98(a1 + 8, (uint64_t)v84, &qword_1EBD7CC10);
  sub_1D4276C98((uint64_t)v84, a3 + 8, &qword_1EBD7CC10);
  *(unsigned char *)(a3 + 296) = *(unsigned char *)(a1 + 296);
  long long v14 = *(_OWORD *)(a1 + 304);
  long long v80 = *(_OWORD *)(a1 + 320);
  long long v15 = v80;
  *(_OWORD *)(a3 + 304) = v14;
  *(_OWORD *)(a3 + 320) = v15;
  uint64_t v16 = *(void *)(a1 + 336);
  uint64_t v83 = *(void *)(a1 + 344);
  uint64_t v17 = v83;
  *(void *)(a3 + 336) = v16;
  *(void *)(a3 + 344) = v17;
  uint64_t v18 = *(void *)(a1 + 352);
  uint64_t v82 = *(void *)(a1 + 360);
  uint64_t v19 = v82;
  *(void *)(a3 + 352) = v18;
  *(void *)(a3 + 360) = v19;
  uint64_t v20 = *(void *)(a1 + 368);
  uint64_t v81 = *(void *)(a1 + 376);
  uint64_t v21 = v81;
  *(void *)(a3 + 368) = v20;
  *(void *)(a3 + 376) = v21;
  uint64_t v22 = (int *)type metadata accessor for FMIPItem();
  *(unsigned char *)(a3 + v22[21]) = *(unsigned char *)(a1 + v22[21]);
  *(unsigned char *)(a3 + v22[22]) = *(unsigned char *)(a1 + v22[22]);
  *(unsigned char *)(a3 + v22[25]) = *(unsigned char *)(a1 + v22[25]);
  uint64_t v23 = *(void *)(a1 + 384);
  id v79 = *(id *)(a1 + 392);
  id v24 = v79;
  uint64_t v25 = *(void *)(a1 + 400);
  *(void *)(a3 + 384) = v23;
  *(void *)(a3 + 392) = v24;
  *(void *)(a3 + 400) = v25;
  sub_1D42A3A74(a1 + v22[13], a3 + v22[13], &qword_1EBD7E710);
  uint64_t v26 = v22[14];
  uint64_t v28 = *(void *)(a1 + v26);
  uint64_t v72 = *(void *)(a1 + v26 + 8);
  uint64_t v27 = v72;
  uint64_t v29 = (void *)(a3 + v26);
  *uint64_t v29 = v28;
  v29[1] = v27;
  uint64_t v30 = v22[15];
  uint64_t v32 = *(void *)(a1 + v30);
  uint64_t v71 = *(void *)(a1 + v30 + 8);
  uint64_t v31 = v71;
  char v33 = (void *)(a3 + v30);
  *char v33 = v32;
  v33[1] = v31;
  uint64_t v34 = v22[16];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = *(void *)(a1 + v34);
  uint64_t v76 = *(void *)(a1 + v34 + 8);
  uint64_t v37 = v76;
  uint64_t v77 = v36;
  uint64_t v38 = *(void *)(a1 + v34 + 16);
  uint64_t v74 = *(void *)(a1 + v34 + 24);
  uint64_t v39 = v74;
  uint64_t v75 = v38;
  uint64_t v40 = a3 + v34;
  *(void *)uint64_t v40 = v36;
  *(void *)(v40 + 8) = v37;
  *(void *)(v40 + 16) = v38;
  *(void *)(v40 + 24) = v39;
  int v73 = *(unsigned __int8 *)(v35 + 32);
  *(unsigned char *)(v40 + 32) = v73;
  sub_1D42CA758(a1 + v22[24], a3 + v22[24], (uint64_t (*)(void))type metadata accessor for FMIPProductType);
  uint64_t v41 = v22[17];
  uint64_t v42 = (_OWORD *)(a1 + v41);
  uint64_t v43 = *(void *)(a1 + v41 + 24);
  uint64_t v45 = *(void *)(a1 + v41 + 32);
  uint64_t v69 = *(void *)(a1 + v41 + 16);
  uint64_t v44 = v69;
  uint64_t v70 = v45;
  uint64_t v46 = a3 + v41;
  *(_OWORD *)uint64_t v46 = *v42;
  *(void *)(v46 + 16) = v44;
  *(void *)(v46 + 24) = v43;
  *(void *)(v46 + 32) = v45;
  uint64_t v47 = v22[18];
  uint64_t v48 = *(void *)(a1 + v47);
  uint64_t v49 = *(void *)(a1 + v47 + 8);
  uint64_t v50 = (void *)(a3 + v47);
  *uint64_t v50 = v48;
  v50[1] = v49;
  *(void *)(a3 + v22[19]) = *(void *)(a1 + v22[19]);
  uint64_t v51 = v22[20];
  uint64_t v52 = *(void *)(a1 + v51);
  uint64_t v53 = *(void *)(a1 + v51 + 8);
  uint64_t v54 = (void *)(a3 + v51);
  *uint64_t v54 = v52;
  v54[1] = v53;
  *(void *)(a3 + v22[23]) = a2;
  uint64_t v55 = *(void *)a1;
  uint64_t v68 = v13;
  swift_storeEnumTagMultiPayload();
  sub_1D42CA758((uint64_t)v13, (uint64_t)v11, type metadata accessor for FMIPItemUpdateType);
  uint64_t v56 = v55 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_creationTimestamp;
  uint64_t v57 = sub_1D4469618();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = (uint64_t)v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v78, v56, v57);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v59, 0, 1, v57);
  type metadata accessor for FMIPItemUpdateContext(0);
  uint64_t v60 = swift_allocObject();
  swift_retain();
  sub_1D42FAC78((uint64_t)v84, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
  uint64_t v61 = (void *)v80;
  id v62 = v79;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v63 = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D43DD670(v77, v76);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v64 = sub_1D43EE98C((uint64_t)v67, v59, v60, v55);
  swift_release();
  sub_1D42CA948((uint64_t)v68, type metadata accessor for FMIPItemUpdateType);
  uint64_t result = sub_1D42CA948(a1, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  *(void *)a3 = v64;
  return result;
}

uint64_t FMIPItem.init(with:from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v384 = a2;
  uint64_t v380 = a3;
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7E710);
  MEMORY[0x1F4188790](v4 - 8);
  v388 = (uint64_t *)((char *)&v369 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1D4469688();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  v387 = (char *)&v369 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v369 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v389 = (os_log_t)type metadata accessor for FMIPItem();
  MEMORY[0x1F4188790](v389);
  uint64_t v13 = (uint64_t *)((char *)&v369 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  sub_1D42C26F4(a1, v14);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 96))(v14, v15);
  if (!v16)
  {
    int v368 = 0;
    unint64_t v367 = 232;
    sub_1D446A488();
    __break(1u);
    JUMPOUT(0x1D43D0034);
  }
  uint64_t v17 = (void *)v16;
  sub_1D42FB494(v419);
  sub_1D4276C98((uint64_t)v419, (uint64_t)(v13 + 1), &qword_1EBD7CC10);
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  sub_1D42C26F4(a1, v18);
  unint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 40))(v18, v19);
  if (v20 >= 7) {
    char v21 = 0;
  }
  else {
    char v21 = v20;
  }
  *((unsigned char *)v13 + 296) = v21;
  v13[40] = 0;
  v13[41] = 0;
  v13[39] = 0;
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  sub_1D42C26F4(a1, v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
  int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6);
  id v381 = v17;
  if (v24 == 1)
  {
    sub_1D4276C3C((uint64_t)v11, (uint64_t *)&unk_1EBD7E930);
    uint64_t v25 = 0;
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v25 = sub_1D4469638();
    uint64_t v26 = v27;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  }
  v13[42] = v25;
  v13[43] = v26;
  uint64_t v28 = a1[3];
  uint64_t v29 = a1[4];
  sub_1D42C26F4(a1, v28);
  uint64_t v30 = v387;
  (*(void (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
  uint64_t v31 = sub_1D4469638();
  uint64_t v33 = v32;
  uint64_t v34 = *(void (**)(char *, uint64_t))(v7 + 8);
  v34(v30, v6);
  v13[44] = v31;
  v13[45] = v33;
  uint64_t v35 = a1[3];
  uint64_t v36 = a1[4];
  sub_1D42C26F4(a1, v35);
  (*(void (**)(uint64_t, uint64_t))(v36 + 48))(v35, v36);
  uint64_t v37 = sub_1D4469638();
  uint64_t v39 = v38;
  v382 = v34;
  v34(v30, v6);
  v13[46] = v37;
  v13[47] = v39;
  v13[49] = 0;
  v13[50] = 0;
  v13[48] = 0;
  uint64_t v40 = a1[3];
  uint64_t v41 = a1[4];
  sub_1D42C26F4(a1, v40);
  uint64_t v42 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v41 + 72))(v40, v41);
  v385 = a1;
  uint64_t v386 = v6;
  uint64_t v383 = v7 + 8;
  if (v42)
  {
    id v43 = v42;
    uint64_t v44 = v388;
    FMIPItemLostModeMetadata.init(lostModeInfo:)(v43, v388);
    uint64_t v45 = type metadata accessor for FMIPItemLostModeMetadata();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 0, 1, v45);
  }
  else
  {
    uint64_t v46 = type metadata accessor for FMIPItemLostModeMetadata();
    uint64_t v44 = v388;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v388, 1, 1, v46);
  }
  id v47 = v381;
  os_log_t v48 = v389;
  sub_1D4276C98((uint64_t)v44, (uint64_t)v13 + SHIDWORD(v389[6].isa), &qword_1EBD7E710);
  uint64_t v49 = v385;
  uint64_t v50 = v385[3];
  uint64_t v51 = v385[4];
  sub_1D42C26F4(v385, v50);
  uint64_t v52 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v51 + 88))(v50, v51);
  id v53 = objc_msgSend(v52, sel_destination);

  uint64_t v54 = sub_1D4469B38();
  uint64_t v56 = v55;

  uint64_t v57 = (uint64_t *)((char *)v13 + SHIDWORD(v48[7].isa));
  *uint64_t v57 = v54;
  v57[1] = v56;
  id v58 = v47;
  id v59 = objc_msgSend(v58, sel_roleEmoji);
  uint64_t v60 = sub_1D4469B38();
  uint64_t v62 = v61;

  id v63 = objc_msgSend(v58, sel_role);
  uint64_t v64 = sub_1D4469B38();
  uint64_t v66 = v65;

  id v67 = objc_msgSend(v58, sel_roleId);
  id v379 = v58;

  uint64_t v68 = (uint64_t *)((char *)v13 + SHIDWORD(v48[8].isa));
  *uint64_t v68 = v67;
  v68[1] = v60;
  v68[2] = v62;
  v68[3] = v64;
  v68[4] = v66;
  uint64_t v69 = v49[3];
  uint64_t v70 = v49[4];
  sub_1D42C26F4(v49, v69);
  uint64_t v72 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 104))(v69, v70);
  if (v71)
  {
    uint64_t v73 = v71;
  }
  else
  {
    type metadata accessor for FMLocalize();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v75 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    unint64_t v367 = 0xE000000000000000;
    uint64_t v72 = sub_1D44692D8();
    uint64_t v73 = v76;
  }
  uint64_t v77 = v385;
  uint64_t v78 = v386;
  os_log_t v79 = v389;
  long long v80 = (uint64_t *)((char *)v13 + SLODWORD(v389[9].isa));
  *long long v80 = v72;
  v80[1] = v73;
  uint64_t v81 = v77[3];
  uint64_t v82 = v77[4];
  sub_1D42C26F4(v77, v81);
  uint64_t v83 = (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 112))(v81, v82);
  uint64_t v84 = (uint64_t *)((char *)v13 + SLODWORD(v79[10].isa));
  *uint64_t v84 = v83;
  v84[1] = v85;
  uint64_t isa_high = SHIDWORD(v79[11].isa);
  uint64_t v87 = v77;
  *(uint64_t *)((char *)v13 + isa_high) = MEMORY[0x1E4FBC860];
  uint64_t v88 = v77[3];
  uint64_t v89 = v77[4];
  sub_1D42C26F4(v77, v88);
  uint64_t v90 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v89 + 128))(v88, v89);
  uint64_t v91 = v90;
  uint64_t v92 = (void *)&unk_1EBD80000;
  v388 = v13;
  if (v90)
  {
    id v93 = objc_msgSend(v90, sel_layoutTemplate);

    if (v93)
    {
      sub_1D4275AD0(0, &qword_1EA6CACC0);
      unint64_t v94 = sub_1D4469D78();

      MEMORY[0x1F4188790](v95);
      unint64_t v367 = (unint64_t)v77;
      uint64_t v91 = 0;
      uint64_t v96 = sub_1D43CB840((uint64_t (*)(id *))sub_1D43DD6C4, (uint64_t)(&v369 - 4), v94);
      swift_bridgeObjectRelease();
      if (v96)
      {
        id v97 = v96;
        id v98 = objc_msgSend(v97, sel_partName);
        uint64_t v378 = sub_1D4469B38();
        uint64_t v100 = v99;

        id v381 = v97;
        id v101 = objc_msgSend(v97, sel_partSymbol);
        id v375 = v100;
        if (v101)
        {
          v102 = v101;
          id v376 = (id)sub_1D4469B38();
          uint64_t v104 = v103;
        }
        else
        {
          id v376 = 0;
          uint64_t v104 = 0;
        }
        id v131 = v381;
        id v132 = objc_msgSend(v381, sel_partType);
        uint64_t v133 = sub_1D4469B38();
        int v135 = v134;

        v136._countAndFlagsBits = v133;
        v136._object = v135;
        FMIPPartType.init(rawValue:)(v136);

        if (LOBYTE(v416[0]) == 5) {
          int v137 = 4;
        }
        else {
          int v137 = LOBYTE(v416[0]);
        }
        if (qword_1EBD80068 != -1) {
          swift_once();
        }
        LODWORD(v374) = v137;
        uint64_t v138 = sub_1D4469928();
        sub_1D42D7FAC(v138, (uint64_t)qword_1EBD83228);
        sub_1D42A4D5C((uint64_t)v87, (uint64_t)v416);
        sub_1D42A4D5C((uint64_t)v87, (uint64_t)v413);
        swift_bridgeObjectRetain_n();
        uint64_t v139 = (uint64_t)v375;
        swift_bridgeObjectRetain_n();
        int v140 = sub_1D44698F8();
        os_log_type_t v141 = sub_1D446A038();
        int v142 = v141;
        BOOL v143 = os_log_type_enabled(v140, v141);
        v377 = 0;
        if (v143)
        {
          uint64_t v144 = swift_slowAlloc();
          LODWORD(v373) = v142;
          uint64_t v145 = v144;
          os_log_t v372 = (os_log_t)swift_slowAlloc();
          v407[0] = (uint64_t)v372;
          *(_DWORD *)uint64_t v145 = 136315650;
          uint64_t v370 = v145 + 4;
          uint64_t v146 = v417;
          uint64_t v147 = v418;
          sub_1D42C26F4(v416, v417);
          uint64_t v148 = *(void (**)(uint64_t, uint64_t))(v147 + 16);
          v149 = v387;
          os_log_t v371 = v140;
          v148(v146, v147);
          sub_1D42BF558((unint64_t *)&qword_1EA6C92C0, MEMORY[0x1E4F27990]);
          uint64_t v150 = sub_1D446A6D8();
          unint64_t v152 = v151;
          v382(v149, v78);
          v410[0] = sub_1D42CB9EC(v150, v152, v407);
          sub_1D446A188();
          swift_bridgeObjectRelease();
          sub_1D42BEC64((uint64_t)v416);
          *(_WORD *)(v145 + 12) = 2048;
          uint64_t v153 = v414;
          uint64_t v154 = v415;
          sub_1D42C26F4(v413, v414);
          uint64_t v155 = (*(uint64_t (**)(uint64_t, uint64_t))(v154 + 64))(v153, v154);
          sub_1D42BEC64((uint64_t)v413);
          v410[0] = v155;
          uint64_t v13 = v388;
          sub_1D446A188();
          *(_WORD *)(v145 + 22) = 2080;
          uint64_t v369 = v104;
          uint64_t v370 = v145 + 24;
          uint64_t v156 = v378;
          v410[0] = v378;
          v410[1] = v139;
          id v157 = v376;
          v410[2] = (uint64_t)v376;
          uint64_t v411 = v104;
          char v158 = (char)v374;
          LOBYTE(v412) = (_BYTE)v374;
          uint64_t v159 = FMIPPartInfo.debugDescription.getter();
          v410[0] = sub_1D42CB9EC(v159, v160, v407);
          sub_1D446A188();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          os_log_t v161 = v371;
          _os_log_impl(&dword_1D4271000, v371, (os_log_type_t)v373, "FMIPItem: Part info for %s (part identifier: %ld) is %s", (uint8_t *)v145, 0x20u);
          os_log_t v162 = v372;
          swift_arrayDestroy();
          MEMORY[0x1D9447730](v162, -1, -1);
          MEMORY[0x1D9447730](v145, -1, -1);

          uint64_t v124 = (int *)v389;
          uint64_t v104 = v369;
        }
        else
        {
          sub_1D42BEC64((uint64_t)v413);

          sub_1D42BEC64((uint64_t)v416);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          uint64_t v124 = (int *)v389;
          uint64_t v156 = v378;
          id v157 = v376;
          char v158 = (char)v374;
        }
        v163 = (char *)v13 + v124[16];
        *(void *)v163 = v156;
        *((void *)v163 + 1) = v139;
        *((void *)v163 + 2) = v157;
        *((void *)v163 + 3) = v104;
        v163[32] = v158;
        v164 = (uint64_t *)((char *)v13 + v124[14]);
        uint64_t *v164 = v156;
        v164[1] = v139;
        swift_bridgeObjectRetain();
        goto LABEL_37;
      }
      uint64_t v92 = &unk_1EBD80000;
    }
    else
    {
      uint64_t v91 = 0;
    }
  }
  if (v92[13] != -1) {
    swift_once();
  }
  uint64_t v105 = sub_1D4469928();
  sub_1D42D7FAC(v105, (uint64_t)qword_1EBD83228);
  sub_1D42A4D5C((uint64_t)v77, (uint64_t)v416);
  sub_1D42A4D5C((uint64_t)v77, (uint64_t)v413);
  uint64_t v106 = sub_1D44698F8();
  os_log_type_t v107 = sub_1D446A038();
  int v108 = v107;
  BOOL v109 = os_log_type_enabled(v106, v107);
  v377 = v91;
  if (v109)
  {
    uint64_t v110 = swift_slowAlloc();
    LODWORD(v378) = v108;
    uint64_t v111 = v110;
    id v381 = (id)swift_slowAlloc();
    v410[0] = (uint64_t)v381;
    *(_DWORD *)uint64_t v111 = 136315394;
    uint64_t v112 = v78;
    uint64_t v113 = v417;
    uint64_t v114 = v418;
    sub_1D42C26F4(v416, v417);
    uint64_t v115 = v387;
    uint64_t v116 = v106;
    (*(void (**)(uint64_t, uint64_t))(v114 + 16))(v113, v114);
    sub_1D42BF558((unint64_t *)&qword_1EA6C92C0, MEMORY[0x1E4F27990]);
    uint64_t v117 = sub_1D446A6D8();
    unint64_t v119 = v118;
    v382(v115, v112);
    v407[0] = sub_1D42CB9EC(v117, v119, v410);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42BEC64((uint64_t)v416);
    *(_WORD *)(v111 + 12) = 2048;
    uint64_t v121 = v414;
    uint64_t v120 = v415;
    sub_1D42C26F4(v413, v414);
    uint64_t v122 = (*(uint64_t (**)(uint64_t, uint64_t))(v120 + 64))(v121, v120);
    sub_1D42BEC64((uint64_t)v413);
    v407[0] = v122;
    uint64_t v13 = v388;
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v116, (os_log_type_t)v378, "FMIPItem: No part info provided for beacon%s (part identifier: %ld)", (uint8_t *)v111, 0x16u);
    id v123 = v381;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v123, -1, -1);
    MEMORY[0x1D9447730](v111, -1, -1);
  }
  else
  {
    sub_1D42BEC64((uint64_t)v413);
    sub_1D42BEC64((uint64_t)v416);
  }
  uint64_t v124 = (int *)v389;
  uint64_t v125 = (char *)v13 + SLODWORD(v389[8].isa);
  v125[32] = 0;
  *(_OWORD *)uint64_t v125 = 0u;
  *((_OWORD *)v125 + 1) = 0u;
  uint64_t v126 = v87[3];
  uint64_t v127 = v87[4];
  sub_1D42C26F4(v87, v126);
  uint64_t v128 = (*(uint64_t (**)(uint64_t, uint64_t))(v127 + 8))(v126, v127);
  uint64_t v129 = (uint64_t *)((char *)v13 + v124[14]);
  *uint64_t v129 = v128;
  v129[1] = v130;
LABEL_37:
  sub_1D42A4D5C((uint64_t)v87, (uint64_t)v416);
  sub_1D430077C(v416, (uint64_t)v13 + v124[24]);
  uint64_t v165 = v87[3];
  uint64_t v166 = v87[4];
  sub_1D42C26F4(v87, v165);
  v167 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v166 + 128))(v165, v166);
  if (v167)
  {
    v168 = v167;
    unsigned int v169 = objc_msgSend(v167, sel_eligibleForPairing);

    int v170 = v169 ^ 1;
  }
  else
  {
    int v170 = 0;
  }
  uint64_t v171 = v124[25];
  LODWORD(v378) = v170;
  *((unsigned char *)v13 + v171) = v170;
  uint64_t v172 = v87[3];
  uint64_t v173 = v87[4];
  sub_1D42C26F4(v87, v172);
  *((unsigned char *)v13 + v124[21]) = (*(uint64_t (**)(uint64_t, uint64_t))(v173 + 152))(v172, v173) & 1;
  uint64_t v174 = v87[3];
  uint64_t v175 = v87[4];
  sub_1D42C26F4(v87, v174);
  *((unsigned char *)v13 + v124[22]) = (*(uint64_t (**)(uint64_t, uint64_t))(v175 + 136))(v174, v175) == 76;
  sub_1D42D5DA0(&qword_1EA6CA110);
  uint64_t v176 = swift_allocObject();
  *(_OWORD *)(v176 + 16) = xmmword_1D44747C0;
  v177 = (void *)*MEMORY[0x1E4F97D38];
  *(void *)(v176 + 32) = *MEMORY[0x1E4F97D38];
  *(void *)(v176 + 40) = 16;
  uint64_t v178 = (void *)*MEMORY[0x1E4F97D68];
  *(void *)(v176 + 48) = *MEMORY[0x1E4F97D68];
  *(void *)(v176 + 56) = 4;
  v179 = (void *)*MEMORY[0x1E4F97D50];
  *(void *)(v176 + 64) = *MEMORY[0x1E4F97D50];
  *(void *)(v176 + 72) = 2;
  uint64_t v180 = (void *)*MEMORY[0x1E4F97D58];
  *(void *)(v176 + 80) = *MEMORY[0x1E4F97D58];
  *(void *)(v176 + 88) = 8;
  v181 = (void *)*MEMORY[0x1E4F97D70];
  *(void *)(v176 + 96) = *MEMORY[0x1E4F97D70];
  *(void *)(v176 + 104) = 128;
  v182 = (void *)*MEMORY[0x1E4F97D30];
  *(void *)(v176 + 112) = *MEMORY[0x1E4F97D30];
  *(void *)(v176 + 120) = 256;
  v183 = (void *)*MEMORY[0x1E4F97D40];
  *(void *)(v176 + 128) = *MEMORY[0x1E4F97D40];
  *(void *)(v176 + 136) = 64;
  v184 = (void *)*MEMORY[0x1E4F97D90];
  *(void *)(v176 + 144) = *MEMORY[0x1E4F97D90];
  *(void *)(v176 + 152) = 512;
  id v376 = v177;
  id v374 = v178;
  id v185 = v179;
  id v375 = v180;
  id v186 = v181;
  id v187 = v182;
  id v188 = v183;
  id v189 = v184;
  unint64_t v190 = sub_1D43AA578(v176);
  id v191 = (id)*MEMORY[0x1E4F97D78];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v416[0] = v190;
  sub_1D43D7798(32, v191, isUniquelyReferenced_nonNull_native);
  uint64_t v193 = v416[0];

  swift_bridgeObjectRelease();
  id v194 = (id)*MEMORY[0x1E4F97D80];
  char v195 = swift_isUniquelyReferenced_nonNull_native();
  v416[0] = v193;
  sub_1D43D7798(1024, v194, v195);
  v196 = (void *)v416[0];

  uint64_t v197 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v197);
  unint64_t v367 = (unint64_t)v87;
  uint64_t v198 = swift_bridgeObjectRetain();
  sub_1D43B3960(v198, (void (*)(void *__return_ptr))sub_1D43DD6B4);
  v200 = v199;
  id v381 = v196;
  swift_bridgeObjectRelease();
  uint64_t v201 = sub_1D4469108();
  uint64_t v417 = v201;
  uint64_t v418 = sub_1D42BF558(&qword_1EBD7E550, MEMORY[0x1E4F619E0]);
  v202 = sub_1D42BECB4(v416);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v201 - 8) + 104))(v202, *MEMORY[0x1E4F619C8], v201);
  LOBYTE(v201) = MEMORY[0x1D9445460](v416);
  sub_1D42BEC64((uint64_t)v416);
  if ((v201 & 1) != 0 && (sub_1D44690E8() & 1) == 0)
  {
    uint64_t v203 = v87[3];
    uint64_t v204 = v87[4];
    sub_1D42C26F4(v87, v203);
    if (*(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v204 + 80))(v203, v204) + 16))
    {
      id v205 = (id)*MEMORY[0x1E4F97D48];
      sub_1D43AEF30((uint64_t)v205);
      char v207 = v206;

      swift_bridgeObjectRelease();
      if (v207)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v200 = sub_1D43AFFBC(0, v200[2] + 1, 1, v200);
        }
        unint64_t v209 = v200[2];
        unint64_t v208 = v200[3];
        int64_t v210 = v208 >> 1;
        unint64_t v211 = v209 + 1;
        if (v208 >> 1 <= v209)
        {
          v200 = sub_1D43AFFBC((void *)(v208 > 1), v209 + 1, 1, v200);
          unint64_t v208 = v200[3];
          int64_t v210 = v208 >> 1;
        }
        v200[2] = v211;
        v200[v209 + 4] = 2048;
        if (v210 < (uint64_t)(v209 + 2)) {
          v200 = sub_1D43AFFBC((void *)(v208 > 1), v209 + 2, 1, v200);
        }
        v200[2] = v209 + 2;
        v200[v211 + 4] = 4096;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v212 = v200[2];
  v377 = v200;
  unint64_t v213 = 0;
  if (v212)
  {
    v214 = v200 + 4;
    do
    {
      uint64_t v216 = *v214++;
      uint64_t v215 = v216;
      if ((v216 & ~v213) == 0) {
        uint64_t v215 = 0;
      }
      v213 |= v215;
      --v212;
    }
    while (v212);
  }
  uint64_t v217 = v87[3];
  uint64_t v218 = v87[4];
  sub_1D42C26F4(v87, v217);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v218 + 168))(v217, v218) & 1 | ((v213 & 0x10) == 0)) {
    unint64_t v219 = v213;
  }
  else {
    unint64_t v219 = v213 & 0xFFFFFFFFFFFFFFEFLL;
  }
  v220 = v388;
  v388[38] = v219;
  sub_1D42D5DA0(&qword_1EA6CA108);
  uint64_t v221 = swift_allocObject();
  *(_OWORD *)(v221 + 16) = xmmword_1D4471240;
  v222 = v374;
  v223 = v375;
  *(void *)(v221 + 32) = v374;
  *(_OWORD *)(v221 + 40) = xmmword_1D4471250;
  *(void *)(v221 + 56) = v185;
  *(_OWORD *)(v221 + 64) = xmmword_1D4471260;
  id v224 = v376;
  *(void *)(v221 + 80) = v376;
  *(_OWORD *)(v221 + 88) = xmmword_1D4471270;
  *(void *)(v221 + 104) = v223;
  v225 = (void **)MEMORY[0x1E4F97D60];
  *(_OWORD *)(v221 + 112) = xmmword_1D4471280;
  v226 = *v225;
  *(void *)(v221 + 128) = *v225;
  *(_OWORD *)(v221 + 136) = xmmword_1D4471290;
  id v227 = v222;
  id v228 = v185;
  id v229 = v224;
  id v376 = v223;
  id v230 = v226;
  unint64_t v231 = sub_1D43AA468(v221);
  uint64_t v232 = MEMORY[0x1F4188790](v231);
  unint64_t v367 = (unint64_t)v87;
  sub_1D43B3CC0(v232, (void (*)(void *__return_ptr))sub_1D43DD6BC);
  uint64_t v234 = v233;
  swift_bridgeObjectRelease();
  v416[0] = (uint64_t)&unk_1F2C01458;
  sub_1D43AE948(v234);
  v235 = (void *)v416[0];
  uint64_t v236 = v87[3];
  uint64_t v237 = v87[4];
  sub_1D42C26F4(v87, v236);
  uint64_t v238 = (*(uint64_t (**)(uint64_t, uint64_t))(v237 + 80))(v236, v237);
  if (*(void *)(v238 + 16))
  {
    id v239 = v227;
    unint64_t v240 = sub_1D43AEF30((uint64_t)v239);
    v241 = v227;
    if (v242)
    {
      id v243 = *(id *)(*(void *)(v238 + 56) + 8 * v240);

      swift_bridgeObjectRelease();
      id v244 = objc_msgSend(v243, sel_state);

      unint64_t v245 = (unint64_t)v244;
    }
    else
    {

      swift_bridgeObjectRelease();
      unint64_t v245 = -1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v245 = -1;
    v241 = v227;
  }
  v246 = v220;
  if (qword_1EA6C8F70 != -1) {
    swift_once();
  }
  uint64_t v247 = sub_1D4469928();
  sub_1D42D7FAC(v247, (uint64_t)qword_1EA6E4728);
  sub_1D42A4D5C((uint64_t)v87, (uint64_t)v416);
  v248 = sub_1D44698F8();
  int v249 = sub_1D446A038();
  if (os_log_type_enabled(v248, (os_log_type_t)v249))
  {
    LODWORD(v371) = v249;
    os_log_t v372 = v248;
    uint64_t v250 = swift_slowAlloc();
    uint64_t v251 = swift_slowAlloc();
    v413[0] = v251;
    *(_DWORD *)uint64_t v250 = 136446723;
    id v374 = v241;
    id v375 = (id)v247;
    unint64_t v373 = v245;
    uint64_t v370 = v251;
    unint64_t v252 = 0xE800000000000000;
    uint64_t v253 = 0x6E776F6E6B6E752ELL;
    switch(v245)
    {
      case 0xFFFFFFFFFFFFFFFFLL:
        break;
      case 0uLL:
        uint64_t v253 = 0x676E696E6E75722ELL;
        break;
      case 1uLL:
        uint64_t v253 = 0x676E69646E65702ELL;
        break;
      case 2uLL:
        unint64_t v252 = 0xE500000000000000;
        uint64_t v253 = 0x656C64692ELL;
        break;
      case 3uLL:
        unint64_t v252 = 0xE600000000000000;
        uint64_t v253 = 0x726F7272652ELL;
        break;
      case 4uLL:
        unint64_t v252 = 0xE700000000000000;
        uint64_t v253 = 0x6465756575712ELL;
        break;
      default:
        unint64_t v252 = 0xEF65756C61565F64;
        uint64_t v253 = 0x656C646E61686E55;
        break;
    }
    v410[0] = sub_1D42CB9EC(v253, v252, v413);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    *(_WORD *)(v250 + 12) = 2160;
    v410[0] = 1752392040;
    sub_1D446A188();
    *(_WORD *)(v250 + 22) = 2081;
    uint64_t v254 = v417;
    uint64_t v255 = v418;
    sub_1D42C26F4(v416, v417);
    v256 = v387;
    (*(void (**)(uint64_t, uint64_t))(v255 + 16))(v254, v255);
    sub_1D42BF558((unint64_t *)&qword_1EA6C92C0, MEMORY[0x1E4F27990]);
    uint64_t v257 = v386;
    uint64_t v258 = sub_1D446A6D8();
    unint64_t v260 = v259;
    v382(v256, v257);
    v410[0] = sub_1D42CB9EC(v258, v260, v413);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D42BEC64((uint64_t)v416);
    os_log_t v261 = v372;
    _os_log_impl(&dword_1D4271000, v372, (os_log_type_t)v371, "FMIPItem reported taskInfo PlaySound %{public}s for %{private,mask.hash}s.", (uint8_t *)v250, 0x20u);
    uint64_t v262 = v370;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v262, -1, -1);
    MEMORY[0x1D9447730](v250, -1, -1);

    v246 = v388;
    v241 = v374;
    uint64_t v247 = (uint64_t)v375;
    unint64_t v245 = v373;
  }
  else
  {

    sub_1D42BEC64((uint64_t)v416);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v245 > 4) {
      goto LABEL_100;
    }
  }
  switch(v245)
  {
    case 0uLL:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v235 = sub_1D43AFFB0(0, v235[2] + 1, 1, v235);
      }
      unint64_t v264 = v235[2];
      unint64_t v263 = v235[3];
      unint64_t v265 = v264 + 1;
      if (v264 >= v263 >> 1) {
        v235 = sub_1D43AFFB0((void *)(v263 > 1), v264 + 1, 1, v235);
      }
      uint64_t v266 = 2;
      goto LABEL_99;
    case 1uLL:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v235 = sub_1D43AFFB0(0, v235[2] + 1, 1, v235);
      }
      unint64_t v264 = v235[2];
      unint64_t v268 = v235[3];
      unint64_t v265 = v264 + 1;
      if (v264 >= v268 >> 1) {
        v235 = sub_1D43AFFB0((void *)(v268 > 1), v264 + 1, 1, v235);
      }
      uint64_t v266 = 4;
      goto LABEL_99;
    case 3uLL:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v235 = sub_1D43AFFB0(0, v235[2] + 1, 1, v235);
      }
      unint64_t v264 = v235[2];
      unint64_t v267 = v235[3];
      unint64_t v265 = v264 + 1;
      if (v264 >= v267 >> 1) {
        v235 = sub_1D43AFFB0((void *)(v267 > 1), v264 + 1, 1, v235);
      }
      uint64_t v266 = 4096;
      goto LABEL_99;
    case 4uLL:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v235 = sub_1D43AFFB0(0, v235[2] + 1, 1, v235);
      }
      unint64_t v264 = v235[2];
      unint64_t v269 = v235[3];
      unint64_t v265 = v264 + 1;
      if (v264 >= v269 >> 1) {
        v235 = sub_1D43AFFB0((void *)(v269 > 1), v264 + 1, 1, v235);
      }
      uint64_t v266 = 2048;
LABEL_99:
      v235[2] = v265;
      v235[v264 + 4] = v266;
      break;
    default:
      break;
  }
LABEL_100:
  uint64_t v270 = v87[3];
  uint64_t v271 = v87[4];
  sub_1D42C26F4(v87, v270);
  uint64_t v272 = (*(uint64_t (**)(uint64_t, uint64_t))(v271 + 80))(v270, v271);
  if (!*(void *)(v272 + 16))
  {
LABEL_110:
    swift_bridgeObjectRelease();
    goto LABEL_117;
  }
  id v273 = (id)*MEMORY[0x1E4F97D28];
  unint64_t v274 = sub_1D43AEF30((uint64_t)v273);
  if ((v275 & 1) == 0)
  {

    goto LABEL_110;
  }
  id v276 = *(id *)(*(void *)(v272 + 56) + 8 * v274);

  swift_bridgeObjectRelease();
  id v277 = objc_msgSend(v276, sel_state);

  if (v277)
  {
    if (v277 != (id)1) {
      goto LABEL_117;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v235 = sub_1D43AFFB0(0, v235[2] + 1, 1, v235);
    }
    unint64_t v279 = v235[2];
    unint64_t v278 = v235[3];
    if (v279 >= v278 >> 1) {
      v235 = sub_1D43AFFB0((void *)(v278 > 1), v279 + 1, 1, v235);
    }
    v235[2] = v279 + 1;
    v280 = &v235[v279];
    uint64_t v281 = 1024;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v235 = sub_1D43AFFB0(0, v235[2] + 1, 1, v235);
    }
    unint64_t v283 = v235[2];
    unint64_t v282 = v235[3];
    if (v283 >= v282 >> 1) {
      v235 = sub_1D43AFFB0((void *)(v282 > 1), v283 + 1, 1, v235);
    }
    v235[2] = v283 + 1;
    v280 = &v235[v283];
    uint64_t v281 = 512;
  }
  v280[4] = v281;
LABEL_117:
  uint64_t v284 = v87[3];
  uint64_t v285 = v87[4];
  sub_1D42C26F4(v87, v284);
  char v286 = (*(uint64_t (**)(uint64_t, uint64_t))(v285 + 176))(v284, v285);
  if (!(v378 & 1 | ((v286 & 1) == 0)))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v235 = sub_1D43AFFB0(0, v235[2] + 1, 1, v235);
    }
    unint64_t v288 = v235[2];
    unint64_t v287 = v235[3];
    if (v288 >= v287 >> 1) {
      v235 = sub_1D43AFFB0((void *)(v287 > 1), v288 + 1, 1, v235);
    }
    v235[2] = v288 + 1;
    v235[v288 + 4] = 64;
  }
  uint64_t v289 = v87[3];
  uint64_t v290 = v87[4];
  sub_1D42C26F4(v87, v289);
  v291 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v290 + 72))(v289, v290);

  if (v291)
  {
    char v292 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v293 = v384;
    if ((v292 & 1) == 0) {
      v235 = sub_1D43AFFB0(0, v235[2] + 1, 1, v235);
    }
    unint64_t v295 = v235[2];
    unint64_t v294 = v235[3];
    unint64_t v296 = v295 + 1;
    if (v295 >= v294 >> 1) {
      v235 = sub_1D43AFFB0((void *)(v294 > 1), v295 + 1, 1, v235);
    }
    v235[2] = v296;
    v235[v295 + 4] = 8;
  }
  else
  {
    unint64_t v296 = v235[2];
    uint64_t v293 = v384;
    if (!v296)
    {
      uint64_t v298 = 0;
      goto LABEL_134;
    }
  }
  uint64_t v297 = 0;
  uint64_t v298 = 0;
  do
  {
    uint64_t v299 = v235[v297 + 4];
    if ((v299 & ~v298) == 0) {
      uint64_t v299 = 0;
    }
    v298 |= v299;
    ++v297;
  }
  while (v296 != v297);
LABEL_134:
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v246 + SHIDWORD(v389[9].isa)) = v298;
  uint64_t *v246 = v293;
  uint64_t v300 = qword_1EBD80068;
  swift_retain();
  if (v300 != -1) {
    swift_once();
  }
  sub_1D42D7FAC(v247, (uint64_t)qword_1EBD83228);
  sub_1D42A4D5C((uint64_t)v87, (uint64_t)v416);
  sub_1D42A4D5C((uint64_t)v87, (uint64_t)v413);
  sub_1D42A4D5C((uint64_t)v87, (uint64_t)v410);
  sub_1D42A4D5C((uint64_t)v87, (uint64_t)v407);
  sub_1D42A4D5C((uint64_t)v87, (uint64_t)v404);
  sub_1D42A4D5C((uint64_t)v87, (uint64_t)v401);
  sub_1D42A4D5C((uint64_t)v87, (uint64_t)v398);
  sub_1D42A4D5C((uint64_t)v87, (uint64_t)v395);
  sub_1D42A4D5C((uint64_t)v87, (uint64_t)v392);
  v301 = sub_1D44698F8();
  int v302 = sub_1D446A038();
  if (os_log_type_enabled(v301, (os_log_type_t)v302))
  {
    LODWORD(v381) = v302;
    os_log_t v389 = v301;
    uint64_t v303 = swift_slowAlloc();
    uint64_t v304 = swift_slowAlloc();
    uint64_t v391 = v304;
    *(_DWORD *)uint64_t v303 = 136317186;
    uint64_t v305 = v417;
    uint64_t v306 = v418;
    sub_1D42C26F4(v416, v417);
    uint64_t v307 = (*(uint64_t (**)(uint64_t, uint64_t))(v306 + 8))(v305, v306);
    uint64_t v390 = sub_1D42CB9EC(v307, v308, &v391);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42BEC64((uint64_t)v416);
    *(_WORD *)(v303 + 12) = 2080;
    uint64_t v309 = v414;
    uint64_t v310 = v415;
    sub_1D42C26F4(v413, v414);
    uint64_t v311 = (*(uint64_t (**)(uint64_t, uint64_t))(v310 + 80))(v309, v310);
    uint64_t v312 = *(void *)(v311 + 16);
    uint64_t v378 = v304;
    if (v312)
    {
      id v313 = v241;
      unint64_t v314 = sub_1D43AEF30((uint64_t)v313);
      if (v315)
      {
        v316 = *(void **)(*(void *)(v311 + 56) + 8 * v314);
        id v317 = v316;
      }
      else
      {
        v316 = 0;
      }
    }
    else
    {
      v316 = 0;
    }
    swift_bridgeObjectRelease();
    uint64_t v390 = (uint64_t)v316;
    sub_1D42D5DA0(&qword_1EA6CA128);
    uint64_t v318 = sub_1D4469B68();
    uint64_t v390 = sub_1D42CB9EC(v318, v319, &v391);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42BEC64((uint64_t)v413);
    *(_WORD *)(v303 + 22) = 2080;
    uint64_t v321 = v411;
    uint64_t v320 = v412;
    sub_1D42C26F4(v410, v411);
    uint64_t v322 = (*(uint64_t (**)(uint64_t, uint64_t))(v320 + 8))(v321, v320);
    uint64_t v390 = sub_1D42CB9EC(v322, v323, &v391);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42BEC64((uint64_t)v410);
    *(_WORD *)(v303 + 32) = 2080;
    uint64_t v324 = v408;
    uint64_t v325 = v409;
    sub_1D42C26F4(v407, v408);
    uint64_t v326 = (*(uint64_t (**)(uint64_t, uint64_t))(v325 + 80))(v324, v325);
    if (*(void *)(v326 + 16))
    {
      id v327 = (id)*MEMORY[0x1E4F97D88];
      unint64_t v328 = sub_1D43AEF30((uint64_t)v327);
      if (v329)
      {
        v330 = *(void **)(*(void *)(v326 + 56) + 8 * v328);
        id v331 = v330;
      }
      else
      {
        v330 = 0;
      }
    }
    else
    {
      v330 = 0;
    }
    swift_bridgeObjectRelease();
    uint64_t v390 = (uint64_t)v330;
    uint64_t v332 = sub_1D4469B68();
    uint64_t v390 = sub_1D42CB9EC(v332, v333, &v391);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42BEC64((uint64_t)v407);
    *(_WORD *)(v303 + 42) = 2080;
    uint64_t v334 = v405;
    uint64_t v335 = v406;
    sub_1D42C26F4(v404, v405);
    uint64_t v336 = (*(uint64_t (**)(uint64_t, uint64_t))(v335 + 8))(v334, v335);
    uint64_t v390 = sub_1D42CB9EC(v336, v337, &v391);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42BEC64((uint64_t)v404);
    *(_WORD *)(v303 + 52) = 2080;
    uint64_t v338 = v402;
    uint64_t v339 = v403;
    sub_1D42C26F4(v401, v402);
    uint64_t v340 = (*(uint64_t (**)(uint64_t, uint64_t))(v339 + 80))(v338, v339);
    if (*(void *)(v340 + 16))
    {
      id v341 = v376;
      unint64_t v342 = sub_1D43AEF30((uint64_t)v341);
      v246 = v388;
      if (v343)
      {
        v344 = *(void **)(*(void *)(v340 + 56) + 8 * v342);
        id v345 = v344;
      }
      else
      {
        v344 = 0;
      }
    }
    else
    {
      v344 = 0;
      v246 = v388;
    }
    swift_bridgeObjectRelease();
    uint64_t v390 = (uint64_t)v344;
    uint64_t v346 = sub_1D4469B68();
    uint64_t v390 = sub_1D42CB9EC(v346, v347, &v391);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42BEC64((uint64_t)v401);
    *(_WORD *)(v303 + 62) = 2080;
    uint64_t v348 = v399;
    uint64_t v349 = v400;
    sub_1D42C26F4(v398, v399);
    char v350 = (*(uint64_t (**)(uint64_t, uint64_t))(v349 + 176))(v348, v349);
    BOOL v351 = (v350 & 1) == 0;
    if (v350) {
      uint64_t v352 = 0;
    }
    else {
      uint64_t v352 = 7630702;
    }
    if (v351) {
      unint64_t v353 = 0xE300000000000000;
    }
    else {
      unint64_t v353 = 0xE000000000000000;
    }
    uint64_t v390 = sub_1D42CB9EC(v352, v353, &v391);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42BEC64((uint64_t)v398);
    *(_WORD *)(v303 + 72) = 2080;
    uint64_t v354 = v396;
    uint64_t v355 = v397;
    sub_1D42C26F4(v395, v396);
    uint64_t v356 = (*(uint64_t (**)(uint64_t, uint64_t))(v355 + 8))(v354, v355);
    uint64_t v390 = sub_1D42CB9EC(v356, v357, &v391);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42BEC64((uint64_t)v395);
    *(_WORD *)(v303 + 82) = 2080;
    uint64_t v358 = v393;
    uint64_t v359 = v394;
    sub_1D42C26F4(v392, v393);
    v360 = v387;
    (*(void (**)(uint64_t, uint64_t))(v359 + 16))(v358, v359);
    uint64_t v361 = sub_1D4469638();
    unint64_t v363 = v362;
    v382(v360, v386);
    uint64_t v390 = sub_1D42CB9EC(v361, v363, &v391);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42BEC64((uint64_t)v392);
    os_log_t v364 = v389;
    _os_log_impl(&dword_1D4271000, v389, (os_log_type_t)v381, "FMIPItem: %s taskInfo -> play sound %s\nFMIPItem: %s taskInfo -> stop sound %s\nFMIPItem: %s taskInfo -> notify when found active %s\n☎︎ FMIPItem: beacon is %s connected, '%s': %s", (uint8_t *)v303, 0x5Cu);
    uint64_t v365 = v378;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v365, -1, -1);
    MEMORY[0x1D9447730](v303, -1, -1);
  }
  else
  {

    sub_1D42BEC64((uint64_t)v416);
    sub_1D42BEC64((uint64_t)v413);
    sub_1D42BEC64((uint64_t)v410);
    sub_1D42BEC64((uint64_t)v407);
    sub_1D42BEC64((uint64_t)v404);
    sub_1D42BEC64((uint64_t)v401);
    sub_1D42BEC64((uint64_t)v398);
    sub_1D42BEC64((uint64_t)v395);
    sub_1D42BEC64((uint64_t)v392);
  }
  swift_release();
  sub_1D42CAB38((uint64_t)v246, v380, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  return sub_1D42BEC64((uint64_t)v87);
}

uint64_t FMItemCapabilities.rawValue.getter()
{
  return *(void *)v0;
}

void static FMItemCapabilities.canEnableSharing.getter(void *a1@<X8>)
{
  *a1 = 32;
}

uint64_t sub_1D43D007C()
{
  return sub_1D4469D28();
}

uint64_t sub_1D43D00DC()
{
  return sub_1D4469D08();
}

uint64_t FMIPItemState.rawValue.getter()
{
  return *(void *)v0;
}

void static FMIPItemState.normal.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static FMIPItemState.soundPlaying.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static FMIPItemState.soundPending.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static FMIPItemState.markLostActive.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static FMIPItemState.separationWarningActive.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void static FMIPItemState.isBTConnected.getter(void *a1@<X8>)
{
  *a1 = 64;
}

void static FMIPItemState.isLocating.getter(void *a1@<X8>)
{
  *a1 = 128;
}

void static FMIPItemState.isNotifyWhenFoundActive.getter(void *a1@<X8>)
{
  *a1 = 256;
}

void static FMIPItemState.isFirmwareUpdating.getter(void *a1@<X8>)
{
  *a1 = 512;
}

void static FMIPItemState.isFirmwareUpdatePending.getter(void *a1@<X8>)
{
  *a1 = 1024;
}

void static FMIPItemState.soundQueued.getter(void *a1@<X8>)
{
  *a1 = 2048;
}

void static FMIPItemState.soundError.getter(void *a1@<X8>)
{
  *a1 = 4096;
}

void static FMIPItemState.pairingLocked.getter(void *a1@<X8>)
{
  *a1 = 0x2000;
}

void static FMIPItemState.isInCase.getter(void *a1@<X8>)
{
  *a1 = 0x4000;
}

void static FMIPItemState.pairingIncomplete.getter(void *a1@<X8>)
{
  *a1 = 0x8000;
}

unint64_t sub_1D43D01F0@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 7;
  if (result < 7) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

FMIPCore::FMIPItemBatteryStatus_optional __swiftcall FMIPItemBatteryStatus.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 7;
  if ((unint64_t)rawValue < 7) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (FMIPCore::FMIPItemBatteryStatus_optional)rawValue;
}

uint64_t FMIPItemBatteryStatus.rawValue.getter()
{
  return *v0;
}

FMIPCore::FMIPItemBatteryStatus_optional sub_1D43D0220(Swift::Int *a1)
{
  return FMIPItemBatteryStatus.init(rawValue:)(*a1);
}

uint64_t sub_1D43D0228()
{
  return sub_1D4469D28();
}

uint64_t sub_1D43D0288()
{
  return sub_1D4469D08();
}

uint64_t FMIPPartInfo.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPPartInfo.symbol.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void FMIPPartInfo.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

FMIPCore::FMIPPartType_optional __swiftcall FMIPPartType.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_1D446A518();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *char v2 = v5;
  return result;
}

uint64_t FMIPPartInfo.debugDescription.getter()
{
  return 0x203A656D614ELL;
}

uint64_t FMIPPartType.rawValue.getter()
{
  uint64_t result = 0x6F6C61646E617473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1702060387;
      break;
    case 2:
      uint64_t result = 0x6475427466656CLL;
      break;
    case 3:
      uint64_t result = 0x6475427468676972;
      break;
    case 4:
      uint64_t result = 0x636972656E6567;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D43D0610()
{
  uint64_t v1 = 0x6C6F626D7973;
  if (*v0 != 1) {
    uint64_t v1 = 1701869940;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1D43D0658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D43E16E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43D0680(uint64_t a1)
{
  unint64_t v2 = sub_1D43DD748();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D43D06BC(uint64_t a1)
{
  unint64_t v2 = sub_1D43DD748();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPPartInfo.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6CACC8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  void v11[2] = v7;
  int v12 = *(unsigned __int8 *)(v1 + 32);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43DD748();
  sub_1D446A8E8();
  char v16 = 0;
  uint64_t v8 = v11[3];
  sub_1D446A658();
  if (!v8)
  {
    char v9 = v12;
    char v15 = 1;
    sub_1D446A628();
    char v14 = v9;
    char v13 = 2;
    sub_1D43DD79C();
    sub_1D446A698();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t FMIPPartInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CACE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43DD748();
  sub_1D446A8C8();
  if (v2) {
    return sub_1D42BEC64((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v9 = sub_1D446A598();
  uint64_t v11 = v10;
  uint64_t v21 = v9;
  char v24 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1D446A558();
  uint64_t v14 = v13;
  uint64_t v19 = v12;
  char v22 = 2;
  sub_1D43DD7F0();
  swift_bridgeObjectRetain();
  uint64_t v20 = v14;
  sub_1D446A5D8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v15 = v23;
  uint64_t v16 = v20;
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v16;
  *(unsigned char *)(a2 + 32) = v15;
  sub_1D42BEC64((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43D0B54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPPartInfo.init(from:)(a1, a2);
}

uint64_t sub_1D43D0B6C(void *a1)
{
  return FMIPPartInfo.encode(to:)(a1);
}

BOOL static FMIPPartType.< infix(_:_:)(char *a1, char *a2)
{
  return flt_1D4475408[*a1] < flt_1D4475408[*a2];
}

uint64_t sub_1D43D0BB0(unsigned __int8 *a1, char *a2)
{
  return sub_1D441555C(*a1, *a2);
}

uint64_t sub_1D43D0BBC()
{
  return sub_1D446A888();
}

uint64_t sub_1D43D0CB0()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43D0D8C()
{
  return sub_1D446A888();
}

FMIPCore::FMIPPartType_optional sub_1D43D0E7C(Swift::String *a1)
{
  return FMIPPartType.init(rawValue:)(*a1);
}

void sub_1D43D0E88(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA0000000000656ELL;
  uint64_t v3 = 0x6F6C61646E617473;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1702060387;
      goto LABEL_3;
    case 2:
      *a1 = 0x6475427466656CLL;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x6475427468676972;
      a1[1] = 0xE800000000000000;
      break;
    case 4:
      *a1 = 0x636972656E6567;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1D43D0F40()
{
  return sub_1D4469D18();
}

uint64_t sub_1D43D0FA0()
{
  return sub_1D4469CF8();
}

BOOL sub_1D43D0FF0(char *a1, char *a2)
{
  return flt_1D4475408[*a1] < flt_1D4475408[*a2];
}

BOOL sub_1D43D1014(char *a1, char *a2)
{
  return flt_1D4475408[*a2] >= flt_1D4475408[*a1];
}

BOOL sub_1D43D1038(char *a1, char *a2)
{
  return flt_1D4475408[*a1] >= flt_1D4475408[*a2];
}

BOOL sub_1D43D105C(char *a1, char *a2)
{
  return flt_1D4475408[*a2] < flt_1D4475408[*a1];
}

uint64_t FMIPItem.updateContext.getter()
{
  return swift_retain();
}

uint64_t FMIPItem.address.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1D4276C98(v1 + 8, (uint64_t)v4, &qword_1EBD7CC10);
  sub_1D4276C98((uint64_t)v4, a1, &qword_1EBD7CC10);
  return sub_1D42FAC78((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
}

void FMIPItem.batteryStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 296);
}

void FMIPItem.capabilities.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 304);
}

id FMIPItem.crowdSourcedLocation.getter@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = *(void *)(v1 + 312);
  long long v2 = *(_OWORD *)(v1 + 320);
  *(_OWORD *)(a1 + 8) = v2;
  return (id)v2;
}

uint64_t FMIPItem.groupIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 336);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPItem.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 352);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPItem.productIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 368);
  swift_bridgeObjectRetain();
  return v1;
}

id FMIPItem.location.getter@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = *(void *)(v1 + 384);
  long long v2 = *(_OWORD *)(v1 + 392);
  *(_OWORD *)(a1 + 8) = v2;
  return (id)v2;
}

uint64_t FMIPItem.lostMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMIPItem();
  return sub_1D42A3A74(v1 + *(int *)(v3 + 52), a1, &qword_1EBD7E710);
}

uint64_t FMIPItem.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPItem() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPItem.owner.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPItem() + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPItem.partInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMIPItem() + 64);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(v3 + 32);
  return sub_1D43DD670(v4, v5);
}

uint64_t FMIPItem.role.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMIPItem() + 68);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  uint64_t v6 = *(void *)(v3 + 32);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FMIPItem.serialNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPItem() + 72));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPItem.state.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = type metadata accessor for FMIPItem();
  *a1 = *(void *)(v1 + *(int *)(result + 76));
  return result;
}

uint64_t FMIPItem.systemVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPItem() + 80));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPItem.isAppleAudioAccessory.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMIPItem() + 84));
}

uint64_t FMIPItem.isAppleItem.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMIPItem() + 88));
}

uint64_t FMIPItem.safeLocations.getter()
{
  type metadata accessor for FMIPItem();
  return swift_bridgeObjectRetain();
}

uint64_t FMIPItem.productType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMIPItem();
  return sub_1D42CA758(v1 + *(int *)(v3 + 96), a1, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
}

uint64_t FMIPItem.isFirmwareUpdateMandatory.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMIPItem() + 100));
}

unint64_t sub_1D43D14F0(char a1)
{
  unint64_t result = 0x73736572646461;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x5379726574746162;
      break;
    case 2:
      unint64_t result = 0x696C696261706163;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x65644970756F7267;
      break;
    case 5:
      unint64_t result = 0x696669746E656469;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 1701667182;
      break;
    case 10:
      unint64_t result = 0x655079627261656ELL;
      break;
    case 11:
      unint64_t result = 0x72656E776FLL;
      break;
    case 12:
      unint64_t result = 0x6F666E4974726170;
      break;
    case 13:
      unint64_t result = 1701605234;
      break;
    case 14:
      unint64_t result = 0x754E6C6169726573;
      break;
    case 15:
      unint64_t result = 0x736572616873;
      break;
    case 16:
      unint64_t result = 0x65566D6574737973;
      break;
    case 17:
      unint64_t result = 0x61636F4C65666173;
      break;
    case 18:
      unint64_t result = 0x6E656E6F706D6F63;
      break;
    case 19:
      unint64_t result = 0x54746375646F7270;
      break;
    case 20:
      unint64_t result = 0xD000000000000019;
      break;
    case 21:
      unint64_t result = 0xD000000000000015;
      break;
    case 22:
      unint64_t result = 0x49656C7070417369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D43D17FC(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1D43D14F0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1D43D14F0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D43D1888()
{
  char v1 = *v0;
  sub_1D446A828();
  sub_1D43D14F0(v1);
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  return sub_1D446A888();
}

uint64_t sub_1D43D18EC()
{
  sub_1D43D14F0(*v0);
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43D1940()
{
  char v1 = *v0;
  sub_1D446A828();
  sub_1D43D14F0(v1);
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  return sub_1D446A888();
}

uint64_t sub_1D43D19A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43E1814();
  *a1 = result;
  return result;
}

unint64_t sub_1D43D19D0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1D43D14F0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1D43D19FC()
{
  return sub_1D43D14F0(*v0);
}

uint64_t sub_1D43D1A04@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43E1814();
  *a1 = result;
  return result;
}

void sub_1D43D1A2C(unsigned char *a1@<X8>)
{
  *a1 = 23;
}

uint64_t sub_1D43D1A38(uint64_t a1)
{
  unint64_t v2 = sub_1D43DD844();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D43D1A74(uint64_t a1)
{
  unint64_t v2 = sub_1D43DD844();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v108 = a2;
  uint64_t v113 = sub_1D4469618();
  uint64_t v107 = *(void *)(v113 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v113);
  uint64_t v112 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v106 = (char *)&v99 - v5;
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7CB80);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v111 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v110 = (uint64_t)&v99 - v9;
  uint64_t updated = type metadata accessor for FMIPItemUpdateType(0);
  MEMORY[0x1F4188790](updated);
  uint64_t v109 = (uint64_t)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for FMIPProductType();
  MEMORY[0x1F4188790](v114);
  uint64_t v115 = (uint64_t)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D42D5DA0(&qword_1EBD7E710);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D42D5DA0(&qword_1EA6CACF0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v116 = v15;
  uint64_t v117 = v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for FMIPItem();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (id *)((char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43DD844();
  uint64_t v22 = (uint64_t)v122;
  sub_1D446A8C8();
  if (v22) {
    return sub_1D42BEC64((uint64_t)a1);
  }
  uint64_t v103 = v14;
  uint64_t v122 = v21;
  uint64_t v104 = (int *)v19;
  v102 = a1;
  char v119 = 0;
  sub_1D42D8E34();
  uint64_t v24 = v116;
  char v25 = v18;
  sub_1D446A5D8();
  memcpy(v118, v120, sizeof(v118));
  nullsub_1(v118);
  sub_1D4276C98((uint64_t)v118, (uint64_t)v121, &qword_1EBD7CC10);
  uint64_t v26 = (uint64_t)v122;
  uint64_t v27 = v117;
  uint64_t v28 = (uint64_t)(v122 + 1);
  sub_1D4276C98((uint64_t)v121, (uint64_t)(v122 + 1), &qword_1EBD7CC10);
  LOBYTE(v118[0]) = 1;
  sub_1D43DD8DC();
  sub_1D446A5D8();
  *(unsigned char *)(v26 + 296) = v120[0];
  LOBYTE(v118[0]) = 2;
  sub_1D4347668();
  sub_1D446A5D8();
  *(void *)(v26 + 304) = *(void *)&v120[0];
  LOBYTE(v118[0]) = 3;
  sub_1D42D75CC();
  sub_1D446A5D8();
  uint64_t v29 = *((void *)&v120[0] + 1);
  uint64_t v30 = *(void *)&v120[1];
  uint64_t v31 = 256;
  if (!BYTE1(v120[0])) {
    uint64_t v31 = 0;
  }
  uint64_t v32 = v31 | LOBYTE(v120[0]);
  uint64_t v33 = 0x10000;
  if (!BYTE2(v120[0])) {
    uint64_t v33 = 0;
  }
  *(void *)(v26 + 312) = v32 | v33 | ((unint64_t)BYTE3(v120[0]) << 24);
  *(void *)(v26 + 320) = v29;
  *(void *)(v26 + 328) = v30;
  LOBYTE(v120[0]) = 4;
  *(void *)(v26 + 336) = sub_1D446A598();
  *(void *)(v26 + 344) = v34;
  LOBYTE(v120[0]) = 5;
  *(void *)(v26 + 352) = sub_1D446A598();
  *(void *)(v26 + 360) = v35;
  LOBYTE(v120[0]) = 6;
  *(void *)(v26 + 368) = sub_1D446A598();
  *(void *)(v26 + 376) = v36;
  LOBYTE(v118[0]) = 7;
  sub_1D446A5D8();
  uint64_t v100 = 0;
  uint64_t v37 = *((void *)&v120[0] + 1);
  uint64_t v38 = *(void *)&v120[1];
  uint64_t v39 = 256;
  if (!BYTE1(v120[0])) {
    uint64_t v39 = 0;
  }
  uint64_t v40 = v39 | LOBYTE(v120[0]);
  uint64_t v41 = 0x10000;
  if (!BYTE2(v120[0])) {
    uint64_t v41 = 0;
  }
  *(void *)(v26 + 384) = v40 | v41 | ((unint64_t)BYTE3(v120[0]) << 24);
  *(void *)(v26 + 392) = v37;
  *(void *)(v26 + 400) = v38;
  uint64_t v42 = type metadata accessor for FMIPItemLostModeMetadata();
  LOBYTE(v120[0]) = 8;
  sub_1D42BF558(&qword_1EA6CA068, (void (*)(uint64_t))type metadata accessor for FMIPItemLostModeMetadata);
  uint64_t v43 = (uint64_t)v103;
  sub_1D446A5D8();
  id v101 = v25;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v43, 0, 1, v42);
  uint64_t v44 = v104;
  uint64_t v45 = (uint64_t)v122;
  sub_1D4276C98(v43, (uint64_t)v122 + v104[13], &qword_1EBD7E710);
  LOBYTE(v120[0]) = 9;
  uint64_t v46 = v101;
  uint64_t v47 = sub_1D446A598();
  os_log_t v48 = (uint64_t *)(v45 + v44[14]);
  *os_log_t v48 = v47;
  v48[1] = v49;
  LOBYTE(v120[0]) = 11;
  uint64_t v50 = sub_1D446A598();
  uint64_t v51 = (uint64_t *)(v45 + v44[15]);
  *uint64_t v51 = v50;
  v51[1] = v52;
  sub_1D42D5DA0(&qword_1EA6CACB8);
  LOBYTE(v118[0]) = 12;
  sub_1D43DDA80(&qword_1EA6CAD08, &qword_1EA6CACB8, (void (*)(void))sub_1D43DD930);
  sub_1D446A5D8();
  char v53 = v120[2];
  uint64_t v54 = v104;
  uint64_t v55 = v45 + v104[16];
  long long v56 = v120[1];
  *(_OWORD *)uint64_t v55 = v120[0];
  *(_OWORD *)(v55 + 16) = v56;
  *(unsigned char *)(v55 + 32) = v53;
  LOBYTE(v118[0]) = 13;
  sub_1D43DD984();
  sub_1D446A5D8();
  uint64_t v57 = *(void *)&v120[2];
  uint64_t v58 = v45 + v54[17];
  long long v59 = v120[1];
  *(_OWORD *)uint64_t v58 = v120[0];
  *(_OWORD *)(v58 + 16) = v59;
  *(void *)(v58 + 32) = v57;
  LOBYTE(v120[0]) = 14;
  uint64_t v60 = sub_1D446A598();
  uint64_t v103 = 0;
  uint64_t v61 = (uint64_t)v122;
  uint64_t v62 = (uint64_t *)((char *)v122 + v54[18]);
  uint64_t *v62 = v60;
  v62[1] = v63;
  *(void *)(v61 + v54[19]) = 0;
  LOBYTE(v120[0]) = 16;
  uint64_t v64 = v103;
  uint64_t v65 = sub_1D446A598();
  uint64_t v103 = v64;
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v46, v24);
    LODWORD(v116) = 0;
    LODWORD(v117) = 0;
    LODWORD(v115) = 1;
  }
  else
  {
    id v67 = (uint64_t *)((char *)v122 + v104[20]);
    uint64_t *v67 = v65;
    v67[1] = v66;
    LOBYTE(v120[0]) = 19;
    sub_1D42BF558(&qword_1EA6CA880, (void (*)(uint64_t))type metadata accessor for FMIPProductType);
    uint64_t v68 = v24;
    uint64_t v69 = v103;
    sub_1D446A5D8();
    uint64_t v103 = v69;
    if (v69)
    {
      (*(void (**)(char *, uint64_t))(v117 + 8))(v101, v24);
      LODWORD(v117) = 0;
      LODWORD(v115) = 1;
      LODWORD(v116) = 1;
    }
    else
    {
      sub_1D42CAB38(v115, (uint64_t)v122 + v104[24], (uint64_t (*)(void))type metadata accessor for FMIPProductType);
      LOBYTE(v120[0]) = 20;
      uint64_t v70 = v103;
      char v71 = sub_1D446A5A8();
      uint64_t v103 = v70;
      if (!v70)
      {
        *((unsigned char *)v122 + v104[25]) = v71 & 1;
        LOBYTE(v120[0]) = 21;
        char v72 = sub_1D446A5A8();
        uint64_t v103 = 0;
        *((unsigned char *)v122 + v104[21]) = v72 & 1;
        LOBYTE(v120[0]) = 22;
        char v73 = sub_1D446A5A8();
        uint64_t v103 = 0;
        *((unsigned char *)v122 + v104[22]) = v73 & 1;
        sub_1D42D5DA0(&qword_1EA6CA3F0);
        LOBYTE(v118[0]) = 17;
        sub_1D43DDA80(&qword_1EA6CA3F8, &qword_1EA6CA3F0, (void (*)(void))sub_1D42E5AC8);
        uint64_t v74 = v103;
        sub_1D446A5D8();
        uint64_t v103 = v74;
        if (!v74)
        {
          *(id *)((char *)v122 + v104[23]) = *(id *)&v120[0];
          uint64_t v81 = v109;
          swift_storeEnumTagMultiPayload();
          uint64_t v82 = v107;
          uint64_t v83 = v110;
          uint64_t v84 = v113;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56))(v110, 1, 1, v113);
          type metadata accessor for FMIPItemUpdateContext(0);
          uint64_t v85 = swift_allocObject();
          sub_1D42CA758(v81, v85 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_type, type metadata accessor for FMIPItemUpdateType);
          uint64_t v86 = v106;
          sub_1D4469608();
          uint64_t v87 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 32);
          v87(v85 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_timestamp, v86, v84);
          uint64_t v88 = v83;
          uint64_t v89 = (uint64_t)v111;
          sub_1D42A3A74(v88, (uint64_t)v111, &qword_1EBD7CB80);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v89, 1, v84) == 1)
          {
            sub_1D4469608();
            sub_1D4276C3C(v110, &qword_1EBD7CB80);
            sub_1D42CA948(v109, type metadata accessor for FMIPItemUpdateType);
            sub_1D4276C3C((uint64_t)v111, &qword_1EBD7CB80);
          }
          else
          {
            sub_1D4276C3C(v110, &qword_1EBD7CB80);
            sub_1D42CA948(v109, type metadata accessor for FMIPItemUpdateType);
            v87((uint64_t)v112, v111, v113);
          }
          v87(v85 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_creationTimestamp, v112, v113);
          id *v122 = (id)v85;
          uint64_t v90 = FMIPItem.debugDescription.getter();
          unint64_t v92 = v91;
          if (qword_1EBD80068 != -1) {
            swift_once();
          }
          uint64_t v93 = sub_1D4469928();
          sub_1D42D7FAC(v93, (uint64_t)qword_1EBD83228);
          swift_bridgeObjectRetain();
          unint64_t v94 = sub_1D44698F8();
          os_log_type_t v95 = sub_1D4469FF8();
          if (os_log_type_enabled(v94, v95))
          {
            uint64_t v96 = (uint8_t *)swift_slowAlloc();
            uint64_t v97 = swift_slowAlloc();
            *(void *)&v120[0] = v97;
            *(_DWORD *)uint64_t v96 = 136315138;
            uint64_t v115 = (uint64_t)(v96 + 4);
            swift_bridgeObjectRetain();
            v118[0] = sub_1D42CB9EC(v90, v92, (uint64_t *)v120);
            sub_1D446A188();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1D4271000, v94, v95, "FMIPItem: Initialized: %s", v96, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1D9447730](v97, -1, -1);
            MEMORY[0x1D9447730](v96, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          (*(void (**)(char *, uint64_t))(v117 + 8))(v101, v68);
          uint64_t v98 = (uint64_t)v122;
          sub_1D42CA758((uint64_t)v122, v108, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          sub_1D42BEC64((uint64_t)v102);
          long long v80 = type metadata accessor for FMIPItem;
          uint64_t v79 = v98;
          return sub_1D42CA948(v79, (uint64_t (*)(void))v80);
        }
      }
      (*(void (**)(char *, uint64_t))(v117 + 8))(v101, v24);
      LODWORD(v115) = 1;
      LODWORD(v116) = 1;
      LODWORD(v117) = 1;
    }
  }
  uint64_t v75 = v100;
  sub_1D42BEC64((uint64_t)v102);
  sub_1D4276C98(v28, (uint64_t)v121, &qword_1EBD7CC10);
  sub_1D42FAC78((uint64_t)v121, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
  if (!v75)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v77 = (uint64_t)v122;
  swift_bridgeObjectRelease();

  uint64_t v78 = v104;
  sub_1D4276C3C(v77 + v104[13], &qword_1EBD7E710);
  uint64_t v76 = (uint64_t)v122;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D43DD898(*(void *)(v76 + v78[16]), *(void *)(v76 + v78[16] + 8));
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v115)
  {
    uint64_t result = swift_bridgeObjectRelease();
    if (v116) {
      goto LABEL_26;
    }
  }
  else if (v116)
  {
LABEL_26:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v117 & 1) == 0) {
      return result;
    }
    goto LABEL_27;
  }
  if (!v117) {
    return result;
  }
LABEL_27:
  uint64_t v79 = v76 + v78[24];
  long long v80 = type metadata accessor for FMIPProductType;
  return sub_1D42CA948(v79, (uint64_t (*)(void))v80);
}

uint64_t sub_1D43D2D54@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a3[3];
  uint64_t v8 = a3[4];
  sub_1D42C26F4(a3, v7);
  if (*(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 80))(v7, v8) + 16))
  {
    id v9 = a1;
    sub_1D43AEF30((uint64_t)v9);
    if (v10) {
      uint64_t v11 = v6;
    }
    else {
      uint64_t v11 = 0;
    }
    char v12 = v10 ^ 1;
  }
  else
  {
    uint64_t v11 = 0;
    char v12 = 1;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a4 = v11;
  *(unsigned char *)(a4 + 8) = v12 & 1;
  return result;
}

void sub_1D43D2E04(void *a1@<X0>, id a2@<X1>, uint64_t *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *a3;
  uint64_t v9 = a4[3];
  uint64_t v10 = a4[4];
  sub_1D42C26F4(a4, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 80))(v9, v10);
  if (!*(void *)(v11 + 16)) {
    goto LABEL_6;
  }
  id v12 = a1;
  unint64_t v13 = sub_1D43AEF30((uint64_t)v12);
  if ((v14 & 1) == 0)
  {

LABEL_6:
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  id v15 = *(id *)(*(void *)(v11 + 56) + 8 * v13);

  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v15, sel_state);

  if (v16 != a2)
  {
LABEL_7:
    uint64_t v8 = 0;
    char v17 = 1;
    goto LABEL_8;
  }
  char v17 = 0;
LABEL_8:
  *(void *)a5 = v8;
  *(unsigned char *)(a5 + 8) = v17;
}

Swift::Bool __swiftcall FMIPItem.canEnableNotifyWhenFound()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPItem();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v1 + 304);
  sub_1D42CA758(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  Swift::Bool v6 = (v5 & 8) != 0 && (v4[*(int *)(v2 + 76)] & 0x40) == 0;
  sub_1D42CA948((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  return v6;
}

uint64_t FMIPItem.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CAD20);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43DD844();
  sub_1D446A8E8();
  sub_1D4276C98(v3 + 8, (uint64_t)v23, &qword_1EBD7CC10);
  sub_1D4276C98((uint64_t)v23, (uint64_t)&v20, &qword_1EBD7CC10);
  char v24 = 0;
  sub_1D42D5DA0(&qword_1EBD7CC10);
  sub_1D43DDA80((unint64_t *)&qword_1EBD7CC18, &qword_1EBD7CC10, (void (*)(void))sub_1D42E7BC4);
  sub_1D446A698();
  if (!v2)
  {
    LOBYTE(v20) = 1;
    sub_1D446A688();
    LOBYTE(v20) = 2;
    sub_1D446A688();
    uint64_t v9 = *(void *)(v3 + 328);
    long long v20 = *(_OWORD *)(v3 + 312);
    *(void *)&long long v21 = v9;
    char v24 = 3;
    sub_1D42D5DA0(&qword_1EBD7CC70);
    sub_1D43DDA80(&qword_1EBD7CC78, &qword_1EBD7CC70, (void (*)(void))sub_1D42E6A58);
    sub_1D446A698();
    long long v20 = *(_OWORD *)(v3 + 336);
    char v24 = 4;
    sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
    sub_1D42BD508();
    sub_1D446A698();
    LOBYTE(v20) = 5;
    sub_1D446A658();
    LOBYTE(v20) = 6;
    sub_1D446A658();
    uint64_t v19 = (int *)type metadata accessor for FMIPItem();
    LOBYTE(v20) = 21;
    sub_1D446A668();
    LOBYTE(v20) = 22;
    sub_1D446A668();
    LOBYTE(v20) = 20;
    sub_1D446A668();
    uint64_t v10 = *(void *)(v3 + 400);
    long long v20 = *(_OWORD *)(v3 + 384);
    *(void *)&long long v21 = v10;
    char v24 = 7;
    sub_1D446A698();
    LOBYTE(v20) = 8;
    sub_1D42D5DA0(&qword_1EBD7E710);
    sub_1D435318C();
    sub_1D446A698();
    LOBYTE(v20) = 9;
    sub_1D446A658();
    LOBYTE(v20) = 11;
    sub_1D446A658();
    uint64_t v11 = (long long *)(v3 + v19[16]);
    char v12 = *((unsigned char *)v11 + 32);
    long long v13 = v11[1];
    long long v20 = *v11;
    long long v21 = v13;
    LOBYTE(v22) = v12;
    char v24 = 12;
    sub_1D42D5DA0(&qword_1EA6CACB8);
    sub_1D43DDA80(&qword_1EA6CAD28, &qword_1EA6CACB8, (void (*)(void))sub_1D43DD9D8);
    sub_1D446A698();
    LOBYTE(v20) = 19;
    type metadata accessor for FMIPProductType();
    sub_1D42BF558(&qword_1EA6CA8B8, (void (*)(uint64_t))type metadata accessor for FMIPProductType);
    sub_1D446A698();
    char v14 = (long long *)(v3 + v19[17]);
    uint64_t v15 = *((void *)v14 + 4);
    long long v16 = v14[1];
    long long v20 = *v14;
    long long v21 = v16;
    uint64_t v22 = v15;
    char v24 = 13;
    sub_1D43DDA2C();
    sub_1D446A698();
    LOBYTE(v20) = 14;
    sub_1D446A658();
    LOBYTE(v20) = 16;
    sub_1D446A658();
    *(void *)&long long v20 = *(void *)(v3 + v19[23]);
    char v24 = 17;
    sub_1D42D5DA0(&qword_1EA6CA3F0);
    sub_1D43DDA80(&qword_1EA6CA460, &qword_1EA6CA3F0, (void (*)(void))sub_1D42E5B1C);
    sub_1D446A698();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FMIPItem.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t FMIPItem.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t sub_1D43D37A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPItem.init(from:)(a1, a2);
}

uint64_t sub_1D43D37BC(void *a1)
{
  return FMIPItem.encode(to:)(a1);
}

uint64_t sub_1D43D37DC()
{
  return sub_1D446A888();
}

uint64_t sub_1D43D3838()
{
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43D3890()
{
  return sub_1D446A888();
}

uint64_t SPBeaconTaskState.description.getter(uint64_t a1)
{
  uint64_t v1 = a1 + 1;
  uint64_t result = 0x6E776F6E6B6E752ELL;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x676E696E6E75722ELL;
      break;
    case 2:
      uint64_t result = 0x676E69646E65702ELL;
      break;
    case 3:
      uint64_t result = 0x656C64692ELL;
      break;
    case 4:
      uint64_t result = 0x726F7272652ELL;
      break;
    case 5:
      uint64_t result = 0x6465756575712ELL;
      break;
    default:
      uint64_t result = 0x656C646E61686E55;
      break;
  }
  return result;
}

uint64_t sub_1D43D39CC()
{
  uint64_t result = 0x6E776F6E6B6E752ELL;
  switch(*v0)
  {
    case 0xFFFFFFFFFFFFFFFFLL:
      return result;
    case 0:
      uint64_t result = 0x676E696E6E75722ELL;
      break;
    case 1:
      uint64_t result = 0x676E69646E65702ELL;
      break;
    case 2:
      uint64_t result = 0x656C64692ELL;
      break;
    case 3:
      uint64_t result = 0x726F7272652ELL;
      break;
    case 4:
      uint64_t result = 0x6465756575712ELL;
      break;
    default:
      uint64_t result = 0x656C646E61686E55;
      break;
  }
  return result;
}

uint64_t sub_1D43D3AB4(void (*a1)(uint64_t))
{
  uint64_t v2 = sub_1D4469688();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v4);
  sub_1D42BF558((unint64_t *)&qword_1EA6C92C0, MEMORY[0x1E4F27990]);
  uint64_t v7 = sub_1D446A6D8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v7;
}

unint64_t sub_1D43D3BDC(void (*a1)(uint64_t *__return_ptr))
{
  a1(&v3);
  unint64_t v1 = sub_1D433514C();
  swift_release();
  return v1;
}

uint64_t sub_1D43D3C38(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1D4469688();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1D42D5DA0(&qword_1EA6CA9E0);
  int v46 = a2;
  uint64_t v10 = sub_1D446A4B8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_39;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  char v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v20++, 1)) {
      goto LABEL_41;
    }
    if (v20 >= v41) {
      break;
    }
    char v25 = v42;
    unint64_t v26 = v42[v20];
    if (!v26)
    {
      int64_t v27 = v20 + 1;
      if (v20 + 1 >= v41)
      {
LABEL_32:
        swift_release();
        uint64_t v3 = v40;
        if ((v46 & 1) == 0) {
          goto LABEL_39;
        }
        goto LABEL_35;
      }
      unint64_t v26 = v42[v27];
      if (!v26)
      {
        while (1)
        {
          int64_t v20 = v27 + 1;
          if (__OFADD__(v27, 1)) {
            break;
          }
          if (v20 >= v41) {
            goto LABEL_32;
          }
          unint64_t v26 = v42[v20];
          ++v27;
          if (v26) {
            goto LABEL_19;
          }
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      ++v20;
    }
LABEL_19:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_20:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      unint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      unint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      sub_1D42E8690(v30);
    }
    sub_1D42BF558(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1D4469AC8();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  char v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_35:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1D43D4044(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1D42D5DA0(&qword_1EA6C9488);
  char v37 = a2;
  uint64_t v6 = sub_1D446A4B8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    unint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_1D446A828();
    sub_1D4469BC8();
    uint64_t result = sub_1D446A888();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D43D435C(uint64_t a1, char a2)
{
  return sub_1D4299B48(a1, a2, &qword_1EA6CAA00);
}

uint64_t sub_1D43D4368(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4D0);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1D42D5DA0(&qword_1EA6CADE8);
  int v43 = a2;
  uint64_t v9 = sub_1D446A4B8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  int64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    unint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    unint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_1D4276C98(v30, (uint64_t)v7, (uint64_t *)&unk_1EA6CA4D0);
    }
    else
    {
      sub_1D42A3A74(v30, (uint64_t)v7, (uint64_t *)&unk_1EA6CA4D0);
      swift_bridgeObjectRetain();
    }
    sub_1D446A828();
    sub_1D4469BC8();
    uint64_t result = sub_1D446A888();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *unint64_t v19 = v27;
    v19[1] = v28;
    uint64_t result = sub_1D4276C98((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, (uint64_t *)&unk_1EA6CA4D0);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1D43D4730(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v108 = sub_1D44696C8();
  uint64_t v5 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v103 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v107 = (uint64_t)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v106 = *(void *)(v145 - 8);
  MEMORY[0x1F4188790](v145);
  uint64_t v10 = (id *)((char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *v2;
  sub_1D42D5DA0(&qword_1EA6CADE0);
  int v109 = a2;
  uint64_t v12 = sub_1D446A4B8();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_43;
  }
  char v14 = *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v99 = (void *)(v11 + 64);
  uint64_t v16 = 1 << v14;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  uint64_t v97 = v2;
  int64_t v98 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v105 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  id v101 = (void (**)(char *, uint64_t))(v5 + 8);
  v102 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  uint64_t v104 = v11;
  uint64_t v100 = v10;
  while (1)
  {
    if (v18)
    {
      unint64_t v42 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v43 = v42 | (v21 << 6);
      if (v109) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v75 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v75 >= v98) {
      break;
    }
    uint64_t v76 = v99;
    unint64_t v77 = v99[v75];
    ++v21;
    if (!v77)
    {
      int64_t v21 = v75 + 1;
      if (v75 + 1 >= v98) {
        goto LABEL_36;
      }
      unint64_t v77 = v99[v21];
      if (!v77)
      {
        int64_t v78 = v75 + 2;
        if (v78 >= v98)
        {
LABEL_36:
          swift_release();
          uint64_t v3 = v97;
          if ((v109 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }
        unint64_t v77 = v99[v78];
        if (!v77)
        {
          while (1)
          {
            int64_t v21 = v78 + 1;
            if (__OFADD__(v78, 1)) {
              goto LABEL_45;
            }
            if (v21 >= v98) {
              goto LABEL_36;
            }
            unint64_t v77 = v99[v21];
            ++v78;
            if (v77) {
              goto LABEL_22;
            }
          }
        }
        int64_t v21 = v78;
      }
    }
LABEL_22:
    unint64_t v18 = (v77 - 1) & v77;
    unint64_t v43 = __clz(__rbit64(v77)) + (v21 << 6);
    if (v109)
    {
LABEL_10:
      uint64_t v44 = *(void *)(v106 + 72);
      sub_1D42CAB38(*(void *)(v11 + 48) + v44 * v43, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      uint64_t v45 = (uint64_t *)(*(void *)(v11 + 56) + 288 * v43);
      uint64_t v46 = *v45;
      uint64_t v47 = v45[1];
      uint64_t v112 = v45[2];
      uint64_t v113 = v46;
      uint64_t v48 = v45[3];
      uint64_t v49 = v45[4];
      uint64_t v110 = v47;
      uint64_t v111 = v49;
      uint64_t v50 = v45[5];
      uint64_t v51 = v45[6];
      uint64_t v114 = v48;
      uint64_t v115 = v51;
      uint64_t v52 = v45[7];
      uint64_t v53 = v45[8];
      uint64_t v116 = v50;
      uint64_t v117 = v53;
      uint64_t v54 = v45[9];
      uint64_t v55 = v45[10];
      uint64_t v118 = v52;
      uint64_t v119 = v55;
      uint64_t v56 = v45[11];
      uint64_t v57 = v45[12];
      uint64_t v120 = v54;
      uint64_t v121 = v57;
      uint64_t v58 = v45[13];
      uint64_t v59 = v45[14];
      uint64_t v122 = v56;
      uint64_t v123 = v59;
      uint64_t v60 = v45[15];
      uint64_t v61 = v45[16];
      uint64_t v124 = v58;
      uint64_t v125 = v61;
      uint64_t v62 = v45[17];
      uint64_t v63 = v45[18];
      uint64_t v126 = v60;
      uint64_t v127 = v63;
      uint64_t v64 = v45[19];
      uint64_t v65 = v45[20];
      uint64_t v128 = v62;
      uint64_t v129 = v65;
      uint64_t v66 = v45[21];
      uint64_t v134 = v45[22];
      uint64_t v67 = v45[23];
      uint64_t v130 = v64;
      uint64_t v131 = v67;
      uint64_t v68 = v45[24];
      uint64_t v69 = v45[25];
      uint64_t v132 = v66;
      uint64_t v133 = v69;
      uint64_t v70 = v45[26];
      uint64_t v135 = v45[27];
      uint64_t v136 = v68;
      uint64_t v71 = v45[28];
      uint64_t v137 = v45[29];
      uint64_t v138 = v70;
      uint64_t v72 = v45[30];
      uint64_t v139 = v45[31];
      uint64_t v140 = v71;
      uint64_t v73 = v45[32];
      uint64_t v74 = v45[34];
      uint64_t v141 = v45[33];
      uint64_t v142 = v72;
      uint64_t v143 = v45[35];
      uint64_t v144 = v73;
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v44 = *(void *)(v106 + 72);
    sub_1D42CA758(*(void *)(v11 + 48) + v44 * v43, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    memcpy(v146, (const void *)(*(void *)(v11 + 56) + 288 * v43), 0x120uLL);
    uint64_t v74 = v146[34];
    uint64_t v143 = v146[35];
    uint64_t v144 = v146[32];
    uint64_t v141 = v146[33];
    uint64_t v142 = v146[30];
    uint64_t v139 = v146[31];
    uint64_t v140 = v146[28];
    uint64_t v137 = v146[29];
    uint64_t v138 = v146[26];
    uint64_t v135 = v146[27];
    uint64_t v136 = v146[24];
    uint64_t v133 = v146[25];
    uint64_t v134 = v146[22];
    uint64_t v131 = v146[23];
    uint64_t v132 = v146[21];
    uint64_t v129 = v146[20];
    uint64_t v130 = v146[19];
    uint64_t v127 = v146[18];
    uint64_t v128 = v146[17];
    uint64_t v125 = v146[16];
    uint64_t v126 = v146[15];
    uint64_t v123 = v146[14];
    uint64_t v124 = v146[13];
    uint64_t v121 = v146[12];
    uint64_t v122 = v146[11];
    uint64_t v119 = v146[10];
    uint64_t v120 = v146[9];
    uint64_t v117 = v146[8];
    uint64_t v118 = v146[7];
    uint64_t v115 = v146[6];
    uint64_t v116 = v146[5];
    uint64_t v111 = v146[4];
    uint64_t v112 = v146[2];
    uint64_t v113 = v146[0];
    uint64_t v114 = v146[3];
    uint64_t v110 = v146[1];
    sub_1D42FC768((uint64_t)v146);
LABEL_24:
    sub_1D446A828();
    swift_bridgeObjectRetain();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
    id v79 = v10[2];
    sub_1D446A128();

    uint64_t v80 = v107;
    sub_1D42A3A74((uint64_t)v10 + *(int *)(v145 + 24), v107, (uint64_t *)&unk_1EBD7E560);
    uint64_t v81 = v108;
    if ((*v105)(v80, 1, v108) == 1)
    {
      sub_1D446A848();
    }
    else
    {
      uint64_t v82 = v13;
      unint64_t v83 = v18;
      int64_t v84 = v21;
      uint64_t v85 = v44;
      uint64_t v86 = v74;
      uint64_t v87 = v103;
      (*v102)(v103, v80, v81);
      sub_1D446A848();
      sub_1D42BF558(&qword_1EA6C9C80, MEMORY[0x1E4F27A78]);
      sub_1D4469AD8();
      uint64_t v88 = v87;
      uint64_t v74 = v86;
      uint64_t v44 = v85;
      int64_t v21 = v84;
      unint64_t v18 = v83;
      uint64_t v13 = v82;
      uint64_t v10 = v100;
      (*v101)(v88, v81);
    }
    sub_1D446A848();
    sub_1D446A848();
    uint64_t result = sub_1D446A888();
    uint64_t v89 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v90 = result & ~v89;
    unint64_t v91 = v90 >> 6;
    if (((-1 << v90) & ~*(void *)(v19 + 8 * (v90 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v90) & ~*(void *)(v19 + 8 * (v90 >> 6)))) | v90 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v92 = 0;
      unint64_t v93 = (unint64_t)(63 - v89) >> 6;
      do
      {
        if (++v91 == v93 && (v92 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v94 = v91 == v93;
        if (v91 == v93) {
          unint64_t v91 = 0;
        }
        v92 |= v94;
        uint64_t v95 = *(void *)(v19 + 8 * v91);
      }
      while (v95 == -1);
      unint64_t v22 = __clz(__rbit64(~v95)) + (v91 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    uint64_t result = sub_1D42CAB38((uint64_t)v10, *(void *)(v13 + 48) + v44 * v22, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    unint64_t v23 = (void *)(*(void *)(v13 + 56) + 288 * v22);
    uint64_t v24 = v110;
    *unint64_t v23 = v113;
    v23[1] = v24;
    uint64_t v25 = v114;
    v23[2] = v112;
    v23[3] = v25;
    uint64_t v26 = v116;
    v23[4] = v111;
    v23[5] = v26;
    uint64_t v27 = v118;
    v23[6] = v115;
    v23[7] = v27;
    uint64_t v28 = v120;
    unsigned char v23[8] = v117;
    v23[9] = v28;
    uint64_t v29 = v122;
    v23[10] = v119;
    v23[11] = v29;
    uint64_t v30 = v124;
    v23[12] = v121;
    v23[13] = v30;
    uint64_t v31 = v126;
    v23[14] = v123;
    v23[15] = v31;
    uint64_t v32 = v128;
    v23[16] = v125;
    v23[17] = v32;
    uint64_t v33 = v130;
    v23[18] = v127;
    v23[19] = v33;
    uint64_t v34 = v132;
    v23[20] = v129;
    v23[21] = v34;
    uint64_t v35 = v131;
    v23[22] = v134;
    v23[23] = v35;
    uint64_t v36 = v133;
    v23[24] = v136;
    v23[25] = v36;
    uint64_t v37 = v135;
    v23[26] = v138;
    v23[27] = v37;
    uint64_t v38 = v137;
    v23[28] = v140;
    v23[29] = v38;
    uint64_t v39 = v139;
    v23[30] = v142;
    v23[31] = v39;
    uint64_t v40 = v141;
    v23[32] = v144;
    v23[33] = v40;
    uint64_t v41 = v143;
    v23[34] = v74;
    v23[35] = v41;
    ++*(void *)(v13 + 16);
    uint64_t v11 = v104;
  }
  swift_release();
  uint64_t v3 = v97;
  uint64_t v76 = v99;
  if ((v109 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  uint64_t v96 = 1 << *(unsigned char *)(v11 + 32);
  if (v96 >= 64) {
    bzero(v76, ((unint64_t)(v96 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v76 = -1 << v96;
  }
  *(void *)(v11 + 16) = 0;
LABEL_43:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1D43D5020(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1D4469688();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1D42D5DA0(&qword_1EA6CA970);
  int v46 = a2;
  uint64_t v10 = sub_1D446A4B8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  unint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  unint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_1D42BF558(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1D4469AC8();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1D43D5444(uint64_t a1, int a2)
{
  return sub_1D43D5D68(a1, a2, (uint64_t (*)(void))type metadata accessor for FMIPItem, &qword_1EA6CADD8, (uint64_t (*)(void))type metadata accessor for FMIPItem, (uint64_t (*)(void))type metadata accessor for FMIPItem);
}

uint64_t sub_1D43D548C(uint64_t a1, int a2)
{
  return sub_1D43D713C(a1, a2, type metadata accessor for FMIPDeviceConnectedState, &qword_1EA6CADD0, type metadata accessor for FMIPDeviceConnectedState, type metadata accessor for FMIPDeviceConnectedState);
}

uint64_t sub_1D43D54D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1D42D5DA0(&qword_1EA6CAE08);
  char v55 = a2;
  uint64_t v6 = sub_1D446A4B8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v53 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v51 = v2;
  int64_t v52 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      if (v55) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v28 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v28 >= v52) {
      break;
    }
    unint64_t v29 = v53;
    unint64_t v30 = v53[v28];
    ++v13;
    if (!v30)
    {
      int64_t v13 = v28 + 1;
      if (v28 + 1 >= v52) {
        goto LABEL_33;
      }
      unint64_t v30 = v53[v13];
      if (!v30)
      {
        int64_t v31 = v28 + 2;
        if (v31 >= v52)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v51;
          if ((v55 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v30 = v53[v31];
        if (!v30)
        {
          while (1)
          {
            int64_t v13 = v31 + 1;
            if (__OFADD__(v31, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v52) {
              goto LABEL_33;
            }
            unint64_t v30 = v53[v13];
            ++v31;
            if (v30) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v31;
      }
    }
LABEL_22:
    unint64_t v10 = (v30 - 1) & v30;
    unint64_t v18 = __clz(__rbit64(v30)) + (v13 << 6);
    if (v55)
    {
LABEL_10:
      uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = *(void *)(v5 + 56) + 208 * v18;
      uint64_t v58 = *(void *)(v22 + 8);
      uint64_t v59 = *(void *)v22;
      char v60 = *(unsigned char *)(v22 + 16);
      uint64_t v23 = *(void *)(v22 + 24);
      uint64_t v24 = *(void *)(v22 + 32);
      char v25 = *(unsigned char *)(v22 + 48);
      uint64_t v64 = *(void *)(v22 + 56);
      char v26 = *(unsigned char *)(v22 + 64);
      uint64_t v61 = *(void *)(v22 + 72);
      char v27 = *(unsigned char *)(v22 + 80);
      uint64_t v56 = *(void *)(v22 + 96);
      uint64_t v57 = *(void *)(v22 + 88);
      uint64_t v68 = *(void *)(v22 + 104);
      uint64_t v69 = *(void *)(v22 + 40);
      uint64_t v75 = *(void *)(v22 + 128);
      uint64_t v76 = *(void *)(v22 + 120);
      uint64_t v74 = *(void *)(v22 + 136);
      uint64_t v71 = *(void *)(v22 + 152);
      uint64_t v72 = *(void *)(v22 + 144);
      uint64_t v70 = *(void *)(v22 + 160);
      uint64_t v66 = *(void *)(v22 + 112);
      uint64_t v67 = *(void *)(v22 + 168);
      uint64_t v65 = *(void *)(v22 + 176);
      uint64_t v62 = *(void *)(v22 + 192);
      uint64_t v63 = *(void *)(v22 + 184);
      char v73 = *(unsigned char *)(v22 + 200);
      goto LABEL_24;
    }
LABEL_23:
    unint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v20 = *v32;
    uint64_t v21 = v32[1];
    unint64_t v33 = (long long *)(*(void *)(v5 + 56) + 208 * v18);
    long long v77 = *v33;
    long long v34 = v33[4];
    long long v36 = v33[1];
    long long v35 = v33[2];
    long long v80 = v33[3];
    long long v81 = v34;
    long long v78 = v36;
    long long v79 = v35;
    long long v37 = v33[8];
    long long v39 = v33[5];
    long long v38 = v33[6];
    long long v84 = v33[7];
    long long v85 = v37;
    long long v82 = v39;
    long long v83 = v38;
    long long v41 = v33[10];
    long long v40 = v33[11];
    long long v42 = v33[9];
    *(_OWORD *)&v88[9] = *(long long *)((char *)v33 + 185);
    long long v87 = v41;
    *(_OWORD *)uint64_t v88 = v40;
    long long v86 = v42;
    char v73 = v88[24];
    uint64_t v75 = v37;
    uint64_t v76 = *((void *)&v84 + 1);
    uint64_t v74 = *((void *)&v37 + 1);
    uint64_t v71 = *((void *)&v42 + 1);
    uint64_t v72 = v42;
    uint64_t v63 = *((void *)&v40 + 1);
    uint64_t v65 = v40;
    uint64_t v62 = *(void *)&v88[16];
    uint64_t v67 = *((void *)&v41 + 1);
    uint64_t v68 = *((void *)&v83 + 1);
    uint64_t v66 = v84;
    uint64_t v23 = *((void *)&v78 + 1);
    uint64_t v69 = *((void *)&v79 + 1);
    uint64_t v24 = v79;
    uint64_t v70 = v41;
    char v25 = v80;
    uint64_t v64 = *((void *)&v80 + 1);
    char v26 = v81;
    uint64_t v61 = *((void *)&v81 + 1);
    char v27 = v82;
    uint64_t v56 = v83;
    uint64_t v57 = *((void *)&v82 + 1);
    char v60 = v78;
    uint64_t v58 = *((void *)&v77 + 1);
    uint64_t v59 = v77;
    swift_bridgeObjectRetain();
    sub_1D435C1C4(&v77);
LABEL_24:
    sub_1D446A828();
    sub_1D4469BC8();
    uint64_t result = sub_1D446A888();
    uint64_t v43 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v44 = result & ~v43;
    unint64_t v45 = v44 >> 6;
    if (((-1 << v44) & ~*(void *)(v11 + 8 * (v44 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v44) & ~*(void *)(v11 + 8 * (v44 >> 6)))) | v44 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v46 = 0;
      unint64_t v47 = (unint64_t)(63 - v43) >> 6;
      do
      {
        if (++v45 == v47 && (v46 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v48 = v45 == v47;
        if (v45 == v47) {
          unint64_t v45 = 0;
        }
        v46 |= v48;
        uint64_t v49 = *(void *)(v11 + 8 * v45);
      }
      while (v49 == -1);
      unint64_t v14 = __clz(__rbit64(~v49)) + (v45 << 6);
    }
    LOBYTE(v77) = v25;
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    void *v15 = v20;
    v15[1] = v21;
    uint64_t v16 = *(void *)(v7 + 56) + 208 * v14;
    *(void *)uint64_t v16 = v59;
    *(void *)(v16 + 8) = v58;
    *(unsigned char *)(v16 + 16) = v60;
    *(void *)(v16 + 40) = v69;
    *(unsigned char *)(v16 + 48) = v25;
    *(void *)(v16 + 56) = v64;
    *(unsigned char *)(v16 + 64) = v26;
    *(void *)(v16 + 72) = v61;
    *(unsigned char *)(v16 + 80) = v27;
    *(void *)(v16 + 88) = v57;
    *(void *)(v16 + 96) = v56;
    *(void *)(v16 + 104) = v68;
    *(void *)(v16 + 112) = v66;
    *(void *)(v16 + 120) = v76;
    *(void *)(v16 + 128) = v75;
    *(void *)(v16 + 136) = v74;
    *(void *)(v16 + 144) = v72;
    *(void *)(v16 + 152) = v71;
    *(void *)(v16 + 160) = v70;
    *(void *)(v16 + 168) = v67;
    *(void *)(v16 + 176) = v65;
    *(void *)(v16 + 184) = v63;
    *(void *)(v16 + 192) = v62;
    *(unsigned char *)(v16 + 200) = v73;
    *(void *)(v16 + 24) = v23;
    *(void *)(v16 + 32) = v24;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v51;
  unint64_t v29 = v53;
  if ((v55 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v50 = 1 << *(unsigned char *)(v5 + 32);
  if (v50 >= 64) {
    bzero(v29, ((unint64_t)(v50 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v29 = -1 << v50;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D43D5A3C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1D42D5DA0(&qword_1EA6CAA48);
  char v38 = a2;
  uint64_t v6 = sub_1D446A4B8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    int64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((v38 & 1) == 0) {
      id v33 = v31;
    }
    sub_1D4469B38();
    sub_1D446A828();
    sub_1D4469BC8();
    uint64_t v14 = sub_1D446A888();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v23 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D43D5D68(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  unint64_t v47 = a6;
  uint64_t v50 = a5;
  uint64_t v8 = v6;
  uint64_t v10 = a3(0);
  uint64_t v48 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = *v6;
  sub_1D42D5DA0(a4);
  int v49 = a2;
  uint64_t v14 = sub_1D446A4B8();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_41;
  }
  uint64_t v16 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v17 = *(void *)(v13 + 64);
  char v46 = (void *)(v13 + 64);
  if (v16 < 64) {
    uint64_t v18 = ~(-1 << v16);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v17;
  unint64_t v44 = v6;
  int64_t v45 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v20 = v14 + 64;
  uint64_t result = swift_retain();
  int64_t v22 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v25 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v26 = v25 | (v22 << 6);
      goto LABEL_22;
    }
    int64_t v27 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v45) {
      break;
    }
    BOOL v28 = v46;
    unint64_t v29 = v46[v27];
    ++v22;
    if (!v29)
    {
      int64_t v22 = v27 + 1;
      if (v27 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v29 = v46[v22];
      if (!v29)
      {
        int64_t v30 = v27 + 2;
        if (v30 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v8 = v44;
          if ((v49 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v29 = v46[v30];
        if (!v29)
        {
          while (1)
          {
            int64_t v22 = v30 + 1;
            if (__OFADD__(v30, 1)) {
              goto LABEL_43;
            }
            if (v22 >= v45) {
              goto LABEL_34;
            }
            unint64_t v29 = v46[v22];
            ++v30;
            if (v29) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v30;
      }
    }
LABEL_21:
    unint64_t v19 = (v29 - 1) & v29;
    unint64_t v26 = __clz(__rbit64(v29)) + (v22 << 6);
LABEL_22:
    int64_t v31 = (uint64_t *)(*(void *)(v13 + 48) + 16 * v26);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    uint64_t v34 = *(void *)(v48 + 72);
    uint64_t v35 = *(void *)(v13 + 56) + v34 * v26;
    if (v49)
    {
      sub_1D42CAB38(v35, (uint64_t)v12, v50);
    }
    else
    {
      sub_1D42CA758(v35, (uint64_t)v12, v47);
      swift_bridgeObjectRetain();
    }
    sub_1D446A828();
    sub_1D4469BC8();
    uint64_t result = sub_1D446A888();
    uint64_t v36 = -1 << *(unsigned char *)(v15 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v20 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v37) & ~*(void *)(v20 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v20 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v23 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v24 = (void *)(*(void *)(v15 + 48) + 16 * v23);
    void *v24 = v33;
    v24[1] = v32;
    uint64_t result = sub_1D42CAB38((uint64_t)v12, *(void *)(v15 + 56) + v34 * v23, v50);
    ++*(void *)(v15 + 16);
  }
  swift_release();
  uint64_t v8 = v44;
  BOOL v28 = v46;
  if ((v49 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v13 + 32);
  if (v43 >= 64) {
    bzero(v28, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v28 = -1 << v43;
  }
  *(void *)(v13 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v8 = v15;
  return result;
}

uint64_t sub_1D43D6120(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1D42D5DA0(&qword_1EA6CA980);
  uint64_t v6 = sub_1D446A4B8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_22;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_40;
    }
    if (v16 >= v31) {
      break;
    }
    unint64_t v17 = v32[v16];
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v31) {
        break;
      }
      unint64_t v17 = v32[v12];
      if (!v17)
      {
        int64_t v18 = v16 + 2;
        if (v18 >= v31) {
          break;
        }
        unint64_t v17 = v32[v18];
        if (!v17)
        {
          while (1)
          {
            int64_t v12 = v18 + 1;
            if (__OFADD__(v18, 1)) {
              goto LABEL_41;
            }
            if (v12 >= v31) {
              goto LABEL_34;
            }
            unint64_t v17 = v32[v12];
            ++v18;
            if (v17) {
              goto LABEL_21;
            }
          }
        }
        int64_t v12 = v18;
      }
    }
LABEL_21:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_22:
    char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
    uint64_t v20 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v15);
    if (a2) {
      sub_1D42C5494(v20, v33);
    }
    else {
      sub_1D42CBAC0((uint64_t)v20, (uint64_t)v33);
    }
    sub_1D446A828();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_1D446A888();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v22) >> 6;
    do
    {
      if (++v24 == v26 && (v25 & 1) != 0)
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        JUMPOUT(0x1D43D64B4);
      }
      BOOL v27 = v24 == v26;
      if (v24 == v26) {
        unint64_t v24 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v11 + 8 * v24);
    }
    while (v28 == -1);
    unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
LABEL_7:
    *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v7 + 48) + v13) = v19;
    sub_1D42C5494(v33, (_OWORD *)(*(void *)(v7 + 56) + 32 * v13));
    ++*(void *)(v7 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v3 = v2;
  if (a2)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
    if (v29 >= 64) {
      bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v32 = -1 << v29;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D43D64C4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1D4469688();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1D42D5DA0(&qword_1EA6CA9C0);
  int v46 = a2;
  uint64_t v10 = sub_1D446A4B8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  unint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    char v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_1D42BF558(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1D4469AC8();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  char v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1D43D68E8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1D4469688();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1D42D5DA0(&qword_1EA6CA9A0);
  int v42 = a2;
  uint64_t v10 = sub_1D446A4B8();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v37 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    uint64_t v39 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    unint64_t v40 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v44 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_34;
        }
        unint64_t v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v23 = v39[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v37;
              if (v42)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v39 = -1 << v36;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v23 = v39[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
      if (v42) {
        (*v43)(v8, v26, v44);
      }
      else {
        (*v40)(v8, v26, v44);
      }
      uint64_t v27 = v9;
      char v28 = *(unsigned char *)(*(void *)(v9 + 56) + v21);
      sub_1D42BF558(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
      uint64_t result = sub_1D4469AC8();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v43)(*(void *)(v11 + 48) + v25 * v19, v8, v44);
      *(unsigned char *)(*(void *)(v11 + 56) + v19) = v28;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v27;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1D43D6D0C(uint64_t a1, int a2)
{
  return sub_1D43D6D18(a1, a2, &qword_1EA6CAA58);
}

uint64_t sub_1D43D6D18(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  uint64_t v7 = sub_1D4469688();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v3;
  sub_1D42D5DA0(a3);
  int v44 = a2;
  uint64_t v12 = sub_1D446A4B8();
  uint64_t v13 = v12;
  if (*(void *)(v11 + 16))
  {
    uint64_t v39 = v3;
    uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
    uint64_t v15 = *(void *)(v11 + 64);
    int64_t v41 = (void *)(v11 + 64);
    if (v14 < 64) {
      uint64_t v16 = ~(-1 << v14);
    }
    else {
      uint64_t v16 = -1;
    }
    unint64_t v17 = v16 & v15;
    int64_t v40 = (unint64_t)(v14 + 63) >> 6;
    int v42 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    uint64_t v45 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
    uint64_t v18 = v12 + 64;
    uint64_t result = swift_retain();
    int64_t v20 = 0;
    uint64_t v46 = v7;
    for (i = v8; ; uint64_t v8 = i)
    {
      if (v17)
      {
        unint64_t v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        unint64_t v23 = v22 | (v20 << 6);
      }
      else
      {
        int64_t v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v40) {
          goto LABEL_34;
        }
        unint64_t v25 = v41[v24];
        ++v20;
        if (!v25)
        {
          int64_t v20 = v24 + 1;
          if (v24 + 1 >= v40) {
            goto LABEL_34;
          }
          unint64_t v25 = v41[v20];
          if (!v25)
          {
            int64_t v26 = v24 + 2;
            if (v26 >= v40)
            {
LABEL_34:
              swift_release();
              uint64_t v5 = v39;
              if (v44)
              {
                uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
                if (v38 >= 64) {
                  bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v41 = -1 << v38;
                }
                *(void *)(v11 + 16) = 0;
              }
              break;
            }
            unint64_t v25 = v41[v26];
            if (!v25)
            {
              while (1)
              {
                int64_t v20 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_41;
                }
                if (v20 >= v40) {
                  goto LABEL_34;
                }
                unint64_t v25 = v41[v20];
                ++v26;
                if (v25) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v20 = v26;
          }
        }
LABEL_21:
        unint64_t v17 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      uint64_t v27 = *(void *)(v8 + 72);
      unint64_t v28 = *(void *)(v11 + 48) + v27 * v23;
      if (v44) {
        (*v45)(v10, v28, v46);
      }
      else {
        (*v42)(v10, v28, v46);
      }
      uint64_t v29 = v11;
      char v30 = *(unsigned char *)(*(void *)(v11 + 56) + v23);
      sub_1D42BF558(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
      uint64_t result = sub_1D4469AC8();
      uint64_t v31 = -1 << *(unsigned char *)(v13 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v18 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v45)(*(void *)(v13 + 48) + v27 * v21, v10, v46);
      *(unsigned char *)(*(void *)(v13 + 56) + v21) = v30;
      ++*(void *)(v13 + 16);
      uint64_t v11 = v29;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v5 = v13;
  return result;
}

uint64_t sub_1D43D713C(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  int64_t v52 = a6;
  uint64_t v58 = a5;
  uint64_t v8 = v6;
  uint64_t v10 = a3(0);
  uint64_t v54 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v60 = (uint64_t)&v47 - v11;
  uint64_t v12 = sub_1D4469688();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v56 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v6;
  sub_1D42D5DA0(a4);
  int v55 = a2;
  uint64_t v16 = sub_1D446A4B8();
  uint64_t v17 = v16;
  if (!*(void *)(v15 + 16)) {
    goto LABEL_41;
  }
  uint64_t v59 = v12;
  uint64_t v18 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v19 = *(void *)(v15 + 64);
  uint64_t v50 = (void *)(v15 + 64);
  if (v18 < 64) {
    uint64_t v20 = ~(-1 << v18);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v19;
  uint64_t v48 = v6;
  int64_t v49 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v51 = (void (**)(char *, unint64_t, uint64_t))(v13 + 16);
  uint64_t v57 = (void (**)(char *, unint64_t, uint64_t))(v13 + 32);
  uint64_t v22 = v16 + 64;
  uint64_t result = swift_retain();
  int64_t v24 = 0;
  uint64_t v53 = v15;
  unint64_t v25 = v56;
  while (1)
  {
    if (v21)
    {
      unint64_t v27 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v28 = v27 | (v24 << 6);
      goto LABEL_22;
    }
    int64_t v29 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v29 >= v49) {
      break;
    }
    char v30 = v50;
    unint64_t v31 = v50[v29];
    ++v24;
    if (!v31)
    {
      int64_t v24 = v29 + 1;
      if (v29 + 1 >= v49) {
        goto LABEL_34;
      }
      unint64_t v31 = v50[v24];
      if (!v31)
      {
        int64_t v32 = v29 + 2;
        if (v32 >= v49)
        {
LABEL_34:
          swift_release();
          uint64_t v8 = v48;
          if ((v55 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v31 = v50[v32];
        if (!v31)
        {
          while (1)
          {
            int64_t v24 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              goto LABEL_43;
            }
            if (v24 >= v49) {
              goto LABEL_34;
            }
            unint64_t v31 = v50[v24];
            ++v32;
            if (v31) {
              goto LABEL_21;
            }
          }
        }
        int64_t v24 = v32;
      }
    }
LABEL_21:
    unint64_t v21 = (v31 - 1) & v31;
    unint64_t v28 = __clz(__rbit64(v31)) + (v24 << 6);
LABEL_22:
    uint64_t v33 = v13;
    uint64_t v34 = *(void *)(v13 + 72);
    unint64_t v35 = *(void *)(v15 + 48) + v34 * v28;
    if (v55)
    {
      (*v57)(v25, v35, v59);
      uint64_t v36 = *(void *)(v15 + 56);
      uint64_t v37 = *(void *)(v54 + 72);
      sub_1D42CAB38(v36 + v37 * v28, v60, v58);
    }
    else
    {
      (*v51)(v25, v35, v59);
      uint64_t v38 = *(void *)(v15 + 56);
      uint64_t v37 = *(void *)(v54 + 72);
      sub_1D42CA758(v38 + v37 * v28, v60, v52);
    }
    sub_1D42BF558(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1D4469AC8();
    uint64_t v39 = -1 << *(unsigned char *)(v17 + 32);
    unint64_t v40 = result & ~v39;
    unint64_t v41 = v40 >> 6;
    if (((-1 << v40) & ~*(void *)(v22 + 8 * (v40 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v40) & ~*(void *)(v22 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
      unint64_t v25 = v56;
    }
    else
    {
      char v42 = 0;
      unint64_t v43 = (unint64_t)(63 - v39) >> 6;
      unint64_t v25 = v56;
      do
      {
        if (++v41 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v44 = v41 == v43;
        if (v41 == v43) {
          unint64_t v41 = 0;
        }
        v42 |= v44;
        uint64_t v45 = *(void *)(v22 + 8 * v41);
      }
      while (v45 == -1);
      unint64_t v26 = __clz(__rbit64(~v45)) + (v41 << 6);
    }
    *(void *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    (*v57)((char *)(*(void *)(v17 + 48) + v34 * v26), (unint64_t)v25, v59);
    uint64_t result = sub_1D42CAB38(v60, *(void *)(v17 + 56) + v37 * v26, v58);
    ++*(void *)(v17 + 16);
    uint64_t v15 = v53;
    uint64_t v13 = v33;
  }
  swift_release();
  uint64_t v8 = v48;
  char v30 = v50;
  if ((v55 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v46 = 1 << *(unsigned char *)(v15 + 32);
  if (v46 >= 64) {
    bzero(v30, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v30 = -1 << v46;
  }
  *(void *)(v15 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v8 = v17;
  return result;
}

uint64_t sub_1D43D7630(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1D42C4FCC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1D43D914C();
      goto LABEL_7;
    }
    sub_1D43D4368(v15, a4 & 1);
    unint64_t v22 = sub_1D42C4FCC(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1D446A7A8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19 + *(void *)(*(void *)(sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4D0) - 8) + 72) * v12;
    return sub_1D43E18D0(a1, v20);
  }
LABEL_13:
  sub_1D43D84FC(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

id sub_1D43D7798(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_1D43AEF30((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  id result = (id)(v10 + v11);
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= (uint64_t)result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= (uint64_t)result && (a3 & 1) == 0)
  {
    id result = sub_1D43D9DAC();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      *(void *)(v15[7] + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1D43D5A3C((uint64_t)result, a3 & 1);
  id result = (id)sub_1D43AEF30((uint64_t)a2);
  if ((v13 & 1) != (v16 & 1))
  {
LABEL_17:
    type metadata accessor for SPBeaconTaskName(0);
    id result = (id)sub_1D446A7A8();
    __break(1u);
    return result;
  }
  unint64_t v9 = (unint64_t)result;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v17 = 8 * v9;
  *(void *)(v15[6] + v17) = a2;
  *(void *)(v15[7] + v17) = a1;
  uint64_t v18 = v15[2];
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v20;
  return a2;
}

uint64_t sub_1D43D78F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1D42C4FCC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for FMIPMonitoredDevice(0);
      return sub_1D43E1868(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, type metadata accessor for FMIPMonitoredDevice);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1D43D9F98(type metadata accessor for FMIPMonitoredDevice, &qword_1EA6CADC8, type metadata accessor for FMIPMonitoredDevice, type metadata accessor for FMIPMonitoredDevice);
    goto LABEL_7;
  }
  sub_1D43D5D68(v15, a4 & 1, type metadata accessor for FMIPMonitoredDevice, &qword_1EA6CADC8, type metadata accessor for FMIPMonitoredDevice, type metadata accessor for FMIPMonitoredDevice);
  unint64_t v22 = sub_1D42C4FCC(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_1D446A7A8();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1D43D85A8(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D43D7AE4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1D4469688();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1D43AEE98(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1D43DA3CC();
    goto LABEL_7;
  }
  sub_1D43D64C4(v17, a3 & 1);
  unint64_t v23 = sub_1D43AEE98(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_1D446A7A8();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1D43D86BC(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1D43D7C8C(char a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1D4469688();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1D43AEE98(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      *(unsigned char *)(v20[7] + v14) = a1 & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1D43DA664();
    goto LABEL_7;
  }
  sub_1D43D68E8(result, a3 & 1);
  uint64_t result = sub_1D43AEE98(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    uint64_t result = sub_1D446A7A8();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1D43D8774(v14, (uint64_t)v11, a1 & 1, v20);
}

uint64_t sub_1D43D7E2C(int a1, uint64_t a2, char a3)
{
  return sub_1D43D7E44(a1, a2, a3, &qword_1EA6CA9B0);
}

uint64_t sub_1D43D7E38(int a1, uint64_t a2, char a3)
{
  return sub_1D43D7E44(a1, a2, a3, &qword_1EA6CAA58);
}

uint64_t sub_1D43D7E44(int a1, uint64_t a2, char a3, uint64_t *a4)
{
  uint64_t v6 = (void **)v4;
  int v24 = a1;
  uint64_t v9 = sub_1D4469688();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = (void *)*v4;
  unint64_t v15 = sub_1D43AEE98(a2);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t result = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    char v21 = *v6;
    if (v19)
    {
LABEL_8:
      *(unsigned char *)(v21[7] + v15) = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1D43DA900(a4);
    goto LABEL_7;
  }
  sub_1D43D6D18(result, a3 & 1, a4);
  uint64_t result = sub_1D43AEE98(a2);
  if ((v19 & 1) != (v22 & 1))
  {
LABEL_14:
    uint64_t result = sub_1D446A7A8();
    __break(1u);
    return result;
  }
  unint64_t v15 = result;
  char v21 = *v6;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  return sub_1D43D8774(v15, (uint64_t)v12, v24, v21);
}

uint64_t sub_1D43D7FF4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1D4469688();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1D43AEE98(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for FMIPDeviceLostModeMetadata();
      return sub_1D43E1868(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1D43DAB8C((uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata, &qword_1EA6CAA68, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
    goto LABEL_7;
  }
  sub_1D43D713C(v17, a3 & 1, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata, &qword_1EA6CAA68, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
  unint64_t v24 = sub_1D43AEE98(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_1D446A7A8();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1D43D885C(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
}

uint64_t sub_1D43D8278(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1D4469688();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1D43AEE98(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for FMIPDeviceConnectedState(0);
      return sub_1D43E1868(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, type metadata accessor for FMIPDeviceConnectedState);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1D43DAB8C(type metadata accessor for FMIPDeviceConnectedState, &qword_1EA6CADD0, type metadata accessor for FMIPDeviceConnectedState, type metadata accessor for FMIPDeviceConnectedState);
    goto LABEL_7;
  }
  sub_1D43D713C(v17, a3 & 1, type metadata accessor for FMIPDeviceConnectedState, &qword_1EA6CADD0, type metadata accessor for FMIPDeviceConnectedState, type metadata accessor for FMIPDeviceConnectedState);
  unint64_t v24 = sub_1D43AEE98(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_1D446A7A8();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1D43D885C(v14, (uint64_t)v11, a1, v20, type metadata accessor for FMIPDeviceConnectedState, type metadata accessor for FMIPDeviceConnectedState);
}

uint64_t sub_1D43D84FC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  void *v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4D0);
  uint64_t result = sub_1D4276C98(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, (uint64_t *)&unk_1EA6CA4D0);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_1D43D85A8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  void *v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for FMIPMonitoredDevice(0);
  uint64_t result = sub_1D42CAB38(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, type metadata accessor for FMIPMonitoredDevice);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

_OWORD *sub_1D43D8654(unint64_t a1, char a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t result = sub_1D42C5494(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_1D43D86BC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1D4469688();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_1D43D8774(unint64_t a1, uint64_t a2, char a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1D4469688();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(unsigned char *)(a4[7] + a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_1D43D8830(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1D43D885C(a1, a2, a3, a4, type metadata accessor for FMIPDeviceConnectedState, type metadata accessor for FMIPDeviceConnectedState);
}

uint64_t sub_1D43D885C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v12 = a4[6];
  uint64_t v13 = sub_1D4469688();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, a2, v13);
  uint64_t v14 = a4[7];
  uint64_t v15 = a5(0);
  uint64_t result = sub_1D42CAB38(a3, v14 + *(void *)(*(void *)(v15 - 8) + 72) * a1, a6);
  uint64_t v17 = a4[2];
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    a4[2] = v19;
  }
  return result;
}

void *sub_1D43D8950()
{
  unint64_t v1 = v0;
  uint64_t v28 = sub_1D4469688();
  uint64_t v2 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42D5DA0(&qword_1EA6CA9E0);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1D446A4A8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_23:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v23 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v14 = v28;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_25;
    }
    if (v10 >= v25)
    {
LABEL_21:
      uint64_t result = (void *)swift_release();
      unint64_t v1 = v23;
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v10);
    if (!v21) {
      break;
    }
LABEL_20:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v17, v14);
    uint64_t v18 = 8 * v16;
    unint64_t v19 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v17, v4, v14);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    uint64_t result = (void *)sub_1D42E8690(v19);
  }
  int64_t v22 = v10 + 1;
  if (v10 + 1 >= v25) {
    goto LABEL_21;
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    ++v10;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_21;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

id sub_1D43D8BE4()
{
  unint64_t v1 = v0;
  sub_1D42D5DA0(&qword_1EA6C9488);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D446A4A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D43D8D9C()
{
  unint64_t v1 = v0;
  sub_1D42D5DA0(&qword_1EBD7FDB8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D446A4A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1D43D8F58()
{
  return sub_1D43D93E0(&qword_1EA6CAA00);
}

id sub_1D43D8F64()
{
  unint64_t v1 = v0;
  sub_1D42D5DA0(&qword_1EA6CA340);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D446A4A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v30 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v13) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v6 + 8 * v30);
    ++v9;
    if (!v31)
    {
      int64_t v9 = v30 + 1;
      if (v30 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v31 = *(void *)(v6 + 8 * v9);
      if (!v31) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v31 - 1) & v31;
    unint64_t v15 = __clz(__rbit64(v31)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    char v22 = *(unsigned char *)v21;
    char v23 = *(unsigned char *)(v21 + 1);
    char v24 = *(unsigned char *)(v21 + 2);
    char v25 = *(unsigned char *)(v21 + 3);
    unint64_t v26 = *(void **)(v21 + 8);
    uint64_t v27 = *(void *)(v21 + 16);
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v28 = v19;
    v28[1] = v18;
    uint64_t v29 = *(void *)(v4 + 56) + v20;
    *(unsigned char *)uint64_t v29 = v22;
    *(unsigned char *)(v29 + 1) = v23;
    *(unsigned char *)(v29 + 2) = v24;
    *(unsigned char *)(v29 + 3) = v25;
    *(void *)(v29 + 8) = v26;
    *(void *)(v29 + 16) = v27;
    swift_bridgeObjectRetain();
    id result = v26;
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v13) {
    goto LABEL_26;
  }
  unint64_t v31 = *(void *)(v6 + 8 * v32);
  if (v31)
  {
    int64_t v9 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v6 + 8 * v9);
    ++v32;
    if (v31) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D43D914C()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4D0);
  uint64_t v28 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42D5DA0(&qword_1EA6CADE8);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1D446A4A8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  char v25 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v26 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v27 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v27) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v10;
    if (!v23)
    {
      int64_t v10 = v22 + 1;
      if (v22 + 1 >= v27) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v26 + 8 * v10);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    unint64_t v20 = *(void *)(v28 + 72) * v15;
    sub_1D42A3A74(*(void *)(v5 + 56) + v20, (uint64_t)v4, (uint64_t *)&unk_1EA6CA4D0);
    uint64_t v21 = (void *)(*(void *)(v7 + 48) + v16);
    *uint64_t v21 = v18;
    v21[1] = v19;
    sub_1D4276C98((uint64_t)v4, *(void *)(v7 + 56) + v20, (uint64_t *)&unk_1EA6CA4D0);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v27)
  {
LABEL_23:
    id result = (void *)swift_release();
    unint64_t v1 = v25;
    goto LABEL_25;
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
    int64_t v10 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v10);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1D43D93D4()
{
  return sub_1D43D93E0(&qword_1EA6CADF0);
}

id sub_1D43D93E0(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1D42D5DA0(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1D446A4A8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void **)(*(void *)(v3 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *int64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D43D958C()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42D5DA0(&qword_1EA6CADE0);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1D446A4A8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  unint64_t v24 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v9 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v25 + 72) * v17;
    sub_1D42CA758(*(void *)(v5 + 48) + v18, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    uint64_t v19 = 288 * v17;
    memcpy(v26, (const void *)(*(void *)(v5 + 56) + v19), 0x120uLL);
    sub_1D42CAB38((uint64_t)v4, *(void *)(v7 + 48) + v18, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    memcpy((void *)(*(void *)(v7 + 56) + v19), v26, 0x120uLL);
    id result = (void *)sub_1D42FC768((uint64_t)v26);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_23:
    id result = (void *)swift_release();
    unint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v9 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1D43D9834()
{
  uint64_t v1 = sub_1D4469688();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42D5DA0(&qword_1EA6CA970);
  uint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1D446A4A8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *uint64_t v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    unint64_t v18 = *(void **)(*(void *)(v5 + 56) + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1D43D9ACC()
{
  return sub_1D43D9F98((uint64_t (*)(void))type metadata accessor for FMIPItem, &qword_1EA6CADD8, (uint64_t (*)(void))type metadata accessor for FMIPItem, (uint64_t (*)(void))type metadata accessor for FMIPItem);
}

void *sub_1D43D9B14()
{
  return sub_1D43DAB8C(type metadata accessor for FMIPDeviceConnectedState, &qword_1EA6CADD0, type metadata accessor for FMIPDeviceConnectedState, type metadata accessor for FMIPDeviceConnectedState);
}

void *sub_1D43D9B5C()
{
  uint64_t v1 = v0;
  sub_1D42D5DA0(&qword_1EA6CAE08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D446A4A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v42 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v42 >= v13) {
      goto LABEL_26;
    }
    unint64_t v43 = *(void *)(v6 + 8 * v42);
    ++v9;
    if (!v43)
    {
      int64_t v9 = v42 + 1;
      if (v42 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v43 = *(void *)(v6 + 8 * v9);
      if (!v43) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v43 - 1) & v43;
    unint64_t v15 = __clz(__rbit64(v43)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    unint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = 208 * v15;
    long long v23 = *(_OWORD *)(v17 + v21 + 16);
    long long v22 = *(_OWORD *)(v17 + v21 + 32);
    long long v24 = *(_OWORD *)(v17 + v21 + 64);
    long long v48 = *(_OWORD *)(v17 + v21 + 48);
    long long v49 = v24;
    long long v25 = *(_OWORD *)(v17 + v21 + 128);
    long long v27 = *(_OWORD *)(v17 + v21 + 80);
    long long v26 = *(_OWORD *)(v17 + v21 + 96);
    long long v52 = *(_OWORD *)(v17 + v21 + 112);
    long long v53 = v25;
    long long v50 = v27;
    long long v51 = v26;
    long long v29 = *(_OWORD *)(v17 + v21 + 160);
    long long v28 = *(_OWORD *)(v17 + v21 + 176);
    long long v30 = *(_OWORD *)(v17 + v21 + 144);
    *(_OWORD *)((char *)v56 + 9) = *(_OWORD *)(v17 + v21 + 185);
    long long v55 = v29;
    v56[0] = v28;
    long long v54 = v30;
    long long v45 = *(_OWORD *)(v17 + v21);
    long long v46 = v23;
    long long v47 = v22;
    unint64_t v31 = (void *)(*(void *)(v4 + 48) + v16);
    void *v31 = v20;
    v31[1] = v19;
    int64_t v32 = (_OWORD *)(*(void *)(v4 + 56) + v21);
    *int64_t v32 = v45;
    long long v33 = v46;
    long long v34 = v47;
    long long v35 = v49;
    v32[3] = v48;
    v32[4] = v35;
    v32[1] = v33;
    v32[2] = v34;
    long long v36 = v50;
    long long v37 = v51;
    long long v38 = v53;
    v32[7] = v52;
    v32[8] = v38;
    v32[5] = v36;
    v32[6] = v37;
    long long v39 = v54;
    long long v40 = v55;
    long long v41 = v56[0];
    *(_OWORD *)((char *)v32 + 185) = *(_OWORD *)((char *)v56 + 9);
    v32[10] = v40;
    v32[11] = v41;
    v32[9] = v39;
    swift_bridgeObjectRetain();
    id result = sub_1D435C1C4(&v45);
  }
  int64_t v44 = v42 + 2;
  if (v44 >= v13) {
    goto LABEL_26;
  }
  unint64_t v43 = *(void *)(v6 + 8 * v44);
  if (v43)
  {
    int64_t v9 = v44;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v43 = *(void *)(v6 + 8 * v9);
    ++v44;
    if (v43) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1D43D9DAC()
{
  uint64_t v1 = v0;
  sub_1D42D5DA0(&qword_1EA6CAA48);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D446A4A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D43D9F50()
{
  return sub_1D43D9F98(type metadata accessor for FMIPMonitoredDevice, &qword_1EA6CADC8, type metadata accessor for FMIPMonitoredDevice, type metadata accessor for FMIPMonitoredDevice);
}

void *sub_1D43D9F98(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  long long v36 = a3;
  long long v37 = a4;
  uint64_t v6 = v4;
  uint64_t v7 = a1(0);
  uint64_t v35 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  int64_t v9 = (char *)&v32 - v8;
  sub_1D42D5DA0(a2);
  uint64_t v10 = *v4;
  uint64_t v11 = sub_1D446A4A8();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v6 = v12;
    return result;
  }
  long long v33 = v6;
  id result = (void *)(v11 + 64);
  unint64_t v14 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v14) {
    id result = memmove(result, (const void *)(v10 + 64), 8 * v14);
  }
  uint64_t v34 = v10 + 64;
  int64_t v16 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v17 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v10 + 64);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v29 >= v20) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v34 + 8 * v29);
    ++v16;
    if (!v30)
    {
      int64_t v16 = v29 + 1;
      if (v29 + 1 >= v20) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v34 + 8 * v16);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v19 = (v30 - 1) & v30;
    unint64_t v22 = __clz(__rbit64(v30)) + (v16 << 6);
LABEL_12:
    uint64_t v23 = 16 * v22;
    long long v24 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v22);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    unint64_t v27 = *(void *)(v35 + 72) * v22;
    sub_1D42CA758(*(void *)(v10 + 56) + v27, (uint64_t)v9, v36);
    long long v28 = (void *)(*(void *)(v12 + 48) + v23);
    *long long v28 = v25;
    v28[1] = v26;
    sub_1D42CAB38((uint64_t)v9, *(void *)(v12 + 56) + v27, v37);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v20)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v6 = v33;
    goto LABEL_28;
  }
  unint64_t v30 = *(void *)(v34 + 8 * v31);
  if (v30)
  {
    int64_t v16 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v16 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v16 >= v20) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v34 + 8 * v16);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D43DA20C()
{
  uint64_t v1 = v0;
  sub_1D42D5DA0(&qword_1EA6CA980);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D446A4A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_1D42CBAC0(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v20);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = v16;
    id result = sub_1D42C5494(v20, (_OWORD *)(*(void *)(v4 + 56) + 32 * v15));
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D43DA3CC()
{
  uint64_t v1 = sub_1D4469688();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42D5DA0(&qword_1EA6CA9C0);
  uint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1D446A4A8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *uint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1D43DA664()
{
  uint64_t v1 = sub_1D4469688();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42D5DA0(&qword_1EA6CA9A0);
  uint64_t v22 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1D446A4A8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *uint64_t v22 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v23 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v26 = v2 + 16;
  int64_t v24 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v25 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    char v17 = *(unsigned char *)(*(void *)(v5 + 56) + v15);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(unsigned char *)(*(void *)(v7 + 56) + v15) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v24) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1D43DA8F4()
{
  return sub_1D43DA900(&qword_1EA6CAA58);
}

void *sub_1D43DA900(uint64_t *a1)
{
  uint64_t v3 = sub_1D4469688();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42D5DA0(a1);
  uint64_t v25 = v1;
  uint64_t v7 = *v1;
  uint64_t v8 = sub_1D446A4A8();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v25 = v9;
    return result;
  }
  id result = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  uint64_t v26 = v7 + 64;
  int64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  uint64_t v29 = v4 + 16;
  int64_t v27 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v28 = v4 + 32;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v27) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v27) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v26 + 8 * v13);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(void *)(v7 + 48) + v19, v3);
    char v20 = *(unsigned char *)(*(void *)(v7 + 56) + v18);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(v9 + 48) + v19, v6, v3);
    *(unsigned char *)(*(void *)(v9 + 56) + v18) = v20;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v27) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v26 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D43DAB8C(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v35 = a3;
  long long v36 = a4;
  uint64_t v6 = a1(0);
  uint64_t v34 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = sub_1D4469688();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42D5DA0(a2);
  uint64_t v29 = v4;
  uint64_t v13 = *v4;
  uint64_t v14 = sub_1D446A4A8();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *uint64_t v29 = v15;
    return result;
  }
  id result = (void *)(v14 + 64);
  unint64_t v17 = (unint64_t)((1 << *(unsigned char *)(v15 + 32)) + 63) >> 6;
  if (v15 != v13 || (unint64_t)result >= v13 + 64 + 8 * v17) {
    id result = memmove(result, (const void *)(v13 + 64), 8 * v17);
  }
  uint64_t v30 = v13 + 64;
  int64_t v18 = 0;
  *(void *)(v15 + 16) = *(void *)(v13 + 16);
  uint64_t v19 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & *(void *)(v13 + 64);
  uint64_t v33 = v10 + 16;
  int64_t v31 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v32 = v10 + 32;
  while (1)
  {
    if (v21)
    {
      unint64_t v22 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v23 = v22 | (v18 << 6);
      goto LABEL_9;
    }
    int64_t v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v26 >= v31) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v26);
    ++v18;
    if (!v27)
    {
      int64_t v18 = v26 + 1;
      if (v26 + 1 >= v31) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v30 + 8 * v18);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v23 = __clz(__rbit64(v27)) + (v18 << 6);
LABEL_9:
    unint64_t v24 = *(void *)(v10 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, *(void *)(v13 + 48) + v24, v9);
    unint64_t v25 = *(void *)(v34 + 72) * v23;
    sub_1D42CA758(*(void *)(v13 + 56) + v25, (uint64_t)v8, v35);
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(*(void *)(v15 + 48) + v24, v12, v9);
    id result = (void *)sub_1D42CAB38((uint64_t)v8, *(void *)(v15 + 56) + v25, v36);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v31) {
    goto LABEL_23;
  }
  unint64_t v27 = *(void *)(v30 + 8 * v28);
  if (v27)
  {
    int64_t v18 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v18 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v18 >= v31) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v18);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t _s8FMIPCore12FMIPPartInfoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v8 && (sub_1D446A758() & 1) == 0) {
    return 0;
  }
  if (v3)
  {
    if (v5)
    {
      BOOL v9 = v2 == v6 && v3 == v5;
      if (v9 || (sub_1D446A758() & 1) != 0) {
        goto LABEL_13;
      }
    }
    return 0;
  }
  if (v5) {
    return 0;
  }
LABEL_13:
  return sub_1D441555C(v4, v7);
}

uint64_t _s8FMIPCore8FMIPItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPItemLostModeMetadata();
  uint64_t v226 = *(void *)(v4 - 8);
  uint64_t v227 = v4;
  MEMORY[0x1F4188790](v4);
  v223 = (id *)((char *)&v222 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7E710);
  MEMORY[0x1F4188790](v6 - 8);
  id v224 = (id *)((char *)&v222 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v225 = sub_1D42D5DA0(&qword_1EA6CA1B0);
  MEMORY[0x1F4188790](v225);
  uint64_t v228 = (uint64_t)&v222 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v229 = (int *)type metadata accessor for FMIPItem();
  uint64_t v9 = MEMORY[0x1F4188790](v229);
  uint64_t v11 = (char *)&v222 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v251 = (uint64_t)&v222 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v254 = (uint64_t)&v222 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v253 = (uint64_t)&v222 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v234 = (uint64_t)&v222 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v235 = (uint64_t)&v222 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v256 = (uint64_t)&v222 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v255 = (uint64_t)&v222 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v257 = (uint64_t)&v222 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v258 = (uint64_t)&v222 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v232 = (uint64_t)&v222 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v233 = (uint64_t)&v222 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v264 = (uint64_t)&v222 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v260 = (uint64_t)&v222 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  uint64_t v250 = (uint64_t)&v222 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  uint64_t v249 = (uint64_t)&v222 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  uint64_t v231 = (uint64_t)&v222 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  uint64_t v263 = (uint64_t)&v222 - v45;
  uint64_t v46 = MEMORY[0x1F4188790](v44);
  uint64_t v261 = (uint64_t)&v222 - v47;
  uint64_t v48 = MEMORY[0x1F4188790](v46);
  uint64_t v262 = (uint64_t)&v222 - v49;
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  uint64_t v247 = (double *)((char *)&v222 - v51);
  uint64_t v52 = MEMORY[0x1F4188790](v50);
  v248 = (char *)&v222 - v53;
  uint64_t v54 = MEMORY[0x1F4188790](v52);
  uint64_t v246 = (uint64_t)&v222 - v55;
  uint64_t v56 = MEMORY[0x1F4188790](v54);
  uint64_t v245 = (uint64_t)&v222 - v57;
  uint64_t v58 = MEMORY[0x1F4188790](v56);
  uint64_t v244 = (uint64_t)&v222 - v59;
  uint64_t v60 = MEMORY[0x1F4188790](v58);
  uint64_t v243 = (uint64_t)&v222 - v61;
  uint64_t v62 = MEMORY[0x1F4188790](v60);
  uint64_t v266 = (uint64_t)&v222 - v63;
  uint64_t v64 = MEMORY[0x1F4188790](v62);
  uint64_t v242 = (uint64_t)&v222 - v65;
  uint64_t v66 = MEMORY[0x1F4188790](v64);
  v241 = (char *)&v222 - v67;
  uint64_t v68 = MEMORY[0x1F4188790](v66);
  uint64_t v240 = (uint64_t)&v222 - v69;
  uint64_t v70 = MEMORY[0x1F4188790](v68);
  id v239 = (char *)&v222 - v71;
  uint64_t v72 = MEMORY[0x1F4188790](v70);
  uint64_t v238 = (uint64_t)&v222 - v73;
  uint64_t v74 = MEMORY[0x1F4188790](v72);
  uint64_t v265 = (uint64_t)&v222 - v75;
  uint64_t v76 = MEMORY[0x1F4188790](v74);
  uint64_t v237 = (char *)&v222 - v77;
  uint64_t v78 = MEMORY[0x1F4188790](v76);
  long long v80 = (double *)((char *)&v222 - v79);
  uint64_t v81 = MEMORY[0x1F4188790](v78);
  uint64_t v236 = (uint64_t)&v222 - v82;
  uint64_t v83 = MEMORY[0x1F4188790](v81);
  long long v85 = (char *)&v222 - v84;
  uint64_t v86 = MEMORY[0x1F4188790](v83);
  uint64_t v88 = (char *)&v222 - v87;
  uint64_t v89 = MEMORY[0x1F4188790](v86);
  unint64_t v91 = (char *)&v222 - v90;
  MEMORY[0x1F4188790](v89);
  unint64_t v93 = (char *)&v222 - v92;
  uint64_t v259 = a1;
  sub_1D4276C98(a1 + 8, (uint64_t)v278, &qword_1EBD7CC10);
  sub_1D4276C98(a2 + 8, (uint64_t)v279, &qword_1EBD7CC10);
  sub_1D4276C98((uint64_t)v278, (uint64_t)v280, &qword_1EBD7CC10);
  int v94 = sub_1D42FE02C((uint64_t)v280);
  unint64_t v252 = v11;
  if (v94 == 1)
  {
    sub_1D4276C98((uint64_t)v279, (uint64_t)&v272, &qword_1EBD7CC10);
    if (sub_1D42FE02C((uint64_t)&v272) == 1)
    {
      uint64_t v95 = v259;
      sub_1D42CA758(v259, (uint64_t)v93, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      sub_1D42CA758(a2, (uint64_t)v91, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  sub_1D4276C98((uint64_t)v278, (uint64_t)v271, &qword_1EBD7CC10);
  sub_1D4276C98((uint64_t)v279, (uint64_t)&v272, &qword_1EBD7CC10);
  if (sub_1D42FE02C((uint64_t)&v272) == 1)
  {
    memcpy(v269, v271, sizeof(v269));
    sub_1D4276C98((uint64_t)v278, (uint64_t)v270, &qword_1EBD7CC10);
    sub_1D42FC768((uint64_t)v270);
    sub_1D42FC768((uint64_t)v270);
    sub_1D42FC8A4((uint64_t)v269);
LABEL_6:
    sub_1D4276C98((uint64_t)v278, (uint64_t)&v272, &qword_1EBD7CC10);
    sub_1D4276C98((uint64_t)v279, (uint64_t)&v277, &qword_1EBD7CC10);
    sub_1D42FAC78((uint64_t)v279, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
    sub_1D42FE044((uint64_t)&v272);
    uint64_t v95 = v259;
    sub_1D42CA758(v259, (uint64_t)v93, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(a2, (uint64_t)v91, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_7:
    sub_1D42CA948((uint64_t)v91, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(v95, (uint64_t)v88, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(a2, (uint64_t)v85, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_17:
    sub_1D42CA948((uint64_t)v85, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948((uint64_t)v88, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v102 = v236;
    sub_1D42CA758(v95, v236, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(a2, (uint64_t)v80, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v103 = (uint64_t)v241;
    uint64_t v104 = (uint64_t)v237;
LABEL_18:
    sub_1D42CA948((uint64_t)v80, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v102, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v113 = v266;
    uint64_t v107 = (uint64_t)v239;
LABEL_19:
    sub_1D42CA758(v95, v104, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v112 = v265;
    sub_1D42CA758(a2, v265, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    goto LABEL_20;
  }
  sub_1D4276C98((uint64_t)v279, (uint64_t)v268, &qword_1EBD7CC10);
  memcpy(v267, v268, sizeof(v267));
  char v96 = _s8FMIPCore11FMIPAddressV2eeoiySbAC_ACtFZ_0(v271, v267);
  memcpy(v269, v271, sizeof(v269));
  sub_1D4276C98((uint64_t)v278, (uint64_t)v270, &qword_1EBD7CC10);
  sub_1D42FC768((uint64_t)v270);
  sub_1D42FC8A4((uint64_t)v269);
  uint64_t v95 = v259;
  sub_1D42CA758(v259, (uint64_t)v93, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA758(a2, (uint64_t)v91, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  if ((v96 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_9:
  int v97 = v93[296];
  uint64_t v230 = a2;
  int v98 = v91[296];
  sub_1D42CA948((uint64_t)v91, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA948((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA758(v95, (uint64_t)v88, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA758(v230, (uint64_t)v85, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  BOOL v99 = v97 == v98;
  a2 = v230;
  if (!v99) {
    goto LABEL_17;
  }
  uint64_t v100 = *((void *)v88 + 38);
  uint64_t v101 = *((void *)v85 + 38);
  sub_1D42CA948((uint64_t)v85, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA948((uint64_t)v88, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v102 = v236;
  sub_1D42CA758(v95, v236, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA758(v230, (uint64_t)v80, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  BOOL v99 = v100 == v101;
  a2 = v230;
  uint64_t v103 = (uint64_t)v241;
  uint64_t v104 = (uint64_t)v237;
  if (!v99) {
    goto LABEL_18;
  }
  uint64_t v105 = *(void **)(v102 + 320);
  uint64_t v106 = (void *)*((void *)v80 + 40);
  uint64_t v107 = (uint64_t)v239;
  if (!v105)
  {
    id v222 = v106;
    sub_1D42CA948((uint64_t)v80, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v102, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    if (!v106)
    {
      sub_1D42CA758(v95, v104, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v112 = v265;
      sub_1D42CA758(a2, v265, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      goto LABEL_46;
    }
    id v145 = 0;
    uint64_t v113 = v266;
    uint64_t v146 = v222;
LABEL_44:

    goto LABEL_19;
  }
  uint64_t v108 = *((void *)v80 + 39);
  double v109 = v80[41];
  uint64_t v110 = *(void *)(v102 + 328);
  uint64_t v272 = *(void *)(v102 + 312);
  id v273 = v105;
  uint64_t v274 = v110;
  if (!v106)
  {
    id v145 = v105;
    sub_1D42CA948((uint64_t)v80, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v102, (uint64_t (*)(void))type metadata accessor for FMIPItem);

    uint64_t v146 = 0;
    uint64_t v113 = v266;
    goto LABEL_44;
  }
  LOWORD(v271[0]) = v108 & 0x101;
  BYTE2(v271[0]) = BYTE2(v108) & 1;
  BYTE3(v271[0]) = BYTE3(v108);
  *(void *)&v271[1] = v106;
  v271[2] = v109;
  id v111 = v105;
  LODWORD(v222) = _s8FMIPCore12FMIPLocationV2eeoiySbAC_ACtFZ_0((double *)&v272, v271);
  sub_1D42CA948((uint64_t)v80, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA948(v102, (uint64_t (*)(void))type metadata accessor for FMIPItem);

  sub_1D42CA758(v95, v104, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v112 = v265;
  sub_1D42CA758(a2, v265, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v113 = v266;
  if ((v222 & 1) == 0)
  {
LABEL_20:
    sub_1D42CA948(v112, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v104, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_21:
    uint64_t v114 = v238;
    sub_1D42CA758(v95, v238, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(a2, v107, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v115 = v263;
    uint64_t v116 = v264;
LABEL_22:
    sub_1D42CA948(v114, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v107, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v117 = v240;
    sub_1D42CA758(v95, v240, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(a2, v103, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_23:
    sub_1D42CA948(v117, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v103, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v118 = v242;
    sub_1D42CA758(v95, v242, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(a2, v113, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_24:
    sub_1D42CA948(v113, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v118, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v119 = v243;
    sub_1D42CA758(v95, v243, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v120 = v244;
    sub_1D42CA758(a2, v244, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v121 = (uint64_t)v248;
LABEL_25:
    sub_1D42CA948(v120, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v119, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v122 = v245;
    sub_1D42CA758(v95, v245, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v123 = v246;
    sub_1D42CA758(a2, v246, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v124 = v247;
LABEL_26:
    sub_1D42CA948(v123, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v122, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(v95, v121, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(a2, (uint64_t)v124, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_27:
    sub_1D42CA948((uint64_t)v124, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v121, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_28:
    uint64_t v125 = v262;
    sub_1D42CA758(v95, v262, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v126 = v261;
    sub_1D42CA758(a2, v261, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_29:
    sub_1D42CA948(v126, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v125, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v127 = v260;
LABEL_30:
    uint64_t v128 = v231;
    sub_1D42CA758(v95, v115, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(a2, v128, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_31:
    sub_1D42CA948(v115, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v128, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v129 = v249;
    sub_1D42CA758(v95, v249, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v130 = v250;
    sub_1D42CA758(a2, v250, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_32:
    sub_1D42CA948(v129, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v130, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(v95, v127, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(a2, v116, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_33:
    sub_1D42CA948(v116, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v127, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_34:
    uint64_t v132 = v257;
    uint64_t v131 = v258;
    uint64_t v133 = v232;
    uint64_t v134 = v233;
    sub_1D42CA758(v95, v233, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(a2, v133, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_35:
    sub_1D42CA948(v133, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v134, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(v95, v131, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(a2, v132, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_36:
    sub_1D42CA948(v132, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v131, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v135 = v255;
    sub_1D42CA758(v95, v255, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v136 = v256;
    sub_1D42CA758(a2, v256, (uint64_t (*)(void))type metadata accessor for FMIPItem);
LABEL_37:
    sub_1D42CA948(v135, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v136, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v137 = v235;
    sub_1D42CA758(v95, v235, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v138 = v234;
    sub_1D42CA758(a2, v234, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v140 = v253;
    uint64_t v139 = v254;
LABEL_38:
    sub_1D42CA948(v138, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v137, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(v95, v140, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(a2, v139, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    goto LABEL_39;
  }
LABEL_46:
  uint64_t v147 = *(void *)(v104 + 344);
  uint64_t v148 = *(void *)(v112 + 344);
  if (!v147)
  {
    swift_bridgeObjectRetain();
    sub_1D42CA948(v112, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v104, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    if (!v148) {
      goto LABEL_52;
    }
LABEL_54:
    swift_bridgeObjectRelease();
    uint64_t v113 = v266;
    goto LABEL_21;
  }
  if (!v148)
  {
    swift_bridgeObjectRetain();
    sub_1D42CA948(v112, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v104, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    goto LABEL_54;
  }
  if (*(void *)(v104 + 336) == *(void *)(v112 + 336) && v147 == v148)
  {
    swift_bridgeObjectRetain();
    sub_1D42CA948(v265, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v104, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    swift_bridgeObjectRelease();
LABEL_52:
    uint64_t v114 = v238;
    sub_1D42CA758(v95, v238, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(a2, v107, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v115 = v263;
    uint64_t v116 = v264;
    uint64_t v113 = v266;
    goto LABEL_56;
  }
  LODWORD(v236) = sub_1D446A758();
  swift_bridgeObjectRetain();
  sub_1D42CA948(v265, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA948(v104, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  swift_bridgeObjectRelease();
  uint64_t v114 = v238;
  sub_1D42CA758(v95, v238, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA758(a2, v107, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v115 = v263;
  uint64_t v116 = v264;
  uint64_t v113 = v266;
  if ((v236 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_56:
  if (*(void *)(v114 + 352) == *(void *)(v107 + 352) && *(void *)(v114 + 360) == *(void *)(v107 + 360))
  {
    sub_1D42CA948(v114, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v107, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v117 = v240;
    sub_1D42CA758(v95, v240, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(a2, v103, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  }
  else
  {
    char v149 = sub_1D446A758();
    sub_1D42CA948(v114, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v107, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v117 = v240;
    sub_1D42CA758(v95, v240, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v113 = v266;
    sub_1D42CA758(a2, v103, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    if ((v149 & 1) == 0) {
      goto LABEL_23;
    }
  }
  if (*(void *)(v117 + 368) == *(void *)(v103 + 368) && *(void *)(v117 + 376) == *(void *)(v103 + 376))
  {
    sub_1D42CA948(v117, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v103, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v118 = v242;
    sub_1D42CA758(v95, v242, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(a2, v113, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v150 = v229;
  }
  else
  {
    char v151 = sub_1D446A758();
    sub_1D42CA948(v117, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v103, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v118 = v242;
    sub_1D42CA758(v95, v242, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA758(a2, v113, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v150 = v229;
    if ((v151 & 1) == 0) {
      goto LABEL_24;
    }
  }
  int v152 = *(unsigned __int8 *)(v118 + v150[21]);
  sub_1D42CA948(v118, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  LODWORD(v266) = *(unsigned __int8 *)(v113 + v150[21]);
  sub_1D42CA948(v113, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v119 = v243;
  sub_1D42CA758(v95, v243, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v120 = v244;
  sub_1D42CA758(v230, v244, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  BOOL v99 = v152 == v266;
  a2 = v230;
  uint64_t v121 = (uint64_t)v248;
  if (!v99) {
    goto LABEL_25;
  }
  LODWORD(v266) = *(unsigned __int8 *)(v119 + v150[22]);
  sub_1D42CA948(v119, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  int v153 = *(unsigned __int8 *)(v120 + v150[22]);
  sub_1D42CA948(v120, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v122 = v245;
  sub_1D42CA758(v95, v245, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v123 = v246;
  sub_1D42CA758(v230, v246, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  BOOL v99 = v266 == v153;
  a2 = v230;
  uint64_t v124 = v247;
  if (!v99) {
    goto LABEL_26;
  }
  uint64_t v154 = v229;
  LODWORD(v266) = *(unsigned __int8 *)(v122 + v229[25]);
  sub_1D42CA948(v122, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v155 = v123;
  int v156 = *(unsigned __int8 *)(v123 + v154[25]);
  sub_1D42CA948(v155, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA758(v95, v121, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA758(v230, (uint64_t)v124, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  a2 = v230;
  if (v266 != v156) {
    goto LABEL_27;
  }
  id v157 = *(void **)(v121 + 392);
  char v158 = (void *)*((void *)v124 + 49);
  if (!v157)
  {
    id v166 = v158;
    sub_1D42CA948((uint64_t)v124, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v121, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v126 = v261;
    uint64_t v125 = v262;
    if (!v158)
    {
      sub_1D42CA758(v95, v262, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      sub_1D42CA758(a2, v126, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      goto LABEL_78;
    }
    id v167 = 0;
LABEL_76:

    uint64_t v115 = v263;
    uint64_t v116 = v264;
    goto LABEL_28;
  }
  uint64_t v159 = *((void *)v124 + 48);
  double v160 = v124[50];
  uint64_t v161 = *(void *)(v121 + 400);
  uint64_t v272 = *(void *)(v121 + 384);
  id v273 = v157;
  uint64_t v274 = v161;
  uint64_t v162 = v121;
  uint64_t v126 = v261;
  uint64_t v163 = v262;
  if (!v158)
  {
    id v167 = v157;
    sub_1D42CA948((uint64_t)v124, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v162, (uint64_t (*)(void))type metadata accessor for FMIPItem);

    id v166 = 0;
    goto LABEL_76;
  }
  LOWORD(v271[0]) = v159 & 0x101;
  BYTE2(v271[0]) = BYTE2(v159) & 1;
  BYTE3(v271[0]) = BYTE3(v159);
  *(void *)&v271[1] = v158;
  v271[2] = v160;
  id v164 = v157;
  char v165 = _s8FMIPCore12FMIPLocationV2eeoiySbAC_ACtFZ_0((double *)&v272, v271);
  sub_1D42CA948((uint64_t)v124, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA948(v162, (uint64_t (*)(void))type metadata accessor for FMIPItem);

  sub_1D42CA758(v95, v163, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA758(a2, v126, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v125 = v163;
  uint64_t v115 = v263;
  uint64_t v116 = v264;
  if ((v165 & 1) == 0) {
    goto LABEL_29;
  }
LABEL_78:
  uint64_t v168 = v228;
  uint64_t v169 = v229[13];
  uint64_t v170 = v126 + v169;
  uint64_t v171 = v228 + *(int *)(v225 + 48);
  sub_1D42A3A74(v125 + v169, v228, &qword_1EBD7E710);
  uint64_t v266 = v171;
  sub_1D42A3A74(v170, v171, &qword_1EBD7E710);
  uint64_t v172 = v227;
  uint64_t v173 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v226 + 48);
  if (v173(v168, 1, v227) == 1)
  {
    sub_1D42CA948(v126, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v125, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    if (v173(v266, 1, v172) == 1)
    {
      sub_1D4276C3C(v168, &qword_1EBD7E710);
      uint64_t v115 = v263;
      sub_1D42CA758(v95, v263, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v128 = v231;
      sub_1D42CA758(a2, v231, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v116 = v264;
      goto LABEL_85;
    }
LABEL_83:
    sub_1D4276C3C(v168, &qword_1EA6CA1B0);
    uint64_t v127 = v260;
    uint64_t v115 = v263;
    uint64_t v116 = v264;
    goto LABEL_30;
  }
  uint64_t v174 = v224;
  sub_1D42A3A74(v168, (uint64_t)v224, &qword_1EBD7E710);
  if (v173(v266, 1, v172) == 1)
  {
    sub_1D42CA948(v126, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v125, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948((uint64_t)v174, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
    goto LABEL_83;
  }
  uint64_t v175 = v223;
  sub_1D42CAB38(v266, (uint64_t)v223, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
  LODWORD(v266) = _s8FMIPCore24FMIPItemLostModeMetadataV2eeoiySbAC_ACtFZ_0(v174, v175);
  sub_1D42CA948((uint64_t)v175, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
  sub_1D42CA948(v126, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA948(v125, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA948((uint64_t)v174, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
  sub_1D4276C3C(v168, &qword_1EBD7E710);
  uint64_t v115 = v263;
  sub_1D42CA758(v95, v263, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v128 = v231;
  sub_1D42CA758(a2, v231, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v127 = v260;
  uint64_t v116 = v264;
  if ((v266 & 1) == 0) {
    goto LABEL_31;
  }
LABEL_85:
  uint64_t v176 = v229[14];
  uint64_t v177 = *(void *)(v115 + v176);
  uint64_t v178 = *(void *)(v115 + v176 + 8);
  v179 = (void *)(v128 + v176);
  if (v177 == *v179 && v178 == v179[1])
  {
    sub_1D42CA948(v115, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v128, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v129 = v249;
    sub_1D42CA758(v95, v249, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v130 = v250;
    sub_1D42CA758(a2, v250, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  }
  else
  {
    char v180 = sub_1D446A758();
    sub_1D42CA948(v115, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v128, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v129 = v249;
    sub_1D42CA758(v95, v249, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v130 = v250;
    sub_1D42CA758(a2, v250, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v127 = v260;
    if ((v180 & 1) == 0) {
      goto LABEL_32;
    }
  }
  uint64_t v181 = v229[15];
  uint64_t v182 = *(void *)(v129 + v181);
  uint64_t v183 = *(void *)(v129 + v181 + 8);
  v184 = (void *)(v130 + v181);
  if (v182 == *v184 && v183 == v184[1])
  {
    sub_1D42CA948(v129, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v130, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v127 = v260;
    sub_1D42CA758(v95, v260, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v116 = v264;
    sub_1D42CA758(a2, v264, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  }
  else
  {
    char v185 = sub_1D446A758();
    sub_1D42CA948(v129, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v130, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v186 = v260;
    sub_1D42CA758(v95, v260, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v116 = v264;
    uint64_t v127 = v186;
    sub_1D42CA758(a2, v264, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    if ((v185 & 1) == 0) {
      goto LABEL_33;
    }
  }
  uint64_t v187 = v229[16];
  uint64_t v189 = *(void *)(v127 + v187);
  id v188 = *(void **)(v127 + v187 + 8);
  uint64_t v190 = *(void *)(v127 + v187 + 16);
  uint64_t v191 = *(void *)(v127 + v187 + 24);
  char v192 = *(unsigned char *)(v127 + v187 + 32);
  uint64_t v193 = v116 + v187;
  uint64_t v195 = *(void *)v193;
  uint64_t v194 = *(void *)(v193 + 8);
  double v196 = *(double *)(v193 + 16);
  uint64_t v265 = *(void *)(v193 + 24);
  LODWORD(v266) = *(unsigned __int8 *)(v193 + 32);
  if (!v188)
  {
    sub_1D43DD670(v195, v194);
    sub_1D42CA948(v264, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v260, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    if (!v194)
    {
      sub_1D43DD898(v189, 0);
      uint64_t v95 = v259;
      uint64_t v134 = v233;
      sub_1D42CA758(v259, v233, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      a2 = v230;
      uint64_t v133 = v232;
      sub_1D42CA758(v230, v232, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v132 = v257;
      uint64_t v131 = v258;
      goto LABEL_99;
    }
LABEL_108:
    sub_1D43DD898(v189, (uint64_t)v188);
    sub_1D43DD898(v195, v194);
    a2 = v230;
    uint64_t v95 = v259;
    goto LABEL_34;
  }
  uint64_t v272 = v189;
  id v273 = v188;
  uint64_t v274 = v190;
  uint64_t v275 = v191;
  char v276 = v192;
  if (!v194)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1D42CA948(v264, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v260, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_108;
  }
  *(void *)&v271[0] = v195;
  *(void *)&v271[1] = v194;
  v271[2] = v196;
  *(void *)&v271[3] = v265;
  LOBYTE(v271[4]) = v266;
  sub_1D43DD670(v189, (uint64_t)v188);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v197 = _s8FMIPCore12FMIPPartInfoV2eeoiySbAC_ACtFZ_0((uint64_t)&v272, (uint64_t)v271);
  sub_1D42CA948(v264, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA948(v260, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D43DD898(v189, (uint64_t)v188);
  uint64_t v95 = v259;
  uint64_t v134 = v233;
  sub_1D42CA758(v259, v233, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  a2 = v230;
  uint64_t v133 = v232;
  sub_1D42CA758(v230, v232, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v132 = v257;
  uint64_t v131 = v258;
  if ((v197 & 1) == 0) {
    goto LABEL_35;
  }
LABEL_99:
  BOOL v198 = _s8FMIPCore15FMIPProductTypeO2eeoiySbAC_ACtFZ_0(v134 + v229[24], v133 + v229[24]);
  sub_1D42CA948(v133, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA948(v134, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA758(v95, v131, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA758(a2, v132, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  if (!v198) {
    goto LABEL_36;
  }
  uint64_t v199 = v229[17];
  v200 = (void *)(v131 + v199);
  uint64_t v201 = *(void *)(v131 + v199);
  v202 = (void *)(v132 + v199);
  if (v201 != *v202) {
    goto LABEL_36;
  }
  uint64_t v203 = v200[1];
  uint64_t v204 = v200[2];
  uint64_t v205 = v202[1];
  uint64_t v206 = v202[2];
  if ((v200[3] != v202[3] || v200[4] != v202[4]) && (sub_1D446A758() & 1) == 0) {
    goto LABEL_36;
  }
  if (v203 == v205 && v204 == v206)
  {
    sub_1D42CA948(v257, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v258, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v135 = v255;
    sub_1D42CA758(v259, v255, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v136 = v256;
    sub_1D42CA758(v230, v256, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  }
  else
  {
    char v207 = sub_1D446A758();
    sub_1D42CA948(v257, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v258, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v95 = v259;
    uint64_t v135 = v255;
    sub_1D42CA758(v259, v255, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    a2 = v230;
    uint64_t v136 = v256;
    sub_1D42CA758(v230, v256, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    if ((v207 & 1) == 0) {
      goto LABEL_37;
    }
  }
  uint64_t v208 = v229[18];
  uint64_t v209 = *(void *)(v135 + v208);
  uint64_t v210 = *(void *)(v135 + v208 + 8);
  unint64_t v211 = (void *)(v136 + v208);
  if (v209 == *v211 && v210 == v211[1])
  {
    sub_1D42CA948(v255, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v256, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v95 = v259;
    uint64_t v137 = v235;
    sub_1D42CA758(v259, v235, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v138 = v234;
    sub_1D42CA758(v230, v234, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v140 = v253;
    uint64_t v139 = v254;
  }
  else
  {
    char v212 = sub_1D446A758();
    sub_1D42CA948(v255, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D42CA948(v256, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v95 = v259;
    uint64_t v137 = v235;
    sub_1D42CA758(v259, v235, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    a2 = v230;
    uint64_t v138 = v234;
    sub_1D42CA758(v230, v234, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v140 = v253;
    uint64_t v139 = v254;
    if ((v212 & 1) == 0) {
      goto LABEL_38;
    }
  }
  uint64_t v213 = v229[19];
  uint64_t v214 = *(void *)(v137 + v213);
  uint64_t v215 = v138;
  uint64_t v216 = *(void *)(v138 + v213);
  sub_1D42CA948(v215, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA948(v137, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA758(v95, v140, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA758(v230, v139, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  BOOL v99 = v214 == v216;
  a2 = v230;
  if (v99)
  {
    uint64_t v217 = v229[20];
    uint64_t v218 = *(void *)(v140 + v217);
    uint64_t v219 = *(void *)(v140 + v217 + 8);
    v220 = (void *)(v139 + v217);
    if (v218 == *v220 && v219 == v220[1])
    {
      sub_1D42CA948(v253, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      sub_1D42CA948(v254, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v141 = v251;
      sub_1D42CA758(v259, v251, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v142 = (uint64_t)v252;
      sub_1D42CA758(v230, (uint64_t)v252, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    }
    else
    {
      char v221 = sub_1D446A758();
      sub_1D42CA948(v253, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      sub_1D42CA948(v254, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v141 = v251;
      sub_1D42CA758(v259, v251, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      uint64_t v142 = (uint64_t)v252;
      sub_1D42CA758(v230, (uint64_t)v252, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      char v143 = 0;
      if ((v221 & 1) == 0) {
        goto LABEL_40;
      }
    }
    char v143 = sub_1D42D96BC(*(void *)(v141 + v229[23]), *(void *)(v142 + v229[23]));
    goto LABEL_40;
  }
LABEL_39:
  sub_1D42CA948(v140, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA948(v139, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v141 = v251;
  sub_1D42CA758(v95, v251, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  uint64_t v142 = (uint64_t)v252;
  sub_1D42CA758(a2, (uint64_t)v252, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  char v143 = 0;
LABEL_40:
  sub_1D42CA948(v141, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  sub_1D42CA948(v142, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  return v143 & 1;
}

uint64_t sub_1D43DD670(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D43DD6B4@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1D43D2D54(a1, a2, *(void **)(v3 + 16), a3);
}

void sub_1D43DD6BC(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  sub_1D43D2E04(a1, a2, a3, *(void **)(v4 + 16), a4);
}

BOOL sub_1D43DD6C4(id *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  unsigned int v3 = objc_msgSend(*a1, sel_partIdentifier);
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  sub_1D42C26F4(v2, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 64))(v4, v5) == v3;
}

unint64_t sub_1D43DD748()
{
  unint64_t result = qword_1EA6CACD0;
  if (!qword_1EA6CACD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CACD0);
  }
  return result;
}

unint64_t sub_1D43DD79C()
{
  unint64_t result = qword_1EA6CACD8;
  if (!qword_1EA6CACD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CACD8);
  }
  return result;
}

unint64_t sub_1D43DD7F0()
{
  unint64_t result = qword_1EA6CACE8;
  if (!qword_1EA6CACE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CACE8);
  }
  return result;
}

unint64_t sub_1D43DD844()
{
  unint64_t result = qword_1EA6CACF8;
  if (!qword_1EA6CACF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CACF8);
  }
  return result;
}

uint64_t sub_1D43DD898(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1D43DD8DC()
{
  unint64_t result = qword_1EA6CAD00;
  if (!qword_1EA6CAD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAD00);
  }
  return result;
}

unint64_t sub_1D43DD930()
{
  unint64_t result = qword_1EA6CAD10;
  if (!qword_1EA6CAD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAD10);
  }
  return result;
}

unint64_t sub_1D43DD984()
{
  unint64_t result = qword_1EA6CAD18;
  if (!qword_1EA6CAD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAD18);
  }
  return result;
}

unint64_t sub_1D43DD9D8()
{
  unint64_t result = qword_1EA6CAD30;
  if (!qword_1EA6CAD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAD30);
  }
  return result;
}

unint64_t sub_1D43DDA2C()
{
  unint64_t result = qword_1EA6CAD38;
  if (!qword_1EA6CAD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAD38);
  }
  return result;
}

uint64_t sub_1D43DDA80(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D42DB55C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D43DDAF0()
{
  unint64_t result = qword_1EA6CAD40;
  if (!qword_1EA6CAD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAD40);
  }
  return result;
}

unint64_t sub_1D43DDB48()
{
  unint64_t result = qword_1EA6CAD48;
  if (!qword_1EA6CAD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAD48);
  }
  return result;
}

unint64_t sub_1D43DDBA0()
{
  unint64_t result = qword_1EA6CAD50;
  if (!qword_1EA6CAD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAD50);
  }
  return result;
}

unint64_t sub_1D43DDBF8()
{
  unint64_t result = qword_1EA6CAD58;
  if (!qword_1EA6CAD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAD58);
  }
  return result;
}

unint64_t sub_1D43DDC50()
{
  unint64_t result = qword_1EA6CAD60;
  if (!qword_1EA6CAD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAD60);
  }
  return result;
}

unint64_t sub_1D43DDCA8()
{
  unint64_t result = qword_1EA6CAD68;
  if (!qword_1EA6CAD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAD68);
  }
  return result;
}

unint64_t sub_1D43DDD00()
{
  unint64_t result = qword_1EA6CAD70;
  if (!qword_1EA6CAD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAD70);
  }
  return result;
}

unint64_t sub_1D43DDD58()
{
  unint64_t result = qword_1EA6CAD78;
  if (!qword_1EA6CAD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAD78);
  }
  return result;
}

unint64_t sub_1D43DDDB0()
{
  unint64_t result = qword_1EA6CAD80;
  if (!qword_1EA6CAD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAD80);
  }
  return result;
}

unint64_t sub_1D43DDE08()
{
  unint64_t result = qword_1EA6CAD88;
  if (!qword_1EA6CAD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAD88);
  }
  return result;
}

uint64_t sub_1D43DDE5C()
{
  return sub_1D42BF558(&qword_1EA6CAD90, (void (*)(uint64_t))type metadata accessor for FMIPItem);
}

ValueMetadata *type metadata accessor for FMItemCapabilities()
{
  return &type metadata for FMItemCapabilities;
}

ValueMetadata *type metadata accessor for FMIPItemState()
{
  return &type metadata for FMIPItemState;
}

unsigned char *storeEnumTagSinglePayload for FMIPItemBatteryStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    void *result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43DDF90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPItemBatteryStatus()
{
  return &type metadata for FMIPItemBatteryStatus;
}

uint64_t destroy for FMIPPartInfo()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMIPPartInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMIPPartInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for FMIPPartInfo(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FMIPPartInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPPartInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPPartInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPPartInfo()
{
  return &type metadata for FMIPPartInfo;
}

unsigned char *storeEnumTagSinglePayload for FMIPPartType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    void *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43DE290);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPPartType()
{
  return &type metadata for FMIPPartType;
}

uint64_t initializeBufferWithCopyOfBuffer for FMIPItem(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) == 0)
  {
    uint64_t v8 = a2[22];
    swift_retain();
    uint64_t v104 = a3;
    if (v8)
    {
      uint64_t v9 = a2[2];
      *(void *)(a1 + 8) = a2[1];
      *(void *)(a1 + 16) = v9;
      uint64_t v10 = a2[4];
      *(void *)(a1 + 24) = a2[3];
      *(void *)(a1 + 32) = v10;
      uint64_t v11 = a2[6];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v11;
      uint64_t v12 = a2[8];
      *(void *)(a1 + 56) = a2[7];
      *(void *)(a1 + 64) = v12;
      uint64_t v13 = a2[10];
      *(void *)(a1 + 72) = a2[9];
      *(void *)(a1 + 80) = v13;
      uint64_t v14 = a2[12];
      *(void *)(a1 + 88) = a2[11];
      *(void *)(a1 + 96) = v14;
      uint64_t v15 = a2[14];
      *(void *)(a1 + 104) = a2[13];
      *(void *)(a1 + 112) = v15;
      uint64_t v16 = a2[16];
      *(void *)(a1 + 120) = a2[15];
      *(void *)(a1 + 128) = v16;
      uint64_t v17 = a2[18];
      *(void *)(a1 + 136) = a2[17];
      *(void *)(a1 + 144) = v17;
      uint64_t v18 = a2[20];
      *(void *)(a1 + 152) = a2[19];
      *(void *)(a1 + 160) = v18;
      *(void *)(a1 + 168) = a2[21];
      *(void *)(a1 + 176) = v8;
      uint64_t v19 = a2[24];
      *(void *)(a1 + 184) = a2[23];
      *(void *)(a1 + 192) = v19;
      uint64_t v20 = a2[26];
      *(void *)(a1 + 200) = a2[25];
      *(void *)(a1 + 208) = v20;
      uint64_t v21 = a2[28];
      *(void *)(a1 + 216) = a2[27];
      *(void *)(a1 + 224) = v21;
      uint64_t v22 = a2[30];
      *(void *)(a1 + 232) = a2[29];
      *(void *)(a1 + 240) = v22;
      uint64_t v23 = a2[32];
      *(void *)(a1 + 248) = a2[31];
      *(void *)(a1 + 256) = v23;
      uint64_t v24 = a2[34];
      *(void *)(a1 + 264) = a2[33];
      *(void *)(a1 + 272) = v24;
      uint64_t v25 = a2[36];
      *(void *)(a1 + 280) = a2[35];
      *(void *)(a1 + 288) = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy((void *)(a1 + 8), a2 + 1, 0x120uLL);
    }
    *(unsigned char *)(a1 + 296) = *((unsigned char *)a2 + 296);
    *(void *)(a1 + 304) = a2[38];
    *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
    uint64_t v27 = (void *)a2[40];
    uint64_t v26 = a2[41];
    *(void *)(a1 + 320) = v27;
    *(void *)(a1 + 328) = v26;
    uint64_t v28 = a2[43];
    *(void *)(a1 + 336) = a2[42];
    *(void *)(a1 + 344) = v28;
    uint64_t v29 = a2[45];
    *(void *)(a1 + 352) = a2[44];
    *(void *)(a1 + 360) = v29;
    uint64_t v30 = a2[47];
    *(void *)(a1 + 368) = a2[46];
    *(void *)(a1 + 376) = v30;
    *(_DWORD *)(a1 + 384) = *((_DWORD *)a2 + 96);
    uint64_t v32 = (void *)a2[49];
    uint64_t v31 = a2[50];
    *(void *)(a1 + 392) = v32;
    *(void *)(a1 + 400) = v31;
    uint64_t v33 = v104[13];
    __dst = (void *)(a1 + v33);
    uint64_t v34 = (uint64_t *)((char *)a2 + v33);
    uint64_t v35 = type metadata accessor for FMIPItemLostModeMetadata();
    uint64_t v99 = *(void *)(v35 - 8);
    uint64_t v100 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v99 + 48);
    id v36 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v37 = v32;
    if (v100(v34, 1, v35))
    {
      uint64_t v38 = sub_1D42D5DA0(&qword_1EBD7E710);
      memcpy(__dst, v34, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      uint64_t v39 = v34[1];
      void *__dst = *v34;
      __dst[1] = v39;
      uint64_t v40 = v34[3];
      __dst[2] = v34[2];
      __dst[3] = v40;
      uint64_t v41 = *(int *)(v35 + 24);
      uint64_t v101 = (char *)__dst + v41;
      int v98 = (char *)v34 + v41;
      uint64_t v42 = sub_1D4469618();
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v43(v101, v98, v42);
      uint64_t v44 = *(int *)(v35 + 28);
      uint64_t v45 = (void *)((char *)__dst + v44);
      uint64_t v46 = (void *)((char *)v34 + v44);
      uint64_t v47 = v46[1];
      *uint64_t v45 = *v46;
      v45[1] = v47;
      uint64_t v48 = *(void (**)(void *, void, uint64_t, uint64_t))(v99 + 56);
      swift_bridgeObjectRetain();
      v48(__dst, 0, 1, v35);
    }
    uint64_t v49 = v104[14];
    uint64_t v50 = v104[15];
    uint64_t v51 = (void *)(a1 + v49);
    uint64_t v52 = (uint64_t *)((char *)a2 + v49);
    uint64_t v53 = v52[1];
    *uint64_t v51 = *v52;
    v51[1] = v53;
    uint64_t v54 = (void *)(a1 + v50);
    uint64_t v55 = (uint64_t *)((char *)a2 + v50);
    uint64_t v56 = v55[1];
    *uint64_t v54 = *v55;
    v54[1] = v56;
    uint64_t v57 = v104[16];
    uint64_t v58 = a1 + v57;
    uint64_t v59 = (uint64_t)a2 + v57;
    uint64_t v60 = *(uint64_t *)((char *)a2 + v57 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v60)
    {
      *(void *)uint64_t v58 = *(void *)v59;
      *(void *)(v58 + 8) = v60;
      uint64_t v61 = *(void *)(v59 + 24);
      *(void *)(v58 + 16) = *(void *)(v59 + 16);
      *(void *)(v58 + 24) = v61;
      *(unsigned char *)(v58 + 32) = *(unsigned char *)(v59 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v62 = *(_OWORD *)(v59 + 16);
      *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
      *(_OWORD *)(v58 + 16) = v62;
      *(unsigned char *)(v58 + 32) = *(unsigned char *)(v59 + 32);
    }
    uint64_t v63 = v104[17];
    uint64_t v64 = v104[18];
    uint64_t v65 = a1 + v63;
    uint64_t v66 = (uint64_t)a2 + v63;
    *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
    uint64_t v67 = *(void *)(v66 + 24);
    *(void *)(v65 + 16) = *(void *)(v66 + 16);
    *(void *)(v65 + 24) = v67;
    *(void *)(v65 + 32) = *(void *)(v66 + 32);
    uint64_t v68 = (void *)(a1 + v64);
    uint64_t v69 = (uint64_t *)((char *)a2 + v64);
    uint64_t v70 = v69[1];
    *uint64_t v68 = *v69;
    v68[1] = v70;
    uint64_t v71 = v104[20];
    *(void *)(a1 + v104[19]) = *(uint64_t *)((char *)a2 + v104[19]);
    uint64_t v72 = (void *)(a1 + v71);
    uint64_t v73 = (uint64_t *)((char *)a2 + v71);
    uint64_t v74 = v73[1];
    *uint64_t v72 = *v73;
    v72[1] = v74;
    uint64_t v75 = v104[22];
    *(unsigned char *)(a1 + v104[21]) = *((unsigned char *)a2 + v104[21]);
    *(unsigned char *)(a1 + v75) = *((unsigned char *)a2 + v75);
    uint64_t v76 = v104[24];
    *(void *)(a1 + v104[23]) = *(uint64_t *)((char *)a2 + v104[23]);
    __dsta = (_OWORD *)(a1 + v76);
    uint64_t v77 = (_OWORD *)((char *)a2 + v76);
    type metadata accessor for FMIPProductType();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v82 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
      uint64_t v83 = *((void *)v82 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v83 + 48))(v77, 1, v82))
      {
        uint64_t v84 = sub_1D42D5DA0(&qword_1EA6C97A0);
        memcpy(__dsta, v77, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        _OWORD *__dsta = *v77;
        uint64_t v87 = *((void *)v77 + 3);
        *((void *)__dsta + 2) = *((void *)v77 + 2);
        *((void *)__dsta + 3) = v87;
        uint64_t v88 = *((void *)v77 + 5);
        *((void *)__dsta + 4) = *((void *)v77 + 4);
        *((void *)__dsta + 5) = v88;
        uint64_t v89 = *((void *)v77 + 7);
        *((void *)__dsta + 6) = *((void *)v77 + 6);
        *((void *)__dsta + 7) = v89;
        *((void *)__dsta + 8) = *((void *)v77 + 8);
        *((unsigned char *)__dsta + 72) = *((unsigned char *)v77 + 72);
        *((unsigned char *)__dsta + 73) = *((unsigned char *)v77 + 73);
        uint64_t v90 = v82[12];
        char v96 = (char *)v77 + v90;
        int v97 = (char *)__dsta + v90;
        uint64_t v91 = sub_1D4469498();
        uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v92(v97, v96, v91);
        v92((char *)__dsta + v82[13], (char *)v77 + v82[13], v91);
        v92((char *)__dsta + v82[14], (char *)v77 + v82[14], v91);
        v92((char *)__dsta + v82[15], (char *)v77 + v82[15], v91);
        v92((char *)__dsta + v82[16], (char *)v77 + v82[16], v91);
        v92((char *)__dsta + v82[17], (char *)v77 + v82[17], v91);
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v83 + 56))(__dsta, 0, 1, v82);
      }
      goto LABEL_22;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v79 = __dsta;
      _OWORD *__dsta = *v77;
      uint64_t v81 = *((void *)v77 + 2);
      uint64_t v80 = *((void *)v77 + 3);
    }
    else
    {
      uint64_t v79 = __dsta;
      uint64_t v80 = *((void *)v77 + 3);
      if (!v80)
      {
        long long v93 = v77[3];
        __dsta[2] = v77[2];
        __dsta[3] = v93;
        *((void *)__dsta + 8) = *((void *)v77 + 8);
        long long v94 = v77[1];
        _OWORD *__dsta = *v77;
        __dsta[1] = v94;
        goto LABEL_22;
      }
      _OWORD *__dsta = *v77;
      uint64_t v81 = *((void *)v77 + 2);
    }
    v79[2] = v81;
    v79[3] = v80;
    uint64_t v85 = *((void *)v77 + 5);
    v79[4] = *((void *)v77 + 4);
    v79[5] = v85;
    uint64_t v86 = *((void *)v77 + 7);
    v79[6] = *((void *)v77 + 6);
    v79[7] = v86;
    v79[8] = *((void *)v77 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_22:
    swift_storeEnumTagMultiPayload();
    *(unsigned char *)(a1 + v104[25]) = *((unsigned char *)a2 + v104[25]);
    return a1;
  }
  a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return a1;
}

uint64_t destroy for FMIPItem(uint64_t a1, int *a2)
{
  swift_release();
  if (*(void *)(a1 + 176))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + a2[13];
  uint64_t v5 = type metadata accessor for FMIPItemLostModeMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[16] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[24];
  type metadata accessor for FMIPProductType();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v10 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v10 - 1) + 48))(v8, 1, v10);
    if (!result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v8 + v10[12];
      uint64_t v12 = sub_1D4469498();
      uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v14)((void *)(v12 - 8), v11, v12);
      v14(v8 + v10[13], v12);
      v14(v8 + v10[14], v12);
      v14(v8 + v10[15], v12);
      v14(v8 + v10[16], v12);
      uint64_t v13 = v8 + v10[17];
      return ((uint64_t (*)(uint64_t, uint64_t))v14)(v13, v12);
    }
  }
  else if (result == 1 || !result && (uint64_t result = *(void *)(v8 + 24)) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FMIPItem(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 176);
  swift_retain();
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v6;
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v8;
    uint64_t v9 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v9;
    uint64_t v10 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v10;
    uint64_t v11 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v11;
    uint64_t v12 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v12;
    uint64_t v13 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v13;
    uint64_t v14 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v14;
    uint64_t v15 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v15;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = v5;
    uint64_t v16 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v16;
    uint64_t v17 = *(void *)(a2 + 208);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = v17;
    uint64_t v18 = *(void *)(a2 + 224);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = v18;
    uint64_t v19 = *(void *)(a2 + 240);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = v19;
    uint64_t v20 = *(void *)(a2 + 256);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = v20;
    uint64_t v21 = *(void *)(a2 + 272);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = v21;
    uint64_t v22 = *(void *)(a2 + 288);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(void *)(a1 + 288) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x120uLL);
  }
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  uint64_t v24 = *(void **)(a2 + 320);
  uint64_t v23 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = v24;
  *(void *)(a1 + 328) = v23;
  uint64_t v25 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v25;
  uint64_t v26 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v26;
  uint64_t v27 = *(void *)(a2 + 376);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = v27;
  *(_DWORD *)(a1 + 384) = *(_DWORD *)(a2 + 384);
  uint64_t v29 = *(void **)(a2 + 392);
  uint64_t v28 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = v29;
  *(void *)(a1 + 400) = v28;
  uint64_t v30 = a3[13];
  __dst = (void *)(a1 + v30);
  uint64_t v31 = (void *)(a2 + v30);
  uint64_t v32 = type metadata accessor for FMIPItemLostModeMetadata();
  uint64_t v96 = *(void *)(v32 - 8);
  int v97 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v96 + 48);
  id v33 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v34 = v29;
  if (v97(v31, 1, v32))
  {
    uint64_t v35 = sub_1D42D5DA0(&qword_1EBD7E710);
    memcpy(__dst, v31, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    uint64_t v36 = v31[1];
    void *__dst = *v31;
    __dst[1] = v36;
    uint64_t v37 = v31[3];
    __dst[2] = v31[2];
    __dst[3] = v37;
    uint64_t v38 = *(int *)(v32 + 24);
    int v98 = (char *)__dst + v38;
    uint64_t v95 = (char *)v31 + v38;
    uint64_t v39 = sub_1D4469618();
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40(v98, v95, v39);
    uint64_t v41 = *(int *)(v32 + 28);
    uint64_t v42 = (void *)((char *)__dst + v41);
    uint64_t v43 = (void *)((char *)v31 + v41);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    uint64_t v45 = *(void (**)(void *, void, uint64_t, uint64_t))(v96 + 56);
    swift_bridgeObjectRetain();
    v45(__dst, 0, 1, v32);
  }
  uint64_t v46 = a3[14];
  uint64_t v47 = a3[15];
  uint64_t v48 = (void *)(a1 + v46);
  uint64_t v49 = (void *)(a2 + v46);
  uint64_t v50 = v49[1];
  *uint64_t v48 = *v49;
  v48[1] = v50;
  uint64_t v51 = (void *)(a1 + v47);
  uint64_t v52 = (void *)(a2 + v47);
  uint64_t v53 = v52[1];
  *uint64_t v51 = *v52;
  v51[1] = v53;
  uint64_t v54 = a3[16];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  uint64_t v57 = *(void *)(a2 + v54 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v57)
  {
    *(void *)uint64_t v55 = *(void *)v56;
    *(void *)(v55 + 8) = v57;
    uint64_t v58 = *(void *)(v56 + 24);
    *(void *)(v55 + 16) = *(void *)(v56 + 16);
    *(void *)(v55 + 24) = v58;
    *(unsigned char *)(v55 + 32) = *(unsigned char *)(v56 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v59 = *(_OWORD *)(v56 + 16);
    *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
    *(_OWORD *)(v55 + 16) = v59;
    *(unsigned char *)(v55 + 32) = *(unsigned char *)(v56 + 32);
  }
  uint64_t v60 = a3[17];
  uint64_t v61 = a3[18];
  uint64_t v62 = a1 + v60;
  uint64_t v63 = a2 + v60;
  *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
  uint64_t v64 = *(void *)(v63 + 24);
  *(void *)(v62 + 16) = *(void *)(v63 + 16);
  *(void *)(v62 + 24) = v64;
  *(void *)(v62 + 32) = *(void *)(v63 + 32);
  uint64_t v65 = (void *)(a1 + v61);
  uint64_t v66 = (void *)(a2 + v61);
  uint64_t v67 = v66[1];
  *uint64_t v65 = *v66;
  v65[1] = v67;
  uint64_t v68 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  uint64_t v69 = (void *)(a1 + v68);
  uint64_t v70 = (void *)(a2 + v68);
  uint64_t v71 = v70[1];
  *uint64_t v69 = *v70;
  v69[1] = v71;
  uint64_t v72 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(unsigned char *)(a1 + v72) = *(unsigned char *)(a2 + v72);
  uint64_t v73 = a3[24];
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  uint64_t v74 = (_OWORD *)(a1 + v73);
  uint64_t v75 = (_OWORD *)(a2 + v73);
  type metadata accessor for FMIPProductType();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v79 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
    uint64_t v80 = (unsigned int (**)(_OWORD *, uint64_t, int *))*((void *)v79 - 1);
    if (v80[6](v75, 1, v79))
    {
      uint64_t v81 = sub_1D42D5DA0(&qword_1EA6C97A0);
      memcpy(v74, v75, *(void *)(*(void *)(v81 - 8) + 64));
    }
    else
    {
      *uint64_t v74 = *v75;
      uint64_t v84 = *((void *)v75 + 3);
      *((void *)v74 + 2) = *((void *)v75 + 2);
      *((void *)v74 + 3) = v84;
      uint64_t v85 = *((void *)v75 + 5);
      *((void *)v74 + 4) = *((void *)v75 + 4);
      *((void *)v74 + 5) = v85;
      uint64_t v86 = *((void *)v75 + 7);
      *((void *)v74 + 6) = *((void *)v75 + 6);
      *((void *)v74 + 7) = v86;
      *((void *)v74 + 8) = *((void *)v75 + 8);
      *((unsigned char *)v74 + 72) = *((unsigned char *)v75 + 72);
      *((unsigned char *)v74 + 73) = *((unsigned char *)v75 + 73);
      uint64_t v87 = v79[12];
      long long v93 = (char *)v75 + v87;
      long long v94 = (char *)v74 + v87;
      __dsta = v80;
      uint64_t v88 = sub_1D4469498();
      uint64_t v89 = *(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v89(v94, v93, v88);
      v89((char *)v74 + v79[13], (char *)v75 + v79[13], v88);
      v89((char *)v74 + v79[14], (char *)v75 + v79[14], v88);
      v89((char *)v74 + v79[15], (char *)v75 + v79[15], v88);
      v89((char *)v74 + v79[16], (char *)v75 + v79[16], v88);
      v89((char *)v74 + v79[17], (char *)v75 + v79[17], v88);
      (*((void (**)(_OWORD *, void, uint64_t, int *))__dsta + 7))(v74, 0, 1, v79);
    }
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v74 = *v75;
      uint64_t v78 = *((void *)v75 + 2);
      uint64_t v77 = *((void *)v75 + 3);
    }
    else
    {
      uint64_t v77 = *((void *)v75 + 3);
      if (!v77)
      {
        long long v90 = v75[3];
        v74[2] = v75[2];
        v74[3] = v90;
        *((void *)v74 + 8) = *((void *)v75 + 8);
        long long v91 = v75[1];
        *uint64_t v74 = *v75;
        v74[1] = v91;
        goto LABEL_20;
      }
      *uint64_t v74 = *v75;
      uint64_t v78 = *((void *)v75 + 2);
    }
    *((void *)v74 + 2) = v78;
    *((void *)v74 + 3) = v77;
    uint64_t v82 = *((void *)v75 + 5);
    *((void *)v74 + 4) = *((void *)v75 + 4);
    *((void *)v74 + 5) = v82;
    uint64_t v83 = *((void *)v75 + 7);
    *((void *)v74 + 6) = *((void *)v75 + 6);
    *((void *)v74 + 7) = v83;
    *((void *)v74 + 8) = *((void *)v75 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
LABEL_20:
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  return a1;
}

uint64_t assignWithCopy for FMIPItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (unsigned char *)(a2 + 312);
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a2 + 176);
  if (*(void *)(a1 + 176))
  {
    if (v7)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1D42FDA08(a1 + 8);
  }
  else if (v7)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x120uLL);
LABEL_8:
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *v6;
  *(unsigned char *)(a1 + 313) = v6[1];
  *(unsigned char *)(a1 + 314) = v6[2];
  *(unsigned char *)(a1 + 315) = *(unsigned char *)(a2 + 315);
  uint64_t v8 = *(void **)(a2 + 320);
  uint64_t v9 = *(void **)(a1 + 320);
  *(void *)(a1 + 320) = v8;
  id v10 = v8;

  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 384) = v6[72];
  *(unsigned char *)(a1 + 385) = v6[73];
  *(unsigned char *)(a1 + 386) = v6[74];
  *(unsigned char *)(a1 + 387) = *(unsigned char *)(a2 + 387);
  uint64_t v11 = *(void **)(a2 + 392);
  uint64_t v12 = *(void **)(a1 + 392);
  *(void *)(a1 + 392) = v11;
  id v13 = v11;

  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  uint64_t v14 = a3[13];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for FMIPItemLostModeMetadata();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      void *v15 = *v16;
      v15[1] = v16[1];
      v15[2] = v16[2];
      v15[3] = v16[3];
      uint64_t v22 = *(int *)(v17 + 24);
      uint64_t v78 = (char *)v16 + v22;
      uint64_t v79 = (char *)v15 + v22;
      uint64_t v23 = sub_1D4469618();
      uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v77(v79, v78, v23);
      uint64_t v24 = *(int *)(v17 + 28);
      uint64_t v25 = (void *)((char *)v15 + v24);
      uint64_t v26 = (void *)((char *)v16 + v24);
      *uint64_t v25 = *v26;
      v25[1] = v26[1];
      uint64_t v27 = *(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56);
      swift_bridgeObjectRetain();
      v27(v15, 0, 1, v17);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v21)
  {
    sub_1D42CA948((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
LABEL_13:
    uint64_t v28 = sub_1D42D5DA0(&qword_1EBD7E710);
    memcpy(v15, v16, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_14;
  }
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[2] = v16[2];
  v15[3] = v16[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = *(int *)(v17 + 24);
  uint64_t v43 = (char *)v15 + v42;
  uint64_t v44 = (char *)v16 + v42;
  uint64_t v45 = sub_1D4469618();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 24))(v43, v44, v45);
  uint64_t v46 = *(int *)(v17 + 28);
  uint64_t v47 = (void *)((char *)v15 + v46);
  uint64_t v48 = (void *)((char *)v16 + v46);
  *uint64_t v47 = *v48;
  v47[1] = v48[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v29 = a3[14];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  void *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[15];
  id v33 = (void *)(a1 + v32);
  id v34 = (void *)(a2 + v32);
  *id v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[16];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = (long long *)(a2 + v35);
  uint64_t v38 = *(void *)(a1 + v35 + 8);
  uint64_t v39 = *(void *)(a2 + v35 + 8);
  if (v38)
  {
    if (v39)
    {
      *(void *)uint64_t v36 = *(void *)v37;
      *(void *)(v36 + 8) = *((void *)v37 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v36 + 16) = *((void *)v37 + 2);
      *(void *)(v36 + 24) = *((void *)v37 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v36 + 32) = *((unsigned char *)v37 + 32);
    }
    else
    {
      sub_1D43E0370(v36);
      char v40 = *((unsigned char *)v37 + 32);
      long long v41 = v37[1];
      *(_OWORD *)uint64_t v36 = *v37;
      *(_OWORD *)(v36 + 16) = v41;
      *(unsigned char *)(v36 + 32) = v40;
    }
  }
  else if (v39)
  {
    *(void *)uint64_t v36 = *(void *)v37;
    *(void *)(v36 + 8) = *((void *)v37 + 1);
    *(void *)(v36 + 16) = *((void *)v37 + 2);
    *(void *)(v36 + 24) = *((void *)v37 + 3);
    *(unsigned char *)(v36 + 32) = *((unsigned char *)v37 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v49 = *v37;
    long long v50 = v37[1];
    *(unsigned char *)(v36 + 32) = *((unsigned char *)v37 + 32);
    *(_OWORD *)uint64_t v36 = v49;
    *(_OWORD *)(v36 + 16) = v50;
  }
  uint64_t v51 = a3[17];
  uint64_t v52 = a3;
  uint64_t v53 = (void *)(a1 + v51);
  uint64_t v54 = a2 + v51;
  *uint64_t v53 = *(void *)(a2 + v51);
  v53[1] = *(void *)(a2 + v51 + 8);
  v53[2] = *(void *)(a2 + v51 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53[3] = *(void *)(v54 + 24);
  v53[4] = *(void *)(v54 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v55 = v52[18];
  uint64_t v56 = (void *)(a1 + v55);
  uint64_t v57 = (void *)(a2 + v55);
  *uint64_t v56 = *v57;
  v56[1] = v57[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v52[19]) = *(void *)(a2 + v52[19]);
  uint64_t v58 = v52[20];
  long long v59 = (void *)(a1 + v58);
  uint64_t v60 = (void *)(a2 + v58);
  *long long v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v52[21]) = *(unsigned char *)(a2 + v52[21]);
  *(unsigned char *)(a1 + v52[22]) = *(unsigned char *)(a2 + v52[22]);
  *(void *)(a1 + v52[23]) = *(void *)(a2 + v52[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v61 = v52[24];
    uint64_t v62 = (void *)(a1 + v61);
    uint64_t v63 = (void *)(a2 + v61);
    sub_1D42CA948(a1 + v61, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
    type metadata accessor for FMIPProductType();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v65 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
      uint64_t v66 = *((void *)v65 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v66 + 48))(v63, 1, v65))
      {
        uint64_t v67 = sub_1D42D5DA0(&qword_1EA6C97A0);
        memcpy(v62, v63, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        void *v62 = *v63;
        v62[1] = v63[1];
        v62[2] = v63[2];
        v62[3] = v63[3];
        v62[4] = v63[4];
        v62[5] = v63[5];
        v62[6] = v63[6];
        v62[7] = v63[7];
        v62[8] = v63[8];
        *((unsigned char *)v62 + 72) = *((unsigned char *)v63 + 72);
        *((unsigned char *)v62 + 73) = *((unsigned char *)v63 + 73);
        uint64_t v71 = v65[12];
        uint64_t v75 = (char *)v63 + v71;
        uint64_t v76 = (char *)v62 + v71;
        uint64_t v80 = v66;
        uint64_t v72 = sub_1D4469498();
        uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v73(v76, v75, v72);
        v73((char *)v62 + v65[13], (char *)v63 + v65[13], v72);
        v73((char *)v62 + v65[14], (char *)v63 + v65[14], v72);
        v73((char *)v62 + v65[15], (char *)v63 + v65[15], v72);
        v73((char *)v62 + v65[16], (char *)v63 + v65[16], v72);
        v73((char *)v62 + v65[17], (char *)v63 + v65[17], v72);
        (*(void (**)(void *, void, uint64_t, int *))(v80 + 56))(v62, 0, 1, v65);
      }
    }
    else if (EnumCaseMultiPayload == 1 || v63[3])
    {
      void *v62 = *v63;
      v62[1] = v63[1];
      v62[2] = v63[2];
      v62[3] = v63[3];
      v62[4] = v63[4];
      v62[5] = v63[5];
      v62[6] = v63[6];
      v62[7] = v63[7];
      v62[8] = v63[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
      long long v68 = *((_OWORD *)v63 + 1);
      long long v69 = *((_OWORD *)v63 + 2);
      long long v70 = *((_OWORD *)v63 + 3);
      v62[8] = v63[8];
      *((_OWORD *)v62 + 2) = v69;
      *((_OWORD *)v62 + 3) = v70;
      *((_OWORD *)v62 + 1) = v68;
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + v52[25]) = *(unsigned char *)(a2 + v52[25]);
  return a1;
}

uint64_t sub_1D43E0370(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for FMIPItem(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x120uLL);
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  long long v6 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v6;
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  long long v7 = *(_OWORD *)(a2 + 384);
  uint64_t v8 = a3[13];
  uint64_t v9 = (_OWORD *)(a1 + v8);
  id v10 = (_OWORD *)(a2 + v8);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v7;
  uint64_t v11 = type metadata accessor for FMIPItemLostModeMetadata();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_1D42D5DA0(&qword_1EBD7E710);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    long long v14 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v14;
    uint64_t v15 = *(int *)(v11 + 24);
    uint64_t v16 = (char *)v9 + v15;
    uint64_t v17 = (char *)v10 + v15;
    uint64_t v18 = sub_1D4469618();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    *(_OWORD *)((char *)v9 + *(int *)(v11 + 28)) = *(_OWORD *)((char *)v10 + *(int *)(v11 + 28));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v19 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  uint64_t v20 = a3[16];
  uint64_t v21 = a3[17];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  long long v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(unsigned char *)(v22 + 32) = *(unsigned char *)(v23 + 32);
  uint64_t v25 = a1 + v21;
  uint64_t v26 = a2 + v21;
  *(void *)(v25 + 32) = *(void *)(v26 + 32);
  long long v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  uint64_t v28 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  uint64_t v29 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v30 = a3[23];
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(void *)(a1 + v30) = *(void *)(a2 + v30);
  uint64_t v31 = a3[24];
  uint64_t v32 = (_OWORD *)(a1 + v31);
  id v33 = (_OWORD *)(a2 + v31);
  uint64_t v34 = type metadata accessor for FMIPProductType();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v35 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
    uint64_t v36 = *((void *)v35 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v36 + 48))(v33, 1, v35))
    {
      uint64_t v37 = sub_1D42D5DA0(&qword_1EA6C97A0);
      memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      long long v38 = v33[1];
      *uint64_t v32 = *v33;
      v32[1] = v38;
      long long v39 = v33[3];
      v32[2] = v33[2];
      v32[3] = v39;
      *((void *)v32 + 8) = *((void *)v33 + 8);
      *((_WORD *)v32 + 36) = *((_WORD *)v33 + 36);
      uint64_t v40 = v35[12];
      uint64_t v44 = (char *)v33 + v40;
      uint64_t v45 = (char *)v32 + v40;
      uint64_t v41 = sub_1D4469498();
      uint64_t v46 = v36;
      uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32);
      v42(v45, v44, v41);
      v42((char *)v32 + v35[13], (char *)v33 + v35[13], v41);
      v42((char *)v32 + v35[14], (char *)v33 + v35[14], v41);
      v42((char *)v32 + v35[15], (char *)v33 + v35[15], v41);
      v42((char *)v32 + v35[16], (char *)v33 + v35[16], v41);
      v42((char *)v32 + v35[17], (char *)v33 + v35[17], v41);
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v46 + 56))(v32, 0, 1, v35);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  return a1;
}

uint64_t assignWithTake for FMIPItem(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = (unsigned char *)(a2 + 312);
  long long v7 = (const void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  swift_release();
  if (*(void *)(a1 + 176))
  {
    if (*(void *)(a2 + 176))
    {
      uint64_t v8 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v8;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v13;
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v14;
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v15;
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v17;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(a2 + 192);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(a2 + 208);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = v19;
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(a2 + 224);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(a2 + 240);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(a2 + 256);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(a2 + 288);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = v24;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D42FDA08(a1 + 8);
  }
  memcpy((void *)(a1 + 8), v7, 0x120uLL);
LABEL_6:
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *v6;
  *(unsigned char *)(a1 + 313) = v6[1];
  *(unsigned char *)(a1 + 314) = v6[2];
  *(unsigned char *)(a1 + 315) = *(unsigned char *)(a2 + 315);
  uint64_t v25 = *(void **)(a1 + 320);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);

  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  uint64_t v26 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(a2 + 376);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = v28;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 384) = v6[72];
  *(unsigned char *)(a1 + 385) = v6[73];
  *(unsigned char *)(a1 + 386) = v6[74];
  *(unsigned char *)(a1 + 387) = *(unsigned char *)(a2 + 387);
  uint64_t v29 = *(void **)(a1 + 392);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);

  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  uint64_t v30 = a3[13];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  uint64_t v33 = type metadata accessor for FMIPItemLostModeMetadata();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      long long v38 = *((_OWORD *)v32 + 1);
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v38;
      uint64_t v39 = *(int *)(v33 + 24);
      uint64_t v40 = (char *)v31 + v39;
      uint64_t v41 = (char *)v32 + v39;
      uint64_t v42 = sub_1D4469618();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
      *(_OWORD *)((char *)v31 + *(int *)(v33 + 28)) = *(_OWORD *)((char *)v32 + *(int *)(v33 + 28));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v37)
  {
    sub_1D42CA948((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
LABEL_11:
    uint64_t v43 = sub_1D42D5DA0(&qword_1EBD7E710);
    memcpy(v31, v32, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_12;
  }
  uint64_t v82 = v32[1];
  void *v31 = *v32;
  v31[1] = v82;
  swift_bridgeObjectRelease();
  uint64_t v83 = v32[3];
  v31[2] = v32[2];
  v31[3] = v83;
  swift_bridgeObjectRelease();
  uint64_t v84 = *(int *)(v33 + 24);
  uint64_t v85 = (char *)v31 + v84;
  uint64_t v86 = (char *)v32 + v84;
  uint64_t v87 = sub_1D4469618();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 40))(v85, v86, v87);
  uint64_t v88 = *(int *)(v33 + 28);
  uint64_t v89 = (void *)((char *)v31 + v88);
  long long v90 = (void *)((char *)v32 + v88);
  uint64_t v92 = *v90;
  uint64_t v91 = v90[1];
  void *v89 = v92;
  v89[1] = v91;
  swift_bridgeObjectRelease();
LABEL_12:
  uint64_t v44 = a3[14];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (uint64_t *)(a2 + v44);
  uint64_t v48 = *v46;
  uint64_t v47 = v46[1];
  *uint64_t v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
  uint64_t v49 = a3[15];
  long long v50 = (void *)(a1 + v49);
  uint64_t v51 = (uint64_t *)(a2 + v49);
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  *long long v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  uint64_t v54 = a3[16];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  if (*(void *)(a1 + v54 + 8))
  {
    uint64_t v57 = *(void *)(v56 + 8);
    if (v57)
    {
      *(void *)uint64_t v55 = *(void *)v56;
      *(void *)(v55 + 8) = v57;
      swift_bridgeObjectRelease();
      uint64_t v58 = *(void *)(v56 + 24);
      *(void *)(v55 + 16) = *(void *)(v56 + 16);
      *(void *)(v55 + 24) = v58;
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    sub_1D43E0370(v55);
  }
  long long v59 = *(_OWORD *)(v56 + 16);
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  *(_OWORD *)(v55 + 16) = v59;
LABEL_17:
  *(unsigned char *)(v55 + 32) = *(unsigned char *)(v56 + 32);
  uint64_t v60 = a3[17];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = a2 + v60;
  *(_OWORD *)uint64_t v61 = *(_OWORD *)(a2 + v60);
  *(void *)(v61 + 16) = *(void *)(a2 + v60 + 16);
  swift_bridgeObjectRelease();
  uint64_t v63 = *(void *)(v62 + 32);
  *(void *)(v61 + 24) = *(void *)(v62 + 24);
  *(void *)(v61 + 32) = v63;
  swift_bridgeObjectRelease();
  uint64_t v64 = a3[18];
  uint64_t v65 = (void *)(a1 + v64);
  uint64_t v66 = (uint64_t *)(a2 + v64);
  uint64_t v68 = *v66;
  uint64_t v67 = v66[1];
  *uint64_t v65 = v68;
  v65[1] = v67;
  swift_bridgeObjectRelease();
  uint64_t v69 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  long long v70 = (void *)(a1 + v69);
  uint64_t v71 = (uint64_t *)(a2 + v69);
  uint64_t v73 = *v71;
  uint64_t v72 = v71[1];
  *long long v70 = v73;
  v70[1] = v72;
  swift_bridgeObjectRelease();
  uint64_t v74 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(unsigned char *)(a1 + v74) = *(unsigned char *)(a2 + v74);
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v75 = a3[24];
    uint64_t v76 = (_OWORD *)(a1 + v75);
    uint64_t v77 = (_OWORD *)(a2 + v75);
    sub_1D42CA948(a1 + v75, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
    uint64_t v78 = type metadata accessor for FMIPProductType();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v79 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
      uint64_t v80 = *((void *)v79 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v80 + 48))(v77, 1, v79))
      {
        uint64_t v81 = sub_1D42D5DA0(&qword_1EA6C97A0);
        memcpy(v76, v77, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        long long v93 = v77[1];
        *uint64_t v76 = *v77;
        v76[1] = v93;
        long long v94 = v77[3];
        v76[2] = v77[2];
        v76[3] = v94;
        *((void *)v76 + 8) = *((void *)v77 + 8);
        *((_WORD *)v76 + 36) = *((_WORD *)v77 + 36);
        uint64_t v95 = v79[12];
        uint64_t v99 = (char *)v77 + v95;
        uint64_t v100 = (char *)v76 + v95;
        uint64_t v96 = sub_1D4469498();
        uint64_t v101 = v80;
        int v97 = *(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32);
        v97(v100, v99, v96);
        v97((char *)v76 + v79[13], (char *)v77 + v79[13], v96);
        v97((char *)v76 + v79[14], (char *)v77 + v79[14], v96);
        v97((char *)v76 + v79[15], (char *)v77 + v79[15], v96);
        v97((char *)v76 + v79[16], (char *)v77 + v79[16], v96);
        v97((char *)v76 + v79[17], (char *)v77 + v79[17], v96);
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v101 + 56))(v76, 0, 1, v79);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
    }
  }
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  return a1;
}

uint64_t sub_1D43E0FDC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1D42D5DA0(&qword_1EBD7E710);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 52);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for FMIPProductType();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 96);
      return v14(v16, a2, v15);
    }
  }
}

void *sub_1D43E110C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    void *result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1D42D5DA0(&qword_1EBD7E710);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 52);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for FMIPProductType();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 96);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEA) {
    goto LABEL_17;
  }
  if (a2 + 22 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 22) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 22;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x17;
  int v8 = v6 - 23;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 22 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 22) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE9)
  {
    unsigned int v6 = ((a2 - 234) >> 8) + 1;
    void *result = a2 + 22;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43E1398);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 22;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPItem.CodingKeys()
{
  return &type metadata for FMIPItem.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FMIPPartInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43E149CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPPartInfo.CodingKeys()
{
  return &type metadata for FMIPPartInfo.CodingKeys;
}

unint64_t sub_1D43E14D8()
{
  unint64_t result = qword_1EA6CAD98;
  if (!qword_1EA6CAD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAD98);
  }
  return result;
}

unint64_t sub_1D43E1530()
{
  unint64_t result = qword_1EA6CADA0;
  if (!qword_1EA6CADA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CADA0);
  }
  return result;
}

unint64_t sub_1D43E1588()
{
  unint64_t result = qword_1EA6CADA8;
  if (!qword_1EA6CADA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CADA8);
  }
  return result;
}

unint64_t sub_1D43E15E0()
{
  unint64_t result = qword_1EA6CADB0;
  if (!qword_1EA6CADB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CADB0);
  }
  return result;
}

unint64_t sub_1D43E1638()
{
  unint64_t result = qword_1EA6CADB8;
  if (!qword_1EA6CADB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CADB8);
  }
  return result;
}

unint64_t sub_1D43E1690()
{
  unint64_t result = qword_1EA6CADC0;
  if (!qword_1EA6CADC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CADC0);
  }
  return result;
}

uint64_t sub_1D43E16E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1D446A758();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1D43E1814()
{
  unint64_t v0 = sub_1D446A788();
  swift_bridgeObjectRelease();
  if (v0 >= 0x17) {
    return 23;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D43E1868(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D43E18D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D43E1938()
{
  unint64_t result = qword_1EA6CADF8;
  if (!qword_1EA6CADF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CADF8);
  }
  return result;
}

unint64_t sub_1D43E198C()
{
  unint64_t result = qword_1EA6CAE00;
  if (!qword_1EA6CAE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAE00);
  }
  return result;
}

uint64_t FMIPHawkeyeProductInformation.init(beacon:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_1D42C26F4(a1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 128))(v4, v5);
  if (v6)
  {
    BOOL v7 = (void *)v6;
    uint64_t v8 = a1[3];
    uint64_t v9 = a1[4];
    sub_1D42C26F4(a1, v8);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 136))(v8, v9);
    uint64_t v11 = a1[3];
    uint64_t v12 = a1[4];
    sub_1D42C26F4(a1, v11);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 144))(v11, v12);
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    sub_1D42C26F4(a1, v14);
    uint64_t v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 32))(v14, v15);
    uint64_t v17 = sub_1D4469B38();
    uint64_t v19 = v18;
    if (v17 == sub_1D4469B38() && v19 == v20) {
      char v22 = 1;
    }
    else {
      char v22 = sub_1D446A758();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    FMIPHawkeyeProductInformation.init(productInformation:vendorIdentifier:productIdentifier:requiresAdditionalConnectionTime:)(v7, v10, v13, v22 & 1, a2);
    uint64_t v26 = type metadata accessor for FMIPHawkeyeProductInformation();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a2, 0, 1, v26);
    return sub_1D42BEC64((uint64_t)a1);
  }
  else
  {
    sub_1D42BEC64((uint64_t)a1);
    uint64_t v23 = type metadata accessor for FMIPHawkeyeProductInformation();
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
    return v24(a2, 1, 1, v23);
  }
}

{
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t vars8;

  uint64_t v4 = objc_msgSend(a1, sel_productInformation);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = SPUnknownBeacon.vendorId.getter();
    BOOL v7 = SPUnknownBeacon.productId.getter();
    uint64_t v8 = objc_msgSend(a1, sel_type);
    uint64_t v9 = sub_1D4469B38();
    uint64_t v11 = v10;
    if (v9 == sub_1D4469B38() && v11 == v12) {
      uint64_t v14 = 1;
    }
    else {
      uint64_t v14 = sub_1D446A758();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    FMIPHawkeyeProductInformation.init(productInformation:vendorIdentifier:productIdentifier:requiresAdditionalConnectionTime:)(v5, (uint64_t)v6, (uint64_t)v7, v14 & 1, a2);

    uint64_t v20 = type metadata accessor for FMIPHawkeyeProductInformation();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    uint64_t v17 = v20;
    uint64_t v18 = a2;
    uint64_t v19 = 0;
  }
  else
  {

    uint64_t v15 = type metadata accessor for FMIPHawkeyeProductInformation();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a2;
    uint64_t v19 = 1;
  }
  return v16(v18, v19, 1, v17);
}

void FMIPHawkeyeProductInformation.init(productInformation:vendorIdentifier:productIdentifier:requiresAdditionalConnectionTime:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a2;
  *(void *)(a5 + 8) = a3;
  id v8 = objc_msgSend(a1, sel_modelName);
  uint64_t v9 = sub_1D4469B38();
  uint64_t v11 = v10;

  *(void *)(a5 + 16) = v9;
  *(void *)(a5 + 24) = v11;
  id v12 = objc_msgSend(a1, sel_manufacturerName);
  uint64_t v13 = sub_1D4469B38();
  uint64_t v15 = v14;

  *(void *)(a5 + 32) = v13;
  *(void *)(a5 + 40) = v15;
  id v16 = objc_msgSend(a1, sel_appBundleIdentifier);
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_1D4469B38();
    unint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = 0;
    unint64_t v20 = 0xE000000000000000;
  }
  *(void *)(a5 + 48) = v18;
  *(void *)(a5 + 56) = v20;
  objc_msgSend(a1, sel_txPower);
  *(void *)(a5 + 64) = v21;
  id v22 = objc_msgSend(a1, sel_defaultHeroIcon);
  type metadata accessor for FMIPHawkeyeProductInformation();
  sub_1D4469468();

  id v23 = objc_msgSend(a1, sel_defaultHeroIcon2x);
  sub_1D4469468();

  id v24 = objc_msgSend(a1, sel_defaultHeroIcon3x);
  sub_1D4469468();

  id v25 = objc_msgSend(a1, sel_defaultListIcon);
  sub_1D4469468();

  id v26 = objc_msgSend(a1, sel_defaultListIcon2x);
  sub_1D4469468();

  id v27 = objc_msgSend(a1, sel_defaultListIcon3x);
  sub_1D4469468();

  unsigned __int16 v28 = (unsigned __int16)objc_msgSend(a1, sel_capabilities);
  *(unsigned char *)(a5 + 72) = (v28 & 0x1000) != 0;
  *(unsigned char *)(a5 + 73) = a4 & 1;
}

uint64_t FMIPHawkeyeProductInformation.vendorIdentifier.getter()
{
  return *(void *)v0;
}

uint64_t FMIPHawkeyeProductInformation.productIdentifier.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t FMIPHawkeyeProductInformation.modelName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPHawkeyeProductInformation.manufacturerName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPHawkeyeProductInformation.appBundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FMIPHawkeyeProductInformation.antennaPower.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t FMIPHawkeyeProductInformation.requiresAudioSafetyAlert.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t FMIPHawkeyeProductInformation.requiresAdditionalConnectionTime.getter()
{
  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t FMIPHawkeyeProductInformation.identifier.getter()
{
  uint64_t v1 = sub_1D446A6D8();
  sub_1D4469C08();
  sub_1D446A6D8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  return v1;
}

id SPUnknownBeacon.vendorId.getter()
{
  uint64_t v1 = sub_1D44690D8();
  MEMORY[0x1F4188790](v1 - 8);
  id result = objc_msgSend(v0, sel_metadata);
  if (result)
  {
    int v3 = result;
    id v4 = objc_msgSend(result, sel_productData);

    uint64_t v5 = sub_1D44694E8();
    unint64_t v7 = v6;

    switch(v7 >> 62)
    {
      case 1uLL:
        LODWORD(v8) = HIDWORD(v5) - v5;
        if (__OFSUB__(HIDWORD(v5), v5)) {
          goto LABEL_12;
        }
        uint64_t v8 = (int)v8;
LABEL_6:
        if (v8 < -1)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x1D43E2354);
        }
LABEL_7:
        sub_1D4469508();
        sub_1D44690C8();
        sub_1D43E3998();
        sub_1D446A468();
        sub_1D42DCFDC(v5, v7);
        if (v13) {
          id result = 0;
        }
        else {
          id result = (id)v12;
        }
        break;
      case 2uLL:
        uint64_t v10 = *(void *)(v5 + 16);
        uint64_t v9 = *(void *)(v5 + 24);
        BOOL v11 = __OFSUB__(v9, v10);
        uint64_t v8 = v9 - v10;
        if (!v11) {
          goto LABEL_6;
        }
        goto LABEL_13;
      default:
        goto LABEL_7;
    }
  }
  return result;
}

id SPUnknownBeacon.productId.getter()
{
  uint64_t v1 = sub_1D44690D8();
  MEMORY[0x1F4188790](v1 - 8);
  id result = objc_msgSend(v0, sel_metadata);
  if (result)
  {
    int v3 = result;
    id v4 = objc_msgSend(result, sel_productData);

    uint64_t v5 = sub_1D44694E8();
    unint64_t v7 = v6;

    switch(v7 >> 62)
    {
      case 1uLL:
        int v10 = HIDWORD(v5) - v5;
        if (__OFSUB__(HIDWORD(v5), v5)) {
          goto LABEL_17;
        }
        uint64_t v8 = v10;
        uint64_t v9 = (uint64_t)(v10 + (v10 < 0)) >> 1;
        break;
      case 2uLL:
        uint64_t v12 = *(void *)(v5 + 16);
        uint64_t v11 = *(void *)(v5 + 24);
        uint64_t v8 = v11 - v12;
        if (__OFSUB__(v11, v12)) {
          goto LABEL_18;
        }
        if (v8 >= 0) {
          uint64_t v13 = v11 - v12;
        }
        else {
          uint64_t v13 = v8 + 1;
        }
        uint64_t v9 = v13 >> 1;
        break;
      case 3uLL:
        goto LABEL_12;
      default:
        uint64_t v8 = BYTE6(v7);
        uint64_t v9 = BYTE6(v7) >> 1;
        break;
    }
    if (v8 < v9)
    {
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      JUMPOUT(0x1D43E2514);
    }
LABEL_12:
    sub_1D4469508();
    sub_1D44690C8();
    sub_1D43E3998();
    sub_1D446A468();
    sub_1D42DCFDC(v5, v7);
    if (v15) {
      return 0;
    }
    else {
      return (id)v14;
    }
  }
  return result;
}

uint64_t FMIPHawkeyeProductInformation.hash(into:)()
{
  sub_1D446A838();
  sub_1D446A838();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56))
  {
    sub_1D446A848();
    swift_bridgeObjectRetain();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D446A848();
  }
  sub_1D446A868();
  sub_1D446A848();
  sub_1D446A848();
  type metadata accessor for FMIPHawkeyeProductInformation();
  sub_1D4469498();
  sub_1D43E3D34(&qword_1EA6C9080, MEMORY[0x1E4F276F0]);
  sub_1D4469AD8();
  sub_1D4469AD8();
  sub_1D4469AD8();
  sub_1D4469AD8();
  sub_1D4469AD8();
  return sub_1D4469AD8();
}

unint64_t sub_1D43E2704(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
    case 9:
    case 10:
    case 12:
    case 13:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x6D614E6C65646F6DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x50616E6E65746E61;
      break;
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    case 7:
      unint64_t result = 0xD000000000000020;
      break;
    case 8:
      unint64_t result = 0x48746C7561666564;
      break;
    case 11:
      unint64_t result = 0x4C746C7561666564;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D43E2894()
{
  return sub_1D43E2704(*v0);
}

uint64_t sub_1D43E289C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D43E4D0C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D43E28C4(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_1D43E28D0(uint64_t a1)
{
  unint64_t v2 = sub_1D43E3B88();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D43E290C(uint64_t a1)
{
  unint64_t v2 = sub_1D43E3B88();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPHawkeyeProductInformation.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6CAE18);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43E3B88();
  sub_1D446A8E8();
  v8[31] = 0;
  sub_1D446A688();
  if (!v1)
  {
    v8[30] = 1;
    sub_1D446A688();
    v8[29] = 2;
    sub_1D446A658();
    v8[28] = 3;
    sub_1D446A658();
    v8[27] = 4;
    sub_1D446A628();
    v8[26] = 5;
    sub_1D446A678();
    v8[25] = 6;
    sub_1D446A668();
    v8[24] = 7;
    sub_1D446A668();
    type metadata accessor for FMIPHawkeyeProductInformation();
    v8[15] = 8;
    sub_1D4469498();
    sub_1D43E3D34(&qword_1EA6CAE28, MEMORY[0x1E4F276F0]);
    sub_1D446A698();
    v8[14] = 9;
    sub_1D446A698();
    v8[13] = 10;
    sub_1D446A698();
    v8[12] = 11;
    sub_1D446A698();
    v8[11] = 12;
    sub_1D446A698();
    v8[10] = 13;
    sub_1D446A698();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t FMIPHawkeyeProductInformation.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t FMIPHawkeyeProductInformation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v3 = sub_1D4469498();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  uint64_t v63 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v55 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v51 - v8;
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)v51 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  char v15 = (char *)v51 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)v51 - v17;
  MEMORY[0x1F4188790](v16);
  unint64_t v20 = (char *)v51 - v19;
  uint64_t v57 = sub_1D42D5DA0(&qword_1EA6CAE30);
  uint64_t v54 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  id v22 = (char *)v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
  MEMORY[0x1F4188790](v60);
  uint64_t v61 = (char *)v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1[3];
  uint64_t v58 = a1;
  sub_1D42C26F4(a1, v24);
  sub_1D43E3B88();
  uint64_t v56 = v22;
  id v25 = v59;
  sub_1D446A8C8();
  if (v25)
  {
    long long v59 = v25;
    int v29 = 0;
    unsigned int v30 = 0;
    goto LABEL_4;
  }
  long long v59 = v20;
  uint64_t v52 = v18;
  uint64_t v27 = v54;
  id v26 = v55;
  char v77 = 0;
  uint64_t v28 = sub_1D446A5C8();
  uint64_t v40 = v61;
  *(void *)uint64_t v61 = v28;
  char v76 = 1;
  *((void *)v40 + 1) = sub_1D446A5C8();
  char v75 = 2;
  *((void *)v40 + 2) = sub_1D446A598();
  *((void *)v40 + 3) = v41;
  char v74 = 3;
  *((void *)v40 + 4) = sub_1D446A598();
  *((void *)v40 + 5) = v42;
  char v73 = 4;
  *((void *)v40 + 6) = sub_1D446A558();
  *((void *)v40 + 7) = v43;
  char v72 = 5;
  sub_1D446A5B8();
  *((void *)v40 + 8) = v44;
  char v71 = 6;
  v40[72] = sub_1D446A5A8() & 1;
  char v70 = 7;
  v61[73] = sub_1D446A5A8() & 1;
  char v69 = 8;
  v51[2] = sub_1D43E3D34(&qword_1EA6CAE38, MEMORY[0x1E4F276F0]);
  sub_1D446A5D8();
  uint64_t v45 = &v61[v60[12]];
  v51[0] = *(void *)(v63 + 32);
  v51[1] = v63 + 32;
  ((void (*)(char *, char *, uint64_t))v51[0])(v45, v59, v62);
  char v68 = 9;
  sub_1D446A5D8();
  long long v59 = 0;
  ((void (*)(char *, char *, uint64_t))v51[0])(&v61[v60[13]], v52, v62);
  char v67 = 10;
  uint64_t v46 = v59;
  sub_1D446A5D8();
  long long v59 = v46;
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v56, v57);
    int v29 = 0;
    unsigned int v30 = 796;
    goto LABEL_4;
  }
  ((void (*)(char *, char *, uint64_t))v51[0])(&v61[v60[14]], v15, v62);
  char v66 = 11;
  uint64_t v47 = v59;
  sub_1D446A5D8();
  long long v59 = v47;
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v56, v57);
    int v29 = 0;
    unsigned int v30 = 1820;
    goto LABEL_4;
  }
  ((void (*)(char *, char *, uint64_t))v51[0])(&v61[v60[15]], v12, v62);
  char v65 = 12;
  uint64_t v48 = v59;
  sub_1D446A5D8();
  long long v59 = v48;
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v56, v57);
    unsigned int v30 = 3868;
    int v29 = 1;
LABEL_4:
    uint64_t v31 = v61;
    uint64_t result = sub_1D42BEC64((uint64_t)v58);
    int v33 = (v30 >> 9) & 1;
    int v34 = (v30 >> 10) & 1;
    if ((v30 & 4) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      if ((v30 & 8) == 0)
      {
LABEL_6:
        if ((v30 & 0x10) == 0) {
          goto LABEL_7;
        }
        goto LABEL_14;
      }
    }
    else if ((v30 & 8) == 0)
    {
      goto LABEL_6;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if ((v30 & 0x10) == 0)
    {
LABEL_7:
      if ((v30 & 0x100) != 0)
      {
LABEL_8:
        int v35 = 0;
        goto LABEL_9;
      }
LABEL_15:
      if ((v30 & 0x200) != 0)
      {
        uint64_t v39 = v63;
        long long v38 = *(uint64_t (**)(char *, uint64_t))(v63 + 8);
        int v36 = v60;
        uint64_t result = v38(&v31[v60[13]], v62);
        int v35 = 0;
        if ((v30 & 0x400) != 0)
        {
          uint64_t v37 = v62;
LABEL_18:
          uint64_t result = v38(&v31[v36[14]], v37);
          if ((v29 & 1) == 0) {
            goto LABEL_29;
          }
LABEL_23:
          uint64_t result = v38(&v31[v36[15]], v37);
          if ((v35 & 1) == 0) {
            return result;
          }
          return v38(&v31[v36[16]], v37);
        }
        uint64_t v37 = v62;
        if (!v29) {
          goto LABEL_29;
        }
        goto LABEL_26;
      }
      int v35 = 0;
      uint64_t v37 = v62;
      int v36 = v60;
LABEL_21:
      if (v34)
      {
        uint64_t v39 = v63;
        long long v38 = *(uint64_t (**)(char *, uint64_t))(v63 + 8);
        uint64_t result = v38(&v31[v36[14]], v37);
        if (v29) {
          goto LABEL_23;
        }
        goto LABEL_29;
      }
      uint64_t v39 = v63;
      if (!v29) {
        goto LABEL_29;
      }
LABEL_26:
      long long v38 = *(uint64_t (**)(char *, uint64_t))(v39 + 8);
      uint64_t result = v38(&v31[v36[15]], v37);
      if ((v35 & 1) == 0) {
        return result;
      }
      return v38(&v31[v36[16]], v37);
    }
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v30 & 0x100) != 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
  ((void (*)(char *, char *, uint64_t))v51[0])(&v61[v60[16]], v9, v62);
  char v64 = 13;
  uint64_t v49 = v59;
  sub_1D446A5D8();
  long long v59 = v49;
  if (!v49)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v56, v57);
    uint64_t v50 = (uint64_t)v61;
    ((void (*)(char *, char *, uint64_t))v51[0])(&v61[v60[17]], v26, v62);
    sub_1D43E3BDC(v50, v53);
    sub_1D42BEC64((uint64_t)v58);
    return sub_1D4354F04(v50);
  }
  (*(void (**)(char *, uint64_t))(v27 + 8))(v56, v57);
  sub_1D42BEC64((uint64_t)v58);
  uint64_t v31 = v61;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v35 = 1;
  int v29 = 1;
  int v34 = 1;
  LOBYTE(v33) = 1;
LABEL_9:
  int v36 = v60;
  uint64_t v37 = v62;
  long long v38 = *(uint64_t (**)(char *, uint64_t))(v63 + 8);
  uint64_t result = v38(&v31[v60[12]], v62);
  if ((v33 & 1) == 0) {
    goto LABEL_21;
  }
  uint64_t result = v38(&v31[v36[13]], v37);
  if (v34)
  {
    uint64_t v39 = v63;
    goto LABEL_18;
  }
  uint64_t v39 = v63;
  if (v29) {
    goto LABEL_26;
  }
LABEL_29:
  if (!v35) {
    return result;
  }
  long long v38 = *(uint64_t (**)(char *, uint64_t))(v39 + 8);
  return v38(&v31[v36[16]], v37);
}

uint64_t sub_1D43E36E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPHawkeyeProductInformation.init(from:)(a1, a2);
}

uint64_t sub_1D43E36F8(void *a1)
{
  return FMIPHawkeyeProductInformation.encode(to:)(a1);
}

uint64_t sub_1D43E3710()
{
  return sub_1D446A888();
}

uint64_t sub_1D43E3754()
{
  return sub_1D446A888();
}

BOOL static FMIPHawkeyeProductInformation.AssetScale.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FMIPHawkeyeProductInformation.AssetScale.hash(into:)()
{
  return sub_1D446A838();
}

uint64_t FMIPHawkeyeProductInformation.AssetScale.hashValue.getter()
{
  return sub_1D446A888();
}

BOOL static FMIPHawkeyeProductInformation.AssetType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FMIPHawkeyeProductInformation.AssetType.hash(into:)()
{
  return sub_1D446A838();
}

uint64_t FMIPHawkeyeProductInformation.AssetType.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t FMIPHawkeyeProductInformation.assetURL(for:scale:)@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X8>)
{
  int v5 = *a2;
  if (*a1 == 1)
  {
    if (*a2)
    {
      if (v5 == 1) {
        uint64_t v6 = *(int *)(type metadata accessor for FMIPHawkeyeProductInformation() + 52);
      }
      else {
        uint64_t v6 = *(int *)(type metadata accessor for FMIPHawkeyeProductInformation() + 56);
      }
    }
    else
    {
      uint64_t v6 = *(int *)(type metadata accessor for FMIPHawkeyeProductInformation() + 48);
    }
  }
  else if (*a2)
  {
    if (v5 == 1) {
      uint64_t v6 = *(int *)(type metadata accessor for FMIPHawkeyeProductInformation() + 64);
    }
    else {
      uint64_t v6 = *(int *)(type metadata accessor for FMIPHawkeyeProductInformation() + 68);
    }
  }
  else
  {
    uint64_t v6 = *(int *)(type metadata accessor for FMIPHawkeyeProductInformation() + 60);
  }
  uint64_t v7 = v3 + v6;
  uint64_t v8 = sub_1D4469498();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  return v9(a3, v7, v8);
}

unint64_t sub_1D43E3998()
{
  unint64_t result = qword_1EA6CAE10;
  if (!qword_1EA6CAE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAE10);
  }
  return result;
}

uint64_t _s8FMIPCore29FMIPHawkeyeProductInformationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    BOOL v4 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v4 || (sub_1D446A758())
      && (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
       || (sub_1D446A758() & 1) != 0))
    {
      uint64_t v5 = *(void *)(a1 + 56);
      uint64_t v6 = *(void *)(a2 + 56);
      if (v5)
      {
        if (!v6 || (*(void *)(a1 + 48) != *(void *)(a2 + 48) || v5 != v6) && (sub_1D446A758() & 1) == 0) {
          return 0;
        }
      }
      else if (v6)
      {
        return 0;
      }
      if (*(double *)(a1 + 64) == *(double *)(a2 + 64)
        && *(unsigned __int8 *)(a1 + 72) == *(unsigned __int8 *)(a2 + 72)
        && *(unsigned __int8 *)(a1 + 73) == *(unsigned __int8 *)(a2 + 73))
      {
        uint64_t v7 = (int *)type metadata accessor for FMIPHawkeyeProductInformation();
        if ((MEMORY[0x1D94457C0](a1 + v7[12], a2 + v7[12]) & 1) != 0
          && (MEMORY[0x1D94457C0](a1 + v7[13], a2 + v7[13]) & 1) != 0
          && (MEMORY[0x1D94457C0](a1 + v7[14], a2 + v7[14]) & 1) != 0
          && (MEMORY[0x1D94457C0](a1 + v7[15], a2 + v7[15]) & 1) != 0
          && (MEMORY[0x1D94457C0](a1 + v7[16], a2 + v7[16]) & 1) != 0)
        {
          JUMPOUT(0x1D94457C0);
        }
      }
    }
  }
  return 0;
}

unint64_t sub_1D43E3B88()
{
  unint64_t result = qword_1EA6CAE20;
  if (!qword_1EA6CAE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAE20);
  }
  return result;
}

uint64_t sub_1D43E3BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPHawkeyeProductInformation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D43E3C40(void *a1)
{
  a1[2] = sub_1D43E3D34(&qword_1EA6C9800, (void (*)(uint64_t))type metadata accessor for FMIPHawkeyeProductInformation);
  a1[3] = sub_1D43E3D34(&qword_1EA6C97C8, (void (*)(uint64_t))type metadata accessor for FMIPHawkeyeProductInformation);
  uint64_t result = sub_1D43E3D34(&qword_1EA6CAE40, (void (*)(uint64_t))type metadata accessor for FMIPHawkeyeProductInformation);
  a1[4] = result;
  return result;
}

uint64_t sub_1D43E3CEC()
{
  return sub_1D43E3D34(&qword_1EA6CAE48, (void (*)(uint64_t))type metadata accessor for FMIPHawkeyeProductInformation);
}

uint64_t sub_1D43E3D34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D43E3D80()
{
  unint64_t result = qword_1EA6CAE50;
  if (!qword_1EA6CAE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAE50);
  }
  return result;
}

unint64_t sub_1D43E3DD8()
{
  unint64_t result = qword_1EA6CAE58;
  if (!qword_1EA6CAE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAE58);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FMIPHawkeyeProductInformation(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a2[6];
    uint64_t v10 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v10;
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(unsigned char *)(a1 + 73) = *((unsigned char *)a2 + 73);
    uint64_t v11 = a3[12];
    uint64_t v17 = a1 + v11;
    uint64_t v12 = (uint64_t)a2 + v11;
    *(void *)(a1 + 48) = v9;
    uint64_t v13 = sub_1D4469498();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v17, v12, v13);
    v14((uint64_t)v4 + a3[13], (uint64_t)a2 + a3[13], v13);
    v14((uint64_t)v4 + a3[14], (uint64_t)a2 + a3[14], v13);
    v14((uint64_t)v4 + a3[15], (uint64_t)a2 + a3[15], v13);
    v14((uint64_t)v4 + a3[16], (uint64_t)a2 + a3[16], v13);
    v14((uint64_t)v4 + a3[17], (uint64_t)a2 + a3[17], v13);
  }
  return v4;
}

uint64_t destroy for FMIPHawkeyeProductInformation(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[12];
  uint64_t v5 = sub_1D4469498();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  v8(a1 + a2[13], v5);
  v8(a1 + a2[14], v5);
  v8(a1 + a2[15], v5);
  v8(a1 + a2[16], v5);
  uint64_t v6 = a1 + a2[17];
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v5);
}

uint64_t initializeWithCopy for FMIPHawkeyeProductInformation(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  uint64_t v10 = a3[12];
  uint64_t v15 = a1 + v10;
  uint64_t v11 = a2 + v10;
  *(void *)(a1 + 48) = v8;
  uint64_t v12 = sub_1D4469498();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v15, v11, v12);
  v13(a1 + a3[13], a2 + a3[13], v12);
  v13(a1 + a3[14], a2 + a3[14], v12);
  v13(a1 + a3[15], a2 + a3[15], v12);
  v13(a1 + a3[16], a2 + a3[16], v12);
  v13(a1 + a3[17], a2 + a3[17], v12);
  return a1;
}

uint64_t assignWithCopy for FMIPHawkeyeProductInformation(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  uint64_t v6 = a3[12];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1D4469498();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + a3[13], a2 + a3[13], v9);
  v10(a1 + a3[14], a2 + a3[14], v9);
  v10(a1 + a3[15], a2 + a3[15], v9);
  v10(a1 + a3[16], a2 + a3[16], v9);
  v10(a1 + a3[17], a2 + a3[17], v9);
  return a1;
}

uint64_t initializeWithTake for FMIPHawkeyeProductInformation(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 32);
  long long v8 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  uint64_t v9 = a3[12];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 48) = v8;
  uint64_t v12 = sub_1D4469498();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v13(a1 + a3[13], a2 + a3[13], v12);
  v13(a1 + a3[14], a2 + a3[14], v12);
  v13(a1 + a3[15], a2 + a3[15], v12);
  v13(a1 + a3[16], a2 + a3[16], v12);
  v13(a1 + a3[17], a2 + a3[17], v12);
  return a1;
}

uint64_t assignWithTake for FMIPHawkeyeProductInformation(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  uint64_t v9 = a3[12];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1D4469498();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40);
  v13(v10, v11, v12);
  v13(a1 + a3[13], a2 + a3[13], v12);
  v13(a1 + a3[14], a2 + a3[14], v12);
  v13(a1 + a3[15], a2 + a3[15], v12);
  v13(a1 + a3[16], a2 + a3[16], v12);
  v13(a1 + a3[17], a2 + a3[17], v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPHawkeyeProductInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D43E470C);
}

uint64_t sub_1D43E470C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1D4469498();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FMIPHawkeyeProductInformation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D43E47D0);
}

uint64_t sub_1D43E47D0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1D4469498();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPHawkeyeProductInformation.AssetScale(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43E4944);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPHawkeyeProductInformation.AssetScale()
{
  return &type metadata for FMIPHawkeyeProductInformation.AssetScale;
}

unsigned char *storeEnumTagSinglePayload for FMIPHawkeyeProductInformation.AssetType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43E4A48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPHawkeyeProductInformation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPHawkeyeProductInformation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    void *result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43E4BCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPHawkeyeProductInformation.CodingKeys()
{
  return &type metadata for FMIPHawkeyeProductInformation.CodingKeys;
}

unint64_t sub_1D43E4C08()
{
  unint64_t result = qword_1EA6CAE60;
  if (!qword_1EA6CAE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAE60);
  }
  return result;
}

unint64_t sub_1D43E4C60()
{
  unint64_t result = qword_1EA6CAE68;
  if (!qword_1EA6CAE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAE68);
  }
  return result;
}

unint64_t sub_1D43E4CB8()
{
  unint64_t result = qword_1EA6CAE70;
  if (!qword_1EA6CAE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAE70);
  }
  return result;
}

uint64_t sub_1D43E4D0C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001D447ED00 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D447D8A0 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E6C65646F6DLL && a2 == 0xE900000000000065 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D447D210 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D447ED20 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x50616E6E65746E61 && a2 == 0xEC0000007265776FLL || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D4482850 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001D4482870 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x48746C7561666564 && a2 == 0xEF6E6F63496F7265 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D44828A0 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D44828C0 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x4C746C7561666564 && a2 == 0xEF6E6F6349747369 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D44828E0 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D4482900)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v5 = sub_1D446A758();
    swift_bridgeObjectRelease();
    if (v5) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

uint64_t sub_1D43E529C()
{
  sub_1D4469168();
  swift_allocObject();
  uint64_t result = sub_1D4469158();
  qword_1EA6CAE78 = result;
  return result;
}

uint64_t static FMIPDemoContent.load(from:)()
{
  uint64_t result = sub_1D44694A8();
  if (!v0)
  {
    uint64_t v3 = result;
    unint64_t v4 = v2;
    if (qword_1EA6C8FC8 != -1) {
      swift_once();
    }
    sub_1D43E53A0();
    sub_1D4469148();
    sub_1D42DCFDC(v3, v4);
    return v5;
  }
  return result;
}

unint64_t sub_1D43E53A0()
{
  unint64_t result = qword_1EA6CAE80;
  if (!qword_1EA6CAE80)
  {
    type metadata accessor for FMIPDemoContent();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAE80);
  }
  return result;
}

uint64_t type metadata accessor for FMIPDemoContent()
{
  return self;
}

uint64_t sub_1D43E5418()
{
  if (*v0) {
    return 0x73656369766564;
  }
  else {
    return 0x654D796C696D6166;
  }
}

uint64_t sub_1D43E5460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D43E5C44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43E5488(uint64_t a1)
{
  unint64_t v2 = sub_1D43E582C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D43E54C4(uint64_t a1)
{
  unint64_t v2 = sub_1D43E582C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPDemoContent.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMIPDemoContent.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FMIPDemoContent.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FMIPDemoContent.init(from:)(a1);
  return v2;
}

uint64_t FMIPDemoContent.init(from:)(void *a1)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6CAE88);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43E582C();
  sub_1D446A8C8();
  if (v2)
  {
    type metadata accessor for FMIPDemoContent();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1D42D5DA0(&qword_1EA6CAE98);
    char v10 = 0;
    sub_1D43E58D4(&qword_1EA6CAEA0, &qword_1EA6CAE98, (void (*)(void))sub_1D43E5880);
    sub_1D446A5D8();
    *(void *)(v1 + 16) = v11;
    sub_1D42D5DA0(&qword_1EA6CAEB0);
    char v10 = 1;
    sub_1D43E58D4(&qword_1EA6CAEB8, &qword_1EA6CAEB0, (void (*)(void))sub_1D43E594C);
    sub_1D446A5D8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(void *)(v1 + 24) = v11;
  }
  sub_1D42BEC64((uint64_t)a1);
  return v1;
}

unint64_t sub_1D43E582C()
{
  unint64_t result = qword_1EA6CAE90;
  if (!qword_1EA6CAE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAE90);
  }
  return result;
}

unint64_t sub_1D43E5880()
{
  unint64_t result = qword_1EA6CAEA8;
  if (!qword_1EA6CAEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAEA8);
  }
  return result;
}

uint64_t sub_1D43E58D4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D42DB55C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D43E594C()
{
  unint64_t result = qword_1EA6CAEC0;
  if (!qword_1EA6CAEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAEC0);
  }
  return result;
}

uint64_t sub_1D43E59A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for FMIPDemoContent();
  uint64_t v5 = swift_allocObject();
  uint64_t result = FMIPDemoContent.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t method lookup function for FMIPDemoContent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPDemoContent);
}

uint64_t dispatch thunk of FMIPDemoContent.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unsigned char *storeEnumTagSinglePayload for FMIPDemoContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43E5B04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPDemoContent.CodingKeys()
{
  return &type metadata for FMIPDemoContent.CodingKeys;
}

unint64_t sub_1D43E5B40()
{
  unint64_t result = qword_1EA6CAEC8;
  if (!qword_1EA6CAEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAEC8);
  }
  return result;
}

unint64_t sub_1D43E5B98()
{
  unint64_t result = qword_1EA6CAED0;
  if (!qword_1EA6CAED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAED0);
  }
  return result;
}

unint64_t sub_1D43E5BF0()
{
  unint64_t result = qword_1EA6CAED8;
  if (!qword_1EA6CAED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAED8);
  }
  return result;
}

uint64_t sub_1D43E5C44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654D796C696D6166 && a2 == 0xED0000737265626DLL;
  if (v2 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656369766564 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1D446A758();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

char sub_1D43E5D5C@<W0>(char *a1@<X8>)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7CE38);
  char result = MEMORY[0x1F4188790](v3 - 8);
  char v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 56);
  if (!v7 || !*(void *)(v7 + 16)) {
    goto LABEL_7;
  }
  uint64_t v8 = type metadata accessor for FMIPDevice();
  sub_1D43AA090(v7+ *(int *)(v8 + 124)+ ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80)), (uint64_t)v6);
  uint64_t v9 = type metadata accessor for FMIPEraseMetadata();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v6, 1, v9) == 1)
  {
    char result = sub_1D43AA0F8((uint64_t)v6);
LABEL_7:
    char v11 = 0;
    goto LABEL_8;
  }
  uint64_t v10 = *v6;
  sub_1D430CAB8((uint64_t)v6);
  char result = FMIPActionStatus.init(rawValue:)(qword_1D4475970[v10]).value;
  char v11 = v13;
  if (v13 == 12)
  {
    char v11 = 2;
    goto LABEL_8;
  }
  if (v13 == 18) {
    goto LABEL_7;
  }
LABEL_8:
  *a1 = v11;
  return result;
}

uint64_t sub_1D43E5EC4(uint64_t a1)
{
  return sub_1D43E5F10(a1);
}

uint64_t sub_1D43E5F10(uint64_t a1)
{
  sub_1D42A4D5C(a1, (uint64_t)v13);
  uint64_t v3 = sub_1D432C7E4(v13);
  if (!v1)
  {
    uint64_t v4 = qword_1EBD80068;
    swift_retain();
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1D4469928();
    sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
    swift_retain();
    char v6 = sub_1D44698F8();
    os_log_type_t v7 = sub_1D446A038();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      v13[0] = v9;
      uint64_t v10 = sub_1D432CBAC();
      v13[6] = sub_1D42CB9EC(v10, v11, v13);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v6, v7, "FMIPCancelEraseResponse: initialized with coder %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v9, -1, -1);
      MEMORY[0x1D9447730](v8, -1, -1);
    }
    else
    {
      swift_release_n();
    }
  }
  sub_1D42BEC64(a1);
  return v3;
}

uint64_t type metadata accessor for FMIPCancelEraseResponse()
{
  return self;
}

uint64_t type metadata accessor for FMIPSiriBaseRequest()
{
  uint64_t result = qword_1EBD7FF18;
  if (!qword_1EBD7FF18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D43E6164()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D43E61C8()
{
  v10[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = self;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1D4469A38();
  swift_bridgeObjectRelease();
  unsigned int v2 = objc_msgSend(v0, sel_isValidJSONObject_, v1);

  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1D4469A38();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v4 = objc_msgSend(v0, sel_dataWithJSONObject_options_error_, v3, 0, v10);

  id v5 = v10[0];
  if (!v4)
  {
    os_log_type_t v7 = v5;
    uint64_t v8 = (void *)sub_1D44693D8();

    swift_willThrow();
    return 0;
  }
  uint64_t v6 = sub_1D44694E8();

  return v6;
}

uint64_t sub_1D43E6368()
{
  uint64_t v1 = (uint64_t *)(v0 + qword_1EBD7FEF8);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (!*(void *)(*v1 + 16))
  {
    long long v9 = 0u;
    long long v10 = 0u;
LABEL_9:
    sub_1D429D4F4((uint64_t)&v9);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  unint64_t v3 = sub_1D42C4FCC(0x6F43746E65696C63, 0xED0000747865746ELL);
  if (v4)
  {
    sub_1D42CBAC0(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v9);
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1)) {
    goto LABEL_9;
  }
  sub_1D42D5DA0(&qword_1EBD7FD60);
  if (!swift_dynamicCast())
  {
LABEL_10:
    uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7FD60);
    uint64_t v5 = MEMORY[0x1E4FBC868];
    *((void *)&v10 + 1) = v6;
    *(void *)&long long v9 = MEMORY[0x1E4FBC868];
    swift_beginAccess();
    sub_1D42C4018((uint64_t)&v9, 0x6F43746E65696C63, 0xED0000747865746ELL);
    swift_endAccess();
    return v5;
  }
  return v8;
}

uint64_t sub_1D43E64D0(uint8_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v46 = a1;
  uint64_t v5 = sub_1D4469728();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = (uint64_t *)(v4 + qword_1EBD7FF08);
  *long long v9 = 0xD000000000000017;
  v9[1] = 0x80000001D44829D0;
  uint64_t v10 = MEMORY[0x1E4FBC868];
  *(void *)(v4 + qword_1EBD7FEF8) = MEMORY[0x1E4FBC868];
  *(void *)(v4 + qword_1EBD7FF00) = v10;
  unint64_t v11 = (void *)(v4 + qword_1EBD7FF10);
  *unint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = qword_1EBD80068;
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1D4469928();
  uint64_t v14 = sub_1D42D7FAC(v13, (uint64_t)qword_1EBD83228);
  uint64_t v15 = sub_1D44698F8();
  os_log_type_t v16 = sub_1D446A038();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v47 = (uint8_t *)v14;
  if (v17)
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_1D4271000, v15, v16, "FMIPSiriBaseRequest: initialized", v18, 2u);
    MEMORY[0x1D9447730](v18, -1, -1);
  }

  uint64_t v19 = v45;
  *unint64_t v11 = v44;
  v11[1] = v19;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v20 = v9[1];
  v49[0] = *v9;
  v49[1] = v20;
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1D4469748();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F616C8], v5);
  swift_retain();
  sub_1D4469738();
  sub_1D43E6BDC();
  sub_1D43E6EA0();
  swift_retain_n();
  id v22 = sub_1D44698F8();
  os_log_type_t v23 = sub_1D446A008();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v49[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1D4469A68();
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_1D42CB9EC(v26, v28, v49);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v22, v23, "FMIP Siri Request Headers: %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v25, -1, -1);
    MEMORY[0x1D9447730](v24, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  swift_retain_n();
  int v29 = sub_1D44698F8();
  os_log_type_t v30 = sub_1D446A008();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    v49[0] = v32;
    *(_DWORD *)uint64_t v31 = 136315138;
    uint64_t v46 = v31 + 4;
    sub_1D43E6368();
    uint64_t v33 = sub_1D4469A68();
    unint64_t v35 = v34;
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_1D42CB9EC(v33, v35, v49);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v29, v30, "FMIP Siri Request ClientContext: %s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v32, -1, -1);
    MEMORY[0x1D9447730](v31, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  swift_retain_n();
  int v36 = sub_1D44698F8();
  os_log_type_t v37 = sub_1D446A008();
  if (os_log_type_enabled(v36, v37))
  {
    long long v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v50 = v39;
    *(_DWORD *)long long v38 = 136315138;
    uint64_t v47 = v38 + 4;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1D4469A68();
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    uint64_t v48 = sub_1D42CB9EC(v40, v42, &v50);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v36, v37, "FMIP Siri Request Body: %s", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v39, -1, -1);
    MEMORY[0x1D9447730](v38, -1, -1);

    swift_release();
  }
  else
  {

    swift_release_n();
  }
  return v21;
}

uint64_t sub_1D43E6BDC()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(self, sel_sharedInstance);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  id v5 = v2;
  sub_1D446A378();
  swift_bridgeObjectRelease();
  strcpy((char *)v13, "FMIPCore/1.0 ");
  HIWORD(v13[1]) = -4864;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1D43E7844;
  *(void *)(v6 + 24) = v3;
  swift_retain();
  sub_1D42D5DA0(&qword_1EBD7FFF0);
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1D43E7868;
  *(void *)(v7 + 24) = v4;
  uint64_t v14 = sub_1D43E78C4;
  uint64_t v15 = v7;
  swift_retain();
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  uint64_t v8 = v13[0];
  uint64_t v9 = v13[1];
  uint64_t v10 = (uint64_t (**)())(v1 + qword_1EBD7FF00);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v10;
  *uint64_t v10 = (uint64_t (*)())0x8000000000000000;
  sub_1D42C4CF0(v8, v9, 0x6567412D72657355, 0xEA0000000000746ELL, isUniquelyReferenced_nonNull_native);
  *uint64_t v10 = v14;
  swift_bridgeObjectRelease();
  swift_endAccess();

  swift_release();
  return swift_release();
}

uint64_t sub_1D43E6E40(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_1D4469B38();

  return v4;
}

void sub_1D43E6EA0()
{
  uint64_t v1 = v0;
  uint64_t v41 = sub_1D4469618();
  uint64_t v2 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4469608();
  id v5 = objc_msgSend(self, sel_sharedInstance);
  *((void *)&v47 + 1) = MEMORY[0x1E4FBB550];
  *(void *)&long long v46 = 1;
  uint64_t v6 = sub_1D43E6368();
  sub_1D42C5494(&v46, &v44);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v43 = v6;
  sub_1D42C4E78(&v44, 0xD000000000000011, 0x80000001D447F8B0, isUniquelyReferenced_nonNull_native);
  uint64_t v8 = v43;
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1D42D5DA0(&qword_1EBD7FD60);
  uint64_t v45 = v9;
  *(void *)&long long v44 = v8;
  swift_beginAccess();
  sub_1D42C4018((uint64_t)&v44, 0x6F43746E65696C63, 0xED0000747865746ELL);
  swift_endAccess();
  sub_1D4469518();
  *((void *)&v47 + 1) = MEMORY[0x1E4FBB3D0];
  *(double *)&long long v46 = v10 * 1000.0;
  uint64_t v11 = sub_1D43E6368();
  sub_1D42C5494(&v46, &v44);
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v43 = v11;
  sub_1D42C4E78(&v44, 0x6D617473656D6974, 0xE900000000000070, v12);
  uint64_t v13 = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = v9;
  *(void *)&long long v44 = v13;
  swift_beginAccess();
  sub_1D42C4018((uint64_t)&v44, 0x6F43746E65696C63, 0xED0000747865746ELL);
  swift_endAccess();
  id v14 = objc_msgSend(v5, sel_deviceUDID);
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  if (v14)
  {
    os_log_type_t v16 = v14;
    uint64_t v17 = sub_1D4469B38();
    uint64_t v19 = v18;

    *((void *)&v47 + 1) = v15;
    *(void *)&long long v46 = v17;
    *((void *)&v46 + 1) = v19;
    uint64_t v20 = sub_1D43E6368();
    uint64_t v42 = v20;
    sub_1D42C5494(&v46, &v44);
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = v20;
    sub_1D42C4E78(&v44, 1684628597, 0xE400000000000000, v21);
    uint64_t v22 = v43;
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v46 = 0u;
    long long v47 = 0u;
    uint64_t v42 = sub_1D43E6368();
    sub_1D429D4F4((uint64_t)&v46);
    sub_1D43FC5A4(1684628597, 0xE400000000000000, &v44);
    sub_1D429D4F4((uint64_t)&v44);
    uint64_t v22 = v42;
  }
  uint64_t v45 = v9;
  *(void *)&long long v44 = v22;
  swift_beginAccess();
  sub_1D42C4018((uint64_t)&v44, 0x6F43746E65696C63, 0xED0000747865746ELL);
  swift_endAccess();
  id v23 = objc_msgSend(self, sel_processInfo);
  id v24 = objc_msgSend(v23, sel_processName);

  uint64_t v25 = sub_1D4469B38();
  uint64_t v27 = v26;

  *((void *)&v47 + 1) = v15;
  *(void *)&long long v46 = v25;
  *((void *)&v46 + 1) = v27;
  uint64_t v28 = sub_1D43E6368();
  sub_1D42C5494(&v46, &v44);
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v43 = v28;
  sub_1D42C4E78(&v44, 0x656372756F73, 0xE600000000000000, v29);
  uint64_t v30 = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = v9;
  *(void *)&long long v44 = v30;
  swift_beginAccess();
  sub_1D42C4018((uint64_t)&v44, 0x6F43746E65696C63, 0xED0000747865746ELL);
  swift_endAccess();
  unsigned __int8 v31 = sub_1D43E7778();
  *((void *)&v47 + 1) = MEMORY[0x1E4FBB550];
  *(void *)&long long v46 = v31;
  uint64_t v32 = sub_1D43E6368();
  sub_1D42C5494(&v46, &v44);
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v43 = v32;
  sub_1D42C4E78(&v44, 0x74536B636F6C6E75, 0xEB00000000657461, v33);
  uint64_t v34 = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = v9;
  *(void *)&long long v44 = v34;
  swift_beginAccess();
  sub_1D42C4018((uint64_t)&v44, 0x6F43746E65696C63, 0xED0000747865746ELL);
  swift_endAccess();
  uint64_t v35 = *(void *)(v1 + qword_1EBD7FF10 + 8);
  if (v35)
  {
    uint64_t v36 = *(void *)(v1 + qword_1EBD7FF10);
    *((void *)&v47 + 1) = v15;
    *(void *)&long long v46 = v36;
    *((void *)&v46 + 1) = v35;
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1D43E6368();
    sub_1D42C5494(&v46, &v44);
    char v38 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = v37;
    sub_1D42C4E78(&v44, 0x6B6F545350416176, 0xEA00000000006E65, v38);
    uint64_t v39 = v43;
    swift_bridgeObjectRelease();
    uint64_t v45 = v9;
    *(void *)&long long v44 = v39;
    swift_beginAccess();
    sub_1D42C4018((uint64_t)&v44, 0x6F43746E65696C63, 0xED0000747865746ELL);
    swift_endAccess();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v41);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v41);
  }
}

void sub_1D43E751C()
{
}

uint64_t sub_1D43E754C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43E75B4()
{
  sub_1D4469758();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43E763C()
{
  return type metadata accessor for FMIPSiriBaseRequest();
}

uint64_t sub_1D43E7644()
{
  return sub_1D43E61C8();
}

uint64_t sub_1D43E7668()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D43E76B8(uint64_t a1)
{
  uint64_t v3 = (void *)(*v1 + qword_1EBD7FF00);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1D43E7710())()
{
  return j__swift_endAccess;
}

uint64_t sub_1D43E7778()
{
  return 0;
}

uint64_t sub_1D43E780C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D43E7844()
{
  return sub_1D43E6E40(*(void **)(v0 + 16), (SEL *)&selRef_productType);
}

uint64_t sub_1D43E7868()
{
  return sub_1D43E6E40(*(void **)(v0 + 16), (SEL *)&selRef_osVersion);
}

uint64_t sub_1D43E788C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D43E78C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t dispatch thunk of FMIPAnyProductInformation.init(beacon:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FMIPAnyProductInformation.vendorIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FMIPAnyProductInformation.productIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FMIPAnyProductInformation.modelName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FMIPAnyProductInformation.manufacturerName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FMIPAnyProductInformation.appBundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FMIPAnyProductInformation.antennaPower.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

id sub_1D43E798C(uint64_t a1)
{
  uint64_t v2 = sub_1D4469618();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790]();
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D43E7B00(a1);
  double v6 = *(double *)a1;
  double v7 = *(double *)(a1 + 8);
  if (*(unsigned char *)(a1 + 24)) {
    double v8 = 0.0;
  }
  else {
    double v8 = *(double *)(a1 + 16);
  }
  if (*(unsigned char *)(a1 + 40)) {
    double v9 = 0.0;
  }
  else {
    double v9 = *(double *)(a1 + 32);
  }
  if (*(unsigned char *)(a1 + 56)) {
    double v10 = 0.0;
  }
  else {
    double v10 = *(double *)(a1 + 48);
  }
  id v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1D4469608();
  char v12 = (void *)sub_1D4469578();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v13 = objc_msgSend(v11, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_, v12, v6, v7, v8, v9, v10);

  return v13;
}

uint64_t sub_1D43E7B00(uint64_t a1)
{
  return a1;
}

uint64_t destroy for FMDemoLocation()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMDemoLocation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v3 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMDemoLocation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FMDemoLocation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v3 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMDemoLocation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 72);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMDemoLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 72) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMDemoLocation()
{
  return &type metadata for FMDemoLocation;
}

unint64_t sub_1D43E7D60(char a1)
{
  unint64_t result = 0x656475746974616CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 2:
      unint64_t result = 0x6564757469746C61;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x6C6562616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D43E7E28(void *a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6CAEF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  double v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43E8634();
  sub_1D446A8E8();
  v8[15] = 0;
  sub_1D446A678();
  if (!v1)
  {
    v8[14] = 1;
    sub_1D446A678();
    v8[13] = 2;
    sub_1D446A638();
    v8[12] = 3;
    sub_1D446A638();
    v8[11] = 4;
    sub_1D446A638();
    v8[10] = 5;
    sub_1D446A628();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1D43E8034()
{
  return sub_1D43E7D60(*v0);
}

uint64_t sub_1D43E803C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D43E8140(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D43E8064(uint64_t a1)
{
  unint64_t v2 = sub_1D43E8634();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D43E80A0(uint64_t a1)
{
  unint64_t v2 = sub_1D43E8634();
  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1D43E80DC@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D43E839C(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1D43E8128(void *a1)
{
  return sub_1D43E7E28(a1);
}

uint64_t sub_1D43E8140(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6564757469746C61 && a2 == 0xE800000000000000 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D447D790 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D447D800 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1D446A758();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1D43E839C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CAEE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43E8634();
  sub_1D446A8C8();
  if (v2) {
    return sub_1D42BEC64((uint64_t)a1);
  }
  char v34 = 0;
  sub_1D446A5B8();
  uint64_t v10 = v9;
  char v33 = 1;
  sub_1D446A5B8();
  uint64_t v12 = v11;
  char v32 = 2;
  uint64_t v13 = sub_1D446A578();
  char v15 = v14;
  char v31 = 3;
  uint64_t v16 = sub_1D446A578();
  int v27 = v17;
  uint64_t v28 = v16;
  char v30 = 4;
  uint64_t v18 = sub_1D446A578();
  HIDWORD(v25) = v19;
  uint64_t v26 = v18;
  char v29 = 5;
  uint64_t v20 = sub_1D446A558();
  char v21 = v8;
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v21, v5);
  uint64_t result = sub_1D42BEC64((uint64_t)a1);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v13;
  *(unsigned char *)(a2 + 24) = v15 & 1;
  *(void *)(a2 + 32) = v28;
  *(unsigned char *)(a2 + 40) = v27 & 1;
  *(void *)(a2 + 48) = v26;
  *(unsigned char *)(a2 + 56) = BYTE4(v25) & 1;
  *(void *)(a2 + 64) = v20;
  *(void *)(a2 + 72) = v23;
  return result;
}

unint64_t sub_1D43E8634()
{
  unint64_t result = qword_1EA6CAEE8;
  if (!qword_1EA6CAEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAEE8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMDemoLocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    void *result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43E8754);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMDemoLocation.CodingKeys()
{
  return &type metadata for FMDemoLocation.CodingKeys;
}

unint64_t sub_1D43E8790()
{
  unint64_t result = qword_1EA6CAEF8;
  if (!qword_1EA6CAEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAEF8);
  }
  return result;
}

unint64_t sub_1D43E87E8()
{
  unint64_t result = qword_1EA6CAF00;
  if (!qword_1EA6CAF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAF00);
  }
  return result;
}

unint64_t sub_1D43E8840()
{
  unint64_t result = qword_1EA6CAF08;
  if (!qword_1EA6CAF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAF08);
  }
  return result;
}

FMIPCore::FMIPAnalyticsActionType_optional __swiftcall FMIPAnalyticsActionType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1D446A518();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t FMIPAnalyticsActionType.rawValue.getter()
{
  unint64_t result = 0x6E756F5379616C70;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6F69746365726964;
      break;
    case 2:
      unint64_t result = 0x74696D69786F7270;
      break;
    case 3:
      unint64_t result = 0x6F69736963657270;
      break;
    case 4:
      unint64_t result = 0x6F4C656C62616E65;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D43E89EC(unsigned __int8 *a1, char *a2)
{
  return sub_1D44135D4(*a1, *a2);
}

uint64_t sub_1D43E89F8()
{
  return sub_1D43F3B24();
}

uint64_t sub_1D43E8A00()
{
  return sub_1D445D2E4();
}

uint64_t sub_1D43E8A08()
{
  return sub_1D43F48EC();
}

FMIPCore::FMIPAnalyticsActionType_optional sub_1D43E8A10(Swift::String *a1)
{
  return FMIPAnalyticsActionType.init(rawValue:)(*a1);
}

void sub_1D43E8A1C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE900000000000064;
  uint64_t v3 = 0x6E756F5379616C70;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA0000000000736ELL;
      uint64_t v3 = 0x6F69746365726964;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "proximityFind");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 3:
      strcpy((char *)a1, "precisionFind");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 4:
      strcpy((char *)a1, "enableLostMode");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 5:
      *(void *)a1 = 0xD000000000000015;
      *(void *)(a1 + 8) = 0x80000001D447D990;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

FMIPCore::FMIPAnalyticsOwnerContext_optional __swiftcall FMIPAnalyticsOwnerContext.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1D446A518();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t FMIPAnalyticsOwnerContext.rawValue.getter()
{
  uint64_t result = 0x72656E776FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x646572616873;
      break;
    case 2:
      uint64_t result = 29813;
      break;
    case 3:
      uint64_t result = 1701736302;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D43E8BFC(unsigned __int8 *a1, char *a2)
{
  return sub_1D4413098(*a1, *a2);
}

uint64_t sub_1D43E8C08()
{
  return sub_1D446A888();
}

uint64_t sub_1D43E8CC8()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43E8D70()
{
  return sub_1D446A888();
}

FMIPCore::FMIPAnalyticsOwnerContext_optional sub_1D43E8E2C(Swift::String *a1)
{
  return FMIPAnalyticsOwnerContext.init(rawValue:)(*a1);
}

void sub_1D43E8E38(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x72656E776FLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x646572616873;
      goto LABEL_3;
    case 2:
      *a1 = 29813;
      a1[1] = 0xE200000000000000;
      break;
    case 3:
      *a1 = 1701736302;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t FMIPAnalyticsProductType.init(device:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FMIPItem();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMIPDevice();
  sub_1D43E9154(a1 + *(int *)(v11 + 128), (uint64_t)v10);
  uint64_t v12 = type metadata accessor for FMIPItemGroup();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) == 1)
  {
    sub_1D4276C3C((uint64_t)v10, &qword_1EBD7E670);
    goto LABEL_9;
  }
  uint64_t v13 = *((void *)v10 + 5);
  swift_bridgeObjectRetain();
  sub_1D42D2118((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    int v18 = *(unsigned __int8 *)(a1 + *(int *)(v11 + 132));
    uint64_t result = sub_1D42D2118(a1, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    if (v18) {
      char v20 = 2;
    }
    else {
      char v20 = 3;
    }
    goto LABEL_12;
  }
  uint64_t v15 = v13 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v16 = *(void *)(v5 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1D42CA7C0(v15, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    int v17 = v7[*(int *)(v4 + 84)];
    sub_1D42D2118((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    if (v17 == 1) {
      break;
    }
    v15 += v16;
    if (!--v14)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_1D42D2118(a1, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  char v20 = 1;
LABEL_12:
  *a2 = v20;
  return result;
}

uint64_t sub_1D43E9154(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7E670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FMIPAnalyticsProductType.init(item:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FMIPProductType();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPItem();
  if (*(unsigned char *)(a1 + *(int *)(v7 + 84)))
  {
    char v8 = 1;
  }
  else
  {
    sub_1D42CA7C0(a1 + *(int *)(v7 + 96), (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
    if (swift_getEnumCaseMultiPayload() >= 2)
    {
      sub_1D4276C3C((uint64_t)v6, &qword_1EA6C97A0);
      char v8 = 2;
    }
    else
    {
      sub_1D42D2118((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
      char v8 = 0;
    }
  }
  uint64_t result = sub_1D42D2118(a1, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  *a2 = v8;
  return result;
}

uint64_t FMIPAnalyticsProductType.init(unknownItem:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FMIPProductType();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPUnknownItem();
  if (*(unsigned char *)(a1 + *(int *)(v7 + 64)))
  {
    char v8 = 1;
  }
  else
  {
    sub_1D42CA7C0(a1 + *(int *)(v7 + 36), (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
    if (swift_getEnumCaseMultiPayload() >= 2)
    {
      sub_1D4276C3C((uint64_t)v6, &qword_1EA6C97A0);
      char v8 = 3;
    }
    else
    {
      sub_1D42D2118((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMIPProductType);
      char v8 = 0;
    }
  }
  uint64_t result = sub_1D42D2118(a1, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  *a2 = v8;
  return result;
}

FMIPCore::FMIPAnalyticsProductType_optional __swiftcall FMIPAnalyticsProductType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1D446A518();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t FMIPAnalyticsProductType.rawValue.getter()
{
  uint64_t result = 0x676154726961;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x73646F50726961;
      break;
    case 2:
      uint64_t result = 0x726F737365636361;
      break;
    case 3:
      uint64_t result = 0x656369766564;
      break;
    case 4:
      uint64_t result = 0x6E6F73726570;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D43E9504(unsigned __int8 *a1, char *a2)
{
  return sub_1D4413390(*a1, *a2);
}

uint64_t sub_1D43E9510()
{
  return sub_1D446A888();
}

uint64_t sub_1D43E95F8()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43E96C8()
{
  return sub_1D446A888();
}

FMIPCore::FMIPAnalyticsProductType_optional sub_1D43E97AC(Swift::String *a1)
{
  return FMIPAnalyticsProductType.init(rawValue:)(*a1);
}

void sub_1D43E97B8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x676154726961;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x73646F50726961;
      goto LABEL_3;
    case 2:
      *a1 = 0x726F737365636361;
      a1[1] = 0xE900000000000079;
      break;
    case 3:
      *a1 = 0x656369766564;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x6E6F73726570;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void FMIPActionEvent.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *FMIPActionEvent.type.setter(unsigned char *result)
{
  unsigned char *v1 = *result;
  return result;
}

uint64_t (*FMIPActionEvent.type.modify())()
{
  return nullsub_1;
}

void FMIPActionEvent.ownerContext.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *FMIPActionEvent.ownerContext.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*FMIPActionEvent.ownerContext.modify())()
{
  return nullsub_1;
}

void FMIPActionEvent.productType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 2);
}

unsigned char *FMIPActionEvent.productType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 2) = *result;
  return result;
}

uint64_t (*FMIPActionEvent.productType.modify())()
{
  return nullsub_1;
}

FMIPCore::FMIPActionEvent __swiftcall FMIPActionEvent.init(type:ownerContext:productType:)(FMIPCore::FMIPAnalyticsActionType type, FMIPCore::FMIPAnalyticsOwnerContext ownerContext, FMIPCore::FMIPAnalyticsProductType productType)
{
  char v4 = *(unsigned char *)ownerContext;
  char v5 = *(unsigned char *)productType;
  *uint64_t v3 = *(unsigned char *)type;
  v3[1] = v4;
  v3[2] = v5;
  result.type = type;
  return result;
}

Swift::Void __swiftcall FMIPManager.enqueue(actionEvent:)(FMIPCore::FMIPActionEvent actionEvent)
{
  char v1 = *(unsigned char *)(*(void *)&actionEvent.type + 2);
  __int16 v2 = **(_WORD **)&actionEvent.type;
  char v3 = v1;
  _s8FMIPCore13FMIPAnalyticsV25sendItemDeviceActionEvent5eventyAA010FMIPActionG0V_tFZ_0((char *)&v2);
}

void sub_1D43E9960()
{
  unint64_t v0 = sub_1D4274BFC(MEMORY[0x1E4FBC860]);
  id v1 = objc_allocWithZone(NSString);
  __int16 v2 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithString_, v2);

  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v3, 0x79546E6F69746361, 0xEA00000000006570, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v5 = objc_allocWithZone(NSString);
  uint64_t v6 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithString_, v6);

  char v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v7, 0x6E6F4372656E776FLL, 0xEC00000074786574, v8);
  swift_bridgeObjectRelease();
  id v9 = objc_allocWithZone(NSString);
  uint64_t v10 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_initWithString_, v10);

  char v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v11, 0xD000000000000011, 0x80000001D4482A10, v12);
  unint64_t v13 = v0;
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_1D4469B08();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  v17[4] = sub_1D4308610;
  v17[5] = v15;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  v17[2] = sub_1D4356EBC;
  v17[3] = &unk_1F2C0EED8;
  uint64_t v16 = _Block_copy(v17);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v16);
  swift_bridgeObjectRelease();
}

uint64_t _s8FMIPCore13FMIPAnalyticsV25sendItemDeviceActionEvent5eventyAA010FMIPActionG0V_tFZ_0(char *a1)
{
  uint64_t v2 = sub_1D4469958();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D44699B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = *a1;
  char v11 = a1[1];
  char v12 = a1[2];
  if (qword_1EA6C9010 != -1) {
    swift_once();
  }
  unint64_t v13 = (unsigned char *)swift_allocObject();
  v13[16] = v10;
  v13[17] = v11;
  v13[18] = v12;
  aBlock[4] = sub_1D43EA604;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0EE88;
  uint64_t v14 = _Block_copy(aBlock);
  sub_1D4469988();
  v16[1] = MEMORY[0x1E4FBC860];
  sub_1D42E81D4();
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42E2378();
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v9, v5, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

unint64_t sub_1D43EA0C4()
{
  unint64_t result = qword_1EA6CAF10;
  if (!qword_1EA6CAF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAF10);
  }
  return result;
}

unint64_t sub_1D43EA11C()
{
  unint64_t result = qword_1EA6CAF18;
  if (!qword_1EA6CAF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAF18);
  }
  return result;
}

unint64_t sub_1D43EA174()
{
  unint64_t result = qword_1EA6CAF20;
  if (!qword_1EA6CAF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAF20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPAnalyticsActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    void *result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43EA294);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPAnalyticsActionType()
{
  return &type metadata for FMIPAnalyticsActionType;
}

unsigned char *storeEnumTagSinglePayload for FMIPAnalyticsOwnerContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43EA398);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPAnalyticsOwnerContext()
{
  return &type metadata for FMIPAnalyticsOwnerContext;
}

unsigned char *storeEnumTagSinglePayload for FMIPAnalyticsProductType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    void *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43EA49CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPAnalyticsProductType()
{
  return &type metadata for FMIPAnalyticsProductType;
}

uint64_t initializeBufferWithCopyOfBuffer for FMIPActionEvent(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPActionEvent(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    if ((a2 + 33554179) >> 24)
    {
      int v2 = a1[3];
      if (a1[3]) {
        return (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776963;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)(a1 + 3);
      if (*(_WORD *)(a1 + 3)) {
        return (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776963;
      }
    }
  }
  unsigned int v4 = a1[1];
  BOOL v5 = v4 >= 4;
  int v6 = v4 - 4;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPActionEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554179) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFC) {
    int v3 = 0;
  }
  if (a2 > 0xFC)
  {
    *(_WORD *)unint64_t result = a2 - 253;
    *(unsigned char *)(result + 2) = (a2 - 253) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 253) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)(result + 1) = a2 + 3;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPActionEvent()
{
  return &type metadata for FMIPActionEvent;
}

uint64_t sub_1D43EA5F4()
{
  return MEMORY[0x1F4186498](v0, 19, 7);
}

void sub_1D43EA604()
{
}

uint64_t sub_1D43EA614()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t FMIPUnknownItemProductMetadata.init(metadata:disableURL:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v9 = objc_msgSend(a1, sel_title);
    if (v9)
    {
      char v10 = v9;
      uint64_t v11 = sub_1D4469B38();
      uint64_t v13 = v12;
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v13 = 0;
    }
    *(void *)a3 = v11;
    *(void *)(a3 + 8) = v13;
    id v15 = objc_msgSend(a1, sel_moreDescription);
    uint64_t v16 = sub_1D4469D78();

    *(void *)(a3 + 16) = v16;
    objc_msgSend(a1, sel_percentageX);
    *(void *)(a3 + 24) = v17;
    *(unsigned char *)(a3 + 32) = 0;
    objc_msgSend(a1, sel_percentageY);
    *(void *)(a3 + 40) = v18;
    *(unsigned char *)(a3 + 48) = 0;
    id v19 = objc_msgSend(a1, sel_image);
    sub_1D4469468();

    uint64_t v20 = sub_1D4469498();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v8, 0, 1, v20);
  }
  else
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = MEMORY[0x1E4FBC860];
    *(void *)(a3 + 24) = 0;
    *(unsigned char *)(a3 + 32) = 1;
    *(void *)(a3 + 40) = 0;
    *(unsigned char *)(a3 + 48) = 1;
    uint64_t v14 = sub_1D4469498();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  }
  uint64_t v21 = type metadata accessor for FMIPUnknownItemProductMetadata();
  sub_1D42E8438((uint64_t)v8, a3 + *(int *)(v21 + 32));
  sub_1D42E83D0(a2, a3 + *(int *)(v21 + 36));
  uint64_t v22 = FMIPUnknownItemProductMetadata.debugDescription.getter();
  unint64_t v24 = v23;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1D4469928();
  sub_1D42D7FAC(v25, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1D44698F8();
  os_log_type_t v27 = sub_1D4469FF8();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v32 = v29;
    *(_DWORD *)uint64_t v28 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1D42CB9EC(v22, v24, &v32);
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D4271000, v26, v27, "FMIPUnknownItemUTMetadata: initialized %s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v29, -1, -1);
    MEMORY[0x1D9447730](v28, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return sub_1D4276C3C(a2, &qword_1EBD7E918);
}

uint64_t FMIPUnknownItemProductMetadata.debugDescription.getter()
{
  uint64_t v1 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v1);
  int v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_1D446A378();
  sub_1D4469C08();
  sub_1D4469C08();
  sub_1D4469C08();
  uint64_t v4 = v0[1];
  uint64_t v10 = *v0;
  uint64_t v11 = v4;
  swift_bridgeObjectRetain();
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v5 = swift_bridgeObjectRetain();
  MEMORY[0x1D94460F0](v5, MEMORY[0x1E4FBB1A0]);
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  char v6 = *((unsigned char *)v0 + 32);
  uint64_t v10 = v0[3];
  LOBYTE(v11) = v6;
  sub_1D42D5DA0(&qword_1EA6CAF28);
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  char v7 = *((unsigned char *)v0 + 48);
  uint64_t v10 = v0[5];
  LOBYTE(v11) = v7;
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v8 = type metadata accessor for FMIPUnknownItemProductMetadata();
  sub_1D42E83D0((uint64_t)v0 + *(int *)(v8 + 32), (uint64_t)v3);
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D42E83D0((uint64_t)v0 + *(int *)(v8 + 36), (uint64_t)v3);
  sub_1D4469B68();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  return v12;
}

uint64_t FMIPUnknownItemProductMetadata.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPUnknownItemProductMetadata.moreDescriptionBulletPoints.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FMIPUnknownItemProductMetadata.heatzonePercentX.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t FMIPUnknownItemProductMetadata.heatzonePercentY.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t FMIPUnknownItemProductMetadata.image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMIPUnknownItemProductMetadata() + 32);
  return sub_1D42E83D0(v3, a1);
}

uint64_t FMIPUnknownItemProductMetadata.disableURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMIPUnknownItemProductMetadata() + 36);
  return sub_1D42E83D0(v3, a1);
}

unint64_t sub_1D43EAD90(char a1)
{
  unint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 2:
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x6567616D69;
      break;
    case 5:
      unint64_t result = 0x55656C6261736964;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D43EAE58(char a1)
{
  unint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 2:
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x6567616D69;
      break;
    case 5:
      unint64_t result = 0x55656C6261736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D43EAF20(unsigned __int8 *a1, char *a2)
{
  return sub_1D441203C(*a1, *a2);
}

uint64_t sub_1D43EAF2C()
{
  return sub_1D43F3C6C();
}

uint64_t sub_1D43EAF34()
{
  return sub_1D445D060();
}

uint64_t sub_1D43EAF3C()
{
  return sub_1D43F4D30();
}

uint64_t sub_1D43EAF44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43EDBC4();
  *a1 = result;
  return result;
}

unint64_t sub_1D43EAF74@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1D43EAD90(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1D43EAFA0()
{
  return sub_1D43EAE58(*v0);
}

uint64_t sub_1D43EAFA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43EDBC4();
  *a1 = result;
  return result;
}

uint64_t sub_1D43EAFD0(uint64_t a1)
{
  unint64_t v2 = sub_1D43EBFE8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D43EB00C(uint64_t a1)
{
  unint64_t v2 = sub_1D43EBFE8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPUnknownItemProductMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v3 = sub_1D4469498();
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v49 - v7;
  uint64_t v9 = sub_1D42D5DA0(&qword_1EA6CAF30);
  uint64_t v59 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FMIPUnknownItemProductMetadata();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (NSObject **)((char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = a1[3];
  uint64_t v61 = a1;
  sub_1D42C26F4(a1, v15);
  sub_1D43EBFE8();
  uint64_t v16 = v60;
  sub_1D446A8C8();
  if (v16)
  {
    uint64_t v17 = (uint64_t)v61;
  }
  else
  {
    uint64_t v54 = v14;
    uint64_t v55 = v6;
    uint64_t v60 = v8;
    uint64_t v18 = v59;
    LOBYTE(v63) = 0;
    id v19 = sub_1D446A598();
    uint64_t v21 = v20;
    uint64_t v53 = v19;
    sub_1D42D5DA0(&qword_1EA6C9E30);
    LOBYTE(v62) = 1;
    sub_1D42E2190(&qword_1EA6C9F70, &qword_1EA6C9E30);
    sub_1D446A5D8();
    uint64_t v17 = (uint64_t)v61;
    uint64_t v52 = v21;
    uint64_t v22 = v63;
    LOBYTE(v63) = 2;
    sub_1D446A5B8();
    unint64_t v24 = v23;
    uint64_t v51 = v22;
    LOBYTE(v63) = 3;
    sub_1D446A5B8();
    uint64_t v26 = v25;
    LOBYTE(v63) = 4;
    uint64_t v27 = sub_1D43EDCD0(&qword_1EA6CAE38, MEMORY[0x1E4F276F0]);
    uint64_t v28 = v58;
    uint64_t v50 = v27;
    sub_1D446A5D8();
    LOBYTE(v63) = 5;
    sub_1D446A5D8();
    uint64_t v50 = 0;
    uint64_t v49 = v9;
    char v30 = v54;
    uint64_t v31 = v52;
    *uint64_t v54 = v53;
    v30[1] = v31;
    v30[2] = v51;
    v30[3] = v24;
    *((unsigned char *)v30 + 32) = 0;
    v30[5] = v26;
    *((unsigned char *)v30 + 48) = 0;
    uint64_t v32 = v57;
    char v33 = *(NSObject **)(v57 + 16);
    uint64_t v52 = (uint8_t *)v30 + *(int *)(v12 + 32);
    uint64_t v53 = v33;
    ((void (*)(void))v33)();
    char v34 = *(void (**)(uint8_t *, void, uint64_t, uint64_t))(v32 + 56);
    v34(v52, 0, 1, v28);
    uint64_t v35 = (uint8_t *)v30 + *(int *)(v12 + 36);
    ((void (*)(uint8_t *, char *, uint64_t))v53)(v35, v55, v28);
    v34(v35, 0, 1, v28);
    uint64_t v36 = FMIPUnknownItemProductMetadata.debugDescription.getter();
    unint64_t v38 = v37;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_1D4469928();
    sub_1D42D7FAC(v39, (uint64_t)qword_1EBD83228);
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1D44698F8();
    os_log_type_t v41 = sub_1D4469FF8();
    uint64_t v53 = v40;
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v43 = v56;
    if (v42)
    {
      long long v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v63 = v45;
      *(_DWORD *)long long v44 = 136315138;
      uint64_t v52 = v44 + 4;
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_1D42CB9EC(v36, v38, &v63);
      sub_1D446A188();
      swift_bridgeObjectRelease_n();
      long long v46 = v53;
      _os_log_impl(&dword_1D4271000, v53, v41, "FMIPUnknownItemUTMetadata: initialized %s", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v45, -1, -1);
      uint64_t v43 = v56;
      MEMORY[0x1D9447730](v44, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    uint64_t v47 = v58;
    uint64_t v48 = *(void (**)(char *, uint64_t))(v57 + 8);
    v48(v55, v58);
    v48(v60, v47);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v49);
    sub_1D43EC03C((uint64_t)v54, v43);
  }
  return sub_1D42BEC64(v17);
}

uint64_t FMIPUnknownItemProductMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CAF40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43EBFE8();
  sub_1D446A8E8();
  long long v12 = *v3;
  char v13 = 0;
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
  sub_1D42E2190((unint64_t *)&qword_1EBD7D8B8, (uint64_t *)&unk_1EBD7FD68);
  sub_1D446A698();
  if (!v2)
  {
    *(void *)&long long v12 = *((void *)v3 + 2);
    char v13 = 1;
    sub_1D42D5DA0(&qword_1EA6C9E30);
    sub_1D42E2190(&qword_1EA6C9F90, &qword_1EA6C9E30);
    sub_1D446A698();
    char v9 = *((unsigned char *)v3 + 32);
    *(void *)&long long v12 = *((void *)v3 + 3);
    BYTE8(v12) = v9;
    char v13 = 2;
    sub_1D42D5DA0(&qword_1EA6CAF28);
    sub_1D42E2190(&qword_1EA6CAF48, &qword_1EA6CAF28);
    sub_1D446A698();
    char v10 = *((unsigned char *)v3 + 48);
    *(void *)&long long v12 = *((void *)v3 + 5);
    BYTE8(v12) = v10;
    char v13 = 3;
    sub_1D446A698();
    type metadata accessor for FMIPUnknownItemProductMetadata();
    LOBYTE(v12) = 4;
    sub_1D42D5DA0(&qword_1EBD7E918);
    sub_1D43EC0A0();
    sub_1D446A698();
    LOBYTE(v12) = 5;
    sub_1D446A698();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FMIPUnknownItemProductMetadata.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D4469498();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7E918);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v20 = (uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)&v19 - v9;
  if (*(void *)(v0 + 8))
  {
    sub_1D446A848();
    swift_bridgeObjectRetain();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D446A848();
  }
  uint64_t v11 = *(void *)(v0 + 16);
  sub_1D446A838();
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    id v19 = v5;
    uint64_t v13 = v3;
    swift_bridgeObjectRetain();
    uint64_t v14 = v11 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1D4469BC8();
      swift_bridgeObjectRelease();
      v14 += 16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    uint64_t v3 = v13;
    uint64_t v5 = v19;
  }
  if (*(unsigned char *)(v0 + 32))
  {
    sub_1D446A848();
  }
  else
  {
    sub_1D446A848();
    sub_1D446A868();
  }
  if (*(unsigned char *)(v0 + 48) == 1)
  {
    sub_1D446A848();
  }
  else
  {
    sub_1D446A848();
    sub_1D446A868();
  }
  uint64_t v15 = type metadata accessor for FMIPUnknownItemProductMetadata();
  sub_1D42E83D0(v0 + *(int *)(v15 + 32), (uint64_t)v10);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v16(v10, 1, v2) == 1)
  {
    sub_1D446A848();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v10, v2);
    sub_1D446A848();
    sub_1D43EDCD0(&qword_1EA6C9080, MEMORY[0x1E4F276F0]);
    sub_1D4469AD8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v17 = v20;
  sub_1D42E83D0(v1 + *(int *)(v15 + 36), v20);
  if (v16((char *)v17, 1, v2) == 1) {
    return sub_1D446A848();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v17, v2);
  sub_1D446A848();
  sub_1D43EDCD0(&qword_1EA6C9080, MEMORY[0x1E4F276F0]);
  sub_1D4469AD8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t FMIPUnknownItemProductMetadata.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t sub_1D43EBF34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPUnknownItemProductMetadata.init(from:)(a1, a2);
}

uint64_t sub_1D43EBF4C(void *a1)
{
  return FMIPUnknownItemProductMetadata.encode(to:)(a1);
}

uint64_t sub_1D43EBF64()
{
  return sub_1D446A888();
}

uint64_t sub_1D43EBFA8()
{
  return sub_1D446A888();
}

unint64_t sub_1D43EBFE8()
{
  unint64_t result = qword_1EA6CAF38;
  if (!qword_1EA6CAF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAF38);
  }
  return result;
}

uint64_t sub_1D43EC03C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPUnknownItemProductMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D43EC0A0()
{
  unint64_t result = qword_1EA6CAF50;
  if (!qword_1EA6CAF50)
  {
    sub_1D42DB55C(&qword_1EBD7E918);
    sub_1D43EDCD0(&qword_1EA6CAE28, MEMORY[0x1E4F276F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAF50);
  }
  return result;
}

uint64_t _s8FMIPCore30FMIPUnknownItemProductMetadataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1D4469498();
  uint64_t v86 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v82 = &v77[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1D42D5DA0(&qword_1EBD7E918);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v81 = &v77[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v87 = &v77[-v9];
  uint64_t v85 = sub_1D42D5DA0(&qword_1EA6C9490);
  uint64_t v10 = MEMORY[0x1F4188790](v85);
  uint64_t v83 = &v77[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v84 = &v77[-v12];
  uint64_t v13 = type metadata accessor for FMIPUnknownItemProductMetadata();
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v88 = &v77[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v89 = &v77[-v17];
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = &v77[-v19];
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  long long v90 = &v77[-v22];
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v25 = (double *)&v77[-v24];
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  uint64_t v28 = (double *)&v77[-v27];
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  uint64_t v31 = (double *)&v77[-v30];
  uint64_t v32 = MEMORY[0x1F4188790](v29);
  char v34 = (double *)&v77[-v33];
  uint64_t v35 = MEMORY[0x1F4188790](v32);
  unint64_t v37 = &v77[-v36];
  MEMORY[0x1F4188790](v35);
  uint64_t v40 = &v77[-v38];
  uint64_t v41 = a1[1];
  uint64_t v42 = a2[1];
  if (!v41)
  {
    if (!v42)
    {
LABEL_10:
      uint64_t v79 = v4;
      uint64_t v80 = v39;
      sub_1D43EDC10((uint64_t)a1, (uint64_t)&v77[-v38]);
      sub_1D43EDC10((uint64_t)a2, (uint64_t)v37);
      goto LABEL_11;
    }
LABEL_8:
    sub_1D43EDC10((uint64_t)a1, (uint64_t)&v77[-v38]);
    sub_1D43EDC10((uint64_t)a2, (uint64_t)v37);
    goto LABEL_9;
  }
  if (!v42) {
    goto LABEL_8;
  }
  if (*a1 == *a2 && v41 == v42) {
    goto LABEL_10;
  }
  uint64_t v79 = v4;
  uint64_t v80 = v39;
  char v43 = sub_1D446A758();
  sub_1D43EDC10((uint64_t)a1, (uint64_t)v40);
  sub_1D43EDC10((uint64_t)a2, (uint64_t)v37);
  if ((v43 & 1) == 0)
  {
LABEL_9:
    sub_1D43EDC74((uint64_t)v40);
    sub_1D43EDC74((uint64_t)v37);
    sub_1D43EDC10((uint64_t)a1, (uint64_t)v34);
    sub_1D43EDC10((uint64_t)a2, (uint64_t)v31);
LABEL_15:
    sub_1D43EDC74((uint64_t)v31);
    sub_1D43EDC74((uint64_t)v34);
    uint64_t v49 = v90;
    goto LABEL_16;
  }
LABEL_11:
  char v44 = sub_1D42E17D4(*((void **)v40 + 2), *((void **)v37 + 2));
  sub_1D43EDC74((uint64_t)v40);
  sub_1D43EDC74((uint64_t)v37);
  sub_1D43EDC10((uint64_t)a1, (uint64_t)v34);
  sub_1D43EDC10((uint64_t)a2, (uint64_t)v31);
  if ((v44 & 1) == 0) {
    goto LABEL_15;
  }
  double v45 = v34[3];
  char v46 = *((unsigned char *)v34 + 32);
  sub_1D43EDC74((uint64_t)v34);
  double v47 = v31[3];
  char v48 = *((unsigned char *)v31 + 32);
  sub_1D43EDC74((uint64_t)v31);
  if (v46)
  {
    uint64_t v49 = v90;
    if (v48)
    {
      sub_1D43EDC10((uint64_t)a1, (uint64_t)v28);
      sub_1D43EDC10((uint64_t)a2, (uint64_t)v25);
      goto LABEL_26;
    }
    goto LABEL_16;
  }
  uint64_t v49 = v90;
  if (v48)
  {
LABEL_16:
    sub_1D43EDC10((uint64_t)a1, (uint64_t)v28);
    sub_1D43EDC10((uint64_t)a2, (uint64_t)v25);
LABEL_17:
    sub_1D43EDC74((uint64_t)v25);
    sub_1D43EDC74((uint64_t)v28);
    goto LABEL_18;
  }
  sub_1D43EDC10((uint64_t)a1, (uint64_t)v28);
  sub_1D43EDC10((uint64_t)a2, (uint64_t)v25);
  if (v45 != v47) {
    goto LABEL_17;
  }
LABEL_26:
  double v54 = v28[5];
  char v55 = *((unsigned char *)v28 + 48);
  sub_1D43EDC74((uint64_t)v28);
  double v56 = v25[5];
  char v57 = *((unsigned char *)v25 + 48);
  sub_1D43EDC74((uint64_t)v25);
  if (v55)
  {
    uint64_t v58 = (uint64_t)v87;
    if (v57)
    {
      sub_1D43EDC10((uint64_t)a1, (uint64_t)v49);
      sub_1D43EDC10((uint64_t)a2, (uint64_t)v20);
      goto LABEL_31;
    }
    goto LABEL_18;
  }
  uint64_t v58 = (uint64_t)v87;
  if (v57)
  {
LABEL_18:
    sub_1D43EDC10((uint64_t)a1, (uint64_t)v49);
    sub_1D43EDC10((uint64_t)a2, (uint64_t)v20);
LABEL_19:
    sub_1D43EDC74((uint64_t)v20);
    sub_1D43EDC74((uint64_t)v49);
LABEL_20:
    uint64_t v51 = v88;
    uint64_t v50 = v89;
    sub_1D43EDC10((uint64_t)a1, (uint64_t)v89);
    sub_1D43EDC10((uint64_t)a2, (uint64_t)v51);
    goto LABEL_21;
  }
  sub_1D43EDC10((uint64_t)a1, (uint64_t)v49);
  sub_1D43EDC10((uint64_t)a2, (uint64_t)v20);
  if (v54 != v56) {
    goto LABEL_19;
  }
LABEL_31:
  uint64_t v59 = *(int *)(v80 + 32);
  uint64_t v60 = (uint64_t)&v20[v59];
  uint64_t v61 = v84;
  uint64_t v62 = (uint64_t)&v84[*(int *)(v85 + 48)];
  sub_1D42E83D0((uint64_t)&v49[v59], (uint64_t)v84);
  sub_1D42E83D0(v60, v62);
  uint64_t v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48);
  uint64_t v64 = v79;
  if (v63((uint64_t)v61, 1, v79) != 1)
  {
    sub_1D42E83D0((uint64_t)v61, v58);
    if (v63(v62, 1, v64) != 1)
    {
      uint64_t v65 = v86;
      char v66 = v82;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v86 + 32))(v82, v62, v64);
      sub_1D43EDCD0(&qword_1EA6C9498, MEMORY[0x1E4F276F0]);
      char v67 = v87;
      int v78 = sub_1D4469AF8();
      char v68 = *(void (**)(unsigned char *, uint64_t))(v65 + 8);
      v68(v66, v64);
      sub_1D43EDC74((uint64_t)v20);
      sub_1D43EDC74((uint64_t)v90);
      v68(v67, v64);
      sub_1D4276C3C((uint64_t)v84, &qword_1EBD7E918);
      uint64_t v50 = v89;
      sub_1D43EDC10((uint64_t)a1, (uint64_t)v89);
      uint64_t v51 = v88;
      sub_1D43EDC10((uint64_t)a2, (uint64_t)v88);
      if (v78) {
        goto LABEL_38;
      }
LABEL_21:
      sub_1D43EDC74((uint64_t)v51);
      sub_1D43EDC74((uint64_t)v50);
      goto LABEL_22;
    }
    sub_1D43EDC74((uint64_t)v20);
    sub_1D43EDC74((uint64_t)v49);
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v58, v64);
    goto LABEL_36;
  }
  sub_1D43EDC74((uint64_t)v20);
  sub_1D43EDC74((uint64_t)v49);
  if (v63(v62, 1, v64) != 1)
  {
LABEL_36:
    sub_1D4276C3C((uint64_t)v61, &qword_1EA6C9490);
    goto LABEL_20;
  }
  sub_1D4276C3C((uint64_t)v61, &qword_1EBD7E918);
  uint64_t v50 = v89;
  sub_1D43EDC10((uint64_t)a1, (uint64_t)v89);
  uint64_t v51 = v88;
  sub_1D43EDC10((uint64_t)a2, (uint64_t)v88);
LABEL_38:
  uint64_t v69 = *(int *)(v80 + 36);
  uint64_t v70 = (uint64_t)&v51[v69];
  char v71 = v83;
  uint64_t v72 = (uint64_t)&v83[*(int *)(v85 + 48)];
  sub_1D42E83D0((uint64_t)&v50[v69], (uint64_t)v83);
  sub_1D42E83D0(v70, v72);
  if (v63((uint64_t)v71, 1, v64) == 1)
  {
    sub_1D43EDC74((uint64_t)v51);
    sub_1D43EDC74((uint64_t)v50);
    if (v63(v72, 1, v64) == 1)
    {
      sub_1D4276C3C((uint64_t)v71, &qword_1EBD7E918);
      char v52 = 1;
      return v52 & 1;
    }
  }
  else
  {
    char v73 = v81;
    sub_1D42E83D0((uint64_t)v71, (uint64_t)v81);
    if (v63(v72, 1, v64) != 1)
    {
      uint64_t v74 = v86;
      char v75 = v82;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v86 + 32))(v82, v72, v64);
      sub_1D43EDCD0(&qword_1EA6C9498, MEMORY[0x1E4F276F0]);
      char v52 = sub_1D4469AF8();
      char v76 = *(void (**)(unsigned char *, uint64_t))(v74 + 8);
      v76(v75, v64);
      sub_1D43EDC74((uint64_t)v51);
      sub_1D43EDC74((uint64_t)v50);
      v76(v73, v64);
      sub_1D4276C3C((uint64_t)v71, &qword_1EBD7E918);
      return v52 & 1;
    }
    sub_1D43EDC74((uint64_t)v51);
    sub_1D43EDC74((uint64_t)v50);
    (*(void (**)(unsigned char *, uint64_t))(v86 + 8))(v73, v64);
  }
  sub_1D4276C3C((uint64_t)v71, &qword_1EA6C9490);
LABEL_22:
  char v52 = 0;
  return v52 & 1;
}

uint64_t sub_1D43ECAE4()
{
  return sub_1D43EDCD0(&qword_1EA6CAF58, (void (*)(uint64_t))type metadata accessor for FMIPUnknownItemProductMetadata);
}

void *initializeBufferWithCopyOfBuffer for FMIPUnknownItemProductMetadata(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    uint64_t v8 = a2[1];
    uint64_t v9 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(void *)(a1 + 40) = a2[5];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v10 = *(int *)(a3 + 32);
    __dst = (void *)(a1 + v10);
    uint64_t v11 = (char *)a2 + v10;
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    uint64_t v12 = sub_1D4469498();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v17 = *(int *)(a3 + 36);
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (v14(v19, 1, v12))
    {
      uint64_t v20 = sub_1D42D5DA0(&qword_1EBD7E918);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t destroy for FMIPUnknownItemProductMetadata(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1D4469498();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 36);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

uint64_t initializeWithCopy for FMIPUnknownItemProductMetadata(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 40) = a2[5];
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  uint64_t v11 = sub_1D4469498();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (char *)a2 + v15;
  if (v13(v17, 1, v11))
  {
    uint64_t v18 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for FMIPUnknownItemProductMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1D4469498();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 36);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  int v20 = v13((void *)(a1 + v17), 1, v11);
  int v21 = v13(v19, 1, v11);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v18, v19, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v18, v11);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    uint64_t v22 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v18, v19, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  return a1;
}

uint64_t initializeWithTake for FMIPUnknownItemProductMetadata(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v6 = *a2;
  uint64_t v7 = *((void *)a2 + 3);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  *(_OWORD *)a1 = v6;
  uint64_t v11 = sub_1D4469498();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (char *)a2 + v15;
  if (v13(v17, 1, v11))
  {
    uint64_t v18 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v16, v17, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithTake for FMIPUnknownItemProductMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1D4469498();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 36);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v17, v18, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v21 = sub_1D42D5DA0(&qword_1EBD7E918);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPUnknownItemProductMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D43ED844);
}

uint64_t sub_1D43ED844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1D42D5DA0(&qword_1EBD7E918);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FMIPUnknownItemProductMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D43ED90C);
}

uint64_t sub_1D43ED90C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1D42D5DA0(&qword_1EBD7E918);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPUnknownItemProductMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    void *result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43EDA84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPUnknownItemProductMetadata.CodingKeys()
{
  return &type metadata for FMIPUnknownItemProductMetadata.CodingKeys;
}

unint64_t sub_1D43EDAC0()
{
  unint64_t result = qword_1EA6CAF70;
  if (!qword_1EA6CAF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAF70);
  }
  return result;
}

unint64_t sub_1D43EDB18()
{
  unint64_t result = qword_1EA6CAF78;
  if (!qword_1EA6CAF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAF78);
  }
  return result;
}

unint64_t sub_1D43EDB70()
{
  unint64_t result = qword_1EA6CAF80;
  if (!qword_1EA6CAF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CAF80);
  }
  return result;
}

uint64_t sub_1D43EDBC4()
{
  unint64_t v0 = sub_1D446A518();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D43EDC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPUnknownItemProductMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D43EDC74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMIPUnknownItemProductMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D43EDCD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t FMIPItemUpdateType.description.getter()
{
  uint64_t v1 = sub_1D4469688();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for FMIPItemUpdateType(0);
  MEMORY[0x1F4188790](updated);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D43EDFF0(v0, (uint64_t)v7);
  unint64_t v8 = 0x6568636163;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v8 = 0x6E6F697461636F6CLL;
      break;
    case 2u:
      return v8;
    case 3u:
      unint64_t v8 = 0x676E6972696170;
      break;
    case 4u:
      unint64_t v8 = 0x2073736572646461;
      break;
    case 5u:
      unint64_t v8 = 0xD000000000000014;
      break;
    case 6u:
      unint64_t v8 = 0x6E6569736E617274;
      break;
    default:
      uint64_t v9 = &v7[*(int *)(sub_1D42D5DA0(&qword_1EA6CAF88) + 48)];
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
      v12[0] = 0x28206E6F6D6564;
      v12[1] = 0xE700000000000000;
      sub_1D4469638();
      sub_1D4469C08();
      swift_bridgeObjectRelease();
      sub_1D4469C08();
      unint64_t v8 = v12[0];
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      uint64_t v10 = sub_1D4469618();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      break;
  }
  return v8;
}

uint64_t sub_1D43EDFF0(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for FMIPItemUpdateType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t FMIPItemUpdateContext.type.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D43EDFF0(v1 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_type, a1);
}

uint64_t FMIPItemUpdateContext.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D43EE084(&OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_timestamp, a1);
}

uint64_t FMIPItemUpdateContext.creationTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D43EE084(&OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_creationTimestamp, a1);
}

uint64_t sub_1D43EE084@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  uint64_t v5 = sub_1D4469618();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1D43EE0F4()
{
  return 0;
}

uint64_t FMIPItemUpdateContext.deinit()
{
  sub_1D42E5800(v0 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_type);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_timestamp;
  uint64_t v2 = sub_1D4469618();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_creationTimestamp, v2);
  return v0;
}

uint64_t sub_1D43EE248()
{
  return 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for FMIPItemUpdateType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_1D4469688();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = *(int *)(sub_1D42D5DA0(&qword_1EA6CAF88) + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1D4469618();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for FMIPItemUpdateType(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v3 = sub_1D4469688();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    uint64_t v4 = a1 + *(int *)(sub_1D42D5DA0(&qword_1EA6CAF88) + 48);
    uint64_t v5 = sub_1D4469618();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  return result;
}

char *initializeWithCopy for FMIPItemUpdateType(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1D4469688();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = *(int *)(sub_1D42D5DA0(&qword_1EA6CAF88) + 48);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_1D4469618();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithCopy for FMIPItemUpdateType(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1D42E5800((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1D4469688();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = *(int *)(sub_1D42D5DA0(&qword_1EA6CAF88) + 48);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_1D4469618();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *initializeWithTake for FMIPItemUpdateType(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1D4469688();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = *(int *)(sub_1D42D5DA0(&qword_1EA6CAF88) + 48);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_1D4469618();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for FMIPItemUpdateType(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1D42E5800((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1D4469688();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = *(int *)(sub_1D42D5DA0(&qword_1EA6CAF88) + 48);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_1D4469618();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1D43EE948()
{
  return type metadata accessor for FMIPItemUpdateContext(0);
}

uint64_t method lookup function for FMIPItemUpdateContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPItemUpdateContext);
}

uint64_t dispatch thunk of FMIPItemUpdateContext.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_1D43EE98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1D42D5DA0(&qword_1EBD7CB80);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D4469618();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  int v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D43EDFF0(a1, a3 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_type);
  uint64_t v15 = a4 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_timestamp;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v16(a3 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_timestamp, v15, v11);
  sub_1D43C90F4(a2, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    v16((uint64_t)v14, v15, v11);
    sub_1D43C1234(a2);
    sub_1D42E5800(a1);
    sub_1D43C1234((uint64_t)v10);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a3 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_creationTimestamp, v14, v11);
  }
  else
  {
    sub_1D43C1234(a2);
    sub_1D42E5800(a1);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v17(v14, v10, v11);
    v17((char *)(a3 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_creationTimestamp), v14, v11);
  }
  return a3;
}

uint64_t assignWithCopy for FMIPBeaconRefreshingPolicy(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for FMIPBeaconRefreshingPolicy(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPBeaconRefreshingPolicy(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPBeaconRefreshingPolicy(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPBeaconRefreshingPolicy()
{
  return &type metadata for FMIPBeaconRefreshingPolicy;
}

uint64_t sub_1D43EED0C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v23 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v24 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = a2 + 56;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_26;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v11 >= v24) {
      return 1;
    }
    unint64_t v12 = *(void *)(v23 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v24) {
        return 1;
      }
      unint64_t v12 = *(void *)(v23 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v24) {
          return 1;
        }
        unint64_t v12 = *(void *)(v23 + 8 * v4);
        if (!v12)
        {
          int64_t v4 = v11 + 3;
          if (v11 + 3 >= v24) {
            return 1;
          }
          unint64_t v12 = *(void *)(v23 + 8 * v4);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_26:
    uint64_t v14 = *(void *)(*(void *)(v3 + 48) + 8 * v10);
    sub_1D446A828();
    swift_bridgeObjectRetain();
    sub_1D4350840(v25, v14);
    uint64_t v15 = sub_1D446A888();
    uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v17 = v15 & ~v16;
    if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
      goto LABEL_33;
    }
    uint64_t v18 = swift_bridgeObjectRetain();
    char v19 = sub_1D42C93E4(v18, v14);
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      uint64_t v20 = ~v16;
      while (1)
      {
        unint64_t v17 = (v17 + 1) & v20;
        if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
          break;
        }
        uint64_t v21 = swift_bridgeObjectRetain();
        char v22 = sub_1D42C93E4(v21, v14);
        swift_bridgeObjectRelease();
        if (v22) {
          goto LABEL_7;
        }
      }
LABEL_33:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v24) {
    return 1;
  }
  unint64_t v12 = *(void *)(v23 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v24) {
      return 1;
    }
    unint64_t v12 = *(void *)(v23 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_25;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D43EEF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469498();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D42D5DA0(&qword_1EA6C9490);
  MEMORY[0x1F4188790](v11);
  uint64_t v83 = (uint64_t)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = (int *)type metadata accessor for FMIPBeaconShare(0);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  char v19 = (char *)&v67 - v18;
  uint64_t result = MEMORY[0x1F4188790](v17);
  uint64_t v23 = (char *)&v67 - v22;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v81 = v11;
  int64_t v24 = 0;
  uint64_t v25 = a1 + 56;
  uint64_t v26 = 1 << *(unsigned char *)(a1 + 32);
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  else {
    uint64_t v27 = -1;
  }
  unint64_t v28 = v27 & *(void *)(a1 + 56);
  int64_t v29 = (unint64_t)(v26 + 63) >> 6;
  uint64_t v30 = a2 + 56;
  uint64_t v79 = v10;
  uint64_t v80 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  char v75 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  char v77 = (char **)(v5 + 8);
  int v78 = v7;
  uint64_t v73 = a1 + 56;
  int64_t v72 = v29;
  if (v28) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v32 = v24 + 1;
  if (__OFADD__(v24, 1))
  {
    __break(1u);
    goto LABEL_62;
  }
  if (v32 >= v29) {
    return 1;
  }
  unint64_t v33 = *(void *)(v25 + 8 * v32);
  int64_t v34 = v24 + 1;
  if (!v33)
  {
    int64_t v34 = v24 + 2;
    if (v24 + 2 >= v29) {
      return 1;
    }
    unint64_t v33 = *(void *)(v25 + 8 * v34);
    if (!v33)
    {
      int64_t v34 = v24 + 3;
      if (v24 + 3 >= v29) {
        return 1;
      }
      unint64_t v33 = *(void *)(v25 + 8 * v34);
      if (!v33)
      {
        int64_t v34 = v24 + 4;
        if (v24 + 4 >= v29) {
          return 1;
        }
        unint64_t v33 = *(void *)(v25 + 8 * v34);
        if (!v33)
        {
          uint64_t v35 = v24 + 5;
          if (v24 + 5 < v29)
          {
            unint64_t v33 = *(void *)(v25 + 8 * v35);
            if (v33)
            {
              int64_t v34 = v24 + 5;
              goto LABEL_23;
            }
            while (1)
            {
              int64_t v34 = v35 + 1;
              if (__OFADD__(v35, 1)) {
                break;
              }
              if (v34 >= v29) {
                return 1;
              }
              unint64_t v33 = *(void *)(v25 + 8 * v34);
              ++v35;
              if (v33) {
                goto LABEL_23;
              }
            }
LABEL_62:
            __break(1u);
            return result;
          }
          return 1;
        }
      }
    }
  }
LABEL_23:
  uint64_t v67 = (v33 - 1) & v33;
  int64_t v68 = v34;
  for (unint64_t i = __clz(__rbit64(v33)) + (v34 << 6); ; unint64_t i = __clz(__rbit64(v28)) | (v24 << 6))
  {
    uint64_t v71 = a1;
    uint64_t v36 = *(void *)(a1 + 48);
    uint64_t v70 = v21;
    uint64_t v37 = *(void *)(v21 + 72);
    uint64_t v38 = (uint64_t)v23;
    sub_1D43F1648(v36 + v37 * i, (uint64_t)v23, type metadata accessor for FMIPBeaconShare);
    uint64_t v69 = (char *)v38;
    sub_1D43F16B0(v38, (uint64_t)v19, type metadata accessor for FMIPBeaconShare);
    sub_1D446A828();
    FMIPBeaconShare.hash(into:)((uint64_t)v85);
    uint64_t v39 = sub_1D446A888();
    uint64_t v40 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v41 = v39 & ~v40;
    uint64_t v42 = v83;
    if (((*(void *)(v30 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41) & 1) == 0) {
      break;
    }
    uint64_t v43 = ~v40;
    while (1)
    {
      sub_1D43F1648(*(void *)(a2 + 48) + v41 * v37, (uint64_t)v16, type metadata accessor for FMIPBeaconShare);
      if ((sub_1D4469658() & 1) == 0 || (sub_1D4469658() & 1) == 0) {
        goto LABEL_28;
      }
      uint64_t v45 = v13[6];
      uint64_t v46 = *(void *)&v16[v45];
      uint64_t v47 = *(void *)&v16[v45 + 8];
      char v48 = &v19[v45];
      BOOL v49 = v46 == *(void *)v48 && v47 == *((void *)v48 + 1);
      if (!v49 && (sub_1D446A758() & 1) == 0) {
        goto LABEL_28;
      }
      uint64_t v50 = v13[7];
      uint64_t v51 = *(void *)&v16[v50];
      uint64_t v52 = *(void *)&v16[v50 + 8];
      uint64_t v53 = &v19[v50];
      BOOL v54 = v51 == *(void *)v53 && v52 == *((void *)v53 + 1);
      if (!v54 && (sub_1D446A758() & 1) == 0) {
        goto LABEL_28;
      }
      uint64_t v55 = v13[8];
      unint64_t v56 = *(void *)&v16[v55];
      unint64_t v84 = *(void *)&v19[v55];
      v85[0] = v56;
      if ((static FMIPBeaconShareState.== infix(_:_:)(v85, &v84) & 1) == 0
        || (sub_1D44695C8() & 1) == 0
        || (sub_1D44695C8() & 1) == 0)
      {
        goto LABEL_28;
      }
      uint64_t v57 = v13[11];
      uint64_t v82 = v4;
      uint64_t v58 = v42;
      char v76 = &v19[v57];
      uint64_t v59 = v42 + *(int *)(v81 + 48);
      sub_1D42A3A74((uint64_t)&v16[v57], v58, &qword_1EBD7E918);
      uint64_t v60 = (uint64_t)v76;
      char v76 = (char *)v59;
      sub_1D42A3A74(v60, v59, &qword_1EBD7E918);
      uint64_t v74 = *v80;
      if (v74((char *)v58, 1, v82) == 1)
      {
        uint64_t v4 = v82;
        if (v74(v76, 1, v82) != 1) {
          goto LABEL_27;
        }
        uint64_t v42 = v83;
        sub_1D4276C3C(v83, &qword_1EBD7E918);
      }
      else
      {
        uint64_t v61 = (uint64_t)v79;
        sub_1D42A3A74(v83, (uint64_t)v79, &qword_1EBD7E918);
        if (v74(v76, 1, v82) == 1)
        {
          uint64_t v44 = v61;
          uint64_t v4 = v82;
          ((void (*)(uint64_t, uint64_t))*v77)(v44, v82);
LABEL_27:
          uint64_t v42 = v83;
          sub_1D4276C3C(v83, &qword_1EA6C9490);
          goto LABEL_28;
        }
        uint64_t v4 = v82;
        (*v75)(v78, v76, v82);
        sub_1D42AC45C(&qword_1EA6C9498, MEMORY[0x1E4F276F0]);
        LODWORD(v74) = sub_1D4469AF8();
        char v76 = *v77;
        ((void (*)(char *, uint64_t))v76)(v78, v4);
        ((void (*)(char *, uint64_t))v76)(v79, v4);
        uint64_t v42 = v83;
        sub_1D4276C3C(v83, &qword_1EBD7E918);
        if ((v74 & 1) == 0) {
          goto LABEL_28;
        }
      }
      uint64_t v62 = v13[12];
      uint64_t v63 = &v16[v62];
      char v64 = v16[v62 + 8];
      uint64_t v65 = &v19[v62];
      int v66 = v19[v62 + 8];
      if ((v64 & 1) == 0) {
        break;
      }
      if (v66) {
        goto LABEL_55;
      }
LABEL_28:
      sub_1D43F1718((uint64_t)v16, type metadata accessor for FMIPBeaconShare);
      unint64_t v41 = (v41 + 1) & v43;
      if (((*(void *)(v30 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41) & 1) == 0) {
        goto LABEL_59;
      }
    }
    if (*(void *)v63 != *(void *)v65) {
      LOBYTE(v66) = 1;
    }
    if (v66) {
      goto LABEL_28;
    }
LABEL_55:
    if (v16[v13[13]] != v19[v13[13]]) {
      goto LABEL_28;
    }
    sub_1D43F1718((uint64_t)v16, type metadata accessor for FMIPBeaconShare);
    uint64_t result = sub_1D43F1718((uint64_t)v19, type metadata accessor for FMIPBeaconShare);
    a1 = v71;
    uint64_t v21 = v70;
    uint64_t v23 = v69;
    uint64_t v25 = v73;
    int64_t v29 = v72;
    int64_t v24 = v68;
    unint64_t v28 = v67;
    if (!v67) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v67 = (v28 - 1) & v28;
    int64_t v68 = v24;
  }
LABEL_59:
  sub_1D43F1718((uint64_t)v19, type metadata accessor for FMIPBeaconShare);
  return 0;
}

uint64_t sub_1D43EF794(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      return 0;
    }
    int64_t v4 = 0;
    uint64_t v25 = a1 + 56;
    uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(a1 + 56);
    int64_t v26 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = a2 + 56;
LABEL_7:
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v11 < v26)
    {
      unint64_t v12 = *(void *)(v25 + 8 * v11);
      ++v4;
      if (v12) {
        goto LABEL_24;
      }
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12) {
        goto LABEL_24;
      }
      int64_t v4 = v11 + 2;
      if (v11 + 2 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12) {
        goto LABEL_24;
      }
      int64_t v4 = v11 + 3;
      if (v11 + 3 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12)
      {
LABEL_24:
        unint64_t v7 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_25:
        int v14 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v10);
        sub_1D446A828();
        sub_1D4469BC8();
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_1D446A888();
        uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v17 = v15 & ~v16;
        if ((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
        {
          int64_t v27 = v4;
          uint64_t v18 = ~v16;
          while (1)
          {
            unint64_t v19 = 0xE400000000000000;
            uint64_t v20 = 1952867692;
            switch(*(unsigned char *)(*(void *)(a2 + 48) + v17))
            {
              case 1:
                unint64_t v19 = 0xE500000000000000;
                uint64_t v20 = 0x7468676972;
                break;
              case 2:
                uint64_t v20 = 1702060387;
                break;
              case 3:
                uint64_t v20 = 0x6F6C61646E617473;
                unint64_t v19 = 0xEA0000000000656ELL;
                break;
              case 4:
                uint64_t v20 = 1702131053;
                break;
              default:
                break;
            }
            unint64_t v21 = 0xE400000000000000;
            uint64_t v22 = 1952867692;
            switch(v14)
            {
              case 1:
                unint64_t v21 = 0xE500000000000000;
                if (v20 != 0x7468676972) {
                  goto LABEL_40;
                }
                goto LABEL_39;
              case 2:
                if (v20 != 1702060387) {
                  goto LABEL_40;
                }
                goto LABEL_39;
              case 3:
                uint64_t v22 = 0x6F6C61646E617473;
                unint64_t v21 = 0xEA0000000000656ELL;
                goto LABEL_38;
              case 4:
                if (v20 != 1702131053) {
                  goto LABEL_40;
                }
                goto LABEL_39;
              default:
LABEL_38:
                if (v20 != v22) {
                  goto LABEL_40;
                }
LABEL_39:
                if (v19 == v21)
                {
                  swift_bridgeObjectRelease_n();
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
LABEL_40:
                char v23 = sub_1D446A758();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v23)
                {
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
                unint64_t v17 = (v17 + 1) & v18;
                if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                  return 0;
                }
                break;
            }
          }
        }
        return 0;
      }
      int64_t v13 = v11 + 4;
      if (v13 < v26)
      {
        unint64_t v12 = *(void *)(v25 + 8 * v13);
        if (v12)
        {
          int64_t v4 = v13;
          goto LABEL_24;
        }
        while (1)
        {
          int64_t v4 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            break;
          }
          if (v4 >= v26) {
            return 1;
          }
          unint64_t v12 = *(void *)(v25 + 8 * v4);
          ++v13;
          if (v12) {
            goto LABEL_24;
          }
        }
LABEL_51:
        __break(1u);
        JUMPOUT(0x1D43EFB84);
      }
    }
  }
  return 1;
}

uint64_t sub_1D43EFBC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPItem() - 8;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  unint64_t v10 = (char *)&v33 - v9;
  uint64_t result = MEMORY[0x1F4188790](v8);
  int v14 = (char *)&v33 - v13;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v15 = 0;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v35 = a1;
  uint64_t v36 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  int64_t v37 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v20 = a2 + 56;
  uint64_t v34 = v12;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v38 = (v19 - 1) & v19;
  int64_t v39 = v15;
  for (unint64_t i = __clz(__rbit64(v19)) | (v15 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    uint64_t v26 = *(void *)(v12 + 72);
    sub_1D43F1648(*(void *)(a1 + 48) + v26 * i, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    int64_t v27 = v14;
    sub_1D43F16B0((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    sub_1D446A828();
    swift_bridgeObjectRetain();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_1D446A888();
    uint64_t v29 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v30 = v28 & ~v29;
    if (((*(void *)(v20 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
    {
LABEL_29:
      sub_1D43F1718((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      return 0;
    }
    uint64_t v31 = ~v29;
    while (1)
    {
      sub_1D43F1648(*(void *)(a2 + 48) + v30 * v26, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      char v32 = _s8FMIPCore8FMIPItemV2eeoiySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v10);
      sub_1D43F1718((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPItem);
      if (v32) {
        break;
      }
      unint64_t v30 = (v30 + 1) & v31;
      if (((*(void *)(v20 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
        goto LABEL_29;
      }
    }
    uint64_t result = sub_1D43F1718((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    uint64_t v12 = v34;
    a1 = v35;
    int v14 = v27;
    unint64_t v19 = v38;
    int64_t v15 = v39;
    if (v38) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v22 >= v37) {
      return 1;
    }
    unint64_t v23 = *(void *)(v36 + 8 * v22);
    int64_t v24 = v15 + 1;
    if (!v23)
    {
      int64_t v24 = v22 + 1;
      if (v22 + 1 >= v37) {
        return 1;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v22 + 2;
        if (v22 + 2 >= v37) {
          return 1;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v22 + 3;
          if (v22 + 3 >= v37) {
            return 1;
          }
          unint64_t v23 = *(void *)(v36 + 8 * v24);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v38 = (v23 - 1) & v23;
    int64_t v39 = v24;
  }
  int64_t v25 = v22 + 4;
  if (v25 >= v37) {
    return 1;
  }
  unint64_t v23 = *(void *)(v36 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v25;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v37) {
      return 1;
    }
    unint64_t v23 = *(void *)(v36 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_24;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1D43EFF70(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      return 0;
    }
    int64_t v4 = 0;
    uint64_t v25 = a1 + 56;
    uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(a1 + 56);
    int64_t v26 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = a2 + 56;
LABEL_7:
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v11 < v26)
    {
      unint64_t v12 = *(void *)(v25 + 8 * v11);
      ++v4;
      if (v12) {
        goto LABEL_24;
      }
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12) {
        goto LABEL_24;
      }
      int64_t v4 = v11 + 2;
      if (v11 + 2 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12) {
        goto LABEL_24;
      }
      int64_t v4 = v11 + 3;
      if (v11 + 3 >= v26) {
        return 1;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v4);
      if (v12)
      {
LABEL_24:
        unint64_t v7 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_25:
        int v14 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v10);
        sub_1D446A828();
        sub_1D4469BC8();
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_1D446A888();
        uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v17 = v15 & ~v16;
        if ((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
        {
          int64_t v27 = v4;
          uint64_t v18 = ~v16;
          while (1)
          {
            unint64_t v19 = 0xEA0000000000656ELL;
            uint64_t v20 = 0x6F6C61646E617473;
            switch(*(unsigned char *)(*(void *)(a2 + 48) + v17))
            {
              case 1:
                unint64_t v19 = 0xE400000000000000;
                uint64_t v20 = 1702060387;
                break;
              case 2:
                unint64_t v19 = 0xE700000000000000;
                uint64_t v20 = 0x6475427466656CLL;
                break;
              case 3:
                unint64_t v19 = 0xE800000000000000;
                uint64_t v20 = 0x6475427468676972;
                break;
              case 4:
                unint64_t v19 = 0xE700000000000000;
                uint64_t v20 = 0x636972656E6567;
                break;
              default:
                break;
            }
            uint64_t v21 = 0x6F6C61646E617473;
            unint64_t v22 = 0xEA0000000000656ELL;
            switch(v14)
            {
              case 1:
                unint64_t v22 = 0xE400000000000000;
                if (v20 != 1702060387) {
                  goto LABEL_40;
                }
                goto LABEL_39;
              case 2:
                unint64_t v22 = 0xE700000000000000;
                if (v20 != 0x6475427466656CLL) {
                  goto LABEL_40;
                }
                goto LABEL_39;
              case 3:
                unint64_t v22 = 0xE800000000000000;
                uint64_t v21 = 0x6475427468676972;
                goto LABEL_38;
              case 4:
                unint64_t v22 = 0xE700000000000000;
                if (v20 != 0x636972656E6567) {
                  goto LABEL_40;
                }
                goto LABEL_39;
              default:
LABEL_38:
                if (v20 != v21) {
                  goto LABEL_40;
                }
LABEL_39:
                if (v19 == v22)
                {
                  swift_bridgeObjectRelease_n();
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
LABEL_40:
                char v23 = sub_1D446A758();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v23)
                {
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
                unint64_t v17 = (v17 + 1) & v18;
                if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                  return 0;
                }
                break;
            }
          }
        }
        return 0;
      }
      int64_t v13 = v11 + 4;
      if (v13 < v26)
      {
        unint64_t v12 = *(void *)(v25 + 8 * v13);
        if (v12)
        {
          int64_t v4 = v13;
          goto LABEL_24;
        }
        while (1)
        {
          int64_t v4 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            break;
          }
          if (v4 >= v26) {
            return 1;
          }
          unint64_t v12 = *(void *)(v25 + 8 * v4);
          ++v13;
          if (v12) {
            goto LABEL_24;
          }
        }
LABEL_51:
        __break(1u);
        JUMPOUT(0x1D43F03B4);
      }
    }
  }
  return 1;
}

uint64_t sub_1D43F03F0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  int v2 = *(unsigned __int8 *)(a1 + 24);
  int v3 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 16);
  if ((sub_1D42C93E4(*(void *)(a1 + 8), *(void *)(a2 + 8)) & 1) == 0) {
    return 0;
  }
  sub_1D42C98CC(v5, v4);
  if (v6) {
    return v2 ^ v3 ^ 1u;
  }
  else {
    return 0;
  }
}

uint64_t sub_1D43F0460@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1D441CC84(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

BOOL sub_1D43F04A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  BOOL result = 0;
  if (*a1 == *a2 && *((void *)a1 + 1) == *((void *)a2 + 1))
  {
    uint64_t v2 = *((void *)a1 + 3);
    int v3 = a1[32];
    uint64_t v4 = *((void *)a2 + 3);
    int v5 = a2[32];
    if (sub_1D42C93E4(*((void *)a1 + 2), *((void *)a2 + 2)))
    {
      sub_1D42C98CC(v2, v4);
      if ((v6 & 1) != 0 && ((v3 ^ v5) & 1) == 0) {
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_1D43F05C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1D42D5DA0(&qword_1EA6CB000);
  MEMORY[0x1F4188790](v71);
  uint64_t v76 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for FMIPDeviceConnectedState(0);
  uint64_t v78 = *(void *)(v68 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v68);
  uint64_t v79 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  int64_t v11 = (char *)&v57 - v10;
  uint64_t v12 = sub_1D4469688();
  uint64_t v69 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v61 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  int64_t v72 = (char *)&v57 - v15;
  uint64_t v16 = sub_1D42D5DA0(&qword_1EA6CA378);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  unint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v17);
  unint64_t v22 = (char *)&v57 - v21;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v70 = 0;
  uint64_t v63 = a1;
  uint64_t v25 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v23 = v25;
  uint64_t v26 = 1 << *(unsigned char *)(v24 - 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & v23;
  uint64_t v62 = v69 + 16;
  uint64_t v73 = (void (**)(char *))(v69 + 32);
  uint64_t v74 = (void (**)(uint64_t, uint64_t))(v69 + 8);
  uint64_t v67 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  uint64_t v59 = v24;
  int64_t v60 = (unint64_t)(v26 + 63) >> 6;
  int64_t v58 = v60 - 1;
  char v64 = v19;
  uint64_t v65 = a2;
  int v66 = v11;
  while (1)
  {
    if (v28)
    {
      uint64_t v77 = (v28 - 1) & v28;
      unint64_t v33 = __clz(__rbit64(v28)) | (v70 << 6);
LABEL_12:
      uint64_t v34 = v63;
      (*(void (**)(char *, unint64_t, uint64_t))(v69 + 16))(v19, *(void *)(v63 + 48) + *(void *)(v69 + 72) * v33, v12);
      uint64_t v35 = *(void *)(v34 + 56) + *(void *)(v78 + 72) * v33;
      uint64_t v36 = sub_1D42D5DA0(&qword_1EA6CA370);
      sub_1D43F1648(v35, (uint64_t)&v19[*(int *)(v36 + 48)], type metadata accessor for FMIPDeviceConnectedState);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v19, 0, 1, v36);
      goto LABEL_34;
    }
    int64_t v37 = v70 + 1;
    if (__OFADD__(v70, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v37 < v60)
    {
      unint64_t v38 = *(void *)(v59 + 8 * v37);
      if (v38) {
        goto LABEL_16;
      }
      int64_t v39 = v70 + 2;
      ++v70;
      if (v37 + 1 < v60)
      {
        unint64_t v38 = *(void *)(v59 + 8 * v39);
        if (v38) {
          goto LABEL_19;
        }
        int64_t v70 = v37 + 1;
        if (v37 + 2 < v60)
        {
          unint64_t v38 = *(void *)(v59 + 8 * (v37 + 2));
          if (v38)
          {
            v37 += 2;
            goto LABEL_16;
          }
          int64_t v70 = v37 + 2;
          if (v37 + 3 < v60)
          {
            unint64_t v38 = *(void *)(v59 + 8 * (v37 + 3));
            if (v38)
            {
              v37 += 3;
              goto LABEL_16;
            }
            int64_t v39 = v37 + 4;
            int64_t v70 = v37 + 3;
            if (v37 + 4 < v60) {
              break;
            }
          }
        }
      }
    }
LABEL_33:
    uint64_t v40 = sub_1D42D5DA0(&qword_1EA6CA370);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v19, 1, 1, v40);
    uint64_t v77 = 0;
LABEL_34:
    sub_1D4276C98((uint64_t)v19, (uint64_t)v22, &qword_1EA6CA378);
    uint64_t v41 = sub_1D42D5DA0(&qword_1EA6CA370);
    int v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v22, 1, v41);
    BOOL v75 = v42 == 1;
    if (v42 == 1) {
      return v75;
    }
    uint64_t v43 = (uint64_t)&v22[*(int *)(v41 + 48)];
    uint64_t v44 = v22;
    uint64_t v45 = (uint64_t)v72;
    uint64_t v46 = *v73;
    uint64_t v47 = v44;
    (*v73)(v72);
    sub_1D43F16B0(v43, (uint64_t)v11, type metadata accessor for FMIPDeviceConnectedState);
    unint64_t v48 = sub_1D43AEE98(v45);
    LOBYTE(v43) = v49;
    uint64_t v50 = *v74;
    (*v74)(v45, v12);
    if ((v43 & 1) == 0) {
      goto LABEL_44;
    }
    uint64_t v51 = v79;
    sub_1D43F1648(*(void *)(a2 + 56) + *(void *)(v78 + 72) * v48, v79, type metadata accessor for FMIPDeviceConnectedState);
    uint64_t v52 = v76;
    uint64_t v53 = v76 + *(int *)(v71 + 48);
    sub_1D42A3A74(v51, v76, (uint64_t *)&unk_1EBD7E930);
    sub_1D42A3A74((uint64_t)v11, v53, (uint64_t *)&unk_1EBD7E930);
    BOOL v54 = *v67;
    if ((*v67)(v52, 1, v12) == 1)
    {
      if (v54(v53, 1, v12) != 1) {
        goto LABEL_42;
      }
      sub_1D4276C3C(v76, (uint64_t *)&unk_1EBD7E930);
      int64_t v11 = v66;
    }
    else
    {
      sub_1D42A3A74(v52, (uint64_t)v6, (uint64_t *)&unk_1EBD7E930);
      if (v54(v53, 1, v12) == 1)
      {
        v50((uint64_t)v6, v12);
LABEL_42:
        sub_1D4276C3C(v76, &qword_1EA6CB000);
        int64_t v11 = v66;
LABEL_43:
        sub_1D43F1718(v79, type metadata accessor for FMIPDeviceConnectedState);
LABEL_44:
        sub_1D43F1718((uint64_t)v11, type metadata accessor for FMIPDeviceConnectedState);
        return 0;
      }
      uint64_t v55 = v61;
      ((void (*)(char *, uint64_t, uint64_t))v46)(v61, v53, v12);
      sub_1D42AC45C(&qword_1EA6CA0E8, MEMORY[0x1E4F27990]);
      char v56 = sub_1D4469AF8();
      v50((uint64_t)v55, v12);
      v50((uint64_t)v6, v12);
      sub_1D4276C3C(v52, (uint64_t *)&unk_1EBD7E930);
      int64_t v11 = v66;
      if ((v56 & 1) == 0) {
        goto LABEL_43;
      }
    }
    uint64_t v29 = *(int *)(v68 + 20);
    int v30 = *(unsigned __int8 *)(v79 + v29);
    int v31 = v11[v29];
    sub_1D43F1718(v79, type metadata accessor for FMIPDeviceConnectedState);
    uint64_t result = sub_1D43F1718((uint64_t)v11, type metadata accessor for FMIPDeviceConnectedState);
    BOOL v32 = v30 == v31;
    unint64_t v19 = v64;
    a2 = v65;
    unint64_t v22 = v47;
    unint64_t v28 = v77;
    if (!v32) {
      return v75;
    }
  }
  unint64_t v38 = *(void *)(v59 + 8 * v39);
  if (v38)
  {
LABEL_19:
    int64_t v37 = v39;
LABEL_16:
    uint64_t v77 = (v38 - 1) & v38;
    unint64_t v33 = __clz(__rbit64(v38)) + (v37 << 6);
    int64_t v70 = v37;
    goto LABEL_12;
  }
  while (1)
  {
    int64_t v37 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    if (v37 >= v60)
    {
      int64_t v70 = v58;
      goto LABEL_33;
    }
    unint64_t v38 = *(void *)(v59 + 8 * v37);
    ++v39;
    if (v38) {
      goto LABEL_16;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1D43F0E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v58 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v48 - v7;
  uint64_t v63 = sub_1D4469688();
  uint64_t v57 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v59 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D42D5DA0(&qword_1EA6CAFB8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v48 - v15;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v53 = a1;
  BOOL v54 = v8;
  int64_t v60 = 0;
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v18 = a1 + 64;
  uint64_t v17 = v19;
  uint64_t v20 = 1 << *(unsigned char *)(v18 - 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v17;
  uint64_t v52 = v57 + 16;
  uint64_t v55 = (void (**)(uint64_t, uint64_t))(v57 + 8);
  char v56 = (void (**)(uint64_t, char *, uint64_t))(v57 + 32);
  uint64_t v50 = v18;
  int64_t v51 = (unint64_t)(v20 + 63) >> 6;
  int64_t v49 = v51 - 1;
  uint64_t v23 = (uint64_t *)&unk_1EA6CAFC0;
  uint64_t v24 = (uint64_t)v59;
  while (1)
  {
    if (v22)
    {
      unint64_t v25 = __clz(__rbit64(v22));
      uint64_t v26 = (v22 - 1) & v22;
      unint64_t v27 = v25 | (v60 << 6);
LABEL_8:
      uint64_t v28 = v53;
      (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))(v13, *(void *)(v53 + 48) + *(void *)(v57 + 72) * v27, v63);
      uint64_t v29 = *(void *)(v28 + 56) + *(void *)(v62 + 72) * v27;
      uint64_t v30 = sub_1D42D5DA0(v23);
      sub_1D43F1648(v29, (uint64_t)&v13[*(int *)(v30 + 48)], (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v13, 0, 1, v30);
      goto LABEL_30;
    }
    int64_t v31 = v60 + 1;
    if (__OFADD__(v60, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v31 < v51)
    {
      unint64_t v32 = *(void *)(v50 + 8 * v31);
      if (v32) {
        goto LABEL_12;
      }
      int64_t v33 = v60 + 2;
      ++v60;
      if (v31 + 1 < v51)
      {
        unint64_t v32 = *(void *)(v50 + 8 * v33);
        if (v32) {
          goto LABEL_15;
        }
        int64_t v60 = v31 + 1;
        if (v31 + 2 < v51)
        {
          unint64_t v32 = *(void *)(v50 + 8 * (v31 + 2));
          if (v32)
          {
            v31 += 2;
            goto LABEL_12;
          }
          int64_t v60 = v31 + 2;
          if (v31 + 3 < v51)
          {
            unint64_t v32 = *(void *)(v50 + 8 * (v31 + 3));
            if (v32)
            {
              v31 += 3;
              goto LABEL_12;
            }
            int64_t v33 = v31 + 4;
            int64_t v60 = v31 + 3;
            if (v31 + 4 < v51) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v34 = sub_1D42D5DA0(v23);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v13, 1, 1, v34);
    uint64_t v26 = 0;
LABEL_30:
    sub_1D4276C98((uint64_t)v13, (uint64_t)v16, &qword_1EA6CAFB8);
    uint64_t v35 = sub_1D42D5DA0(v23);
    int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v16, 1, v35);
    BOOL v61 = v36 == 1;
    if (v36 == 1) {
      return v61;
    }
    unint64_t v37 = v26;
    unint64_t v38 = v23;
    uint64_t v39 = (uint64_t)&v16[*(int *)(v35 + 48)];
    uint64_t v40 = v16;
    uint64_t v41 = v63;
    (*v56)(v24, v16, v63);
    uint64_t v42 = (uint64_t)v54;
    sub_1D43F16B0(v39, (uint64_t)v54, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
    unint64_t v43 = sub_1D43AEE98(v24);
    char v45 = v44;
    (*v55)(v24, v41);
    if ((v45 & 1) == 0)
    {
      sub_1D43F1718(v42, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
      return 0;
    }
    uint64_t v46 = v58;
    sub_1D43F1648(*(void *)(a2 + 56) + *(void *)(v62 + 72) * v43, v58, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
    char v47 = _s8FMIPCore26FMIPDeviceLostModeMetadataV2eeoiySbAC_ACtFZ_0(v46, v42);
    sub_1D43F1718(v46, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
    uint64_t result = sub_1D43F1718(v42, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
    uint64_t v23 = v38;
    uint64_t v16 = v40;
    unint64_t v22 = v37;
    if ((v47 & 1) == 0) {
      return v61;
    }
  }
  unint64_t v32 = *(void *)(v50 + 8 * v33);
  if (v32)
  {
LABEL_15:
    int64_t v31 = v33;
LABEL_12:
    uint64_t v26 = (v32 - 1) & v32;
    unint64_t v27 = __clz(__rbit64(v32)) + (v31 << 6);
    int64_t v60 = v31;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v31 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v31 >= v51)
    {
      int64_t v60 = v49;
      goto LABEL_29;
    }
    unint64_t v32 = *(void *)(v50 + 8 * v31);
    ++v33;
    if (v32) {
      goto LABEL_12;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1D43F1450(uint64_t a1, uint64_t a2)
{
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v9) {
      return;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(void **)(*(void *)(a1 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    id v19 = v18;
    unint64_t v20 = sub_1D42C4FCC(v16, v17);
    char v22 = v21;
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {

      return;
    }
    sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7D970);
    id v23 = *(id *)(*(void *)(a2 + 56) + 8 * v20);
    char v24 = sub_1D446A118();

    if ((v24 & 1) == 0) {
      return;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_1D43F1648(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D43F16B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D43F1718(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t assignWithCopy for FMIPBeaconRefreshFilter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for FMIPBeaconRefreshFilter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FMIPBeaconRefreshingContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43F1904);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

unint64_t sub_1D43F1930()
{
  unint64_t result = qword_1EA6CB008;
  if (!qword_1EA6CB008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB008);
  }
  return result;
}

unint64_t sub_1D43F1988()
{
  unint64_t result = qword_1EA6CB010;
  if (!qword_1EA6CB010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB010);
  }
  return result;
}

unint64_t sub_1D43F19E0()
{
  unint64_t result = qword_1EA6CB018;
  if (!qword_1EA6CB018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB018);
  }
  return result;
}

unint64_t sub_1D43F1A38()
{
  unint64_t result = qword_1EA6CB020;
  if (!qword_1EA6CB020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB020);
  }
  return result;
}

unint64_t sub_1D43F1A90()
{
  unint64_t result = qword_1EA6CB028;
  if (!qword_1EA6CB028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB028);
  }
  return result;
}

uint64_t sub_1D43F1AE4(uint64_t a1, uint64_t a2)
{
  return sub_1D43F1F30(a1, a2, (SEL *)&selRef_name);
}

void sub_1D43F1AF0(uint64_t a1, uint64_t a2)
{
}

id sub_1D43F1B00()
{
  id v1 = objc_msgSend(*v0, sel_type);
  return v1;
}

id sub_1D43F1B38()
{
  return objc_msgSend(*v0, sel_batteryLevel);
}

void sub_1D43F1B48(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1D43F1B54(uint64_t a1, uint64_t a2)
{
  return sub_1D43F1F30(a1, a2, (SEL *)&selRef_model);
}

id sub_1D43F1B60()
{
  return objc_msgSend(*v0, sel_partIdentifier);
}

id sub_1D43F1B70()
{
  id v1 = objc_msgSend(*v0, sel_lostModeInfo);
  return v1;
}

id sub_1D43F1BAC()
{
  id v1 = objc_msgSend(*v0, sel_owner);
  return v1;
}

id sub_1D43F1BE4()
{
  id v1 = objc_msgSend(*v0, sel_role);
  return v1;
}

uint64_t sub_1D43F1C20(uint64_t a1, uint64_t a2)
{
  return sub_1D43F1F30(a1, a2, (SEL *)&selRef_systemVersion);
}

id sub_1D43F1C30()
{
  id v1 = objc_msgSend(*v0, sel_accessoryProductInfo);
  return v1;
}

id sub_1D43F1C68()
{
  return objc_msgSend(*v0, sel_vendorId);
}

id sub_1D43F1C78()
{
  return objc_msgSend(*v0, sel_productId);
}

id sub_1D43F1C88()
{
  return objc_msgSend(*v0, sel_isAppleAudioAccessory);
}

id sub_1D43F1CAC()
{
  return objc_msgSend(*v0, sel_isZeus);
}

id sub_1D43F1CD0()
{
  return objc_msgSend(*v0, sel_canBeLeashedByHost);
}

id sub_1D43F1CF4()
{
  return objc_msgSend(*v0, sel_connected);
}

uint64_t sub_1D43F1D18@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_groupIdentifier);
  if (v3)
  {
    unsigned int v4 = v3;
    sub_1D4469668();

    uint64_t v5 = sub_1D4469688();
    unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D4469688();
    unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }
  return v6(v8, v9, 1, v7);
}

void sub_1D43F1DE0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  sub_1D4469668();
}

uint64_t sub_1D43F1E3C()
{
  id v1 = objc_msgSend(*v0, sel_taskInformation);
  type metadata accessor for SPBeaconTaskName(0);
  sub_1D4275AD0(0, &qword_1EA6CA118);
  sub_1D43F21B0();
  uint64_t v2 = sub_1D4469A58();

  return v2;
}

uint64_t sub_1D43F1EC8()
{
  id v1 = objc_msgSend(*v0, sel_serialNumber);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1D4469B38();

  return v3;
}

uint64_t sub_1D43F1F30(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  uint64_t v5 = sub_1D4469B38();

  return v5;
}

uint64_t sub_1D43F1F84()
{
  id v1 = objc_msgSend(*v0, sel_safeLocations);
  sub_1D4275AD0(0, &qword_1EA6CA230);
  sub_1D42E2004();
  uint64_t v2 = sub_1D4469ED8();

  return v2;
}

uint64_t dispatch thunk of FMIPApplicationBeacon.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.groupIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.batteryLevel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.productUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.model.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.partIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.lostModeInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.taskInformation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.owner.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.role.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.serialNumber.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.systemVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.safeLocations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.accessoryProductInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.vendorId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.productId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.isAppleAudioAccessory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.isZeus.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.canBeLeashedByHost.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of FMIPApplicationBeacon.connected.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

unint64_t sub_1D43F21B0()
{
  unint64_t result = qword_1EA6C92C8;
  if (!qword_1EA6C92C8)
  {
    type metadata accessor for SPBeaconTaskName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C92C8);
  }
  return result;
}

void *FMIPAddMultipleSafeLocationsItemAction.__allocating_init(beaconUUIDs:location:originalIdentifier:)(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  memcpy(v8 + 2, a2, 0x160uLL);
  v8[47] = a4;
  v8[48] = a1;
  v8[46] = a3;
  return v8;
}

uint64_t _s8FMIPCore41FMIPAssignMultipleSafeLocationsItemActionC11beaconUUIDs8locationACSaySSG_AA16FMIPSafeLocationVtcfC_0(uint64_t a1, const void *a2)
{
  uint64_t v4 = swift_allocObject();
  memcpy((void *)(v4 + 16), a2, 0x160uLL);
  *(void *)(v4 + 368) = a1;
  return v4;
}

uint64_t FMIPSafeLocationAction.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t FMIPSafeLocationAction.init()()
{
  return v0;
}

uint64_t FMIPSafeLocationAction.deinit()
{
  return v0;
}

uint64_t FMIPSafeLocationAction.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void FMIPAssignSafeLocationToAllSupportedBeaconsAction.__allocating_init()()
{
}

void FMIPAssignSafeLocationToAllSupportedBeaconsAction.init()()
{
}

uint64_t FMIPAssignMultipleSafeLocationsItemAction.beaconUUIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FMIPAssignMultipleSafeLocationsItemAction.init(beaconUUIDs:location:)(uint64_t a1, const void *a2)
{
  memcpy((void *)(v2 + 16), a2, 0x160uLL);
  *(void *)(v2 + 368) = a1;
  return v2;
}

void FMIPAssignMultipleSafeLocationsItemAction.__allocating_init()()
{
}

void FMIPAssignMultipleSafeLocationsItemAction.init()()
{
}

void FMIPAssignSafeLocationItemAction.__allocating_init()()
{
}

void FMIPAssignSafeLocationItemAction.init()()
{
}

uint64_t FMIPAddMultipleSafeLocationsItemAction.originalIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 368);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPAddMultipleSafeLocationsItemAction.beaconUUIDs.getter()
{
  return swift_bridgeObjectRetain();
}

void *FMIPAddMultipleSafeLocationsItemAction.init(beaconUUIDs:location:originalIdentifier:)(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(v4 + 2, a2, 0x160uLL);
  v4[47] = a4;
  v4[48] = a1;
  v4[46] = a3;
  return v4;
}

void FMIPAddMultipleSafeLocationsItemAction.__allocating_init()()
{
}

void FMIPAddMultipleSafeLocationsItemAction.init()()
{
}

uint64_t sub_1D43F2594()
{
  memcpy(v2, (const void *)(v0 + 16), sizeof(v2));
  sub_1D42FC604((uint64_t)v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FMIPAddMultipleSafeLocationsItemAction.deinit()
{
  memcpy(v2, (const void *)(v0 + 16), sizeof(v2));
  sub_1D42FC604((uint64_t)v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMIPAddMultipleSafeLocationsItemAction.__deallocating_deinit()
{
  memcpy(v2, (const void *)(v0 + 16), sizeof(v2));
  sub_1D42FC604((uint64_t)v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FMIPAddSafeLocationItemAction.location.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (const void *)(v1 + 16);
  memcpy(v5, v3, sizeof(v5));
  memcpy(a1, v3, 0x160uLL);
  return sub_1D42FC4A4((uint64_t)v5);
}

uint64_t FMIPAddSafeLocationItemAction.beaconUUID.getter()
{
  uint64_t v1 = *(void *)(v0 + 368);
  swift_bridgeObjectRetain();
  return v1;
}

void *FMIPAddSafeLocationItemAction.init(beaconUUID:location:)(uint64_t a1, uint64_t a2, void *__src)
{
  memcpy(v3 + 2, __src, 0x160uLL);
  v3[46] = a1;
  v3[47] = a2;
  return v3;
}

void FMIPAddSafeLocationItemAction.__allocating_init()()
{
}

void FMIPAddSafeLocationItemAction.init()()
{
}

void FMIPRemoveMultipleSafeLocationItemsAction.__allocating_init()()
{
}

void FMIPRemoveMultipleSafeLocationItemsAction.init()()
{
}

uint64_t sub_1D43F2828()
{
  memcpy(v2, (const void *)(v0 + 16), sizeof(v2));
  sub_1D42FC604((uint64_t)v2);
  return swift_bridgeObjectRelease();
}

uint64_t _s8FMIPCore41FMIPAssignMultipleSafeLocationsItemActionCfd_0()
{
  memcpy(v2, (const void *)(v0 + 16), sizeof(v2));
  sub_1D42FC604((uint64_t)v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _s8FMIPCore41FMIPAssignMultipleSafeLocationsItemActionCfD_0()
{
  memcpy(v2, (const void *)(v0 + 16), sizeof(v2));
  sub_1D42FC604((uint64_t)v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FMIPEditSafeLocationItemAction.__allocating_init(safeLocation:)(const void *a1)
{
  uint64_t v2 = swift_allocObject();
  memcpy((void *)(v2 + 16), a1, 0x160uLL);
  return v2;
}

uint64_t FMIPEditSafeLocationItemAction.init(safeLocation:)(void *__src)
{
  memcpy((void *)(v1 + 16), __src, 0x160uLL);
  return v1;
}

void FMIPEditSafeLocationItemAction.__allocating_init()()
{
}

void FMIPEditSafeLocationItemAction.init()()
{
}

uint64_t sub_1D43F29E0()
{
  memcpy(v2, (const void *)(v0 + 16), sizeof(v2));
  return sub_1D42FC604((uint64_t)v2);
}

uint64_t FMIPEditSafeLocationItemAction.deinit()
{
  memcpy(v2, (const void *)(v0 + 16), sizeof(v2));
  sub_1D42FC604((uint64_t)v2);
  return v0;
}

void FMIPAddSafeLocationToAllSupportedBeaconsAction.__allocating_init()()
{
}

void FMIPAddSafeLocationToAllSupportedBeaconsAction.init()()
{
}

uint64_t _s8FMIPCore49FMIPAssignSafeLocationToAllSupportedBeaconsActionCfD_0()
{
  memcpy(v2, (const void *)(v0 + 16), sizeof(v2));
  sub_1D42FC604((uint64_t)v2);
  return swift_deallocClassInstance();
}

void *_s8FMIPCore32FMIPAssignSafeLocationItemActionC10beaconUUID8locationACSS_AA08FMIPSafeD0VtcfC_0(uint64_t a1, uint64_t a2, const void *a3)
{
  unsigned int v6 = (void *)swift_allocObject();
  memcpy(v6 + 2, a3, 0x160uLL);
  v6[46] = a1;
  v6[47] = a2;
  return v6;
}

void FMIPRemoveSafeLocationItemAction.__allocating_init()()
{
}

void FMIPRemoveSafeLocationItemAction.init()()
{
}

uint64_t sub_1D43F2BD0()
{
  memcpy(v2, (const void *)(v0 + 16), sizeof(v2));
  sub_1D42FC604((uint64_t)v2);
  return swift_bridgeObjectRelease();
}

uint64_t _s8FMIPCore32FMIPAssignSafeLocationItemActionCfd_0()
{
  memcpy(v2, (const void *)(v0 + 16), sizeof(v2));
  sub_1D42FC604((uint64_t)v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _s8FMIPCore32FMIPAssignSafeLocationItemActionCfD_0()
{
  memcpy(v2, (const void *)(v0 + 16), sizeof(v2));
  sub_1D42FC604((uint64_t)v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMIPSafeLocationAction()
{
  return self;
}

uint64_t method lookup function for FMIPSafeLocationAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPSafeLocationAction);
}

uint64_t dispatch thunk of FMIPSafeLocationAction.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t type metadata accessor for FMIPAssignSafeLocationToAllSupportedBeaconsAction()
{
  return self;
}

uint64_t method lookup function for FMIPAssignSafeLocationToAllSupportedBeaconsAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPAssignSafeLocationToAllSupportedBeaconsAction);
}

uint64_t dispatch thunk of FMIPAssignSafeLocationToAllSupportedBeaconsAction.__allocating_init(location:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for FMIPAssignMultipleSafeLocationsItemAction()
{
  return self;
}

uint64_t method lookup function for FMIPAssignMultipleSafeLocationsItemAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPAssignMultipleSafeLocationsItemAction);
}

uint64_t dispatch thunk of FMIPAssignMultipleSafeLocationsItemAction.__allocating_init(beaconUUIDs:location:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for FMIPAssignSafeLocationItemAction()
{
  return self;
}

uint64_t method lookup function for FMIPAssignSafeLocationItemAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPAssignSafeLocationItemAction);
}

uint64_t dispatch thunk of FMIPAssignSafeLocationItemAction.__allocating_init(beaconUUID:location:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for FMIPAddMultipleSafeLocationsItemAction()
{
  return self;
}

uint64_t method lookup function for FMIPAddMultipleSafeLocationsItemAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPAddMultipleSafeLocationsItemAction);
}

uint64_t dispatch thunk of FMIPAddMultipleSafeLocationsItemAction.__allocating_init(beaconUUIDs:location:originalIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t type metadata accessor for FMIPAddSafeLocationItemAction()
{
  return self;
}

uint64_t method lookup function for FMIPAddSafeLocationItemAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPAddSafeLocationItemAction);
}

uint64_t dispatch thunk of FMIPAddSafeLocationItemAction.__allocating_init(beaconUUID:location:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for FMIPRemoveMultipleSafeLocationItemsAction()
{
  return self;
}

uint64_t method lookup function for FMIPRemoveMultipleSafeLocationItemsAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPRemoveMultipleSafeLocationItemsAction);
}

uint64_t dispatch thunk of FMIPRemoveMultipleSafeLocationItemsAction.__allocating_init(beaconUUIDs:location:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for FMIPEditSafeLocationItemAction()
{
  return self;
}

uint64_t method lookup function for FMIPEditSafeLocationItemAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPEditSafeLocationItemAction);
}

uint64_t dispatch thunk of FMIPEditSafeLocationItemAction.__allocating_init(safeLocation:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for FMIPAddSafeLocationToAllSupportedBeaconsAction()
{
  return self;
}

uint64_t method lookup function for FMIPAddSafeLocationToAllSupportedBeaconsAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPAddSafeLocationToAllSupportedBeaconsAction);
}

uint64_t dispatch thunk of FMIPAddSafeLocationToAllSupportedBeaconsAction.__allocating_init(safeLocation:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for FMIPRemoveSafeLocationItemAction()
{
  return self;
}

uint64_t method lookup function for FMIPRemoveSafeLocationItemAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPRemoveSafeLocationItemAction);
}

uint64_t dispatch thunk of FMIPRemoveSafeLocationItemAction.__allocating_init(beaconUUID:location:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FMIPManagerSiriDelegate.fmipManager(_:didInitializeDevices:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FMIPManagerSiriDelegate.fmipManager(_:didRecieve:familyMembers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of FMIPManagerSiriDelegate.fmipManager(_:didInitializeItems:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t FMIPFeatures.rawValue.getter()
{
  return *(void *)v0;
}

FMIPCore::FMIPFeatures __swiftcall FMIPFeatures.init(rawValue:)(FMIPCore::FMIPFeatures rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FMIPFeatures.isKeypadEnabled.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static FMIPFeatures.isLastKnownLocationEnabled.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static FMIPFeatures.isLockAndMessageEnabled.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static FMIPFeatures.isLocateEnabled.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static FMIPFeatures.isLostModeEnabled.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void static FMIPFeatures.isPinRequiredForWipe.getter(void *a1@<X8>)
{
  *a1 = 32;
}

void static FMIPFeatures.isRemoveEnabled.getter(void *a1@<X8>)
{
  *a1 = 64;
}

void static FMIPFeatures.isPlaySoundEnabled.getter(void *a1@<X8>)
{
  *a1 = 128;
}

void static FMIPFeatures.isSavePreferenceEnabled.getter(void *a1@<X8>)
{
  *a1 = 256;
}

void static FMIPFeatures.isTracksUpdateSwitchEnabled.getter(void *a1@<X8>)
{
  *a1 = 512;
}

void static FMIPFeatures.isWipeEnabled.getter(void *a1@<X8>)
{
  *a1 = 1024;
}

void static FMIPFeatures.isWipeAndMessageEnabled.getter(void *a1@<X8>)
{
  *a1 = 2048;
}

void static FMIPFeatures.isExclusiveRemoveEnabled.getter(void *a1@<X8>)
{
  *a1 = 4096;
}

void static FMIPFeatures.isLostModeWithLocationServiceEnabled.getter(void *a1@<X8>)
{
  *a1 = 0x2000;
}

void static FMIPFeatures.isMultiChannelSoundEnabled.getter(void *a1@<X8>)
{
  *a1 = 0x4000;
}

void static FMIPFeatures.isBluetoothRequired.getter(void *a1@<X8>)
{
  *a1 = 0x8000;
}

void static FMIPFeatures.isStopSoundSupported.getter(void *a1@<X8>)
{
  *a1 = 0x10000;
}

void static FMIPFeatures.isEraseAfterLockSupported.getter(void *a1@<X8>)
{
  *a1 = 0x20000;
}

void static FMIPFeatures.isLeashingSupported.getter(void *a1@<X8>)
{
  *a1 = 0x40000;
}

void static FMIPFeatures.isNotifyWhenDetachedSupported.getter(void *a1@<X8>)
{
  *a1 = 0x80000;
}

void static FMIPFeatures.isShowContactDetailsSupported.getter(void *a1@<X8>)
{
  *a1 = 0x100000;
}

void static FMIPFeatures.isRemoveUIv2Supported.getter(void *a1@<X8>)
{
  *a1 = 0x200000;
}

void static FMIPFeatures.canBeLeashedByHost.getter(void *a1@<X8>)
{
  *a1 = 0x400000;
}

void static FMIPFeatures.isNotifyWhenFoundSupported.getter(void *a1@<X8>)
{
  *a1 = 0x800000;
}

void static FMIPFeatures.locateAfterEraseSupported.getter(void *a1@<X8>)
{
  *a1 = 0x1000000;
}

void static FMIPFeatures.isLocalWithYouSupported.getter(void *a1@<X8>)
{
  *a1 = 0x2000000;
}

void static FMIPFeatures.shouldBeConsideredAsAccessory.getter(void *a1@<X8>)
{
  *a1 = 0x4000000;
}

void static FMIPFeatures.isPendingRemoveCapable.getter(void *a1@<X8>)
{
  *a1 = 0x8000000;
}

void static FMIPFeatures.isBTFindingSupported.getter(void *a1@<X8>)
{
  *a1 = 0x10000000;
}

void static FMIPFeatures.isRepairSupported.getter(void *a1@<X8>)
{
  *a1 = 0x20000000;
}

uint64_t sub_1D43F31EC(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1D42DF124(*a1);
  if (v3 == sub_1D42DF124(v2)) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1D446A758();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1D43F325C()
{
  char v1 = *v0;
  sub_1D446A828();
  sub_1D42DF124(v1);
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  return sub_1D446A888();
}

uint64_t sub_1D43F32B8()
{
  sub_1D42DF124(*v0);
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43F3304()
{
  char v1 = *v0;
  sub_1D446A828();
  sub_1D42DF124(v1);
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  return sub_1D446A888();
}

uint64_t sub_1D43F335C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43F37CC();
  *a1 = result;
  return result;
}

uint64_t sub_1D43F338C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D42DF124(*v1);
  *a1 = result;
  a1[1] = 0xE300000000000000;
  return result;
}

uint64_t sub_1D43F33BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43F37CC();
  *a1 = result;
  return result;
}

void sub_1D43F33E4(unsigned char *a1@<X8>)
{
  *a1 = 30;
}

uint64_t sub_1D43F33F0(uint64_t a1)
{
  unint64_t v2 = sub_1D42D7FE4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D43F342C(uint64_t a1)
{
  unint64_t v2 = sub_1D42D7FE4();
  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL static FMIPFeatures.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1D43F3484()
{
  unint64_t result = qword_1EA6CB030;
  if (!qword_1EA6CB030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB030);
  }
  return result;
}

unint64_t sub_1D43F34DC()
{
  unint64_t result = qword_1EA6CB038;
  if (!qword_1EA6CB038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB038);
  }
  return result;
}

unint64_t sub_1D43F3534()
{
  unint64_t result = qword_1EA6CB040;
  if (!qword_1EA6CB040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB040);
  }
  return result;
}

unint64_t sub_1D43F358C()
{
  unint64_t result = qword_1EA6CB048;
  if (!qword_1EA6CB048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB048);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPFeatures()
{
  return &type metadata for FMIPFeatures;
}

uint64_t getEnumTagSinglePayload for FMIPFeatures.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE3) {
    goto LABEL_17;
  }
  if (a2 + 29 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 29) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 29;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 29;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 29;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1E;
  int v8 = v6 - 30;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMIPFeatures.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 29 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 29) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE2)
  {
    unsigned int v6 = ((a2 - 227) >> 8) + 1;
    void *result = a2 + 29;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43F374CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 29;
        break;
    }
  }
  return result;
}

unint64_t sub_1D43F3778()
{
  unint64_t result = qword_1EA6CB050;
  if (!qword_1EA6CB050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB050);
  }
  return result;
}

uint64_t sub_1D43F37CC()
{
  unint64_t v0 = sub_1D446A788();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1E) {
    return 30;
  }
  else {
    return v0;
  }
}

uint64_t type metadata accessor for FMIPValidatePasswordRequest()
{
  uint64_t result = qword_1EA6CB058;
  if (!qword_1EA6CB058) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D43F386C()
{
  uint64_t result = type metadata accessor for FMIPDevice();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D43F3918()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F3A2C()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F3B24()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F3C6C()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F3D7C()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F3E88()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F3F88()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F4090()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F41CC()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F42DC()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F43E8()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F44E4()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F45F4()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F464C()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F4784()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F48EC()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F4A30()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F4B24()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F4C2C()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F4D30()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F4E3C()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F4F7C(unsigned __int8 *a1, char *a2)
{
  return sub_1D4412654(*a1, *a2);
}

uint64_t sub_1D43F4F88()
{
  return sub_1D43F3D7C();
}

uint64_t sub_1D43F4F90()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43F5084()
{
  return sub_1D43F4B24();
}

uint64_t sub_1D43F508C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D43F5900();
  *a1 = result;
  return result;
}

void sub_1D43F50BC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x6573617265;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000657361;
      uint64_t v3 = 0x72456C65636E6163;
      goto LABEL_3;
    case 2:
      *a1 = 1801678700;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x65646F4D74736F6CLL;
      a1[1] = 0xE800000000000000;
      break;
    case 4:
      *a1 = 0x65766F6D6572;
      a1[1] = 0xE600000000000000;
      break;
    case 5:
      *a1 = 0x6E776F6E6B6E75;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1D43F5190()
{
  unint64_t v1 = 0xE500000000000000;
  uint64_t v2 = 0x6573617265;
  switch(*(unsigned char *)(v0 + qword_1EA6E4990))
  {
    case 1:
      unint64_t v1 = 0xEB00000000657361;
      uint64_t v2 = 0x72456C65636E6163;
      break;
    case 2:
      unint64_t v1 = 0xE400000000000000;
      uint64_t v2 = 1801678700;
      break;
    case 3:
      unint64_t v1 = 0xE800000000000000;
      uint64_t v2 = 0x65646F4D74736F6CLL;
      break;
    case 4:
      unint64_t v1 = 0xE600000000000000;
      uint64_t v2 = 0x65766F6D6572;
      break;
    case 5:
      unint64_t v1 = 0xE700000000000000;
      uint64_t v2 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  uint64_t v3 = MEMORY[0x1E4FBB1A0];
  uint64_t v28 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v27 = v2;
  *((void *)&v27 + 1) = v1;
  uint64_t v4 = qword_1EA6C9D80;
  uint64_t v5 = *(void *)(v0 + qword_1EA6C9D80);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  sub_1D433313C((void *)(v5 + 16), v26);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  swift_release();
  sub_1D42C5494(&v27, v26);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D42C4E78(v26, 0xD000000000000017, 0x80000001D4483000, isUniquelyReferenced_nonNull_native);
  uint64_t v7 = swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v0 + v4);
  MEMORY[0x1F4188790](v7);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
  sub_1D4306B48((void *)(v8 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v0 + qword_1EA6E4988);
  uint64_t v9 = *(void *)(v0 + qword_1EA6E4988 + 8);
  uint64_t v28 = v3;
  *(void *)&long long v27 = v10;
  *((void *)&v27 + 1) = v9;
  uint64_t v11 = *(void *)(v0 + v4);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 24));
  sub_1D433313C((void *)(v11 + 16), v26);
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 24));
  swift_release();
  sub_1D42C5494(&v27, v26);
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D42C4E78(v26, 0x656B6F5468747561, 0xE90000000000006ELL, v12);
  uint64_t v13 = swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v0 + v4);
  MEMORY[0x1F4188790](v13);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
  sub_1D433A560((void *)(v14 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v28 = MEMORY[0x1E4FBB550];
  *(void *)&long long v27 = 1;
  uint64_t v15 = *(void *)(v0 + v4);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v15 + 24));
  sub_1D433313C((void *)(v15 + 16), v26);
  os_unfair_lock_unlock((os_unfair_lock_t)(v15 + 24));
  swift_release();
  sub_1D42C5494(&v27, v26);
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D42C4E78(v26, 0x7372655668747561, 0xEB000000006E6F69, v16);
  uint64_t v17 = swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v0 + v4);
  MEMORY[0x1F4188790](v17);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v18 + 24));
  sub_1D433A560((void *)(v18 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v18 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v0 + qword_1EA6E4998);
  uint64_t v19 = *(void *)(v0 + qword_1EA6E4998 + 8);
  uint64_t v28 = v3;
  *(void *)&long long v27 = v20;
  *((void *)&v27 + 1) = v19;
  uint64_t v21 = *(void *)(v0 + v4);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
  sub_1D433313C((void *)(v21 + 16), v26);
  os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
  swift_release();
  sub_1D42C5494(&v27, v26);
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D42C4E78(v26, 0x656369766564, 0xE600000000000000, v22);
  uint64_t v23 = swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v0 + v4);
  MEMORY[0x1F4188790](v23);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v24 + 24));
  sub_1D433A560((void *)(v24 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v24 + 24));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43F56D0()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_1EA6E4998;
  return sub_1D42B24BC(v1);
}

uint64_t sub_1D43F5714()
{
  uint64_t v0 = sub_1D427B074();
  swift_bridgeObjectRelease();
  sub_1D42B24BC(v0 + qword_1EA6E4998);
  return swift_deallocClassInstance();
}

uint64_t sub_1D43F579C()
{
  return type metadata accessor for FMIPValidatePasswordRequest();
}

unsigned char *storeEnumTagSinglePayload for FMIPValidatePasswordContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    void *result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43F5870);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPValidatePasswordContext()
{
  return &type metadata for FMIPValidatePasswordContext;
}

unint64_t sub_1D43F58AC()
{
  unint64_t result = qword_1EA6CB068;
  if (!qword_1EA6CB068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB068);
  }
  return result;
}

uint64_t sub_1D43F5900()
{
  unint64_t v0 = sub_1D446A518();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

void sub_1D43F594C()
{
  unint64_t v0 = (void *)sub_1D4469B08();
  char v1 = MGGetBoolAnswer();

  byte_1EA6CB070 = v1;
}

uint64_t sub_1D43F5990()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D43F59A0()
{
  if (qword_1EA6C8FD0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for FMLocalize();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1D44692D8();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t FMIPMapInteractionEvent.mapPOITapped.getter()
{
  return *v0;
}

uint64_t FMIPMapInteractionEvent.mapPOITapped.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t (*FMIPMapInteractionEvent.mapPOITapped.modify())()
{
  return nullsub_1;
}

uint64_t FMIPMapInteractionEvent.mapPOIOpenInMaps.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t FMIPMapInteractionEvent.mapPOIOpenInMaps.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*FMIPMapInteractionEvent.mapPOIOpenInMaps.modify())()
{
  return nullsub_1;
}

FMIPCore::FMIPMapInteractionEvent __swiftcall FMIPMapInteractionEvent.init(mapPOITapped:mapPOIOpenInMaps:)(Swift::Bool_optional mapPOITapped, Swift::Bool_optional mapPOIOpenInMaps)
{
  v2->value = mapPOITapped.value;
  v2[1].value = mapPOIOpenInMaps.value;
  result.mapPOITapped = mapPOITapped;
  return result;
}

Swift::Void __swiftcall FMIPManager.enqueue(mapInteractionEvent:)(FMIPCore::FMIPMapInteractionEvent mapInteractionEvent)
{
  __int16 v1 = **(_WORD **)&mapInteractionEvent.mapPOITapped.value;
  _s8FMIPCore13FMIPAnalyticsV23sendMapInteractionEvent5eventyAA07FMIPMapeF0V_tFZ_0((char *)&v1);
}

void sub_1D43F5B8C(unsigned int a1)
{
  int v2 = a1;
  unint64_t v3 = sub_1D4274BFC(MEMORY[0x1E4FBC860]);
  unint64_t v14 = v3;
  if (v2 == 2)
  {
  }
  else
  {
    unint64_t v4 = v3;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, a1 & 1);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1D4299B3C((uint64_t)v5, 0x6154494F5070616DLL, 0xEC00000064657070, isUniquelyReferenced_nonNull_native);
    unint64_t v14 = v4;
    swift_bridgeObjectRelease();
  }
  if ((a1 & 0xFF00) == 0x200)
  {

    unint64_t v7 = v14;
  }
  else
  {
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, (a1 >> 8) & 1);
    char v9 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D4299B3C((uint64_t)v8, 0xD000000000000010, 0x80000001D4483040, v9);
    unint64_t v7 = v14;
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = (void *)sub_1D4469B08();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v7;
  aBlock[4] = sub_1D4308610;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D4356EBC;
  aBlock[3] = &unk_1F2C0F500;
  char v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v12);
  swift_bridgeObjectRelease();
}

uint64_t _s8FMIPCore13FMIPAnalyticsV23sendMapInteractionEvent5eventyAA07FMIPMapeF0V_tFZ_0(char *a1)
{
  uint64_t v2 = sub_1D4469958();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D44699B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = *a1;
  char v11 = a1[1];
  if (qword_1EA6C9010 != -1) {
    swift_once();
  }
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = v10;
  *(unsigned char *)(v12 + 17) = v11;
  aBlock[4] = sub_1D43F6254;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0F4B0;
  uint64_t v13 = _Block_copy(aBlock);
  sub_1D4469988();
  v15[1] = MEMORY[0x1E4FBC860];
  sub_1D42E81D4();
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42E2378();
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v9, v5, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

_WORD *initializeBufferWithCopyOfBuffer for FMIPMapInteractionEvent(_WORD *result, _WORD *a2)
{
  void *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPMapInteractionEvent(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 65282 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65282 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65282;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  if (v6 >= 2) {
    int v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v7 = -2;
  }
  if (v7 < 0) {
    int v7 = -1;
  }
  return (v7 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPMapInteractionEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)FMIPCore::FMIPMapInteractionEvent result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43F620CLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)FMIPCore::FMIPMapInteractionEvent result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPMapInteractionEvent()
{
  return &type metadata for FMIPMapInteractionEvent;
}

uint64_t sub_1D43F6244()
{
  return MEMORY[0x1F4186498](v0, 18, 7);
}

void sub_1D43F6254()
{
  sub_1D43F5B8C(*(unsigned __int16 *)(v0 + 16));
}

uint64_t sub_1D43F625C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t FMIPZeusProductInformation.init(beacon:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_1D42C26F4(a1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 136))(v4, v5);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  sub_1D42C26F4(a1, v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 144))(v7, v8);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_1D42C26F4(a1, v10);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 56))(v10, v11);
  *a2 = v6;
  a2[1] = v9;
  a2[2] = v12;
  a2[3] = v13;
  a2[4] = 0x656C707041;
  a2[5] = 0xE500000000000000;
  a2[6] = 0;
  a2[7] = 0;
  a2[8] = 0x4010000000000000;
  return sub_1D42BEC64((uint64_t)a1);
}

uint64_t FMIPZeusProductInformation.vendorIdentifier.getter()
{
  return *(void *)v0;
}

uint64_t FMIPZeusProductInformation.productIdentifier.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t FMIPZeusProductInformation.modelName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPZeusProductInformation.manufacturerName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPZeusProductInformation.appBundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FMIPZeusProductInformation.antennaPower.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t FMIPZeusProductInformation.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 56);
  sub_1D446A838();
  sub_1D446A838();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  sub_1D446A848();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1D4469BC8();
    swift_bridgeObjectRelease();
  }
  return sub_1D446A868();
}

unint64_t sub_1D43F653C(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x6D614E6C65646F6DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x50616E6E65746E61;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D43F6604()
{
  return sub_1D43F653C(*v0);
}

uint64_t sub_1D43F660C(uint64_t a1)
{
  unint64_t v2 = sub_1D43F6E24();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D43F6648(uint64_t a1)
{
  unint64_t v2 = sub_1D43F6E24();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPZeusProductInformation.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6CB078);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  v13[5] = v1[2];
  v13[6] = v8;
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[4];
  v13[3] = v1[5];
  v13[4] = v9;
  uint64_t v11 = v1[6];
  v13[1] = v10;
  void v13[2] = v11;
  v13[0] = v1[7];
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43F6E24();
  sub_1D446A8E8();
  char v19 = 0;
  sub_1D446A688();
  if (!v2)
  {
    char v18 = 1;
    sub_1D446A688();
    char v17 = 2;
    sub_1D446A658();
    char v16 = 3;
    sub_1D446A658();
    char v15 = 4;
    sub_1D446A628();
    char v14 = 5;
    sub_1D446A678();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FMIPZeusProductInformation.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t FMIPZeusProductInformation.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CB088);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D43F6E24();
  sub_1D446A8C8();
  if (v2) {
    return sub_1D42BEC64((uint64_t)a1);
  }
  char v34 = 0;
  uint64_t v9 = sub_1D446A5C8();
  char v33 = 1;
  uint64_t v10 = sub_1D446A5C8();
  char v32 = 2;
  uint64_t v11 = sub_1D446A598();
  uint64_t v13 = v12;
  uint64_t v27 = v11;
  char v31 = 3;
  swift_bridgeObjectRetain();
  uint64_t v28 = v13;
  uint64_t v24 = sub_1D446A598();
  char v30 = 4;
  uint64_t v26 = v14;
  swift_bridgeObjectRetain();
  uint64_t v25 = 0;
  uint64_t v23 = sub_1D446A558();
  char v29 = 5;
  uint64_t v25 = v15;
  swift_bridgeObjectRetain();
  sub_1D446A5B8();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v10;
  uint64_t v18 = v28;
  a2[2] = v27;
  a2[3] = v18;
  uint64_t v19 = v25;
  uint64_t v20 = v26;
  a2[4] = v24;
  a2[5] = v20;
  a2[6] = v23;
  a2[7] = v19;
  a2[8] = v17;
  sub_1D42BEC64((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_1D43F6CDC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  FMIPZeusProductInformation.init(beacon:)(a1, (uint64_t *)v8);
  uint64_t v3 = v9;
  uint64_t v4 = v10;
  uint64_t v5 = v12;
  long long v6 = v8[1];
  *(_OWORD *)a2 = v8[0];
  *(_OWORD *)(a2 + 16) = v6;
  *(void *)(a2 + 32) = v3;
  *(void *)(a2 + 40) = v4;
  double result = *(double *)&v11;
  *(_OWORD *)(a2 + 48) = v11;
  *(void *)(a2 + 64) = v5;
  return result;
}

uint64_t sub_1D43F6D2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FMIPZeusProductInformation.init(from:)(a1, a2);
}

uint64_t sub_1D43F6D44(void *a1)
{
  return FMIPZeusProductInformation.encode(to:)(a1);
}

uint64_t sub_1D43F6D5C()
{
  return sub_1D446A888();
}

uint64_t sub_1D43F6DC4()
{
  return sub_1D446A888();
}

unint64_t sub_1D43F6E24()
{
  unint64_t result = qword_1EA6CB080;
  if (!qword_1EA6CB080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB080);
  }
  return result;
}

unint64_t sub_1D43F6E78(void *a1)
{
  a1[2] = sub_1D4303310();
  a1[3] = sub_1D4303138();
  unint64_t result = sub_1D43F6EB0();
  a1[4] = result;
  return result;
}

unint64_t sub_1D43F6EB0()
{
  unint64_t result = qword_1EA6CB090;
  if (!qword_1EA6CB090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB090);
  }
  return result;
}

unint64_t sub_1D43F6F08()
{
  unint64_t result = qword_1EA6CB098;
  if (!qword_1EA6CB098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB098);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPZeusProductInformation()
{
  return &type metadata for FMIPZeusProductInformation;
}

unsigned char *storeEnumTagSinglePayload for FMIPZeusProductInformation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    void *result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43F7038);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPZeusProductInformation.CodingKeys()
{
  return &type metadata for FMIPZeusProductInformation.CodingKeys;
}

unint64_t sub_1D43F7074()
{
  unint64_t result = qword_1EA6CB0A0;
  if (!qword_1EA6CB0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB0A0);
  }
  return result;
}

unint64_t sub_1D43F70CC()
{
  unint64_t result = qword_1EA6CB0A8;
  if (!qword_1EA6CB0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB0A8);
  }
  return result;
}

unint64_t sub_1D43F7124()
{
  unint64_t result = qword_1EA6CB0B0;
  if (!qword_1EA6CB0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB0B0);
  }
  return result;
}

uint64_t type metadata accessor for FMIPLostModeRequest()
{
  uint64_t result = qword_1EA6CB0B8;
  if (!qword_1EA6CB0B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D43F71C4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D43F7214(char a1)
{
  uint64_t result = 0x656369766564;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6470556C69616D65;
      break;
    case 2:
      uint64_t result = 0x65646F4D74736F6CLL;
      break;
    case 3:
      uint64_t result = 0x72624E72656E776FLL;
      break;
    case 4:
      uint64_t result = 0x65646F6373736170;
      break;
    case 5:
      uint64_t result = 0x646E756F73;
      break;
    case 6:
      uint64_t result = 1954047348;
      break;
    case 7:
      uint64_t result = 0x676E696B63617274;
      break;
    case 8:
      uint64_t result = 0x7478655472657375;
      break;
    case 9:
      uint64_t result = 0x6C69616D65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D43F734C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + qword_1EA6E49B0);
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device + 8);
  uint64_t v69 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v68 = v4;
  *((void *)&v68 + 1) = v3;
  uint64_t v5 = qword_1EA6C9D80;
  uint64_t v6 = *(void *)(v0 + qword_1EA6C9D80);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
  sub_1D433313C((void *)(v6 + 16), v66);
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
  unint64_t v7 = *(void *)&v66[0];
  swift_release();
  sub_1D42C5494(&v68, v66);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v67 = v7;
  sub_1D42C4E78(v66, 0x656369766564, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v1 + v5);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  sub_1D4306B48((void *)(v9 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  char v10 = *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isEmailUpdatesEnabled);
  uint64_t v69 = MEMORY[0x1E4FBB390];
  LOBYTE(v68) = v10;
  uint64_t v11 = *(void *)(v1 + v5);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 24));
  sub_1D433313C((void *)(v11 + 16), v66);
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 24));
  unint64_t v12 = *(void *)&v66[0];
  swift_release();
  unint64_t v67 = v12;
  if (v69)
  {
    sub_1D42C5494(&v68, v66);
    char v13 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v67 = 0x8000000000000000;
    sub_1D42C4E78(v66, 0x6470556C69616D65, 0xEC00000073657461, v13);
    uint64_t v14 = swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D429D4F4((uint64_t)&v68);
    sub_1D43FC5A4(0x6470556C69616D65, 0xEC00000073657461, v66);
    uint64_t v14 = sub_1D429D4F4((uint64_t)v66);
  }
  uint64_t v15 = *(void *)(v1 + v5);
  MEMORY[0x1F4188790](v14);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v15 + 24));
  sub_1D433A560((void *)(v15 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v15 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v69 = MEMORY[0x1E4FBB390];
  LOBYTE(v68) = 1;
  uint64_t v16 = *(void *)(v1 + v5);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v16 + 24));
  sub_1D433313C((void *)(v16 + 16), v66);
  os_unfair_lock_unlock((os_unfair_lock_t)(v16 + 24));
  unint64_t v17 = *(void *)&v66[0];
  swift_release();
  unint64_t v67 = v17;
  if (v69)
  {
    sub_1D42C5494(&v68, v66);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v67 = 0x8000000000000000;
    sub_1D42C4E78(v66, 0x65646F4D74736F6CLL, 0xEF64656C62616E45, v18);
    uint64_t v19 = swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D429D4F4((uint64_t)&v68);
    sub_1D43FC5A4(0x65646F4D74736F6CLL, 0xEF64656C62616E45, v66);
    uint64_t v19 = sub_1D429D4F4((uint64_t)v66);
  }
  uint64_t v20 = *(void *)(v1 + v5);
  MEMORY[0x1F4188790](v19);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v20 + 24));
  sub_1D433A560((void *)(v20 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v20 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  char v21 = *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isTrackingEnabled);
  uint64_t v69 = MEMORY[0x1E4FBB390];
  LOBYTE(v68) = v21;
  uint64_t v22 = *(void *)(v1 + v5);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v22 + 24));
  sub_1D433313C((void *)(v22 + 16), v66);
  os_unfair_lock_unlock((os_unfair_lock_t)(v22 + 24));
  unint64_t v23 = *(void *)&v66[0];
  swift_release();
  unint64_t v67 = v23;
  if (v69)
  {
    sub_1D42C5494(&v68, v66);
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v67 = 0x8000000000000000;
    sub_1D42C4E78(v66, 0x676E696B63617274, 0xEF64656C62616E45, v24);
    uint64_t v25 = swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D429D4F4((uint64_t)&v68);
    sub_1D43FC5A4(0x676E696B63617274, 0xEF64656C62616E45, v66);
    uint64_t v25 = sub_1D429D4F4((uint64_t)v66);
  }
  uint64_t v26 = *(void *)(v1 + v5);
  MEMORY[0x1F4188790](v25);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
  sub_1D433A560((void *)(v26 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v69 = MEMORY[0x1E4FBB390];
  LOBYTE(v68) = 0;
  uint64_t v27 = *(void *)(v1 + v5);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v27 + 24));
  sub_1D433313C((void *)(v27 + 16), v66);
  os_unfair_lock_unlock((os_unfair_lock_t)(v27 + 24));
  unint64_t v28 = *(void *)&v66[0];
  swift_release();
  unint64_t v67 = v28;
  if (v69)
  {
    sub_1D42C5494(&v68, v66);
    char v29 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v67 = 0x8000000000000000;
    sub_1D42C4E78(v66, 0x646E756F73, 0xE500000000000000, v29);
    uint64_t v30 = swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D429D4F4((uint64_t)&v68);
    sub_1D43FC5A4(0x646E756F73, 0xE500000000000000, v66);
    uint64_t v30 = sub_1D429D4F4((uint64_t)v66);
  }
  uint64_t v31 = *(void *)(v1 + v5);
  MEMORY[0x1F4188790](v30);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v31 + 24));
  sub_1D433A560((void *)(v31 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v31 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  char v32 = *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_isUserTextEnabled);
  uint64_t v69 = MEMORY[0x1E4FBB390];
  LOBYTE(v68) = v32;
  uint64_t v33 = *(void *)(v1 + v5);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v33 + 24));
  sub_1D433313C((void *)(v33 + 16), v66);
  os_unfair_lock_unlock((os_unfair_lock_t)(v33 + 24));
  unint64_t v34 = *(void *)&v66[0];
  swift_release();
  unint64_t v67 = v34;
  if (v69)
  {
    sub_1D42C5494(&v68, v66);
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v67 = 0x8000000000000000;
    sub_1D42C4E78(v66, 0x7478655472657375, 0xE800000000000000, v35);
    uint64_t v36 = swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D429D4F4((uint64_t)&v68);
    sub_1D43FC5A4(0x7478655472657375, 0xE800000000000000, v66);
    uint64_t v36 = sub_1D429D4F4((uint64_t)v66);
  }
  uint64_t v37 = *(void *)(v1 + v5);
  MEMORY[0x1F4188790](v36);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v37 + 24));
  sub_1D433A560((void *)(v37 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v37 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_message + 8);
  if (v38)
  {
    uint64_t v39 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_message);
    uint64_t v69 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v68 = v39;
    *((void *)&v68 + 1) = v38;
    uint64_t v40 = *(void *)(v1 + v5);
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v40 + 24));
    sub_1D433313C((void *)(v40 + 16), v66);
    os_unfair_lock_unlock((os_unfair_lock_t)(v40 + 24));
    unint64_t v41 = *(void *)&v66[0];
    swift_release();
    unint64_t v67 = v41;
    if (v69)
    {
      sub_1D42C5494(&v68, v66);
      char v42 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v67 = 0x8000000000000000;
      sub_1D42C4E78(v66, 1954047348, 0xE400000000000000, v42);
      uint64_t v43 = swift_bridgeObjectRelease();
    }
    else
    {
      sub_1D429D4F4((uint64_t)&v68);
      sub_1D43FC5A4(1954047348, 0xE400000000000000, v66);
      uint64_t v43 = sub_1D429D4F4((uint64_t)v66);
    }
    uint64_t v44 = *(void *)(v1 + v5);
    MEMORY[0x1F4188790](v43);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v44 + 24));
    sub_1D433A560((void *)(v44 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v44 + 24));
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v45 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_phoneNumber + 8);
  if (v45)
  {
    uint64_t v46 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_phoneNumber);
    uint64_t v69 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v68 = v46;
    *((void *)&v68 + 1) = v45;
    uint64_t v47 = *(void *)(v1 + v5);
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v47 + 24));
    sub_1D433313C((void *)(v47 + 16), v66);
    os_unfair_lock_unlock((os_unfair_lock_t)(v47 + 24));
    unint64_t v48 = *(void *)&v66[0];
    swift_release();
    sub_1D42C5494(&v68, v66);
    char v49 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v67 = v48;
    sub_1D42C4E78(v66, 0x72624E72656E776FLL, 0xE800000000000000, v49);
    uint64_t v50 = swift_bridgeObjectRelease();
    uint64_t v51 = *(void *)(v1 + v5);
    MEMORY[0x1F4188790](v50);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v51 + 24));
    sub_1D433A560((void *)(v51 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v51 + 24));
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v52 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_passcode + 8);
  if (v52)
  {
    uint64_t v53 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_passcode);
    uint64_t v69 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v68 = v53;
    *((void *)&v68 + 1) = v52;
    uint64_t v54 = *(void *)(v1 + v5);
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v54 + 24));
    sub_1D433313C((void *)(v54 + 16), v66);
    os_unfair_lock_unlock((os_unfair_lock_t)(v54 + 24));
    unint64_t v55 = *(void *)&v66[0];
    swift_release();
    sub_1D42C5494(&v68, v66);
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v67 = v55;
    sub_1D42C4E78(v66, 0x65646F6373736170, 0xE800000000000000, v56);
    uint64_t v57 = swift_bridgeObjectRelease();
    uint64_t v58 = *(void *)(v1 + v5);
    MEMORY[0x1F4188790](v57);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v58 + 24));
    sub_1D433A560((void *)(v58 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v58 + 24));
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_email + 8);
  if (result)
  {
    uint64_t v60 = *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore18FMIPLostModeAction_email);
    uint64_t v69 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v68 = v60;
    *((void *)&v68 + 1) = result;
    uint64_t v61 = *(void *)(v1 + v5);
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v61 + 24));
    sub_1D433313C((void *)(v61 + 16), v66);
    os_unfair_lock_unlock((os_unfair_lock_t)(v61 + 24));
    unint64_t v62 = *(void *)&v66[0];
    swift_release();
    sub_1D42C5494(&v68, v66);
    char v63 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v67 = v62;
    sub_1D42C4E78(v66, 0x6C69616D65, 0xE500000000000000, v63);
    uint64_t v64 = swift_bridgeObjectRelease();
    uint64_t v65 = *(void *)(v1 + v5);
    MEMORY[0x1F4188790](v64);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v65 + 24));
    sub_1D433A560((void *)(v65 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v65 + 24));
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D43F8044()
{
  return swift_release();
}

uint64_t sub_1D43F8054()
{
  sub_1D427B074();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43F80C8()
{
  return type metadata accessor for FMIPLostModeRequest();
}

void sub_1D43F80D0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13[0] = *v6;
    *uint64_t v6 = 0x8000000000000000;
    sub_1D42C158C(a1 & 0xFF010101, a2, a4, a5, isUniquelyReferenced_nonNull_native, *(double *)&a3);
    *uint64_t v6 = v13[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D43FC6C0(a4, a5, (uint64_t)v13);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D43F81AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1D42D5DA0(&qword_1EA6CA4C8);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4D0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_1D4276C3C(a1, &qword_1EA6CA4C8);
    sub_1D43FC7F0(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1D4276C3C((uint64_t)v10, &qword_1EA6CA4C8);
  }
  else
  {
    sub_1D4276C98(a1, (uint64_t)v13, (uint64_t *)&unk_1EA6CA4D0);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1D43D7630((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D43F8374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1D42D5DA0(&qword_1EA6CB0E8);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMIPMonitoredDevice(0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_1D4276C3C(a1, &qword_1EA6CB0E8);
    sub_1D43FCA90(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1D4276C3C((uint64_t)v10, &qword_1EA6CB0E8);
  }
  else
  {
    sub_1D42BB5E0(a1, (uint64_t)v13, type metadata accessor for FMIPMonitoredDevice);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1D43D78F0((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

FMIPCore::FMIPConfigValue_optional __swiftcall FMIPConfigValue.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1D446A518();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1D43F85B0(char *a1, char *a2)
{
  return sub_1D44150F0(*a1, *a2);
}

uint64_t sub_1D43F85BC()
{
  return sub_1D43F3E88();
}

uint64_t sub_1D43F85C4()
{
  return sub_1D445D698();
}

uint64_t sub_1D43F85CC()
{
  return sub_1D43F43E8();
}

FMIPCore::FMIPConfigValue_optional sub_1D43F85D4(Swift::String *a1)
{
  return FMIPConfigValue.init(rawValue:)(*a1);
}

uint64_t FMIPGlobalConfig<A>(_:fallback:)(uint64_t a1)
{
  if (qword_1EA6C8FD8 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  return sub_1D446A0A8();
}

uint64_t sub_1D43F86AC(unsigned __int8 a1, uint64_t a2)
{
  if (qword_1EA6C8FE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = qword_1EA6E49C8;
  if (*(void *)(qword_1EA6E49C8 + 16) && (unint64_t v5 = sub_1D42A3758(a1), (v6 & 1) != 0)) {
    sub_1D42CBAC0(*(void *)(v4 + 56) + 32 * v5, (uint64_t)v8);
  }
  else {
    memset(v8, 0, sizeof(v8));
  }
  swift_endAccess();
  sub_1D42D5DA0(&qword_1EBD80050);
  if (swift_dynamicCast()) {
    return v9;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1D43F87C0@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1D446A168();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v19 - v10;
  if (qword_1EA6C8FE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v12 = qword_1EA6E49C8;
  if (*(void *)(qword_1EA6E49C8 + 16) && (unint64_t v13 = sub_1D42A3758(a1), (v14 & 1) != 0)) {
    sub_1D42CBAC0(*(void *)(v12 + 56) + 32 * v13, (uint64_t)v19);
  }
  else {
    memset(v19, 0, sizeof(v19));
  }
  swift_endAccess();
  sub_1D42D5DA0(&qword_1EBD80050);
  char v15 = swift_dynamicCast();
  uint64_t v16 = *(void *)(a3 - 8);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if (v15)
  {
    v17(v11, 0, 1, a3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a4, v11, a3);
  }
  else
  {
    v17(v11, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a4, a2, a3);
  }
}

uint64_t sub_1D43F8A04@<X0>(uint64_t a1@<X8>)
{
  return sub_1D43F87C0(*(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16), a1);
}

uint64_t sub_1D43F8A28(unsigned __int8 a1, uint64_t a2)
{
  if (qword_1EA6C8FE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = qword_1EA6E49C8;
  if (*(void *)(qword_1EA6E49C8 + 16) && (unint64_t v5 = sub_1D42A3758(a1), (v6 & 1) != 0)) {
    sub_1D42CBAC0(*(void *)(v4 + 56) + 32 * v5, (uint64_t)v8);
  }
  else {
    memset(v8, 0, sizeof(v8));
  }
  swift_endAccess();
  sub_1D42D5DA0(&qword_1EBD80050);
  if (swift_dynamicCast()) {
    return v9;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t FMIPNoItemsKBArticleLink.getter(uint64_t a1)
{
  if (qword_1EA6C8FD8 != -1) {
    a1 = swift_once();
  }
  MEMORY[0x1F4188790](a1);
  sub_1D446A0A8();
  uint64_t v1 = self;
  uint64_t v2 = (void *)sub_1D4469B08();
  unint64_t v3 = (void *)sub_1D4469B08();
  id v4 = objc_msgSend(v1, sel_stringForKey_inDomain_, v2, v3);

  if (v4)
  {
    uint64_t v5 = sub_1D4469B38();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  uint64_t v8 = (void *)sub_1D4469B08();
  uint64_t v9 = (void *)sub_1D4469B08();
  id v10 = objc_msgSend(v1, sel_stringForKey_inDomain_, v8, v9);

  if (!v10)
  {
    if (!v7) {
      return v15;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v5;
  }
  uint64_t v11 = sub_1D4469B38();
  uint64_t v13 = v12;

  if (v7) {
    goto LABEL_11;
  }
  if (!v13) {
    return v15;
  }
  swift_bridgeObjectRelease();
  return v11;
}

void sub_1D43F8D74()
{
  swift_bridgeObjectRelease();
  swift_release();

  sub_1D42F9538(v0 + qword_1EBD7FC80);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_1EBD831E8;
  uint64_t v2 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  unint64_t v3 = *(void **)(v0 + qword_1EBD7E7B8);
}

uint64_t sub_1D43F8E64()
{
  uint64_t v1 = v0;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  unint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v23 = v22;
    uint64_t v6 = *(void *)(v1 + qword_1EBD7E7A8);
    unint64_t v7 = *(void *)(v1 + qword_1EBD7E7A8 + 8);
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1D427A0D0(0xCuLL, v6, v7);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x1D9445EF0](v8, v10, v12, v14);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    sub_1D42CB9EC(v15, v17, &v23);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPServerInteractionController<%s>.deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v22, -1, -1);
    MEMORY[0x1D9447730](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v18 = sub_1D4469828();
  swift_bridgeObjectRelease();
  swift_release();

  sub_1D42F9538(v18 + qword_1EBD7FC80);
  swift_bridgeObjectRelease();
  uint64_t v19 = v18 + qword_1EBD831E8;
  uint64_t v20 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  swift_bridgeObjectRelease();

  return v18;
}

uint64_t sub_1D43F9154()
{
  sub_1D43F8E64();
  return swift_deallocClassInstance();
}

uint64_t sub_1D43F91B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[26] = v13;
  v8[27] = v14;
  v8[24] = a7;
  v8[25] = a8;
  v8[22] = a5;
  v8[23] = a6;
  v8[21] = a4;
  uint64_t v9 = sub_1D4469958();
  v8[28] = v9;
  v8[29] = *(void *)(v9 - 8);
  v8[30] = swift_task_alloc();
  uint64_t v10 = sub_1D44699B8();
  v8[31] = v10;
  unsigned char v8[32] = *(void *)(v10 - 8);
  v8[33] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D43F92E8, 0, 0);
}

uint64_t sub_1D43F92E8()
{
  uint64_t v51 = v0;
  sub_1D4469168();
  swift_allocObject();
  sub_1D4469158();
  swift_getWitnessTable();
  sub_1D4469148();
  swift_release();
  uint64_t v1 = (uint64_t *)v0[17];
  v0[34] = v1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  v0[35] = sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  unint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v50 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    v0[19] = v1;
    swift_retain();
    uint64_t v7 = sub_1D4469B68();
    v0[20] = sub_1D42CB9EC(v7, v8, &v50);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPServerInteractionController: received response?: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v6, -1, -1);
    MEMORY[0x1D9447730](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v9 = swift_conformsToProtocol2();
  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v9) {
    uint64_t v11 = v1;
  }
  else {
    uint64_t v11 = 0;
  }
  v0[36] = v11;
  v0[37] = v10;
  if (v11)
  {
    uint64_t v12 = *v11;
    v0[38] = *v11;
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 16);
    swift_retain();
    uint64_t v14 = v13(v12, v10);
    v0[39] = v14;
    if (v14)
    {
      uint64_t v15 = v14;
      unint64_t v16 = sub_1D44698F8();
      os_log_type_t v17 = sub_1D446A038();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v18 = 0;
        _os_log_impl(&dword_1D4271000, v16, v17, "FMIPServerInteractionController: received devices containing response, shifting the devices", v18, 2u);
        MEMORY[0x1D9447730](v18, -1, -1);
      }

      type metadata accessor for FMLocationShifter();
      swift_allocObject();
      uint64_t v19 = FMLocationShifter.init()();
      v0[40] = v19;
      uint64_t v20 = swift_task_alloc();
      v0[41] = v20;
      *(void *)(v20 + 16) = v19;
      *(void *)(v20 + 24) = v15;
      char v21 = (void *)swift_task_alloc();
      v0[42] = v21;
      uint64_t v22 = sub_1D42D5DA0(&qword_1EBD7D8C0);
      *char v21 = v0;
      v21[1] = sub_1D43F9CC4;
      return MEMORY[0x1F41880D8](v0 + 18, 0, 0, 0x6564287466696873, 0xEF293A7365636976, sub_1D4406D28, v20, v22);
    }
    swift_release();
  }
  uint64_t v23 = v0[34];
  uint64_t v24 = swift_retain();
  sub_1D4280FAC(v24);
  swift_release();
  uint64_t v25 = *(void *)(v23 + 32);
  if (v25)
  {
    uint64_t v26 = MEMORY[0x1D9447840](v0[23] + qword_1EBD7FC80);
    if (v26)
    {
      uint64_t v27 = v26;
      swift_retain();
      swift_retain();
      swift_retain();
      unint64_t v28 = sub_1D44698F8();
      os_log_type_t v29 = sub_1D446A038();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl(&dword_1D4271000, v28, v29, "FMIPManager: didReceive server alert", v30, 2u);
        MEMORY[0x1D9447730](v30, -1, -1);
      }

      uint64_t v31 = v27 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
      swift_beginAccess();
      if (MEMORY[0x1D9447840](v31))
      {
        uint64_t v32 = *(void *)(v31 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 72))(v27, v25, ObjectType, v32);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  uint64_t v34 = v0[33];
  uint64_t v35 = v0[34];
  uint64_t v36 = v0[30];
  uint64_t v48 = v0[32];
  uint64_t v49 = v0[31];
  uint64_t v37 = v0[28];
  uint64_t v38 = v0[29];
  uint64_t v39 = v0[27];
  uint64_t v40 = (void (*)(uint64_t, void))v0[24];
  uint64_t v41 = v0[23];
  uint64_t v42 = swift_retain();
  v40(v42, 0);
  swift_release();
  uint64_t v47 = *(void *)(v41 + qword_1EBD7E7B0);
  uint64_t v43 = (void *)swift_allocObject();
  v43[2] = v39;
  v43[3] = v35;
  v43[4] = v41;
  v0[6] = sub_1D4406D1C;
  v0[7] = v43;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D42BD950;
  v0[5] = &unk_1F2C0F9A0;
  uint64_t v44 = _Block_copy(v0 + 2);
  swift_retain();
  swift_retain();
  sub_1D4469988();
  v0[16] = MEMORY[0x1E4FBC860];
  sub_1D42C626C((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v34, v36, v44);
  _Block_release(v44);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v34, v49);
  swift_release();
  objc_msgSend((id)v0[26], sel_signal, v47);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = (uint64_t (*)(void))v0[1];
  return v45();
}

uint64_t sub_1D43F9CC4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D43F9DDC, 0, 0);
}

uint64_t sub_1D43F9DDC()
{
  uint64_t v2 = v0[37];
  uint64_t v1 = v0[38];
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(void, uint64_t, uint64_t))(v2 + 24))(v0[18], v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0[34];
  uint64_t v4 = swift_retain();
  sub_1D4280FAC(v4);
  swift_release();
  uint64_t v5 = *(void *)(v3 + 32);
  if (v5)
  {
    uint64_t v6 = MEMORY[0x1D9447840](v0[23] + qword_1EBD7FC80);
    if (v6)
    {
      uint64_t v7 = v6;
      swift_retain();
      swift_retain();
      swift_retain();
      unint64_t v8 = sub_1D44698F8();
      os_log_type_t v9 = sub_1D446A038();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl(&dword_1D4271000, v8, v9, "FMIPManager: didReceive server alert", v10, 2u);
        MEMORY[0x1D9447730](v10, -1, -1);
      }

      uint64_t v11 = v7 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
      swift_beginAccess();
      if (MEMORY[0x1D9447840](v11))
      {
        uint64_t v12 = *(void *)(v11 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 72))(v7, v5, ObjectType, v12);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  uint64_t v14 = v0[33];
  uint64_t v15 = v0[34];
  uint64_t v16 = v0[30];
  uint64_t v27 = v0[32];
  uint64_t v28 = v0[31];
  uint64_t v17 = v0[28];
  uint64_t v26 = v0[29];
  uint64_t v18 = v0[27];
  uint64_t v19 = (void (*)(uint64_t, void))v0[24];
  uint64_t v20 = v0[23];
  uint64_t v21 = swift_retain();
  v19(v21, 0);
  swift_release();
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = v18;
  v22[3] = v15;
  v22[4] = v20;
  v0[6] = sub_1D4406D1C;
  v0[7] = v22;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D42BD950;
  v0[5] = &unk_1F2C0F9A0;
  uint64_t v23 = _Block_copy(v0 + 2);
  swift_retain();
  swift_retain();
  sub_1D4469988();
  v0[16] = MEMORY[0x1E4FBC860];
  sub_1D42C626C((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v14, v16, v23);
  _Block_release(v23);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v14, v28);
  swift_release();
  objc_msgSend((id)v0[26], sel_signal);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

uint64_t sub_1D43FA204()
{
  type metadata accessor for FMIPRefreshClientResponse();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    uint64_t v1 = result;
    swift_retain();
    sub_1D43FAD48(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D43FA280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a3;
  uint64_t v36 = a2;
  uint64_t v4 = sub_1D4469958();
  uint64_t v43 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v41 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1D44699B8();
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v39 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPDevice();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v11 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v33 - v12;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D4469928();
  sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
  sub_1D42D2308(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v15 = sub_1D44698F8();
  os_log_type_t v16 = sub_1D446A038();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v35 = v4;
    uint64_t v18 = v17;
    uint64_t v33 = swift_slowAlloc();
    aBlock[0] = v33;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v44 = sub_1D42CB9EC(0x6E756F5379616C70, 0xE900000000000064, aBlock);
    uint64_t v34 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1D446A188();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v19 = FMIPDevice.debugDescription.getter();
    uint64_t v44 = sub_1D42CB9EC(v19, v20, aBlock);
    uint64_t v11 = v34;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D4402230((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    _os_log_impl(&dword_1D4271000, v15, v16, "FMIPServerInteractionController: startMonitoring: action: %s, device: %s", (uint8_t *)v18, 0x16u);
    uint64_t v21 = v33;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v21, -1, -1);
    uint64_t v22 = v18;
    uint64_t v4 = v35;
    MEMORY[0x1D9447730](v22, -1, -1);
  }
  else
  {
    sub_1D4402230((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  }

  uint64_t v23 = v38;
  sub_1D42D2308(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  unint64_t v24 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v25 = (v9 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  sub_1D42BB5E0((uint64_t)v11, v26 + v24, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v27 = (void *)(v26 + v25);
  uint64_t v28 = v37;
  *uint64_t v27 = v36;
  v27[1] = v28;
  *(void *)(v26 + ((v25 + 23) & 0xFFFFFFFFFFFFFFF8)) = v23;
  aBlock[4] = (uint64_t)sub_1D4406A0C;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D42BD950;
  aBlock[3] = (uint64_t)&unk_1F2C0F8B0;
  uint64_t v29 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  uint64_t v30 = v39;
  sub_1D4469988();
  uint64_t v44 = MEMORY[0x1E4FBC860];
  sub_1D42C626C((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  uint64_t v31 = v41;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v30, v31, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v4);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v42);
  return swift_release();
}

uint64_t sub_1D43FA84C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D42D5DA0(&qword_1EA6CB0E8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMIPMonitoredDevice(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42D2308((uint64_t)a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v13 = &v12[*(int *)(v9 + 24)];
  *(void *)uint64_t v13 = a2;
  *((void *)v13 + 1) = a3;
  uint64_t v14 = *a1;
  uint64_t v15 = a1[1];
  sub_1D42D2308((uint64_t)v12, (uint64_t)v8, type metadata accessor for FMIPMonitoredDevice);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  swift_beginAccess();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D43F8374((uint64_t)v8, v14, v15);
  swift_endAccess();
  return sub_1D4402230((uint64_t)v12, type metadata accessor for FMIPMonitoredDevice);
}

uint64_t sub_1D43FAA2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6CB0E8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  uint64_t v12 = (uint64_t *)(a1 + qword_1EBD83198);
  swift_beginAccess();
  uint64_t v13 = *v12;
  if (!*(void *)(*v12 + 16))
  {
    uint64_t v21 = type metadata accessor for FMIPMonitoredDevice(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 1, 1, v21);
    return sub_1D4276C3C((uint64_t)v9, &qword_1EA6CB0E8);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1D42C4FCC(v10, v11);
  if (v15)
  {
    unint64_t v16 = v14;
    uint64_t v17 = *(void *)(v13 + 56);
    uint64_t v18 = type metadata accessor for FMIPMonitoredDevice(0);
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v27 = v7;
    uint64_t v20 = v19;
    sub_1D42D2308(v17 + *(void *)(v19 + 72) * v16, (uint64_t)v9, type metadata accessor for FMIPMonitoredDevice);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v9, 0, 1, v18);
    uint64_t v7 = v27;
  }
  else
  {
    uint64_t v18 = type metadata accessor for FMIPMonitoredDevice(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v9, 1, 1, v18);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for FMIPMonitoredDevice(0);
  uint64_t v22 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v9, 1, v18) == 1) {
    return sub_1D4276C3C((uint64_t)v9, &qword_1EA6CB0E8);
  }
  sub_1D4276C3C((uint64_t)v9, &qword_1EA6CB0E8);
  uint64_t v25 = *a2;
  uint64_t v24 = a2[1];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v7, 1, 1, v18);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1D43F8374((uint64_t)v7, v25, v24);
  return swift_endAccess();
}

void sub_1D43FAD48(uint64_t a1)
{
  uint64_t v78 = sub_1D4469958();
  uint64_t v80 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v77 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1D44699B8();
  uint64_t v72 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  BOOL v75 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6CB0E8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPMonitoredDevice(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v74 = (uint64_t)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v82 = (uint64_t)&v58 - v11;
  uint64_t v12 = type metadata accessor for FMIPDevice();
  uint64_t v84 = *(void *)(v12 - 8);
  uint64_t v13 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v84 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v73 = (uint64_t)&v58 - (((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (uint64_t *)((char *)&v58 - v15);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1D4469928();
  sub_1D42D7FAC(v17, (uint64_t)qword_1EBD83228);
  uint64_t v18 = sub_1D44698F8();
  os_log_type_t v19 = sub_1D446A038();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v83 = v13;
    uint64_t v21 = v9;
    uint64_t v22 = a1;
    uint64_t v23 = v20;
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_1D4271000, v18, v19, "FMIPServerInteractionController: evaluating devices for monitoring", v20, 2u);
    uint64_t v24 = v23;
    a1 = v22;
    uint64_t v9 = v21;
    uint64_t v13 = v83;
    MEMORY[0x1D9447730](v24, -1, -1);
  }

  uint64_t v25 = (uint64_t *)(v79 + qword_1EBD83198);
  swift_beginAccess();
  if (*(void *)(*v25 + 16))
  {
    uint64_t v26 = *(void *)(a1 + 56);
    if (v26)
    {
      uint64_t v27 = *(void *)(v26 + 16);
      if (!v27) {
        return;
      }
      uint64_t v66 = qword_1EBD7FC68;
      uint64_t v28 = *(unsigned __int8 *)(v84 + 80);
      uint64_t v64 = ~v28;
      uint64_t v29 = v26 + ((v28 + 32) & ~v28);
      uint64_t v30 = *(void *)(v84 + 72);
      uint64_t v83 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      uint64_t v84 = v30;
      uint64_t v81 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v65 = v28;
      uint64_t v63 = v9 + v28;
      unint64_t v62 = (char *)v13 + 7;
      uint64_t v61 = v87;
      uint64_t v60 = (void (**)(char *, uint64_t))(v80 + 8);
      uint64_t v59 = (void (**)(char *, uint64_t))(v72 + 8);
      uint64_t v72 = v26;
      swift_bridgeObjectRetain_n();
      uint64_t v71 = v7;
      uint64_t v70 = v8;
      uint64_t v69 = v6;
      long long v68 = v16;
      unint64_t v67 = v25;
      while (1)
      {
        sub_1D42D2308(v29, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        uint64_t v48 = *v25;
        if (!*(void *)(*v25 + 16)) {
          break;
        }
        uint64_t v50 = *v16;
        uint64_t v49 = v16[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v51 = sub_1D42C4FCC(v50, v49);
        if (v52)
        {
          sub_1D42D2308(*(void *)(v48 + 56) + *(void *)(v8 + 72) * v51, (uint64_t)v6, type metadata accessor for FMIPMonitoredDevice);
          uint64_t v53 = 0;
        }
        else
        {
          uint64_t v53 = 1;
        }
        (*v83)(v6, v53, 1, v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((*v81)(v6, 1, v7) == 1) {
          goto LABEL_17;
        }
        uint64_t v31 = v82;
        sub_1D42BB5E0((uint64_t)v6, v82, type metadata accessor for FMIPMonitoredDevice);
        uint64_t v80 = *(void *)(v79 + v66);
        uint64_t v32 = v74;
        sub_1D42D2308(v31, v74, type metadata accessor for FMIPMonitoredDevice);
        uint64_t v33 = (uint64_t)v16;
        uint64_t v34 = v73;
        sub_1D42D2308(v33, v73, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        unint64_t v35 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
        unint64_t v36 = (v63 + v35) & v64;
        unint64_t v37 = (unint64_t)&v62[v36] & 0xFFFFFFFFFFFFFFF8;
        uint64_t v38 = swift_allocObject();
        uint64_t v39 = v32;
        uint64_t v6 = v69;
        sub_1D42BB5E0(v39, v38 + v35, type metadata accessor for FMIPMonitoredDevice);
        uint64_t v40 = v34;
        unint64_t v16 = v68;
        sub_1D42BB5E0(v40, v38 + v36, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        *(void *)(v38 + v37) = v72;
        v87[2] = sub_1D44061D4;
        v87[3] = v38;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        v87[0] = sub_1D42BD950;
        v87[1] = &unk_1F2C0F860;
        uint64_t v41 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        uint64_t v42 = v75;
        sub_1D4469988();
        uint64_t v85 = MEMORY[0x1E4FBC860];
        sub_1D42C626C((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
        sub_1D42D5DA0(&qword_1EBD7FD78);
        sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
        uint64_t v44 = v77;
        uint64_t v43 = v78;
        sub_1D446A1F8();
        MEMORY[0x1D9446420](0, v42, v44, v41);
        uint64_t v45 = v41;
        uint64_t v7 = v71;
        _Block_release(v45);
        uint64_t v46 = v44;
        uint64_t v8 = v70;
        (*v60)(v46, v43);
        uint64_t v47 = v42;
        uint64_t v25 = v67;
        (*v59)(v47, v76);
        sub_1D4402230(v82, type metadata accessor for FMIPMonitoredDevice);
        sub_1D4402230((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
        swift_release();
LABEL_10:
        v29 += v84;
        if (!--v27)
        {
          swift_bridgeObjectRelease_n();
          return;
        }
      }
      (*v83)(v6, 1, 1, v7);
LABEL_17:
      sub_1D4402230((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      sub_1D4276C3C((uint64_t)v6, &qword_1EA6CB0E8);
      goto LABEL_10;
    }
    uint64_t v54 = sub_1D44698F8();
    os_log_type_t v55 = sub_1D446A038();
    if (os_log_type_enabled(v54, v55))
    {
      char v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v56 = 0;
      uint64_t v57 = "FMIPServerInteractionController: no devices detected, bypassing";
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v54 = sub_1D44698F8();
    os_log_type_t v55 = sub_1D446A038();
    if (os_log_type_enabled(v54, v55))
    {
      char v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v56 = 0;
      uint64_t v57 = "FMIPServerInteractionController: nothing to monitor, bypassing";
LABEL_23:
      _os_log_impl(&dword_1D4271000, v54, v55, v57, v56, 2u);
      MEMORY[0x1D9447730](v56, -1, -1);
    }
  }
}

uint64_t sub_1D43FB6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EBD83228);
  uint64_t v7 = sub_1D44698F8();
  os_log_type_t v8 = sub_1D446A038();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1D4271000, v7, v8, "FMIPServerInteractionController: device monitored so calling callback", v9, 2u);
    MEMORY[0x1D9447730](v9, -1, -1);
  }

  uint64_t v10 = type metadata accessor for FMIPMonitoredDevice(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + *(int *)(v10 + 24)))(a2, a3);
}

uint64_t sub_1D43FB7F4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D4469618();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(void *)(v2 + qword_1EBD7FC70);
  if (v8)
  {
    *(void *)(a1 + qword_1EBD7CC90) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1D433338C();
  }
  uint64_t v9 = v2 + qword_1EBD831E8;
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  uint64_t v10 = a1 + qword_1EBD83000;
  swift_beginAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 24))(v10, v7, v4);
  swift_endAccess();
  sub_1D42C2E98();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1D43FB984(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v87 = a2;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EBD7E918);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v83 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v82 = (char *)&v77 - v8;
  uint64_t v90 = *a1;
  uint64_t v89 = type metadata accessor for FMIPInitClientRequest();
  type metadata accessor for FMLocalize();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v10 = self;
  id v11 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v12 = sub_1D44692D8();
  uint64_t v14 = v13;

  id v15 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v85 = sub_1D44692D8();
  uint64_t v88 = v16;

  id v80 = v10;
  uint64_t v81 = ObjCClassFromMetadata;
  id v17 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v18 = sub_1D44692D8();
  uint64_t v20 = v19;

  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1D4469928();
  uint64_t v22 = sub_1D42D7FAC(v21, (uint64_t)qword_1EBD83228);
  swift_retain();
  uint64_t v23 = sub_1D44698F8();
  os_log_type_t v24 = sub_1D446A038();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v86 = v12;
  uint64_t v84 = v18;
  if (v25)
  {
    uint64_t v27 = v89;
    uint64_t v26 = v90;
    BOOL v28 = v89 == v90;
    uint64_t v29 = (_DWORD *)swift_slowAlloc();
    uint64_t v79 = v22;
    uint64_t v30 = v20;
    uint64_t v31 = v3;
    uint64_t v32 = v29;
    *uint64_t v29 = 67109376;
    v91[0] = v28;
    sub_1D446A188();
    *((_WORD *)v32 + 4) = 1024;
    v91[0] = *(unsigned __int8 *)(v31 + qword_1EBD831F0);
    sub_1D446A188();
    swift_release();
    _os_log_impl(&dword_1D4271000, v23, v24, "FMIPServerInteractionController: createNetworkAlertIfNeeded: %{BOOL}d %{BOOL}d", (uint8_t *)v32, 0xEu);
    uint64_t v33 = v32;
    uint64_t v3 = v31;
    uint64_t v20 = v30;
    MEMORY[0x1D9447730](v33, -1, -1);

    if (v27 != v26) {
      goto LABEL_8;
    }
  }
  else
  {

    swift_release();
    if (v89 != v90) {
      goto LABEL_8;
    }
  }
  if (*(unsigned char *)(v3 + qword_1EBD831F0))
  {
LABEL_8:
    if (v87)
    {
      uint64_t v79 = v3;
      uint64_t v34 = (void *)sub_1D44693C8();
      id v35 = objc_msgSend(v34, sel_domain);
      uint64_t v36 = sub_1D4469B38();
      uint64_t v38 = v37;

      if (v36 == sub_1D4469B38() && v38 == v39)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_13;
      }
      char v40 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v40)
      {
LABEL_13:
        if (v89 == v90
          || objc_msgSend(v34, sel_code) == (id)-1001
          || objc_msgSend(v34, sel_code) == (id)-999
          || objc_msgSend(v34, sel_code) == (id)-1005)
        {

          swift_bridgeObjectRelease();
LABEL_26:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
        swift_getErrorValue();
        BOOL v50 = sub_1D43A56F0(v92);
        id v78 = v34;
        if (v50)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v51 = v80;
          uint64_t v52 = v81;
          id v53 = objc_msgSend(v80, sel_bundleForClass_, v81);
          uint64_t v86 = sub_1D44692D8();
          uint64_t v14 = v54;

          id v55 = objc_msgSend(v51, sel_bundleForClass_, v52);
          uint64_t v85 = sub_1D44692D8();
          uint64_t v88 = v56;

          id v57 = objc_msgSend(v51, sel_bundleForClass_, v52);
          uint64_t v84 = sub_1D44692D8();
          uint64_t v59 = v58;
        }
        else
        {
          uint64_t v59 = v20;
        }
        uint64_t v60 = sub_1D4469498();
        uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56);
        uint64_t v62 = (uint64_t)v82;
        v61(v82, 1, 1, v60);
        uint64_t v63 = (uint64_t)v83;
        uint64_t v64 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v61)(v83, 1, 1, v60);
        if ((*(uint64_t (**)(uint64_t))(qword_1EBD83008 + *a1 + 200))(v64)) {
          char v65 = 1;
        }
        else {
          char v65 = 2;
        }
        type metadata accessor for FMIPAlert();
        uint64_t v66 = (void *)swift_allocObject();
        _OWORD v66[2] = v86;
        v66[3] = v14;
        uint64_t v67 = v88;
        v66[4] = v85;
        v66[5] = v67;
        v66[6] = v84;
        v66[7] = v59;
        long long v68 = (void *)((char *)v66 + OBJC_IVAR____TtC8FMIPCore9FMIPAlert_cancelButtonLabel);
        *long long v68 = 0;
        v68[1] = 0;
        sub_1D4276C98(v62, (uint64_t)v66 + OBJC_IVAR____TtC8FMIPCore9FMIPAlert_okButtonURL, &qword_1EBD7E918);
        sub_1D4276C98(v63, (uint64_t)v66 + OBJC_IVAR____TtC8FMIPCore9FMIPAlert_cancelButtonURL, &qword_1EBD7E918);
        *((unsigned char *)v66 + OBJC_IVAR____TtC8FMIPCore9FMIPAlert_type) = v65;
        uint64_t v69 = MEMORY[0x1D9447840](v79 + qword_1EBD7FC80);
        if (v69)
        {
          uint64_t v70 = v69;
          swift_retain();
          uint64_t v71 = sub_1D44698F8();
          os_log_type_t v72 = sub_1D446A038();
          if (os_log_type_enabled(v71, v72))
          {
            uint64_t v73 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v73 = 0;
            _os_log_impl(&dword_1D4271000, v71, v72, "FMIPManager: didReceive server alert", v73, 2u);
            MEMORY[0x1D9447730](v73, -1, -1);
          }

          uint64_t v74 = v70 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
          swift_beginAccess();
          if (MEMORY[0x1D9447840](v74))
          {
            uint64_t v75 = *(void *)(v74 + 8);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v75 + 72))(v70, v66, ObjectType, v75);
            swift_release();
            swift_release();
            swift_unknownObjectRelease();

            goto LABEL_23;
          }
          swift_release();
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }

        return;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v91[0]) = 3;
  uint64_t v41 = sub_1D445FEB0((unsigned __int8 *)v91);
  uint64_t v42 = MEMORY[0x1D9447840](v3 + qword_1EBD7FC80);
  if (v42)
  {
    uint64_t v43 = v42;
    swift_retain();
    uint64_t v44 = sub_1D44698F8();
    os_log_type_t v45 = sub_1D446A038();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl(&dword_1D4271000, v44, v45, "FMIPManager: didReceive server alert", v46, 2u);
      MEMORY[0x1D9447730](v46, -1, -1);
    }

    uint64_t v47 = v43 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
    swift_beginAccess();
    if (MEMORY[0x1D9447840](v47))
    {
      uint64_t v48 = *(void *)(v47 + 8);
      uint64_t v49 = swift_getObjectType();
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v48 + 72))(v43, v41, v49, v48);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
LABEL_23:
      swift_unknownObjectRelease();
      return;
    }
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
}

void sub_1D43FC3F4()
{
}

uint64_t sub_1D43FC424()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D43FC474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D43FA280(a1, a2, a3);
}

uint64_t sub_1D43FC498(uint64_t a1)
{
  return sub_1D4404574(a1);
}

uint64_t sub_1D43FC4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1D42C4FCC(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D43D8D9C();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_1D43FCD20(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1D43FC5A4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1D42C4FCC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D42C57CC();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1D42C5494((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1D43FCEF8(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1D43FC6A8(uint64_t a1, uint64_t a2)
{
  return sub_1D43FC9B0(a1, a2, (void (*)(void))sub_1D43D8F58);
}

uint64_t sub_1D43FC6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1D42C4FCC(a1, a2);
  LOBYTE(a2) = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    uint64_t v19 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D43D8F64();
      uint64_t v12 = v19;
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v12 + 56) + 24 * v8;
    char v14 = *(unsigned char *)(v13 + 1);
    char v15 = *(unsigned char *)(v13 + 2);
    char v16 = *(unsigned char *)(v13 + 3);
    uint64_t v17 = *(void *)(v13 + 8);
    uint64_t v18 = *(void *)(v13 + 16);
    *(unsigned char *)a3 = *(unsigned char *)v13;
    *(unsigned char *)(a3 + 1) = v14;
    *(unsigned char *)(a3 + 2) = v15;
    *(unsigned char *)(a3 + 3) = v16;
    *(void *)(a3 + 8) = v17;
    *(void *)(a3 + 16) = v18;
    sub_1D43FD0D0(v8, v12);
    *uint64_t v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
  }
  return result;
}

uint64_t sub_1D43FC7F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1D42C4FCC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D43D914C();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4D0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1D4276C98(v12 + *(void *)(v20 + 72) * v8, a3, (uint64_t *)&unk_1EA6CA4D0);
    sub_1D43FD2BC(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    char v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4D0);
    char v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_1D43FC998(uint64_t a1, uint64_t a2)
{
  return sub_1D43FC9B0(a1, a2, (void (*)(void))sub_1D43D93D4);
}

uint64_t sub_1D43FC9B0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1D42C4FCC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v5;
  uint64_t v14 = *v5;
  *uint64_t v5 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a3();
    uint64_t v11 = v14;
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(*(void *)(v11 + 56) + 8 * v8);
  sub_1D43FD4DC(v8, v11);
  *uint64_t v5 = v11;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1D43FCA90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1D42C4FCC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D43D9F50();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for FMIPMonitoredDevice(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1D42BB5E0(v12 + *(void *)(v20 + 72) * v8, a3, type metadata accessor for FMIPMonitoredDevice);
    sub_1D43FD9AC(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for FMIPMonitoredDevice(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

double sub_1D43FCC34@<D0>(unsigned __int8 a1@<W0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1D42A3758(a1);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v8)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v3;
    uint64_t v12 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D43DA20C();
      uint64_t v10 = v12;
    }
    sub_1D42C5494((_OWORD *)(*(void *)(v10 + 56) + 32 * v6), a2);
    sub_1D43FDBBC(v6, v10);
    *uint64_t v3 = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

unint64_t sub_1D43FCD20(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1D446A208();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1D446A828();
        swift_bridgeObjectRetain();
        sub_1D4469BC8();
        uint64_t v9 = sub_1D446A888();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            _OWORD *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D43FCEF8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1D446A208();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1D446A828();
        swift_bridgeObjectRetain();
        sub_1D4469BC8();
        uint64_t v10 = sub_1D446A888();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D43FD0D0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1D446A208();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1D446A828();
        swift_bridgeObjectRetain();
        sub_1D4469BC8();
        uint64_t v10 = sub_1D446A888();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 24 * v3;
          uint64_t v17 = (long long *)(v15 + 24 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= (unint64_t)v17 + 24))
          {
            long long v9 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D43FD2BC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1D446A208();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_1D446A828();
        swift_bridgeObjectRetain();
        sub_1D4469BC8();
        uint64_t v9 = sub_1D446A888();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4D0) - 8) + 72);
        int64_t v16 = v15 * v3;
        double result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          double result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          double result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D43FD4DC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1D446A208();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1D446A828();
        swift_bridgeObjectRetain();
        sub_1D4469BC8();
        uint64_t v9 = sub_1D446A888();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          int64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D43FD6B4(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469688();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_1D446A208();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_1D42C626C(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
        uint64_t v17 = sub_1D4469AC8();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            BOOL v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D43FD9AC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1D446A208();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_1D446A828();
        swift_bridgeObjectRetain();
        sub_1D4469BC8();
        uint64_t v9 = sub_1D446A888();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for FMIPMonitoredDevice(0) - 8) + 72);
        int64_t v16 = v15 * v3;
        unint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D43FDBBC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1D446A208();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1D446A828();
        sub_1D4469BC8();
        swift_bridgeObjectRelease();
        unint64_t result = sub_1D446A888();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (unsigned char *)(v11 + v3);
          uint64_t v13 = (unsigned char *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 32 * v3);
          int64_t v16 = (_OWORD *)(v14 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 2))
          {
            long long v9 = v16[1];
            _OWORD *v15 = *v16;
            v15[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
    JUMPOUT(0x1D43FDE28);
  }
  *(void *)(a2 + 16) = v22;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_1D43FDE38(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469688();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_1D446A208();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_1D42C626C(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
        uint64_t v17 = sub_1D4469AC8();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (unsigned char *)(v22 + a1);
            BOOL v24 = (unsigned char *)(v22 + v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1D43FE130@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D43F86AC(*(unsigned char *)(v1 + 16), **(void **)(v1 + 24));
  if (!v2)
  {
    *a1 = result;
    a1[1] = v5;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPConfigValue(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D43FE234);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1D43FE25C()
{
  return type metadata accessor for FMIPServerInteractionController(0);
}

uint64_t sub_1D43FE264(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v38 = *a2;
    *(void *)a1 = *a2;
    a1 = v38 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v10;
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v11 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v11;
    uint64_t v12 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v12;
    uint64_t v13 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v13;
    uint64_t v14 = a2[18];
    *(void *)(a1 + 136) = a2[17];
    *(void *)(a1 + 144) = v14;
    uint64_t v15 = a2[20];
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v15;
    uint64_t v16 = a2[22];
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v16;
    *(void *)(a1 + 184) = a2[23];
    *(unsigned char *)(a1 + 192) = *((unsigned char *)a2 + 192);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
    uint64_t v17 = a2[28];
    *(void *)(a1 + 216) = a2[27];
    *(void *)(a1 + 224) = v17;
    uint64_t v18 = a2[30];
    *(void *)(a1 + 232) = a2[29];
    *(void *)(a1 + 240) = v18;
    *(void *)(a1 + 248) = a2[31];
    *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 64);
    uint64_t v20 = (void *)a2[33];
    uint64_t v19 = a2[34];
    *(void *)(a1 + 264) = v20;
    *(void *)(a1 + 272) = v19;
    *(_DWORD *)(a1 + 280) = *((_DWORD *)a2 + 70);
    uint64_t v22 = (void *)a2[36];
    uint64_t v21 = a2[37];
    *(void *)(a1 + 288) = v22;
    *(void *)(a1 + 296) = v21;
    uint64_t v23 = a2[59];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v24 = v20;
    id v25 = v22;
    if (v23)
    {
      uint64_t v26 = a2[39];
      *(void *)(a1 + 304) = a2[38];
      *(void *)(a1 + 312) = v26;
      uint64_t v27 = a2[41];
      *(void *)(a1 + 320) = a2[40];
      *(void *)(a1 + 328) = v27;
      uint64_t v28 = a2[43];
      *(void *)(a1 + 336) = a2[42];
      *(void *)(a1 + 344) = v28;
      uint64_t v29 = a2[45];
      *(void *)(a1 + 352) = a2[44];
      *(void *)(a1 + 360) = v29;
      uint64_t v30 = a2[47];
      *(void *)(a1 + 368) = a2[46];
      *(void *)(a1 + 376) = v30;
      uint64_t v31 = a2[49];
      *(void *)(a1 + 384) = a2[48];
      *(void *)(a1 + 392) = v31;
      uint64_t v32 = a2[51];
      *(void *)(a1 + 400) = a2[50];
      *(void *)(a1 + 408) = v32;
      uint64_t v33 = a2[53];
      *(void *)(a1 + 416) = a2[52];
      *(void *)(a1 + 424) = v33;
      uint64_t v34 = a2[55];
      *(void *)(a1 + 432) = a2[54];
      *(void *)(a1 + 440) = v34;
      uint64_t v35 = a2[57];
      *(void *)(a1 + 448) = a2[56];
      *(void *)(a1 + 456) = v35;
      *(void *)(a1 + 464) = a2[58];
      *(void *)(a1 + 472) = v23;
      uint64_t v36 = a2[61];
      *(void *)(a1 + 480) = a2[60];
      *(void *)(a1 + 488) = v36;
      uint64_t v37 = a2[63];
      *(void *)(a1 + 496) = a2[62];
      *(void *)(a1 + 504) = v37;
      *(void *)(a1 + 512) = a2[64];
      *(void *)(a1 + 520) = a2[65];
      *(void *)(a1 + 528) = a2[66];
      *(void *)(a1 + 536) = a2[67];
      *(void *)(a1 + 544) = a2[68];
      *(void *)(a1 + 552) = a2[69];
      *(void *)(a1 + 560) = a2[70];
      *(void *)(a1 + 568) = a2[71];
      *(void *)(a1 + 576) = a2[72];
      *(void *)(a1 + 584) = a2[73];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy((void *)(a1 + 304), a2 + 38, 0x120uLL);
    }
    uint64_t v39 = (int *)type metadata accessor for FMIPDevice();
    uint64_t v40 = v39[28];
    uint64_t v41 = (unsigned char *)(a1 + v40);
    uint64_t v42 = (char *)a2 + v40;
    uint64_t v43 = (int *)type metadata accessor for FMIPPlaySoundMetadata();
    uint64_t v44 = *((void *)v43 - 1);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v44 + 48))(v42, 1, v43))
    {
      uint64_t v45 = sub_1D42D5DA0(&qword_1EBD7CEA0);
      memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      unsigned char *v41 = *v42;
      uint64_t v46 = v43[5];
      uint64_t v47 = &v41[v46];
      uint64_t v48 = &v42[v46];
      uint64_t v49 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
      uint64_t v50 = v43[6];
      id v51 = &v41[v50];
      uint64_t v52 = &v42[v50];
      uint64_t v53 = v52[1];
      *id v51 = *v52;
      v51[1] = v53;
      uint64_t v54 = v43[7];
      id v55 = &v41[v54];
      uint64_t v56 = &v42[v54];
      uint64_t v57 = v56[1];
      *id v55 = *v56;
      v55[1] = v57;
      uint64_t v58 = v43[8];
      uint64_t v59 = &v41[v58];
      uint64_t v60 = &v42[v58];
      uint64_t v61 = v60[1];
      *uint64_t v59 = *v60;
      v59[1] = v61;
      uint64_t v62 = v43[9];
      uint64_t v63 = &v41[v62];
      uint64_t v64 = &v42[v62];
      uint64_t v65 = v64[1];
      void *v63 = *v64;
      v63[1] = v65;
      uint64_t v66 = *(void (**)(unsigned char *, void, uint64_t, int *))(v44 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v66(v41, 0, 1, v43);
    }
    uint64_t v67 = v39[29];
    long long v68 = (_DWORD *)(a1 + v67);
    uint64_t v69 = (_DWORD *)((char *)a2 + v67);
    uint64_t v70 = type metadata accessor for FMIPDeviceLostModeMetadata();
    uint64_t v71 = *(void *)(v70 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
    {
      uint64_t v72 = sub_1D42D5DA0(&qword_1EBD7D4E0);
      memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      *long long v68 = *v69;
      uint64_t v73 = *((void *)v69 + 2);
      *((void *)v68 + 1) = *((void *)v69 + 1);
      *((void *)v68 + 2) = v73;
      uint64_t v74 = *((void *)v69 + 4);
      *((void *)v68 + 3) = *((void *)v69 + 3);
      *((void *)v68 + 4) = v74;
      uint64_t v75 = *((void *)v69 + 6);
      *((void *)v68 + 5) = *((void *)v69 + 5);
      *((void *)v68 + 6) = v75;
      *((unsigned char *)v68 + 56) = *((unsigned char *)v69 + 56);
      uint64_t v76 = *(int *)(v70 + 48);
      char v165 = (char *)v69 + v76;
      id v167 = (char *)v68 + v76;
      uint64_t v77 = sub_1D4469618();
      uint64_t v163 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v163(v167, v165, v77);
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
    }
    uint64_t v78 = v39[30];
    uint64_t v79 = (unsigned char *)(a1 + v78);
    id v80 = (char *)a2 + v78;
    uint64_t v81 = type metadata accessor for FMIPLockMetadata();
    uint64_t v82 = *(void *)(v81 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81))
    {
      uint64_t v83 = sub_1D42D5DA0(&qword_1EBD7CDF8);
      memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
    }
    else
    {
      unsigned char *v79 = *v80;
      uint64_t v84 = *(int *)(v81 + 20);
      uint64_t v85 = &v79[v84];
      uint64_t v86 = &v80[v84];
      uint64_t v87 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
    }
    uint64_t v88 = v39[31];
    uint64_t v89 = (unsigned char *)(a1 + v88);
    uint64_t v90 = (char *)a2 + v88;
    uint64_t v91 = (int *)type metadata accessor for FMIPEraseMetadata();
    uint64_t v92 = *((void *)v91 - 1);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v92 + 48))(v90, 1, v91))
    {
      uint64_t v93 = sub_1D42D5DA0(&qword_1EBD7CE38);
      memcpy(v89, v90, *(void *)(*(void *)(v93 - 8) + 64));
    }
    else
    {
      unsigned char *v89 = *v90;
      uint64_t v94 = v91[5];
      uint64_t v95 = &v89[v94];
      uint64_t v96 = &v90[v94];
      uint64_t v97 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
      uint64_t v98 = v91[6];
      uint64_t v99 = &v89[v98];
      uint64_t v100 = &v90[v98];
      uint64_t v101 = v100[1];
      *uint64_t v99 = *v100;
      v99[1] = v101;
      uint64_t v102 = v91[7];
      uint64_t v103 = &v89[v102];
      uint64_t v104 = &v90[v102];
      uint64_t v105 = v104[1];
      *uint64_t v103 = *v104;
      v103[1] = v105;
      v89[v91[8]] = v90[v91[8]];
      uint64_t v106 = *(void (**)(unsigned char *, void, uint64_t, int *))(v92 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v106(v89, 0, 1, v91);
    }
    uint64_t v107 = v39[32];
    uint64_t v108 = (void *)(a1 + v107);
    double v109 = (uint64_t *)((char *)a2 + v107);
    uint64_t v110 = type metadata accessor for FMIPItemGroup();
    uint64_t v111 = *(void *)(v110 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v111 + 48))(v109, 1, v110))
    {
      uint64_t v112 = sub_1D42D5DA0(&qword_1EBD7E670);
      memcpy(v108, v109, *(void *)(*(void *)(v112 - 8) + 64));
    }
    else
    {
      uint64_t v168 = v111;
      *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
      uint64_t v113 = v109[3];
      v108[2] = v109[2];
      v108[3] = v113;
      uint64_t v114 = v109[5];
      v108[4] = v109[4];
      v108[5] = v114;
      uint64_t v115 = v109[7];
      v108[6] = v109[6];
      v108[7] = v115;
      uint64_t v116 = v109[9];
      v108[8] = v109[8];
      v108[9] = v116;
      uint64_t v117 = *(int *)(v110 + 48);
      __dst = (void *)((char *)v108 + v117);
      double v160 = (void *)((char *)v109 + v117);
      uint64_t v118 = type metadata accessor for FMIPItemLostModeMetadata();
      uint64_t v158 = *(void *)(v118 - 8);
      uint64_t v161 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v158 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v161(v160, 1, v118))
      {
        uint64_t v119 = sub_1D42D5DA0(&qword_1EBD7E710);
        memcpy(__dst, v160, *(void *)(*(void *)(v119 - 8) + 64));
      }
      else
      {
        uint64_t v120 = v160[1];
        void *__dst = *v160;
        __dst[1] = v120;
        uint64_t v121 = v160[3];
        __dst[2] = v160[2];
        __dst[3] = v121;
        uint64_t v122 = *(int *)(v118 + 24);
        id v164 = (char *)v160 + v122;
        id v166 = (char *)__dst + v122;
        uint64_t v123 = sub_1D4469618();
        uint64_t v162 = *(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v162(v166, v164, v123);
        uint64_t v124 = *(int *)(v118 + 28);
        uint64_t v125 = (void *)((char *)__dst + v124);
        uint64_t v126 = (void *)((char *)v160 + v124);
        uint64_t v127 = v126[1];
        *uint64_t v125 = *v126;
        v125[1] = v127;
        uint64_t v128 = *(void (**)(void *, void, uint64_t, uint64_t))(v158 + 56);
        swift_bridgeObjectRetain();
        v128(__dst, 0, 1, v118);
      }
      *(void *)((char *)v108 + *(int *)(v110 + 52)) = *(void *)((char *)v109 + *(int *)(v110 + 52));
      uint64_t v129 = *(void (**)(void *, void, uint64_t, uint64_t))(v168 + 56);
      swift_bridgeObjectRetain();
      v129(v108, 0, 1, v110);
    }
    *(unsigned char *)(a1 + v39[33]) = *((unsigned char *)a2 + v39[33]);
    *(unsigned char *)(a1 + v39[34]) = *((unsigned char *)a2 + v39[34]);
    *(unsigned char *)(a1 + v39[35]) = *((unsigned char *)a2 + v39[35]);
    uint64_t v130 = v39[36];
    uint64_t v131 = (void *)(a1 + v130);
    uint64_t v132 = (uint64_t *)((char *)a2 + v130);
    uint64_t v133 = v132[1];
    *uint64_t v131 = *v132;
    v131[1] = v133;
    *(void *)(a1 + v39[37]) = *(uint64_t *)((char *)a2 + v39[37]);
    uint64_t v134 = v39[38];
    uint64_t v135 = (void *)(a1 + v134);
    uint64_t v136 = (char *)a2 + v134;
    uint64_t v137 = sub_1D4469618();
    uint64_t v138 = *(void *)(v137 - 8);
    uint64_t v139 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v138 + 48);
    swift_bridgeObjectRetain();
    if (v139(v136, 1, v137))
    {
      uint64_t v140 = sub_1D42D5DA0(&qword_1EBD7CB80);
      memcpy(v135, v136, *(void *)(*(void *)(v140 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v138 + 16))(v135, v136, v137);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v138 + 56))(v135, 0, 1, v137);
    }
    uint64_t v141 = v39[39];
    uint64_t v142 = (void *)(a1 + v141);
    char v143 = (char *)a2 + v141;
    if (v139((char *)a2 + v141, 1, v137))
    {
      uint64_t v144 = sub_1D42D5DA0(&qword_1EBD7CB80);
      memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v138 + 16))(v142, v143, v137);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v138 + 56))(v142, 0, 1, v137);
    }
    uint64_t v145 = v39[40];
    uint64_t v146 = (void *)(a1 + v145);
    uint64_t v147 = (char *)a2 + v145;
    if (v139((char *)a2 + v145, 1, v137))
    {
      uint64_t v148 = sub_1D42D5DA0(&qword_1EBD7CB80);
      memcpy(v146, v147, *(void *)(*(void *)(v148 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v138 + 16))(v146, v147, v137);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v138 + 56))(v146, 0, 1, v137);
    }
    uint64_t v149 = v39[41];
    uint64_t v150 = (void *)(a1 + v149);
    char v151 = (char *)a2 + v149;
    if (v139((char *)a2 + v149, 1, v137))
    {
      uint64_t v152 = sub_1D42D5DA0(&qword_1EBD7CB80);
      memcpy(v150, v151, *(void *)(*(void *)(v152 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v138 + 16))(v150, v151, v137);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v138 + 56))(v150, 0, 1, v137);
    }
    *(unsigned char *)(a1 + v39[42]) = *((unsigned char *)a2 + v39[42]);
    *(unsigned char *)(a1 + v39[43]) = *((unsigned char *)a2 + v39[43]);
    *(unsigned char *)(a1 + v39[44]) = *((unsigned char *)a2 + v39[44]);
    uint64_t v153 = *(int *)(a3 + 24);
    uint64_t v154 = (void *)(a1 + v153);
    uint64_t v155 = (uint64_t *)((char *)a2 + v153);
    uint64_t v156 = v155[1];
    *uint64_t v154 = *v155;
    v154[1] = v156;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1D43FF118(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(a1 + 472))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = (int *)type metadata accessor for FMIPDevice();
  uint64_t v3 = a1 + v2[28];
  uint64_t v4 = type metadata accessor for FMIPPlaySoundMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    uint64_t v5 = v3 + *(int *)(v4 + 20);
    uint64_t v6 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = a1 + v2[29];
  uint64_t v8 = type metadata accessor for FMIPDeviceLostModeMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + *(int *)(v8 + 48);
    uint64_t v10 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  uint64_t v11 = a1 + v2[30];
  uint64_t v12 = type metadata accessor for FMIPLockMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {
    uint64_t v13 = v11 + *(int *)(v12 + 20);
    uint64_t v14 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  uint64_t v15 = a1 + v2[31];
  uint64_t v16 = type metadata accessor for FMIPEraseMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16))
  {
    uint64_t v17 = v15 + *(int *)(v16 + 20);
    uint64_t v18 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = a1 + v2[32];
  uint64_t v20 = type metadata accessor for FMIPItemGroup();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = v19 + *(int *)(v20 + 48);
    uint64_t v22 = type metadata accessor for FMIPItemLostModeMetadata();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = v21 + *(int *)(v22 + 24);
      uint64_t v24 = sub_1D4469618();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = a1 + v2[38];
  uint64_t v26 = sub_1D4469618();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  if (!v28(v25, 1, v26)) {
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  }
  uint64_t v29 = a1 + v2[39];
  if (!v28(v29, 1, v26)) {
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v26);
  }
  uint64_t v30 = a1 + v2[40];
  if (!v28(v30, 1, v26)) {
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v30, v26);
  }
  uint64_t v31 = a1 + v2[41];
  if (!v28(v31, 1, v26)) {
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v31, v26);
  }
  return swift_release();
}

uint64_t sub_1D43FF7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  uint64_t v16 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v16;
  uint64_t v17 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v17;
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  uint64_t v19 = *(void **)(a2 + 264);
  uint64_t v18 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = v19;
  *(void *)(a1 + 272) = v18;
  *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
  uint64_t v21 = *(void **)(a2 + 288);
  uint64_t v20 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = v21;
  *(void *)(a1 + 296) = v20;
  uint64_t v22 = *(void *)(a2 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v23 = v19;
  id v24 = v21;
  if (v22)
  {
    uint64_t v25 = *(void *)(a2 + 312);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(void *)(a1 + 312) = v25;
    uint64_t v26 = *(void *)(a2 + 328);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = v26;
    uint64_t v27 = *(void *)(a2 + 344);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = v27;
    uint64_t v28 = *(void *)(a2 + 360);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = v28;
    uint64_t v29 = *(void *)(a2 + 376);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = v29;
    uint64_t v30 = *(void *)(a2 + 392);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = v30;
    uint64_t v31 = *(void *)(a2 + 408);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(void *)(a1 + 408) = v31;
    uint64_t v32 = *(void *)(a2 + 424);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(void *)(a1 + 424) = v32;
    uint64_t v33 = *(void *)(a2 + 440);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(void *)(a1 + 440) = v33;
    uint64_t v34 = *(void *)(a2 + 456);
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    *(void *)(a1 + 456) = v34;
    *(void *)(a1 + 464) = *(void *)(a2 + 464);
    *(void *)(a1 + 472) = v22;
    uint64_t v35 = *(void *)(a2 + 488);
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(void *)(a1 + 488) = v35;
    uint64_t v36 = *(void *)(a2 + 504);
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *(void *)(a1 + 504) = v36;
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    *(void *)(a1 + 520) = *(void *)(a2 + 520);
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    *(void *)(a1 + 544) = *(void *)(a2 + 544);
    *(void *)(a1 + 552) = *(void *)(a2 + 552);
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    *(void *)(a1 + 568) = *(void *)(a2 + 568);
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + 304), (const void *)(a2 + 304), 0x120uLL);
  }
  uint64_t v37 = (int *)type metadata accessor for FMIPDevice();
  uint64_t v38 = v37[28];
  uint64_t v39 = (unsigned char *)(a1 + v38);
  uint64_t v40 = (unsigned char *)(a2 + v38);
  uint64_t v41 = (int *)type metadata accessor for FMIPPlaySoundMetadata();
  uint64_t v42 = *((void *)v41 - 1);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v42 + 48))(v40, 1, v41))
  {
    uint64_t v43 = sub_1D42D5DA0(&qword_1EBD7CEA0);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    unsigned char *v39 = *v40;
    uint64_t v44 = v41[5];
    uint64_t v45 = &v39[v44];
    uint64_t v46 = &v40[v44];
    uint64_t v47 = sub_1D4469618();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = v41[6];
    uint64_t v49 = &v39[v48];
    uint64_t v50 = &v40[v48];
    uint64_t v51 = v50[1];
    *uint64_t v49 = *v50;
    v49[1] = v51;
    uint64_t v52 = v41[7];
    uint64_t v53 = &v39[v52];
    uint64_t v54 = &v40[v52];
    uint64_t v55 = v54[1];
    *uint64_t v53 = *v54;
    v53[1] = v55;
    uint64_t v56 = v41[8];
    uint64_t v57 = &v39[v56];
    uint64_t v58 = &v40[v56];
    uint64_t v59 = v58[1];
    *uint64_t v57 = *v58;
    v57[1] = v59;
    uint64_t v60 = v41[9];
    uint64_t v61 = &v39[v60];
    uint64_t v62 = &v40[v60];
    uint64_t v63 = v62[1];
    *uint64_t v61 = *v62;
    v61[1] = v63;
    uint64_t v64 = *(void (**)(unsigned char *, void, uint64_t, int *))(v42 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v64(v39, 0, 1, v41);
  }
  uint64_t v65 = v37[29];
  uint64_t v66 = (_DWORD *)(a1 + v65);
  uint64_t v67 = (_DWORD *)(a2 + v65);
  uint64_t v68 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v69 = *(void *)(v68 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
  {
    uint64_t v70 = sub_1D42D5DA0(&qword_1EBD7D4E0);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    _DWORD *v66 = *v67;
    uint64_t v71 = *((void *)v67 + 2);
    *((void *)v66 + 1) = *((void *)v67 + 1);
    *((void *)v66 + 2) = v71;
    uint64_t v72 = *((void *)v67 + 4);
    *((void *)v66 + 3) = *((void *)v67 + 3);
    *((void *)v66 + 4) = v72;
    uint64_t v73 = *((void *)v67 + 6);
    *((void *)v66 + 5) = *((void *)v67 + 5);
    *((void *)v66 + 6) = v73;
    *((unsigned char *)v66 + 56) = *((unsigned char *)v67 + 56);
    uint64_t v74 = *(int *)(v68 + 48);
    __dsta = (char *)v67 + v74;
    char v165 = (char *)v66 + v74;
    uint64_t v75 = sub_1D4469618();
    uint64_t v161 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v161(v165, __dsta, v75);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
  }
  uint64_t v76 = v37[30];
  uint64_t v77 = (unsigned char *)(a1 + v76);
  uint64_t v78 = (unsigned char *)(a2 + v76);
  uint64_t v79 = type metadata accessor for FMIPLockMetadata();
  uint64_t v80 = *(void *)(v79 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
  {
    uint64_t v81 = sub_1D42D5DA0(&qword_1EBD7CDF8);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
  }
  else
  {
    *uint64_t v77 = *v78;
    uint64_t v82 = *(int *)(v79 + 20);
    uint64_t v83 = &v77[v82];
    uint64_t v84 = &v78[v82];
    uint64_t v85 = sub_1D4469618();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
  }
  uint64_t v86 = v37[31];
  uint64_t v87 = (unsigned char *)(a1 + v86);
  uint64_t v88 = (unsigned char *)(a2 + v86);
  uint64_t v89 = (int *)type metadata accessor for FMIPEraseMetadata();
  uint64_t v90 = *((void *)v89 - 1);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v90 + 48))(v88, 1, v89))
  {
    uint64_t v91 = sub_1D42D5DA0(&qword_1EBD7CE38);
    memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64));
  }
  else
  {
    *uint64_t v87 = *v88;
    uint64_t v92 = v89[5];
    uint64_t v93 = &v87[v92];
    uint64_t v94 = &v88[v92];
    uint64_t v95 = sub_1D4469618();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
    uint64_t v96 = v89[6];
    uint64_t v97 = &v87[v96];
    uint64_t v98 = &v88[v96];
    uint64_t v99 = v98[1];
    *uint64_t v97 = *v98;
    v97[1] = v99;
    uint64_t v100 = v89[7];
    uint64_t v101 = &v87[v100];
    uint64_t v102 = &v88[v100];
    uint64_t v103 = v102[1];
    *uint64_t v101 = *v102;
    v101[1] = v103;
    v87[v89[8]] = v88[v89[8]];
    uint64_t v104 = *(void (**)(unsigned char *, void, uint64_t, int *))(v90 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v104(v87, 0, 1, v89);
  }
  uint64_t v105 = v37[32];
  uint64_t v106 = (void *)(a1 + v105);
  uint64_t v107 = (void *)(a2 + v105);
  uint64_t v108 = type metadata accessor for FMIPItemGroup();
  uint64_t v109 = *(void *)(v108 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
  {
    uint64_t v110 = sub_1D42D5DA0(&qword_1EBD7E670);
    memcpy(v106, v107, *(void *)(*(void *)(v110 - 8) + 64));
  }
  else
  {
    uint64_t v166 = v109;
    *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
    uint64_t v111 = v107[3];
    v106[2] = v107[2];
    v106[3] = v111;
    uint64_t v112 = v107[5];
    v106[4] = v107[4];
    v106[5] = v112;
    uint64_t v113 = v107[7];
    v106[6] = v107[6];
    v106[7] = v113;
    uint64_t v114 = v107[9];
    v106[8] = v107[8];
    v106[9] = v114;
    uint64_t v115 = *(int *)(v108 + 48);
    __dst = (void *)((char *)v106 + v115);
    id v157 = (void *)((char *)v107 + v115);
    uint64_t v116 = type metadata accessor for FMIPItemLostModeMetadata();
    uint64_t v156 = *(void *)(v116 - 8);
    uint64_t v158 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v156 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v158(v157, 1, v116))
    {
      uint64_t v117 = sub_1D42D5DA0(&qword_1EBD7E710);
      memcpy(__dst, v157, *(void *)(*(void *)(v117 - 8) + 64));
    }
    else
    {
      uint64_t v118 = v157[1];
      void *__dst = *v157;
      __dst[1] = v118;
      uint64_t v119 = v157[3];
      __dst[2] = v157[2];
      __dst[3] = v119;
      uint64_t v120 = *(int *)(v116 + 24);
      double v160 = (char *)v157 + v120;
      uint64_t v162 = (char *)__dst + v120;
      uint64_t v121 = sub_1D4469618();
      uint64_t v159 = *(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v159(v162, v160, v121);
      uint64_t v122 = *(int *)(v116 + 28);
      uint64_t v123 = (void *)((char *)__dst + v122);
      uint64_t v124 = (void *)((char *)v157 + v122);
      uint64_t v125 = v124[1];
      *uint64_t v123 = *v124;
      v123[1] = v125;
      uint64_t v126 = *(void (**)(void *, void, uint64_t, uint64_t))(v156 + 56);
      swift_bridgeObjectRetain();
      v126(__dst, 0, 1, v116);
    }
    *(void *)((char *)v106 + *(int *)(v108 + 52)) = *(void *)((char *)v107 + *(int *)(v108 + 52));
    uint64_t v127 = *(void (**)(void *, void, uint64_t, uint64_t))(v166 + 56);
    swift_bridgeObjectRetain();
    v127(v106, 0, 1, v108);
  }
  *(unsigned char *)(a1 + v37[33]) = *(unsigned char *)(a2 + v37[33]);
  *(unsigned char *)(a1 + v37[34]) = *(unsigned char *)(a2 + v37[34]);
  *(unsigned char *)(a1 + v37[35]) = *(unsigned char *)(a2 + v37[35]);
  uint64_t v128 = v37[36];
  uint64_t v129 = (void *)(a1 + v128);
  uint64_t v130 = (void *)(a2 + v128);
  uint64_t v131 = v130[1];
  *uint64_t v129 = *v130;
  v129[1] = v131;
  *(void *)(a1 + v37[37]) = *(void *)(a2 + v37[37]);
  uint64_t v132 = v37[38];
  uint64_t v133 = (void *)(a1 + v132);
  uint64_t v134 = (const void *)(a2 + v132);
  uint64_t v135 = sub_1D4469618();
  uint64_t v136 = *(void *)(v135 - 8);
  uint64_t v137 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v136 + 48);
  swift_bridgeObjectRetain();
  if (v137(v134, 1, v135))
  {
    uint64_t v138 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v133, v134, *(void *)(*(void *)(v138 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v136 + 16))(v133, v134, v135);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v136 + 56))(v133, 0, 1, v135);
  }
  uint64_t v139 = v37[39];
  uint64_t v140 = (void *)(a1 + v139);
  uint64_t v141 = (const void *)(a2 + v139);
  if (v137((const void *)(a2 + v139), 1, v135))
  {
    uint64_t v142 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v136 + 16))(v140, v141, v135);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v136 + 56))(v140, 0, 1, v135);
  }
  uint64_t v143 = v37[40];
  uint64_t v144 = (void *)(a1 + v143);
  uint64_t v145 = (const void *)(a2 + v143);
  if (v137((const void *)(a2 + v143), 1, v135))
  {
    uint64_t v146 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v144, v145, *(void *)(*(void *)(v146 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v136 + 16))(v144, v145, v135);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v136 + 56))(v144, 0, 1, v135);
  }
  uint64_t v147 = v37[41];
  uint64_t v148 = (void *)(a1 + v147);
  uint64_t v149 = (const void *)(a2 + v147);
  if (v137((const void *)(a2 + v147), 1, v135))
  {
    uint64_t v150 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v148, v149, *(void *)(*(void *)(v150 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v136 + 16))(v148, v149, v135);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v136 + 56))(v148, 0, 1, v135);
  }
  *(unsigned char *)(a1 + v37[42]) = *(unsigned char *)(a2 + v37[42]);
  *(unsigned char *)(a1 + v37[43]) = *(unsigned char *)(a2 + v37[43]);
  *(unsigned char *)(a1 + v37[44]) = *(unsigned char *)(a2 + v37[44]);
  uint64_t v151 = *(int *)(a3 + 24);
  uint64_t v152 = (void *)(a1 + v151);
  uint64_t v153 = (void *)(a2 + v151);
  uint64_t v154 = v153[1];
  void *v152 = *v153;
  v152[1] = v154;
  swift_retain();
  return a1;
}

uint64_t sub_1D4400630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (unsigned char *)(a2 + 256);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(unsigned char *)(a1 + 257) = v6[1];
  *(unsigned char *)(a1 + 258) = v6[2];
  *(unsigned char *)(a1 + 259) = *(unsigned char *)(a2 + 259);
  uint64_t v7 = *(void **)(a2 + 264);
  uint64_t v8 = *(void **)(a1 + 264);
  *(void *)(a1 + 264) = v7;
  id v9 = v7;

  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = v6[24];
  *(unsigned char *)(a1 + 281) = v6[25];
  *(unsigned char *)(a1 + 282) = v6[26];
  *(unsigned char *)(a1 + 283) = *(unsigned char *)(a2 + 283);
  uint64_t v10 = *(void **)(a2 + 288);
  uint64_t v11 = *(void **)(a1 + 288);
  *(void *)(a1 + 288) = v10;
  id v12 = v10;

  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  uint64_t v13 = *(void *)(a2 + 472);
  uint64_t v213 = a3;
  if (*(void *)(a1 + 472))
  {
    if (v13)
    {
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      *(void *)(a1 + 448) = *(void *)(a2 + 448);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      *(void *)(a1 + 464) = *(void *)(a2 + 464);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 472) = *(void *)(a2 + 472);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 480) = *(void *)(a2 + 480);
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 496) = *(void *)(a2 + 496);
      *(void *)(a1 + 504) = *(void *)(a2 + 504);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      *(void *)(a1 + 552) = *(void *)(a2 + 552);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1D42FDA08(a1 + 304);
  }
  else if (v13)
  {
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = *(void *)(a2 + 376);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    *(void *)(a1 + 464) = *(void *)(a2 + 464);
    *(void *)(a1 + 472) = *(void *)(a2 + 472);
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(void *)(a1 + 488) = *(void *)(a2 + 488);
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    *(void *)(a1 + 520) = *(void *)(a2 + 520);
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    *(void *)(a1 + 544) = *(void *)(a2 + 544);
    *(void *)(a1 + 552) = *(void *)(a2 + 552);
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    *(void *)(a1 + 568) = *(void *)(a2 + 568);
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  memcpy((void *)(a1 + 304), (const void *)(a2 + 304), 0x120uLL);
LABEL_8:
  uint64_t v14 = (int *)type metadata accessor for FMIPDevice();
  uint64_t v15 = v14[28];
  uint64_t v16 = (unsigned char *)(a1 + v15);
  uint64_t v17 = (unsigned char *)(a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for FMIPPlaySoundMetadata();
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      *uint64_t v16 = *v17;
      uint64_t v23 = v18[5];
      id v24 = &v16[v23];
      uint64_t v25 = &v17[v23];
      uint64_t v26 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      uint64_t v27 = v18[6];
      uint64_t v28 = &v16[v27];
      uint64_t v29 = &v17[v27];
      *uint64_t v28 = *v29;
      v28[1] = v29[1];
      uint64_t v30 = v18[7];
      uint64_t v31 = &v16[v30];
      uint64_t v32 = &v17[v30];
      void *v31 = *v32;
      v31[1] = v32[1];
      uint64_t v33 = v18[8];
      uint64_t v34 = &v16[v33];
      uint64_t v35 = &v17[v33];
      *uint64_t v34 = *v35;
      v34[1] = v35[1];
      uint64_t v36 = v18[9];
      uint64_t v37 = &v16[v36];
      uint64_t v38 = &v17[v36];
      *uint64_t v37 = *v38;
      v37[1] = v38[1];
      uint64_t v39 = *(void (**)(unsigned char *, void, uint64_t, int *))(v19 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39(v16, 0, 1, v18);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v22)
  {
    sub_1D4402230((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPPlaySoundMetadata);
LABEL_13:
    uint64_t v40 = sub_1D42D5DA0(&qword_1EBD7CEA0);
    memcpy(v16, v17, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_14;
  }
  *uint64_t v16 = *v17;
  uint64_t v101 = v18[5];
  uint64_t v102 = &v16[v101];
  uint64_t v103 = &v17[v101];
  uint64_t v104 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v104 - 8) + 24))(v102, v103, v104);
  uint64_t v105 = v18[6];
  uint64_t v106 = &v16[v105];
  uint64_t v107 = &v17[v105];
  *uint64_t v106 = *v107;
  v106[1] = v107[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v108 = v18[7];
  uint64_t v109 = &v16[v108];
  uint64_t v110 = &v17[v108];
  *uint64_t v109 = *v110;
  v109[1] = v110[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v111 = v18[8];
  uint64_t v112 = &v16[v111];
  uint64_t v113 = &v17[v111];
  void *v112 = *v113;
  v112[1] = v113[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v114 = v18[9];
  uint64_t v115 = &v16[v114];
  uint64_t v116 = &v17[v114];
  *uint64_t v115 = *v116;
  v115[1] = v116[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v41 = v14[29];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
  int v47 = v46(v42, 1, v44);
  int v48 = v46(v43, 1, v44);
  uint64_t v214 = v14;
  if (v47)
  {
    if (!v48)
    {
      *(unsigned char *)uint64_t v42 = *(unsigned char *)v43;
      *(unsigned char *)(v42 + 1) = *(unsigned char *)(v43 + 1);
      *(unsigned char *)(v42 + 2) = *(unsigned char *)(v43 + 2);
      *(unsigned char *)(v42 + 3) = *(unsigned char *)(v43 + 3);
      *(void *)(v42 + 8) = *(void *)(v43 + 8);
      *(void *)(v42 + 16) = *(void *)(v43 + 16);
      *(void *)(v42 + 24) = *(void *)(v43 + 24);
      *(void *)(v42 + 32) = *(void *)(v43 + 32);
      *(void *)(v42 + 40) = *(void *)(v43 + 40);
      *(void *)(v42 + 48) = *(void *)(v43 + 48);
      *(unsigned char *)(v42 + 56) = *(unsigned char *)(v43 + 56);
      uint64_t v49 = *(int *)(v44 + 48);
      uint64_t v208 = v43 + v49;
      uint64_t v211 = v42 + v49;
      uint64_t v50 = sub_1D4469618();
      __dsta = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __dsta(v211, v208, v50);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v48)
  {
    sub_1D4402230(v42, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
LABEL_19:
    uint64_t v51 = sub_1D42D5DA0(&qword_1EBD7D4E0);
    memcpy((void *)v42, (const void *)v43, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_20;
  }
  *(unsigned char *)uint64_t v42 = *(unsigned char *)v43;
  *(unsigned char *)(v42 + 1) = *(unsigned char *)(v43 + 1);
  *(unsigned char *)(v42 + 2) = *(unsigned char *)(v43 + 2);
  *(unsigned char *)(v42 + 3) = *(unsigned char *)(v43 + 3);
  *(void *)(v42 + 8) = *(void *)(v43 + 8);
  *(void *)(v42 + 16) = *(void *)(v43 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v42 + 24) = *(void *)(v43 + 24);
  *(void *)(v42 + 32) = *(void *)(v43 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v42 + 40) = *(void *)(v43 + 40);
  *(void *)(v42 + 48) = *(void *)(v43 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v42 + 56) = *(unsigned char *)(v43 + 56);
  uint64_t v117 = *(int *)(v44 + 48);
  uint64_t v118 = v42 + v117;
  uint64_t v119 = v43 + v117;
  uint64_t v120 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 24))(v118, v119, v120);
LABEL_20:
  uint64_t v52 = v14[30];
  uint64_t v53 = (unsigned char *)(a1 + v52);
  uint64_t v54 = (unsigned char *)(a2 + v52);
  uint64_t v55 = type metadata accessor for FMIPLockMetadata();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v57 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v56 + 48);
  int v58 = v57(v53, 1, v55);
  int v59 = v57(v54, 1, v55);
  if (v58)
  {
    if (!v59)
    {
      *uint64_t v53 = *v54;
      uint64_t v60 = *(int *)(v55 + 20);
      uint64_t v61 = &v53[v60];
      uint64_t v62 = &v54[v60];
      uint64_t v63 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v59)
  {
    sub_1D4402230((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for FMIPLockMetadata);
LABEL_25:
    uint64_t v64 = sub_1D42D5DA0(&qword_1EBD7CDF8);
    memcpy(v53, v54, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_26;
  }
  *uint64_t v53 = *v54;
  uint64_t v121 = *(int *)(v55 + 20);
  uint64_t v122 = &v53[v121];
  uint64_t v123 = &v54[v121];
  uint64_t v124 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v124 - 8) + 24))(v122, v123, v124);
LABEL_26:
  uint64_t v65 = v14[31];
  uint64_t v66 = (unsigned char *)(a1 + v65);
  uint64_t v67 = (unsigned char *)(a2 + v65);
  uint64_t v68 = (int *)type metadata accessor for FMIPEraseMetadata();
  uint64_t v69 = *((void *)v68 - 1);
  uint64_t v70 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v69 + 48);
  int v71 = v70(v66, 1, v68);
  int v72 = v70(v67, 1, v68);
  if (v71)
  {
    if (!v72)
    {
      unsigned char *v66 = *v67;
      uint64_t v73 = v68[5];
      uint64_t v74 = &v66[v73];
      uint64_t v75 = &v67[v73];
      uint64_t v76 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
      uint64_t v77 = v68[6];
      uint64_t v78 = &v66[v77];
      uint64_t v79 = &v67[v77];
      void *v78 = *v79;
      v78[1] = v79[1];
      uint64_t v80 = v68[7];
      uint64_t v81 = &v66[v80];
      uint64_t v82 = &v67[v80];
      *uint64_t v81 = *v82;
      v81[1] = v82[1];
      v66[v68[8]] = v67[v68[8]];
      uint64_t v83 = *(void (**)(unsigned char *, void, uint64_t, int *))(v69 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v83(v66, 0, 1, v68);
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  if (v72)
  {
    sub_1D4402230((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for FMIPEraseMetadata);
LABEL_31:
    uint64_t v84 = sub_1D42D5DA0(&qword_1EBD7CE38);
    memcpy(v66, v67, *(void *)(*(void *)(v84 - 8) + 64));
    goto LABEL_32;
  }
  unsigned char *v66 = *v67;
  uint64_t v125 = v68[5];
  uint64_t v126 = &v66[v125];
  uint64_t v127 = &v67[v125];
  uint64_t v128 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v128 - 8) + 24))(v126, v127, v128);
  uint64_t v129 = v68[6];
  uint64_t v130 = &v66[v129];
  uint64_t v131 = &v67[v129];
  *uint64_t v130 = *v131;
  v130[1] = v131[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v132 = v68[7];
  uint64_t v133 = &v66[v132];
  uint64_t v134 = &v67[v132];
  *uint64_t v133 = *v134;
  v133[1] = v134[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66[v68[8]] = v67[v68[8]];
LABEL_32:
  uint64_t v85 = v14[32];
  uint64_t v86 = (void *)(a1 + v85);
  uint64_t v87 = (void *)(a2 + v85);
  uint64_t v88 = type metadata accessor for FMIPItemGroup();
  uint64_t v89 = *(void *)(v88 - 8);
  uint64_t v90 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v89 + 48);
  int v91 = v90(v86, 1, v88);
  int v92 = v90(v87, 1, v88);
  if (!v91)
  {
    if (v92)
    {
      sub_1D4402230((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      goto LABEL_38;
    }
    *uint64_t v86 = *v87;
    v86[1] = v87[1];
    v86[2] = v87[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v86[3] = v87[3];
    v86[4] = v87[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v86[5] = v87[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v86[6] = v87[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v86[7] = v87[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v86[8] = v87[8];
    v86[9] = v87[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v212 = v88;
    uint64_t v135 = *(int *)(v88 + 48);
    uint64_t v136 = (void *)((char *)v86 + v135);
    uint64_t v137 = (void *)((char *)v87 + v135);
    uint64_t v138 = type metadata accessor for FMIPItemLostModeMetadata();
    uint64_t v210 = *(void *)(v138 - 8);
    uint64_t v139 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v210 + 48);
    int v140 = v139(v136, 1, v138);
    int v141 = v139(v137, 1, v138);
    if (v140)
    {
      if (!v141)
      {
        *uint64_t v136 = *v137;
        v136[1] = v137[1];
        v136[2] = v137[2];
        v136[3] = v137[3];
        uint64_t v142 = *(int *)(v138 + 24);
        uint64_t v203 = (char *)v137 + v142;
        __dstb = (char *)v136 + v142;
        uint64_t v143 = sub_1D4469618();
        uint64_t v144 = *(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v144(__dstb, v203, v143);
        uint64_t v145 = *(int *)(v138 + 28);
        uint64_t v146 = (void *)((char *)v136 + v145);
        uint64_t v147 = (void *)((char *)v137 + v145);
        void *v146 = *v147;
        v146[1] = v147[1];
        uint64_t v148 = *(void (**)(void *, void, uint64_t, uint64_t))(v210 + 56);
        swift_bridgeObjectRetain();
        v148(v136, 0, 1, v138);
LABEL_51:
        uint64_t v14 = v214;
        *(void *)((char *)v86 + *(int *)(v212 + 52)) = *(void *)((char *)v87 + *(int *)(v212 + 52));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_52;
      }
    }
    else
    {
      if (!v141)
      {
        *uint64_t v136 = *v137;
        v136[1] = v137[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v136[2] = v137[2];
        v136[3] = v137[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v192 = *(int *)(v138 + 24);
        uint64_t v193 = (char *)v136 + v192;
        uint64_t v194 = (char *)v137 + v192;
        uint64_t v195 = sub_1D4469618();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 24))(v193, v194, v195);
        uint64_t v196 = *(int *)(v138 + 28);
        char v197 = (void *)((char *)v136 + v196);
        BOOL v198 = (void *)((char *)v137 + v196);
        *char v197 = *v198;
        v197[1] = v198[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
      sub_1D4402230((uint64_t)v136, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
    }
    uint64_t v156 = sub_1D42D5DA0(&qword_1EBD7E710);
    memcpy(v136, v137, *(void *)(*(void *)(v156 - 8) + 64));
    goto LABEL_51;
  }
  if (v92)
  {
LABEL_38:
    uint64_t v100 = sub_1D42D5DA0(&qword_1EBD7E670);
    memcpy(v86, v87, *(void *)(*(void *)(v100 - 8) + 64));
    goto LABEL_52;
  }
  uint64_t v209 = v89;
  *uint64_t v86 = *v87;
  v86[1] = v87[1];
  v86[2] = v87[2];
  v86[3] = v87[3];
  v86[4] = v87[4];
  v86[5] = v87[5];
  v86[6] = v87[6];
  v86[7] = v87[7];
  v86[8] = v87[8];
  v86[9] = v87[9];
  uint64_t v93 = *(int *)(v88 + 48);
  __dst = (void *)((char *)v86 + v93);
  uint64_t v94 = (void *)((char *)v87 + v93);
  uint64_t v95 = type metadata accessor for FMIPItemLostModeMetadata();
  uint64_t v199 = *(void *)(v95 - 8);
  v200 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v199 + 48);
  uint64_t v96 = v94;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v97 = v94;
  uint64_t v98 = v95;
  if (v200(v97, 1, v95))
  {
    uint64_t v99 = sub_1D42D5DA0(&qword_1EBD7E710);
    memcpy(__dst, v96, *(void *)(*(void *)(v99 - 8) + 64));
  }
  else
  {
    void *__dst = *v96;
    __dst[1] = v96[1];
    __dst[2] = v96[2];
    __dst[3] = v96[3];
    uint64_t v149 = *(int *)(v95 + 24);
    v202 = (char *)v96 + v149;
    uint64_t v204 = (char *)__dst + v149;
    uint64_t v150 = sub_1D4469618();
    uint64_t v201 = *(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v201(v204, v202, v150);
    uint64_t v151 = *(int *)(v98 + 28);
    uint64_t v152 = (void *)((char *)__dst + v151);
    uint64_t v153 = (void *)((char *)v96 + v151);
    void *v152 = *v153;
    v152[1] = v153[1];
    uint64_t v154 = *(void (**)(void *, void, uint64_t, uint64_t))(v199 + 56);
    swift_bridgeObjectRetain();
    v154(__dst, 0, 1, v98);
  }
  *(void *)((char *)v86 + *(int *)(v88 + 52)) = *(void *)((char *)v87 + *(int *)(v88 + 52));
  uint64_t v155 = *(void (**)(void *, void, uint64_t, uint64_t))(v209 + 56);
  swift_bridgeObjectRetain();
  v155(v86, 0, 1, v88);
LABEL_52:
  *(unsigned char *)(a1 + v14[33]) = *(unsigned char *)(a2 + v14[33]);
  *(unsigned char *)(a1 + v14[34]) = *(unsigned char *)(a2 + v14[34]);
  *(unsigned char *)(a1 + v14[35]) = *(unsigned char *)(a2 + v14[35]);
  uint64_t v157 = v14[36];
  uint64_t v158 = (void *)(a1 + v157);
  uint64_t v159 = (void *)(a2 + v157);
  *uint64_t v158 = *v159;
  v158[1] = v159[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v14[37]) = *(void *)(a2 + v14[37]);
  uint64_t v160 = v14[38];
  uint64_t v161 = (void *)(a1 + v160);
  uint64_t v162 = (void *)(a2 + v160);
  uint64_t v163 = sub_1D4469618();
  uint64_t v164 = *(void *)(v163 - 8);
  char v165 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v164 + 48);
  int v166 = v165(v161, 1, v163);
  int v167 = v165(v162, 1, v163);
  if (v166)
  {
    if (!v167)
    {
      (*(void (**)(void *, void *, uint64_t))(v164 + 16))(v161, v162, v163);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v164 + 56))(v161, 0, 1, v163);
      goto LABEL_58;
    }
    goto LABEL_57;
  }
  if (v167)
  {
    (*(void (**)(void *, uint64_t))(v164 + 8))(v161, v163);
LABEL_57:
    uint64_t v168 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v161, v162, *(void *)(*(void *)(v168 - 8) + 64));
    goto LABEL_58;
  }
  (*(void (**)(void *, void *, uint64_t))(v164 + 24))(v161, v162, v163);
LABEL_58:
  uint64_t v169 = v214[39];
  uint64_t v170 = (void *)(a1 + v169);
  uint64_t v171 = (void *)(a2 + v169);
  int v172 = v165((void *)(a1 + v169), 1, v163);
  int v173 = v165(v171, 1, v163);
  if (v172)
  {
    if (!v173)
    {
      (*(void (**)(void *, void *, uint64_t))(v164 + 16))(v170, v171, v163);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v164 + 56))(v170, 0, 1, v163);
      goto LABEL_64;
    }
    goto LABEL_63;
  }
  if (v173)
  {
    (*(void (**)(void *, uint64_t))(v164 + 8))(v170, v163);
LABEL_63:
    uint64_t v174 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v170, v171, *(void *)(*(void *)(v174 - 8) + 64));
    goto LABEL_64;
  }
  (*(void (**)(void *, void *, uint64_t))(v164 + 24))(v170, v171, v163);
LABEL_64:
  uint64_t v175 = v214[40];
  uint64_t v176 = (void *)(a1 + v175);
  uint64_t v177 = (void *)(a2 + v175);
  int v178 = v165((void *)(a1 + v175), 1, v163);
  int v179 = v165(v177, 1, v163);
  if (v178)
  {
    if (!v179)
    {
      (*(void (**)(void *, void *, uint64_t))(v164 + 16))(v176, v177, v163);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v164 + 56))(v176, 0, 1, v163);
      goto LABEL_70;
    }
    goto LABEL_69;
  }
  if (v179)
  {
    (*(void (**)(void *, uint64_t))(v164 + 8))(v176, v163);
LABEL_69:
    uint64_t v180 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v176, v177, *(void *)(*(void *)(v180 - 8) + 64));
    goto LABEL_70;
  }
  (*(void (**)(void *, void *, uint64_t))(v164 + 24))(v176, v177, v163);
LABEL_70:
  uint64_t v181 = v214[41];
  uint64_t v182 = (void *)(a1 + v181);
  uint64_t v183 = (void *)(a2 + v181);
  int v184 = v165((void *)(a1 + v181), 1, v163);
  int v185 = v165(v183, 1, v163);
  if (!v184)
  {
    if (!v185)
    {
      (*(void (**)(void *, void *, uint64_t))(v164 + 24))(v182, v183, v163);
      goto LABEL_76;
    }
    (*(void (**)(void *, uint64_t))(v164 + 8))(v182, v163);
    goto LABEL_75;
  }
  if (v185)
  {
LABEL_75:
    uint64_t v186 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v182, v183, *(void *)(*(void *)(v186 - 8) + 64));
    goto LABEL_76;
  }
  (*(void (**)(void *, void *, uint64_t))(v164 + 16))(v182, v183, v163);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v164 + 56))(v182, 0, 1, v163);
LABEL_76:
  *(unsigned char *)(a1 + v214[42]) = *(unsigned char *)(a2 + v214[42]);
  *(unsigned char *)(a1 + v214[43]) = *(unsigned char *)(a2 + v214[43]);
  *(unsigned char *)(a1 + v214[44]) = *(unsigned char *)(a2 + v214[44]);
  uint64_t v187 = *(int *)(v213 + 24);
  id v188 = (void *)(a1 + v187);
  uint64_t v189 = (void *)(a2 + v187);
  uint64_t v190 = v189[1];
  *id v188 = *v189;
  v188[1] = v190;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D4402230(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D4402290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  long long v8 = *(_OWORD *)(a2 + 256);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = v8;
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  memcpy((void *)(a1 + 304), (const void *)(a2 + 304), 0x120uLL);
  id v9 = (int *)type metadata accessor for FMIPDevice();
  uint64_t v10 = v9[28];
  uint64_t v11 = (unsigned char *)(a1 + v10);
  id v12 = (unsigned char *)(a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for FMIPPlaySoundMetadata();
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_1D42D5DA0(&qword_1EBD7CEA0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    *uint64_t v11 = *v12;
    uint64_t v16 = v13[5];
    uint64_t v17 = &v11[v16];
    uint64_t v18 = &v12[v16];
    uint64_t v19 = sub_1D4469618();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    *(_OWORD *)&v11[v13[6]] = *(_OWORD *)&v12[v13[6]];
    *(_OWORD *)&v11[v13[7]] = *(_OWORD *)&v12[v13[7]];
    *(_OWORD *)&v11[v13[8]] = *(_OWORD *)&v12[v13[8]];
    *(_OWORD *)&v11[v13[9]] = *(_OWORD *)&v12[v13[9]];
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v20 = v9[29];
  int v21 = (_DWORD *)(a1 + v20);
  int v22 = (_DWORD *)(a2 + v20);
  uint64_t v23 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = sub_1D42D5DA0(&qword_1EBD7D4E0);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    *int v21 = *v22;
    *(_OWORD *)(v21 + 2) = *(_OWORD *)(v22 + 2);
    *(_OWORD *)(v21 + 6) = *(_OWORD *)(v22 + 6);
    *(_OWORD *)(v21 + 10) = *(_OWORD *)(v22 + 10);
    *((unsigned char *)v21 + 56) = *((unsigned char *)v22 + 56);
    uint64_t v26 = *(int *)(v23 + 48);
    uint64_t v27 = (char *)v21 + v26;
    uint64_t v28 = (char *)v22 + v26;
    uint64_t v29 = sub_1D4469618();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v30 = v9[30];
  uint64_t v31 = (unsigned char *)(a1 + v30);
  uint64_t v32 = (unsigned char *)(a2 + v30);
  uint64_t v33 = type metadata accessor for FMIPLockMetadata();
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    uint64_t v35 = sub_1D42D5DA0(&qword_1EBD7CDF8);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    unsigned char *v31 = *v32;
    uint64_t v36 = *(int *)(v33 + 20);
    uint64_t v37 = &v31[v36];
    uint64_t v38 = &v32[v36];
    uint64_t v39 = sub_1D4469618();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  uint64_t v40 = v9[31];
  uint64_t v41 = (unsigned char *)(a1 + v40);
  uint64_t v42 = (unsigned char *)(a2 + v40);
  uint64_t v43 = (int *)type metadata accessor for FMIPEraseMetadata();
  uint64_t v44 = *((void *)v43 - 1);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v44 + 48))(v42, 1, v43))
  {
    uint64_t v45 = sub_1D42D5DA0(&qword_1EBD7CE38);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    unsigned char *v41 = *v42;
    uint64_t v46 = v43[5];
    int v47 = &v41[v46];
    int v48 = &v42[v46];
    uint64_t v49 = sub_1D4469618();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
    *(_OWORD *)&v41[v43[6]] = *(_OWORD *)&v42[v43[6]];
    *(_OWORD *)&v41[v43[7]] = *(_OWORD *)&v42[v43[7]];
    v41[v43[8]] = v42[v43[8]];
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v44 + 56))(v41, 0, 1, v43);
  }
  uint64_t v50 = v9[32];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (void *)(a2 + v50);
  uint64_t v53 = type metadata accessor for FMIPItemGroup();
  uint64_t v54 = *(void *)(v53 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    uint64_t v55 = sub_1D42D5DA0(&qword_1EBD7E670);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    *uint64_t v51 = *v52;
    *(_OWORD *)(v51 + 1) = *(_OWORD *)(v52 + 1);
    *(_OWORD *)(v51 + 3) = *(_OWORD *)(v52 + 3);
    *(_OWORD *)(v51 + 5) = *(_OWORD *)(v52 + 5);
    *(_OWORD *)(v51 + 7) = *(_OWORD *)(v52 + 7);
    v51[9] = v52[9];
    uint64_t v56 = *(int *)(v53 + 48);
    __dst = (_OWORD *)((char *)v51 + v56);
    uint64_t v87 = a3;
    uint64_t v57 = (_OWORD *)((char *)v52 + v56);
    uint64_t v58 = type metadata accessor for FMIPItemLostModeMetadata();
    uint64_t v59 = *(void *)(v58 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      uint64_t v60 = sub_1D42D5DA0(&qword_1EBD7E710);
      memcpy(__dst, v57, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      long long v61 = v57[1];
      _OWORD *__dst = *v57;
      __dst[1] = v61;
      uint64_t v62 = *(int *)(v58 + 24);
      uint64_t v84 = (char *)v57 + v62;
      uint64_t v85 = (char *)__dst + v62;
      uint64_t v63 = sub_1D4469618();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v85, v84, v63);
      *(_OWORD *)((char *)__dst + *(int *)(v58 + 28)) = *(_OWORD *)((char *)v57 + *(int *)(v58 + 28));
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v59 + 56))(__dst, 0, 1, v58);
    }
    *(void *)((char *)v51 + *(int *)(v53 + 52)) = *(void *)((char *)v52 + *(int *)(v53 + 52));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    a3 = v87;
  }
  *(unsigned char *)(a1 + v9[33]) = *(unsigned char *)(a2 + v9[33]);
  *(unsigned char *)(a1 + v9[34]) = *(unsigned char *)(a2 + v9[34]);
  *(unsigned char *)(a1 + v9[35]) = *(unsigned char *)(a2 + v9[35]);
  *(_OWORD *)(a1 + v9[36]) = *(_OWORD *)(a2 + v9[36]);
  *(void *)(a1 + v9[37]) = *(void *)(a2 + v9[37]);
  uint64_t v64 = v9[38];
  uint64_t v65 = (void *)(a1 + v64);
  uint64_t v66 = (const void *)(a2 + v64);
  uint64_t v67 = sub_1D4469618();
  uint64_t v68 = *(void *)(v67 - 8);
  uint64_t v69 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v68 + 48);
  if (v69(v66, 1, v67))
  {
    uint64_t v70 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v65, v66, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v68 + 32))(v65, v66, v67);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
  }
  uint64_t v71 = v9[39];
  int v72 = (void *)(a1 + v71);
  uint64_t v73 = (const void *)(a2 + v71);
  if (v69((const void *)(a2 + v71), 1, v67))
  {
    uint64_t v74 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v68 + 32))(v72, v73, v67);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v72, 0, 1, v67);
  }
  uint64_t v75 = v9[40];
  uint64_t v76 = (void *)(a1 + v75);
  uint64_t v77 = (const void *)(a2 + v75);
  if (v69((const void *)(a2 + v75), 1, v67))
  {
    uint64_t v78 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v68 + 32))(v76, v77, v67);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v76, 0, 1, v67);
  }
  uint64_t v79 = v9[41];
  uint64_t v80 = (void *)(a1 + v79);
  uint64_t v81 = (const void *)(a2 + v79);
  if (v69((const void *)(a2 + v79), 1, v67))
  {
    uint64_t v82 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v68 + 32))(v80, v81, v67);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v80, 0, 1, v67);
  }
  *(unsigned char *)(a1 + v9[42]) = *(unsigned char *)(a2 + v9[42]);
  *(unsigned char *)(a1 + v9[43]) = *(unsigned char *)(a2 + v9[43]);
  *(unsigned char *)(a1 + v9[44]) = *(unsigned char *)(a2 + v9[44]);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1D4402DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = (unsigned char *)(a2 + 256);
  uint64_t v7 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v17;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  uint64_t v18 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v18;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(unsigned char *)(a1 + 257) = v6[1];
  *(unsigned char *)(a1 + 258) = v6[2];
  *(unsigned char *)(a1 + 259) = *(unsigned char *)(a2 + 259);
  uint64_t v20 = *(void **)(a1 + 264);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);

  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = v6[24];
  *(unsigned char *)(a1 + 281) = v6[25];
  *(unsigned char *)(a1 + 282) = v6[26];
  *(unsigned char *)(a1 + 283) = *(unsigned char *)(a2 + 283);
  int v21 = *(void **)(a1 + 288);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);

  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  uint64_t v217 = a3;
  if (*(void *)(a1 + 472))
  {
    if (*(void *)(a2 + 472))
    {
      uint64_t v22 = *(void *)(a2 + 312);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = v22;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)(a2 + 336);
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(a2 + 352);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = v24;
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void *)(a2 + 368);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = v25;
      swift_bridgeObjectRelease();
      uint64_t v26 = *(void *)(a2 + 384);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      *(void *)(a1 + 384) = v26;
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void *)(a2 + 400);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(void *)(a1 + 400) = v27;
      swift_bridgeObjectRelease();
      uint64_t v28 = *(void *)(a2 + 416);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(void *)(a1 + 416) = v28;
      swift_bridgeObjectRelease();
      uint64_t v29 = *(void *)(a2 + 432);
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(void *)(a1 + 432) = v29;
      swift_bridgeObjectRelease();
      uint64_t v30 = *(void *)(a2 + 448);
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      *(void *)(a1 + 448) = v30;
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)(a2 + 464);
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      *(void *)(a1 + 464) = v31;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 472) = *(void *)(a2 + 472);
      swift_bridgeObjectRelease();
      uint64_t v32 = *(void *)(a2 + 488);
      *(void *)(a1 + 480) = *(void *)(a2 + 480);
      *(void *)(a1 + 488) = v32;
      swift_bridgeObjectRelease();
      uint64_t v33 = *(void *)(a2 + 504);
      *(void *)(a1 + 496) = *(void *)(a2 + 496);
      *(void *)(a1 + 504) = v33;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      *(void *)(a1 + 552) = *(void *)(a2 + 552);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D42FDA08(a1 + 304);
  }
  memcpy((void *)(a1 + 304), (const void *)(a2 + 304), 0x120uLL);
LABEL_6:
  uint64_t v34 = (int *)type metadata accessor for FMIPDevice();
  uint64_t v35 = v34[28];
  uint64_t v36 = (unsigned char *)(a1 + v35);
  uint64_t v37 = (unsigned char *)(a2 + v35);
  uint64_t v38 = (int *)type metadata accessor for FMIPPlaySoundMetadata();
  uint64_t v39 = *((void *)v38 - 1);
  uint64_t v40 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v39 + 48);
  int v41 = v40(v36, 1, v38);
  int v42 = v40(v37, 1, v38);
  if (v41)
  {
    if (!v42)
    {
      *uint64_t v36 = *v37;
      uint64_t v43 = v38[5];
      uint64_t v44 = &v36[v43];
      uint64_t v45 = &v37[v43];
      uint64_t v46 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
      *(_OWORD *)&v36[v38[6]] = *(_OWORD *)&v37[v38[6]];
      *(_OWORD *)&v36[v38[7]] = *(_OWORD *)&v37[v38[7]];
      *(_OWORD *)&v36[v38[8]] = *(_OWORD *)&v37[v38[8]];
      *(_OWORD *)&v36[v38[9]] = *(_OWORD *)&v37[v38[9]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v39 + 56))(v36, 0, 1, v38);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v42)
  {
    sub_1D4402230((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for FMIPPlaySoundMetadata);
LABEL_11:
    uint64_t v47 = sub_1D42D5DA0(&qword_1EBD7CEA0);
    memcpy(v36, v37, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_12;
  }
  *uint64_t v36 = *v37;
  uint64_t v101 = v38[5];
  uint64_t v102 = &v36[v101];
  uint64_t v103 = &v37[v101];
  uint64_t v104 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v104 - 8) + 40))(v102, v103, v104);
  uint64_t v105 = v38[6];
  uint64_t v106 = &v36[v105];
  uint64_t v107 = (uint64_t *)&v37[v105];
  uint64_t v109 = *v107;
  uint64_t v108 = v107[1];
  *uint64_t v106 = v109;
  v106[1] = v108;
  swift_bridgeObjectRelease();
  uint64_t v110 = v38[7];
  uint64_t v111 = &v36[v110];
  uint64_t v112 = (uint64_t *)&v37[v110];
  uint64_t v114 = *v112;
  uint64_t v113 = v112[1];
  *uint64_t v111 = v114;
  v111[1] = v113;
  swift_bridgeObjectRelease();
  uint64_t v115 = v38[8];
  uint64_t v116 = &v36[v115];
  uint64_t v117 = (uint64_t *)&v37[v115];
  uint64_t v119 = *v117;
  uint64_t v118 = v117[1];
  *uint64_t v116 = v119;
  v116[1] = v118;
  swift_bridgeObjectRelease();
  uint64_t v120 = v38[9];
  uint64_t v121 = &v36[v120];
  uint64_t v122 = (uint64_t *)&v37[v120];
  uint64_t v124 = *v122;
  uint64_t v123 = v122[1];
  void *v121 = v124;
  v121[1] = v123;
  swift_bridgeObjectRelease();
LABEL_12:
  uint64_t v48 = v34[29];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  int v54 = v53(v49, 1, v51);
  int v55 = v53(v50, 1, v51);
  if (v54)
  {
    if (!v55)
    {
      *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
      *(_OWORD *)(v49 + 8) = *(_OWORD *)(v50 + 8);
      *(_OWORD *)(v49 + 24) = *(_OWORD *)(v50 + 24);
      *(_OWORD *)(v49 + 40) = *(_OWORD *)(v50 + 40);
      *(unsigned char *)(v49 + 56) = *(unsigned char *)(v50 + 56);
      uint64_t v56 = *(int *)(v51 + 48);
      uint64_t v57 = v49 + v56;
      uint64_t v58 = v50 + v56;
      uint64_t v59 = sub_1D4469618();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v55)
  {
    sub_1D4402230(v49, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
LABEL_17:
    uint64_t v60 = sub_1D42D5DA0(&qword_1EBD7D4E0);
    memcpy((void *)v49, (const void *)v50, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_18;
  }
  *(unsigned char *)uint64_t v49 = *(unsigned char *)v50;
  *(unsigned char *)(v49 + 1) = *(unsigned char *)(v50 + 1);
  *(unsigned char *)(v49 + 2) = *(unsigned char *)(v50 + 2);
  *(unsigned char *)(v49 + 3) = *(unsigned char *)(v50 + 3);
  uint64_t v125 = *(void *)(v50 + 16);
  *(void *)(v49 + 8) = *(void *)(v50 + 8);
  *(void *)(v49 + 16) = v125;
  swift_bridgeObjectRelease();
  uint64_t v126 = *(void *)(v50 + 32);
  *(void *)(v49 + 24) = *(void *)(v50 + 24);
  *(void *)(v49 + 32) = v126;
  swift_bridgeObjectRelease();
  uint64_t v127 = *(void *)(v50 + 48);
  *(void *)(v49 + 40) = *(void *)(v50 + 40);
  *(void *)(v49 + 48) = v127;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v49 + 56) = *(unsigned char *)(v50 + 56);
  uint64_t v128 = *(int *)(v51 + 48);
  uint64_t v129 = v49 + v128;
  uint64_t v130 = v50 + v128;
  uint64_t v131 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v131 - 8) + 40))(v129, v130, v131);
LABEL_18:
  uint64_t v61 = v34[30];
  uint64_t v62 = (unsigned char *)(a1 + v61);
  uint64_t v63 = (unsigned char *)(a2 + v61);
  uint64_t v64 = type metadata accessor for FMIPLockMetadata();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v66 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v65 + 48);
  int v67 = v66(v62, 1, v64);
  int v68 = v66(v63, 1, v64);
  if (v67)
  {
    if (!v68)
    {
      unsigned char *v62 = *v63;
      uint64_t v69 = *(int *)(v64 + 20);
      uint64_t v70 = &v62[v69];
      uint64_t v71 = &v63[v69];
      uint64_t v72 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v68)
  {
    sub_1D4402230((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FMIPLockMetadata);
LABEL_23:
    uint64_t v73 = sub_1D42D5DA0(&qword_1EBD7CDF8);
    memcpy(v62, v63, *(void *)(*(void *)(v73 - 8) + 64));
    goto LABEL_24;
  }
  unsigned char *v62 = *v63;
  uint64_t v132 = *(int *)(v64 + 20);
  uint64_t v133 = &v62[v132];
  uint64_t v134 = &v63[v132];
  uint64_t v135 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v135 - 8) + 40))(v133, v134, v135);
LABEL_24:
  uint64_t v74 = v34[31];
  uint64_t v75 = (unsigned char *)(a1 + v74);
  uint64_t v76 = (unsigned char *)(a2 + v74);
  uint64_t v77 = (int *)type metadata accessor for FMIPEraseMetadata();
  uint64_t v78 = *((void *)v77 - 1);
  uint64_t v79 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v78 + 48);
  int v80 = v79(v75, 1, v77);
  int v81 = v79(v76, 1, v77);
  if (v80)
  {
    if (!v81)
    {
      unsigned char *v75 = *v76;
      uint64_t v82 = v77[5];
      uint64_t v83 = &v75[v82];
      uint64_t v84 = &v76[v82];
      uint64_t v85 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v85 - 8) + 32))(v83, v84, v85);
      *(_OWORD *)&v75[v77[6]] = *(_OWORD *)&v76[v77[6]];
      *(_OWORD *)&v75[v77[7]] = *(_OWORD *)&v76[v77[7]];
      v75[v77[8]] = v76[v77[8]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v78 + 56))(v75, 0, 1, v77);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v81)
  {
    sub_1D4402230((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for FMIPEraseMetadata);
LABEL_29:
    uint64_t v86 = sub_1D42D5DA0(&qword_1EBD7CE38);
    memcpy(v75, v76, *(void *)(*(void *)(v86 - 8) + 64));
    goto LABEL_30;
  }
  unsigned char *v75 = *v76;
  uint64_t v136 = v77[5];
  uint64_t v137 = &v75[v136];
  uint64_t v138 = &v76[v136];
  uint64_t v139 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v139 - 8) + 40))(v137, v138, v139);
  uint64_t v140 = v77[6];
  int v141 = &v75[v140];
  uint64_t v142 = (uint64_t *)&v76[v140];
  uint64_t v144 = *v142;
  uint64_t v143 = v142[1];
  *int v141 = v144;
  v141[1] = v143;
  swift_bridgeObjectRelease();
  uint64_t v145 = v77[7];
  uint64_t v146 = &v75[v145];
  uint64_t v147 = (uint64_t *)&v76[v145];
  uint64_t v149 = *v147;
  uint64_t v148 = v147[1];
  void *v146 = v149;
  v146[1] = v148;
  swift_bridgeObjectRelease();
  v75[v77[8]] = v76[v77[8]];
LABEL_30:
  uint64_t v87 = v34[32];
  uint64_t v88 = a1 + v87;
  uint64_t v89 = a2 + v87;
  uint64_t v90 = type metadata accessor for FMIPItemGroup();
  uint64_t v91 = *(void *)(v90 - 8);
  int v92 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
  int v93 = v92(v88, 1, v90);
  int v94 = v92(v89, 1, v90);
  if (!v93)
  {
    if (v94)
    {
      sub_1D4402230(v88, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      goto LABEL_36;
    }
    *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
    *(void *)(v88 + 16) = *(void *)(v89 + 16);
    swift_bridgeObjectRelease();
    uint64_t v150 = *(void *)(v89 + 32);
    *(void *)(v88 + 24) = *(void *)(v89 + 24);
    *(void *)(v88 + 32) = v150;
    swift_bridgeObjectRelease();
    *(void *)(v88 + 40) = *(void *)(v89 + 40);
    swift_bridgeObjectRelease();
    *(void *)(v88 + 48) = *(void *)(v89 + 48);
    swift_bridgeObjectRelease();
    *(void *)(v88 + 56) = *(void *)(v89 + 56);
    swift_bridgeObjectRelease();
    uint64_t v151 = *(void *)(v89 + 72);
    *(void *)(v88 + 64) = *(void *)(v89 + 64);
    *(void *)(v88 + 72) = v151;
    swift_bridgeObjectRelease();
    uint64_t v152 = *(int *)(v90 + 48);
    uint64_t v153 = v88 + v152;
    __dsta = (_OWORD *)(v89 + v152);
    uint64_t v154 = type metadata accessor for FMIPItemLostModeMetadata();
    uint64_t v211 = *(void *)(v154 - 8);
    uint64_t v214 = v153;
    uint64_t v155 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v211 + 48);
    LODWORD(v153) = v155(v153, 1, v154);
    int v156 = v155((uint64_t)__dsta, 1, v154);
    if (v153)
    {
      if (!v156)
      {
        long long v162 = __dsta[1];
        *(_OWORD *)uint64_t v214 = *__dsta;
        *(_OWORD *)(v214 + 16) = v162;
        uint64_t v163 = *(int *)(v154 + 24);
        uint64_t v164 = v214 + v163;
        uint64_t v210 = (char *)__dsta + v163;
        uint64_t v165 = sub_1D4469618();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v164, v210, v165);
        *(_OWORD *)(v214 + *(int *)(v154 + 28)) = *(_OWORD *)((char *)__dsta + *(int *)(v154 + 28));
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v211 + 56))(v214, 0, 1, v154);
        goto LABEL_51;
      }
      size_t v157 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E710) - 8) + 64);
      uint64_t v158 = (void *)v214;
    }
    else
    {
      if (!v156)
      {
        uint64_t v166 = *((void *)__dsta + 1);
        *(void *)uint64_t v214 = *(void *)__dsta;
        *(void *)(v214 + 8) = v166;
        swift_bridgeObjectRelease();
        uint64_t v167 = *((void *)__dsta + 3);
        *(void *)(v214 + 16) = *((void *)__dsta + 2);
        *(void *)(v214 + 24) = v167;
        swift_bridgeObjectRelease();
        uint64_t v168 = *(int *)(v154 + 24);
        uint64_t v169 = v214 + v168;
        uint64_t v213 = (char *)__dsta + v168;
        uint64_t v170 = sub_1D4469618();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v170 - 8) + 40))(v169, v213, v170);
        uint64_t v171 = *(int *)(v154 + 28);
        int v172 = (void *)(v214 + v171);
        int v173 = (uint64_t *)((char *)__dsta + v171);
        uint64_t v175 = *v173;
        uint64_t v174 = v173[1];
        *int v172 = v175;
        v172[1] = v174;
        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
      sub_1D4402230(v214, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
      size_t v157 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E710) - 8) + 64);
      uint64_t v158 = (void *)v214;
    }
    memcpy(v158, __dsta, v157);
LABEL_51:
    *(void *)(v88 + *(int *)(v90 + 52)) = *(void *)(v89 + *(int *)(v90 + 52));
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
  if (v94)
  {
LABEL_36:
    uint64_t v100 = sub_1D42D5DA0(&qword_1EBD7E670);
    memcpy((void *)v88, (const void *)v89, *(void *)(*(void *)(v100 - 8) + 64));
    goto LABEL_52;
  }
  *(void *)uint64_t v88 = *(void *)v89;
  *(_OWORD *)(v88 + 8) = *(_OWORD *)(v89 + 8);
  *(_OWORD *)(v88 + 24) = *(_OWORD *)(v89 + 24);
  *(_OWORD *)(v88 + 40) = *(_OWORD *)(v89 + 40);
  *(_OWORD *)(v88 + 56) = *(_OWORD *)(v89 + 56);
  *(void *)(v88 + 72) = *(void *)(v89 + 72);
  uint64_t v95 = *(int *)(v90 + 48);
  __dst = (_OWORD *)(v88 + v95);
  uint64_t v96 = (_OWORD *)(v89 + v95);
  uint64_t v97 = type metadata accessor for FMIPItemLostModeMetadata();
  uint64_t v98 = *(void *)(v97 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
  {
    uint64_t v99 = sub_1D42D5DA0(&qword_1EBD7E710);
    memcpy(__dst, v96, *(void *)(*(void *)(v99 - 8) + 64));
  }
  else
  {
    long long v159 = v96[1];
    _OWORD *__dst = *v96;
    __dst[1] = v159;
    uint64_t v160 = *(int *)(v97 + 24);
    uint64_t v209 = (char *)v96 + v160;
    uint64_t v212 = (char *)__dst + v160;
    uint64_t v161 = sub_1D4469618();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 32))(v212, v209, v161);
    *(_OWORD *)((char *)__dst + *(int *)(v97 + 28)) = *(_OWORD *)((char *)v96 + *(int *)(v97 + 28));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v98 + 56))(__dst, 0, 1, v97);
  }
  *(void *)(v88 + *(int *)(v90 + 52)) = *(void *)(v89 + *(int *)(v90 + 52));
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
LABEL_52:
  *(unsigned char *)(a1 + v34[33]) = *(unsigned char *)(a2 + v34[33]);
  *(unsigned char *)(a1 + v34[34]) = *(unsigned char *)(a2 + v34[34]);
  *(unsigned char *)(a1 + v34[35]) = *(unsigned char *)(a2 + v34[35]);
  uint64_t v176 = v34[36];
  uint64_t v177 = (void *)(a1 + v176);
  int v178 = (uint64_t *)(a2 + v176);
  uint64_t v180 = *v178;
  uint64_t v179 = v178[1];
  void *v177 = v180;
  v177[1] = v179;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v34[37]) = *(void *)(a2 + v34[37]);
  uint64_t v181 = v34[38];
  uint64_t v182 = (void *)(a1 + v181);
  uint64_t v183 = (void *)(a2 + v181);
  uint64_t v184 = sub_1D4469618();
  uint64_t v185 = *(void *)(v184 - 8);
  uint64_t v186 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v185 + 48);
  int v187 = v186(v182, 1, v184);
  int v188 = v186(v183, 1, v184);
  if (v187)
  {
    if (!v188)
    {
      (*(void (**)(void *, void *, uint64_t))(v185 + 32))(v182, v183, v184);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v185 + 56))(v182, 0, 1, v184);
      goto LABEL_58;
    }
    goto LABEL_57;
  }
  if (v188)
  {
    (*(void (**)(void *, uint64_t))(v185 + 8))(v182, v184);
LABEL_57:
    uint64_t v189 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v182, v183, *(void *)(*(void *)(v189 - 8) + 64));
    goto LABEL_58;
  }
  (*(void (**)(void *, void *, uint64_t))(v185 + 40))(v182, v183, v184);
LABEL_58:
  uint64_t v190 = v34[39];
  uint64_t v191 = (void *)(a1 + v190);
  uint64_t v192 = (void *)(a2 + v190);
  int v193 = v186((void *)(a1 + v190), 1, v184);
  int v194 = v186(v192, 1, v184);
  if (v193)
  {
    if (!v194)
    {
      (*(void (**)(void *, void *, uint64_t))(v185 + 32))(v191, v192, v184);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v185 + 56))(v191, 0, 1, v184);
      goto LABEL_64;
    }
    goto LABEL_63;
  }
  if (v194)
  {
    (*(void (**)(void *, uint64_t))(v185 + 8))(v191, v184);
LABEL_63:
    uint64_t v195 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v191, v192, *(void *)(*(void *)(v195 - 8) + 64));
    goto LABEL_64;
  }
  (*(void (**)(void *, void *, uint64_t))(v185 + 40))(v191, v192, v184);
LABEL_64:
  uint64_t v196 = v34[40];
  char v197 = (void *)(a1 + v196);
  BOOL v198 = (void *)(a2 + v196);
  int v199 = v186((void *)(a1 + v196), 1, v184);
  int v200 = v186(v198, 1, v184);
  if (v199)
  {
    if (!v200)
    {
      (*(void (**)(void *, void *, uint64_t))(v185 + 32))(v197, v198, v184);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v185 + 56))(v197, 0, 1, v184);
      goto LABEL_70;
    }
    goto LABEL_69;
  }
  if (v200)
  {
    (*(void (**)(void *, uint64_t))(v185 + 8))(v197, v184);
LABEL_69:
    uint64_t v201 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v197, v198, *(void *)(*(void *)(v201 - 8) + 64));
    goto LABEL_70;
  }
  (*(void (**)(void *, void *, uint64_t))(v185 + 40))(v197, v198, v184);
LABEL_70:
  uint64_t v202 = v34[41];
  uint64_t v203 = (void *)(a1 + v202);
  uint64_t v204 = (void *)(a2 + v202);
  int v205 = v186((void *)(a1 + v202), 1, v184);
  int v206 = v186(v204, 1, v184);
  if (!v205)
  {
    if (!v206)
    {
      (*(void (**)(void *, void *, uint64_t))(v185 + 40))(v203, v204, v184);
      goto LABEL_76;
    }
    (*(void (**)(void *, uint64_t))(v185 + 8))(v203, v184);
    goto LABEL_75;
  }
  if (v206)
  {
LABEL_75:
    uint64_t v207 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v203, v204, *(void *)(*(void *)(v207 - 8) + 64));
    goto LABEL_76;
  }
  (*(void (**)(void *, void *, uint64_t))(v185 + 32))(v203, v204, v184);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v185 + 56))(v203, 0, 1, v184);
LABEL_76:
  *(unsigned char *)(a1 + v34[42]) = *(unsigned char *)(a2 + v34[42]);
  *(unsigned char *)(a1 + v34[43]) = *(unsigned char *)(a2 + v34[43]);
  *(unsigned char *)(a1 + v34[44]) = *(unsigned char *)(a2 + v34[44]);
  *(_OWORD *)(a1 + *(int *)(v217 + 24)) = *(_OWORD *)(a2 + *(int *)(v217 + 24));
  swift_release();
  return a1;
}

uint64_t sub_1D4404308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D440431C);
}

uint64_t sub_1D440431C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMIPDevice();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1D44043DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D44043F0);
}

uint64_t sub_1D44043F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FMIPDevice();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for FMIPMonitoredDevice(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6CB0D8);
}

uint64_t sub_1D44044CC()
{
  uint64_t result = type metadata accessor for FMIPDevice();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D4404574(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D4469958();
  uint64_t v36 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v34 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1D44699B8();
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v32 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPDevice();
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v31 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v7 - 8);
  unint64_t v10 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v28 - v11;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1D4469928();
  sub_1D42D7FAC(v13, (uint64_t)qword_1EBD83228);
  sub_1D42D2308(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v14 = sub_1D44698F8();
  os_log_type_t v15 = sub_1D446A038();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v30 = v4;
    uint64_t v17 = v16;
    uint64_t v28 = swift_slowAlloc();
    aBlock[0] = v28;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v37 = sub_1D42CB9EC(0x6E756F5379616C70, 0xE900000000000064, aBlock);
    uint64_t v29 = a1;
    sub_1D446A188();
    *(_WORD *)(v17 + 12) = 2080;
    uint64_t v18 = FMIPDevice.debugDescription.getter();
    uint64_t v37 = sub_1D42CB9EC(v18, v19, aBlock);
    a1 = v29;
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D4402230((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    _os_log_impl(&dword_1D4271000, v14, v15, "FMIPServerInteractionController: stopMonitoring: action: %s, device: %s", (uint8_t *)v17, 0x16u);
    uint64_t v20 = v28;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v20, -1, -1);
    uint64_t v21 = v17;
    uint64_t v4 = v30;
    MEMORY[0x1D9447730](v21, -1, -1);
  }
  else
  {
    sub_1D4402230((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  }

  sub_1D42D2308(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  unint64_t v22 = (*(unsigned __int8 *)(v31 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v2;
  sub_1D42BB5E0((uint64_t)v10, v23 + v22, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  aBlock[4] = (uint64_t)sub_1D440522C;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_1D42BD950;
  aBlock[3] = (uint64_t)&unk_1F2C0F7C0;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v25 = v32;
  sub_1D4469988();
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1D42C626C((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  uint64_t v26 = v34;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v25, v26, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v4);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v35);
  return swift_release();
}

uint64_t sub_1D4404B14()
{
  uint64_t v1 = (int *)type metadata accessor for FMIPDevice();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v35 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + v3 + 472))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v4 + v1[28];
  uint64_t v6 = type metadata accessor for FMIPPlaySoundMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = v5 + *(int *)(v6 + 20);
    uint64_t v8 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = v4 + v1[29];
  uint64_t v10 = type metadata accessor for FMIPDeviceLostModeMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(v10 + 48);
    uint64_t v12 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = v4 + v1[30];
  uint64_t v14 = type metadata accessor for FMIPLockMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = v13 + *(int *)(v14 + 20);
    uint64_t v16 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  uint64_t v17 = v4 + v1[31];
  uint64_t v18 = type metadata accessor for FMIPEraseMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
  {
    uint64_t v19 = v17 + *(int *)(v18 + 20);
    uint64_t v20 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = v4 + v1[32];
  uint64_t v22 = type metadata accessor for FMIPItemGroup();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v21 + *(int *)(v22 + 48);
    uint64_t v24 = type metadata accessor for FMIPItemLostModeMetadata();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v23, 1, v24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = v23 + *(int *)(v24 + 24);
      uint64_t v26 = sub_1D4469618();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = v4 + v1[38];
  uint64_t v28 = sub_1D4469618();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  if (!v30(v27, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
  }
  uint64_t v31 = v4 + v1[39];
  if (!v30(v31, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v28);
  }
  uint64_t v32 = v4 + v1[40];
  if (!v30(v32, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v28);
  }
  uint64_t v33 = v4 + v1[41];
  if (!v30(v33, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v33, v28);
  }
  return MEMORY[0x1F4186498](v0, v3 + v35, v2 | 7);
}

uint64_t sub_1D440522C()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (uint64_t *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  return sub_1D43FAA2C(v2, v3);
}

uint64_t sub_1D4405290()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D44052D0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EBD83228);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1D44698F8();
  os_log_type_t v8 = sub_1D446A038();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v15[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_1D42CB9EC(a1, a2, v15);
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D4271000, v7, v8, "FMIPManager: didReceive new image version: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v10, -1, -1);
    MEMORY[0x1D9447730](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v11 = a3 + OBJC_IVAR____TtC8FMIPCore11FMIPManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1D9447840](v11);
  if (result)
  {
    uint64_t v13 = *(void *)(v11 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v13 + 96))(a3, a1, a2, ObjectType, v13);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D4405500()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPMonitoredDevice(0) - 8);
  uint64_t v62 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v53 = *(void *)(v1 + 64);
  uint64_t v2 = (int *)type metadata accessor for FMIPDevice();
  uint64_t v3 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v61 = *(void *)(*((void *)v2 - 1) + 64);
  uint64_t v65 = v0;
  uint64_t v56 = (v62 + 16) & ~v62;
  uint64_t v4 = v0 + v56;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + v56 + 472))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v4 + v2[28];
  uint64_t v6 = type metadata accessor for FMIPPlaySoundMetadata();
  uint64_t v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  if (!v58(v5, 1, v6))
  {
    uint64_t v7 = v5 + *(int *)(v6 + 20);
    uint64_t v8 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = v4 + v2[29];
  uint64_t v64 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v57 = *(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 48);
  if (!v57(v9, 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v9 + *(int *)(v64 + 48);
    uint64_t v11 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = v4 + v2[30];
  uint64_t v63 = type metadata accessor for FMIPLockMetadata();
  int v55 = *(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 48);
  if (!v55(v12, 1))
  {
    uint64_t v13 = v12 + *(int *)(v63 + 20);
    uint64_t v14 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  uint64_t v15 = v4 + v2[31];
  uint64_t v16 = type metadata accessor for FMIPEraseMetadata();
  int v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  if (!v54(v15, 1, v16))
  {
    uint64_t v17 = v15 + *(int *)(v16 + 20);
    uint64_t v18 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = v4 + v2[32];
  uint64_t v20 = type metadata accessor for FMIPItemGroup();
  uint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48);
  if (!v52(v19, 1, v20))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = v19 + *(int *)(v20 + 48);
    uint64_t v22 = v20;
    uint64_t v23 = type metadata accessor for FMIPItemLostModeMetadata();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v21, 1, v23))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = v3;
      uint64_t v25 = v21 + *(int *)(v23 + 24);
      uint64_t v26 = sub_1D4469618();
      uint64_t v27 = v25;
      uint64_t v3 = v24;
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v27, v26);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = v22;
  }
  uint64_t v59 = v20;
  swift_bridgeObjectRelease();
  uint64_t v28 = v4 + v2[38];
  uint64_t v29 = sub_1D4469618();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  if (!v31(v28, 1, v29)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
  }
  uint64_t v66 = v3;
  uint64_t v32 = v53 + v3;
  uint64_t v33 = v4 + v2[39];
  if (!v31(v33, 1, v29)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v33, v29);
  }
  uint64_t v34 = v56 + v32;
  uint64_t v35 = v4 + v2[40];
  if (!v31(v35, 1, v29)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v35, v29);
  }
  uint64_t v36 = v34 & ~v66;
  uint64_t v37 = v4 + v2[41];
  if (!v31(v37, 1, v29)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v37, v29);
  }
  swift_release();
  uint64_t v60 = v36;
  uint64_t v38 = v65 + v36;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(v65 + v36 + 472))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v39 = v38 + v2[28];
  uint64_t v40 = v66;
  if (!v58(v39, 1, v6))
  {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v39 + *(int *)(v6 + 20), v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v41 = v38 + v2[29];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v57)(v41, 1, v64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v41 + *(int *)(v64 + 48), v29);
  }
  uint64_t v42 = v38 + v2[30];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v55)(v42, 1, v63)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v42 + *(int *)(v63 + 20), v29);
  }
  uint64_t v43 = v38 + v2[31];
  if (!v54(v43, 1, v16))
  {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v43 + *(int *)(v16 + 20), v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v44 = v38 + v2[32];
  if (!v52(v44, 1, v59))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v45 = v44 + *(int *)(v59 + 48);
    uint64_t v46 = type metadata accessor for FMIPItemLostModeMetadata();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v45, 1, v46))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v45 + *(int *)(v46 + 24), v29);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v40 = v66;
  }
  swift_bridgeObjectRelease();
  uint64_t v47 = v38 + v2[38];
  if (!v31(v47, 1, v29)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v47, v29);
  }
  uint64_t v48 = v38 + v2[39];
  if (!v31(v48, 1, v29)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v48, v29);
  }
  uint64_t v49 = v38 + v2[40];
  if (!v31(v49, 1, v29)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v49, v29);
  }
  uint64_t v50 = v38 + v2[41];
  if (!v31(v50, 1, v29)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v50, v29);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v65, ((v61 + v60 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v62 | v40 | 7);
}

uint64_t sub_1D44061D4()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPMonitoredDevice(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1D43FB6E4(v0 + v2, v0 + v5, v6);
}

uint64_t sub_1D44062CC()
{
  uint64_t v1 = (int *)type metadata accessor for FMIPDevice();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v35 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + v3 + 472))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v4 + v1[28];
  uint64_t v6 = type metadata accessor for FMIPPlaySoundMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = v5 + *(int *)(v6 + 20);
    uint64_t v8 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = v4 + v1[29];
  uint64_t v10 = type metadata accessor for FMIPDeviceLostModeMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(v10 + 48);
    uint64_t v12 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = v4 + v1[30];
  uint64_t v14 = type metadata accessor for FMIPLockMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = v13 + *(int *)(v14 + 20);
    uint64_t v16 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  uint64_t v17 = v4 + v1[31];
  uint64_t v18 = type metadata accessor for FMIPEraseMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
  {
    uint64_t v19 = v17 + *(int *)(v18 + 20);
    uint64_t v20 = sub_1D4469618();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = v4 + v1[32];
  uint64_t v22 = type metadata accessor for FMIPItemGroup();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v21 + *(int *)(v22 + 48);
    uint64_t v24 = type metadata accessor for FMIPItemLostModeMetadata();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v23, 1, v24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = v23 + *(int *)(v24 + 24);
      uint64_t v26 = sub_1D4469618();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = v4 + v1[38];
  uint64_t v28 = sub_1D4469618();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  if (!v30(v27, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
  }
  uint64_t v31 = v4 + v1[39];
  if (!v30(v31, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v28);
  }
  uint64_t v32 = v4 + v1[40];
  if (!v30(v32, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v28);
  }
  uint64_t v33 = v4 + v1[41];
  if (!v30(v33, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v33, v28);
  }
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, ((((v35 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1D4406A0C()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMIPDevice() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + v3);
  uint64_t v5 = *(void *)(v0 + v3 + 8);
  return sub_1D43FA84C((uint64_t *)(v0 + v2), v4, v5);
}

uint64_t sub_1D4406AA8()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D4406AF0()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

unint64_t sub_1D4406B40()
{
  unint64_t result = qword_1EA6CB0F8;
  if (!qword_1EA6CB0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA6CB0F8);
  }
  return result;
}

uint64_t sub_1D4406B94()
{
  swift_unknownObjectRelease();
  sub_1D42DCFDC(*(void *)(v0 + 40), *(void *)(v0 + 48));
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_1D4406BEC(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = v1[9];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1D42F9444;
  return sub_1D43F91B8(a1, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1D4406CDC()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D4406D1C()
{
  return sub_1D43FA204();
}

uint64_t sub_1D4406D28(uint64_t a1)
{
  return sub_1D4359CC8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t FMIPDeviceLostModeMetadata.canStopLostMode.getter()
{
  return *v0;
}

uint64_t FMIPDeviceLostModeMetadata.isEmailUpdatesEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t FMIPDeviceLostModeMetadata.isSoundEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t FMIPDeviceLostModeMetadata.isTextCustomized.getter()
{
  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t FMIPDeviceLostModeMetadata.ownerNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPDeviceLostModeMetadata.email.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPDeviceLostModeMetadata.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void FMIPDeviceLostModeMetadata.status.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 56);
}

uint64_t FMIPDeviceLostModeMetadata.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMIPDeviceLostModeMetadata() + 48);
  uint64_t v4 = sub_1D4469618();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1D4406E7C(char a1)
{
  uint64_t result = 0x6470556C69616D65;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x72624E72656E776FLL;
      break;
    case 2:
      uint64_t result = 0x6C69616D65;
      break;
    case 3:
      uint64_t result = 0x646E756F73;
      break;
    case 4:
      uint64_t result = 0x6F43737574617473;
      break;
    case 5:
      uint64_t result = 0x74736F4C706F7473;
      break;
    case 6:
      uint64_t result = 1954047348;
      break;
    case 7:
      uint64_t result = 0x7478655472657375;
      break;
    case 8:
      uint64_t result = 0x6954657461657263;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D4406FD0(unsigned __int8 *a1, char *a2)
{
  return sub_1D4412A90(*a1, *a2);
}

uint64_t sub_1D4406FDC()
{
  return sub_1D446A888();
}

uint64_t sub_1D4407024()
{
  return sub_1D445D180();
}

uint64_t sub_1D440702C()
{
  return sub_1D446A888();
}

uint64_t sub_1D4407070@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D4407A00();
  *a1 = result;
  return result;
}

uint64_t sub_1D44070A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D4406E7C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D44070CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D4407A00();
  *a1 = result;
  return result;
}

void sub_1D44070F4(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1D4407100(uint64_t a1)
{
  unint64_t v2 = sub_1D42B1854();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D440713C(uint64_t a1)
{
  unint64_t v2 = sub_1D42B1854();
  return MEMORY[0x1F41862B0](a1, v2);
}

double FMIPDeviceLostModeMetadata.init(lostModeInfo:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7CB80);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D4469618();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v34 - v12;
  id v14 = objc_msgSend(a1, sel_timestamp);
  if (v14)
  {
    uint64_t v15 = v14;
    sub_1D44695D8();

    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v16(v6, v11, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      v16(v13, v6, v7);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_1D4469548();
  sub_1D43C1234((uint64_t)v6);
LABEL_6:
  uint64_t v17 = type metadata accessor for FMIPDeviceLostModeMetadata();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2 + *(int *)(v17 + 48), v13, v7);
  id v18 = objc_msgSend(a1, sel_message);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = sub_1D4469B38();
    unint64_t v22 = v21;
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v22 = 0xE000000000000000;
  }
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v22;
  id v23 = objc_msgSend(a1, sel_email);
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = sub_1D4469B38();
    unint64_t v27 = v26;
  }
  else
  {
    uint64_t v25 = 0;
    unint64_t v27 = 0xE000000000000000;
  }
  *(void *)(a2 + 24) = v25;
  *(void *)(a2 + 32) = v27;
  id v28 = objc_msgSend(a1, sel_phoneNumber);
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = sub_1D4469B38();
    unint64_t v32 = v31;
  }
  else
  {

    uint64_t v30 = 0;
    unint64_t v32 = 0xE000000000000000;
  }
  *(void *)(a2 + 8) = v30;
  *(void *)(a2 + 16) = v32;
  *(void *)&double result = 0x100000001;
  *(_DWORD *)a2 = 1;
  *(unsigned char *)(a2 + 56) = 2;
  return result;
}

void *initializeBufferWithCopyOfBuffer for FMIPDeviceLostModeMetadata(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v5 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v5;
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    uint64_t v8 = *(int *)(a3 + 48);
    uint64_t v9 = (uint64_t)a2 + v8;
    uint64_t v10 = a1 + v8;
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v11 = sub_1D4469618();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t assignWithCopy for FMIPDeviceLostModeMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(int *)(a3 + 48);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for FMIPDeviceLostModeMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v4 = *(int *)(a3 + 48);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for FMIPDeviceLostModeMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(int *)(a3 + 48);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_1D4407828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1D4469618();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1D44078D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1D4469618();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unint64_t sub_1D44079AC()
{
  unint64_t result = qword_1EA6CB118;
  if (!qword_1EA6CB118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB118);
  }
  return result;
}

uint64_t sub_1D4407A00()
{
  unint64_t v0 = sub_1D446A518();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

void sub_1D4407A4C(uint64_t a1, void *a2)
{
}

void sub_1D4407AC4(uint64_t a1, int a2)
{
}

void sub_1D4407ACC(uint64_t a1, unint64_t a2)
{
}

id FMIPLocationController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMIPLocationController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D4407B8C(void *a1)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  id v3 = a1;
  id v4 = a1;
  oslog = sub_1D44698F8();
  os_log_type_t v5 = sub_1D446A018();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v11 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = sub_1D446A7D8();
    sub_1D42CB9EC(v8, v9, &v11);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, oslog, v5, "FMIPLocationController: location manager failed with error: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v7, -1, -1);
    MEMORY[0x1D9447730](v6, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1D4407D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for FMIPLocationController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPLocationController);
}

uint64_t dispatch thunk of FMIPLocationController.locationManager(_:didFailWithError:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of FMIPLocationController.locationManager(_:didChangeAuthorization:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of FMIPLocationController.locationManager(_:didUpdateLocations:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t sub_1D4407E5C()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D4407E9C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D4407EDC()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t FMIPPlaySoundChannels.description.getter()
{
  return 46;
}

uint64_t FMIPPlaySoundChannels.rawValue.getter()
{
  uint64_t result = 1952867692;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7468676972;
      break;
    case 2:
      uint64_t result = 1702060387;
      break;
    case 3:
      uint64_t result = 0x6F6C61646E617473;
      break;
    case 4:
      uint64_t result = 1702131053;
      break;
    default:
      return result;
  }
  return result;
}

FMIPCore::FMIPPlaySoundChannels_optional __swiftcall FMIPPlaySoundChannels.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1D446A518();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1D44080D4(unsigned __int8 *a1, char *a2)
{
  return sub_1D44140A4(*a1, *a2);
}

uint64_t sub_1D44080E0()
{
  return sub_1D446A888();
}

uint64_t sub_1D44081B8()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4408278()
{
  return sub_1D446A888();
}

FMIPCore::FMIPPlaySoundChannels_optional sub_1D440834C(Swift::String *a1)
{
  return FMIPPlaySoundChannels.init(rawValue:)(*a1);
}

void sub_1D4408358(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1952867692;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x7468676972;
      goto LABEL_3;
    case 2:
      *a1 = 1702060387;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x6F6C61646E617473;
      a1[1] = 0xEA0000000000656ELL;
      break;
    case 4:
      *a1 = 1702131053;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

FMIPCore::FMIPPlaySoundReason_optional __swiftcall FMIPPlaySoundReason.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1D446A518();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t FMIPPlaySoundReason.rawValue.getter()
{
  uint64_t result = 0x6E756F5379616C50;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E756F536574754DLL;
      break;
    case 2:
      uint64_t result = 0x6F536574756D6E55;
      break;
    case 3:
      uint64_t result = 0x6E756F53706F7453;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D44084EC()
{
  unint64_t result = qword_1EA6CB1C8;
  if (!qword_1EA6CB1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB1C8);
  }
  return result;
}

uint64_t sub_1D4408540(unsigned __int8 *a1, char *a2)
{
  return sub_1D4414480(*a1, *a2);
}

unint64_t sub_1D4408550()
{
  unint64_t result = qword_1EA6CB1D0;
  if (!qword_1EA6CB1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB1D0);
  }
  return result;
}

uint64_t sub_1D44085A4()
{
  return sub_1D446A888();
}

uint64_t sub_1D440867C()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D440873C()
{
  return sub_1D446A888();
}

FMIPCore::FMIPPlaySoundReason_optional sub_1D4408810(Swift::String *a1)
{
  return FMIPPlaySoundReason.init(rawValue:)(*a1);
}

void sub_1D440881C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E756F5379616C50;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x6E756F536574754DLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x6F536574756D6E55;
      a1[1] = 0xEB00000000646E75;
      break;
    case 3:
      *a1 = 0x6E756F53706F7453;
      a1[1] = 0xE900000000000064;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE900000000000064;
      break;
  }
}

unsigned char *storeEnumTagSinglePayload for FMIPPlaySoundChannels(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    void *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4408988);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPPlaySoundChannels()
{
  return &type metadata for FMIPPlaySoundChannels;
}

unsigned char *storeEnumTagSinglePayload for FMIPPlaySoundReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4408A8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPPlaySoundReason()
{
  return &type metadata for FMIPPlaySoundReason;
}

uint64_t type metadata accessor for FMIPPlaySoundRequest()
{
  uint64_t result = qword_1EA6CB1D8;
  if (!qword_1EA6CB1D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D4408B10()
{
  uint64_t result = type metadata accessor for FMIPDevice();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D4408BC0()
{
  type metadata accessor for FMLocalize();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1D44692D8();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  sub_1D44692D8();

  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + qword_1EA6E49D0;
  if ((*(unsigned char *)(v0 + qword_1EA6E49D0 + 217) & 2) == 0)
  {
    uint64_t v6 = *(void *)(v5 + 104);
    uint64_t v7 = *(void *)(v5 + 112);
    BOOL v8 = v6 == 1684099177 && v7 == 0xE400000000000000;
    if (!v8
      && (sub_1D446A758() & 1) == 0
      && (v6 != 1685016681 || v7 != 0xE400000000000000)
      && (sub_1D446A758() & 1) == 0
      && (v6 != 0x726F737365636341 || v7 != 0xE900000000000079))
    {
      sub_1D446A758();
    }
  }
  id v9 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  uint64_t v10 = sub_1D44692D8();
  uint64_t v12 = v11;

  sub_1D42D5DA0(&qword_1EA6C98E0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1D446E050;
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 64) = sub_1D42CB714();
  *(void *)(v13 + 32) = v10;
  *(void *)(v13 + 40) = v12;
  uint64_t v14 = sub_1D4469B58();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1D4408F64()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + qword_1EA6E49D8);
  int64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    *(void *)&long long v50 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1D4337070(0, v3, 0);
    uint64_t v5 = 0;
    uint64_t v4 = v50;
    do
    {
      unint64_t v6 = 0xE400000000000000;
      uint64_t v7 = 1952867692;
      switch(*(unsigned char *)(v2 + v5 + 32))
      {
        case 1:
          unint64_t v6 = 0xE500000000000000;
          uint64_t v7 = 0x7468676972;
          break;
        case 2:
          uint64_t v7 = 1702060387;
          break;
        case 3:
          uint64_t v7 = 0x6F6C61646E617473;
          unint64_t v6 = 0xEA0000000000656ELL;
          break;
        case 4:
          uint64_t v7 = 1702131053;
          break;
        default:
          break;
      }
      *(void *)&long long v50 = v4;
      unint64_t v9 = *(void *)(v4 + 16);
      unint64_t v8 = *(void *)(v4 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1D4337070(v8 > 1, v9 + 1, 1);
        uint64_t v4 = v50;
      }
      ++v5;
      *(void *)(v4 + 16) = v9 + 1;
      uint64_t v10 = v4 + 16 * v9;
      *(void *)(v10 + 32) = v7;
      *(void *)(v10 + 40) = v6;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
  }
  uint64_t v51 = sub_1D42D5DA0(&qword_1EA6C9E30);
  *(void *)&long long v50 = v4;
  uint64_t v11 = qword_1EA6C9D80;
  uint64_t v12 = *(void *)(v1 + qword_1EA6C9D80);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v12 + 24));
  sub_1D433313C((void *)(v12 + 16), v48);
  os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 24));
  unint64_t v13 = *(void *)&v48[0];
  swift_release();
  unint64_t v49 = v13;
  if (v51)
  {
    sub_1D42C5494(&v50, v48);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v49 = 0x8000000000000000;
    sub_1D42C4E78(v48, 0x736C656E6E616863, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
    uint64_t v15 = swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D429D4F4((uint64_t)&v50);
    sub_1D43FC5A4(0x736C656E6E616863, 0xE800000000000000, v48);
    uint64_t v15 = sub_1D429D4F4((uint64_t)v48);
  }
  uint64_t v16 = *(void *)(v1 + v11);
  MEMORY[0x1F4188790](v15);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v16 + 24));
  sub_1D4306B48((void *)(v16 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v16 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v1 + qword_1EA6E49D0);
  uint64_t v17 = *(void *)(v1 + qword_1EA6E49D0 + 8);
  uint64_t v51 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v50 = v18;
  *((void *)&v50 + 1) = v17;
  uint64_t v19 = *(void *)(v1 + v11);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v19 + 24));
  sub_1D433313C((void *)(v19 + 16), v48);
  os_unfair_lock_unlock((os_unfair_lock_t)(v19 + 24));
  unint64_t v20 = *(void *)&v48[0];
  swift_release();
  sub_1D42C5494(&v50, v48);
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v49 = v20;
  sub_1D42C4E78(v48, 0x656369766564, 0xE600000000000000, v21);
  uint64_t v22 = swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v1 + v11);
  MEMORY[0x1F4188790](v22);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v23 + 24));
  sub_1D433A560((void *)(v23 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v23 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_1D4408BC0();
  uint64_t v51 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v50 = v24;
  *((void *)&v50 + 1) = v25;
  uint64_t v26 = *(void *)(v1 + v11);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
  sub_1D433313C((void *)(v26 + 16), v48);
  os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
  unint64_t v27 = *(void *)&v48[0];
  swift_release();
  sub_1D42C5494(&v50, v48);
  char v28 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v49 = v27;
  sub_1D42C4E78(v48, 0x7463656A627573, 0xE700000000000000, v28);
  uint64_t v29 = swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v1 + v11);
  MEMORY[0x1F4188790](v29);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v30 + 24));
  sub_1D433A560((void *)(v30 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v30 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(v2 + 16);
  uint64_t v32 = 0x6E756F5379616C50;
  if (v31 == 1) {
    uint64_t v32 = 0x6E756F536574754DLL;
  }
  BOOL v33 = v31 == 0;
  uint64_t v34 = 0x6E756F53706F7453;
  if (!v33) {
    uint64_t v34 = v32;
  }
  uint64_t v51 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v50 = v34;
  *((void *)&v50 + 1) = 0xE900000000000064;
  uint64_t v35 = *(void *)(v1 + v11);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v35 + 24));
  sub_1D433313C((void *)(v35 + 16), v48);
  os_unfair_lock_unlock((os_unfair_lock_t)(v35 + 24));
  unint64_t v36 = *(void *)&v48[0];
  swift_release();
  sub_1D42C5494(&v50, v48);
  char v37 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v49 = v36;
  sub_1D42C4E78(v48, 0x6974634172657375, 0xEA00000000006E6FLL, v37);
  uint64_t v38 = swift_bridgeObjectRelease();
  uint64_t v39 = *(void *)(v1 + v11);
  MEMORY[0x1F4188790](v38);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v39 + 24));
  sub_1D433A560((void *)(v39 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v39 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v40 = sub_1D44097C4();
  uint64_t v41 = sub_1D446A0E8();
  uint64_t v51 = v40;
  *(void *)&long long v50 = v41;
  uint64_t v42 = *(void *)(v1 + v11);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v42 + 24));
  sub_1D433313C((void *)(v42 + 16), v48);
  os_unfair_lock_unlock((os_unfair_lock_t)(v42 + 24));
  unint64_t v43 = *(void *)&v48[0];
  swift_release();
  unint64_t v49 = v43;
  if (v40)
  {
    sub_1D42C5494(&v50, v48);
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D42C4E78(v48, 0xD00000000000001ALL, 0x80000001D44835A0, v44);
    uint64_t v45 = swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D429D4F4((uint64_t)&v50);
    sub_1D43FC5A4(0xD00000000000001ALL, 0x80000001D44835A0, v48);
    uint64_t v45 = sub_1D429D4F4((uint64_t)v48);
  }
  uint64_t v46 = *(void *)(v1 + v11);
  MEMORY[0x1F4188790](v45);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v46 + 24));
  sub_1D433A560((void *)(v46 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v46 + 24));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44096F8()
{
  sub_1D42B24BC(v0 + qword_1EA6E49D0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4409738()
{
  uint64_t v0 = sub_1D427B074();
  sub_1D42B24BC(v0 + qword_1EA6E49D0);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D44097BC()
{
  return type metadata accessor for FMIPPlaySoundRequest();
}

unint64_t sub_1D44097C4()
{
  unint64_t result = qword_1EA6CB1E8;
  if (!qword_1EA6CB1E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA6CB1E8);
  }
  return result;
}

uint64_t FMReverseGeocodingCache.__allocating_init(preferredLocale:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  FMReverseGeocodingCache.init(preferredLocale:)(a1);
  return v2;
}

uint64_t FMReverseGeocodingCache.init(preferredLocale:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v25 = a1;
  uint64_t v3 = sub_1D446A088();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v22 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D446A068();
  MEMORY[0x1F4188790](v5);
  char v21 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D44699B8();
  MEMORY[0x1F4188790](v7 - 8);
  sub_1D44695E8();
  uint64_t v8 = qword_1EA6CB1F8;
  type metadata accessor for FMReverseGeocodingCache.FMReverseGeocodingCacheContext();
  *(void *)(v1 + v8) = sub_1D4469A18();
  uint64_t v9 = qword_1EA6CB200;
  *(void *)(v1 + v9) = sub_1D4469A18();
  *(void *)(v1 + qword_1EA6CB208) = MEMORY[0x1E4FBC868];
  *(void *)(v1 + qword_1EA6CB210) = 0;
  if (qword_1EA6C8F58 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D4469928();
  sub_1D42D7FAC(v10, (uint64_t)qword_1EA6E46D0);
  swift_retain_n();
  uint64_t v11 = sub_1D44698F8();
  os_log_type_t v12 = sub_1D446A038();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)unint64_t v13 = 136315138;
    uint64_t v27 = v14;
    uint64_t v15 = sub_1D446A918();
    uint64_t v26 = sub_1D42CB9EC(v15, v16, &v27);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v11, v12, "%s: initialized", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v14, -1, -1);
    MEMORY[0x1D9447730](v13, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F08]), sel_init);
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_1D446A378();
  sub_1D4469C08();
  sub_1D446A918();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v18 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setName_, v18);

  objc_msgSend(v17, sel_setMaxConcurrentOperationCount_, 10);
  sub_1D42AADA4();
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_1D446A378();
  swift_bridgeObjectRelease();
  uint64_t v27 = 0xD000000000000022;
  unint64_t v28 = 0x80000001D4483660;
  sub_1D446A918();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D44699A8();
  uint64_t v27 = MEMORY[0x1E4FBC860];
  sub_1D4409E24();
  sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  sub_1D43C42CC();
  sub_1D446A1F8();
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v22, *MEMORY[0x1E4FBCC58], v24);
  uint64_t v19 = sub_1D446A0C8();
  *(void *)(v2 + qword_1EA6CB218) = v17;
  sub_1D4409E7C(v25, v2 + qword_1EA6E49F8);
  *(void *)(v2 + qword_1EA6CB220) = v19;
  return v2;
}

unint64_t sub_1D4409E24()
{
  unint64_t result = qword_1EBD7FDB0;
  if (!qword_1EBD7FDB0)
  {
    sub_1D446A068();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7FDB0);
  }
  return result;
}

uint64_t sub_1D4409E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FMReverseGeocodingCache.deinit()
{
  uint64_t v1 = v0 + qword_1EA6CB1F0;
  uint64_t v2 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D43C0AFC(v0 + qword_1EA6E49F8);
  return v0;
}

uint64_t FMReverseGeocodingCache.__deallocating_deinit()
{
  FMReverseGeocodingCache.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D440A000(void (*a1)(void))
{
  a1();
  return sub_1D446A918();
}

uint64_t dispatch thunk of FMAddressProtocol.init(mapItem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for FMReverseGeocodingCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMReverseGeocodingCache);
}

uint64_t dispatch thunk of FMReverseGeocodingCache.__allocating_init(preferredLocale:)()
{
  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t *sub_1D440A07C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4469618();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  if ((v12 | v8) > 7
    || ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || v13 + ((v9 + ((v8 + 40) & ~v8) + v12) & ~v12) + 1 > 0x18)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v29 = v6;
    uint64_t v17 = a2[1];
    *a1 = *a2;
    a1[1] = v17;
    uint64_t v18 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v19 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v18 = *v19;
    v18[1] = v19[1];
    unint64_t v20 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
    char v21 = (void **)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v22 = *v21;
    *unint64_t v20 = *v21;
    uint64_t v23 = ((unint64_t)v20 + v8 + 8) & ~v8;
    uint64_t v24 = ((unint64_t)v21 + v8 + 8) & ~v8;
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    uint64_t v28 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v26 = v22;
    v25(v23, v24, v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))((v23 + v9 + v12) & ~v12, (v24 + v9 + v12) & ~v12, v28);
    *(unsigned char *)(((v23 + v9 + v12) & ~v12) + v13) = *(unsigned char *)(((v24 + v9 + v12) & ~v12) + v13);
  }
  return a1;
}

uint64_t sub_1D440A2A8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (id *)((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);

  uint64_t v5 = sub_1D4469618();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = ((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v9 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v10 = *(uint64_t (**)(unint64_t))(v9 + 8);
  unint64_t v11 = (v8 + *(void *)(v7 + 56) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return v10(v11);
}

void *sub_1D440A390(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  v6[1] = v7[1];
  unint64_t v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *v9;
  void *v8 = *v9;
  uint64_t v11 = sub_1D4469618();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  uint64_t v14 = v12 + 16;
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = ((unint64_t)v8 + v15 + 8) & ~v15;
  uint64_t v17 = ((unint64_t)v9 + v15 + 8) & ~v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v18 = v10;
  v13(v16, v17, v11);
  uint64_t v19 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v20 = v19 + 16;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = *(void *)(v14 + 48) + v21;
  uint64_t v23 = (v22 + v16) & ~v21;
  uint64_t v24 = (v22 + v17) & ~v21;
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v23, v24);
  *(unsigned char *)(*(void *)(v20 + 48) + v23) = *(unsigned char *)(*(void *)(v20 + 48) + v24);
  return a1;
}

void *sub_1D440A4E0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v8 = (void **)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *v9;
  uint64_t v11 = *v8;
  void *v8 = *v9;
  id v12 = v10;

  uint64_t v13 = sub_1D4469618();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = ((unint64_t)v8 + v16 + 8) & ~v16;
  uint64_t v18 = ((unint64_t)v9 + v16 + 8) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(v17, v18, v13);
  uint64_t v19 = *(void *)(v15 + 40);
  uint64_t v20 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v21 = v20 + 24;
  uint64_t v22 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v23 = v19 + v22;
  uint64_t v24 = (v23 + v17) & ~v22;
  uint64_t v25 = (v23 + v18) & ~v22;
  (*(void (**)(uint64_t, uint64_t))(v20 + 24))(v24, v25);
  *(unsigned char *)(*(void *)(v21 + 40) + v24) = *(unsigned char *)(*(void *)(v21 + 40) + v25);
  return a1;
}

_OWORD *sub_1D440A640(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = (void *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t v9 = sub_1D4469618();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10 + 32;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = ((unint64_t)v7 + v12 + 8) & ~v12;
  uint64_t v14 = ((unint64_t)v8 + v12 + 8) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v13, v14, v9);
  uint64_t v15 = *(void *)(v11 + 32);
  uint64_t v16 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v17 = v16 + 32;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = v15 + v18;
  uint64_t v20 = (v19 + v13) & ~v18;
  uint64_t v21 = (v19 + v14) & ~v18;
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v20, v21);
  *(unsigned char *)(*(void *)(v17 + 32) + v20) = *(unsigned char *)(*(void *)(v17 + 32) + v21);
  return a1;
}

void *sub_1D440A75C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *v9;
  *uint64_t v9 = *v10;

  uint64_t v12 = sub_1D4469618();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = v13 + 40;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = ((unint64_t)v9 + v15 + 8) & ~v15;
  uint64_t v17 = ((unint64_t)v10 + v15 + 8) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))(v16, v17, v12);
  uint64_t v18 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v19 = v18 + 40;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = *(void *)(v14 + 24) + v20;
  uint64_t v22 = (v21 + v16) & ~v20;
  uint64_t v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v18 + 40))(v22, v23);
  *(unsigned char *)(*(void *)(v19 + 24) + v22) = *(unsigned char *)(*(void *)(v19 + 24) + v23);
  return a1;
}

uint64_t sub_1D440A8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1D440A8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1D440A900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1D440A914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t sub_1D440A928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1D440A93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_1D440A950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t sub_1D440A964(void *a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6CB348);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D42C26F4(a1, a1[3]);
  sub_1D440C518();
  sub_1D446A8E8();
  v8[15] = 0;
  sub_1D446A688();
  if (!v1)
  {
    v8[14] = 1;
    sub_1D446A688();
    v8[13] = 2;
    sub_1D446A688();
    v8[12] = 3;
    sub_1D446A688();
    v8[11] = 4;
    sub_1D446A688();
    v8[10] = 5;
    sub_1D446A688();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1D440AB64()
{
  uint64_t result = 0x3156676174726961;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x3256676174726961;
      break;
    case 2:
      uint64_t result = 0x3156616E6D66;
      break;
    case 3:
      uint64_t result = 0x3256616E6D66;
      break;
    case 4:
      uint64_t result = 0x6E6D66656C707061;
      break;
    case 5:
      uint64_t result = 0x6E6D66656C707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D440AC34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D440C03C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D440AC5C(uint64_t a1)
{
  unint64_t v2 = sub_1D440C518();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D440AC98(uint64_t a1)
{
  unint64_t v2 = sub_1D440C518();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1D440ACD4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1D440C2BC(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1D440AD18(void *a1)
{
  return sub_1D440A964(a1);
}

uint64_t sub_1D440AD30()
{
  uint64_t v1 = v0;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    long long v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = v19;
    *(_DWORD *)long long v5 = 136315138;
    uint64_t v6 = *(void *)(v1 + 16);
    unint64_t v7 = *(void *)(v1 + 24);
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1D427A0D0(0xCuLL, v6, v7);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x1D9445EF0](v8, v10, v12, v14);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    sub_1D42CB9EC(v15, v17, &v20);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPRefreshingController<%s>.deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v19, -1, -1);
    MEMORY[0x1D9447730](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  swift_bridgeObjectRelease();
  sub_1D42F9538(v1 + 32);
  sub_1D4276C3C(v1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_selectedDevice, &qword_1EBD7CBC0);
  sub_1D42BEC64(v1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_interactionController);

  swift_bridgeObjectRelease();
  sub_1D4276C3C(v1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_lastRefreshTime, &qword_1EBD7CB80);

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1D440AFE4()
{
  sub_1D440AD30();
  return swift_deallocClassInstance();
}

uint64_t sub_1D440B03C()
{
  return type metadata accessor for FMIPRefreshingController();
}

uint64_t sub_1D440B044()
{
  uint64_t v1 = sub_1D4469958();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  os_log_type_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D44699B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_refreshQueue);
  aBlock[4] = sub_1D440C824;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1D42BD950;
  aBlock[3] = &unk_1F2C0FFB0;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_1D4469988();
  v11[1] = MEMORY[0x1E4FBC860];
  sub_1D42C6224((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

id sub_1D440B2DC(uint64_t a1)
{
  *(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_isRefreshing) = 0;
  sub_1D4283F78();
  sub_1D43BED4C();
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_refreshTimer);
  return objc_msgSend(v2, sel_invalidate);
}

uint64_t sub_1D440B344(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v11 = sub_1D4469618();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  int v93 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v92 = v12;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v17 = Strong;
      if (a1)
      {
        uint64_t v88 = v11;
        uint64_t v18 = qword_1EBD80068;
        swift_retain();
        if (v18 != -1) {
          swift_once();
        }
        uint64_t v19 = sub_1D4469928();
        sub_1D42D7FAC(v19, (uint64_t)qword_1EBD83228);
        uint64_t v20 = sub_1D44698F8();
        os_log_type_t v21 = sub_1D446A038();
        BOOL v22 = os_log_type_enabled(v20, v21);
        uint64_t v91 = a4;
        if (v22)
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v23 = 0;
          _os_log_impl(&dword_1D4271000, v20, v21, "FMIPRefreshingController: refreshClientRequest completed", v23, 2u);
          uint64_t v24 = v23;
          a4 = v91;
          MEMORY[0x1D9447730](v24, -1, -1);
        }

        uint64_t v25 = *(void *)(a1 + 24);
        uint64_t v87 = a5;
        if (v25)
        {
          int v84 = a6;
          uint64_t v26 = *(void *)(v25 + 24);
          uint64_t v28 = *(void *)(v25 + 32);
          uint64_t v27 = *(void *)(v25 + 40);
          char v29 = *(unsigned char *)(v25 + 48);
          char v30 = *(unsigned char *)(v25 + 49);
          char v31 = *(unsigned char *)(v25 + 50);
          char v32 = *(unsigned char *)(v25 + 51);
          uint64_t v34 = *(void *)(v25 + 56);
          uint64_t v33 = *(void *)(v25 + 64);
          uint64_t v35 = *(void *)(v25 + 72);
          uint64_t v36 = *(void *)(v25 + 80);
          uint64_t v37 = *(void *)(v25 + 88);
          uint64_t v38 = *(void *)(v25 + 96);
          v94[0] = *(void *)(v25 + 16);
          uint64_t v89 = v26;
          v94[1] = v26;
          v94[2] = v28;
          uint64_t v83 = v27;
          v94[3] = v27;
          char v95 = v29;
          char v96 = v30;
          char v97 = v31;
          char v98 = v32;
          uint64_t v99 = v34;
          uint64_t v82 = v33;
          uint64_t v100 = v33;
          uint64_t v101 = v35;
          uint64_t v102 = v36;
          uint64_t v103 = v37;
          uint64_t v104 = v38;
          uint64_t v39 = *(void *)(a1 + 16);
          swift_beginAccess();
          uint64_t v40 = swift_weakLoadStrong();
          uint64_t v86 = v15;
          uint64_t v90 = v17;
          uint64_t v85 = a1;
          if (v40)
          {
            uint64_t v41 = *(void *)(v40 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_ownerPhoneNumber);
            uint64_t v42 = *(void *)(v40 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_ownerPhoneNumber + 8);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_release();
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v41 = 0;
            uint64_t v42 = 0;
          }
          sub_1D42890DC(v94, v39, v41, v42, (uint64_t)&v105);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v81 = v105;
          uint64_t v57 = v106;
          uint64_t v89 = *((void *)&v105 + 1);
          uint64_t v82 = v107;
          char v58 = v108;
          char v59 = v109;
          char v60 = v110;
          int v80 = v111;
          uint64_t v62 = v112;
          uint64_t v61 = v113;
          uint64_t v63 = v115;
          uint64_t v79 = v114;
          uint64_t v64 = v116;
          uint64_t v83 = v117;
          if (MEMORY[0x1D9447840](v90 + 32))
          {
            *(void *)&long long v105 = v81;
            *((void *)&v105 + 1) = v89;
            uint64_t v106 = v57;
            uint64_t v107 = v82;
            char v108 = v58;
            char v109 = v59;
            char v110 = v60;
            unsigned __int8 v111 = v80;
            uint64_t v112 = v62;
            uint64_t v113 = v61;
            uint64_t v114 = v79;
            uint64_t v115 = v63;
            uint64_t v116 = v64;
            uint64_t v117 = v83;
            uint64_t v65 = *(void *)(v25 + 104);
            swift_bridgeObjectRetain();
            sub_1D428B5B0(&v105, v65);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v15 = v86;
          uint64_t v17 = v90;
          a1 = v85;
          LOBYTE(a6) = v84;
          a4 = v91;
        }
        uint64_t v66 = swift_bridgeObjectRetain();
        char v67 = sub_1D440BEF4(v66);
        swift_bridgeObjectRelease();
        if ((v67 & 1) != 0 && MEMORY[0x1D9447840](v17 + 32))
        {
          *(void *)&long long v105 = *(void *)(v17 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_rangingParameters);
          sub_1D438918C((uint64_t *)&v105);
          swift_unknownObjectRelease();
        }
        uint64_t v68 = swift_bridgeObjectRetain();
        sub_1D440BD5C(v68);
        swift_bridgeObjectRelease();
        uint64_t v69 = MEMORY[0x1D9447840](v17 + 32);
        uint64_t v70 = MEMORY[0x1E4FBC860];
        if (v69)
        {
          if (*(void *)(a1 + 56)) {
            uint64_t v71 = *(void *)(a1 + 56);
          }
          else {
            uint64_t v71 = MEMORY[0x1E4FBC860];
          }
          swift_bridgeObjectRetain();
          sub_1D428DC80(v71);
          a4 = v91;
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
        }
        uint64_t v72 = (void *)(v17 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_tapContexts);
        swift_beginAccess();
        *uint64_t v72 = v70;
        swift_bridgeObjectRelease();
        if (MEMORY[0x1D9447840](v17 + 32))
        {
          uint64_t v73 = (uint64_t)v93;
          sub_1D44695E8();
          sub_1D43892E4(a4, v73, v87);
          swift_unknownObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v73, v88);
        }
        if (a6)
        {
          uint64_t v74 = *(void *)(v15 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_interactionController + 24);
          uint64_t v75 = *(void *)(v15 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_interactionController + 32);
          sub_1D42C26F4((void *)(v15 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_interactionController), v74);
          uint64_t v76 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v75 + 32))(v74, v75) + 16);
          swift_bridgeObjectRelease();
          uint64_t v77 = &OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_callbackInterval;
          if (v76) {
            uint64_t v77 = &OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_minCallbackInterval;
          }
          sub_1D4294C8C(*(double *)(v17 + *v77));
        }
        if (*(unsigned char *)(a1 + 40) == 1 && MEMORY[0x1D9447840](v17 + 32))
        {
          sub_1D4388B8C();
          swift_release();
          swift_release();
          swift_release();
          return swift_unknownObjectRelease();
        }
        swift_release();
        swift_release();
      }
      else
      {
        if (qword_1EBD80068 != -1) {
          swift_once();
        }
        uint64_t v47 = sub_1D4469928();
        sub_1D42D7FAC(v47, (uint64_t)qword_1EBD83228);
        id v48 = a2;
        id v49 = a2;
        long long v50 = sub_1D44698F8();
        os_log_type_t v51 = sub_1D446A038();
        if (os_log_type_enabled(v50, v51))
        {
          uint64_t v52 = (uint8_t *)swift_slowAlloc();
          uint64_t v53 = swift_slowAlloc();
          *(void *)&long long v105 = v53;
          *(_DWORD *)uint64_t v52 = 136315138;
          v94[0] = (uint64_t)a2;
          id v54 = a2;
          sub_1D42D5DA0((uint64_t *)&unk_1EA6C9880);
          uint64_t v55 = sub_1D4469B68();
          v94[0] = sub_1D42CB9EC(v55, v56, (uint64_t *)&v105);
          sub_1D446A188();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1D4271000, v50, v51, "FMIPRefreshingController: refreshClientRequest completed with error: %s", v52, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D9447730](v53, -1, -1);
          MEMORY[0x1D9447730](v52, -1, -1);
        }
        else
        {
        }
        sub_1D4294C8C(*(double *)(v17 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_callbackInterval));
        swift_release();
      }
    }
    else
    {
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_1D4469928();
      sub_1D42D7FAC(v43, (uint64_t)qword_1EBD83228);
      char v44 = sub_1D44698F8();
      os_log_type_t v45 = sub_1D446A038();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v46 = 0;
        _os_log_impl(&dword_1D4271000, v44, v45, "FMIPRefreshingController: Not handling request controller deallocated", v46, 2u);
        MEMORY[0x1D9447730](v46, -1, -1);
      }
    }
    return swift_release();
  }
  return result;
}

double sub_1D440BD5C(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = v1;
    if (*(void *)(a1 + 16))
    {
      unint64_t v4 = sub_1D42C4FCC(0xD000000000000017, 0x80000001D4483870);
      if (v6)
      {
        sub_1D42CBAC0(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v12);
        if (swift_dynamicCast())
        {
          double result = (double)v11;
          *(double *)(v2 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_minCallbackInterval) = (double)v11;
        }
      }
    }
    if (*(void *)(a1 + 16))
    {
      unint64_t v7 = sub_1D42C4FCC(0xD000000000000017, 0x80000001D4483890);
      if (v8)
      {
        sub_1D42CBAC0(*(void *)(a1 + 56) + 32 * v7, (uint64_t)v12);
        if (swift_dynamicCast())
        {
          double result = (double)v11;
          *(double *)(v2 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_maxCallbackInterval) = (double)v11;
        }
      }
    }
    if (*(void *)(a1 + 16))
    {
      unint64_t v9 = sub_1D42C4FCC(0xD000000000000014, 0x80000001D44838B0);
      if (v10)
      {
        sub_1D42CBAC0(*(void *)(a1 + 56) + 32 * v9, (uint64_t)v12);
        if (swift_dynamicCast())
        {
          double result = (double)v11;
          *(double *)(v2 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_callbackInterval) = (double)v11;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D440BEF4(uint64_t result)
{
  if (result)
  {
    uint64_t v2 = v1;
    uint64_t v3 = result;
    if (*(void *)(result + 16)
      && (unint64_t v4 = sub_1D42C4FCC(0xD000000000000019, 0x80000001D447D170), (v5 & 1) != 0)
      && (sub_1D42CBAC0(*(void *)(v3 + 56) + 32 * v4, (uint64_t)v7), (swift_dynamicCast() & 1) != 0)
      && v6 != *(double *)(v2 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_rangingParameters))
    {
      *(double *)(v2 + OBJC_IVAR____TtC8FMIPCore24FMIPRefreshingController_rangingParameters) = v6;
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ItemCounts(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ItemCounts(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ItemCounts()
{
  return &type metadata for ItemCounts;
}

uint64_t sub_1D440C014(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D440C03C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x3156676174726961 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x3256676174726961 && a2 == 0xE800000000000000 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x3156616E6D66 && a2 == 0xE600000000000000 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x3256616E6D66 && a2 == 0xE600000000000000 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6D66656C707061 && a2 == 0xEB00000000315661 || (sub_1D446A758() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6D66656C707061 && a2 == 0xEB00000000325661)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1D446A758();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1D440C2BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CB338);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D440C518();
  sub_1D446A8C8();
  if (v2) {
    return sub_1D42BEC64((uint64_t)a1);
  }
  char v23 = 0;
  uint64_t v9 = sub_1D446A5C8();
  char v22 = 1;
  uint64_t v10 = sub_1D446A5C8();
  char v21 = 2;
  uint64_t v17 = sub_1D446A5C8();
  char v20 = 3;
  uint64_t v16 = sub_1D446A5C8();
  char v19 = 4;
  uint64_t v15 = sub_1D446A5C8();
  char v18 = 5;
  uint64_t v11 = sub_1D446A5C8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = sub_1D42BEC64((uint64_t)a1);
  *a2 = v9;
  a2[1] = v10;
  uint64_t v13 = v16;
  a2[2] = v17;
  a2[3] = v13;
  a2[4] = v15;
  a2[5] = v11;
  return result;
}

unint64_t sub_1D440C518()
{
  unint64_t result = qword_1EA6CB340;
  if (!qword_1EA6CB340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB340);
  }
  return result;
}

uint64_t sub_1D440C56C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D440C5A4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_1D440C5DC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D440C5EC()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D440C624()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D440C634()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D440C644()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D440C684()
{
  uint64_t v1 = sub_1D4469618();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1D440C76C(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_1D4469618() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void *)v9;
  int v11 = *(unsigned __int8 *)(v9 + 8);
  return sub_1D440B344(a1, a2, v7, v8, v10, v11);
}

id sub_1D440C824()
{
  return sub_1D440B2DC(v0);
}

unsigned char *storeEnumTagSinglePayload for ItemCounts.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    void *result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D440C8F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemCounts.CodingKeys()
{
  return &type metadata for ItemCounts.CodingKeys;
}

unint64_t sub_1D440C934()
{
  unint64_t result = qword_1EA6CB370;
  if (!qword_1EA6CB370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB370);
  }
  return result;
}

unint64_t sub_1D440C98C()
{
  unint64_t result = qword_1EA6CB378;
  if (!qword_1EA6CB378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB378);
  }
  return result;
}

unint64_t sub_1D440C9E4()
{
  unint64_t result = qword_1EA6CB380;
  if (!qword_1EA6CB380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB380);
  }
  return result;
}

char sub_1D440CA58@<W0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  char result = MEMORY[0x1F4188790](v3 - 8);
  unsigned int v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 56);
  if (!v7) {
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for FMIPDevice();
    sub_1D440CE04(v7+ *(int *)(v9 + 116)+ ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80)), (uint64_t)v6);
    uint64_t v10 = type metadata accessor for FMIPDeviceLostModeMetadata();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v6, 1, v10) == 1)
    {
      char result = sub_1D440CE6C((uint64_t)v6);
LABEL_5:
      LOBYTE(v8) = 0;
      goto LABEL_8;
    }
    uint64_t v11 = v6[56];
    sub_1D42DE89C((uint64_t)v6);
    char result = FMIPActionStatus.init(rawValue:)(qword_1D4477CF8[v11]).value;
    LOBYTE(v8) = v13;
    if (v13 == 18) {
      LOBYTE(v8) = 0;
    }
  }
LABEL_8:
  *a1 = v8;
  return result;
}

uint64_t sub_1D440CBB0(uint64_t a1)
{
  return sub_1D440CBFC(a1);
}

uint64_t sub_1D440CBFC(uint64_t a1)
{
  sub_1D42A4D5C(a1, (uint64_t)v13);
  uint64_t v3 = sub_1D432C7E4(v13);
  if (!v1)
  {
    uint64_t v4 = qword_1EBD80068;
    swift_retain();
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1D4469928();
    sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
    swift_retain();
    unsigned int v6 = sub_1D44698F8();
    os_log_type_t v7 = sub_1D446A038();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      v13[0] = v9;
      uint64_t v10 = sub_1D432CBAC();
      v13[6] = sub_1D42CB9EC(v10, v11, v13);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v6, v7, "FMIPLostModeResponse: initialized with coder %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v9, -1, -1);
      MEMORY[0x1D9447730](v8, -1, -1);
    }
    else
    {
      swift_release_n();
    }
  }
  sub_1D42BEC64(a1);
  return v3;
}

uint64_t type metadata accessor for FMIPLostModeResponse()
{
  return self;
}

uint64_t sub_1D440CE04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D440CE6C(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D440CECC(uint64_t a1)
{
  return sub_1D440CF18(a1);
}

uint64_t sub_1D440CF18(uint64_t a1)
{
  sub_1D42A4D5C(a1, (uint64_t)v13);
  uint64_t v3 = sub_1D432C7E4(v13);
  if (!v1)
  {
    uint64_t v4 = qword_1EBD80068;
    swift_retain();
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1D4469928();
    sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
    swift_retain();
    unsigned int v6 = sub_1D44698F8();
    os_log_type_t v7 = sub_1D446A038();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      v13[0] = v9;
      uint64_t v10 = sub_1D432CBAC();
      v13[6] = sub_1D42CB9EC(v10, v11, v13);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v6, v7, "FMIPNotifyResponse: initialized with coder %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v9, -1, -1);
      MEMORY[0x1D9447730](v8, -1, -1);
    }
    else
    {
      swift_release_n();
    }
  }
  sub_1D42BEC64(a1);
  return v3;
}

uint64_t type metadata accessor for FMIPNotifyResponse()
{
  return self;
}

void FMIPAccessoryError.init(underlyingError:discoveryType:)(id a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  id v3 = a1;
  if (!a1) {
    goto LABEL_14;
  }
  char v5 = *a2;
  id v13 = a1;
  id v6 = a1;
  id v7 = v3;
  sub_1D42D5DA0(&qword_1EA6C9360);
  type metadata accessor for SPAccessoryDiscoverySessionError(0);
  if (swift_dynamicCast())
  {
    id v8 = v16;
    id v12 = v16;
    sub_1D440DCB0(&qword_1EA6C9270, type metadata accessor for SPAccessoryDiscoverySessionError);
    sub_1D4469388();
    if (v15 != 1)
    {

      char v9 = 1;
LABEL_11:
      id v3 = v8;
      goto LABEL_12;
    }
    goto LABEL_7;
  }

  id v13 = v3;
  id v10 = v3;
  type metadata accessor for SPUnknownDiscoverySessionError(0);
  if (swift_dynamicCast())
  {
    id v8 = v16;
    id v12 = v16;
    sub_1D440DCB0(&qword_1EA6C92A8, type metadata accessor for SPUnknownDiscoverySessionError);
    sub_1D4469388();
    if (v15 != 1)
    {

      char v9 = 3;
      goto LABEL_11;
    }
LABEL_7:

    id v3 = 0;
    char v9 = 4;
LABEL_12:

    goto LABEL_15;
  }

  id v16 = v3;
  id v11 = v3;
  type metadata accessor for SPPairingSessionError(0);
  if (!swift_dynamicCast())
  {

LABEL_14:
    char v9 = 0;
    goto LABEL_15;
  }
  LOBYTE(v12) = v5;
  sub_1D440D3A4(v15, (unsigned __int8 *)&v12, (uint64_t)&v13);

  id v3 = v13;
  char v9 = v14;

LABEL_15:
  *(void *)a3 = v3;
  *(unsigned char *)(a3 + 8) = v9;
}

uint64_t FMIPAccessoryError.localizedDescription.getter()
{
  return sub_1D440D97C((void (*)(void))sub_1D440D828);
}

void sub_1D440D3A4(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v5 = *a2;
  type metadata accessor for SPPairingSessionError(0);
  sub_1D440DCB0(&qword_1EA6C9230, type metadata accessor for SPPairingSessionError);
  sub_1D4469388();
  switch(v7)
  {
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
    case 11:
    case 19:

      char v6 = 4;
      a1 = 3;
      break;
    case 4:
    case 9:
    case 10:
    case 20:

      char v6 = 4;
      a1 = 1;
      break;
    case 12:
      char v6 = 0;
      break;
    case 13:

      a1 = 4;
      char v6 = 4;
      break;
    case 14:

      char v6 = 4;
      a1 = 5;
      break;
    case 15:

      char v6 = 4;
      a1 = 9;
      break;
    case 16:

      if (v5 < 2) {
        a1 = 6;
      }
      else {
        a1 = 7;
      }
      char v6 = 4;
      break;
    case 17:

      char v6 = 4;
      a1 = 2;
      break;
    case 18:

      char v6 = 4;
      a1 = 8;
      break;
    default:
      char v6 = 1;
      break;
  }
  *(void *)a3 = a1;
  *(unsigned char *)(a3 + 8) = v6;
}

unint64_t sub_1D440D558(uint64_t a1, char a2)
{
  unint64_t result = 0x4E574F4E4B4E55;
  switch(a2)
  {
    case 1:
      unint64_t result = 0x5F4E574F4E4B4E55;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      switch(a1)
      {
        case 1:
        case 2:
        case 5:
          return result;
        case 3:
          unint64_t result = 0xD00000000000001DLL;
          break;
        case 4:
          unint64_t result = 0xD000000000000011;
          break;
        case 6:
          unint64_t result = 0xD000000000000017;
          break;
        case 7:
          unint64_t result = 0xD000000000000014;
          break;
        case 8:
          unint64_t result = 0xD000000000000010;
          break;
        case 9:
          unint64_t result = 0x5F59524554544142;
          break;
        default:
          unint64_t result = 0xD000000000000012;
          break;
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D440D70C()
{
  uint64_t v1 = *(void **)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  unint64_t v3 = sub_1D440D558(*(void *)v0, v2);
  uint64_t v5 = v4;
  sub_1D42D5DA0(&qword_1EBD80060);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1D4470B60;
  *(void *)(v6 + 32) = 0xD000000000000019;
  *(void *)(v6 + 40) = 0x80000001D44839A0;
  *(void *)(v6 + 48) = v3;
  *(void *)(v6 + 56) = v5;
  sub_1D43C9224(v1, v2);
  sub_1D42D5DA0(&qword_1EA6C9E30);
  sub_1D4337090();
  uint64_t v7 = sub_1D4469AE8();
  swift_bridgeObjectRelease();
  sub_1D43C90E0(v1, v2);
  sub_1D4469C08();
  return v7;
}

uint64_t sub_1D440D828()
{
  uint64_t v1 = *(void **)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_1D446A378();
  unint64_t v3 = sub_1D440D558((uint64_t)v1, v2);
  uint64_t v5 = v4;
  sub_1D42D5DA0(&qword_1EBD80060);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1D4470B60;
  *(void *)(v6 + 32) = 0xD000000000000019;
  *(void *)(v6 + 40) = 0x80000001D44839A0;
  *(void *)(v6 + 48) = v3;
  *(void *)(v6 + 56) = v5;
  sub_1D43C9224(v1, v2);
  sub_1D42D5DA0(&qword_1EA6C9E30);
  sub_1D4337090();
  uint64_t v7 = sub_1D4469AE8();
  swift_bridgeObjectRelease();
  sub_1D43C90E0(v1, v2);
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  return v7;
}

uint64_t FMIPAccessoryError.localizedAlertTitle.getter()
{
  return sub_1D440D97C((void (*)(void))sub_1D440D70C);
}

uint64_t sub_1D440D97C(void (*a1)(void))
{
  a1();
  type metadata accessor for FMLocalize();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v3 = sub_1D44692D8();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t initializeBufferWithCopyOfBuffer for FMIPAccessoryError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1D43C9224(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for FMIPAccessoryError(uint64_t a1)
{
}

uint64_t assignWithCopy for FMIPAccessoryError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1D43C9224(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1D43C90E0(v5, v6);
  return a1;
}

uint64_t initializeWithTake for FMIPAccessoryError(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for FMIPAccessoryError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1D43C90E0(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPAccessoryError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPAccessoryError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1D440DC80(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1D440DC98(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)unint64_t result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

uint64_t sub_1D440DCB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D440DCFC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FMIPDevice();
  uint64_t v52 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  unsigned __int8 v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (!v6) {
    return v7;
  }
  os_log_type_t v51 = v5;
  uint64_t v45 = v1;
  uint64_t v80 = MEMORY[0x1E4FBC860];
  sub_1D42E1CF4(0, v6, 0);
  uint64_t v7 = v80;
  uint64_t result = sub_1D4407B88(a1);
  if (result < 0) {
    goto LABEL_31;
  }
  unint64_t v10 = result;
  if (result >= 1 << *(unsigned char *)(a1 + 32)) {
    goto LABEL_31;
  }
  uint64_t v11 = a1 + 64;
  uint64_t v46 = a1 + 80;
  int64_t v47 = v6;
  uint64_t v12 = 1;
  uint64_t v48 = v9;
  uint64_t v49 = a1 + 64;
  uint64_t v50 = a1;
  while (1)
  {
    unint64_t v13 = v10 >> 6;
    if ((*(void *)(v11 + 8 * (v10 >> 6)) & (1 << v10)) == 0) {
      break;
    }
    if (*(_DWORD *)(a1 + 36) != v9) {
      goto LABEL_27;
    }
    uint64_t v83 = 1 << v10;
    uint64_t v53 = v12;
    uint64_t v14 = *(void *)(a1 + 56);
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    char v18 = (_OWORD *)(v14 + 208 * v10);
    v81[0] = *v18;
    long long v19 = v18[4];
    long long v21 = v18[1];
    long long v20 = v18[2];
    v81[3] = v18[3];
    v81[4] = v19;
    v81[1] = v21;
    v81[2] = v20;
    long long v22 = v18[8];
    long long v24 = v18[5];
    long long v23 = v18[6];
    v81[7] = v18[7];
    v81[8] = v22;
    v81[5] = v24;
    v81[6] = v23;
    long long v26 = v18[10];
    long long v25 = v18[11];
    long long v27 = *(_OWORD *)((char *)v18 + 185);
    v81[9] = v18[9];
    *(_OWORD *)((char *)v82 + 9) = v27;
    v81[10] = v26;
    v82[0] = v25;
    long long v28 = v18[10];
    long long v29 = v18[11];
    long long v30 = v18[8];
    long long v64 = v18[9];
    long long v65 = v28;
    v66[0] = v29;
    *(_OWORD *)((char *)v66 + 9) = *(_OWORD *)((char *)v18 + 185);
    long long v31 = v18[6];
    long long v62 = v18[7];
    long long v63 = v30;
    long long v32 = v18[3];
    long long v57 = v18[2];
    long long v58 = v32;
    long long v33 = v18[4];
    long long v60 = v18[5];
    long long v61 = v31;
    long long v59 = v33;
    long long v34 = v18[1];
    long long v55 = *v18;
    long long v56 = v34;
    v67[0] = v16;
    v67[1] = v17;
    long long v70 = v57;
    long long v71 = v58;
    long long v68 = v55;
    long long v69 = v34;
    long long v74 = v31;
    long long v75 = v62;
    long long v72 = v33;
    long long v73 = v60;
    *(_OWORD *)((char *)v79 + 9) = *(_OWORD *)((char *)v66 + 9);
    long long v78 = v65;
    v79[0] = v66[0];
    long long v76 = v30;
    long long v77 = v64;
    swift_bridgeObjectRetain();
    sub_1D435C1C4(v81);
    swift_bridgeObjectRetain();
    sub_1D435C1C4(v81);
    sub_1D440F384(v67);
    memset(v54, 0, sizeof(v54));
    swift_bridgeObjectRetain();
    sub_1D435C1C4(v81);
    uint64_t v35 = (uint64_t)v51;
    sub_1D43A0AB4((uint64_t)v81, v16, v17, v54, 0, (uint64_t)v51, 1.0);
    sub_1D440F384(v67);
    uint64_t v80 = v7;
    unint64_t v37 = *(void *)(v7 + 16);
    unint64_t v36 = *(void *)(v7 + 24);
    if (v37 >= v36 >> 1)
    {
      sub_1D42E1CF4(v36 > 1, v37 + 1, 1);
      uint64_t v7 = v80;
    }
    *(void *)(v7 + 16) = v37 + 1;
    uint64_t result = sub_1D42B2518(v35, v7+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v37);
    a1 = v50;
    char v38 = *(unsigned char *)(v50 + 32);
    if ((uint64_t)v10 >= 1 << v38) {
      goto LABEL_28;
    }
    uint64_t v11 = v49;
    uint64_t v39 = *(void *)(v49 + 8 * v13);
    if ((v39 & v83) == 0) {
      goto LABEL_29;
    }
    LODWORD(v9) = v48;
    if (*(_DWORD *)(v50 + 36) != v48) {
      goto LABEL_30;
    }
    unint64_t v40 = v39 & (-2 << (v10 & 0x3F));
    if (v40)
    {
      unint64_t v10 = __clz(__rbit64(v40)) | v10 & 0xFFFFFFFFFFFFFFC0;
      int64_t v41 = v47;
    }
    else
    {
      unint64_t v42 = v13 + 1;
      unint64_t v43 = (unint64_t)((1 << v38) + 63) >> 6;
      int64_t v41 = v47;
      if (v13 + 1 >= v43) {
        goto LABEL_20;
      }
      unint64_t v44 = *(void *)(v49 + 8 * v42);
      if (!v44)
      {
        while (v43 - 2 != v13)
        {
          unint64_t v44 = *(void *)(v46 + 8 * v13++);
          if (v44)
          {
            unint64_t v42 = v13 + 1;
            goto LABEL_19;
          }
        }
LABEL_20:
        unint64_t v10 = 1 << v38;
        goto LABEL_21;
      }
LABEL_19:
      unint64_t v10 = __clz(__rbit64(v44)) + (v42 << 6);
    }
LABEL_21:
    if (v53 == v41) {
      return v7;
    }
    if ((v10 & 0x8000000000000000) == 0)
    {
      uint64_t v12 = v53 + 1;
      if ((uint64_t)v10 < 1 << v38) {
        continue;
      }
    }
    goto LABEL_31;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1D440E104@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v83 = sub_1D4469688();
  uint64_t v3 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  unsigned __int8 v5 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 24);
  int64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v80 = a1;
  if (v7)
  {
    uint64_t v108 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1D4337310(0, v7, 0);
    uint64_t v81 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v82 = v6;
    int64_t v9 = v7 - 1;
    for (uint64_t i = 32; ; i += 208)
    {
      long long v96 = *(_OWORD *)(v6 + i);
      long long v11 = *(_OWORD *)(v6 + i + 16);
      long long v12 = *(_OWORD *)(v6 + i + 32);
      long long v13 = *(_OWORD *)(v6 + i + 64);
      long long v99 = *(_OWORD *)(v6 + i + 48);
      long long v100 = v13;
      long long v97 = v11;
      long long v98 = v12;
      long long v14 = *(_OWORD *)(v6 + i + 80);
      long long v15 = *(_OWORD *)(v6 + i + 96);
      long long v16 = *(_OWORD *)(v6 + i + 128);
      long long v103 = *(_OWORD *)(v6 + i + 112);
      long long v104 = v16;
      long long v101 = v14;
      long long v102 = v15;
      long long v17 = *(_OWORD *)(v6 + i + 144);
      long long v18 = *(_OWORD *)(v6 + i + 160);
      long long v19 = *(_OWORD *)(v6 + i + 176);
      *(_OWORD *)((char *)v107 + 9) = *(_OWORD *)(v6 + i + 185);
      long long v106 = v18;
      v107[0] = v19;
      long long v105 = v17;
      sub_1D435C1C4(&v96);
      sub_1D4469678();
      uint64_t v20 = sub_1D4469638();
      uint64_t v22 = v21;
      (*v81)(v5, v83);
      uint64_t v23 = v108;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D4337310(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v23 = v108;
      }
      unint64_t v25 = *(void *)(v23 + 16);
      unint64_t v24 = *(void *)(v23 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1D4337310(v24 > 1, v25 + 1, 1);
        uint64_t v23 = v108;
      }
      long long v86 = v98;
      long long v87 = v99;
      long long v90 = v102;
      long long v91 = v103;
      long long v88 = v100;
      long long v89 = v101;
      *(_OWORD *)((char *)v95 + 9) = *(_OWORD *)((char *)v107 + 9);
      long long v94 = v106;
      v95[0] = v107[0];
      long long v92 = v104;
      long long v93 = v105;
      long long v84 = v96;
      long long v85 = v97;
      *(void *)(v23 + 16) = v25 + 1;
      uint64_t v26 = v23 + 224 * v25;
      *(void *)(v26 + 32) = v20;
      *(void *)(v26 + 40) = v22;
      *(_OWORD *)(v26 + 48) = v84;
      long long v27 = v85;
      long long v28 = v86;
      long long v29 = v88;
      *(_OWORD *)(v26 + 96) = v87;
      *(_OWORD *)(v26 + 112) = v29;
      *(_OWORD *)(v26 + 64) = v27;
      *(_OWORD *)(v26 + 80) = v28;
      long long v30 = v89;
      long long v31 = v90;
      long long v32 = v92;
      *(_OWORD *)(v26 + 160) = v91;
      *(_OWORD *)(v26 + 176) = v32;
      *(_OWORD *)(v26 + 128) = v30;
      *(_OWORD *)(v26 + 144) = v31;
      long long v33 = v93;
      long long v34 = v94;
      long long v35 = v95[0];
      *(_OWORD *)(v26 + 233) = *(_OWORD *)((char *)v95 + 9);
      *(_OWORD *)(v26 + 208) = v34;
      *(_OWORD *)(v26 + 224) = v35;
      *(_OWORD *)(v26 + 192) = v33;
      if (!v9) {
        break;
      }
      --v9;
      uint64_t v6 = v82;
    }
    swift_bridgeObjectRelease();
    a1 = v80;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    if (*(void *)(v23 + 16)) {
      goto LABEL_10;
    }
  }
  else if (*(void *)(MEMORY[0x1E4FBC860] + 16))
  {
LABEL_10:
    sub_1D42D5DA0(&qword_1EA6CAE08);
    uint64_t v36 = sub_1D446A4C8();
    goto LABEL_13;
  }
  uint64_t v36 = MEMORY[0x1E4FBC868];
LABEL_13:
  *(void *)&long long v96 = v36;
  uint64_t v37 = swift_bridgeObjectRetain();
  sub_1D440EF30(v37, 1, &v96);
  swift_bridgeObjectRelease();
  uint64_t v38 = v96;
  uint64_t v39 = *(void *)(a1 + 16);
  sub_1D440E618(*(void *)(v39 + 16) != 0, (uint64_t)&v96);
  uint64_t v41 = *((void *)&v96 + 1);
  uint64_t v40 = v96;
  uint64_t v78 = *((void *)&v97 + 1);
  uint64_t v42 = v97;
  int v76 = BYTE1(v98);
  int v77 = v98;
  int v74 = BYTE3(v98);
  int v75 = BYTE2(v98);
  uint64_t v72 = v99;
  uint64_t v73 = *((void *)&v98 + 1);
  uint64_t v70 = v100;
  uint64_t v71 = *((void *)&v99 + 1);
  uint64_t v68 = v101;
  uint64_t v69 = *((void *)&v100 + 1);
  uint64_t v43 = sub_1D440DCFC(v38);
  uint64_t v44 = v43;
  int64_t v45 = *(void *)(v39 + 16);
  if (v45)
  {
    uint64_t v63 = v43;
    uint64_t v64 = v42;
    uint64_t v65 = v41;
    uint64_t v66 = v40;
    uint64_t v67 = v38;
    *(void *)&long long v96 = v8;
    swift_bridgeObjectRetain();
    uint64_t v46 = v39;
    sub_1D43372F0(0, v45, 0);
    uint64_t v47 = v96;
    uint64_t v62 = v46;
    uint64_t v48 = (uint64_t *)(v46 + 72);
    do
    {
      uint64_t v49 = *(v48 - 5);
      uint64_t v50 = *(v48 - 4);
      uint64_t v51 = *(v48 - 2);
      uint64_t v81 = (void (**)(char *, uint64_t))*(v48 - 3);
      uint64_t v82 = v49;
      uint64_t v52 = *v48;
      uint64_t v83 = *(v48 - 1);
      *(void *)&long long v96 = v47;
      unint64_t v53 = *(void *)(v47 + 16);
      unint64_t v54 = *(void *)(v47 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v53 >= v54 >> 1)
      {
        sub_1D43372F0(v54 > 1, v53 + 1, 1);
        uint64_t v47 = v96;
      }
      v48 += 6;
      *(void *)(v47 + 16) = v53 + 1;
      uint64_t v55 = v47 + 88 * v53;
      *(void *)(v55 + 32) = v82;
      *(void *)(v55 + 40) = v50;
      *(void *)(v55 + 48) = v81;
      *(void *)(v55 + 56) = v51;
      *(_DWORD *)(v55 + 64) = 256;
      *(void *)(v55 + 72) = 0;
      *(void *)(v55 + 80) = 0xE000000000000000;
      *(void *)(v55 + 88) = v83;
      *(void *)(v55 + 96) = v52;
      *(void *)(v55 + 104) = 0;
      *(void *)(v55 + 112) = 0;
      --v45;
    }
    while (v45);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    uint64_t v40 = v66;
    uint64_t v38 = v67;
    uint64_t v42 = v64;
    uint64_t v41 = v65;
    uint64_t v44 = v63;
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v47 = MEMORY[0x1E4FBC860];
  }
  uint64_t v58 = v78;
  long long v57 = v79;
  void *v79 = v40;
  v57[1] = v41;
  v57[2] = v42;
  v57[3] = v58;
  *((unsigned char *)v57 + 32) = v77;
  *((unsigned char *)v57 + 33) = v76;
  *((unsigned char *)v57 + 34) = v75;
  *((unsigned char *)v57 + 35) = v74;
  uint64_t v59 = v72;
  v57[5] = v73;
  v57[6] = v59;
  uint64_t v60 = v70;
  v57[7] = v71;
  v57[8] = v60;
  uint64_t v61 = v68;
  v57[9] = v69;
  v57[10] = v61;
  v57[11] = v44;
  v57[12] = v47;
  v57[13] = v38;
  return result;
}

void sub_1D440E618(char a1@<W0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F179C8]), sel_init);
  id v5 = objc_msgSend(v4, sel_aa_primaryAppleAccount);

  if (v5)
  {
    id v6 = objc_msgSend(v5, sel_aa_firstName);
    if (v6)
    {
      int64_t v7 = v6;
      uint64_t v8 = sub_1D4469B38();
      unint64_t v10 = v9;
    }
    else
    {
      uint64_t v8 = 0;
      unint64_t v10 = 0xE000000000000000;
    }
    id v15 = objc_msgSend(v5, sel_aa_lastName);
    if (v15)
    {
      long long v16 = v15;
      uint64_t v12 = sub_1D4469B38();
      unint64_t v14 = v17;
    }
    else
    {
      uint64_t v12 = 0;
      unint64_t v14 = 0xE000000000000000;
    }
    id v18 = objc_msgSend(v5, sel_aa_formattedUsername);
    if (v18)
    {
      long long v19 = v18;
      uint64_t v11 = sub_1D4469B38();
      unint64_t v13 = v20;
    }
    else
    {
      uint64_t v11 = 0;
      unint64_t v13 = 0xE000000000000000;
    }
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v8 = 0;
    unint64_t v13 = 0xE000000000000000;
    unint64_t v14 = 0xE000000000000000;
    unint64_t v10 = 0xE000000000000000;
  }

  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v14;
  *(unsigned char *)(a2 + 32) = a1 & 1;
  *(_WORD *)(a2 + 33) = 1;
  *(unsigned char *)(a2 + 35) = 0;
  *(void *)(a2 + 40) = v11;
  *(void *)(a2 + 48) = v13;
  *(void *)(a2 + 56) = 0x72656E776FLL;
  *(void *)(a2 + 64) = 0xE500000000000000;
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = 0;
}

uint64_t sub_1D440E7A4(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D4469928();
  sub_1D42D7FAC(v3, (uint64_t)qword_1EBD83228);
  id v4 = sub_1D44698F8();
  os_log_type_t v5 = sub_1D446A038();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v6 = 0;
    _os_log_impl(&dword_1D4271000, v4, v5, "FMIPDemoDataSource: Recalculating state for demo content.", v6, 2u);
    MEMORY[0x1D9447730](v6, -1, -1);
  }

  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  char v10 = *(unsigned char *)(v2 + 48);
  char v11 = *(unsigned char *)(v2 + 49);
  char v12 = *(unsigned char *)(v2 + 50);
  char v13 = *(unsigned char *)(v2 + 51);
  uint64_t v14 = *(void *)(v2 + 56);
  uint64_t v15 = *(void *)(v2 + 64);
  uint64_t v16 = *(void *)(v2 + 72);
  uint64_t v17 = *(void *)(v2 + 80);
  uint64_t v18 = *(void *)(v2 + 88);
  uint64_t v19 = *(void *)(v2 + 96);
  uint64_t v20 = *(void *)(v2 + 104);
  uint64_t v21 = *(void *)(v2 + 112);
  uint64_t v22 = *(void *)(v2 + 120);
  v35[0] = *(void *)(v2 + 16);
  v35[1] = v7;
  v35[2] = v8;
  v35[3] = v9;
  char v36 = v10;
  char v37 = v11;
  char v38 = v12;
  char v39 = v13;
  uint64_t v40 = v14;
  uint64_t v41 = v15;
  uint64_t v42 = v16;
  uint64_t v43 = v17;
  uint64_t v44 = v18;
  uint64_t v45 = v19;
  uint64_t v46 = v20;
  uint64_t v47 = v21;
  uint64_t v48 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D435B79C(v35, a1, (uint64_t)&v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = v50;
  uint64_t v24 = v51;
  char v25 = v52;
  char v26 = v53;
  char v27 = v54;
  char v28 = v55;
  long long v29 = v56;
  uint64_t v30 = v57;
  uint64_t v31 = v58;
  uint64_t v32 = v61;
  *(_OWORD *)(v2 + 16) = v49;
  *(void *)(v2 + 32) = v23;
  *(void *)(v2 + 40) = v24;
  *(unsigned char *)(v2 + 48) = v25;
  *(unsigned char *)(v2 + 49) = v26;
  *(unsigned char *)(v2 + 50) = v27;
  *(unsigned char *)(v2 + 51) = v28;
  *(_OWORD *)(v2 + 56) = v29;
  *(void *)(v2 + 72) = v30;
  *(void *)(v2 + 80) = v31;
  *(_OWORD *)(v2 + 88) = v59;
  *(_OWORD *)(v2 + 104) = v60;
  *(void *)(v2 + 120) = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D440EA4C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMIPDemoDataSource()
{
  return self;
}

uint64_t destroy for FMIPDemoDataState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMIPDemoDataState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMIPDemoDataState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FMIPDemoDataState(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for FMIPDemoDataState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPDemoDataState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPDemoDataState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPDemoDataState()
{
  return &type metadata for FMIPDemoDataState;
}

void sub_1D440EF30(uint64_t a1, char a2, void *a3)
{
  long long v88 = a3;
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v47 = a1 + 32;
  swift_bridgeObjectRetain();
  unint64_t v5 = 0;
  if (v4) {
    goto LABEL_3;
  }
LABEL_2:
  sub_1D440F570(v63);
  sub_1D440F4F0((uint64_t)v63, (uint64_t)&v75);
  unint64_t v6 = v4;
  while (1)
  {
    sub_1D440F4F0((uint64_t)&v75, (uint64_t)v62);
    sub_1D440F4F0((uint64_t)v62, (uint64_t)v63);
    if (sub_1D440F558((uint64_t)v63) == 1)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
    unint64_t v49 = v6;
    char v20 = a2;
    long long v21 = v75;
    long long v60 = v86;
    v61[0] = v87[0];
    *(_OWORD *)((char *)v61 + 9) = *(_OWORD *)((char *)v87 + 9);
    long long v56 = v82;
    long long v57 = v83;
    long long v58 = v84;
    long long v59 = v85;
    long long v52 = v78;
    long long v53 = v79;
    long long v54 = v80;
    long long v55 = v81;
    long long v50 = v76;
    long long v51 = v77;
    uint64_t v22 = (void *)*v88;
    unint64_t v24 = sub_1D42C4FCC(v75, *((uint64_t *)&v75 + 1));
    uint64_t v25 = v22[2];
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1D446A7A8();
      __break(1u);
      goto LABEL_24;
    }
    char v28 = v23;
    if (v22[3] < v27) {
      break;
    }
    if (v20)
    {
      if (v23) {
        goto LABEL_17;
      }
    }
    else
    {
      sub_1D43D9B5C();
      if (v28) {
        goto LABEL_17;
      }
    }
LABEL_13:
    uint64_t v31 = (void *)*v88;
    v31[(v24 >> 6) + 8] |= 1 << v24;
    *(_OWORD *)(v31[6] + 16 * v24) = v21;
    uint64_t v32 = (_OWORD *)(v31[7] + 208 * v24);
    *uint64_t v32 = v50;
    long long v33 = v51;
    long long v34 = v52;
    long long v35 = v54;
    v32[3] = v53;
    v32[4] = v35;
    v32[1] = v33;
    v32[2] = v34;
    long long v36 = v55;
    long long v37 = v56;
    long long v38 = v58;
    v32[7] = v57;
    v32[8] = v38;
    v32[5] = v36;
    v32[6] = v37;
    long long v39 = v59;
    long long v40 = v60;
    long long v41 = v61[0];
    *(_OWORD *)((char *)v32 + 185) = *(_OWORD *)((char *)v61 + 9);
    v32[10] = v40;
    v32[11] = v41;
    v32[9] = v39;
    uint64_t v42 = v31[2];
    BOOL v43 = __OFADD__(v42, 1);
    uint64_t v44 = v42 + 1;
    if (v43) {
      goto LABEL_21;
    }
    v31[2] = v44;
    a2 = 1;
    unint64_t v5 = v49;
    if (v49 == v4) {
      goto LABEL_2;
    }
LABEL_3:
    if (v5 >= *(void *)(a1 + 16)) {
      goto LABEL_22;
    }
    uint64_t v7 = (_OWORD *)(v47 + 224 * v5);
    long long v8 = v7[11];
    long long v9 = v7[9];
    long long v72 = v7[10];
    long long v73 = v8;
    long long v10 = v7[11];
    v74[0] = v7[12];
    *(_OWORD *)((char *)v74 + 9) = *(_OWORD *)((char *)v7 + 201);
    long long v11 = v7[7];
    long long v12 = v7[5];
    long long v68 = v7[6];
    long long v69 = v11;
    long long v13 = v7[7];
    long long v14 = v7[9];
    long long v70 = v7[8];
    long long v71 = v14;
    long long v15 = v7[3];
    long long v16 = v7[1];
    long long v64 = v7[2];
    long long v65 = v15;
    long long v17 = v7[3];
    long long v18 = v7[5];
    long long v66 = v7[4];
    long long v67 = v18;
    long long v19 = v7[1];
    v63[0] = *v7;
    v63[1] = v19;
    long long v85 = v72;
    long long v86 = v10;
    v87[0] = v7[12];
    *(_OWORD *)((char *)v87 + 9) = *(_OWORD *)((char *)v7 + 201);
    long long v81 = v68;
    long long v82 = v13;
    long long v83 = v70;
    long long v84 = v9;
    long long v77 = v64;
    long long v78 = v17;
    long long v79 = v66;
    long long v80 = v12;
    unint64_t v6 = v5 + 1;
    long long v75 = v63[0];
    long long v76 = v16;
    nullsub_1(&v75);
    sub_1D440F438(v63);
  }
  sub_1D43D54D4(v27, v20 & 1);
  unint64_t v29 = sub_1D42C4FCC(v21, *((uint64_t *)&v21 + 1));
  if ((v28 & 1) != (v30 & 1)) {
    goto LABEL_23;
  }
  unint64_t v24 = v29;
  if ((v28 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_17:
  uint64_t v45 = (void *)swift_allocError();
  swift_willThrow();
  id v46 = v45;
  sub_1D42D5DA0(&qword_1EA6C9360);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1D435C2F8(&v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_24:
  sub_1D446A378();
  sub_1D4469C08();
  sub_1D446A458();
  sub_1D4469C08();
  sub_1D446A488();
  __break(1u);
}

void *sub_1D440F384(void *a1)
{
  uint64_t v2 = a1[19];
  uint64_t v5 = a1[18];
  uint64_t v6 = a1[17];
  uint64_t v3 = a1[20];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D435C3A4(v6, v5, v2, v3);
  return a1;
}

void *sub_1D440F438(void *a1)
{
  uint64_t v2 = a1[19];
  uint64_t v5 = a1[18];
  uint64_t v6 = a1[17];
  uint64_t v3 = a1[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D435C274(v6, v5, v2, v3);
  return a1;
}

uint64_t sub_1D440F4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6CB388);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D440F558(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_1D440F570(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 201) = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

FMIPCore::FMFSatelliteLocationTapSource_optional __swiftcall FMFSatelliteLocationTapSource.init(rawValue:)(Swift::String rawValue)
{
  return (FMIPCore::FMFSatelliteLocationTapSource_optional)sub_1D440F808(v1);
}

uint64_t FMFSatelliteLocationTapSource.rawValue.getter()
{
  if (*v0) {
    return 0x6163696669746F6ELL;
  }
  else {
    return 0x636E75614C707061;
  }
}

uint64_t sub_1D440F5F0(char *a1, char *a2)
{
  return sub_1D441242C(*a1, *a2);
}

uint64_t sub_1D440F5FC()
{
  return sub_1D446A888();
}

uint64_t sub_1D440F690()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D440F710()
{
  return sub_1D446A888();
}

FMIPCore::FMFSatelliteLocationTapSource_optional sub_1D440F7A0(Swift::String *a1)
{
  return FMFSatelliteLocationTapSource.init(rawValue:)(*a1);
}

void sub_1D440F7AC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x636E75614C707061;
  if (*v1) {
    uint64_t v2 = 0x6163696669746F6ELL;
  }
  unint64_t v3 = 0xE900000000000068;
  if (*v1) {
    unint64_t v3 = 0xEF7061546E6F6974;
  }
  *a1 = v2;
  a1[1] = v3;
}

FMIPCore::FMFSatelliteEducationFlowType_optional __swiftcall FMFSatelliteEducationFlowType.init(rawValue:)(Swift::String rawValue)
{
  return (FMIPCore::FMFSatelliteEducationFlowType_optional)sub_1D440F808(v1);
}

uint64_t sub_1D440F808@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t FMFSatelliteEducationFlowType.rawValue.getter()
{
  if (*v0) {
    return 0x6F4C657461647075;
  }
  else {
    return 0xD00000000000001ALL;
  }
}

uint64_t sub_1D440F8B4(char *a1, char *a2)
{
  return sub_1D44124E4(*a1, *a2);
}

uint64_t sub_1D440F8C0()
{
  return sub_1D446A888();
}

uint64_t sub_1D440F954()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D440F9D4()
{
  return sub_1D446A888();
}

FMIPCore::FMFSatelliteEducationFlowType_optional sub_1D440FA64(Swift::String *a1)
{
  return FMFSatelliteEducationFlowType.init(rawValue:)(*a1);
}

void sub_1D440FA70(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD00000000000001ALL;
  if (*v1) {
    unint64_t v2 = 0x6F4C657461647075;
  }
  unint64_t v3 = 0x80000001D447DBC0;
  if (*v1) {
    unint64_t v3 = 0xEE006E6F69746163;
  }
  *a1 = v2;
  a1[1] = v3;
}

FMIPCore::FMFSatelliteUpdateBlockingCondition_optional __swiftcall FMFSatelliteUpdateBlockingCondition.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1D446A518();
  result.value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t FMFSatelliteUpdateBlockingCondition.rawValue.getter()
{
  unint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7055746553746F6ELL;
      break;
    case 2:
      unint64_t result = 0x646E656972466F6ELL;
      break;
    case 3:
      unint64_t result = 0x766544654D746F6ELL;
      break;
    case 4:
      unint64_t result = 0x656E696C6E6FLL;
      break;
    case 5:
      unint64_t result = 0x636972656E6567;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0x656E616C70726961;
      break;
    case 9:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D440FC6C(char a1)
{
  unint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
    case 5:
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD000000000000022;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D440FD74(unsigned __int8 *a1, char *a2)
{
  return sub_1D4411C80(*a1, *a2);
}

uint64_t sub_1D440FD80()
{
  return sub_1D446A888();
}

uint64_t sub_1D440FDC8()
{
  return sub_1D445CED8();
}

uint64_t sub_1D440FDD0()
{
  return sub_1D446A888();
}

FMIPCore::FMFSatelliteUpdateBlockingCondition_optional sub_1D440FE14(Swift::String *a1)
{
  return FMFSatelliteUpdateBlockingCondition.init(rawValue:)(*a1);
}

unint64_t sub_1D440FE20@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FMFSatelliteUpdateBlockingCondition.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t FMFSatelliteLocationNotificationEvent.notificationPresentedToUser.getter()
{
  return *v0;
}

uint64_t FMFSatelliteLocationNotificationEvent.notificationPresentedToUser.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t (*FMFSatelliteLocationNotificationEvent.notificationPresentedToUser.modify())()
{
  return nullsub_1;
}

uint64_t FMFSatelliteLocationNotificationEvent.notificationTapped.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t FMFSatelliteLocationNotificationEvent.notificationTapped.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*FMFSatelliteLocationNotificationEvent.notificationTapped.modify())()
{
  return nullsub_1;
}

FMIPCore::FMFSatelliteLocationNotificationEvent __swiftcall FMFSatelliteLocationNotificationEvent.init(notificationPresentedToUser:notificationTapped:)(Swift::Bool_optional notificationPresentedToUser, Swift::Bool_optional notificationTapped)
{
  v2->value = notificationPresentedToUser.value;
  v2[1].value = notificationTapped.value;
  result.notificationPresentedToUser = notificationPresentedToUser;
  return result;
}

void FMFSatelliteLocationUpdateEvent.educationFlowInitiatedType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *FMFSatelliteLocationUpdateEvent.educationFlowInitiatedType.setter(unsigned char *result)
{
  unsigned char *v1 = *result;
  return result;
}

uint64_t (*FMFSatelliteLocationUpdateEvent.educationFlowInitiatedType.modify())()
{
  return nullsub_1;
}

void FMFSatelliteLocationUpdateEvent.educationFlowInitiatedTapSource.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *FMFSatelliteLocationUpdateEvent.educationFlowInitiatedTapSource.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*FMFSatelliteLocationUpdateEvent.educationFlowInitiatedTapSource.modify())()
{
  return nullsub_1;
}

uint64_t FMFSatelliteLocationUpdateEvent.sendLocationTapped.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t FMFSatelliteLocationUpdateEvent.sendLocationTapped.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*FMFSatelliteLocationUpdateEvent.sendLocationTapped.modify())()
{
  return nullsub_1;
}

void FMFSatelliteLocationUpdateEvent.updateFlowBlockingCondition.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 3);
}

unsigned char *FMFSatelliteLocationUpdateEvent.updateFlowBlockingCondition.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 3) = *result;
  return result;
}

uint64_t (*FMFSatelliteLocationUpdateEvent.updateFlowBlockingCondition.modify())()
{
  return nullsub_1;
}

uint64_t FMFSatelliteLocationUpdateEvent.updateFlowOffline.getter()
{
  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t FMFSatelliteLocationUpdateEvent.updateFlowOffline.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 4) = result;
  return result;
}

uint64_t (*FMFSatelliteLocationUpdateEvent.updateFlowOffline.modify())()
{
  return nullsub_1;
}

uint64_t FMFSatelliteLocationUpdateEvent.updateFlowCanceled.getter()
{
  return *(unsigned __int8 *)(v0 + 5);
}

uint64_t FMFSatelliteLocationUpdateEvent.updateFlowCanceled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 5) = result;
  return result;
}

uint64_t (*FMFSatelliteLocationUpdateEvent.updateFlowCanceled.modify())()
{
  return nullsub_1;
}

uint64_t FMFSatelliteLocationUpdateEvent.updateFlowLSOffGoToSettingsPressed.getter()
{
  return *(unsigned __int8 *)(v0 + 6);
}

uint64_t FMFSatelliteLocationUpdateEvent.updateFlowLSOffGoToSettingsPressed.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 6) = result;
  return result;
}

uint64_t (*FMFSatelliteLocationUpdateEvent.updateFlowLSOffGoToSettingsPressed.modify())()
{
  return nullsub_1;
}

uint64_t FMFSatelliteLocationUpdateEvent.updateFlowLSOffOkPressed.getter()
{
  return *(unsigned __int8 *)(v0 + 7);
}

uint64_t FMFSatelliteLocationUpdateEvent.updateFlowLSOffOkPressed.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 7) = result;
  return result;
}

uint64_t (*FMFSatelliteLocationUpdateEvent.updateFlowLSOffOkPressed.modify())()
{
  return nullsub_1;
}

FMIPCore::FMFSatelliteLocationUpdateEvent __swiftcall FMFSatelliteLocationUpdateEvent.init(flowType:educationFlowInitiatedTapSource:sendLocationTapped:updateFlowBlockingCondition:updateFlowOffline:updateFlowCanceled:updateFlowLSOffGoToSettingsPressed:updateFlowLSOffOkPressed:)(FMIPCore::FMFSatelliteEducationFlowType flowType, FMIPCore::FMFSatelliteLocationTapSource educationFlowInitiatedTapSource, Swift::Bool sendLocationTapped, FMIPCore::FMFSatelliteUpdateBlockingCondition updateFlowBlockingCondition, Swift::Bool updateFlowOffline, Swift::Bool updateFlowCanceled, Swift::Bool_optional updateFlowLSOffGoToSettingsPressed, Swift::Bool_optional updateFlowLSOffOkPressed)
{
  char v9 = *(unsigned char *)educationFlowInitiatedTapSource;
  char v10 = *(unsigned char *)updateFlowBlockingCondition;
  v8->value = *(Swift::Bool *)flowType;
  v8[1].value = v9;
  v8[2].value = sendLocationTapped;
  v8[3].value = v10;
  v8[4].value = updateFlowOffline;
  v8[5].value = updateFlowCanceled;
  v8[6].value = updateFlowLSOffGoToSettingsPressed.value;
  v8[7].value = updateFlowLSOffOkPressed.value;
  result.educationFlowInitiatedType = flowType;
  return result;
}

Swift::Void __swiftcall FMIPManager.enqueue(satelliteLocationUpdateEvent:)(FMIPCore::FMFSatelliteLocationUpdateEvent satelliteLocationUpdateEvent)
{
  char v1 = *(unsigned char *)satelliteLocationUpdateEvent.educationFlowInitiatedType;
  char v2 = *(unsigned char *)(*(void *)&satelliteLocationUpdateEvent + 1);
  char v3 = *(unsigned char *)(*(void *)&satelliteLocationUpdateEvent + 2);
  char v4 = *(unsigned char *)(*(void *)&satelliteLocationUpdateEvent + 3);
  char v5 = *(unsigned char *)(*(void *)&satelliteLocationUpdateEvent + 4);
  char v6 = *(unsigned char *)(*(void *)&satelliteLocationUpdateEvent + 5);
  char v7 = *(unsigned char *)(*(void *)&satelliteLocationUpdateEvent + 6);
  char v8 = *(unsigned char *)(*(void *)&satelliteLocationUpdateEvent + 7);
  uint64_t v9 = sub_1D4469108();
  v11[3] = v9;
  void v11[4] = sub_1D42BF510(&qword_1EBD7E550, MEMORY[0x1E4F619E0]);
  char v10 = sub_1D42BECB4(v11);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v9 - 8) + 104))(v10, *MEMORY[0x1E4F619C0], v9);
  LOBYTE(v9) = MEMORY[0x1D9445460](v11);
  sub_1D42BEC64((uint64_t)v11);
  if (v9)
  {
    LOBYTE(v11[0]) = v1;
    BYTE1(v11[0]) = v2;
    BYTE2(v11[0]) = v3;
    BYTE3(v11[0]) = v4;
    BYTE4(v11[0]) = v5;
    BYTE5(v11[0]) = v6;
    BYTE6(v11[0]) = v7;
    HIBYTE(v11[0]) = v8;
    _s8FMIPCore13FMIPAnalyticsV32sendSatelliteLocationUpdateEvent5eventyAA012FMFSatelliteefG0V_tFZ_0((char *)v11);
  }
}

Swift::Void __swiftcall FMIPManager.enqueue(satelliteLocationNotificationEvent:)(FMIPCore::FMFSatelliteLocationNotificationEvent satelliteLocationNotificationEvent)
{
  char v1 = **(unsigned char **)&satelliteLocationNotificationEvent.notificationPresentedToUser.value;
  char v2 = *(unsigned char *)(*(void *)&satelliteLocationNotificationEvent.notificationPresentedToUser.value + 1);
  uint64_t v3 = sub_1D4469108();
  v5[3] = v3;
  v5[4] = sub_1D42BF510(&qword_1EBD7E550, MEMORY[0x1E4F619E0]);
  char v4 = sub_1D42BECB4(v5);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v3 - 8) + 104))(v4, *MEMORY[0x1E4F619C0], v3);
  LOBYTE(v3) = MEMORY[0x1D9445460](v5);
  sub_1D42BEC64((uint64_t)v5);
  if (v3)
  {
    LOBYTE(v5[0]) = v1;
    BYTE1(v5[0]) = v2;
    _s8FMIPCore13FMIPAnalyticsV38sendSatelliteLocationNotificationEvent5eventyAA012FMFSatelliteefG0V_tFZ_0((char *)v5);
  }
}

uint64_t sub_1D4410294(unint64_t a1)
{
  uint64_t v2 = (a1 >> 16) & 1;
  unint64_t v3 = sub_1D4274BFC(MEMORY[0x1E4FBC860]);
  id v4 = objc_allocWithZone(NSString);
  char v5 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithString_, v5);

  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v6, 0xD00000000000001ALL, 0x80000001D4483CD0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v2);
  char v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v8, 0xD000000000000012, 0x80000001D4483CB0, v9);
  swift_bridgeObjectRelease();
  id v10 = objc_allocWithZone(NSString);
  long long v11 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v10, sel_initWithString_, v11);

  char v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v12, 0xD000000000000018, 0x80000001D4483C90, v13);
  swift_bridgeObjectRelease();
  id v14 = objc_allocWithZone(NSString);
  long long v15 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v14, sel_initWithString_, v15);

  char v17 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v16, 0xD00000000000001BLL, 0x80000001D4483C70, v17);
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, HIDWORD(a1) & 1);
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v18, 0xD000000000000011, 0x80000001D4483C50, v19);
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, (a1 >> 40) & 1);
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v20, 0xD000000000000012, 0x80000001D4483C30, v21);
  swift_bridgeObjectRelease();
  if ((a1 & 0xFF000000000000) != 0x2000000000000)
  {
    id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, HIWORD(a1) & 1);
    char v23 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D4299B3C((uint64_t)v22, 0xD000000000000022, 0x80000001D4483C00, v23);
    swift_bridgeObjectRelease();
  }
  if (HIBYTE(a1) != 2)
  {
    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, HIBYTE(a1) & 1);
    char v25 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D4299B3C((uint64_t)v24, 0xD000000000000018, 0x80000001D4483BE0, v25);
    swift_bridgeObjectRelease();
  }
  sub_1D4411564(v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4410824(unsigned int a1)
{
  int v2 = a1;
  unint64_t v3 = sub_1D4274BFC(MEMORY[0x1E4FBC860]);
  if (v2 != 2)
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, a1 & 1);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1D4299B3C((uint64_t)v4, 0xD00000000000001BLL, 0x80000001D4483BC0, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  if ((a1 & 0xFF00) != 0x200)
  {
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, (a1 >> 8) & 1);
    char v7 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D4299B3C((uint64_t)v6, 0xD000000000000012, 0x80000001D4483BA0, v7);
    swift_bridgeObjectRelease();
  }
  sub_1D44116FC(v3);
  return swift_bridgeObjectRelease();
}

uint64_t _s8FMIPCore13FMIPAnalyticsV32sendSatelliteLocationUpdateEvent5eventyAA012FMFSatelliteefG0V_tFZ_0(char *a1)
{
  uint64_t v2 = sub_1D4469958();
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D44699B8();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v24 = v5;
  MEMORY[0x1F4188790](v5);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *a1;
  char v9 = a1[1];
  char v10 = a1[2];
  char v11 = a1[3];
  char v12 = a1[4];
  char v13 = a1[5];
  int v14 = a1[6];
  int v21 = a1[7];
  int v22 = v14;
  uint64_t v15 = sub_1D4469108();
  char v28 = (void *)v15;
  uint64_t v29 = sub_1D42BF510(&qword_1EBD7E550, MEMORY[0x1E4F619E0]);
  id v16 = sub_1D42BECB4(aBlock);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v16, *MEMORY[0x1E4F619C0], v15);
  LOBYTE(v15) = MEMORY[0x1D9445460](aBlock);
  uint64_t result = sub_1D42BEC64((uint64_t)aBlock);
  if (v15)
  {
    if (qword_1EA6C9010 != -1) {
      swift_once();
    }
    uint64_t v20 = qword_1EBD7CB00;
    id v18 = (unsigned char *)swift_allocObject();
    v18[16] = v8;
    v18[17] = v9;
    v18[18] = v10;
    v18[19] = v11;
    v18[20] = v12;
    v18[21] = v13;
    v18[22] = v22;
    v18[23] = v21;
    uint64_t v29 = (uint64_t)sub_1D44118DC;
    char v30 = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_1D42BD950;
    char v28 = &unk_1F2C10510;
    char v19 = _Block_copy(aBlock);
    sub_1D4469988();
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1D42BF510((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42E2378();
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v7, v4, v19);
    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v2);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v24);
    return swift_release();
  }
  return result;
}

uint64_t _s8FMIPCore13FMIPAnalyticsV38sendSatelliteLocationNotificationEvent5eventyAA012FMFSatelliteefG0V_tFZ_0(char *a1)
{
  uint64_t v2 = sub_1D4469958();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D44699B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = *a1;
  char v11 = a1[1];
  uint64_t v12 = sub_1D4469108();
  char v19 = (void *)v12;
  uint64_t v20 = sub_1D42BF510(&qword_1EBD7E550, MEMORY[0x1E4F619E0]);
  char v13 = sub_1D42BECB4(aBlock);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v13, *MEMORY[0x1E4F619C0], v12);
  LOBYTE(v12) = MEMORY[0x1D9445460](aBlock);
  uint64_t result = sub_1D42BEC64((uint64_t)aBlock);
  if (v12)
  {
    if (qword_1EA6C9010 != -1) {
      swift_once();
    }
    uint64_t v15 = swift_allocObject();
    *(unsigned char *)(v15 + 16) = v10;
    *(unsigned char *)(v15 + 17) = v11;
    uint64_t v20 = (uint64_t)sub_1D441155C;
    uint64_t v21 = v15;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_1D42BD950;
    char v19 = &unk_1F2C10470;
    id v16 = _Block_copy(aBlock);
    sub_1D4469988();
    v17[1] = MEMORY[0x1E4FBC860];
    sub_1D42BF510((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42E2378();
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v9, v5, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return swift_release();
  }
  return result;
}

unint64_t sub_1D4411084()
{
  unint64_t result = qword_1EA6CB390;
  if (!qword_1EA6CB390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB390);
  }
  return result;
}

unint64_t sub_1D44110DC()
{
  unint64_t result = qword_1EA6CB398;
  if (!qword_1EA6CB398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB398);
  }
  return result;
}

unint64_t sub_1D4411134()
{
  unint64_t result = qword_1EA6CB3A0;
  if (!qword_1EA6CB3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB3A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFSatelliteLocationTapSource()
{
  return &type metadata for FMFSatelliteLocationTapSource;
}

unsigned char *_s8FMIPCore29FMFSatelliteLocationTapSourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D441126CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFSatelliteEducationFlowType()
{
  return &type metadata for FMFSatelliteEducationFlowType;
}

unsigned char *storeEnumTagSinglePayload for FMFSatelliteUpdateBlockingCondition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    void *result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4411370);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFSatelliteUpdateBlockingCondition()
{
  return &type metadata for FMFSatelliteUpdateBlockingCondition;
}

uint64_t storeEnumTagSinglePayload for FMFSatelliteLocationNotificationEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4411474);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFSatelliteLocationNotificationEvent()
{
  return &type metadata for FMFSatelliteLocationNotificationEvent;
}

void *initializeBufferWithCopyOfBuffer for FMFSatelliteLocationUpdateEvent(void *result, void *a2)
{
  void *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFSatelliteLocationUpdateEvent(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[8]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFSatelliteLocationUpdateEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFSatelliteLocationUpdateEvent()
{
  return &type metadata for FMFSatelliteLocationUpdateEvent;
}

uint64_t sub_1D441154C()
{
  return MEMORY[0x1F4186498](v0, 18, 7);
}

uint64_t sub_1D441155C()
{
  return sub_1D4410824(*(unsigned __int16 *)(v0 + 16));
}

void sub_1D4411564(uint64_t a1)
{
  uint64_t v2 = sub_1D4469108();
  uint64_t v8 = (void *)v2;
  uint64_t v9 = sub_1D42BF510(&qword_1EBD7E550, MEMORY[0x1E4F619E0]);
  unsigned int v3 = sub_1D42BECB4(v7);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v2 - 8) + 104))(v3, *MEMORY[0x1E4F619C0], v2);
  LOBYTE(v2) = MEMORY[0x1D9445460](v7);
  sub_1D42BEC64((uint64_t)v7);
  if (v2)
  {
    BOOL v4 = (void *)sub_1D4469B08();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    uint64_t v9 = (uint64_t)sub_1D4308610;
    uint64_t v10 = v5;
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 1107296256;
    v7[2] = (uint64_t)sub_1D4356EBC;
    uint64_t v8 = &unk_1F2C10560;
    unsigned int v6 = _Block_copy(v7);
    swift_bridgeObjectRetain();
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v6);
  }
}

void sub_1D44116FC(uint64_t a1)
{
  uint64_t v2 = sub_1D4469108();
  uint64_t v8 = (void *)v2;
  uint64_t v9 = sub_1D42BF510(&qword_1EBD7E550, MEMORY[0x1E4F619E0]);
  unsigned int v3 = sub_1D42BECB4(v7);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v2 - 8) + 104))(v3, *MEMORY[0x1E4F619C0], v2);
  LOBYTE(v2) = MEMORY[0x1D9445460](v7);
  sub_1D42BEC64((uint64_t)v7);
  if (v2)
  {
    BOOL v4 = (void *)sub_1D4469B08();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    uint64_t v9 = (uint64_t)sub_1D430A640;
    uint64_t v10 = v5;
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 1107296256;
    v7[2] = (uint64_t)sub_1D4356EBC;
    uint64_t v8 = &unk_1F2C104C0;
    unsigned int v6 = _Block_copy(v7);
    swift_bridgeObjectRetain();
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v6);
  }
}

uint64_t sub_1D4411894()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D44118CC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D44118DC()
{
  uint64_t v1 = 0x10000000000;
  if (!v0[21]) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = 0x100000000;
  if (!v0[20]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x10000;
  if (!v0[18]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 256;
  if (!v0[17]) {
    uint64_t v4 = 0;
  }
  return sub_1D4410294(v3 | v4 | v2 | ((unint64_t)v0[19] << 24) | v1 | ((unint64_t)v0[22] << 48) | ((unint64_t)v0[23] << 56) | v0[16]);
}

uint64_t sub_1D441196C(char a1, char a2)
{
  if (qword_1D44790B8[a1] == qword_1D44790B8[a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1D446A758();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1D44119D4(uint64_t a1, uint64_t a2)
{
  return sub_1D44152BC(a1, a2, (uint64_t (*)(void))FMIPLocationType.rawValue.getter);
}

uint64_t sub_1D44119EC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656C746974;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x656C746974;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6567617373656DLL;
      break;
    case 2:
      unint64_t v5 = 0x6E6F747475426B6FLL;
      unint64_t v3 = 0xED0000656C746954;
      break;
    case 3:
      unint64_t v5 = 0x6E6F747475426B6FLL;
      unint64_t v3 = 0xEB000000004C5255;
      break;
    case 4:
      unint64_t v3 = 0x80000001D447E130;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 5:
      unint64_t v5 = 0x75426C65636E6163;
      unint64_t v3 = 0xEF4C52556E6F7474;
      break;
    case 6:
      unint64_t v5 = 0x7079547472656C61;
      unint64_t v3 = 0xE900000000000065;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x6567617373656DLL) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xED0000656C746954;
      if (v5 != 0x6E6F747475426B6FLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xEB000000004C5255;
      if (v5 != 0x6E6F747475426B6FLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0x80000001D447E130;
      if (v5 != 0xD000000000000011) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v2 = 0x75426C65636E6163;
      unint64_t v6 = 0xEF4C52556E6F7474;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE900000000000065;
      if (v5 != 0x7079547472656C61) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D4411C80(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 1701736302;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1701736302;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x7055746553746F6ELL;
      break;
    case 2:
      unint64_t v5 = 0x646E656972466F6ELL;
      unint64_t v3 = 0xE900000000000073;
      break;
    case 3:
      unint64_t v5 = 0x766544654D746F6ELL;
      unint64_t v3 = 0xEB00000000656369;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x656E696C6E6FLL;
      break;
    case 5:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x636972656E6567;
      break;
    case 6:
      unint64_t v3 = 0x80000001D447DC10;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 7:
      unint64_t v5 = 0xD000000000000018;
      unint64_t v6 = "locationServicesDisabled";
      goto LABEL_11;
    case 8:
      unint64_t v5 = 0x656E616C70726961;
      unint64_t v3 = 0xEC00000065646F4DLL;
      break;
    case 9:
      unint64_t v5 = 0xD000000000000017;
      unint64_t v6 = "shareMyLocationDisabled";
LABEL_11:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE800000000000000;
      unint64_t v2 = 0x7055746553746F6ELL;
      break;
    case 2:
      unint64_t v2 = 0x646E656972466F6ELL;
      unint64_t v7 = 0xE900000000000073;
      break;
    case 3:
      unint64_t v2 = 0x766544654D746F6ELL;
      unint64_t v7 = 0xEB00000000656369;
      break;
    case 4:
      unint64_t v7 = 0xE600000000000000;
      unint64_t v2 = 0x656E696C6E6FLL;
      break;
    case 5:
      unint64_t v7 = 0xE700000000000000;
      unint64_t v2 = 0x636972656E6567;
      break;
    case 6:
      unint64_t v7 = 0x80000001D447DC10;
      unint64_t v2 = 0xD000000000000012;
      break;
    case 7:
      unint64_t v2 = 0xD000000000000018;
      uint64_t v8 = "locationServicesDisabled";
      goto LABEL_22;
    case 8:
      unint64_t v2 = 0x656E616C70726961;
      unint64_t v7 = 0xEC00000065646F4DLL;
      break;
    case 9:
      unint64_t v2 = 0xD000000000000017;
      uint64_t v8 = "shareMyLocationDisabled";
LABEL_22:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1D4411F80(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6574737572547369;
  }
  else {
    uint64_t v3 = 0x65447473614C7369;
  }
  if (v2) {
    unint64_t v4 = 0xEC00000065636976;
  }
  else {
    unint64_t v4 = 0xEF65636976654464;
  }
  if (a2) {
    uint64_t v5 = 0x6574737572547369;
  }
  else {
    uint64_t v5 = 0x65447473614C7369;
  }
  if (a2) {
    unint64_t v6 = 0xEF65636976654464;
  }
  else {
    unint64_t v6 = 0xEC00000065636976;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D441203C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656C746974;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x656C746974;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD00000000000001BLL;
      unint64_t v3 = 0x80000001D447D9E0;
      break;
    case 2:
      unint64_t v6 = "heatzonePercentX";
      goto LABEL_5;
    case 3:
      unint64_t v6 = "heatzonePercentY";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v5 = 0x6567616D69;
      break;
    case 5:
      unint64_t v5 = 0x55656C6261736964;
      unint64_t v3 = 0xEA00000000004C52;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0x80000001D447D9E0;
      if (v5 == 0xD00000000000001BLL) {
        goto LABEL_17;
      }
      goto LABEL_20;
    case 2:
      uint64_t v8 = "heatzonePercentX";
      goto LABEL_13;
    case 3:
      uint64_t v8 = "heatzonePercentY";
LABEL_13:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      if (v5 != 0xD000000000000010) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 4:
      uint64_t v2 = 0x6567616D69;
      goto LABEL_16;
    case 5:
      unint64_t v7 = 0xEA00000000004C52;
      if (v5 != 0x55656C6261736964) {
        goto LABEL_20;
      }
      goto LABEL_17;
    default:
LABEL_16:
      if (v5 != v2) {
        goto LABEL_20;
      }
LABEL_17:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_20:
      }
        char v9 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1D4412238(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000006F72;
  uint64_t v3 = 0x506B6F6F6263616DLL;
  uint64_t v4 = a1;
  uint64_t v5 = 0x506B6F6F6263616DLL;
  unint64_t v6 = 0xEA00000000006F72;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x656E6F685069;
      break;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1684099177;
      break;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x6863746177;
      break;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x6F725063614D69;
      break;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x73646F70726961;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      if (v5 == 0x656E6F685069) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v2 = 0xE400000000000000;
      if (v5 != 1684099177) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x6863746177) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x6F725063614D69;
      goto LABEL_15;
    case 5:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x73646F70726961) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v3) {
        goto LABEL_19;
      }
LABEL_16:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D441242C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6163696669746F6ELL;
  }
  else {
    uint64_t v3 = 0x636E75614C707061;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000068;
  }
  else {
    unint64_t v4 = 0xEF7061546E6F6974;
  }
  if (a2) {
    uint64_t v5 = 0x6163696669746F6ELL;
  }
  else {
    uint64_t v5 = 0x636E75614C707061;
  }
  if (a2) {
    unint64_t v6 = 0xEF7061546E6F6974;
  }
  else {
    unint64_t v6 = 0xE900000000000068;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D44124E4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x6F4C657461647075;
  }
  else {
    unint64_t v3 = 0xD00000000000001ALL;
  }
  if (v2) {
    unint64_t v4 = 0x80000001D447DBC0;
  }
  else {
    unint64_t v4 = 0xEE006E6F69746163;
  }
  if (a2) {
    unint64_t v5 = 0x6F4C657461647075;
  }
  else {
    unint64_t v5 = 0xD00000000000001ALL;
  }
  if (a2) {
    unint64_t v6 = 0xEE006E6F69746163;
  }
  else {
    unint64_t v6 = 0x80000001D447DBC0;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D441259C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x656B6F5468747561;
  }
  else {
    uint64_t v3 = 0x7263734570696D66;
  }
  if (v2) {
    unint64_t v4 = 0xEE0044495555776FLL;
  }
  else {
    unint64_t v4 = 0xE90000000000006ELL;
  }
  if (a2) {
    uint64_t v5 = 0x656B6F5468747561;
  }
  else {
    uint64_t v5 = 0x7263734570696D66;
  }
  if (a2) {
    unint64_t v6 = 0xE90000000000006ELL;
  }
  else {
    unint64_t v6 = 0xEE0044495555776FLL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D4412654(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6573617265;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6573617265;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x72456C65636E6163;
      unint64_t v3 = 0xEB00000000657361;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1801678700;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x65646F4D74736F6CLL;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x65766F6D6572;
      break;
    case 5:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB00000000657361;
      if (v5 == 0x72456C65636E6163) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1801678700) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x65646F4D74736F6CLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x65766F6D6572;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x6E776F6E6B6E75) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D4412850(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1162760004;
  }
  else {
    uint64_t v3 = 0x474E4944414F4CLL;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1162760004;
  }
  else {
    uint64_t v5 = 0x474E4944414F4CLL;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D44128F0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x786F626F666E69;
  }
  else {
    uint64_t v3 = 0x696C656372756F73;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007473;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x786F626F666E69;
  }
  else {
    uint64_t v5 = 0x696C656372756F73;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xEA00000000007473;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D44129E4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6F4D6E4F70656562;
  }
  else {
    uint64_t v3 = 0x647261646E617473;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xEA00000000006576;
  }
  if (a2) {
    uint64_t v5 = 0x6F4D6E4F70656562;
  }
  else {
    uint64_t v5 = 0x647261646E617473;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000006576;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D4412A90(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC00000073657461;
  uint64_t v3 = 0x6470556C69616D65;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6470556C69616D65;
  unint64_t v6 = 0xEC00000073657461;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x72624E72656E776FLL;
      break;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x6C69616D65;
      break;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x646E756F73;
      break;
    case 4:
      uint64_t v5 = 0x6F43737574617473;
      unint64_t v6 = 0xEA00000000006564;
      break;
    case 5:
      uint64_t v5 = 0x74736F4C706F7473;
      unint64_t v6 = 0xEC00000065646F4DLL;
      break;
    case 6:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1954047348;
      break;
    case 7:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x7478655472657375;
      break;
    case 8:
      uint64_t v5 = 0x6954657461657263;
      unint64_t v6 = 0xEF706D617473656DLL;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      if (v5 == 0x72624E72656E776FLL) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x6C69616D65) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x646E756F73) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v2 = 0xEA00000000006564;
      if (v5 != 0x6F43737574617473) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v2 = 0xEC00000065646F4DLL;
      if (v5 != 0x74736F4C706F7473) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v2 = 0xE400000000000000;
      if (v5 != 1954047348) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x7478655472657375;
      goto LABEL_24;
    case 8:
      unint64_t v2 = 0xEF706D617473656DLL;
      if (v5 != 0x6954657461657263) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v3) {
        goto LABEL_28;
      }
LABEL_25:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D4412D7C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x6D614E6C65646F6DLL;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6D614E6C65646F6DLL;
  unint64_t v6 = 0xE900000000000065;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0x80000001D447D210;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 2:
      unint64_t v5 = 0x726F4D6E7261656CLL;
      unint64_t v6 = 0xED00006F666E4965;
      break;
    case 3:
      unint64_t v5 = 0x49656C6261736964;
      unint64_t v6 = 0xEB000000006F666ELL;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x80000001D447D210;
      if (v5 == 0xD000000000000010) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x726F4D6E7261656CLL;
      unint64_t v2 = 0xED00006F666E4965;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xEB000000006F666ELL;
      if (v5 == 0x49656C6261736964) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D4412F44(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEE00444F456C6974;
  uint64_t v3 = 0x6E5565726F6E6769;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6F4665726F6E6769;
    }
    else {
      uint64_t v5 = 0x68536465736F6C63;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xED00007265766572;
    }
    else {
      unint64_t v6 = 0xEB00000000746565;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x6E5565726F6E6769;
  unint64_t v6 = 0xEE00444F456C6974;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x6F4665726F6E6769;
    }
    else {
      uint64_t v3 = 0x68536465736F6C63;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xED00007265766572;
    }
    else {
      unint64_t v2 = 0xEB00000000746565;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D4413098(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x72656E776FLL;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x72656E776FLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x646572616873;
      break;
    case 2:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 29813;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1701736302;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x646572616873) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE200000000000000;
      uint64_t v2 = 29813;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1701736302) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D44131F0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000726562;
  uint64_t v3 = 0x6D754E72656E776FLL;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6D754E72656E776FLL;
  unint64_t v6 = 0xEB00000000726562;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x6567617373656DLL;
      break;
    case 2:
      uint64_t v5 = 0x6D617473656D6974;
      unint64_t v6 = 0xE900000000000070;
      break;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x6C69616D65;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x6567617373656DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x6D617473656D6974;
      unint64_t v2 = 0xE900000000000070;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE500000000000000;
      if (v5 == 0x6C69616D65) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D4413390(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x676154726961;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x676154726961;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x73646F50726961;
      break;
    case 2:
      uint64_t v5 = 0x726F737365636361;
      unint64_t v3 = 0xE900000000000079;
      break;
    case 3:
      uint64_t v5 = 0x656369766564;
      break;
    case 4:
      uint64_t v5 = 0x6E6F73726570;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x73646F50726961) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE900000000000079;
      if (v5 != 0x726F737365636361) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x656369766564;
      goto LABEL_12;
    case 4:
      if (v5 != 0x6E6F73726570) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D441353C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 29813;
  }
  else {
    uint64_t v3 = 0x72656E776FLL;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE200000000000000;
  }
  if (a2) {
    uint64_t v5 = 29813;
  }
  else {
    uint64_t v5 = 0x72656E776FLL;
  }
  if (a2) {
    unint64_t v6 = 0xE200000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D44135D4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000064;
  uint64_t v3 = 0x6E756F5379616C70;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E756F5379616C70;
  unint64_t v6 = 0xE900000000000064;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6F69746365726964;
      unint64_t v6 = 0xEA0000000000736ELL;
      break;
    case 2:
      unint64_t v5 = 0x74696D69786F7270;
      unint64_t v6 = 0xED0000646E694679;
      break;
    case 3:
      unint64_t v5 = 0x6F69736963657270;
      unint64_t v6 = 0xED0000646E69466ELL;
      break;
    case 4:
      unint64_t v5 = 0x6F4C656C62616E65;
      unint64_t v6 = 0xEE0065646F4D7473;
      break;
    case 5:
      unint64_t v6 = 0x80000001D447D990;
      unint64_t v5 = 0xD000000000000015;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEA0000000000736ELL;
      if (v5 == 0x6F69746365726964) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v2 = 0xED0000646E694679;
      if (v5 != 0x74696D69786F7270) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v2 = 0xED0000646E69466ELL;
      if (v5 != 0x6F69736963657270) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v3 = 0x6F4C656C62616E65;
      unint64_t v2 = 0xEE0065646F4D7473;
      goto LABEL_15;
    case 5:
      unint64_t v2 = 0x80000001D447D990;
      if (v5 != 0xD000000000000015) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v3) {
        goto LABEL_19;
      }
LABEL_16:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D4413848(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x73646F50726961;
    }
    else {
      uint64_t v3 = 0x726F737365636361;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE900000000000079;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x73646F50726961;
      }
      else {
        uint64_t v6 = 0x726F737365636361;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE900000000000079;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x676154726961;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x676154726961)
  {
LABEL_21:
    char v8 = sub_1D446A758();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D4413964(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E6F697461636F6CLL;
    }
    else {
      uint64_t v3 = 0x6D617473656D6974;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xE900000000000070;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E6F697461636F6CLL;
      }
      else {
        uint64_t v6 = 0x6D617473656D6974;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xE900000000000070;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x73736572646461;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x73736572646461)
  {
LABEL_21:
    char v8 = sub_1D446A758();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D4413AA8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC0000006C657665;
  uint64_t v3 = 0x4C79726574746162;
  uint64_t v4 = a1;
  uint64_t v5 = 0x4C79726574746162;
  unint64_t v6 = 0xEC0000006C657665;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x5379726574746162;
      unint64_t v6 = 0xED00007375746174;
      break;
    case 2:
      unint64_t v6 = 0x80000001D447D790;
      uint64_t v5 = 0xD000000000000012;
      break;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x656475746974616CLL;
      break;
    case 4:
      unsigned int v7 = 1633906540;
      goto LABEL_8;
    case 5:
      uint64_t v5 = 0x64757469676E6F6CLL;
      unint64_t v6 = 0xE900000000000065;
      break;
    case 6:
      unsigned int v7 = 1769172848;
LABEL_8:
      uint64_t v5 = v7 | 0x6E6F697400000000;
      unint64_t v6 = 0xEC00000065707954;
      break;
    case 7:
      uint64_t v5 = 0x6D617473656D6974;
      unint64_t v6 = 0xE900000000000070;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xED00007375746174;
      if (v5 == 0x5379726574746162) {
        goto LABEL_23;
      }
      goto LABEL_26;
    case 2:
      unint64_t v2 = 0x80000001D447D790;
      if (v5 != 0xD000000000000012) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 3:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x656475746974616CLL) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 4:
      unint64_t v2 = 0xEC00000065707954;
      if (v5 != 0x6E6F697461636F6CLL) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 5:
      unint64_t v2 = 0xE900000000000065;
      if (v5 != 0x64757469676E6F6CLL) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 6:
      uint64_t v3 = 0x6E6F697469736F70;
      unint64_t v2 = 0xEC00000065707954;
      goto LABEL_22;
    case 7:
      unint64_t v2 = 0xE900000000000070;
      if (v5 != 0x6D617473656D6974) {
        goto LABEL_26;
      }
      goto LABEL_23;
    default:
LABEL_22:
      if (v5 != v3) {
        goto LABEL_26;
      }
LABEL_23:
      if (v6 == v2) {
        char v8 = 1;
      }
      else {
LABEL_26:
      }
        char v8 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1D4413D88(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6956776F646E6977;
  }
  else {
    uint64_t v3 = 0x736F4D746E6F7266;
  }
  if (v2) {
    unint64_t v4 = 0xEF776F646E695774;
  }
  else {
    unint64_t v4 = 0xED0000656C626973;
  }
  if (a2) {
    uint64_t v5 = 0x6956776F646E6977;
  }
  else {
    uint64_t v5 = 0x736F4D746E6F7266;
  }
  if (a2) {
    unint64_t v6 = 0xED0000656C626973;
  }
  else {
    unint64_t v6 = 0xEF776F646E695774;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D4413E48(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEF706D617473656DLL;
  unint64_t v3 = 0x6954657461657263;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6954657461657263;
  unint64_t v6 = 0xEF706D617473656DLL;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6F43737574617473;
      unint64_t v6 = 0xEA00000000006564;
      break;
    case 2:
      unint64_t v5 = 0x7469547472656C61;
      unint64_t v6 = 0xEA0000000000656CLL;
      break;
    case 3:
      unint64_t v5 = 0x7865547472656C61;
      unint64_t v6 = 0xE900000000000074;
      break;
    case 4:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v6 = 0x80000001D447E110;
      break;
    case 5:
      unint64_t v6 = 0x80000001D447E130;
      unint64_t v5 = 0xD000000000000011;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEA00000000006564;
      if (v5 == 0x6F43737574617473) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v2 = 0xEA0000000000656CLL;
      if (v5 != 0x7469547472656C61) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v2 = 0xE900000000000074;
      if (v5 != 0x7865547472656C61) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v3 = 0xD000000000000013;
      unint64_t v2 = 0x80000001D447E110;
      goto LABEL_15;
    case 5:
      unint64_t v2 = 0x80000001D447E130;
      if (v5 != 0xD000000000000011) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v3) {
        goto LABEL_19;
      }
LABEL_16:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D44140A4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1952867692;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1952867692;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7468676972;
      break;
    case 2:
      uint64_t v5 = 1702060387;
      break;
    case 3:
      uint64_t v5 = 0x6F6C61646E617473;
      unint64_t v3 = 0xEA0000000000656ELL;
      break;
    case 4:
      uint64_t v5 = 1702131053;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x7468676972) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      if (v5 != 1702060387) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x6F6C61646E617473;
      unint64_t v6 = 0xEA0000000000656ELL;
      goto LABEL_12;
    case 4:
      if (v5 != 1702131053) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D4414230(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x6465696E6564;
    }
    else {
      uint64_t v2 = 0x776F4E746F6ELL;
    }
    unint64_t v3 = 0xE600000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 0x6465696E6564;
      }
      else {
        uint64_t v5 = 0x776F4E746F6ELL;
      }
      unint64_t v6 = 0xE600000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE700000000000000;
    uint64_t v2 = 0x6465746E617267;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE700000000000000;
  if (v2 != 0x6465746E617267)
  {
LABEL_15:
    char v7 = sub_1D446A758();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D441433C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x796C696D6166;
  }
  else {
    uint64_t v3 = 1919251317;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x796C696D6166;
  }
  else {
    uint64_t v5 = 1919251317;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D44143D8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000010;
  }
  else {
    unint64_t v3 = 0x72656E776FLL;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0x80000001D447D4A0;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000010;
  }
  else {
    unint64_t v5 = 0x72656E776FLL;
  }
  if (a2) {
    unint64_t v6 = 0x80000001D447D4A0;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D4414480(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000064;
  uint64_t v3 = 0x6E756F5379616C50;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E756F5379616C50;
  unint64_t v6 = 0xE900000000000064;
  switch(v4)
  {
    case 1:
      unsigned int v7 = 1702131021;
      goto LABEL_5;
    case 2:
      uint64_t v5 = 0x6F536574756D6E55;
      unint64_t v6 = 0xEB00000000646E75;
      break;
    case 3:
      unsigned int v7 = 1886352467;
LABEL_5:
      uint64_t v5 = v7 | 0x6E756F5300000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unsigned int v8 = 1702131021;
      goto LABEL_12;
    case 2:
      uint64_t v3 = 0x6F536574756D6E55;
      unint64_t v2 = 0xEB00000000646E75;
      goto LABEL_9;
    case 3:
      unsigned int v8 = 1886352467;
LABEL_12:
      if (v5 == (v8 | 0x6E756F5300000000)) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_15;
      }
LABEL_13:
      if (v6 == v2) {
        char v9 = 1;
      }
      else {
LABEL_15:
      }
        char v9 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1D4414600(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1701667182;
  }
  else {
    uint64_t v3 = 0x696669746E656469;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007265;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1701667182;
  }
  else {
    uint64_t v5 = 0x696669746E656469;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xEA00000000007265;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D44146A4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1954047348;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1954047348;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x72624E72656E776FLL;
      break;
    case 2:
      uint64_t v5 = 0x6954657461657263;
      unint64_t v3 = 0xEF706D617473656DLL;
      break;
    case 3:
      uint64_t v5 = 0x6F43737574617473;
      unint64_t v3 = 0xEA00000000006564;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x7478655472657375;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x72624E72656E776FLL) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEF706D617473656DLL;
      if (v5 != 0x6954657461657263) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x6F43737574617473;
      unint64_t v6 = 0xEA00000000006564;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x7478655472657375) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D4414880(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x64656C6261736964;
  }
  else {
    uint64_t v3 = 0x64656C62616E65;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x64656C6261736964;
  }
  else {
    uint64_t v5 = 0x64656C62616E65;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D4414928(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x73736572646461;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x73736572646461;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x696669746E656469;
      unint64_t v3 = 0xEA00000000007265;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6E6F697461636F6CLL;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1701869940;
      break;
    case 4:
      uint64_t v5 = 0x6C61766F72707061;
      unint64_t v3 = 0xED00006574617453;
      break;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1701667182;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000007265;
      if (v5 == 0x696669746E656469) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6E6F697461636F6CLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1701869940) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x6C61766F72707061;
      unint64_t v6 = 0xED00006574617453;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1701667182) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D4414B34(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6F43737574617473;
  }
  else {
    uint64_t v3 = 0x6954657461657263;
  }
  if (v2) {
    unint64_t v4 = 0xEF706D617473656DLL;
  }
  else {
    unint64_t v4 = 0xEA00000000006564;
  }
  if (a2) {
    uint64_t v5 = 0x6F43737574617473;
  }
  else {
    uint64_t v5 = 0x6954657461657263;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000006564;
  }
  else {
    unint64_t v6 = 0xEF706D617473656DLL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D4414BEC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7472656C61;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7472656C61;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6F43726576726573;
      unint64_t v3 = 0xED0000747865746ELL;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6F666E4972657375;
      break;
    case 3:
      uint64_t v5 = 0x6F43737574617473;
      unint64_t v3 = 0xEA00000000006564;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x746E65746E6F63;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xED0000747865746ELL;
      if (v5 == 0x6F43726576726573) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6F666E4972657375) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x6F43737574617473;
      unint64_t v6 = 0xEA00000000006564;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x746E65746E6F63) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D4414DD0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701667182;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701667182;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x676E6979616C70;
      break;
    case 2:
      uint64_t v5 = 0x6C62616C69617661;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x646574756DLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x676E6979616C70) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6C62616C69617661;
      unint64_t v6 = 0xE900000000000065;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x646574756DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D4414F50(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000012;
  }
  else {
    unint64_t v3 = 1701869940;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0x80000001D447D140;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000012;
  }
  else {
    unint64_t v5 = 1701869940;
  }
  if (a2) {
    unint64_t v6 = 0x80000001D447D140;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D4414FF4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 1937073530;
    }
    else {
      uint64_t v3 = 0x6579656B776168;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE400000000000000;
    }
    else {
      unint64_t v4 = 0xE700000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 1937073530;
      }
      else {
        uint64_t v6 = 0x6579656B776168;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE400000000000000;
      }
      else {
        unint64_t v7 = 0xE700000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 959984482;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 959984482)
  {
LABEL_21:
    char v8 = sub_1D446A758();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D44150F0(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000019;
  unint64_t v4 = 0x80000001D447DAF0;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xD000000000000014;
      unint64_t v4 = 0x80000001D447DB10;
      break;
    case 2:
      unint64_t v3 = 0x626154736D657469;
      unint64_t v4 = 0xEF64656C62616E45;
      break;
    case 3:
      unint64_t v4 = 0x80000001D447DB40;
      unint64_t v3 = 0xD000000000000010;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xD000000000000019;
  unint64_t v6 = 0x80000001D447DAF0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x80000001D447DB10;
      if (v3 == 0xD000000000000014) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v5 = 0x626154736D657469;
      unint64_t v6 = 0xEF64656C62616E45;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0x80000001D447DB40;
      if (v3 == 0xD000000000000010) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v3 != v5) {
        goto LABEL_14;
      }
LABEL_12:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D44152A4(uint64_t a1, uint64_t a2)
{
  return sub_1D44152BC(a1, a2, (uint64_t (*)(void))FMIPURLAction.rawValue.getter);
}

uint64_t sub_1D44152BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1D4415360(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x726576726573;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x726576726573;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x80000001D447E150;
      unint64_t v5 = 0xD000000000000015;
      break;
    case 2:
      unint64_t v5 = 0x496B726F7774656ELL;
      unint64_t v3 = 0xEC00000065757373;
      break;
    case 3:
      unint64_t v5 = 0x696C616974696E69;
      unint64_t v3 = 0xEE006E6F6974617ALL;
      break;
    case 4:
      unint64_t v5 = 0x5441434552504544;
      unint64_t v3 = 0xEA00000000004445;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x80000001D447E150;
      if (v5 == 0xD000000000000015) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEC00000065757373;
      if (v5 != 0x496B726F7774656ELL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x696C616974696E69;
      unint64_t v6 = 0xEE006E6F6974617ALL;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEA00000000004445;
      if (v5 != 0x5441434552504544) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D441555C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA0000000000656ELL;
  uint64_t v3 = 0x6F6C61646E617473;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6F6C61646E617473;
  unint64_t v6 = 0xEA0000000000656ELL;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1702060387;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x6475427466656CLL;
      break;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x6475427468676972;
      break;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x636972656E6567;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      if (v5 == 1702060387) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x6475427466656CLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6475427468676972;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x636972656E6567) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D4415720(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEA00000000007265;
  uint64_t v3 = 0x696669746E656469;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x696A6F6D65;
    }
    else {
      uint64_t v5 = 1701667182;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE500000000000000;
    }
    else {
      unint64_t v6 = 0xE400000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x696669746E656469;
  unint64_t v6 = 0xEA00000000007265;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x696A6F6D65;
    }
    else {
      uint64_t v3 = 1701667182;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE500000000000000;
    }
    else {
      unint64_t v2 = 0xE400000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D4415824(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x80000001D447DFB0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000011;
      unint64_t v3 = 0x80000001D447DFD0;
      break;
    case 2:
      unint64_t v5 = 0x65626D654D736168;
      unint64_t v3 = 0xEA00000000007372;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x4153487369;
      break;
    case 4:
      unint64_t v5 = 0x6D614E7473726966;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 5:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x656D614E7473616CLL;
      break;
    case 6:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6449656C707061;
      break;
    case 7:
      unint64_t v5 = 0x696669746E656469;
      unint64_t v3 = 0xEA00000000007265;
      break;
    case 8:
      unint64_t v5 = 0x6D754E656E6F6870;
      unint64_t v3 = 0xEB00000000726562;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x80000001D447DFB0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x80000001D447DFD0;
      if (v5 == 0xD000000000000011) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      unint64_t v6 = 0xEA00000000007372;
      if (v5 != 0x65626D654D736168) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x4153487369) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v6 = 0xE900000000000065;
      if (v5 != 0x6D614E7473726966) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x656D614E7473616CLL) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x6449656C707061) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      unint64_t v2 = 0x696669746E656469;
      unint64_t v6 = 0xEA00000000007265;
      goto LABEL_24;
    case 8:
      unint64_t v6 = 0xEB00000000726562;
      if (v5 != 0x6D754E656E6F6870) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

void *sub_1D4415B14(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = *(void *)(type metadata accessor for FMIPItem() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  unint64_t v6 = (uint64_t *)(v4 + a1 + 400);
  char v7 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    char v9 = (void *)*(v6 - 1);
    if (v9)
    {
      uint64_t v10 = *v6;
      uint64_t v11 = *(v6 - 2);
      id v12 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v7 = sub_1D43AFC34(0, v7[2] + 1, 1, v7);
      }
      unint64_t v14 = v7[2];
      unint64_t v13 = v7[3];
      if (v14 >= v13 >> 1) {
        char v7 = sub_1D43AFC34((void *)(v13 > 1), v14 + 1, 1, v7);
      }
      v7[2] = v14 + 1;
      char v8 = &v7[3 * v14];
      *((unsigned char *)v8 + 32) = v11 & 1;
      *((unsigned char *)v8 + 33) = BYTE1(v11) & 1;
      *((unsigned char *)v8 + 34) = BYTE2(v11) & 1;
      *((unsigned char *)v8 + 35) = BYTE3(v11);
      v8[5] = v12;
      v8[6] = v10;
    }
    unint64_t v6 = (uint64_t *)((char *)v6 + v5);
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1D4415CB8@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    int v4 = 0;
    uint64_t v5 = (int *)(a1 + 32);
    do
    {
      int v7 = *v5++;
      int v6 = v7;
      if ((v7 & ~v4) == 0) {
        int v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    int v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1D4415D14@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

BOOL sub_1D4415D6C(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

uint64_t FMIPDevice.shouldDisplaySeparatedLocation.getter()
{
  uint64_t v1 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FMIPDevice();
  sub_1D42A3A74(v0 + *(int *)(v4 + 128), (uint64_t)v3, &qword_1EBD7E670);
  uint64_t v5 = type metadata accessor for FMIPItemGroup();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_1D4276C3C((uint64_t)v3, &qword_1EBD7E670);
    char v6 = 0;
  }
  else
  {
    char v6 = FMIPItemGroup.shouldDisplaySeparatedLocation.getter();
    sub_1D42D2178((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  }
  return v6 & 1;
}

BOOL FMIPDevice.isLocalFindable.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for FMIPDevice() + 136)) == 5;
}

uint64_t FMIPDevice.removePairingLockLocally.getter()
{
  return *(_DWORD *)(v0 + *(int *)(type metadata accessor for FMIPDevice() + 148)) & 1;
}

uint64_t sub_1D4415EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    sub_1D432B88C();
    uint64_t v3 = 0;
    while (1)
    {
      uint64_t v30 = v3;
      uint64_t v31 = v2;
      int v5 = *(unsigned __int8 *)(a1 + v3 + 32);
      int v6 = *(unsigned __int8 *)(a1 + v3 + 33);
      int v7 = *(unsigned __int8 *)(a1 + v3 + 34);
      uint64_t v8 = *(unsigned __int8 *)(a1 + v3 + 35);
      double v9 = *(double *)(a1 + v3 + 48);
      int v10 = *(unsigned __int8 *)(a2 + v3 + 32);
      int v11 = *(unsigned __int8 *)(a2 + v3 + 33);
      int v12 = *(unsigned __int8 *)(a2 + v3 + 34);
      uint64_t v32 = *(unsigned __int8 *)(a2 + v3 + 35);
      unint64_t v13 = *(void **)(a2 + v3 + 40);
      double v14 = *(double *)(a2 + v3 + 48);
      id v15 = *(id *)(a1 + v3 + 40);
      id v16 = v13;
      long long v33 = v15;
      if ((sub_1D446A118() & 1) == 0
        || v9 != v14
        || ((v5 ^ v10) & 1) != 0
        || ((v6 ^ v11) & 1) != 0
        || ((v7 ^ v12) & 1) != 0)
      {
        break;
      }
      unint64_t v17 = 0xE700000000000000;
      unint64_t v18 = 0x6E776F6E6B6E75;
      switch(v8)
      {
        case 1:
          unint64_t v18 = 0x756F7364776F7263;
          unint64_t v17 = 0xEC00000064656372;
          break;
        case 2:
          unint64_t v17 = 0xE300000000000000;
          unint64_t v18 = 5460039;
          break;
        case 3:
          unint64_t v17 = 0xE400000000000000;
          unint64_t v18 = 1768319319;
          break;
        case 4:
          unint64_t v18 = 0x61636F4C65666173;
          unint64_t v17 = 0xEC0000006E6F6974;
          break;
        case 5:
          unint64_t v18 = 0xD000000000000012;
          char v19 = "rk";
          goto LABEL_34;
        case 6:
          unint64_t v17 = 0xE800000000000000;
          unint64_t v18 = 0x656D69746C616572;
          break;
        case 7:
          unint64_t v18 = 0x6F4C646572696170;
          unint64_t v17 = 0xEE006E6F69746163;
          break;
        case 8:
          unint64_t v18 = 0x6E6E6F437473616CLL;
          unsigned int v20 = 1702126437;
          goto LABEL_27;
        case 9:
          unint64_t v18 = 0xD000000000000019;
          char v19 = "edLocation";
          goto LABEL_34;
        case 10:
          unint64_t v18 = 0xD000000000000010;
          char v19 = "lastConnectionMaintenance";
          goto LABEL_34;
        case 11:
          unint64_t v18 = 0x656E774F7261656ELL;
          unint64_t v17 = 0xE900000000000072;
          break;
        case 12:
          unint64_t v18 = 0xD000000000000018;
          char v19 = "lastDisconnected";
          goto LABEL_34;
        case 13:
          unint64_t v18 = 0x786F725072656570;
          unint64_t v17 = 0xEB00000000646569;
          break;
        case 14:
          unint64_t v18 = 0x6C627550666C6573;
          unsigned int v20 = 1701344105;
LABEL_27:
          unint64_t v17 = v20 | 0xED00006400000000;
          break;
        case 15:
          uint64_t v21 = "xied";
          goto LABEL_32;
        case 16:
          unint64_t v17 = 0xE600000000000000;
          unint64_t v18 = 0x646568636163;
          break;
        case 17:
          unint64_t v18 = 0x6552746E65746E69;
          unint64_t v17 = 0xEE0065736E6F7073;
          break;
        case 18:
          uint64_t v21 = "lter";
LABEL_32:
          unint64_t v17 = (unint64_t)v21 | 0x8000000000000000;
          unint64_t v18 = 0xD000000000000014;
          break;
        case 19:
          unint64_t v18 = 0xD000000000000013;
          char v19 = "intentLocationUpdate";
LABEL_34:
          unint64_t v17 = (unint64_t)v19 | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v22 = 0xE700000000000000;
      unint64_t v23 = 0x6E776F6E6B6E75;
      switch(v32)
      {
        case 1:
          unint64_t v23 = 0x756F7364776F7263;
          unint64_t v22 = 0xEC00000064656372;
          break;
        case 2:
          unint64_t v22 = 0xE300000000000000;
          unint64_t v23 = 5460039;
          break;
        case 3:
          unint64_t v22 = 0xE400000000000000;
          unint64_t v23 = 1768319319;
          break;
        case 4:
          unint64_t v23 = 0x61636F4C65666173;
          unint64_t v22 = 0xEC0000006E6F6974;
          break;
        case 5:
          unint64_t v23 = 0xD000000000000012;
          uint64_t v24 = "rk";
          goto LABEL_57;
        case 6:
          unint64_t v22 = 0xE800000000000000;
          unint64_t v23 = 0x656D69746C616572;
          break;
        case 7:
          unint64_t v23 = 0x6F4C646572696170;
          unint64_t v22 = 0xEE006E6F69746163;
          break;
        case 8:
          unint64_t v23 = 0x6E6E6F437473616CLL;
          unsigned int v25 = 1702126437;
          goto LABEL_50;
        case 9:
          unint64_t v23 = 0xD000000000000019;
          uint64_t v24 = "edLocation";
          goto LABEL_57;
        case 10:
          unint64_t v23 = 0xD000000000000010;
          uint64_t v24 = "lastConnectionMaintenance";
          goto LABEL_57;
        case 11:
          unint64_t v23 = 0x656E774F7261656ELL;
          unint64_t v22 = 0xE900000000000072;
          break;
        case 12:
          unint64_t v23 = 0xD000000000000018;
          uint64_t v24 = "lastDisconnected";
          goto LABEL_57;
        case 13:
          unint64_t v23 = 0x786F725072656570;
          unint64_t v22 = 0xEB00000000646569;
          break;
        case 14:
          unint64_t v23 = 0x6C627550666C6573;
          unsigned int v25 = 1701344105;
LABEL_50:
          unint64_t v22 = v25 | 0xED00006400000000;
          break;
        case 15:
          uint64_t v26 = "xied";
          goto LABEL_55;
        case 16:
          unint64_t v22 = 0xE600000000000000;
          unint64_t v23 = 0x646568636163;
          break;
        case 17:
          unint64_t v23 = 0x6552746E65746E69;
          unint64_t v22 = 0xEE0065736E6F7073;
          break;
        case 18:
          uint64_t v26 = "lter";
LABEL_55:
          unint64_t v22 = (unint64_t)v26 | 0x8000000000000000;
          unint64_t v23 = 0xD000000000000014;
          break;
        case 19:
          unint64_t v23 = 0xD000000000000013;
          uint64_t v24 = "intentLocationUpdate";
LABEL_57:
          unint64_t v22 = (unint64_t)v24 | 0x8000000000000000;
          break;
        default:
          break;
      }
      if (v18 == v23 && v17 == v22)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v4 = sub_1D446A758();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0) {
          return 0;
        }
      }
      uint64_t v3 = v30 + 24;
      uint64_t v2 = v31 - 1;
      if (v31 == 1) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1D4416590(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  sub_1D432B88C();
  int v5 = (unsigned __int8 *)(a2 + 56);
  int v6 = (double *)(a1 + 56);
  while (2)
  {
    uint64_t v8 = *((unsigned __int8 *)v6 - 24);
    double v9 = *(v6 - 1);
    uint64_t v10 = *(unsigned __int8 *)v6;
    uint64_t v11 = *(v5 - 24);
    int v12 = (void *)*((void *)v5 - 2);
    double v13 = *((double *)v5 - 1);
    uint64_t v14 = *v5;
    id v15 = *((id *)v6 - 2);
    id v32 = v12;
    if (sub_1D446A118())
    {
      v6 += 4;
      unint64_t v16 = 0x6E776F6E6B6E75;
      unint64_t v17 = 0xE700000000000000;
      switch(v8)
      {
        case 1:
          unint64_t v16 = 0x756F7364776F7263;
          unint64_t v17 = 0xEC00000064656372;
          break;
        case 2:
          unint64_t v17 = 0xE300000000000000;
          unint64_t v16 = 5460039;
          break;
        case 3:
          unint64_t v17 = 0xE400000000000000;
          unint64_t v16 = 1768319319;
          break;
        case 4:
          unint64_t v16 = 0x61636F4C65666173;
          unint64_t v17 = 0xEC0000006E6F6974;
          break;
        case 5:
          unint64_t v16 = 0xD000000000000012;
          unint64_t v18 = "rk";
          goto LABEL_30;
        case 6:
          unint64_t v17 = 0xE800000000000000;
          unint64_t v16 = 0x656D69746C616572;
          break;
        case 7:
          unint64_t v16 = 0x6F4C646572696170;
          unint64_t v17 = 0xEE006E6F69746163;
          break;
        case 8:
          unint64_t v16 = 0x6E6E6F437473616CLL;
          unsigned int v19 = 1702126437;
          goto LABEL_23;
        case 9:
          unint64_t v16 = 0xD000000000000019;
          unint64_t v18 = "edLocation";
          goto LABEL_30;
        case 10:
          unint64_t v16 = 0xD000000000000010;
          unint64_t v18 = "lastConnectionMaintenance";
          goto LABEL_30;
        case 11:
          unint64_t v16 = 0x656E774F7261656ELL;
          unint64_t v17 = 0xE900000000000072;
          break;
        case 12:
          unint64_t v16 = 0xD000000000000018;
          unint64_t v18 = "lastDisconnected";
          goto LABEL_30;
        case 13:
          unint64_t v16 = 0x786F725072656570;
          unint64_t v17 = 0xEB00000000646569;
          break;
        case 14:
          unint64_t v16 = 0x6C627550666C6573;
          unsigned int v19 = 1701344105;
LABEL_23:
          unint64_t v17 = v19 | 0xED00006400000000;
          break;
        case 15:
          unsigned int v20 = "xied";
          goto LABEL_28;
        case 16:
          unint64_t v17 = 0xE600000000000000;
          unint64_t v16 = 0x646568636163;
          break;
        case 17:
          unint64_t v16 = 0x6552746E65746E69;
          unint64_t v17 = 0xEE0065736E6F7073;
          break;
        case 18:
          unsigned int v20 = "lter";
LABEL_28:
          unint64_t v17 = (unint64_t)v20 | 0x8000000000000000;
          unint64_t v16 = 0xD000000000000014;
          break;
        case 19:
          unint64_t v16 = 0xD000000000000013;
          unint64_t v18 = "intentLocationUpdate";
LABEL_30:
          unint64_t v17 = (unint64_t)v18 | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v21 = 0x6E776F6E6B6E75;
      unint64_t v22 = 0xE700000000000000;
      switch(v11)
      {
        case 1:
          unint64_t v21 = 0x756F7364776F7263;
          unint64_t v22 = 0xEC00000064656372;
          break;
        case 2:
          unint64_t v22 = 0xE300000000000000;
          unint64_t v21 = 5460039;
          break;
        case 3:
          unint64_t v22 = 0xE400000000000000;
          unint64_t v21 = 1768319319;
          break;
        case 4:
          unint64_t v21 = 0x61636F4C65666173;
          unint64_t v22 = 0xEC0000006E6F6974;
          break;
        case 5:
          unint64_t v21 = 0xD000000000000012;
          unint64_t v23 = "rk";
          goto LABEL_53;
        case 6:
          unint64_t v22 = 0xE800000000000000;
          unint64_t v21 = 0x656D69746C616572;
          break;
        case 7:
          unint64_t v21 = 0x6F4C646572696170;
          unint64_t v22 = 0xEE006E6F69746163;
          break;
        case 8:
          unint64_t v21 = 0x6E6E6F437473616CLL;
          unsigned int v24 = 1702126437;
          goto LABEL_46;
        case 9:
          unint64_t v21 = 0xD000000000000019;
          unint64_t v23 = "edLocation";
          goto LABEL_53;
        case 10:
          unint64_t v21 = 0xD000000000000010;
          unint64_t v23 = "lastConnectionMaintenance";
          goto LABEL_53;
        case 11:
          unint64_t v21 = 0x656E774F7261656ELL;
          unint64_t v22 = 0xE900000000000072;
          break;
        case 12:
          unint64_t v21 = 0xD000000000000018;
          unint64_t v23 = "lastDisconnected";
          goto LABEL_53;
        case 13:
          unint64_t v21 = 0x786F725072656570;
          unint64_t v22 = 0xEB00000000646569;
          break;
        case 14:
          unint64_t v21 = 0x6C627550666C6573;
          unsigned int v24 = 1701344105;
LABEL_46:
          unint64_t v22 = v24 | 0xED00006400000000;
          break;
        case 15:
          unsigned int v25 = "xied";
          goto LABEL_51;
        case 16:
          unint64_t v22 = 0xE600000000000000;
          unint64_t v21 = 0x646568636163;
          break;
        case 17:
          unint64_t v21 = 0x6552746E65746E69;
          unint64_t v22 = 0xEE0065736E6F7073;
          break;
        case 18:
          unsigned int v25 = "lter";
LABEL_51:
          unint64_t v22 = (unint64_t)v25 | 0x8000000000000000;
          unint64_t v21 = 0xD000000000000014;
          break;
        case 19:
          unint64_t v21 = 0xD000000000000013;
          unint64_t v23 = "intentLocationUpdate";
LABEL_53:
          unint64_t v22 = (unint64_t)v23 | 0x8000000000000000;
          break;
        default:
          break;
      }
      if (v16 == v21 && v17 == v22)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_58;
      }
      char v26 = sub_1D446A758();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v26)
      {
LABEL_58:
        if (v9 == v13)
        {
          unint64_t v27 = 0xE700000000000000;
          uint64_t v28 = 0x6E776F6E6B6E55;
          switch(v10)
          {
            case 1:
              uint64_t v28 = 0x64656772616843;
              break;
            case 2:
              unint64_t v27 = 0xE800000000000000;
              uint64_t v28 = 0x676E696772616843;
              break;
            case 3:
              uint64_t v28 = 0x6772616843746F4ELL;
              unint64_t v27 = 0xEB00000000676E69;
              break;
            default:
              break;
          }
          unint64_t v29 = 0xE700000000000000;
          uint64_t v30 = 0x6E776F6E6B6E55;
          switch(v14)
          {
            case 1:
              if (v28 == 0x64656772616843) {
                goto LABEL_68;
              }
              goto LABEL_5;
            case 2:
              unint64_t v29 = 0xE800000000000000;
              uint64_t v30 = 0x676E696772616843;
              goto LABEL_67;
            case 3:
              unint64_t v29 = 0xEB00000000676E69;
              if (v28 != 0x6772616843746F4ELL) {
                goto LABEL_5;
              }
              goto LABEL_68;
            default:
LABEL_67:
              if (v28 != v30) {
                goto LABEL_5;
              }
LABEL_68:
              if (v27 == v29)
              {

                swift_bridgeObjectRelease_n();
              }
              else
              {
LABEL_5:
                char v7 = sub_1D446A758();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v7 & 1) == 0) {
                  return 0;
                }
              }
              v5 += 32;
              if (--v2) {
                continue;
              }
              return 1;
          }
        }
      }
    }
    break;
  }

  return 0;
}

uint64_t FMIPDevice.init(device:historicalLocations:address:crowdSourcedLocation:location:shiftedLocation:crowdSourcedLocating:itemGroup:deviceWithYou:findingCapable:beaconType:deviceConnectedState:lostModeMetadata:)@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, void **a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unsigned __int8 a10, char a11, unsigned __int8 *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v328 = a8;
  uint64_t v329 = a1;
  LODWORD(v305) = a7;
  uint64_t v339 = a6;
  uint64_t v335 = a5;
  uint64_t v336 = a3;
  os_log_t v309 = a2;
  unint64_t v337 = a12;
  uint64_t v16 = type metadata accessor for FMIPItem();
  uint64_t v287 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v338 = (uint64_t)&v285 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v292 = (uint64_t)&v285 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1D42D5DA0(&qword_1EA6CA1F8);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  v316 = (char *)&v285 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v311 = (uint64_t)&v285 - v23;
  uint64_t v24 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v321 = (uint64_t)&v285 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1D42D5DA0(&qword_1EBD7E710);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v288 = (uint64_t)&v285 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1D42D5DA0(&qword_1EBD7CB80);
  uint64_t v29 = MEMORY[0x1F4188790](v28 - 8);
  uint64_t v322 = (uint64_t)&v285 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v304 = (char *)&v285 - v31;
  id v32 = (int *)type metadata accessor for FMIPItemGroup();
  uint64_t v33 = *((void *)v32 - 1);
  MEMORY[0x1F4188790](v32);
  uint64_t v302 = (uint64_t)&v285 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for FMIPDevice();
  uint64_t v36 = MEMORY[0x1F4188790](v35);
  uint64_t v320 = (uint64_t)&v285 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  uint64_t v319 = (uint64_t)&v285 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  *(void *)&double v315 = (char *)&v285 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  uint64_t v313 = (uint64_t)&v285 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  uint64_t v312 = (char *)&v285 - v45;
  uint64_t v46 = MEMORY[0x1F4188790](v44);
  uint64_t v310 = (uint64_t)&v285 - v47;
  uint64_t v48 = MEMORY[0x1F4188790](v46);
  uint64_t v308 = (uint64_t)&v285 - v49;
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  uint64_t v307 = (char *)&v285 - v51;
  uint64_t v52 = MEMORY[0x1F4188790](v50);
  uint64_t v306 = (char *)&v285 - v53;
  uint64_t v54 = MEMORY[0x1F4188790](v52);
  uint64_t v327 = (uint64_t)&v285 - v55;
  uint64_t v56 = MEMORY[0x1F4188790](v54);
  uint64_t v299 = (uint64_t *)((char *)&v285 - v57);
  uint64_t v58 = MEMORY[0x1F4188790](v56);
  long long v60 = (uint64_t *)((char *)&v285 - v59);
  MEMORY[0x1F4188790](v58);
  uint64_t v62 = (char *)&v285 - v61;
  uint64_t v63 = sub_1D42D5DA0(&qword_1EBD7E670);
  uint64_t v64 = MEMORY[0x1F4188790](v63 - 8);
  uint64_t v294 = (uint64_t)&v285 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = MEMORY[0x1F4188790](v64);
  uint64_t v293 = (uint64_t)&v285 - v67;
  uint64_t v68 = MEMORY[0x1F4188790](v66);
  uint64_t v318 = (char *)&v285 - v69;
  uint64_t v70 = MEMORY[0x1F4188790](v68);
  uint64_t v317 = (uint64_t)&v285 - v71;
  uint64_t v72 = MEMORY[0x1F4188790](v70);
  unint64_t v314 = (char *)&v285 - v73;
  uint64_t v74 = MEMORY[0x1F4188790](v72);
  uint64_t v290 = (uint64_t)&v285 - v75;
  uint64_t v76 = MEMORY[0x1F4188790](v74);
  uint64_t v303 = (uint64_t)&v285 - v77;
  uint64_t v78 = MEMORY[0x1F4188790](v76);
  uint64_t v289 = (uint64_t)&v285 - v79;
  uint64_t v80 = MEMORY[0x1F4188790](v78);
  uint64_t v326 = (char *)&v285 - v81;
  uint64_t v82 = MEMORY[0x1F4188790](v80);
  long long v84 = (char *)&v285 - v83;
  MEMORY[0x1F4188790](v82);
  long long v86 = (char *)&v285 - v85;
  sub_1D4276C98((uint64_t)v336, (uint64_t)v348, &qword_1EBD7CC10);
  uint64_t v87 = *a4;
  uint64_t v336 = (char *)a4[1];
  uint64_t v324 = a4[2];
  uint64_t v325 = v87;
  long long v88 = (char *)*v335;
  uint64_t v334 = (char *)v335[1];
  uint64_t v300 = (uint64_t)v335[2];
  v301 = v88;
  long long v89 = *(int **)(v339 + 8);
  id v331 = *(char **)v339;
  uint64_t v332 = v89;
  uint64_t v330 = *(void *)(v339 + 16);
  int v323 = *v337;
  sub_1D42A3A74(v328, (uint64_t)v84, &qword_1EBD7E670);
  uint64_t v90 = v329;
  sub_1D42D2370(v329, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  long long v91 = *(unsigned __int8 **)(v33 + 48);
  uint64_t v335 = (void **)(v33 + 48);
  unint64_t v337 = v91;
  int v92 = ((uint64_t (*)(char *, uint64_t, int *))v91)(v84, 1, v32);
  uint64_t v339 = v35;
  if (v92 == 1)
  {
    sub_1D42A3A74((uint64_t)&v62[*(int *)(v35 + 128)], (uint64_t)v86, &qword_1EBD7E670);
    sub_1D42D2178((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D4276C3C((uint64_t)v84, &qword_1EBD7E670);
  }
  else
  {
    sub_1D42D2178((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D6B4C((uint64_t)v84, (uint64_t)v86, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(v86, 0, 1, v32);
  }
  sub_1D42D2370(v90, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v93 = (uint64_t)v326;
  if (!v336)
  {
    uint64_t v94 = v60[35];
    char v95 = (char *)v60[36];
    uint64_t v324 = v60[37];
    uint64_t v325 = v94;
    uint64_t v336 = v95;
    long long v96 = v95;
  }
  sub_1D42D2178((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if (v334)
  {
    long long v97 = v334;

    long long v98 = (uint64_t (*)(void, void, void))v337;
    if (qword_1EA6C8F90 != -1) {
      swift_once();
    }
    int v99 = byte_1EA6CA2B1;

    if (v99 == 1)
    {

      uint64_t v330 = 0;
      *(double *)&id v331 = 0.0;
      uint64_t v334 = 0;
    }
    else
    {
      uint64_t v330 = v300;
      id v331 = v301;
    }
    uint64_t v100 = v329;
  }
  else
  {
    long long v98 = (uint64_t (*)(void, void, void))v337;
    if (qword_1EA6C8F90 != -1) {
      swift_once();
    }
    uint64_t v100 = v329;
    if (byte_1EA6CA2B1 == 1)
    {

      uint64_t v330 = 0;
      *(double *)&id v331 = 0.0;
      uint64_t v334 = 0;
    }
    else
    {
      long long v101 = v299;
      sub_1D42D2370(v329, (uint64_t)v299, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      id v102 = v332;
      if (!v332)
      {
        long long v103 = (char *)v101[32];
        id v102 = (id)v101[33];
        uint64_t v330 = v101[34];
        id v331 = v103;
        id v104 = v102;
      }
      sub_1D42D2178((uint64_t)v101, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      uint64_t v334 = (char *)v102;
    }
  }
  uint64_t v106 = *(void *)(v100 + 64);
  unint64_t v105 = *(void *)(v100 + 72);
  uint64_t v107 = HIBYTE(v105) & 0xF;
  if ((v105 & 0x2000000000000000) == 0) {
    uint64_t v107 = v106 & 0xFFFFFFFFFFFFLL;
  }
  if (v107)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v106 = 0;
    unint64_t v105 = 0;
  }
  sub_1D42A3A74((uint64_t)v86, v93, &qword_1EBD7E670);
  int v108 = v98(v93, 1, v32);
  uint64_t v332 = v32;
  unint64_t v333 = v86;
  if (v108 == 1)
  {
    if (v105) {
      goto LABEL_34;
    }
  }
  else
  {
    uint64_t v109 = v302;
    sub_1D42D6B4C(v93, v302, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v106 = *(void *)(v109 + 24);
    unint64_t v110 = *(void *)(v109 + 32);
    swift_bridgeObjectRetain();
    sub_1D42D2178(v109, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v111 = HIBYTE(v110) & 0xF;
    if ((v110 & 0x2000000000000000) == 0) {
      uint64_t v111 = v106 & 0xFFFFFFFFFFFFLL;
    }
    if (v111)
    {
      swift_bridgeObjectRelease();
      unint64_t v105 = v110;
      goto LABEL_34;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for FMLocalize();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v113 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v106 = sub_1D44692D8();
  unint64_t v105 = (unint64_t)v114;

  swift_bridgeObjectRelease_n();
LABEL_34:
  uint64_t v326 = (char *)v105;
  uint64_t v115 = *(void *)(v100 + 8);
  *(void *)a9 = *(void *)v100;
  *(void *)(a9 + 8) = v115;
  uint64_t v299 = (void *)v115;
  *(void *)(a9 + 16) = *(void *)(v100 + 16);
  long long v296 = *(_OWORD *)(v100 + 24);
  *(_OWORD *)(a9 + 24) = v296;
  uint64_t v116 = *(void *)(v100 + 48);
  uint64_t v117 = *(char **)(v100 + 56);
  uint64_t v300 = *(void *)(v100 + 40);
  v301 = v117;
  *(void *)(a9 + 40) = v300;
  *(void *)(a9 + 48) = v116;
  *(void *)(a9 + 56) = v117;
  *(void *)(a9 + 64) = v106;
  uint64_t v291 = v106;
  *(void *)(a9 + 72) = v105;
  *(unsigned char *)(a9 + 80) = *(unsigned char *)(v100 + 80);
  *(void *)(a9 + 88) = *(void *)(v100 + 88);
  long long v295 = *(_OWORD *)(v100 + 96);
  *(_OWORD *)(a9 + 96) = v295;
  uint64_t v118 = *(void *)(v100 + 120);
  *(void *)(a9 + 112) = *(void *)(v100 + 112);
  *(void *)(a9 + 120) = v118;
  uint64_t v119 = *(void *)(v100 + 176);
  *(void *)(a9 + 168) = *(void *)(v100 + 168);
  *(void *)(a9 + 176) = v119;
  uint64_t v120 = *(void *)(v100 + 136);
  *(void *)(a9 + 128) = *(void *)(v100 + 128);
  *(void *)(a9 + 136) = v120;
  uint64_t v121 = *(void *)(v100 + 152);
  uint64_t v122 = *(void *)(v100 + 160);
  uint64_t v297 = *(void *)(v100 + 144);
  uint64_t v298 = v122;
  *(void *)(a9 + 144) = v297;
  *(void *)(a9 + 152) = v121;
  *(void *)(a9 + 160) = v122;
  *(void *)(a9 + 184) = *(void *)(v100 + 184);
  *(unsigned char *)(a9 + 192) = *(unsigned char *)(v100 + 192);
  *(_OWORD *)(a9 + 200) = *(_OWORD *)(v100 + 200);
  uint64_t v123 = v339;
  uint64_t v124 = v100 + *(int *)(v339 + 152);
  LODWORD(v302) = a10;
  uint64_t v125 = v322;
  sub_1D42A3A74(v124, v322, &qword_1EBD7CB80);
  sub_1D42D2370(v100, v327, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v126 = sub_1D4469618();
  uint64_t v127 = *(void *)(v126 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v127 + 48))(v125, 1, v126) != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D42D2178(v327, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v135 = (uint64_t)v304;
    (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v304, v125, v126);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v127 + 56))(v135, 0, 1, v126);
    uint64_t v131 = (unsigned int (*)(void, void, void))v337;
    os_log_t v133 = v309;
    uint64_t v134 = (uint64_t)v306;
    goto LABEL_43;
  }
  uint64_t v285 = v126;
  uint64_t v286 = v127;
  uint64_t v128 = v327;
  uint64_t v129 = v289;
  sub_1D42A3A74(v327 + *(int *)(v123 + 128), v289, &qword_1EBD7E670);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D42D2178(v128, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v130 = v332;
  uint64_t v131 = (unsigned int (*)(void, void, void))v337;
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v337)(v129, 1, v332) == 1)
  {
    sub_1D4276C3C(v129, &qword_1EBD7E670);
    uint64_t v132 = 1;
    os_log_t v133 = v309;
    uint64_t v134 = (uint64_t)v306;
    uint64_t v135 = (uint64_t)v304;
    uint64_t v136 = v322;
  }
  else
  {
    uint64_t v137 = v288;
    sub_1D42A3A74(v129 + v130[12], v288, &qword_1EBD7E710);
    sub_1D42D2178(v129, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    uint64_t v138 = type metadata accessor for FMIPItemLostModeMetadata();
    int v139 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v138 - 8) + 48))(v137, 1, v138);
    os_log_t v133 = v309;
    uint64_t v134 = (uint64_t)v306;
    uint64_t v135 = (uint64_t)v304;
    uint64_t v136 = v322;
    if (v139 != 1)
    {
      uint64_t v141 = v137 + *(int *)(v138 + 24);
      uint64_t v140 = v285;
      (*(void (**)(char *, uint64_t, uint64_t))(v286 + 16))(v304, v141, v285);
      sub_1D42D2178(v137, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
      uint64_t v132 = 0;
      goto LABEL_42;
    }
    sub_1D4276C3C(v137, &qword_1EBD7E710);
    uint64_t v132 = 1;
  }
  uint64_t v140 = v285;
LABEL_42:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v286 + 56))(v135, v132, 1, v140);
  sub_1D4276C3C(v136, &qword_1EBD7CB80);
LABEL_43:
  uint64_t v322 = a14;
  int v142 = v305;
  uint64_t v143 = (int *)v339;
  sub_1D4276C98(v135, a9 + *(int *)(v339 + 152), &qword_1EBD7CB80);
  sub_1D42A3A74(v100 + v143[39], a9 + v143[39], &qword_1EBD7CB80);
  sub_1D42A3A74(v100 + v143[40], a9 + v143[40], &qword_1EBD7CB80);
  sub_1D42A3A74(v100 + v143[41], a9 + v143[41], &qword_1EBD7CB80);
  *(unsigned char *)(a9 + v143[42]) = *(unsigned char *)(v100 + v143[42]);
  *(unsigned char *)(a9 + v143[43]) = *(unsigned char *)(v100 + v143[43]);
  *(unsigned char *)(a9 + v143[44]) = *(unsigned char *)(v100 + v143[44]);
  *(void *)(a9 + v143[37]) = *(void *)(v100 + v143[37]);
  unint64_t v144 = *(void *)(v100 + 216);
  if (v302 != 2)
  {
    if (v302)
    {
      v144 |= 0x8000uLL;
      if (v142 == 2) {
        goto LABEL_47;
      }
      goto LABEL_49;
    }
    v144 &= ~0x8000uLL;
  }
  if (v142 == 2)
  {
LABEL_47:
    uint64_t v145 = v321;
    goto LABEL_52;
  }
LABEL_49:
  uint64_t v145 = v321;
  if (v142) {
    v144 |= 0x800uLL;
  }
  else {
    v144 &= ~0x800uLL;
  }
LABEL_52:
  uint64_t v146 = v339;
  sub_1D42A3A74(v100 + *(int *)(v339 + 116), v145, &qword_1EBD7D4E0);
  uint64_t v147 = type metadata accessor for FMIPDeviceLostModeMetadata();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v147 - 8) + 48))(v322, 1, v147) != 1)
  {
    sub_1D4276C3C(v145, &qword_1EBD7D4E0);
    sub_1D42A3A74(v322, v145, &qword_1EBD7D4E0);
  }
  sub_1D42A3A74(v145, a9 + *(int *)(v146 + 116), &qword_1EBD7D4E0);
  uint64_t v148 = v303;
  sub_1D42A3A74((uint64_t)v333, v303, &qword_1EBD7E670);
  if (v131(v148, 1, v332) == 1)
  {
    sub_1D4276C3C(v148, &qword_1EBD7E670);
  }
  else
  {
    uint64_t v149 = *(void *)(v148 + 64);
    sub_1D42D2178(v148, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    BOOL v150 = (v149 & 0x100) == 0;
    uint64_t v100 = v329;
    uint64_t v151 = (v144 >> 6) & 1;
    if (v150) {
      LODWORD(v151) = 1;
    }
    if (!v151) {
      v144 |= 0x40uLL;
    }
  }
  uint64_t v152 = v334;
  uint64_t v153 = (uint64_t)v316;
  *(void *)(a9 + 216) = v144;
  uint64_t v154 = *(void *)(v100 + 240);
  if (a11 != 2)
  {
    if (a11) {
      v154 |= 0x10000000uLL;
    }
    else {
      v154 &= ~0x10000000uLL;
    }
  }
  *(void *)(a9 + 232) = *(void *)(v100 + 232);
  *(void *)(a9 + 240) = v154;
  sub_1D42D2370(v100, v134, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if (!v133)
  {
    os_log_t v133 = *(os_log_t *)(v134 + 248);
    swift_bridgeObjectRetain();
  }
  uint64_t v327 = a13;
  swift_bridgeObjectRetain();
  sub_1D42D2178(v134, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v155 = v331;
  *(void *)(a9 + 248) = v133;
  *(void *)(a9 + 256) = v155;
  uint64_t v156 = v330;
  *(void *)(a9 + 264) = v152;
  *(void *)(a9 + 272) = v156;
  uint64_t v157 = (uint64_t)v307;
  sub_1D42D2370(v100, (uint64_t)v307, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D4276C98((uint64_t)v348, (uint64_t)v347, &qword_1EBD7CC10);
  if (sub_1D42FE02C((uint64_t)v347) == 1)
  {
    sub_1D4276C98(v157 + 304, (uint64_t)&v343, &qword_1EBD7CC10);
    sub_1D42FAC78((uint64_t)&v343, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
    uint64_t v158 = (id *)&v343;
  }
  else
  {
    uint64_t v158 = (id *)v348;
  }
  sub_1D4276C98((uint64_t)v158, (uint64_t)v346, &qword_1EBD7CC10);
  uint64_t v306 = v152;
  sub_1D42D2178(v157, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D4276C98((uint64_t)v346, a9 + 304, &qword_1EBD7CC10);
  long long v159 = (int *)v339;
  sub_1D42A3A74(v100 + *(int *)(v339 + 112), a9 + *(int *)(v339 + 112), &qword_1EBD7CEA0);
  sub_1D42A3A74(v100 + v159[30], a9 + v159[30], &qword_1EBD7CDF8);
  sub_1D42A3A74(v100 + v159[31], a9 + v159[31], &qword_1EBD7CE38);
  uint64_t v160 = v336;
  *(double *)(a9 + 280) = *(double *)&v325;
  *(void *)(a9 + 288) = v160;
  *(void *)(a9 + 296) = v324;
  *(void *)(a9 + 224) = *(void *)(v100 + 224);
  uint64_t v305 = (char *)(a9 + v159[32]);
  sub_1D42A3A74((uint64_t)v333, (uint64_t)v305, &qword_1EBD7E670);
  uint64_t v161 = v308;
  sub_1D42D2370(v100, v308, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  int v162 = v323;
  if (v323 == 7) {
    int v162 = *(unsigned __int8 *)(v161 + v159[34]);
  }
  uint64_t v307 = v336;
  swift_bridgeObjectRetain();
  sub_1D42D2178(v161, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v163 = v159[34];
  int v323 = v162;
  *(unsigned char *)(a9 + v163) = v162;
  uint64_t v164 = v311;
  sub_1D42A3A74(v327, v311, &qword_1EA6CA1F8);
  uint64_t v165 = type metadata accessor for FMIPDeviceConnectedState(0);
  uint64_t v166 = *(unsigned int (**)(void, void, void))(*(void *)(v165 - 8) + 48);
  if (v166(v164, 1, v165) == 1)
  {
    sub_1D4276C3C(v164, &qword_1EA6CA1F8);
    uint64_t v167 = v310;
    sub_1D42D2370(v100, v310, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v168 = v167;
    uint64_t v169 = v339;
  }
  else
  {
    int v170 = *(unsigned __int8 *)(v164 + *(int *)(v165 + 20));
    sub_1D42D2178(v164, type metadata accessor for FMIPDeviceConnectedState);
    uint64_t v171 = v310;
    sub_1D42D2370(v100, v310, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v168 = v171;
    uint64_t v169 = v339;
    if (v170 != 5) {
      goto LABEL_76;
    }
  }
  int v170 = *(unsigned __int8 *)(v168 + *(int *)(v169 + 140));
LABEL_76:
  sub_1D42D2178(v168, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  *(unsigned char *)(a9 + *(int *)(v169 + 140)) = v170;
  sub_1D42A3A74(v327, v153, &qword_1EA6CA1F8);
  unsigned int v172 = v166(v153, 1, v165);
  LODWORD(v311) = v170;
  os_log_t v309 = (os_log_t)v144;
  if (v172 == 1)
  {
    int v173 = &qword_1EA6CA1F8;
    uint64_t v174 = v153;
LABEL_80:
    sub_1D4276C3C(v174, v173);
    uint64_t v178 = (uint64_t)v312;
    sub_1D42D2370(v100, (uint64_t)v312, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v179 = v339;
LABEL_81:
    uint64_t v180 = (uint64_t *)(v178 + *(int *)(v179 + 144));
    uint64_t v182 = *v180;
    uint64_t v181 = (char *)v180[1];
    swift_bridgeObjectRetain();
    goto LABEL_82;
  }
  uint64_t v175 = v292;
  sub_1D42A3A74(v153, v292, (uint64_t *)&unk_1EBD7E930);
  sub_1D42D2178(v153, type metadata accessor for FMIPDeviceConnectedState);
  uint64_t v176 = sub_1D4469688();
  uint64_t v177 = *(void *)(v176 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v177 + 48))(v175, 1, v176) == 1)
  {
    int v173 = (uint64_t *)&unk_1EBD7E930;
    uint64_t v174 = v175;
    goto LABEL_80;
  }
  uint64_t v182 = sub_1D4469638();
  uint64_t v181 = v235;
  (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v175, v176);
  uint64_t v178 = (uint64_t)v312;
  sub_1D42D2370(v100, (uint64_t)v312, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v179 = v339;
  if (!v181) {
    goto LABEL_81;
  }
LABEL_82:
  sub_1D42D2178(v178, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v183 = (uint64_t *)(a9 + *(int *)(v179 + 144));
  uint64_t v312 = (char *)v182;
  uint64_t *v183 = v182;
  v183[1] = (uint64_t)v181;
  uint64_t v184 = v179;
  id v185 = v332;
  uint64_t v186 = (uint64_t (*)(void, void, void))v337;
  int v187 = ((uint64_t (*)(uint64_t, uint64_t, int *))v337)(v328, 1, v332);
  int v188 = v181;
  uint64_t v189 = v313;
  sub_1D42D2370(v100, v313, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  v316 = v188;
  if (v187 == 1)
  {
    uint64_t v190 = v189 + *(int *)(v184 + 128);
    uint64_t v191 = v290;
    sub_1D42A3A74(v190, v290, &qword_1EBD7E670);
    swift_bridgeObjectRetain();
    sub_1D42D2178(v189, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    int v192 = v186(v191, 1, v185);
    sub_1D4276C3C(v191, &qword_1EBD7E670);
    uint64_t v193 = *(void *)&v315;
    sub_1D42D2370(v100, *(uint64_t *)&v315, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v194 = v319;
    if (v192 == 1)
    {
      uint64_t v195 = (*(void *)(v193 + 240) >> 26) & 1;
      sub_1D42D2178(v193, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
      if (v323 == 5) {
        int v196 = 1;
      }
      else {
        int v196 = v195;
      }
      goto LABEL_89;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1D42D2178(v189, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v193 = *(void *)&v315;
    sub_1D42D2370(v100, *(uint64_t *)&v315, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v194 = v319;
  }
  sub_1D42D2178(v193, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  int v196 = 1;
LABEL_89:
  uint64_t v197 = *(int *)(v339 + 132);
  LODWORD(v310) = v196;
  *(unsigned char *)(a9 + v197) = v196;
  uint64_t v198 = (uint64_t)v333;
  v342[0] = (uint64_t)v331;
  v342[1] = (uint64_t)v334;
  v342[2] = v330;
  v341[0] = v325;
  v341[1] = (uint64_t)v336;
  v341[2] = v324;
  unsigned __int8 v340 = *(unsigned char *)(v100 + 80);
  sub_1D42D248C(v342, v341, (v309 & 0x20) != 0, (uint64_t)v333, &v340, &v343);
  double v315 = v343;
  int v199 = v344;
  uint64_t v313 = v345;
  uint64_t v200 = (uint64_t)v314;
  sub_1D42A3A74((uint64_t)v305, (uint64_t)v314, &qword_1EBD7E670);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v337)(v200, 1, v332) == 1)
  {
    sub_1D4276C3C(v200, &qword_1EBD7E670);
    LODWORD(v339) = 0;
  }
  else
  {
    char v201 = FMIPItemGroup.shouldDisplaySeparatedLocation.getter();
    sub_1D42D2178(v200, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    LODWORD(v339) = v201 & 1;
  }
  uint64_t v202 = (uint64_t)v318;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v203 = sub_1D4469928();
  sub_1D42D7FAC(v203, (uint64_t)qword_1EBD83228);
  sub_1D42D2370(v100, v194, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2370(v100, v320, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v204 = v317;
  sub_1D42A3A74(v198, v317, &qword_1EBD7E670);
  sub_1D42A3A74(v198, v202, &qword_1EBD7E670);
  swift_bridgeObjectRetain();
  unint64_t v314 = v199;
  int v205 = v199;
  int v206 = v306;
  uint64_t v207 = v307;
  uint64_t v208 = v205;
  swift_bridgeObjectRetain();
  uint64_t v209 = v202;
  uint64_t v210 = v206;
  uint64_t v211 = v207;
  uint64_t v212 = sub_1D44698F8();
  int v213 = sub_1D446A038();
  if (os_log_type_enabled(v212, (os_log_type_t)v213))
  {
    uint64_t v304 = v210;
    uint64_t v305 = v211;
    uint64_t v306 = v208;
    LODWORD(v308) = v213;
    os_log_t v309 = v212;
    uint64_t v214 = swift_slowAlloc();
    uint64_t v307 = (char *)swift_slowAlloc();
    v342[0] = (uint64_t)v307;
    *(_DWORD *)uint64_t v214 = 136318210;
    uint64_t v215 = v319;
    swift_bridgeObjectRetain();
    uint64_t v216 = sub_1D42D944C(10);
    uint64_t v218 = v217;
    uint64_t v220 = v219;
    uint64_t v222 = v221;
    swift_bridgeObjectRelease();
    uint64_t v223 = MEMORY[0x1D9445EF0](v216, v218, v220, v222);
    unint64_t v225 = v224;
    swift_bridgeObjectRelease();
    double v343 = COERCE_DOUBLE(sub_1D42CB9EC(v223, v225, v342));
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42D2178(v215, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    *(_WORD *)(v214 + 12) = 2080;
    unint64_t v226 = (unint64_t)v326;
    swift_bridgeObjectRetain();
    double v343 = COERCE_DOUBLE(sub_1D42CB9EC(v291, v226, v342));
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v214 + 22) = 2080;
    uint64_t v227 = v320;
    if (*(void *)(v320 + 24))
    {
      swift_bridgeObjectRetain();
      uint64_t v228 = sub_1D42D944C(10);
      uint64_t v230 = v229;
      uint64_t v232 = v231;
      uint64_t v234 = v233;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v228 = MEMORY[0x1D94464E0](7104878, 0xE300000000000000);
      uint64_t v230 = v236;
      uint64_t v232 = v237;
      uint64_t v234 = v238;
    }
    uint64_t v239 = v317;
    uint64_t v240 = v304;
    uint64_t v241 = MEMORY[0x1D9445EF0](v228, v230, v232, v234);
    unint64_t v243 = v242;
    swift_bridgeObjectRelease();
    double v343 = COERCE_DOUBLE(sub_1D42CB9EC(v241, v243, v342));
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42D2178(v227, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    *(_WORD *)(v214 + 32) = 1024;
    LODWORD(v343) = v310;
    sub_1D446A188();
    *(_WORD *)(v214 + 38) = 2080;
    double v343 = *(double *)&v331;
    v344 = v334;
    uint64_t v345 = v330;
    uint64_t v244 = v240;
    sub_1D42D5DA0(&qword_1EBD7CC70);
    uint64_t v245 = sub_1D4469B68();
    double v343 = COERCE_DOUBLE(sub_1D42CB9EC(v245, v246, v342));
    sub_1D446A188();

    uint64_t v334 = v244;
    swift_bridgeObjectRelease();
    *(_WORD *)(v214 + 48) = 2080;
    double v343 = *(double *)&v325;
    v344 = v336;
    uint64_t v345 = v324;
    uint64_t v247 = v305;
    uint64_t v248 = sub_1D4469B68();
    double v343 = COERCE_DOUBLE(sub_1D42CB9EC(v248, v249, v342));
    sub_1D446A188();

    uint64_t v336 = v247;
    swift_bridgeObjectRelease();
    *(_WORD *)(v214 + 58) = 2080;
    double v343 = v315;
    v344 = v314;
    uint64_t v345 = v313;
    uint64_t v250 = v306;
    uint64_t v251 = sub_1D4469B68();
    double v343 = COERCE_DOUBLE(sub_1D42CB9EC(v251, v252, v342));
    sub_1D446A188();

    id v331 = v250;
    swift_bridgeObjectRelease();
    *(_WORD *)(v214 + 68) = 2080;
    uint64_t v253 = v293;
    sub_1D42A3A74(v239, v293, &qword_1EBD7E670);
    id v254 = v332;
    if (((unsigned int (*)(uint64_t, uint64_t, int *))v337)(v253, 1, v332) == 1)
    {
      sub_1D4276C3C(v253, &qword_1EBD7E670);
      double v255 = 0.0;
      uint64_t v256 = 0;
    }
    else
    {
      double v255 = *(double *)(v253 + 8);
      uint64_t v256 = *(char **)(v253 + 16);
      swift_bridgeObjectRetain();
      sub_1D42D2178(v253, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    }
    uint64_t v257 = v321;
    uint64_t v258 = (uint64_t)v318;
    double v343 = v255;
    v344 = v256;
    uint64_t v330 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
    uint64_t v259 = sub_1D4469B68();
    double v343 = COERCE_DOUBLE(sub_1D42CB9EC(v259, v260, v342));
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D4276C3C(v239, &qword_1EBD7E670);
    *(_WORD *)(v214 + 78) = 2080;
    uint64_t v261 = v294;
    sub_1D42A3A74(v258, v294, &qword_1EBD7E670);
    if (((unsigned int (*)(uint64_t, uint64_t, id))v337)(v261, 1, v254) == 1)
    {
      sub_1D4276C3C(v261, &qword_1EBD7E670);
      double v262 = 0.0;
    }
    else
    {
      uint64_t v263 = *(unsigned __int8 **)(v261 + 40);
      swift_bridgeObjectRetain();
      sub_1D42D2178(v261, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      int64_t v264 = *((void *)v263 + 2);
      if (v264)
      {
        double v343 = MEMORY[0x1E4FBC860];
        sub_1D4337070(0, v264, 0);
        uint64_t v265 = *(unsigned __int8 *)(v287 + 80);
        unint64_t v337 = v263;
        uint64_t v266 = (uint64_t)&v263[(v265 + 32) & ~v265];
        uint64_t v267 = *(void *)(v287 + 72);
        double v262 = v343;
        do
        {
          uint64_t v268 = v338;
          sub_1D42D2370(v266, v338, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          uint64_t v269 = *(void *)(v268 + 352);
          uint64_t v270 = *(void *)(v268 + 360);
          swift_bridgeObjectRetain();
          sub_1D42D2178(v268, (uint64_t (*)(void))type metadata accessor for FMIPItem);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1D4337070(0, *(void *)(*(void *)&v262 + 16) + 1, 1);
            double v262 = v343;
          }
          unint64_t v272 = *(void *)(*(void *)&v262 + 16);
          unint64_t v271 = *(void *)(*(void *)&v262 + 24);
          if (v272 >= v271 >> 1)
          {
            sub_1D4337070(v271 > 1, v272 + 1, 1);
            double v262 = v343;
          }
          *(void *)(*(void *)&v262 + 16) = v272 + 1;
          uint64_t v273 = *(void *)&v262 + 16 * v272;
          *(void *)(v273 + 32) = v269;
          *(void *)(v273 + 40) = v270;
          v266 += v267;
          --v264;
        }
        while (v264);
        swift_bridgeObjectRelease();
        uint64_t v257 = v321;
      }
      else
      {
        swift_bridgeObjectRelease();
        double v262 = MEMORY[0x1E4FBC860];
      }
      uint64_t v258 = (uint64_t)v318;
    }
    double v343 = v262;
    sub_1D42D5DA0(&qword_1EA6C9F80);
    uint64_t v274 = sub_1D4469B68();
    double v343 = COERCE_DOUBLE(sub_1D42CB9EC(v274, v275, v342));
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D4276C3C(v258, &qword_1EBD7E670);
    *(_WORD *)(v214 + 88) = 1024;
    LODWORD(v343) = v339;
    sub_1D446A188();
    *(_WORD *)(v214 + 94) = 2080;
    LOBYTE(v343) = v323;
    uint64_t v276 = sub_1D4469B68();
    double v343 = COERCE_DOUBLE(sub_1D42CB9EC(v276, v277, v342));
    sub_1D446A188();
    swift_bridgeObjectRelease();
    *(_WORD *)(v214 + 104) = 2080;
    LOBYTE(v343) = v311;
    uint64_t v278 = sub_1D4469B68();
    double v343 = COERCE_DOUBLE(sub_1D42CB9EC(v278, v279, v342));
    sub_1D446A188();
    swift_bridgeObjectRelease();
    *(_WORD *)(v214 + 114) = 2080;
    double v343 = *(double *)&v312;
    v344 = v316;
    swift_bridgeObjectRetain();
    uint64_t v280 = sub_1D4469B68();
    double v343 = COERCE_DOUBLE(sub_1D42CB9EC(v280, v281, v342));
    sub_1D446A188();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v282 = v309;
    _os_log_impl(&dword_1D4271000, v309, (os_log_type_t)v308, "FMIPDevice:\n    -- id: %s,\n    -- name: %s,\n    -- baId: %s\n    -- isAccessory: %{BOOL}d\n    -- onlineLocation: %s\n    -- offlineLocation: %s\n    -- bestLocation: %s\n    -- itemGroup: %s\n    -- itemGroupItemsId: %s\n    -- shouldDisplaySeparatedLocation: %{BOOL}d\n    -- beaconType: %s\n    -- deviceConnectedType: %s\n    -- deviceAssociatedWithBeacon: %s", (uint8_t *)v214, 0x7Cu);
    unint64_t v283 = v307;
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v283, -1, -1);
    MEMORY[0x1D9447730](v214, -1, -1);

    sub_1D4276C3C(v327, &qword_1EA6CA1F8);
    sub_1D4276C3C(v257, &qword_1EBD7D4E0);
    sub_1D4276C3C((uint64_t)v333, &qword_1EBD7E670);
    uint64_t v100 = v329;
  }
  else
  {
    swift_bridgeObjectRelease_n();

    sub_1D4276C3C(v209, &qword_1EBD7E670);
    sub_1D4276C3C(v204, &qword_1EBD7E670);

    sub_1D42D2178(v320, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    swift_bridgeObjectRelease_n();
    sub_1D42D2178(v319, (uint64_t (*)(void))type metadata accessor for FMIPDevice);

    sub_1D4276C3C(v327, &qword_1EA6CA1F8);
    sub_1D4276C3C(v321, &qword_1EBD7D4E0);
    sub_1D4276C3C((uint64_t)v333, &qword_1EBD7E670);
  }
  sub_1D4276C3C(v322, &qword_1EBD7D4E0);
  sub_1D4276C3C(v328, &qword_1EBD7E670);
  return sub_1D42D2178(v100, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
}

void FMIPDevice.bestLocation.getter(double *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 272);
  long long v10 = *(_OWORD *)(v1 + 256);
  uint64_t v11 = v3;
  uint64_t v4 = *(void *)(v1 + 296);
  long long v8 = *(_OWORD *)(v1 + 280);
  uint64_t v9 = v4;
  uint64_t v5 = (*(void *)(v1 + 216) >> 5) & 1;
  uint64_t v6 = v1 + *(int *)(type metadata accessor for FMIPDevice() + 128);
  unsigned __int8 v7 = *(unsigned char *)(v1 + 80);
  sub_1D42D248C((uint64_t *)&v10, (uint64_t *)&v8, v5, v6, &v7, a1);
}

uint64_t FMIPDevice.hasLocation.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMIPDevice();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v3);
  unsigned __int8 v7 = &v20[-v6];
  uint64_t v8 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v8 - 8);
  long long v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D42A3A74(v1 + *(int *)(v2 + 128), (uint64_t)v10, &qword_1EBD7E670);
  uint64_t v11 = type metadata accessor for FMIPItemGroup();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11) == 1)
  {
    sub_1D4276C3C((uint64_t)v10, &qword_1EBD7E670);
    sub_1D42D2370(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
LABEL_6:
    sub_1D42D2178((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_7;
  }
  char v12 = FMIPItemGroup.shouldDisplaySeparatedLocation.getter();
  sub_1D42D2178((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  sub_1D42D2370(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if ((v12 & 1) == 0) {
    goto LABEL_6;
  }
  BOOL v13 = FMIPDevice.itemGroupsPartsHaveLocation.getter();
  sub_1D42D2178((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2370(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if (v13)
  {
    sub_1D42D2178((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    return 1;
  }
LABEL_7:
  uint64_t v15 = *((void *)v5 + 34);
  long long v24 = *((_OWORD *)v5 + 16);
  uint64_t v25 = v15;
  uint64_t v16 = *((void *)v5 + 37);
  long long v22 = *(_OWORD *)(v5 + 280);
  uint64_t v23 = v16;
  uint64_t v17 = (*((void *)v5 + 27) >> 5) & 1;
  uint64_t v18 = (uint64_t)&v5[*(int *)(v2 + 128)];
  unsigned __int8 v21 = v5[80];
  sub_1D42D248C((uint64_t *)&v24, (uint64_t *)&v22, v17, v18, &v21, &v26);
  sub_1D42D2178((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  BOOL v14 = v27 != 0;
  if (v27) {

  }
  return v14;
}

uint64_t FMIPDevice.init(device:separationMonitoringState:separationSupported:canBeLeashedByHost:safeLocations:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v73 = a5;
  int v79 = a3;
  int v80 = a4;
  uint64_t v9 = (int *)type metadata accessor for FMIPDevice();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v78 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v77 = (uint64_t)&v60 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v75 = (uint64_t)&v60 - v14;
  uint64_t v15 = sub_1D42D5DA0(&qword_1EBD7E670);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v61 = (uint64_t)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v74 = (uint64_t)&v60 - v18;
  uint64_t v19 = *(void *)a1;
  uint64_t v66 = *(void *)(a1 + 8);
  uint64_t v20 = v66;
  *(void *)a6 = v19;
  *(void *)(a6 + 8) = v20;
  *(void *)(a6 + 16) = *(void *)(a1 + 16);
  long long v64 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 24) = v64;
  uint64_t v21 = *(void *)(a1 + 48);
  uint64_t v67 = *(void *)(a1 + 40);
  *(void *)(a6 + 40) = v67;
  *(void *)(a6 + 48) = v21;
  uint64_t v71 = *(void *)(a1 + 72);
  uint64_t v22 = v71;
  long long v63 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a6 + 56) = v63;
  *(void *)(a6 + 72) = v22;
  *(unsigned char *)(a6 + 80) = *(unsigned char *)(a1 + 80);
  *(void *)(a6 + 88) = *(void *)(a1 + 88);
  long long v62 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a6 + 96) = v62;
  uint64_t v23 = *(void *)(a1 + 120);
  uint64_t v69 = *(void *)(a1 + 112);
  *(void *)(a6 + 112) = v69;
  *(void *)(a6 + 120) = v23;
  *(void *)&long long v72 = *(void *)(a1 + 176);
  *(void *)(a6 + 176) = v72;
  uint64_t v24 = *(void *)(a1 + 136);
  uint64_t v65 = *(void *)(a1 + 128);
  *(void *)(a6 + 128) = v65;
  *(void *)(a6 + 136) = v24;
  uint64_t v25 = *(void *)(a1 + 152);
  uint64_t v68 = *(void *)(a1 + 144);
  uint64_t v26 = *(void *)(a1 + 168);
  uint64_t v70 = *(void *)(a1 + 160);
  uint64_t v27 = v70;
  *(void *)(a6 + 144) = v68;
  *(void *)(a6 + 152) = v25;
  *(void *)(a6 + 160) = v27;
  *(void *)(a6 + 168) = v26;
  *(void *)(a6 + 184) = *(void *)(a1 + 184);
  *(unsigned char *)(a6 + 192) = *(unsigned char *)(a1 + 192);
  *(_OWORD *)(a6 + 200) = *(_OWORD *)(a1 + 200);
  uint64_t v28 = v9[38];
  uint64_t v76 = *a2;
  sub_1D42A3A74(a1 + v28, a6 + v28, &qword_1EBD7CB80);
  sub_1D42A3A74(a1 + v9[39], a6 + v9[39], &qword_1EBD7CB80);
  sub_1D42A3A74(a1 + v9[40], a6 + v9[40], &qword_1EBD7CB80);
  sub_1D42A3A74(a1 + v9[41], a6 + v9[41], &qword_1EBD7CB80);
  *(void *)(a6 + v9[37]) = *(void *)(a1 + v9[37]);
  *(unsigned char *)(a6 + v9[42]) = *(unsigned char *)(a1 + v9[42]);
  *(unsigned char *)(a6 + v9[43]) = *(unsigned char *)(a1 + v9[43]);
  *(unsigned char *)(a6 + v9[44]) = *(unsigned char *)(a1 + v9[44]);
  *(void *)(a6 + 232) = *(void *)(a1 + 232);
  *(void *)(a6 + 248) = *(void *)(a1 + 248);
  uint64_t v29 = qword_1EA6C8F90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29 != -1) {
    swift_once();
  }
  if (byte_1EA6CA2B1)
  {
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
  }
  else
  {
    uint64_t v30 = *(void *)(a1 + 256);
    uint64_t v31 = *(void **)(a1 + 264);
    uint64_t v32 = *(void *)(a1 + 272);
    id v33 = v31;
  }
  *(void *)(a6 + 256) = v30;
  *(void *)(a6 + 264) = v31;
  *(void *)(a6 + 272) = v32;
  sub_1D4276C98(a1 + 304, (uint64_t)v81, &qword_1EBD7CC10);
  sub_1D4276C98((uint64_t)v81, a6 + 304, &qword_1EBD7CC10);
  sub_1D42A3A74(a1 + v9[28], a6 + v9[28], &qword_1EBD7CEA0);
  sub_1D42A3A74(a1 + v9[29], a6 + v9[29], &qword_1EBD7D4E0);
  sub_1D42A3A74(a1 + v9[30], a6 + v9[30], &qword_1EBD7CDF8);
  sub_1D42A3A74(a1 + v9[31], a6 + v9[31], &qword_1EBD7CE38);
  *(void *)(a6 + 280) = *(void *)(a1 + 280);
  long long v72 = *(_OWORD *)(a1 + 288);
  *(_OWORD *)(a6 + 288) = v72;
  *(void *)(a6 + 224) = v73;
  uint64_t v34 = v9[32];
  uint64_t v35 = a6 + v34;
  sub_1D42A3A74(a1 + v34, a6 + v34, &qword_1EBD7E670);
  *(unsigned char *)(a6 + v9[34]) = *(unsigned char *)(a1 + v9[34]);
  *(unsigned char *)(a6 + v9[35]) = *(unsigned char *)(a1 + v9[35]);
  uint64_t v36 = v9[36];
  uint64_t v37 = *(void *)(a1 + v36);
  uint64_t v38 = *(void *)(a1 + v36 + 8);
  uint64_t v39 = (void *)(a6 + v36);
  void *v39 = v37;
  v39[1] = v38;
  uint64_t v40 = v74;
  sub_1D42A3A74(v35, v74, &qword_1EBD7E670);
  uint64_t v41 = type metadata accessor for FMIPItemGroup();
  uint64_t v73 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48);
  int v42 = v73(v40, 1, v41);
  sub_1D42FAC78((uint64_t)v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
  uint64_t v43 = (void *)v72;
  swift_bridgeObjectRetain();
  id v44 = v43;
  sub_1D4276C3C(v40, &qword_1EBD7E670);
  uint64_t v45 = v75;
  sub_1D42D2370(a1, v75, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if (v42 != 1)
  {
    sub_1D42D2178(v45, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v48 = v77;
    sub_1D42D2370(a1, v77, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v49 = (uint64_t)v78;
    goto LABEL_11;
  }
  uint64_t v46 = v61;
  sub_1D42A3A74(v45 + v9[32], v61, &qword_1EBD7E670);
  sub_1D42D2178(v45, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  int v47 = v73(v46, 1, v41);
  sub_1D4276C3C(v46, &qword_1EBD7E670);
  uint64_t v48 = v77;
  sub_1D42D2370(a1, v77, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  uint64_t v49 = (uint64_t)v78;
  if (v47 != 1)
  {
LABEL_11:
    sub_1D42D2178(v48, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2370(a1, v49, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    goto LABEL_12;
  }
  uint64_t v50 = *(void *)(v48 + 240);
  sub_1D42D2178(v48, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  sub_1D42D2370(a1, v49, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if ((v50 & 0x4000000) == 0)
  {
    BOOL v51 = *(unsigned char *)(v49 + v9[34]) == 5;
    goto LABEL_13;
  }
LABEL_12:
  BOOL v51 = 1;
LABEL_13:
  sub_1D42D2178(v49, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  *(unsigned char *)(a6 + v9[33]) = v51;
  uint64_t v52 = *(void *)(a1 + 216);
  switch(v76)
  {
    case 1:
      unint64_t v53 = v52 | 0x1000;
      unint64_t v54 = v52 & 0xFFFFFFFFFFFEEFFFLL | 0x1000;
      BOOL v55 = (v52 & 0x10000) == 0;
      goto LABEL_18;
    case 3:
      unint64_t v53 = v52 | 0x10000;
      unint64_t v54 = v52 & 0xFFFFFFFFFFFEEFFFLL | 0x10000;
      BOOL v55 = (*(void *)(a1 + 216) & 0x1000) == 0;
LABEL_18:
      if (!v55) {
        unint64_t v53 = v54;
      }
      break;
    default:
      unint64_t v53 = v52 & 0xFFFFFFFFFFFFEFFFLL;
      if ((v52 & 0x10000) != 0) {
        unint64_t v53 = (v53 ^ 0x10000) & v52;
      }
      break;
  }
  *(void *)(a6 + 216) = v53;
  uint64_t v56 = 0x40000;
  if ((v79 & 1) == 0) {
    uint64_t v56 = 0;
  }
  uint64_t v57 = 0x400000;
  if ((v80 & 1) == 0) {
    uint64_t v57 = 0;
  }
  unint64_t v58 = *(void *)(a1 + 240) & 0xFFFFFFFFFFBBFFFFLL | v56 | v57;
  uint64_t result = sub_1D42D2178(a1, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  *(void *)(a6 + 240) = v58;
  return result;
}

uint64_t FMIPBatteryStatus.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E55;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64656772616843;
      break;
    case 2:
      uint64_t result = 0x676E696772616843;
      break;
    case 3:
      uint64_t result = 0x6772616843746F4ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FMIPDevice.isAppleAudioAccessory.getter()
{
  uint64_t v1 = type metadata accessor for FMIPItem();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v5 - 8);
  unsigned __int8 v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMIPDevice();
  sub_1D42A3A74(v0 + *(int *)(v8 + 128), (uint64_t)v7, &qword_1EBD7E670);
  uint64_t v9 = type metadata accessor for FMIPItemGroup();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9) == 1)
  {
    sub_1D4276C3C((uint64_t)v7, &qword_1EBD7E670);
    return 0;
  }
  uint64_t v10 = *((void *)v7 + 5);
  swift_bridgeObjectRetain();
  sub_1D42D2178((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v12 = v10 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v13 = *(void *)(v2 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1D42D2370(v12, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    int v14 = v4[*(int *)(v1 + 84)];
    sub_1D42D2178((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPItem);
    if (v14 == 1) {
      break;
    }
    v12 += v13;
    if (!--v11)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t sub_1D4419FAC(unsigned __int8 *a1, char *a2)
{
  return sub_1D42D9544(*a1, *a2);
}

uint64_t sub_1D4419FB8()
{
  return sub_1D446A888();
}

uint64_t sub_1D441A098()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D441A160()
{
  return sub_1D446A888();
}

FMIPCore::FMIPBatteryStatus_optional sub_1D441A23C(Swift::String *a1)
{
  return FMIPBatteryStatus.init(rawValue:)(*a1);
}

void sub_1D441A248(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E776F6E6B6E55;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x64656772616843;
      goto LABEL_3;
    case 2:
      *a1 = 0x676E696772616843;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x6772616843746F4ELL;
      a1[1] = 0xEB00000000676E69;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE700000000000000;
      break;
  }
}

uint64_t FMIPDeviceState.rawValue.getter()
{
  return *(void *)v0;
}

FMIPCore::FMIPDeviceState __swiftcall FMIPDeviceState.init(rawValue:)(FMIPCore::FMIPDeviceState rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FMIPDeviceState.isWipeInProgress.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static FMIPDeviceState.isLostModeEnabled.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static FMIPDeviceState.isActivationLocked.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static FMIPDeviceState.isLowPowerModeEnabled.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static FMIPDeviceState.isLocating.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void static FMIPDeviceState.isLocationEnabled.getter(void *a1@<X8>)
{
  *a1 = 32;
}

void static FMIPDeviceState.isNotifyWhenFoundEnabled.getter(void *a1@<X8>)
{
  *a1 = 64;
}

void static FMIPDeviceState.isFamilySharedDevice.getter(void *a1@<X8>)
{
  *a1 = 128;
}

void static FMIPDeviceState.isLocationCapable.getter(void *a1@<X8>)
{
  *a1 = 256;
}

void static FMIPDeviceState.isMacOS.getter(void *a1@<X8>)
{
  *a1 = 512;
}

void static FMIPDeviceState.isThisDevice.getter(void *a1@<X8>)
{
  *a1 = 1024;
}

void static FMIPDeviceState.isCrowdsourcedLocating.getter(void *a1@<X8>)
{
  *a1 = 2048;
}

void static FMIPDeviceState.separationWarningActive.getter(void *a1@<X8>)
{
  *a1 = 4096;
}

void static FMIPDeviceState.isNotifyWhenDetachedEnabled.getter(void *a1@<X8>)
{
  *a1 = 0x2000;
}

void static FMIPDeviceState.isShowContactDetailsEnabled.getter(void *a1@<X8>)
{
  *a1 = 0x4000;
}

void static FMIPDeviceState.isDeviceWithYou.getter(void *a1@<X8>)
{
  *a1 = 0x8000;
}

void static FMIPDeviceState.separationWarningPaused.getter(void *a1@<X8>)
{
  *a1 = 0x10000;
}

void static FMIPDeviceState.isDeviceInPendingRemove.getter(void *a1@<X8>)
{
  *a1 = 0x20000;
}

void static FMIPDeviceState.isInRepairMode.getter(void *a1@<X8>)
{
  *a1 = 0x40000;
}

uint64_t sub_1D441A3DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1D4415D14(a1, a2);
}

uint64_t FMIPDeviceStatus.rawValue.getter()
{
  return qword_1D44790B8[*v0];
}

uint64_t sub_1D441A40C(char *a1, char *a2)
{
  return sub_1D441196C(*a1, *a2);
}

uint64_t sub_1D441A418()
{
  return sub_1D446A888();
}

uint64_t sub_1D441A474()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D441A4B4()
{
  return sub_1D446A888();
}

FMIPCore::FMIPDeviceStatus_optional sub_1D441A50C(Swift::String *a1)
{
  return FMIPDeviceStatus.init(rawValue:)(*a1);
}

void sub_1D441A518(void *a1@<X8>)
{
  *a1 = qword_1D44790B8[*v1];
  a1[1] = 0xE300000000000000;
}

BOOL FMIPBeaconType.isLocalFindable.getter()
{
  return *v0 == 5;
}

BOOL static FMIPBeaconType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FMIPBeaconType.hash(into:)()
{
  return sub_1D446A838();
}

uint64_t sub_1D441A584()
{
  return 0;
}

uint64_t sub_1D441A590(uint64_t a1)
{
  unint64_t v2 = sub_1D441CDB8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D441A5CC(uint64_t a1)
{
  unint64_t v2 = sub_1D441CDB8();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1D441A624(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1D441A630(uint64_t a1)
{
  unint64_t v2 = sub_1D42B44F8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D441A66C(uint64_t a1)
{
  unint64_t v2 = sub_1D42B44F8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D441A6A8(uint64_t a1)
{
  unint64_t v2 = sub_1D441CE0C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D441A6E4(uint64_t a1)
{
  unint64_t v2 = sub_1D441CE0C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D441A720@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1D441A750(uint64_t a1)
{
  unint64_t v2 = sub_1D441CD64();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D441A78C(uint64_t a1)
{
  unint64_t v2 = sub_1D441CD64();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D441A7C8(uint64_t a1)
{
  unint64_t v2 = sub_1D441CD10();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D441A804(uint64_t a1)
{
  unint64_t v2 = sub_1D441CD10();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D441A840(uint64_t a1)
{
  unint64_t v2 = sub_1D42B44A4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D441A87C(uint64_t a1)
{
  unint64_t v2 = sub_1D42B44A4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D441A8B8(uint64_t a1)
{
  unint64_t v2 = sub_1D441CE60();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D441A8F4(uint64_t a1)
{
  unint64_t v2 = sub_1D441CE60();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D441A930(uint64_t a1)
{
  unint64_t v2 = sub_1D441CCBC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D441A96C(uint64_t a1)
{
  unint64_t v2 = sub_1D441CCBC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPBeaconType.hashValue.getter()
{
  return sub_1D446A888();
}

void sub_1D441AA28()
{
  off_1EA6CB3A8 = (_UNKNOWN *)MEMORY[0x1E4FBC868];
}

uint64_t FMIPDevice.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPDevice.baIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPDevice.ownerIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPDevice.discoveryIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPDevice.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

void FMIPDevice.status.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 80);
}

uint64_t FMIPDevice.color.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPDevice.category.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPDevice.model.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPDevice.rawModel.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPDevice.modelDisplayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPDevice.displayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_bridgeObjectRetain();
  return v1;
}

double FMIPDevice.batteryLevel.getter()
{
  return *(double *)(v0 + 184);
}

void FMIPDevice.batteryStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 192);
}

uint64_t FMIPDevice.passcodeLength.getter()
{
  return *(void *)(v0 + 200);
}

uint64_t FMIPDevice.maxMessageLength.getter()
{
  return *(void *)(v0 + 208);
}

void FMIPDevice.state.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 216);
}

uint64_t FMIPDevice.safeLocations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FMIPDevice.audioChannels.getter()
{
  return swift_bridgeObjectRetain();
}

void FMIPDevice.features.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 240);
}

uint64_t FMIPDevice.historicalLocations.getter()
{
  return swift_bridgeObjectRetain();
}

id FMIPDevice.location.getter@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = *(void *)(v1 + 256);
  long long v2 = *(_OWORD *)(v1 + 264);
  *(_OWORD *)(a1 + 8) = v2;
  return (id)v2;
}

id FMIPDevice.crowdSourcedLocation.getter@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = *(void *)(v1 + 280);
  long long v2 = *(_OWORD *)(v1 + 288);
  *(_OWORD *)(a1 + 8) = v2;
  return (id)v2;
}

uint64_t FMIPDevice.address.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1D4276C98(v1 + 304, (uint64_t)v4, &qword_1EBD7CC10);
  sub_1D4276C98((uint64_t)v4, a1, &qword_1EBD7CC10);
  return sub_1D42FAC78((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
}

uint64_t FMIPDevice.soundMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMIPDevice();
  return sub_1D42A3A74(v1 + *(int *)(v3 + 112), a1, &qword_1EBD7CEA0);
}

uint64_t FMIPDevice.lostMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMIPDevice();
  return sub_1D42A3A74(v1 + *(int *)(v3 + 116), a1, &qword_1EBD7D4E0);
}

uint64_t FMIPDevice.lockMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMIPDevice();
  return sub_1D42A3A74(v1 + *(int *)(v3 + 120), a1, &qword_1EBD7CDF8);
}

uint64_t FMIPDevice.eraseMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMIPDevice();
  return sub_1D42A3A74(v1 + *(int *)(v3 + 124), a1, &qword_1EBD7CE38);
}

uint64_t FMIPDevice.itemGroup.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMIPDevice();
  return sub_1D42A3A74(v1 + *(int *)(v3 + 128), a1, &qword_1EBD7E670);
}

uint64_t FMIPDevice.isConsideredAccessory.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMIPDevice() + 132));
}

uint64_t FMIPDevice.beaconType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FMIPDevice();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 136));
  return result;
}

uint64_t FMIPDevice.deviceConnectedState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FMIPDevice();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 140));
  return result;
}

uint64_t FMIPDevice.deviceConnectedWithBeacon.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FMIPDevice() + 144));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPDevice.rm2State.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FMIPDevice() + 148));
}

uint64_t FMIPDevice.skipPasswordOnRemove.getter()
{
  return (*(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMIPDevice() + 148)) >> 2) & 1;
}

uint64_t FMIPDevice.warnLockOnUnattachedRemove.getter()
{
  return (*(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMIPDevice() + 148)) >> 1) & 1;
}

uint64_t FMIPDevice.isOwned.getter()
{
  if (*(void *)(v0 + 32) == 0x72656E776FLL && *(void *)(v0 + 40) == 0xE500000000000000) {
    return 1;
  }
  char v2 = sub_1D446A758();
  uint64_t result = 0;
  if (v2) {
    return 1;
  }
  return result;
}

uint64_t FMIPDevice.isLocating.getter()
{
  uint64_t v1 = type metadata accessor for FMIPDevice();
  uint64_t v2 = v1 - 8;
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v5 - 8);
  unsigned __int8 v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42A3A74(v0 + *(int *)(v2 + 136), (uint64_t)v7, &qword_1EBD7E670);
  uint64_t v8 = type metadata accessor for FMIPItemGroup();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_1D4276C3C((uint64_t)v7, &qword_1EBD7E670);
  }
  else
  {
    uint64_t v9 = *((void *)v7 + 8);
    sub_1D42D2178((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    if ((v9 & 0x8000) != 0) {
      return 0;
    }
  }
  uint64_t v10 = *(void *)(v0 + 216);
  sub_1D42D2370(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  if ((v10 & 0x10) != 0) {
    uint64_t v11 = 1;
  }
  else {
    uint64_t v11 = (v4[217] >> 3) & 1;
  }
  sub_1D42D2178((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  return v11;
}

uint64_t FMIPDevice.pairingIncomplete.getter()
{
  uint64_t v1 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FMIPDevice();
  sub_1D42A3A74(v0 + *(int *)(v4 + 128), (uint64_t)v3, &qword_1EBD7E670);
  uint64_t v5 = type metadata accessor for FMIPItemGroup();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_1D4276C3C((uint64_t)v3, &qword_1EBD7E670);
    return 0;
  }
  else
  {
    unint64_t v7 = *((void *)v3 + 8);
    sub_1D42D2178((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    return (v7 >> 15) & 1;
  }
}

uint64_t FMIPDevice.lostTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMIPDevice();
  return sub_1D42A3A74(v1 + *(int *)(v3 + 152), a1, &qword_1EBD7CB80);
}

uint64_t FMIPDevice.lockedTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMIPDevice();
  return sub_1D42A3A74(v1 + *(int *)(v3 + 156), a1, &qword_1EBD7CB80);
}

uint64_t FMIPDevice.wipedTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMIPDevice();
  return sub_1D42A3A74(v1 + *(int *)(v3 + 160), a1, &qword_1EBD7CB80);
}

uint64_t FMIPDevice.pendingRemoveUntilTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMIPDevice();
  return sub_1D42A3A74(v1 + *(int *)(v3 + 164), a1, &qword_1EBD7CB80);
}

BOOL FMIPDevice.itemGroupsPartsHaveLocation.getter()
{
  uint64_t v1 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + *(int *)(type metadata accessor for FMIPDevice() + 128);
  sub_1D42A3A74(v4, (uint64_t)v3, &qword_1EBD7E670);
  uint64_t v5 = type metadata accessor for FMIPItemGroup();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_1D4276C3C((uint64_t)v3, &qword_1EBD7E670);
    return 0;
  }
  uint64_t v6 = *((void *)v3 + 5);
  swift_bridgeObjectRetain();
  sub_1D42D2178((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  uint64_t v7 = *(void *)(v0 + 272);
  long long v18 = *(_OWORD *)(v0 + 256);
  uint64_t v19 = v7;
  uint64_t v8 = *(void *)(v0 + 296);
  long long v16 = *(_OWORD *)(v0 + 280);
  uint64_t v17 = v8;
  uint64_t v9 = (*(void *)(v0 + 216) >> 5) & 1;
  unsigned __int8 v15 = *(unsigned char *)(v0 + 80);
  sub_1D42D248C((uint64_t *)&v18, (uint64_t *)&v16, v9, v4, &v15, &v20);
  id v10 = v21;

  if (v10)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v12 = sub_1D4415B14(v6);
  swift_bridgeObjectRelease();
  uint64_t v13 = v12[2];
  swift_bridgeObjectRelease();
  return v13 != 0;
}

uint64_t sub_1D441B688(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1D42DEABC(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1D42DEABC(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D446A758();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D441B714()
{
  char v1 = *v0;
  sub_1D446A828();
  sub_1D42DEABC(v1);
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  return sub_1D446A888();
}

uint64_t sub_1D441B778()
{
  sub_1D42DEABC(*v0);
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D441B7CC()
{
  char v1 = *v0;
  sub_1D446A828();
  sub_1D42DEABC(v1);
  sub_1D4469BC8();
  swift_bridgeObjectRelease();
  return sub_1D446A888();
}

uint64_t sub_1D441B82C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D4422454();
  *a1 = result;
  return result;
}

uint64_t sub_1D441B85C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D42DEABC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D441B888@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D4422454();
  *a1 = result;
  return result;
}

void sub_1D441B8B0(unsigned char *a1@<X8>)
{
  *a1 = 58;
}

uint64_t sub_1D441B8BC(uint64_t a1)
{
  unint64_t v2 = sub_1D42D6780();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D441B8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1D4469618();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v50 - v11;
  if (qword_1EA6C8FE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v13 = off_1EA6CB3A8;
  uint64_t v14 = *((void *)off_1EA6CB3A8 + 2);
  uint64_t v54 = a1;
  BOOL v55 = v10;
  if (!v14) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_1D42C4FCC(a1, a2);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v28 = swift_endAccess();
    goto LABEL_9;
  }
  uint64_t v17 = (unsigned __int8 *)(v13[7] + 24 * v15);
  LODWORD(v53) = *v17;
  uint64_t v18 = v7;
  unsigned __int8 v19 = v17[1];
  LODWORD(v52) = v17[2];
  LOBYTE(v20) = v17[3];
  id v21 = (void *)*((void *)v17 + 1);
  double v22 = *((double *)v17 + 2);
  swift_endAccess();
  id v23 = v21;
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v23, sel_timestamp);
  sub_1D44695D8();

  sub_1D44695A8();
  double v26 = v25;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v12, v6);
  if (v26 > -300.0)
  {
    *(unsigned char *)a3 = v53;
    *(unsigned char *)(a3 + 1) = v19;
    *(unsigned char *)(a3 + 2) = v52;
    goto LABEL_19;
  }

  uint64_t v7 = v18;
LABEL_9:
  sub_1D441CBC4(v28, 0.0, 300.0);
  sub_1D4469608();
  sub_1D4469568();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v7 + 8);
  v29(v12, v6);
  uint64_t v30 = v6;
  id v31 = objc_allocWithZone(MEMORY[0x1E4F1E5F0]);
  uint64_t v32 = (void *)sub_1D4469578();
  id v33 = objc_msgSend(v31, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_speed_timestamp_, v32, 37.3723, -122.0804, 100.0, 35.0, 35.0, 0.0, 0.0);

  LOBYTE(v56) = 1;
  id v34 = v33;
  id v35 = objc_msgSend(v34, sel_timestamp);
  sub_1D44695D8();

  sub_1D44695A8();
  double v37 = v36;
  uint64_t v53 = v30;
  BOOL v51 = (uint64_t (*)(char *, uint64_t))v29;
  v29(v12, v30);
  id v38 = objc_msgSend(v34, sel_floor);
  uint64_t v52 = v7 + 8;
  if (v38)
  {
    uint64_t v39 = v38;
    id v40 = objc_msgSend(v38, sel_level);

    double v41 = (double)(uint64_t)v40;
  }
  else
  {
    double v41 = -1.0;
  }
  sub_1D42B7188(v34, (char *)&v56, v37 < -3600.0, 0, 1, (uint64_t)v57, v41);
  int v42 = v57[0];
  int v43 = v57[1];
  int v44 = v57[2];
  int v20 = v57[3];
  uint64_t v45 = v58;
  double v22 = v59;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v23 = v45;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v56 = off_1EA6CB3A8;
  off_1EA6CB3A8 = (_UNKNOWN *)0x8000000000000000;
  if (v43) {
    int v47 = 256;
  }
  else {
    int v47 = 0;
  }
  int v48 = v47 | v42;
  if (v44) {
    int v49 = 0x10000;
  }
  else {
    int v49 = 0;
  }
  sub_1D42C158C(v48 | v49 | (v20 << 24), (uint64_t)v23, v54, a2, isUniquelyReferenced_nonNull_native, v22);
  off_1EA6CB3A8 = v56;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();

  uint64_t result = v51(v55, v53);
  *(unsigned char *)a3 = v42;
  *(unsigned char *)(a3 + 1) = v43;
  *(unsigned char *)(a3 + 2) = v44;
LABEL_19:
  *(unsigned char *)(a3 + 3) = v20;
  *(void *)(a3 + 8) = v23;
  *(double *)(a3 + 16) = v22;
  return result;
}

Swift::Bool __swiftcall FMIPDevice.canEnableNotifyWhenFound()()
{
  uint64_t v1 = sub_1D4469618();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v0 + 217) & 4) == 0)
  {
    uint64_t v8 = v0 + *(int *)(type metadata accessor for FMIPDevice() + 128);
    sub_1D42A3A74(v8, (uint64_t)v7, &qword_1EBD7E670);
    uint64_t v9 = type metadata accessor for FMIPItemGroup();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9) == 1)
    {
      sub_1D4276C3C((uint64_t)v7, &qword_1EBD7E670);
    }
    else
    {
      uint64_t v11 = *((void *)v7 + 5);
      swift_bridgeObjectRetain();
      sub_1D42D2178((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      uint64_t v12 = *(void *)(v0 + 272);
      long long v41 = *(_OWORD *)(v0 + 256);
      uint64_t v42 = v12;
      uint64_t v13 = *(void *)(v0 + 296);
      long long v39 = *(_OWORD *)(v0 + 280);
      uint64_t v40 = v13;
      uint64_t v14 = (*(void *)(v0 + 216) >> 5) & 1;
      unsigned __int8 v38 = *(unsigned char *)(v0 + 80);
      sub_1D42D248C((uint64_t *)&v41, (uint64_t *)&v39, v14, v8, &v38, (double *)&v43);
      id v15 = v44;

      if (!v15)
      {
        uint64_t v23 = (uint64_t)sub_1D4415B14(v11);
        swift_bridgeObjectRelease();
        uint64_t v24 = *(void *)(v23 + 16);
        if (v24) {
          goto LABEL_11;
        }
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v16 = *(void *)(v0 + 272);
    long long v41 = *(_OWORD *)(v0 + 256);
    uint64_t v42 = v16;
    uint64_t v17 = *(void *)(v0 + 296);
    long long v39 = *(_OWORD *)(v0 + 280);
    uint64_t v40 = v17;
    uint64_t v18 = (*(void *)(v0 + 216) >> 5) & 1;
    unsigned __int8 v38 = *(unsigned char *)(v0 + 80);
    sub_1D42D248C((uint64_t *)&v41, (uint64_t *)&v39, v18, v8, &v38, (double *)&v43);
    id v19 = v44;
    if (v44)
    {
      uint64_t v20 = v45;
      int v21 = v43;
      unint64_t v22 = v43 >> 24;
      sub_1D42D5DA0(&qword_1EA6C9ED8);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1D446E050;
      *(unsigned char *)(v23 + 32) = v21 & 1;
      *(unsigned char *)(v23 + 33) = BYTE1(v21) & 1;
      *(unsigned char *)(v23 + 34) = BYTE2(v21) & 1;
      *(unsigned char *)(v23 + 35) = v22;
      *(void *)(v23 + 40) = v19;
      *(void *)(v23 + 48) = v20;
      uint64_t v24 = *(void *)(v23 + 16);
      if (!v24) {
        goto LABEL_19;
      }
LABEL_11:
      sub_1D4469608();
      sub_1D44695B8();
      double v26 = v25;
      uint64_t v27 = *(void (**)(char *, uint64_t))(v2 + 8);
      v27(v4, v1);
      uint64_t v28 = v24 - 1;
      v37[1] = v23;
      uint64_t v29 = (void **)(v23 + 40);
      do
      {
        uint64_t v30 = *v29;
        v29 += 3;
        id v31 = v30;
        id v32 = objc_msgSend(v31, sel_timestamp);
        sub_1D44695D8();

        sub_1D44695B8();
        double v34 = v33;

        v27(v4, v1);
        Swift::Bool v10 = v26 - v34 > 180.0;
      }
      while (v26 - v34 <= 180.0 && v28-- != 0);
      goto LABEL_20;
    }
    uint64_t v23 = MEMORY[0x1E4FBC860];
    uint64_t v24 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v24) {
      goto LABEL_11;
    }
LABEL_19:
    Swift::Bool v10 = 1;
LABEL_20:
    swift_bridgeObjectRelease();
    return v10;
  }
  return 0;
}

BOOL FMIPDevice.isLostModeActive.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7E670);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v35 = (uint64_t)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FMIPDevice();
  MEMORY[0x1F4188790](v4);
  uint64_t v32 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v33 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v34 = (uint64_t)&v32 - v10;
  uint64_t v11 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v17 = v0 + *(int *)(v4 + 116);
  sub_1D42A3A74(v17, (uint64_t)&v32 - v15, &qword_1EBD7D4E0);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v19 = v18(v16, 1, v6);
  uint64_t v20 = v1;
  sub_1D4276C3C((uint64_t)v16, &qword_1EBD7D4E0);
  if (v19 != 1 && *(unsigned char *)(v1 + *(int *)(v4 + 136)) == 5) {
    return 1;
  }
  sub_1D42A3A74(v17, (uint64_t)v14, &qword_1EBD7D4E0);
  if (v18(v14, 1, v6) == 1)
  {
    sub_1D4276C3C((uint64_t)v14, &qword_1EBD7D4E0);
    uint64_t v21 = v4;
LABEL_8:
    uint64_t v26 = v35;
    sub_1D42A3A74(v20 + *(int *)(v21 + 128), v35, &qword_1EBD7E670);
    uint64_t v27 = type metadata accessor for FMIPItemGroup();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v26, 1, v27) == 1)
    {
      sub_1D4276C3C(v26, &qword_1EBD7E670);
      return 0;
    }
    uint64_t v28 = *(void *)(v26 + 64);
    sub_1D42D2178(v26, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
    return (v28 & 8) != 0;
  }
  uint64_t v22 = v34;
  sub_1D42D6B4C((uint64_t)v14, v34, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
  uint64_t v21 = v4;
  if (((1 << *(unsigned char *)(v22 + 56)) & 0x1FFB) != 0)
  {
    uint64_t v23 = v32;
    sub_1D42D2370(v20, v32, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    sub_1D42D2178(v23, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v24 = v33;
    sub_1D42D2370(v22, v33, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
  }
  else
  {
    uint64_t v30 = v32;
    sub_1D42D2370(v20, v32, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v31 = *(void *)(v30 + 216);
    sub_1D42D2178(v30, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
    uint64_t v24 = v33;
    sub_1D42D2370(v22, v33, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
    if ((v31 & 2) != 0)
    {
      sub_1D42D2178(v24, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
      sub_1D42D2178(v22, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
      return 1;
    }
  }
  int v25 = *(unsigned __int8 *)(v24 + 56);
  sub_1D42D2178(v24, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
  sub_1D42D2178(v22, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
  if (v25 != 4) {
    goto LABEL_8;
  }
  return 1;
}

uint64_t sub_1D441C648(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v31 = __src;
  uint64_t v30 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      uint64_t v18 = 24 * v11;
      if (__dst != a2 || &a2[v18] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      int v19 = &v4[v18];
      uint64_t v29 = v19;
      uint64_t v31 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v20 = a3 - 24;
        uint64_t v21 = v6;
        while (1)
        {
          uint64_t v22 = (char *)(v20 + 24);
          uint64_t v23 = *((void *)v21 - 3);
          uint64_t v24 = *((void *)v21 - 2);
          v21 -= 24;
          BOOL v25 = v23 == *((void *)v19 - 3) && v24 == *((void *)v19 - 2);
          if (v25 || (sub_1D446A758() & 1) == 0)
          {
            uint64_t v29 = v19 - 24;
            if (v22 < v19 || v20 >= (unint64_t)v19 || v22 != v19)
            {
              long long v27 = *(_OWORD *)(v19 - 24);
              *(void *)(v20 + 16) = *((void *)v19 - 1);
              *(_OWORD *)unint64_t v20 = v27;
            }
            uint64_t v21 = v6;
            v19 -= 24;
            if (v6 <= v7) {
              goto LABEL_46;
            }
          }
          else
          {
            if (v22 != v6 || v20 >= (unint64_t)v6)
            {
              long long v26 = *(_OWORD *)v21;
              *(void *)(v20 + 16) = *((void *)v21 + 2);
              *(_OWORD *)unint64_t v20 = v26;
            }
            uint64_t v31 = v21;
            if (v21 <= v7) {
              goto LABEL_46;
            }
          }
          v20 -= 24;
          uint64_t v6 = v21;
          if (v19 <= v4) {
            goto LABEL_46;
          }
        }
      }
      goto LABEL_46;
    }
  }
  else if (v8 >= -23)
  {
    size_t v12 = 24 * v9;
    if (__dst != __src || &__src[v12] <= __dst) {
      memmove(__dst, __src, v12);
    }
    uint64_t v13 = &v4[v12];
    uint64_t v29 = v13;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      do
      {
        BOOL v14 = *(void *)v4 == *(void *)v6 && *((void *)v4 + 1) == *((void *)v6 + 1);
        if (v14 || (sub_1D446A758() & 1) == 0)
        {
          if (v7 != v4)
          {
            long long v17 = *(_OWORD *)v4;
            *((void *)v7 + 2) = *((void *)v4 + 2);
            *(_OWORD *)uint64_t v7 = v17;
          }
          v4 += 24;
          uint64_t v30 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 24;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
          {
            long long v16 = *(_OWORD *)v6;
            *((void *)v7 + 2) = *((void *)v6 + 2);
            *(_OWORD *)uint64_t v7 = v16;
          }
        }
        v7 += 24;
        if (v4 >= v13) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v31 = v7;
    }
LABEL_46:
    sub_1D441CAE4((void **)&v31, (const void **)&v30, &v29);
    return 1;
  }
  uint64_t result = sub_1D446A4D8();
  __break(1u);
  return result;
}

char *sub_1D441C918(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1D42D5DA0(&qword_1EA6CB578);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1D441CA14(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_1D446A4D8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

char *sub_1D441CAE4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_1D446A4D8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 24 * (v4 / 24);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1D441CBB0(uint64_t a1)
{
  return sub_1D441C918(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D441CBC4(uint64_t result, double a2, double a3)
{
  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  double v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t result = MEMORY[0x1D9447750](&v7, 8);
  if (v5 * ((double)(v7 & 0x1FFFFFFFFFFFFFLL) * 1.11022302e-16) + a2 == a3) {
    return sub_1D441CBC4(v6, a2, a3);
  }
  return result;
}

uint64_t sub_1D441CC70(uint64_t a1)
{
  return sub_1D43379C4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D441CC84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

unint64_t sub_1D441CCBC()
{
  unint64_t result = qword_1EA6CB408;
  if (!qword_1EA6CB408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB408);
  }
  return result;
}

unint64_t sub_1D441CD10()
{
  unint64_t result = qword_1EA6CB410;
  if (!qword_1EA6CB410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB410);
  }
  return result;
}

unint64_t sub_1D441CD64()
{
  unint64_t result = qword_1EA6CB418;
  if (!qword_1EA6CB418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB418);
  }
  return result;
}

unint64_t sub_1D441CDB8()
{
  unint64_t result = qword_1EA6CB420;
  if (!qword_1EA6CB420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB420);
  }
  return result;
}

unint64_t sub_1D441CE0C()
{
  unint64_t result = qword_1EA6CB428;
  if (!qword_1EA6CB428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB428);
  }
  return result;
}

unint64_t sub_1D441CE60()
{
  unint64_t result = qword_1EA6CB430;
  if (!qword_1EA6CB430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB430);
  }
  return result;
}

unint64_t sub_1D441CEB4()
{
  unint64_t result = qword_1EA6CB490;
  if (!qword_1EA6CB490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB490);
  }
  return result;
}

unint64_t sub_1D441CF08()
{
  unint64_t result = qword_1EA6CB4A8;
  if (!qword_1EA6CB4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB4A8);
  }
  return result;
}

unint64_t sub_1D441CF60()
{
  unint64_t result = qword_1EA6CB4B0;
  if (!qword_1EA6CB4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB4B0);
  }
  return result;
}

unint64_t sub_1D441CFB8()
{
  unint64_t result = qword_1EA6CB4B8;
  if (!qword_1EA6CB4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB4B8);
  }
  return result;
}

unint64_t sub_1D441D010()
{
  unint64_t result = qword_1EA6CB4C0;
  if (!qword_1EA6CB4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB4C0);
  }
  return result;
}

unint64_t sub_1D441D068()
{
  unint64_t result = qword_1EA6CB4C8;
  if (!qword_1EA6CB4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB4C8);
  }
  return result;
}

unint64_t sub_1D441D0C0()
{
  unint64_t result = qword_1EA6CB4D0;
  if (!qword_1EA6CB4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB4D0);
  }
  return result;
}

unint64_t sub_1D441D118()
{
  unint64_t result = qword_1EA6CB4D8;
  if (!qword_1EA6CB4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB4D8);
  }
  return result;
}

unint64_t sub_1D441D170()
{
  unint64_t result = qword_1EA6CB4E0;
  if (!qword_1EA6CB4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB4E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPBatteryStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    char *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D441D290);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPBatteryStatus()
{
  return &type metadata for FMIPBatteryStatus;
}

ValueMetadata *type metadata accessor for FMIPDeviceState()
{
  return &type metadata for FMIPDeviceState;
}

unsigned char *storeEnumTagSinglePayload for FMIPDeviceStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    char *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D441D3A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPDeviceStatus()
{
  return &type metadata for FMIPDeviceStatus;
}

uint64_t initializeBufferWithCopyOfBuffer for FMIPDevice(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v38 = *a2;
    *(void *)a1 = *a2;
    a1 = v38 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v10;
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v11 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v11;
    uint64_t v12 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v12;
    uint64_t v13 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v13;
    uint64_t v14 = a2[18];
    *(void *)(a1 + 136) = a2[17];
    *(void *)(a1 + 144) = v14;
    uint64_t v15 = a2[20];
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v15;
    uint64_t v16 = a2[22];
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v16;
    *(void *)(a1 + 184) = a2[23];
    *(unsigned char *)(a1 + 192) = *((unsigned char *)a2 + 192);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
    uint64_t v17 = a2[28];
    *(void *)(a1 + 216) = a2[27];
    *(void *)(a1 + 224) = v17;
    uint64_t v18 = a2[30];
    *(void *)(a1 + 232) = a2[29];
    *(void *)(a1 + 240) = v18;
    *(void *)(a1 + 248) = a2[31];
    *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 64);
    unint64_t v20 = (void *)a2[33];
    uint64_t v19 = a2[34];
    *(void *)(a1 + 264) = v20;
    *(void *)(a1 + 272) = v19;
    *(_DWORD *)(a1 + 280) = *((_DWORD *)a2 + 70);
    uint64_t v22 = (void *)a2[36];
    uint64_t v21 = a2[37];
    *(void *)(a1 + 288) = v22;
    *(void *)(a1 + 296) = v21;
    uint64_t v23 = a2[59];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v24 = v20;
    id v25 = v22;
    if (v23)
    {
      uint64_t v26 = a2[39];
      *(void *)(a1 + 304) = a2[38];
      *(void *)(a1 + 312) = v26;
      uint64_t v27 = a2[41];
      *(void *)(a1 + 320) = a2[40];
      *(void *)(a1 + 328) = v27;
      uint64_t v28 = a2[43];
      *(void *)(a1 + 336) = a2[42];
      *(void *)(a1 + 344) = v28;
      uint64_t v29 = a2[45];
      *(void *)(a1 + 352) = a2[44];
      *(void *)(a1 + 360) = v29;
      uint64_t v30 = a2[47];
      *(void *)(a1 + 368) = a2[46];
      *(void *)(a1 + 376) = v30;
      uint64_t v31 = a2[49];
      *(void *)(a1 + 384) = a2[48];
      *(void *)(a1 + 392) = v31;
      uint64_t v32 = a2[51];
      *(void *)(a1 + 400) = a2[50];
      *(void *)(a1 + 408) = v32;
      uint64_t v33 = a2[53];
      *(void *)(a1 + 416) = a2[52];
      *(void *)(a1 + 424) = v33;
      uint64_t v34 = a2[55];
      *(void *)(a1 + 432) = a2[54];
      *(void *)(a1 + 440) = v34;
      uint64_t v35 = a2[57];
      *(void *)(a1 + 448) = a2[56];
      *(void *)(a1 + 456) = v35;
      *(void *)(a1 + 464) = a2[58];
      *(void *)(a1 + 472) = v23;
      uint64_t v36 = a2[61];
      *(void *)(a1 + 480) = a2[60];
      *(void *)(a1 + 488) = v36;
      uint64_t v37 = a2[63];
      *(void *)(a1 + 496) = a2[62];
      *(void *)(a1 + 504) = v37;
      *(void *)(a1 + 512) = a2[64];
      *(void *)(a1 + 520) = a2[65];
      *(void *)(a1 + 528) = a2[66];
      *(void *)(a1 + 536) = a2[67];
      *(void *)(a1 + 544) = a2[68];
      *(void *)(a1 + 552) = a2[69];
      *(void *)(a1 + 560) = a2[70];
      *(void *)(a1 + 568) = a2[71];
      *(void *)(a1 + 576) = a2[72];
      *(void *)(a1 + 584) = a2[73];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy((void *)(a1 + 304), a2 + 38, 0x120uLL);
    }
    long long v39 = a3;
    uint64_t v40 = a3[28];
    long long v41 = (unsigned char *)(a1 + v40);
    uint64_t v42 = (char *)a2 + v40;
    unint64_t v43 = (int *)type metadata accessor for FMIPPlaySoundMetadata();
    uint64_t v44 = *((void *)v43 - 1);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v44 + 48))(v42, 1, v43))
    {
      uint64_t v45 = sub_1D42D5DA0(&qword_1EBD7CEA0);
      memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      unsigned char *v41 = *v42;
      uint64_t v46 = v43[5];
      int v47 = &v41[v46];
      int v48 = &v42[v46];
      uint64_t v49 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
      uint64_t v50 = v43[6];
      BOOL v51 = &v41[v50];
      uint64_t v52 = &v42[v50];
      uint64_t v53 = v52[1];
      *BOOL v51 = *v52;
      v51[1] = v53;
      uint64_t v54 = v43[7];
      BOOL v55 = &v41[v54];
      uint64_t v56 = &v42[v54];
      uint64_t v57 = v56[1];
      *BOOL v55 = *v56;
      v55[1] = v57;
      uint64_t v58 = v43[8];
      double v59 = &v41[v58];
      uint64_t v60 = &v42[v58];
      uint64_t v61 = v60[1];
      *double v59 = *v60;
      v59[1] = v61;
      uint64_t v62 = v43[9];
      long long v63 = &v41[v62];
      long long v64 = &v42[v62];
      uint64_t v65 = v64[1];
      void *v63 = *v64;
      v63[1] = v65;
      uint64_t v66 = *(void (**)(unsigned char *, void, uint64_t, int *))(v44 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v66(v41, 0, 1, v43);
    }
    uint64_t v67 = a3[29];
    uint64_t v68 = (_DWORD *)(a1 + v67);
    uint64_t v69 = (_DWORD *)((char *)a2 + v67);
    uint64_t v70 = type metadata accessor for FMIPDeviceLostModeMetadata();
    uint64_t v71 = *(void *)(v70 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
    {
      uint64_t v72 = sub_1D42D5DA0(&qword_1EBD7D4E0);
      memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      *uint64_t v68 = *v69;
      uint64_t v73 = *((void *)v69 + 2);
      *((void *)v68 + 1) = *((void *)v69 + 1);
      *((void *)v68 + 2) = v73;
      uint64_t v74 = *((void *)v69 + 4);
      *((void *)v68 + 3) = *((void *)v69 + 3);
      *((void *)v68 + 4) = v74;
      uint64_t v75 = *((void *)v69 + 6);
      *((void *)v68 + 5) = *((void *)v69 + 5);
      *((void *)v68 + 6) = v75;
      *((unsigned char *)v68 + 56) = *((unsigned char *)v69 + 56);
      uint64_t v76 = *(int *)(v70 + 48);
      uint64_t v165 = (char *)v69 + v76;
      uint64_t v168 = (char *)v68 + v76;
      uint64_t v77 = sub_1D4469618();
      uint64_t v163 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v78 = v77;
      long long v39 = a3;
      v163(v168, v165, v78);
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
    }
    uint64_t v79 = v39[30];
    int v80 = (unsigned char *)(a1 + v79);
    uint64_t v81 = (char *)a2 + v79;
    uint64_t v82 = type metadata accessor for FMIPLockMetadata();
    uint64_t v83 = *(void *)(v82 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
    {
      uint64_t v84 = sub_1D42D5DA0(&qword_1EBD7CDF8);
      memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
    }
    else
    {
      *int v80 = *v81;
      uint64_t v85 = *(int *)(v82 + 20);
      long long v86 = &v80[v85];
      uint64_t v87 = &v81[v85];
      uint64_t v88 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
    }
    uint64_t v89 = v39[31];
    uint64_t v90 = (unsigned char *)(a1 + v89);
    long long v91 = (char *)a2 + v89;
    int v92 = (int *)type metadata accessor for FMIPEraseMetadata();
    uint64_t v93 = *((void *)v92 - 1);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v93 + 48))(v91, 1, v92))
    {
      uint64_t v94 = sub_1D42D5DA0(&qword_1EBD7CE38);
      memcpy(v90, v91, *(void *)(*(void *)(v94 - 8) + 64));
    }
    else
    {
      *uint64_t v90 = *v91;
      uint64_t v95 = v92[5];
      long long v96 = &v90[v95];
      long long v97 = &v91[v95];
      uint64_t v98 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v98 - 8) + 16))(v96, v97, v98);
      uint64_t v99 = v92[6];
      uint64_t v100 = &v90[v99];
      long long v101 = &v91[v99];
      uint64_t v102 = v101[1];
      *uint64_t v100 = *v101;
      v100[1] = v102;
      uint64_t v103 = v92[7];
      id v104 = &v90[v103];
      unint64_t v105 = &v91[v103];
      uint64_t v106 = v105[1];
      *id v104 = *v105;
      v104[1] = v106;
      v90[v92[8]] = v91[v92[8]];
      uint64_t v107 = *(void (**)(unsigned char *, void, uint64_t, int *))(v93 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v107(v90, 0, 1, v92);
    }
    uint64_t v108 = v39[32];
    uint64_t v109 = (void *)(a1 + v108);
    unint64_t v110 = (uint64_t *)((char *)a2 + v108);
    uint64_t v111 = type metadata accessor for FMIPItemGroup();
    uint64_t v112 = *(void *)(v111 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v112 + 48))(v110, 1, v111))
    {
      uint64_t v113 = sub_1D42D5DA0(&qword_1EBD7E670);
      memcpy(v109, v110, *(void *)(*(void *)(v113 - 8) + 64));
    }
    else
    {
      uint64_t v169 = v112;
      *(_OWORD *)uint64_t v109 = *(_OWORD *)v110;
      uint64_t v114 = v110[3];
      v109[2] = v110[2];
      v109[3] = v114;
      uint64_t v115 = v110[5];
      v109[4] = v110[4];
      v109[5] = v115;
      uint64_t v166 = v110[7];
      v109[6] = v110[6];
      v109[7] = v166;
      uint64_t v116 = v110[9];
      v109[8] = v110[8];
      v109[9] = v116;
      uint64_t v117 = *(int *)(v111 + 48);
      __dst = (void *)((char *)v109 + v117);
      uint64_t v160 = (void *)((char *)v110 + v117);
      uint64_t v118 = type metadata accessor for FMIPItemLostModeMetadata();
      uint64_t v158 = *(void *)(v118 - 8);
      uint64_t v161 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v158 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v119 = v118;
      if (v161(v160, 1, v118))
      {
        uint64_t v120 = sub_1D42D5DA0(&qword_1EBD7E710);
        memcpy(__dst, v160, *(void *)(*(void *)(v120 - 8) + 64));
      }
      else
      {
        uint64_t v121 = v160[1];
        void *__dst = *v160;
        __dst[1] = v121;
        uint64_t v122 = v160[3];
        __dst[2] = v160[2];
        __dst[3] = v122;
        uint64_t v157 = v119;
        uint64_t v123 = *(int *)(v119 + 24);
        uint64_t v164 = (char *)v160 + v123;
        uint64_t v167 = (char *)__dst + v123;
        uint64_t v124 = sub_1D4469618();
        int v162 = *(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v162(v167, v164, v124);
        uint64_t v125 = *(int *)(v157 + 28);
        uint64_t v126 = (void *)((char *)__dst + v125);
        uint64_t v127 = (void *)((char *)v160 + v125);
        uint64_t v128 = v127[1];
        void *v126 = *v127;
        v126[1] = v128;
        uint64_t v129 = *(void (**)(void *, void, uint64_t, uint64_t))(v158 + 56);
        swift_bridgeObjectRetain();
        v129(__dst, 0, 1, v157);
      }
      *(void *)((char *)v109 + *(int *)(v111 + 52)) = *(void *)((char *)v110 + *(int *)(v111 + 52));
      uint64_t v130 = *(void (**)(void *, void, uint64_t, uint64_t))(v169 + 56);
      swift_bridgeObjectRetain();
      v130(v109, 0, 1, v111);
      long long v39 = a3;
    }
    uint64_t v131 = v39[34];
    *(unsigned char *)(a1 + v39[33]) = *((unsigned char *)a2 + v39[33]);
    *(unsigned char *)(a1 + v131) = *((unsigned char *)a2 + v131);
    uint64_t v132 = v39[36];
    *(unsigned char *)(a1 + v39[35]) = *((unsigned char *)a2 + v39[35]);
    os_log_t v133 = (void *)(a1 + v132);
    uint64_t v134 = (uint64_t *)((char *)a2 + v132);
    uint64_t v135 = v134[1];
    *os_log_t v133 = *v134;
    v133[1] = v135;
    uint64_t v136 = v39[38];
    *(void *)(a1 + v39[37]) = *(uint64_t *)((char *)a2 + v39[37]);
    uint64_t v137 = (void *)(a1 + v136);
    uint64_t v138 = (char *)a2 + v136;
    uint64_t v139 = sub_1D4469618();
    uint64_t v140 = *(void *)(v139 - 8);
    uint64_t v141 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48);
    swift_bridgeObjectRetain();
    if (v141(v138, 1, v139))
    {
      uint64_t v142 = sub_1D42D5DA0(&qword_1EBD7CB80);
      memcpy(v137, v138, *(void *)(*(void *)(v142 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v140 + 16))(v137, v138, v139);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v140 + 56))(v137, 0, 1, v139);
    }
    uint64_t v143 = v39[39];
    unint64_t v144 = (void *)(a1 + v143);
    uint64_t v145 = (char *)a2 + v143;
    if (v141((char *)a2 + v143, 1, v139))
    {
      uint64_t v146 = sub_1D42D5DA0(&qword_1EBD7CB80);
      memcpy(v144, v145, *(void *)(*(void *)(v146 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v140 + 16))(v144, v145, v139);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v140 + 56))(v144, 0, 1, v139);
    }
    uint64_t v147 = v39[40];
    uint64_t v148 = (void *)(a1 + v147);
    uint64_t v149 = (char *)a2 + v147;
    if (v141((char *)a2 + v147, 1, v139))
    {
      uint64_t v150 = sub_1D42D5DA0(&qword_1EBD7CB80);
      memcpy(v148, v149, *(void *)(*(void *)(v150 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v140 + 16))(v148, v149, v139);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v140 + 56))(v148, 0, 1, v139);
    }
    uint64_t v151 = v39[41];
    uint64_t v152 = (void *)(a1 + v151);
    uint64_t v153 = (char *)a2 + v151;
    if (v141((char *)a2 + v151, 1, v139))
    {
      uint64_t v154 = sub_1D42D5DA0(&qword_1EBD7CB80);
      memcpy(v152, v153, *(void *)(*(void *)(v154 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v140 + 16))(v152, v153, v139);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v140 + 56))(v152, 0, 1, v139);
    }
    uint64_t v155 = v39[43];
    *(unsigned char *)(a1 + v39[42]) = *((unsigned char *)a2 + v39[42]);
    *(unsigned char *)(a1 + v155) = *((unsigned char *)a2 + v155);
    *(unsigned char *)(a1 + v39[44]) = *((unsigned char *)a2 + v39[44]);
  }
  return a1;
}

uint64_t assignWithCopy for FMIPDevice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (unsigned char *)(a2 + 256);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(unsigned char *)(a1 + 257) = v6[1];
  *(unsigned char *)(a1 + 258) = v6[2];
  *(unsigned char *)(a1 + 259) = *(unsigned char *)(a2 + 259);
  uint64_t v7 = *(void **)(a2 + 264);
  uint64_t v8 = *(void **)(a1 + 264);
  *(void *)(a1 + 264) = v7;
  id v9 = v7;

  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = v6[24];
  *(unsigned char *)(a1 + 281) = v6[25];
  *(unsigned char *)(a1 + 282) = v6[26];
  *(unsigned char *)(a1 + 283) = *(unsigned char *)(a2 + 283);
  uint64_t v10 = *(void **)(a2 + 288);
  uint64_t v11 = *(void **)(a1 + 288);
  *(void *)(a1 + 288) = v10;
  id v12 = v10;

  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  uint64_t v13 = *(void *)(a2 + 472);
  if (*(void *)(a1 + 472))
  {
    if (v13)
    {
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      *(void *)(a1 + 448) = *(void *)(a2 + 448);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      *(void *)(a1 + 464) = *(void *)(a2 + 464);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 472) = *(void *)(a2 + 472);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 480) = *(void *)(a2 + 480);
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 496) = *(void *)(a2 + 496);
      *(void *)(a1 + 504) = *(void *)(a2 + 504);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      *(void *)(a1 + 552) = *(void *)(a2 + 552);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1D42FDA08(a1 + 304);
  }
  else if (v13)
  {
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = *(void *)(a2 + 376);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    *(void *)(a1 + 464) = *(void *)(a2 + 464);
    *(void *)(a1 + 472) = *(void *)(a2 + 472);
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(void *)(a1 + 488) = *(void *)(a2 + 488);
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    *(void *)(a1 + 520) = *(void *)(a2 + 520);
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    *(void *)(a1 + 544) = *(void *)(a2 + 544);
    *(void *)(a1 + 552) = *(void *)(a2 + 552);
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    *(void *)(a1 + 568) = *(void *)(a2 + 568);
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  memcpy((void *)(a1 + 304), (const void *)(a2 + 304), 0x120uLL);
LABEL_8:
  uint64_t v14 = a3[28];
  uint64_t v15 = (unsigned char *)(a1 + v14);
  uint64_t v16 = (unsigned char *)(a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for FMIPPlaySoundMetadata();
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      unsigned char *v15 = *v16;
      uint64_t v22 = v17[5];
      uint64_t v23 = &v15[v22];
      id v24 = &v16[v22];
      uint64_t v25 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      uint64_t v26 = v17[6];
      uint64_t v27 = &v15[v26];
      uint64_t v28 = &v16[v26];
      *uint64_t v27 = *v28;
      v27[1] = v28[1];
      uint64_t v29 = v17[7];
      uint64_t v30 = &v15[v29];
      uint64_t v31 = &v16[v29];
      void *v30 = *v31;
      v30[1] = v31[1];
      uint64_t v32 = v17[8];
      uint64_t v33 = &v15[v32];
      uint64_t v34 = &v16[v32];
      *uint64_t v33 = *v34;
      v33[1] = v34[1];
      uint64_t v35 = v17[9];
      uint64_t v36 = &v15[v35];
      uint64_t v37 = &v16[v35];
      *uint64_t v36 = *v37;
      v36[1] = v37[1];
      uint64_t v38 = *(void (**)(unsigned char *, void, uint64_t, int *))(v18 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v15, 0, 1, v17);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v21)
  {
    sub_1D42D2178((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMIPPlaySoundMetadata);
LABEL_13:
    uint64_t v39 = sub_1D42D5DA0(&qword_1EBD7CEA0);
    memcpy(v15, v16, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_14;
  }
  unsigned char *v15 = *v16;
  uint64_t v99 = v17[5];
  uint64_t v100 = &v15[v99];
  long long v101 = &v16[v99];
  uint64_t v102 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v102 - 8) + 24))(v100, v101, v102);
  uint64_t v103 = v17[6];
  id v104 = &v15[v103];
  unint64_t v105 = &v16[v103];
  *id v104 = *v105;
  v104[1] = v105[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v106 = v17[7];
  uint64_t v107 = &v15[v106];
  uint64_t v108 = &v16[v106];
  void *v107 = *v108;
  v107[1] = v108[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v109 = v17[8];
  unint64_t v110 = &v15[v109];
  uint64_t v111 = &v16[v109];
  *unint64_t v110 = *v111;
  v110[1] = v111[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v112 = v17[9];
  uint64_t v113 = &v15[v112];
  uint64_t v114 = &v16[v112];
  *uint64_t v113 = *v114;
  v113[1] = v114[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v40 = a3[29];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  int v46 = v45(v41, 1, v43);
  int v47 = v45(v42, 1, v43);
  if (v46)
  {
    if (!v47)
    {
      *(unsigned char *)uint64_t v41 = *(unsigned char *)v42;
      *(unsigned char *)(v41 + 1) = *(unsigned char *)(v42 + 1);
      *(unsigned char *)(v41 + 2) = *(unsigned char *)(v42 + 2);
      *(unsigned char *)(v41 + 3) = *(unsigned char *)(v42 + 3);
      *(void *)(v41 + 8) = *(void *)(v42 + 8);
      *(void *)(v41 + 16) = *(void *)(v42 + 16);
      *(void *)(v41 + 24) = *(void *)(v42 + 24);
      *(void *)(v41 + 32) = *(void *)(v42 + 32);
      *(void *)(v41 + 40) = *(void *)(v42 + 40);
      *(void *)(v41 + 48) = *(void *)(v42 + 48);
      *(unsigned char *)(v41 + 56) = *(unsigned char *)(v42 + 56);
      uint64_t v48 = *(int *)(v43 + 48);
      uint64_t v202 = v42 + v48;
      uint64_t v205 = v41 + v48;
      uint64_t v208 = a3;
      uint64_t v49 = sub_1D4469618();
      __dsta = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v50 = v49;
      a3 = v208;
      __dsta(v205, v202, v50);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v47)
  {
    sub_1D42D2178(v41, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
LABEL_19:
    uint64_t v51 = sub_1D42D5DA0(&qword_1EBD7D4E0);
    memcpy((void *)v41, (const void *)v42, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_20;
  }
  *(unsigned char *)uint64_t v41 = *(unsigned char *)v42;
  *(unsigned char *)(v41 + 1) = *(unsigned char *)(v42 + 1);
  *(unsigned char *)(v41 + 2) = *(unsigned char *)(v42 + 2);
  *(unsigned char *)(v41 + 3) = *(unsigned char *)(v42 + 3);
  *(void *)(v41 + 8) = *(void *)(v42 + 8);
  *(void *)(v41 + 16) = *(void *)(v42 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v41 + 24) = *(void *)(v42 + 24);
  *(void *)(v41 + 32) = *(void *)(v42 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v41 + 40) = *(void *)(v42 + 40);
  *(void *)(v41 + 48) = *(void *)(v42 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v41 + 56) = *(unsigned char *)(v42 + 56);
  uint64_t v115 = *(int *)(v43 + 48);
  uint64_t v116 = v41 + v115;
  uint64_t v117 = v42 + v115;
  uint64_t v118 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 24))(v116, v117, v118);
LABEL_20:
  uint64_t v52 = a3[30];
  uint64_t v53 = (unsigned char *)(a1 + v52);
  uint64_t v54 = (unsigned char *)(a2 + v52);
  uint64_t v55 = type metadata accessor for FMIPLockMetadata();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v57 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v56 + 48);
  int v58 = v57(v53, 1, v55);
  int v59 = v57(v54, 1, v55);
  if (v58)
  {
    if (!v59)
    {
      *uint64_t v53 = *v54;
      uint64_t v60 = *(int *)(v55 + 20);
      uint64_t v61 = &v53[v60];
      uint64_t v62 = &v54[v60];
      uint64_t v63 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v59)
  {
    sub_1D42D2178((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for FMIPLockMetadata);
LABEL_25:
    uint64_t v64 = sub_1D42D5DA0(&qword_1EBD7CDF8);
    memcpy(v53, v54, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_26;
  }
  *uint64_t v53 = *v54;
  uint64_t v119 = *(int *)(v55 + 20);
  uint64_t v120 = &v53[v119];
  uint64_t v121 = &v54[v119];
  uint64_t v122 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v122 - 8) + 24))(v120, v121, v122);
LABEL_26:
  uint64_t v65 = a3[31];
  uint64_t v66 = (unsigned char *)(a1 + v65);
  uint64_t v67 = (unsigned char *)(a2 + v65);
  uint64_t v68 = (int *)type metadata accessor for FMIPEraseMetadata();
  uint64_t v69 = *((void *)v68 - 1);
  uint64_t v70 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v69 + 48);
  int v71 = v70(v66, 1, v68);
  int v72 = v70(v67, 1, v68);
  if (v71)
  {
    if (!v72)
    {
      unsigned char *v66 = *v67;
      uint64_t v73 = v68[5];
      uint64_t v74 = &v66[v73];
      uint64_t v75 = &v67[v73];
      uint64_t v76 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
      uint64_t v77 = v68[6];
      uint64_t v78 = &v66[v77];
      uint64_t v79 = &v67[v77];
      void *v78 = *v79;
      v78[1] = v79[1];
      uint64_t v80 = v68[7];
      uint64_t v81 = &v66[v80];
      uint64_t v82 = &v67[v80];
      *uint64_t v81 = *v82;
      v81[1] = v82[1];
      v66[v68[8]] = v67[v68[8]];
      uint64_t v83 = *(void (**)(unsigned char *, void, uint64_t, int *))(v69 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v83(v66, 0, 1, v68);
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  if (v72)
  {
    sub_1D42D2178((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for FMIPEraseMetadata);
LABEL_31:
    uint64_t v84 = sub_1D42D5DA0(&qword_1EBD7CE38);
    memcpy(v66, v67, *(void *)(*(void *)(v84 - 8) + 64));
    goto LABEL_32;
  }
  unsigned char *v66 = *v67;
  uint64_t v123 = v68[5];
  uint64_t v124 = &v66[v123];
  uint64_t v125 = &v67[v123];
  uint64_t v126 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v126 - 8) + 24))(v124, v125, v126);
  uint64_t v127 = v68[6];
  uint64_t v128 = &v66[v127];
  uint64_t v129 = &v67[v127];
  *uint64_t v128 = *v129;
  v128[1] = v129[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v130 = v68[7];
  uint64_t v131 = &v66[v130];
  uint64_t v132 = &v67[v130];
  *uint64_t v131 = *v132;
  v131[1] = v132[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66[v68[8]] = v67[v68[8]];
LABEL_32:
  uint64_t v85 = a3[32];
  long long v86 = (void *)(a1 + v85);
  uint64_t v87 = (void *)(a2 + v85);
  uint64_t v88 = type metadata accessor for FMIPItemGroup();
  uint64_t v89 = *(void *)(v88 - 8);
  uint64_t v90 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v89 + 48);
  int v91 = v90(v86, 1, v88);
  int v92 = v90(v87, 1, v88);
  if (!v91)
  {
    if (v92)
    {
      sub_1D42D2178((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      goto LABEL_38;
    }
    uint64_t v209 = a3;
    *long long v86 = *v87;
    v86[1] = v87[1];
    v86[2] = v87[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v86[3] = v87[3];
    v86[4] = v87[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v86[5] = v87[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v86[6] = v87[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v86[7] = v87[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v86[8] = v87[8];
    v86[9] = v87[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v207 = v88;
    uint64_t v133 = *(int *)(v88 + 48);
    uint64_t v134 = (void *)((char *)v86 + v133);
    uint64_t v135 = (void *)((char *)v87 + v133);
    uint64_t v136 = type metadata accessor for FMIPItemLostModeMetadata();
    uint64_t v204 = *(void *)(v136 - 8);
    uint64_t v137 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v204 + 48);
    int v138 = v137(v134, 1, v136);
    int v139 = v137(v135, 1, v136);
    if (v138)
    {
      if (!v139)
      {
        void *v134 = *v135;
        v134[1] = v135[1];
        v134[2] = v135[2];
        v134[3] = v135[3];
        uint64_t v140 = *(int *)(v136 + 24);
        uint64_t v197 = (char *)v135 + v140;
        __dstb = (char *)v134 + v140;
        uint64_t v141 = sub_1D4469618();
        uint64_t v194 = *(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v194(__dstb, v197, v141);
        uint64_t v142 = *(int *)(v136 + 28);
        uint64_t v143 = (void *)((char *)v134 + v142);
        unint64_t v144 = (void *)((char *)v135 + v142);
        *uint64_t v143 = *v144;
        v143[1] = v144[1];
        uint64_t v145 = *(void (**)(void *, void, uint64_t, uint64_t))(v204 + 56);
        swift_bridgeObjectRetain();
        v145(v134, 0, 1, v136);
LABEL_51:
        *(void *)((char *)v86 + *(int *)(v207 + 52)) = *(void *)((char *)v87 + *(int *)(v207 + 52));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        a3 = v209;
        goto LABEL_52;
      }
    }
    else
    {
      if (!v139)
      {
        void *v134 = *v135;
        v134[1] = v135[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v134[2] = v135[2];
        v134[3] = v135[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v185 = *(int *)(v136 + 24);
        uint64_t v186 = (char *)v134 + v185;
        int v187 = (char *)v135 + v185;
        uint64_t v188 = sub_1D4469618();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 24))(v186, v187, v188);
        uint64_t v189 = *(int *)(v136 + 28);
        uint64_t v190 = (void *)((char *)v134 + v189);
        uint64_t v191 = (void *)((char *)v135 + v189);
        *uint64_t v190 = *v191;
        v190[1] = v191[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
      sub_1D42D2178((uint64_t)v134, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
    }
    uint64_t v153 = sub_1D42D5DA0(&qword_1EBD7E710);
    memcpy(v134, v135, *(void *)(*(void *)(v153 - 8) + 64));
    goto LABEL_51;
  }
  if (v92)
  {
LABEL_38:
    uint64_t v98 = sub_1D42D5DA0(&qword_1EBD7E670);
    memcpy(v86, v87, *(void *)(*(void *)(v98 - 8) + 64));
    goto LABEL_52;
  }
  uint64_t v203 = v89;
  *long long v86 = *v87;
  v86[1] = v87[1];
  v86[2] = v87[2];
  v86[3] = v87[3];
  v86[4] = v87[4];
  v86[5] = v87[5];
  v86[6] = v87[6];
  v86[7] = v87[7];
  v86[8] = v87[8];
  v86[9] = v87[9];
  uint64_t v206 = v88;
  uint64_t v93 = *(int *)(v88 + 48);
  __dst = (void *)((char *)v86 + v93);
  uint64_t v94 = (void *)((char *)v87 + v93);
  uint64_t v95 = type metadata accessor for FMIPItemLostModeMetadata();
  uint64_t v192 = *(void *)(v95 - 8);
  uint64_t v193 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v192 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v96 = v95;
  if (v193(v94, 1, v95))
  {
    uint64_t v97 = sub_1D42D5DA0(&qword_1EBD7E710);
    memcpy(__dst, v94, *(void *)(*(void *)(v97 - 8) + 64));
  }
  else
  {
    void *__dst = *v94;
    __dst[1] = v94[1];
    __dst[2] = v94[2];
    __dst[3] = v94[3];
    uint64_t v146 = *(int *)(v95 + 24);
    int v196 = (char *)v94 + v146;
    uint64_t v198 = (char *)__dst + v146;
    uint64_t v147 = sub_1D4469618();
    uint64_t v195 = *(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v195(v198, v196, v147);
    uint64_t v148 = *(int *)(v96 + 28);
    uint64_t v149 = (void *)((char *)__dst + v148);
    uint64_t v150 = (void *)((char *)v94 + v148);
    void *v149 = *v150;
    v149[1] = v150[1];
    uint64_t v151 = *(void (**)(void *, void, uint64_t, uint64_t))(v192 + 56);
    swift_bridgeObjectRetain();
    v151(__dst, 0, 1, v96);
  }
  *(void *)((char *)v86 + *(int *)(v206 + 52)) = *(void *)((char *)v87 + *(int *)(v206 + 52));
  uint64_t v152 = *(void (**)(void *, void, uint64_t, uint64_t))(v203 + 56);
  swift_bridgeObjectRetain();
  v152(v86, 0, 1, v206);
LABEL_52:
  *(unsigned char *)(a1 + a3[33]) = *(unsigned char *)(a2 + a3[33]);
  *(unsigned char *)(a1 + a3[34]) = *(unsigned char *)(a2 + a3[34]);
  *(unsigned char *)(a1 + a3[35]) = *(unsigned char *)(a2 + a3[35]);
  uint64_t v154 = a3[36];
  uint64_t v155 = (void *)(a1 + v154);
  uint64_t v156 = (void *)(a2 + v154);
  *uint64_t v155 = *v156;
  v155[1] = v156[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[37]) = *(void *)(a2 + a3[37]);
  uint64_t v157 = a3[38];
  uint64_t v158 = (void *)(a1 + v157);
  long long v159 = (void *)(a2 + v157);
  uint64_t v160 = sub_1D4469618();
  uint64_t v161 = *(void *)(v160 - 8);
  int v162 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v161 + 48);
  int v163 = v162(v158, 1, v160);
  int v164 = v162(v159, 1, v160);
  if (v163)
  {
    if (!v164)
    {
      (*(void (**)(void *, void *, uint64_t))(v161 + 16))(v158, v159, v160);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v161 + 56))(v158, 0, 1, v160);
      goto LABEL_58;
    }
    goto LABEL_57;
  }
  if (v164)
  {
    (*(void (**)(void *, uint64_t))(v161 + 8))(v158, v160);
LABEL_57:
    uint64_t v165 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v158, v159, *(void *)(*(void *)(v165 - 8) + 64));
    goto LABEL_58;
  }
  (*(void (**)(void *, void *, uint64_t))(v161 + 24))(v158, v159, v160);
LABEL_58:
  uint64_t v166 = a3[39];
  uint64_t v167 = (void *)(a1 + v166);
  uint64_t v168 = (void *)(a2 + v166);
  int v169 = v162((void *)(a1 + v166), 1, v160);
  int v170 = v162(v168, 1, v160);
  if (v169)
  {
    if (!v170)
    {
      (*(void (**)(void *, void *, uint64_t))(v161 + 16))(v167, v168, v160);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v161 + 56))(v167, 0, 1, v160);
      goto LABEL_64;
    }
    goto LABEL_63;
  }
  if (v170)
  {
    (*(void (**)(void *, uint64_t))(v161 + 8))(v167, v160);
LABEL_63:
    uint64_t v171 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v167, v168, *(void *)(*(void *)(v171 - 8) + 64));
    goto LABEL_64;
  }
  (*(void (**)(void *, void *, uint64_t))(v161 + 24))(v167, v168, v160);
LABEL_64:
  uint64_t v172 = a3[40];
  int v173 = (void *)(a1 + v172);
  uint64_t v174 = (void *)(a2 + v172);
  int v175 = v162((void *)(a1 + v172), 1, v160);
  int v176 = v162(v174, 1, v160);
  if (v175)
  {
    if (!v176)
    {
      (*(void (**)(void *, void *, uint64_t))(v161 + 16))(v173, v174, v160);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v161 + 56))(v173, 0, 1, v160);
      goto LABEL_70;
    }
    goto LABEL_69;
  }
  if (v176)
  {
    (*(void (**)(void *, uint64_t))(v161 + 8))(v173, v160);
LABEL_69:
    uint64_t v177 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v173, v174, *(void *)(*(void *)(v177 - 8) + 64));
    goto LABEL_70;
  }
  (*(void (**)(void *, void *, uint64_t))(v161 + 24))(v173, v174, v160);
LABEL_70:
  uint64_t v178 = a3[41];
  uint64_t v179 = (void *)(a1 + v178);
  uint64_t v180 = (void *)(a2 + v178);
  int v181 = v162((void *)(a1 + v178), 1, v160);
  int v182 = v162(v180, 1, v160);
  if (!v181)
  {
    if (!v182)
    {
      (*(void (**)(void *, void *, uint64_t))(v161 + 24))(v179, v180, v160);
      goto LABEL_76;
    }
    (*(void (**)(void *, uint64_t))(v161 + 8))(v179, v160);
    goto LABEL_75;
  }
  if (v182)
  {
LABEL_75:
    uint64_t v183 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v179, v180, *(void *)(*(void *)(v183 - 8) + 64));
    goto LABEL_76;
  }
  (*(void (**)(void *, void *, uint64_t))(v161 + 16))(v179, v180, v160);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v161 + 56))(v179, 0, 1, v160);
LABEL_76:
  *(unsigned char *)(a1 + a3[42]) = *(unsigned char *)(a2 + a3[42]);
  *(unsigned char *)(a1 + a3[43]) = *(unsigned char *)(a2 + a3[43]);
  *(unsigned char *)(a1 + a3[44]) = *(unsigned char *)(a2 + a3[44]);
  return a1;
}

uint64_t initializeWithTake for FMIPDevice(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  long long v8 = *(_OWORD *)(a2 + 256);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = v8;
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  memcpy((void *)(a1 + 304), (const void *)(a2 + 304), 0x120uLL);
  uint64_t v9 = a3[28];
  uint64_t v10 = (unsigned char *)(a1 + v9);
  uint64_t v11 = (unsigned char *)(a2 + v9);
  id v12 = (int *)type metadata accessor for FMIPPlaySoundMetadata();
  uint64_t v13 = *((void *)v12 - 1);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_1D42D5DA0(&qword_1EBD7CEA0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    *uint64_t v10 = *v11;
    uint64_t v15 = v12[5];
    uint64_t v16 = &v10[v15];
    uint64_t v17 = &v11[v15];
    uint64_t v18 = sub_1D4469618();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    *(_OWORD *)&v10[v12[6]] = *(_OWORD *)&v11[v12[6]];
    *(_OWORD *)&v10[v12[7]] = *(_OWORD *)&v11[v12[7]];
    *(_OWORD *)&v10[v12[8]] = *(_OWORD *)&v11[v12[8]];
    *(_OWORD *)&v10[v12[9]] = *(_OWORD *)&v11[v12[9]];
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v19 = a3[29];
  int v20 = (_DWORD *)(a1 + v19);
  int v21 = (_DWORD *)(a2 + v19);
  uint64_t v22 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = sub_1D42D5DA0(&qword_1EBD7D4E0);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    *int v20 = *v21;
    *(_OWORD *)(v20 + 2) = *(_OWORD *)(v21 + 2);
    *(_OWORD *)(v20 + 6) = *(_OWORD *)(v21 + 6);
    *(_OWORD *)(v20 + 10) = *(_OWORD *)(v21 + 10);
    *((unsigned char *)v20 + 56) = *((unsigned char *)v21 + 56);
    uint64_t v25 = *(int *)(v22 + 48);
    uint64_t v26 = (char *)v20 + v25;
    uint64_t v27 = (char *)v21 + v25;
    uint64_t v28 = sub_1D4469618();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v29 = a3[30];
  uint64_t v30 = (unsigned char *)(a1 + v29);
  uint64_t v31 = (unsigned char *)(a2 + v29);
  uint64_t v32 = type metadata accessor for FMIPLockMetadata();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    uint64_t v34 = sub_1D42D5DA0(&qword_1EBD7CDF8);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    unsigned char *v30 = *v31;
    uint64_t v35 = *(int *)(v32 + 20);
    uint64_t v36 = &v30[v35];
    uint64_t v37 = &v31[v35];
    uint64_t v38 = sub_1D4469618();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  uint64_t v39 = a3[31];
  uint64_t v40 = (unsigned char *)(a1 + v39);
  uint64_t v41 = (unsigned char *)(a2 + v39);
  uint64_t v42 = (int *)type metadata accessor for FMIPEraseMetadata();
  uint64_t v43 = *((void *)v42 - 1);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v43 + 48))(v41, 1, v42))
  {
    uint64_t v44 = sub_1D42D5DA0(&qword_1EBD7CE38);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    *uint64_t v40 = *v41;
    uint64_t v45 = v42[5];
    int v46 = &v40[v45];
    int v47 = &v41[v45];
    uint64_t v48 = sub_1D4469618();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
    *(_OWORD *)&v40[v42[6]] = *(_OWORD *)&v41[v42[6]];
    *(_OWORD *)&v40[v42[7]] = *(_OWORD *)&v41[v42[7]];
    v40[v42[8]] = v41[v42[8]];
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v43 + 56))(v40, 0, 1, v42);
  }
  uint64_t v49 = a3[32];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (void *)(a2 + v49);
  uint64_t v52 = type metadata accessor for FMIPItemGroup();
  uint64_t v53 = *(void *)(v52 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
  {
    uint64_t v54 = sub_1D42D5DA0(&qword_1EBD7E670);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    *uint64_t v50 = *v51;
    *(_OWORD *)(v50 + 1) = *(_OWORD *)(v51 + 1);
    *(_OWORD *)(v50 + 3) = *(_OWORD *)(v51 + 3);
    *(_OWORD *)(v50 + 5) = *(_OWORD *)(v51 + 5);
    *(_OWORD *)(v50 + 7) = *(_OWORD *)(v51 + 7);
    v50[9] = v51[9];
    uint64_t v55 = *(int *)(v52 + 48);
    __dst = (_OWORD *)((char *)v50 + v55);
    uint64_t v56 = (_OWORD *)((char *)v51 + v55);
    uint64_t v57 = type metadata accessor for FMIPItemLostModeMetadata();
    uint64_t v58 = *(void *)(v57 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      uint64_t v59 = sub_1D42D5DA0(&qword_1EBD7E710);
      memcpy(__dst, v56, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      long long v60 = v56[1];
      _OWORD *__dst = *v56;
      __dst[1] = v60;
      uint64_t v61 = *(int *)(v57 + 24);
      long long v86 = (char *)v56 + v61;
      uint64_t v87 = (char *)__dst + v61;
      uint64_t v62 = sub_1D4469618();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v87, v86, v62);
      *(_OWORD *)((char *)__dst + *(int *)(v57 + 28)) = *(_OWORD *)((char *)v56 + *(int *)(v57 + 28));
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v58 + 56))(__dst, 0, 1, v57);
    }
    *(void *)((char *)v50 + *(int *)(v52 + 52)) = *(void *)((char *)v51 + *(int *)(v52 + 52));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  uint64_t v63 = a3[34];
  *(unsigned char *)(a1 + a3[33]) = *(unsigned char *)(a2 + a3[33]);
  *(unsigned char *)(a1 + v63) = *(unsigned char *)(a2 + v63);
  uint64_t v64 = a3[36];
  *(unsigned char *)(a1 + a3[35]) = *(unsigned char *)(a2 + a3[35]);
  *(_OWORD *)(a1 + v64) = *(_OWORD *)(a2 + v64);
  uint64_t v65 = a3[38];
  *(void *)(a1 + a3[37]) = *(void *)(a2 + a3[37]);
  uint64_t v66 = (void *)(a1 + v65);
  uint64_t v67 = (const void *)(a2 + v65);
  uint64_t v68 = sub_1D4469618();
  uint64_t v69 = *(void *)(v68 - 8);
  uint64_t v70 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v69 + 48);
  if (v70(v67, 1, v68))
  {
    uint64_t v71 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v66, v67, *(void *)(*(void *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v69 + 32))(v66, v67, v68);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
  }
  uint64_t v72 = a3[39];
  uint64_t v73 = (void *)(a1 + v72);
  uint64_t v74 = (const void *)(a2 + v72);
  if (v70((const void *)(a2 + v72), 1, v68))
  {
    uint64_t v75 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v69 + 32))(v73, v74, v68);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v73, 0, 1, v68);
  }
  uint64_t v76 = a3[40];
  uint64_t v77 = (void *)(a1 + v76);
  uint64_t v78 = (const void *)(a2 + v76);
  if (v70((const void *)(a2 + v76), 1, v68))
  {
    uint64_t v79 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v69 + 32))(v77, v78, v68);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v77, 0, 1, v68);
  }
  uint64_t v80 = a3[41];
  uint64_t v81 = (void *)(a1 + v80);
  uint64_t v82 = (const void *)(a2 + v80);
  if (v70((const void *)(a2 + v80), 1, v68))
  {
    uint64_t v83 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v69 + 32))(v81, v82, v68);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v81, 0, 1, v68);
  }
  uint64_t v84 = a3[43];
  *(unsigned char *)(a1 + a3[42]) = *(unsigned char *)(a2 + a3[42]);
  *(unsigned char *)(a1 + v84) = *(unsigned char *)(a2 + v84);
  *(unsigned char *)(a1 + a3[44]) = *(unsigned char *)(a2 + a3[44]);
  return a1;
}

uint64_t assignWithTake for FMIPDevice(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = (unsigned char *)(a2 + 256);
  uint64_t v7 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v17;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  uint64_t v18 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v18;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(unsigned char *)(a1 + 257) = v6[1];
  *(unsigned char *)(a1 + 258) = v6[2];
  *(unsigned char *)(a1 + 259) = *(unsigned char *)(a2 + 259);
  int v20 = *(void **)(a1 + 264);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);

  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = v6[24];
  *(unsigned char *)(a1 + 281) = v6[25];
  *(unsigned char *)(a1 + 282) = v6[26];
  *(unsigned char *)(a1 + 283) = *(unsigned char *)(a2 + 283);
  int v21 = *(void **)(a1 + 288);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);

  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  if (*(void *)(a1 + 472))
  {
    if (*(void *)(a2 + 472))
    {
      uint64_t v22 = *(void *)(a2 + 312);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = v22;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)(a2 + 336);
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(a2 + 352);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = v24;
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void *)(a2 + 368);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = v25;
      swift_bridgeObjectRelease();
      uint64_t v26 = *(void *)(a2 + 384);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      *(void *)(a1 + 384) = v26;
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void *)(a2 + 400);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(void *)(a1 + 400) = v27;
      swift_bridgeObjectRelease();
      uint64_t v28 = *(void *)(a2 + 416);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(void *)(a1 + 416) = v28;
      swift_bridgeObjectRelease();
      uint64_t v29 = *(void *)(a2 + 432);
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(void *)(a1 + 432) = v29;
      swift_bridgeObjectRelease();
      uint64_t v30 = *(void *)(a2 + 448);
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      *(void *)(a1 + 448) = v30;
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)(a2 + 464);
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      *(void *)(a1 + 464) = v31;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 472) = *(void *)(a2 + 472);
      swift_bridgeObjectRelease();
      uint64_t v32 = *(void *)(a2 + 488);
      *(void *)(a1 + 480) = *(void *)(a2 + 480);
      *(void *)(a1 + 488) = v32;
      swift_bridgeObjectRelease();
      uint64_t v33 = *(void *)(a2 + 504);
      *(void *)(a1 + 496) = *(void *)(a2 + 496);
      *(void *)(a1 + 504) = v33;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      *(void *)(a1 + 552) = *(void *)(a2 + 552);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D42FDA08(a1 + 304);
  }
  memcpy((void *)(a1 + 304), (const void *)(a2 + 304), 0x120uLL);
LABEL_6:
  uint64_t v34 = a3[28];
  uint64_t v35 = (unsigned char *)(a1 + v34);
  uint64_t v36 = (unsigned char *)(a2 + v34);
  uint64_t v37 = (int *)type metadata accessor for FMIPPlaySoundMetadata();
  uint64_t v38 = *((void *)v37 - 1);
  uint64_t v39 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v38 + 48);
  int v40 = v39(v35, 1, v37);
  int v41 = v39(v36, 1, v37);
  if (v40)
  {
    if (!v41)
    {
      *uint64_t v35 = *v36;
      uint64_t v42 = v37[5];
      uint64_t v43 = &v35[v42];
      uint64_t v44 = &v36[v42];
      uint64_t v45 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
      *(_OWORD *)&v35[v37[6]] = *(_OWORD *)&v36[v37[6]];
      *(_OWORD *)&v35[v37[7]] = *(_OWORD *)&v36[v37[7]];
      *(_OWORD *)&v35[v37[8]] = *(_OWORD *)&v36[v37[8]];
      *(_OWORD *)&v35[v37[9]] = *(_OWORD *)&v36[v37[9]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v41)
  {
    sub_1D42D2178((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for FMIPPlaySoundMetadata);
LABEL_11:
    uint64_t v46 = sub_1D42D5DA0(&qword_1EBD7CEA0);
    memcpy(v35, v36, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_12;
  }
  *uint64_t v35 = *v36;
  uint64_t v100 = v37[5];
  long long v101 = &v35[v100];
  uint64_t v102 = &v36[v100];
  uint64_t v103 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v103 - 8) + 40))(v101, v102, v103);
  uint64_t v104 = v37[6];
  unint64_t v105 = &v35[v104];
  uint64_t v106 = (uint64_t *)&v36[v104];
  uint64_t v108 = *v106;
  uint64_t v107 = v106[1];
  void *v105 = v108;
  v105[1] = v107;
  swift_bridgeObjectRelease();
  uint64_t v109 = v37[7];
  unint64_t v110 = &v35[v109];
  uint64_t v111 = (uint64_t *)&v36[v109];
  uint64_t v113 = *v111;
  uint64_t v112 = v111[1];
  *unint64_t v110 = v113;
  v110[1] = v112;
  swift_bridgeObjectRelease();
  uint64_t v114 = v37[8];
  uint64_t v115 = &v35[v114];
  uint64_t v116 = (uint64_t *)&v36[v114];
  uint64_t v118 = *v116;
  uint64_t v117 = v116[1];
  *uint64_t v115 = v118;
  v115[1] = v117;
  swift_bridgeObjectRelease();
  uint64_t v119 = v37[9];
  uint64_t v120 = &v35[v119];
  uint64_t v121 = (uint64_t *)&v36[v119];
  uint64_t v123 = *v121;
  uint64_t v122 = v121[1];
  *uint64_t v120 = v123;
  v120[1] = v122;
  swift_bridgeObjectRelease();
LABEL_12:
  uint64_t v47 = a3[29];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  int v53 = v52(v48, 1, v50);
  int v54 = v52(v49, 1, v50);
  if (v53)
  {
    if (!v54)
    {
      *(_DWORD *)uint64_t v48 = *(_DWORD *)v49;
      *(_OWORD *)(v48 + 8) = *(_OWORD *)(v49 + 8);
      *(_OWORD *)(v48 + 24) = *(_OWORD *)(v49 + 24);
      *(_OWORD *)(v48 + 40) = *(_OWORD *)(v49 + 40);
      *(unsigned char *)(v48 + 56) = *(unsigned char *)(v49 + 56);
      uint64_t v55 = *(int *)(v50 + 48);
      uint64_t v56 = v48 + v55;
      uint64_t v57 = v49 + v55;
      uint64_t v58 = sub_1D4469618();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v54)
  {
    sub_1D42D2178(v48, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
LABEL_17:
    uint64_t v59 = sub_1D42D5DA0(&qword_1EBD7D4E0);
    memcpy((void *)v48, (const void *)v49, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_18;
  }
  *(unsigned char *)uint64_t v48 = *(unsigned char *)v49;
  *(unsigned char *)(v48 + 1) = *(unsigned char *)(v49 + 1);
  *(unsigned char *)(v48 + 2) = *(unsigned char *)(v49 + 2);
  *(unsigned char *)(v48 + 3) = *(unsigned char *)(v49 + 3);
  uint64_t v124 = *(void *)(v49 + 16);
  *(void *)(v48 + 8) = *(void *)(v49 + 8);
  *(void *)(v48 + 16) = v124;
  swift_bridgeObjectRelease();
  uint64_t v125 = *(void *)(v49 + 32);
  *(void *)(v48 + 24) = *(void *)(v49 + 24);
  *(void *)(v48 + 32) = v125;
  swift_bridgeObjectRelease();
  uint64_t v126 = *(void *)(v49 + 48);
  *(void *)(v48 + 40) = *(void *)(v49 + 40);
  *(void *)(v48 + 48) = v126;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v48 + 56) = *(unsigned char *)(v49 + 56);
  uint64_t v127 = *(int *)(v50 + 48);
  uint64_t v128 = v48 + v127;
  uint64_t v129 = v49 + v127;
  uint64_t v130 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 40))(v128, v129, v130);
LABEL_18:
  uint64_t v60 = a3[30];
  uint64_t v61 = (unsigned char *)(a1 + v60);
  uint64_t v62 = (unsigned char *)(a2 + v60);
  uint64_t v63 = type metadata accessor for FMIPLockMetadata();
  uint64_t v64 = *(void *)(v63 - 8);
  uint64_t v65 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v64 + 48);
  int v66 = v65(v61, 1, v63);
  int v67 = v65(v62, 1, v63);
  if (v66)
  {
    if (!v67)
    {
      *uint64_t v61 = *v62;
      uint64_t v68 = *(int *)(v63 + 20);
      uint64_t v69 = &v61[v68];
      uint64_t v70 = &v62[v68];
      uint64_t v71 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v67)
  {
    sub_1D42D2178((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for FMIPLockMetadata);
LABEL_23:
    uint64_t v72 = sub_1D42D5DA0(&qword_1EBD7CDF8);
    memcpy(v61, v62, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_24;
  }
  *uint64_t v61 = *v62;
  uint64_t v131 = *(int *)(v63 + 20);
  uint64_t v132 = &v61[v131];
  uint64_t v133 = &v62[v131];
  uint64_t v134 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v134 - 8) + 40))(v132, v133, v134);
LABEL_24:
  uint64_t v73 = a3[31];
  uint64_t v74 = (unsigned char *)(a1 + v73);
  uint64_t v75 = (unsigned char *)(a2 + v73);
  uint64_t v76 = (int *)type metadata accessor for FMIPEraseMetadata();
  uint64_t v77 = *((void *)v76 - 1);
  uint64_t v78 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v77 + 48);
  int v79 = v78(v74, 1, v76);
  int v80 = v78(v75, 1, v76);
  if (v79)
  {
    if (!v80)
    {
      *uint64_t v74 = *v75;
      uint64_t v81 = v76[5];
      uint64_t v82 = &v74[v81];
      uint64_t v83 = &v75[v81];
      uint64_t v84 = sub_1D4469618();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
      *(_OWORD *)&v74[v76[6]] = *(_OWORD *)&v75[v76[6]];
      *(_OWORD *)&v74[v76[7]] = *(_OWORD *)&v75[v76[7]];
      v74[v76[8]] = v75[v76[8]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v77 + 56))(v74, 0, 1, v76);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v80)
  {
    sub_1D42D2178((uint64_t)v74, (uint64_t (*)(void))type metadata accessor for FMIPEraseMetadata);
LABEL_29:
    uint64_t v85 = sub_1D42D5DA0(&qword_1EBD7CE38);
    memcpy(v74, v75, *(void *)(*(void *)(v85 - 8) + 64));
    goto LABEL_30;
  }
  *uint64_t v74 = *v75;
  uint64_t v135 = v76[5];
  uint64_t v136 = &v74[v135];
  uint64_t v137 = &v75[v135];
  uint64_t v138 = sub_1D4469618();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v138 - 8) + 40))(v136, v137, v138);
  uint64_t v139 = v76[6];
  uint64_t v140 = &v74[v139];
  uint64_t v141 = (uint64_t *)&v75[v139];
  uint64_t v143 = *v141;
  uint64_t v142 = v141[1];
  *uint64_t v140 = v143;
  v140[1] = v142;
  swift_bridgeObjectRelease();
  uint64_t v144 = v76[7];
  uint64_t v145 = &v74[v144];
  uint64_t v146 = (uint64_t *)&v75[v144];
  uint64_t v148 = *v146;
  uint64_t v147 = v146[1];
  *uint64_t v145 = v148;
  v145[1] = v147;
  swift_bridgeObjectRelease();
  v74[v76[8]] = v75[v76[8]];
LABEL_30:
  uint64_t v86 = a3[32];
  uint64_t v87 = a1 + v86;
  uint64_t v88 = a2 + v86;
  uint64_t v89 = type metadata accessor for FMIPItemGroup();
  uint64_t v90 = *(void *)(v89 - 8);
  int v91 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
  int v92 = v91(v87, 1, v89);
  int v93 = v91(v88, 1, v89);
  if (!v92)
  {
    if (v93)
    {
      sub_1D42D2178(v87, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
      goto LABEL_36;
    }
    *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
    *(void *)(v87 + 16) = *(void *)(v88 + 16);
    swift_bridgeObjectRelease();
    uint64_t v149 = *(void *)(v88 + 32);
    *(void *)(v87 + 24) = *(void *)(v88 + 24);
    *(void *)(v87 + 32) = v149;
    swift_bridgeObjectRelease();
    *(void *)(v87 + 40) = *(void *)(v88 + 40);
    swift_bridgeObjectRelease();
    *(void *)(v87 + 48) = *(void *)(v88 + 48);
    swift_bridgeObjectRelease();
    *(void *)(v87 + 56) = *(void *)(v88 + 56);
    swift_bridgeObjectRelease();
    uint64_t v150 = *(void *)(v88 + 72);
    *(void *)(v87 + 64) = *(void *)(v88 + 64);
    *(void *)(v87 + 72) = v150;
    swift_bridgeObjectRelease();
    uint64_t v151 = *(int *)(v89 + 48);
    uint64_t v152 = v87 + v151;
    __dsta = (_OWORD *)(v88 + v151);
    uint64_t v153 = type metadata accessor for FMIPItemLostModeMetadata();
    uint64_t v212 = *(void *)(v153 - 8);
    uint64_t v215 = v152;
    uint64_t v154 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v212 + 48);
    LODWORD(v152) = v154(v152, 1, v153);
    int v155 = v154((uint64_t)__dsta, 1, v153);
    if (v152)
    {
      if (!v155)
      {
        long long v161 = __dsta[1];
        *(_OWORD *)uint64_t v215 = *__dsta;
        *(_OWORD *)(v215 + 16) = v161;
        uint64_t v162 = *(int *)(v153 + 24);
        uint64_t v163 = v215 + v162;
        uint64_t v211 = (char *)__dsta + v162;
        uint64_t v164 = sub_1D4469618();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v164 - 8) + 32))(v163, v211, v164);
        *(_OWORD *)(v215 + *(int *)(v153 + 28)) = *(_OWORD *)((char *)__dsta + *(int *)(v153 + 28));
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v212 + 56))(v215, 0, 1, v153);
        goto LABEL_51;
      }
      size_t v156 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E710) - 8) + 64);
      uint64_t v157 = (void *)v215;
    }
    else
    {
      if (!v155)
      {
        uint64_t v165 = *((void *)__dsta + 1);
        *(void *)uint64_t v215 = *(void *)__dsta;
        *(void *)(v215 + 8) = v165;
        swift_bridgeObjectRelease();
        uint64_t v166 = *((void *)__dsta + 3);
        *(void *)(v215 + 16) = *((void *)__dsta + 2);
        *(void *)(v215 + 24) = v166;
        swift_bridgeObjectRelease();
        uint64_t v167 = *(int *)(v153 + 24);
        uint64_t v168 = v215 + v167;
        uint64_t v214 = (char *)__dsta + v167;
        uint64_t v169 = sub_1D4469618();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v169 - 8) + 40))(v168, v214, v169);
        uint64_t v170 = *(int *)(v153 + 28);
        uint64_t v171 = (void *)(v215 + v170);
        uint64_t v172 = (uint64_t *)((char *)__dsta + v170);
        uint64_t v174 = *v172;
        uint64_t v173 = v172[1];
        void *v171 = v174;
        v171[1] = v173;
        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
      sub_1D42D2178(v215, (uint64_t (*)(void))type metadata accessor for FMIPItemLostModeMetadata);
      size_t v156 = *(void *)(*(void *)(sub_1D42D5DA0(&qword_1EBD7E710) - 8) + 64);
      uint64_t v157 = (void *)v215;
    }
    memcpy(v157, __dsta, v156);
LABEL_51:
    *(void *)(v87 + *(int *)(v89 + 52)) = *(void *)(v88 + *(int *)(v89 + 52));
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
  if (v93)
  {
LABEL_36:
    uint64_t v99 = sub_1D42D5DA0(&qword_1EBD7E670);
    memcpy((void *)v87, (const void *)v88, *(void *)(*(void *)(v99 - 8) + 64));
    goto LABEL_52;
  }
  *(void *)uint64_t v87 = *(void *)v88;
  *(_OWORD *)(v87 + 8) = *(_OWORD *)(v88 + 8);
  *(_OWORD *)(v87 + 24) = *(_OWORD *)(v88 + 24);
  *(_OWORD *)(v87 + 40) = *(_OWORD *)(v88 + 40);
  *(_OWORD *)(v87 + 56) = *(_OWORD *)(v88 + 56);
  *(void *)(v87 + 72) = *(void *)(v88 + 72);
  uint64_t v94 = *(int *)(v89 + 48);
  __dst = (_OWORD *)(v87 + v94);
  uint64_t v95 = (_OWORD *)(v88 + v94);
  uint64_t v96 = type metadata accessor for FMIPItemLostModeMetadata();
  uint64_t v97 = *(void *)(v96 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96))
  {
    uint64_t v98 = sub_1D42D5DA0(&qword_1EBD7E710);
    memcpy(__dst, v95, *(void *)(*(void *)(v98 - 8) + 64));
  }
  else
  {
    long long v158 = v95[1];
    _OWORD *__dst = *v95;
    __dst[1] = v158;
    uint64_t v159 = *(int *)(v96 + 24);
    uint64_t v210 = (char *)v95 + v159;
    int v213 = (char *)__dst + v159;
    uint64_t v160 = sub_1D4469618();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 32))(v213, v210, v160);
    *(_OWORD *)((char *)__dst + *(int *)(v96 + 28)) = *(_OWORD *)((char *)v95 + *(int *)(v96 + 28));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v97 + 56))(__dst, 0, 1, v96);
  }
  *(void *)(v87 + *(int *)(v89 + 52)) = *(void *)(v88 + *(int *)(v89 + 52));
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
LABEL_52:
  uint64_t v175 = a3[34];
  *(unsigned char *)(a1 + a3[33]) = *(unsigned char *)(a2 + a3[33]);
  *(unsigned char *)(a1 + v175) = *(unsigned char *)(a2 + v175);
  uint64_t v176 = a3[36];
  *(unsigned char *)(a1 + a3[35]) = *(unsigned char *)(a2 + a3[35]);
  uint64_t v177 = (void *)(a1 + v176);
  uint64_t v178 = (uint64_t *)(a2 + v176);
  uint64_t v180 = *v178;
  uint64_t v179 = v178[1];
  void *v177 = v180;
  v177[1] = v179;
  swift_bridgeObjectRelease();
  uint64_t v181 = a3[38];
  *(void *)(a1 + a3[37]) = *(void *)(a2 + a3[37]);
  int v182 = (void *)(a1 + v181);
  uint64_t v183 = (void *)(a2 + v181);
  uint64_t v184 = sub_1D4469618();
  uint64_t v185 = *(void *)(v184 - 8);
  uint64_t v186 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v185 + 48);
  int v187 = v186(v182, 1, v184);
  int v188 = v186(v183, 1, v184);
  if (v187)
  {
    if (!v188)
    {
      (*(void (**)(void *, void *, uint64_t))(v185 + 32))(v182, v183, v184);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v185 + 56))(v182, 0, 1, v184);
      goto LABEL_58;
    }
    goto LABEL_57;
  }
  if (v188)
  {
    (*(void (**)(void *, uint64_t))(v185 + 8))(v182, v184);
LABEL_57:
    uint64_t v189 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v182, v183, *(void *)(*(void *)(v189 - 8) + 64));
    goto LABEL_58;
  }
  (*(void (**)(void *, void *, uint64_t))(v185 + 40))(v182, v183, v184);
LABEL_58:
  uint64_t v190 = a3[39];
  uint64_t v191 = (void *)(a1 + v190);
  uint64_t v192 = (void *)(a2 + v190);
  int v193 = v186((void *)(a1 + v190), 1, v184);
  int v194 = v186(v192, 1, v184);
  if (v193)
  {
    if (!v194)
    {
      (*(void (**)(void *, void *, uint64_t))(v185 + 32))(v191, v192, v184);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v185 + 56))(v191, 0, 1, v184);
      goto LABEL_64;
    }
    goto LABEL_63;
  }
  if (v194)
  {
    (*(void (**)(void *, uint64_t))(v185 + 8))(v191, v184);
LABEL_63:
    uint64_t v195 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v191, v192, *(void *)(*(void *)(v195 - 8) + 64));
    goto LABEL_64;
  }
  (*(void (**)(void *, void *, uint64_t))(v185 + 40))(v191, v192, v184);
LABEL_64:
  uint64_t v196 = a3[40];
  uint64_t v197 = (void *)(a1 + v196);
  uint64_t v198 = (void *)(a2 + v196);
  int v199 = v186((void *)(a1 + v196), 1, v184);
  int v200 = v186(v198, 1, v184);
  if (v199)
  {
    if (!v200)
    {
      (*(void (**)(void *, void *, uint64_t))(v185 + 32))(v197, v198, v184);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v185 + 56))(v197, 0, 1, v184);
      goto LABEL_70;
    }
    goto LABEL_69;
  }
  if (v200)
  {
    (*(void (**)(void *, uint64_t))(v185 + 8))(v197, v184);
LABEL_69:
    uint64_t v201 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v197, v198, *(void *)(*(void *)(v201 - 8) + 64));
    goto LABEL_70;
  }
  (*(void (**)(void *, void *, uint64_t))(v185 + 40))(v197, v198, v184);
LABEL_70:
  uint64_t v202 = a3[41];
  uint64_t v203 = (void *)(a1 + v202);
  uint64_t v204 = (void *)(a2 + v202);
  int v205 = v186((void *)(a1 + v202), 1, v184);
  int v206 = v186(v204, 1, v184);
  if (!v205)
  {
    if (!v206)
    {
      (*(void (**)(void *, void *, uint64_t))(v185 + 40))(v203, v204, v184);
      goto LABEL_76;
    }
    (*(void (**)(void *, uint64_t))(v185 + 8))(v203, v184);
    goto LABEL_75;
  }
  if (v206)
  {
LABEL_75:
    uint64_t v207 = sub_1D42D5DA0(&qword_1EBD7CB80);
    memcpy(v203, v204, *(void *)(*(void *)(v207 - 8) + 64));
    goto LABEL_76;
  }
  (*(void (**)(void *, void *, uint64_t))(v185 + 32))(v203, v204, v184);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v185 + 56))(v203, 0, 1, v184);
LABEL_76:
  uint64_t v208 = a3[43];
  *(unsigned char *)(a1 + a3[42]) = *(unsigned char *)(a2 + a3[42]);
  *(unsigned char *)(a1 + v208) = *(unsigned char *)(a2 + v208);
  *(unsigned char *)(a1 + a3[44]) = *(unsigned char *)(a2 + a3[44]);
  return a1;
}

uint64_t sub_1D4421E6C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1D42D5DA0(&qword_1EBD7CEA0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[28];
LABEL_15:
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v16(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[29];
    goto LABEL_15;
  }
  uint64_t v13 = sub_1D42D5DA0(&qword_1EBD7CDF8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[30];
    goto LABEL_15;
  }
  uint64_t v14 = sub_1D42D5DA0(&qword_1EBD7CE38);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a3[31];
    goto LABEL_15;
  }
  uint64_t v15 = sub_1D42D5DA0(&qword_1EBD7E670);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v9 = v15;
    uint64_t v10 = *(void *)(v15 - 8);
    uint64_t v11 = a3[32];
    goto LABEL_15;
  }
  uint64_t v17 = sub_1D42D5DA0(&qword_1EBD7CB80);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[38];
  return v18(v20, a2, v19);
}

uint64_t sub_1D44220E0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1D42D5DA0(&qword_1EBD7CEA0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[28];
LABEL_13:
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v16(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1D42D5DA0(&qword_1EBD7D4E0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[29];
    goto LABEL_13;
  }
  uint64_t v13 = sub_1D42D5DA0(&qword_1EBD7CDF8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[30];
    goto LABEL_13;
  }
  uint64_t v14 = sub_1D42D5DA0(&qword_1EBD7CE38);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a4[31];
    goto LABEL_13;
  }
  uint64_t v15 = sub_1D42D5DA0(&qword_1EBD7E670);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a3)
  {
    uint64_t v9 = v15;
    uint64_t v10 = *(void *)(v15 - 8);
    uint64_t v11 = a4[32];
    goto LABEL_13;
  }
  uint64_t v17 = sub_1D42D5DA0(&qword_1EBD7CB80);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = v5 + a4[38];
  return v18(v20, a2, a2, v19);
}

unint64_t sub_1D44223A8()
{
  unint64_t result = qword_1EA6CB4E8;
  if (!qword_1EA6CB4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB4E8);
  }
  return result;
}

unint64_t sub_1D4422400()
{
  unint64_t result = qword_1EA6CB4F0;
  if (!qword_1EA6CB4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB4F0);
  }
  return result;
}

uint64_t sub_1D4422454()
{
  unint64_t v0 = sub_1D446A788();
  swift_bridgeObjectRelease();
  if (v0 >= 0x3A) {
    return 58;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D44224AC()
{
  return sub_1D446A888();
}

uint64_t sub_1D4422508()
{
  return sub_1D4469BC8();
}

uint64_t sub_1D4422528()
{
  return sub_1D446A888();
}

uint64_t sub_1D4422580@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1D44225D4(void *a1@<X8>)
{
  *a1 = 0x49737265626D656DLL;
  a1[1] = 0xEB000000006F666ELL;
}

uint64_t sub_1D44225F8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1D4422650(uint64_t a1)
{
  unint64_t v2 = sub_1D42E3B5C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D442268C(uint64_t a1)
{
  unint64_t v2 = sub_1D42E3B5C();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1D44226F4()
{
  unint64_t result = qword_1EA6CB580;
  if (!qword_1EA6CB580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB580);
  }
  return result;
}

uint64_t FMIPShareItemAction.__allocating_init(item:handles:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + OBJC_IVAR____TtC8FMIPCore19FMIPShareItemAction_handles) = a2;
  sub_1D42FA5EC(a1, v4 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item);
  return v4;
}

uint64_t FMIPShareItemAction.init(item:handles:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore19FMIPShareItemAction_handles) = a2;
  sub_1D42FA5EC(a1, v2 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item);
  return v2;
}

uint64_t sub_1D44227E8()
{
  sub_1D446A918();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D429F494();
  sub_1D4469CA8();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  sub_1D446A378();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x1D94460F0](v0, MEMORY[0x1E4FBB1A0]);
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D4469C08();
  swift_bridgeObjectRetain();
  sub_1D4469C08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 60;
}

void FMIPShareItemAction.__allocating_init(item:)()
{
}

void FMIPShareItemAction.init(item:)()
{
}

uint64_t sub_1D4422A38()
{
  return swift_bridgeObjectRelease();
}

uint64_t FMIPShareItemAction.deinit()
{
  sub_1D42CA9A8(v0 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMIPShareItemAction.__deallocating_deinit()
{
  sub_1D42CA9A8(v0 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D4422B24()
{
  return sub_1D44227E8();
}

uint64_t FMIPItemSharingAction.__allocating_init(shareIdentifier:)(uint64_t a1)
{
  return sub_1D44237B0(a1, &OBJC_IVAR____TtC8FMIPCore21FMIPItemSharingAction_shareIdentifier);
}

uint64_t FMIPItemSharingAction.init(shareIdentifier:)(uint64_t a1)
{
  return sub_1D4423844(a1, &OBJC_IVAR____TtC8FMIPCore21FMIPItemSharingAction_shareIdentifier);
}

uint64_t sub_1D4422B60()
{
  return sub_1D44238DC();
}

unint64_t sub_1D4422B88()
{
  unint64_t result = qword_1EA6C92C0;
  if (!qword_1EA6C92C0)
  {
    sub_1D4469688();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6C92C0);
  }
  return result;
}

uint64_t FMIPItemSharingAction.deinit()
{
  return sub_1D4423A84(&OBJC_IVAR____TtC8FMIPCore21FMIPItemSharingAction_shareIdentifier);
}

uint64_t FMIPItemSharingAction.__deallocating_deinit()
{
  return sub_1D4423AF0(&OBJC_IVAR____TtC8FMIPCore21FMIPItemSharingAction_shareIdentifier);
}

uint64_t sub_1D4422BF8()
{
  return sub_1D4422B60();
}

uint64_t FMIPRequestShareAction.__allocating_init(unknownItem:)(uint64_t a1)
{
  return sub_1D44234D0(a1, &OBJC_IVAR____TtC8FMIPCore22FMIPRequestShareAction_beaconIdentifier);
}

uint64_t FMIPRequestShareAction.init(unknownItem:)(uint64_t a1)
{
  return sub_1D4423600(a1, &OBJC_IVAR____TtC8FMIPCore22FMIPRequestShareAction_beaconIdentifier);
}

uint64_t FMIPRequestShareAction.__allocating_init(beaconIdentifier:)(uint64_t a1)
{
  return sub_1D44237B0(a1, &OBJC_IVAR____TtC8FMIPCore22FMIPRequestShareAction_beaconIdentifier);
}

uint64_t FMIPRequestShareAction.init(beaconIdentifier:)(uint64_t a1)
{
  return sub_1D4423844(a1, &OBJC_IVAR____TtC8FMIPCore22FMIPRequestShareAction_beaconIdentifier);
}

uint64_t FMIPRequestShareAction.description.getter()
{
  return sub_1D44238DC();
}

uint64_t FMIPRequestShareAction.deinit()
{
  return sub_1D4423A84(&OBJC_IVAR____TtC8FMIPCore22FMIPRequestShareAction_beaconIdentifier);
}

uint64_t FMIPRequestShareAction.__deallocating_deinit()
{
  return sub_1D4423AF0(&OBJC_IVAR____TtC8FMIPCore22FMIPRequestShareAction_beaconIdentifier);
}

uint64_t sub_1D4422C8C()
{
  return FMIPRequestShareAction.description.getter();
}

uint64_t FMIPStopSharingAction.__allocating_init(unknownItem:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_beaconIdentifier;
  uint64_t v4 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v3, a1, v4);
  sub_1D42CA9A8(a1, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_force) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_isDelegated) = 0;
  return v2;
}

uint64_t FMIPStopSharingAction.init(unknownItem:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_beaconIdentifier;
  uint64_t v4 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v3, a1, v4);
  sub_1D42CA9A8(a1, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_force) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_isDelegated) = 0;
  return v1;
}

uint64_t FMIPStopSharingAction.__allocating_init(beaconIdentifier:force:)(uint64_t a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_beaconIdentifier;
  uint64_t v6 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  *(unsigned char *)(v4 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_force) = a2;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_isDelegated) = 0;
  return v4;
}

uint64_t FMIPStopSharingAction.init(beaconIdentifier:force:)(uint64_t a1, char a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_beaconIdentifier;
  uint64_t v6 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_force) = a2;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_isDelegated) = 0;
  return v2;
}

uint64_t FMIPStopSharingAction.__allocating_init(beaconIdentifier:force:isDelegated:)(uint64_t a1, char a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = v6 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_beaconIdentifier;
  uint64_t v8 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, a1, v8);
  *(unsigned char *)(v6 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_force) = a2;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_isDelegated) = a3;
  return v6;
}

uint64_t FMIPStopSharingAction.init(beaconIdentifier:force:isDelegated:)(uint64_t a1, char a2, char a3)
{
  uint64_t v7 = v3 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_beaconIdentifier;
  uint64_t v8 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, a1, v8);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_force) = a2;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_isDelegated) = a3;
  return v3;
}

uint64_t FMIPStopSharingAction.description.getter()
{
  return 60;
}

uint64_t FMIPStopSharingAction.deinit()
{
  return sub_1D4423A84(&OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_beaconIdentifier);
}

uint64_t FMIPStopSharingAction.__deallocating_deinit()
{
  return sub_1D4423AF0(&OBJC_IVAR____TtC8FMIPCore21FMIPStopSharingAction_beaconIdentifier);
}

uint64_t sub_1D44232BC()
{
  return FMIPStopSharingAction.description.getter();
}

uint64_t FMIPAcceptShareAction.deinit()
{
  return sub_1D4423A84(&OBJC_IVAR____TtC8FMIPCore21FMIPItemSharingAction_shareIdentifier);
}

uint64_t FMIPDeclineShareAction.deinit()
{
  return sub_1D4423A84(&OBJC_IVAR____TtC8FMIPCore21FMIPItemSharingAction_shareIdentifier);
}

uint64_t _s8FMIPCore21FMIPAcceptShareActionC15shareIdentifierAC10Foundation4UUIDV_tcfC_0(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtC8FMIPCore21FMIPItemSharingAction_shareIdentifier;
  uint64_t v4 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t _s8FMIPCore21FMIPAcceptShareActionC15shareIdentifierAC10Foundation4UUIDV_tcfc_0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8FMIPCore21FMIPItemSharingAction_shareIdentifier;
  uint64_t v4 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t FMIPWithdrawShareAction.deinit()
{
  return sub_1D4423A84(&OBJC_IVAR____TtC8FMIPCore21FMIPItemSharingAction_shareIdentifier);
}

uint64_t _s8FMIPCore21FMIPAcceptShareActionCfD_0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8FMIPCore21FMIPItemSharingAction_shareIdentifier;
  uint64_t v2 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t FMIPCreateDelegatedURLShareAction.__allocating_init(unknownItem:)(uint64_t a1)
{
  return sub_1D44234D0(a1, &OBJC_IVAR____TtC8FMIPCore33FMIPCreateDelegatedURLShareAction_beaconIdentifier);
}

uint64_t sub_1D44234D0(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1D4469688();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1D42CA9A8(a1, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v8 + *a2, v7, v4);
  return v8;
}

uint64_t FMIPCreateDelegatedURLShareAction.init(unknownItem:)(uint64_t a1)
{
  return sub_1D4423600(a1, &OBJC_IVAR____TtC8FMIPCore33FMIPCreateDelegatedURLShareAction_beaconIdentifier);
}

uint64_t sub_1D4423600(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_1D4469688();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  sub_1D42CA9A8(a1, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v2 + *a2, v8, v5);
  return v2;
}

uint64_t FMIPCreateDelegatedURLShareAction.__allocating_init(beaconIdentifier:)(uint64_t a1)
{
  return sub_1D44237B0(a1, &OBJC_IVAR____TtC8FMIPCore33FMIPCreateDelegatedURLShareAction_beaconIdentifier);
}

uint64_t FMIPCreateDelegatedURLShareAction.init(beaconIdentifier:)(uint64_t a1)
{
  return sub_1D4423844(a1, &OBJC_IVAR____TtC8FMIPCore33FMIPCreateDelegatedURLShareAction_beaconIdentifier);
}

uint64_t FMIPCreateDelegatedURLShareAction.description.getter()
{
  return sub_1D44238DC();
}

uint64_t FMIPCreateDelegatedURLShareAction.deinit()
{
  return sub_1D4423A84(&OBJC_IVAR____TtC8FMIPCore33FMIPCreateDelegatedURLShareAction_beaconIdentifier);
}

uint64_t FMIPCreateDelegatedURLShareAction.__deallocating_deinit()
{
  return sub_1D4423AF0(&OBJC_IVAR____TtC8FMIPCore33FMIPCreateDelegatedURLShareAction_beaconIdentifier);
}

uint64_t sub_1D4423768()
{
  return FMIPCreateDelegatedURLShareAction.description.getter();
}

uint64_t FMIPStopDelegatedURLShareAction.__allocating_init(unknownItem:)(uint64_t a1)
{
  return sub_1D44234D0(a1, &OBJC_IVAR____TtC8FMIPCore31FMIPStopDelegatedURLShareAction_beaconIdentifier);
}

uint64_t FMIPStopDelegatedURLShareAction.init(unknownItem:)(uint64_t a1)
{
  return sub_1D4423600(a1, &OBJC_IVAR____TtC8FMIPCore31FMIPStopDelegatedURLShareAction_beaconIdentifier);
}

uint64_t FMIPStopDelegatedURLShareAction.__allocating_init(beaconIdentifier:)(uint64_t a1)
{
  return sub_1D44237B0(a1, &OBJC_IVAR____TtC8FMIPCore31FMIPStopDelegatedURLShareAction_beaconIdentifier);
}

uint64_t sub_1D44237B0(uint64_t a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4 + *a2;
  uint64_t v6 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  return v4;
}

uint64_t FMIPStopDelegatedURLShareAction.init(beaconIdentifier:)(uint64_t a1)
{
  return sub_1D4423844(a1, &OBJC_IVAR____TtC8FMIPCore31FMIPStopDelegatedURLShareAction_beaconIdentifier);
}

uint64_t sub_1D4423844(uint64_t a1, void *a2)
{
  uint64_t v4 = v2 + *a2;
  uint64_t v5 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(v4, a1, v5);
  return v2;
}

uint64_t FMIPStopDelegatedURLShareAction.description.getter()
{
  return sub_1D44238DC();
}

uint64_t sub_1D44238DC()
{
  return 60;
}

uint64_t FMIPStopDelegatedURLShareAction.deinit()
{
  return sub_1D4423A84(&OBJC_IVAR____TtC8FMIPCore31FMIPStopDelegatedURLShareAction_beaconIdentifier);
}

uint64_t sub_1D4423A84(void *a1)
{
  uint64_t v2 = v1 + *a1;
  uint64_t v3 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return v1;
}

uint64_t FMIPStopDelegatedURLShareAction.__deallocating_deinit()
{
  return sub_1D4423AF0(&OBJC_IVAR____TtC8FMIPCore31FMIPStopDelegatedURLShareAction_beaconIdentifier);
}

uint64_t sub_1D4423AF0(void *a1)
{
  uint64_t v2 = v1 + *a1;
  uint64_t v3 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return swift_deallocClassInstance();
}

uint64_t sub_1D4423B8C()
{
  return FMIPStopDelegatedURLShareAction.description.getter();
}

uint64_t sub_1D4423BB0()
{
  return type metadata accessor for FMIPShareItemAction(0);
}

uint64_t type metadata accessor for FMIPShareItemAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6CB588);
}

uint64_t sub_1D4423BD8()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FMIPShareItemAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPShareItemAction);
}

uint64_t dispatch thunk of FMIPShareItemAction.__allocating_init(item:handles:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FMIPShareItemAction.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t sub_1D4423C70()
{
  return type metadata accessor for FMIPItemSharingAction(0);
}

uint64_t type metadata accessor for FMIPItemSharingAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6CB598);
}

uint64_t method lookup function for FMIPItemSharingAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPItemSharingAction);
}

uint64_t dispatch thunk of FMIPItemSharingAction.__allocating_init(shareIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of FMIPItemSharingAction.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t sub_1D4423CEC()
{
  return type metadata accessor for FMIPRequestShareAction(0);
}

uint64_t type metadata accessor for FMIPRequestShareAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6CB5A8);
}

uint64_t method lookup function for FMIPRequestShareAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPRequestShareAction);
}

uint64_t dispatch thunk of FMIPRequestShareAction.__allocating_init(unknownItem:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of FMIPRequestShareAction.__allocating_init(beaconIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D4423D54()
{
  return type metadata accessor for FMIPStopSharingAction(0);
}

uint64_t type metadata accessor for FMIPStopSharingAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6CB5B8);
}

uint64_t sub_1D4423D7C()
{
  uint64_t result = sub_1D4469688();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FMIPStopSharingAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPStopSharingAction);
}

uint64_t dispatch thunk of FMIPStopSharingAction.__allocating_init(unknownItem:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FMIPStopSharingAction.__allocating_init(beaconIdentifier:force:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FMIPStopSharingAction.__allocating_init(beaconIdentifier:force:isDelegated:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1D4423E6C()
{
  return type metadata accessor for FMIPAcceptShareAction(0);
}

uint64_t type metadata accessor for FMIPAcceptShareAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6CB5C8);
}

uint64_t sub_1D4423E98()
{
  return type metadata accessor for FMIPDeclineShareAction(0);
}

uint64_t type metadata accessor for FMIPDeclineShareAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6CB5D8);
}

uint64_t sub_1D4423EC0()
{
  return type metadata accessor for FMIPWithdrawShareAction(0);
}

uint64_t type metadata accessor for FMIPWithdrawShareAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6CB5E8);
}

uint64_t sub_1D4423EE8()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1D4423F20()
{
  return type metadata accessor for FMIPCreateDelegatedURLShareAction(0);
}

uint64_t type metadata accessor for FMIPCreateDelegatedURLShareAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6CB5F8);
}

uint64_t method lookup function for FMIPCreateDelegatedURLShareAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPCreateDelegatedURLShareAction);
}

uint64_t dispatch thunk of FMIPCreateDelegatedURLShareAction.__allocating_init(unknownItem:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of FMIPCreateDelegatedURLShareAction.__allocating_init(beaconIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D4423F88()
{
  return type metadata accessor for FMIPStopDelegatedURLShareAction(0);
}

uint64_t type metadata accessor for FMIPStopDelegatedURLShareAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6CB608);
}

uint64_t sub_1D4423FB0()
{
  uint64_t result = sub_1D4469688();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FMIPStopDelegatedURLShareAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPStopDelegatedURLShareAction);
}

uint64_t dispatch thunk of FMIPStopDelegatedURLShareAction.__allocating_init(unknownItem:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of FMIPStopDelegatedURLShareAction.__allocating_init(beaconIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D4424080(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EA6CB638);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for FMIPUnknownItem();
  uint64_t v5 = *(void *)(v43 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v43);
  uint64_t v38 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v35 = (uint64_t)&v34 - v8;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1D446A238();
    sub_1D4275AD0(0, &qword_1EA6CA380);
    sub_1D4425540();
    uint64_t result = sub_1D4469F48();
    a1 = v46;
    uint64_t v42 = v47;
    uint64_t v10 = v48;
    uint64_t v11 = v49;
    uint64_t v12 = v50;
  }
  else
  {
    uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v14 = *(void *)(a1 + 56);
    uint64_t v42 = a1 + 56;
    uint64_t v10 = ~v13;
    uint64_t v15 = -v13;
    if (v15 < 64) {
      uint64_t v16 = ~(-1 << v15);
    }
    else {
      uint64_t v16 = -1;
    }
    uint64_t v12 = v16 & v14;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v11 = 0;
  }
  uint64_t v37 = v10;
  int64_t v41 = (unint64_t)(v10 + 64) >> 6;
  uint64_t v17 = (void (**)(char *, void, uint64_t, uint64_t))(v5 + 56);
  unint64_t v39 = MEMORY[0x1E4FBC860];
  uint64_t v36 = v5;
  uint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v40 = MEMORY[0x1E4FBC838] + 8;
  uint64_t v44 = a1;
LABEL_8:
  uint64_t v19 = v11;
  unint64_t v20 = v12;
  if (a1 < 0)
  {
    do
    {
      uint64_t v22 = sub_1D446A2B8();
      if (!v22) {
        goto LABEL_39;
      }
      uint64_t v45 = v22;
      sub_1D4275AD0(0, &qword_1EA6CA380);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v23 = v51;
      swift_unknownObjectRelease();
      uint64_t v11 = v19;
      uint64_t v12 = v20;
      if (!v23) {
        goto LABEL_39;
      }
LABEL_31:
      id v27 = v23;
      FMIPUnknownItem.init(with:)(v27, (uint64_t)v4);
      uint64_t v28 = v43;
      (*v17)(v4, 0, 1, v43);

      if ((*v18)(v4, 1, v28) != 1)
      {
        uint64_t v29 = v35;
        sub_1D442F2A0((uint64_t)v4, v35, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
        sub_1D442F2A0(v29, v38, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
        unint64_t v30 = v39;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v30 = sub_1D43B03C0(0, *(void *)(v30 + 16) + 1, 1, v30);
        }
        unint64_t v32 = *(void *)(v30 + 16);
        unint64_t v31 = *(void *)(v30 + 24);
        if (v32 >= v31 >> 1) {
          unint64_t v30 = sub_1D43B03C0(v31 > 1, v32 + 1, 1, v30);
        }
        *(void *)(v30 + 16) = v32 + 1;
        unint64_t v33 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
        unint64_t v39 = v30;
        uint64_t result = sub_1D442F2A0(v38, v30 + v33 + *(void *)(v36 + 72) * v32, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
        a1 = v44;
        goto LABEL_8;
      }
      uint64_t result = sub_1D4276C3C((uint64_t)v4, &qword_1EA6CB638);
      uint64_t v19 = v11;
      unint64_t v20 = v12;
      a1 = v44;
    }
    while (v44 < 0);
  }
  if (v20)
  {
    uint64_t v12 = (v20 - 1) & v20;
    unint64_t v21 = __clz(__rbit64(v20)) | (v19 << 6);
    uint64_t v11 = v19;
    goto LABEL_30;
  }
  int64_t v24 = v19 + 1;
  if (!__OFADD__(v19, 1))
  {
    if (v24 < v41)
    {
      unint64_t v25 = *(void *)(v42 + 8 * v24);
      uint64_t v11 = v19 + 1;
      if (v25) {
        goto LABEL_29;
      }
      uint64_t v11 = v19 + 2;
      if (v19 + 2 >= v41) {
        goto LABEL_39;
      }
      unint64_t v25 = *(void *)(v42 + 8 * v11);
      if (v25) {
        goto LABEL_29;
      }
      uint64_t v11 = v19 + 3;
      if (v19 + 3 >= v41) {
        goto LABEL_39;
      }
      unint64_t v25 = *(void *)(v42 + 8 * v11);
      if (v25) {
        goto LABEL_29;
      }
      uint64_t v11 = v19 + 4;
      if (v19 + 4 >= v41) {
        goto LABEL_39;
      }
      unint64_t v25 = *(void *)(v42 + 8 * v11);
      if (v25)
      {
LABEL_29:
        uint64_t v12 = (v25 - 1) & v25;
        unint64_t v21 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_30:
        id v23 = *(id *)(*(void *)(a1 + 48) + 8 * v21);
        if (v23) {
          goto LABEL_31;
        }
        goto LABEL_39;
      }
      uint64_t v11 = v19 + 5;
      if (v19 + 5 < v41)
      {
        unint64_t v25 = *(void *)(v42 + 8 * v11);
        if (!v25)
        {
          uint64_t v26 = v19 + 6;
          while (v41 != v26)
          {
            unint64_t v25 = *(void *)(v42 + 8 * v26++);
            if (v25)
            {
              uint64_t v11 = v26 - 1;
              a1 = v44;
              goto LABEL_29;
            }
          }
          goto LABEL_39;
        }
        goto LABEL_29;
      }
    }
LABEL_39:
    sub_1D42F9364();
    return v39;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D44245A0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1D44245C8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1D44245F0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1D43C9740;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_1D42972D4(v3);
}

uint64_t sub_1D4424670(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1D43C9758;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  sub_1D42972D4(v3);
  uint64_t result = sub_1D42E2C6C(v7);
  *a2 = (uint64_t)v6;
  a2[1] = v5;
  return result;
}

uint64_t FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback.getter()
{
  uint64_t v1 = *v0;
  sub_1D42972D4(*v0);
  return v1;
}

uint64_t FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1D42E2C6C(*v2);
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D4424798@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1D43C9740;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_1D42972D4(v3);
}

uint64_t sub_1D4424818(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1D43C9758;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  sub_1D42972D4(v3);
  uint64_t result = sub_1D42E2C6C(v7);
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v5;
  return result;
}

uint64_t FMIPUnknownAccessoryDiscoveryController.Callbacks.lostAccessoriesCallback.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1D42972D4(v1);
  return v1;
}

uint64_t FMIPUnknownAccessoryDiscoveryController.Callbacks.lostAccessoriesCallback.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1D42E2C6C(*(void *)(v2 + 16));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FMIPUnknownAccessoryDiscoveryController.Callbacks.lostAccessoriesCallback.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D4424940@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1D43C90B4;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_1D42972D4(v3);
}

uint64_t sub_1D44249C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1D43C907C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  sub_1D42972D4(v3);
  uint64_t result = sub_1D42E2C6C(v7);
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v5;
  return result;
}

uint64_t FMIPUnknownAccessoryDiscoveryController.Callbacks.accessoryDiscoveryFinished.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1D42972D4(v1);
  return v1;
}

uint64_t FMIPUnknownAccessoryDiscoveryController.Callbacks.accessoryDiscoveryFinished.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1D42E2C6C(*(void *)(v2 + 32));
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FMIPUnknownAccessoryDiscoveryController.Callbacks.accessoryDiscoveryFinished.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D4424AE8@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1D442E9E4;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;
  return sub_1D42972D4(v3);
}

uint64_t sub_1D4424B68(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1D442E9BC;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void *)(a2 + 48);
  sub_1D42972D4(v3);
  uint64_t result = sub_1D42E2C6C(v7);
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v5;
  return result;
}

uint64_t FMIPUnknownAccessoryDiscoveryController.Callbacks.errorHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1D42972D4(v1);
  return v1;
}

uint64_t FMIPUnknownAccessoryDiscoveryController.Callbacks.errorHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1D42E2C6C(*(void *)(v2 + 48));
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*FMIPUnknownAccessoryDiscoveryController.Callbacks.errorHandler.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D4424C90()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1D42972D4(v1);
  return v1;
}

uint64_t sub_1D4424CC4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1D42E2C6C(*(void *)(v2 + 48));
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*sub_1D4424CFC())()
{
  return nullsub_1;
}

double static FMIPUnknownAccessoryDiscoveryController.operationTimeout.getter()
{
  return 2.0;
}

uint64_t sub_1D4424D24@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (void *)*a1;
  swift_beginAccess();
  uint64_t v4 = v3[4];
  uint64_t v5 = v3[5];
  uint64_t v6 = v3[6];
  uint64_t v7 = v3[7];
  uint64_t v8 = v3[8];
  uint64_t v9 = v3[9];
  uint64_t v10 = v3[10];
  uint64_t v11 = v3[11];
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  a2[5] = v9;
  a2[6] = v10;
  a2[7] = v11;
  sub_1D42972D4(v4);
  sub_1D42972D4(v6);
  sub_1D42972D4(v8);
  return sub_1D42972D4(v10);
}

uint64_t sub_1D4424DC4(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  uint64_t v10 = (void *)*a2;
  swift_beginAccess();
  uint64_t v12 = v10[4];
  uint64_t v13 = v10[6];
  uint64_t v15 = v10[10];
  uint64_t v14 = v10[8];
  v10[4] = v2;
  id v10[5] = v3;
  v10[6] = v4;
  v10[7] = v5;
  v10[8] = v6;
  v10[9] = v7;
  v10[10] = v8;
  v10[11] = v9;
  sub_1D42972D4(v2);
  sub_1D42972D4(v4);
  sub_1D42972D4(v6);
  sub_1D42972D4(v8);
  sub_1D42E2C6C(v12);
  sub_1D42E2C6C(v13);
  sub_1D42E2C6C(v14);
  return sub_1D42E2C6C(v15);
}

uint64_t sub_1D4424EC0@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  uint64_t v6 = v1[7];
  uint64_t v7 = v1[8];
  uint64_t v8 = v1[9];
  uint64_t v10 = v1[10];
  uint64_t v9 = v1[11];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v10;
  a1[7] = v9;
  sub_1D42972D4(v3);
  sub_1D42972D4(v5);
  sub_1D42972D4(v7);
  return sub_1D42972D4(v10);
}

uint64_t sub_1D4424F5C(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v12 = *a1;
  uint64_t v3 = a1[4];
  long long v10 = *(_OWORD *)(a1 + 5);
  long long v11 = *((_OWORD *)a1 + 1);
  uint64_t v4 = a1[7];
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 64);
  uint64_t v8 = *(void *)(v1 + 80);
  *(void *)(v1 + 32) = v12;
  *(void *)(v1 + 40) = v2;
  *(_OWORD *)(v1 + 48) = v11;
  *(void *)(v1 + 64) = v3;
  *(_OWORD *)(v1 + 72) = v10;
  *(void *)(v1 + 88) = v4;
  sub_1D42E2C6C(v5);
  sub_1D42E2C6C(v6);
  sub_1D42E2C6C(v7);
  return sub_1D42E2C6C(v8);
}

uint64_t (*sub_1D442502C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1D4425080()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t sub_1D44250B4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 112) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4425114()
{
  return swift_bridgeObjectRetain();
}

uint64_t FMIPUnknownAccessoryDiscoveryController.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  FMIPUnknownAccessoryDiscoveryController.init()();
  return v0;
}

uint64_t FMIPUnknownAccessoryDiscoveryController.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D446A088();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D446A068();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1D44699B8();
  MEMORY[0x1F4188790](v7 - 8);
  v18[4] = sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7E860);
  sub_1D4469988();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  void v18[3] = sub_1D42DDBAC((unint64_t *)&qword_1EBD7FDB0, MEMORY[0x1E4FBCC10]);
  v18[2] = sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD90);
  v18[1] = sub_1D42BF5A0((unint64_t *)&qword_1EBD7FDA0, (uint64_t *)&unk_1EBD7FD90);
  sub_1D446A1F8();
  uint64_t v8 = *MEMORY[0x1E4FBCC58];
  uint64_t v9 = v3 + 104;
  long long v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v18[0] = v9;
  v10(v5, v8, v2);
  *(void *)(v0 + 16) = sub_1D446A0C8();
  sub_1D4469988();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1D446A1F8();
  v10(v5, v8, v2);
  *(void *)(v0 + 24) = sub_1D446A0C8();
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(void *)(v0 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F97C90]), sel_init);
  *(unsigned char *)(v0 + 104) = 0;
  *(void *)(v0 + 112) = MEMORY[0x1E4FBC870];
  id v11 = objc_allocWithZone(MEMORY[0x1E4F97C98]);
  sub_1D4275AD0(0, &qword_1EA6CA380);
  sub_1D4425540();
  uint64_t v12 = (void *)sub_1D4469EC8();
  id v13 = objc_msgSend(v11, sel_initWithUnknownAccessories_, v12);

  id v14 = v13;
  id v15 = sub_1D4428DFC((uint64_t)v13);

  uint64_t v16 = *(void **)(v1 + 96);
  *(void *)(v1 + 96) = v15;

  return v1;
}

unint64_t sub_1D4425540()
{
  unint64_t result = qword_1EA6CB618;
  if (!qword_1EA6CB618)
  {
    sub_1D4275AD0(255, &qword_1EA6CA380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB618);
  }
  return result;
}

uint64_t FMIPUnknownAccessoryDiscoveryController.deinit()
{
  objc_msgSend(*(id *)(v0 + 96), sel_stop);

  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 80);
  sub_1D42E2C6C(*(void *)(v0 + 32));
  sub_1D42E2C6C(v1);
  sub_1D42E2C6C(v2);
  sub_1D42E2C6C(v3);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMIPUnknownAccessoryDiscoveryController.__deallocating_deinit()
{
  objc_msgSend(*(id *)(v0 + 96), sel_stop);

  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 80);
  sub_1D42E2C6C(*(void *)(v0 + 32));
  sub_1D42E2C6C(v1);
  sub_1D42E2C6C(v2);
  sub_1D42E2C6C(v3);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D4425700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D4425718(a2, a3);
}

uint64_t sub_1D442570C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D44262E0(a2, a3);
}

uint64_t sub_1D4425718(uint64_t a1, uint64_t a2)
{
  return sub_1D4426308(a1, a2, (uint64_t)&unk_1F2C10A00, (uint64_t)sub_1D44290DC, (uint64_t)&unk_1F2C10A18);
}

void sub_1D4425740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D4469958();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D44699B8();
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v48 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1D44699D8();
  uint64_t v13 = *(void *)(v46 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v46);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v40 - v17;
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 104))
  {
    os_log_type_t v19 = sub_1D446A038();
    sub_1D442E788(v19, 0xD000000000000048, 0x80000001D44842C0);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a2;
    *(void *)(v20 + 24) = a3;
    int v54 = sub_1D442EB48;
    uint64_t v55 = (void *)v20;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v51 = 1107296256;
    uint64_t v52 = sub_1D42BD950;
    int v53 = &unk_1F2C11040;
    uint64_t v21 = v7;
    uint64_t v22 = _Block_copy(&aBlock);
    sub_1D42972D4(a2);
    sub_1D4469988();
    uint64_t v49 = MEMORY[0x1E4FBC860];
    sub_1D42DDBAC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v12, v9, v22);
    _Block_release(v22);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v48);
LABEL_5:
    swift_release();
    return;
  }
  uint64_t v42 = v9;
  uint64_t v43 = v12;
  uint64_t v44 = v7;
  uint64_t v45 = v6;
  id v23 = dispatch_group_create();
  dispatch_group_enter(v23);
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v26 = *(void **)(a1 + 96);
  uint64_t v27 = swift_allocObject();
  swift_weakInit();
  uint64_t v28 = (void *)swift_allocObject();
  _OWORD v28[2] = v23;
  v28[3] = v27;
  v28[4] = v24;
  uint64_t v28[5] = v25;
  int v54 = sub_1D442EC28;
  uint64_t v55 = v28;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v51 = 1107296256;
  uint64_t v40 = &v52;
  uint64_t v52 = sub_1D42E1B08;
  int v53 = &unk_1F2C10FA0;
  uint64_t v29 = _Block_copy(&aBlock);
  id v30 = v26;
  unint64_t v31 = v23;
  uint64_t v41 = v24;
  sub_1D42972D4(v24);
  swift_release();
  objc_msgSend(v30, sel_startDiscoveryWithCompletion_, v29);
  _Block_release(v29);

  sub_1D44699C8();
  MEMORY[0x1D9445D60](v16, 2.0);
  unint64_t v32 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v33 = v46;
  v32(v16, v46);
  sub_1D446A048();
  v32(v18, v33);
  if (sub_1D4469938())
  {
    uint64_t v34 = swift_allocObject();
    uint64_t v35 = v41;
    *(void *)(v34 + 16) = v41;
    *(void *)(v34 + 24) = v25;
    int v54 = sub_1D442EB48;
    uint64_t v55 = (void *)v34;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v51 = 1107296256;
    uint64_t v52 = sub_1D42BD950;
    int v53 = &unk_1F2C10FF0;
    uint64_t v36 = _Block_copy(&aBlock);
    sub_1D42972D4(v35);
    uint64_t v37 = v43;
    sub_1D4469988();
    uint64_t v49 = MEMORY[0x1E4FBC860];
    sub_1D42DDBAC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    uint64_t v38 = v42;
    uint64_t v39 = v45;
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v37, v38, v36);
    _Block_release(v36);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v38, v39);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v48);
    goto LABEL_5;
  }
}

void sub_1D4425DD4(void *a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1D4469958();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D44699B8();
  uint64_t v32 = *(void *)(v13 - 8);
  uint64_t v33 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = Strong;
    uint64_t v30 = v10;
    unint64_t v31 = a2;
    if (a1)
    {
      id v18 = a1;
      os_log_type_t v19 = sub_1D446A018();
      sub_1D442E55C(v19);
      LOBYTE(v41) = 0;
      id v20 = a1;
      FMIPAccessoryError.init(underlyingError:discoveryType:)(a1, (char *)&v41, (uint64_t)&aBlock);
      uint64_t v21 = aBlock;
      unsigned __int8 v22 = v36;
      uint64_t v41 = aBlock;
      char v42 = v36;
      sub_1D4428658((uint64_t)&v41);
      sub_1D43C90E0(v21, v22);
      uint64_t v29 = *(void *)(v17 + 24);
      id v23 = (void *)swift_allocObject();
      v23[2] = a4;
      v23[3] = a5;
      v23[4] = a1;
      uint64_t v39 = sub_1D442F440;
      uint64_t v40 = v23;
      uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
      uint64_t v36 = 1107296256;
      uint64_t v37 = sub_1D42BD950;
      uint64_t v38 = &unk_1F2C110E0;
      uint64_t v24 = _Block_copy(&aBlock);
      sub_1D42972D4(a4);
      id v25 = a1;
      sub_1D4469988();
      uint64_t v41 = (void *)MEMORY[0x1E4FBC860];
      sub_1D42DDBAC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
      sub_1D42D5DA0(&qword_1EBD7FD78);
      sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
      sub_1D446A1F8();
      MEMORY[0x1D9446420](0, v15, v12, v24);
      _Block_release(v24);
    }
    else
    {
      os_log_type_t v26 = sub_1D446A038();
      sub_1D442E788(v26, 0xD000000000000028, 0x80000001D4482620);
      swift_beginAccess();
      *(unsigned char *)(v17 + 104) = 1;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = a4;
      *(void *)(v27 + 24) = a5;
      uint64_t v39 = sub_1D442EBA4;
      uint64_t v40 = (void *)v27;
      uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
      uint64_t v36 = 1107296256;
      uint64_t v37 = sub_1D42BD950;
      uint64_t v38 = &unk_1F2C11090;
      uint64_t v28 = _Block_copy(&aBlock);
      sub_1D42972D4(a4);
      sub_1D4469988();
      uint64_t v34 = MEMORY[0x1E4FBC860];
      sub_1D42DDBAC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
      sub_1D42D5DA0(&qword_1EBD7FD78);
      sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
      sub_1D446A1F8();
      MEMORY[0x1D9446420](0, v15, v12, v28);
      _Block_release(v28);
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v33);
    swift_release();
    swift_release();
    a2 = v31;
  }
  dispatch_group_leave(a2);
}

uint64_t sub_1D44262E0(uint64_t a1, uint64_t a2)
{
  return sub_1D4426308(a1, a2, (uint64_t)&unk_1F2C10A50, (uint64_t)sub_1D44290EC, (uint64_t)&unk_1F2C10A68);
}

uint64_t sub_1D4426308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v6 = v5;
  uint64_t v9 = *v6;
  uint64_t v10 = sub_1D4469958();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1D44699B8();
  uint64_t v14 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v6[2];
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = v6;
  v17[3] = a1;
  v17[4] = a2;
  v17[5] = v9;
  aBlock[4] = v21;
  void aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = v22;
  id v18 = _Block_copy(aBlock);
  swift_retain();
  sub_1D42972D4(a1);
  sub_1D4469988();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1D42DDBAC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v16, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v24);
  return swift_release();
}

void sub_1D44265E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v51 = a3;
  uint64_t v5 = sub_1D4469958();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D44699B8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D44699D8();
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  id v18 = (char *)v42 - v17;
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 104) != 1)
  {
    os_log_type_t v35 = sub_1D446A038();
    sub_1D442E788(v35, 0xD00000000000002BLL, 0x80000001D4484290);
    uint64_t v50 = *(void *)(a1 + 24);
    uint64_t v36 = swift_allocObject();
    uint64_t v37 = v51;
    *(void *)(v36 + 16) = a2;
    *(void *)(v36 + 24) = v37;
    uint64_t v57 = sub_1D442EB48;
    uint64_t v58 = (void *)v36;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v54 = 1107296256;
    uint64_t v55 = sub_1D42BD950;
    uint64_t v56 = &unk_1F2C10DE8;
    uint64_t v38 = _Block_copy(&aBlock);
    uint64_t v39 = a2;
    uint64_t v40 = v6;
    uint64_t v41 = v38;
    sub_1D42972D4(v39);
    sub_1D4469988();
    uint64_t v52 = MEMORY[0x1E4FBC860];
    sub_1D42DDBAC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v12, v8, v41);
    _Block_release(v41);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_5;
  }
  uint64_t v43 = v12;
  uint64_t v44 = v8;
  uint64_t v45 = v10;
  uint64_t v46 = v9;
  uint64_t v47 = v6;
  uint64_t v48 = v5;
  os_log_type_t v19 = dispatch_group_create();
  dispatch_group_enter(v19);
  uint64_t v20 = *(void **)(a1 + 96);
  uint64_t v21 = swift_allocObject();
  v42[1] = a1;
  swift_weakInit();
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = v19;
  v22[3] = v21;
  uint64_t v23 = v51;
  v22[4] = a2;
  v22[5] = v23;
  uint64_t v57 = sub_1D442EB90;
  uint64_t v58 = v22;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v54 = 1107296256;
  uint64_t v55 = sub_1D42E1B08;
  uint64_t v56 = &unk_1F2C10E60;
  uint64_t v24 = _Block_copy(&aBlock);
  id v25 = v20;
  os_log_type_t v26 = v19;
  sub_1D42972D4(a2);
  swift_release();
  objc_msgSend(v25, sel_stopDiscoveryWithCompletion_, v24);
  _Block_release(v24);

  sub_1D44699C8();
  MEMORY[0x1D9445D60](v16, 2.0);
  uint64_t v27 = v50;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v49 + 8);
  v28(v16, v50);
  sub_1D446A048();
  v28(v18, v27);
  if (sub_1D4469938())
  {
    uint64_t v29 = swift_allocObject();
    uint64_t v30 = v51;
    *(void *)(v29 + 16) = a2;
    *(void *)(v29 + 24) = v30;
    uint64_t v57 = sub_1D442EB48;
    uint64_t v58 = (void *)v29;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v54 = 1107296256;
    uint64_t v55 = sub_1D42BD950;
    uint64_t v56 = &unk_1F2C10EB0;
    unint64_t v31 = _Block_copy(&aBlock);
    sub_1D42972D4(a2);
    uint64_t v32 = v43;
    sub_1D4469988();
    uint64_t v52 = MEMORY[0x1E4FBC860];
    sub_1D42DDBAC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    uint64_t v33 = v44;
    uint64_t v34 = v48;
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v32, v33, v31);
    _Block_release(v31);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v34);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v46);
LABEL_5:
    swift_release();
    return;
  }
}

void sub_1D4426CA0(void *a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1D4469958();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D44699B8();
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v17;
  uint64_t v45 = v14;
  if (a1)
  {
    uint64_t v43 = v10;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    id v19 = a1;
    if (Strong)
    {
      os_log_type_t v20 = sub_1D446A018();
      sub_1D442E55C(v20);
      swift_release();
    }
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      LOBYTE(v47) = 0;
      id v21 = a1;
      FMIPAccessoryError.init(underlyingError:discoveryType:)(a1, (char *)&v47, (uint64_t)&aBlock);
      uint64_t v22 = aBlock;
      char v42 = a1;
      uint64_t v23 = v16;
      uint64_t v24 = v12;
      uint64_t v25 = v9;
      uint64_t v26 = a4;
      uint64_t v27 = a5;
      uint64_t v28 = a2;
      unsigned __int8 v29 = v50;
      uint64_t v47 = aBlock;
      char v48 = v50;
      sub_1D4428658((uint64_t)&v47);
      swift_release();
      unsigned __int8 v30 = v29;
      a2 = v28;
      a5 = v27;
      a4 = v26;
      uint64_t v9 = v25;
      uint64_t v12 = v24;
      uint64_t v16 = v23;
      a1 = v42;
      sub_1D43C90E0(v22, v30);
    }
    swift_beginAccess();
    uint64_t v31 = swift_weakLoadStrong();
    if (!v31)
    {

      goto LABEL_12;
    }
    id v32 = *(id *)(v31 + 24);
    swift_release();
    uint64_t v33 = (void *)swift_allocObject();
    _OWORD v33[2] = a4;
    v33[3] = a5;
    v33[4] = a1;
    int v53 = sub_1D442EBB4;
    uint64_t v54 = v33;
    uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
    uint64_t v50 = 1107296256;
    uint64_t v51 = sub_1D42BD950;
    uint64_t v52 = &unk_1F2C10F50;
    uint64_t v34 = _Block_copy(&aBlock);
    id v35 = a1;
    sub_1D42972D4(a4);
    sub_1D4469988();
    uint64_t v46 = MEMORY[0x1E4FBC860];
    sub_1D42DDBAC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v16, v12, v34);
    _Block_release(v34);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v45);
    goto LABEL_10;
  }
  swift_beginAccess();
  uint64_t v36 = swift_weakLoadStrong();
  if (v36)
  {
    uint64_t v37 = v36;
    os_log_type_t v38 = sub_1D446A038();
    sub_1D442E788(v38, 0xD000000000000029, 0x80000001D4482470);
    swift_beginAccess();
    *(unsigned char *)(v37 + 104) = 0;
    uint64_t v43 = *(void *)(v37 + 24);
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = a4;
    *(void *)(v39 + 24) = a5;
    int v53 = sub_1D442EBA4;
    uint64_t v54 = (void *)v39;
    uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
    uint64_t v50 = 1107296256;
    uint64_t v51 = sub_1D42BD950;
    uint64_t v52 = &unk_1F2C10F00;
    uint64_t v40 = _Block_copy(&aBlock);
    sub_1D42972D4(a4);
    sub_1D4469988();
    uint64_t v47 = (void *)MEMORY[0x1E4FBC860];
    sub_1D42DDBAC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v16, v12, v40);
    _Block_release(v40);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v45);
    swift_release();
LABEL_10:
    swift_release();
  }
LABEL_12:
  dispatch_group_leave(a2);
}

void sub_1D44272B4(void (*a1)(void **), int a2, id a3)
{
  if (a1)
  {
    LOBYTE(v8) = 0;
    id v5 = a3;
    FMIPAccessoryError.init(underlyingError:discoveryType:)(a3, (char *)&v8, (uint64_t)&v11);
    uint64_t v6 = v11;
    unsigned __int8 v7 = v12;
    uint64_t v8 = v11;
    unsigned __int8 v9 = v12;
    char v10 = 1;
    a1(&v8);
    sub_1D43C90E0(v6, v7);
  }
}

void sub_1D4427340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v7 = *(void **)(v3 + 96);
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = v3;
  v8[3] = a2;
  v8[4] = a3;
  void v11[4] = sub_1D4429138;
  uint64_t v11[5] = v8;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  void v11[2] = sub_1D4373FE0;
  v11[3] = &unk_1F2C10AB8;
  unsigned __int8 v9 = _Block_copy(v11);
  id v10 = v7;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_fetchEncryptedPayloadForUnknownBeacon_completion_, a1, v9);
  _Block_release(v9);
}

uint64_t sub_1D442744C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v63 = a3;
  uint64_t v64 = a4;
  uint64_t v62 = a2;
  uint64_t v5 = sub_1D4469958();
  uint64_t v66 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unsigned __int8 v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1D44699B8();
  uint64_t v61 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  unsigned __int8 v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v10 - 8);
  unsigned __int8 v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D4469498();
  uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v60 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  id v18 = (char *)&v49 - v17;
  MEMORY[0x1F4188790](v16);
  os_log_type_t v20 = (char *)&v49 - v19;
  uint64_t v22 = v21;
  sub_1D42A3A74(a1, (uint64_t)v12, &qword_1EBD7E918);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v13) == 1)
  {
    sub_1D4276C3C((uint64_t)v12, &qword_1EBD7E918);
    os_log_type_t v23 = sub_1D446A038();
    sub_1D442E788(v23, 0xD00000000000003ELL, 0x80000001D4484250);
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = v64;
    *(void *)(v24 + 16) = v63;
    *(void *)(v24 + 24) = v25;
    uint64_t v72 = sub_1D442EA0C;
    uint64_t v73 = v24;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v69 = 1107296256;
    uint64_t v70 = sub_1D42BD950;
    uint64_t v71 = &unk_1F2C10D48;
    uint64_t v26 = _Block_copy(&aBlock);
    swift_retain();
    sub_1D4469988();
    uint64_t v67 = MEMORY[0x1E4FBC860];
    sub_1D42DDBAC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    uint64_t v27 = v66;
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v9, v7, v26);
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v9, v65);
  }
  else
  {
    uint64_t v57 = v9;
    uint64_t v58 = v7;
    uint64_t v59 = v5;
    uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    uint64_t v55 = v22 + 32;
    v54(v20, v12, v13);
    uint64_t v56 = v22;
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    uint64_t v52 = v18;
    uint64_t v53 = v13;
    uint64_t v51 = v28;
    v28(v18, v20, v13);
    os_log_type_t v29 = sub_1D446A038();
    if (qword_1EA6C8F50 != -1) {
      swift_once();
    }
    uint64_t v50 = v20;
    uint64_t v30 = sub_1D4469928();
    sub_1D42D7FAC(v30, (uint64_t)qword_1EA6E46B8);
    uint64_t v31 = sub_1D44698F8();
    if (os_log_type_enabled(v31, v29))
    {
      id v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)id v32 = 136315138;
      uint64_t v67 = v33;
      uint64_t aBlock = 0;
      uint64_t v49 = v32 + 4;
      unint64_t v69 = 0xE000000000000000;
      sub_1D446A378();
      sub_1D4469C08();
      uint64_t v34 = v52;
      sub_1D44693E8();
      sub_1D4469C08();
      swift_bridgeObjectRelease();
      sub_1D4469C08();
      uint64_t aBlock = sub_1D42CB9EC(aBlock, v69, &v67);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v31, v29, "FMIPUnknownAccessoryDiscoveryController: %s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v33, -1, -1);
      MEMORY[0x1D9447730](v32, -1, -1);

      id v35 = v57;
      uint64_t v36 = v58;
      uint64_t v37 = v62;
    }
    else
    {

      id v35 = v57;
      uint64_t v36 = v58;
      uint64_t v37 = v62;
      uint64_t v34 = v52;
    }
    uint64_t v38 = v53;
    uint64_t v39 = v56 + 8;
    uint64_t v62 = *(void **)(v56 + 8);
    ((void (*)(char *, uint64_t))v62)(v34, v53);
    uint64_t v58 = (char *)v37[3];
    uint64_t v40 = v60;
    uint64_t v41 = v50;
    v51(v60, v50, v38);
    unint64_t v42 = (*(unsigned __int8 *)(v39 + 72) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 72);
    uint64_t v43 = swift_allocObject();
    uint64_t v44 = v64;
    *(void *)(v43 + 16) = v63;
    *(void *)(v43 + 24) = v44;
    v54((char *)(v43 + v42), v40, v38);
    uint64_t v72 = sub_1D442EAE0;
    uint64_t v73 = v43;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v69 = 1107296256;
    uint64_t v70 = sub_1D42BD950;
    uint64_t v71 = &unk_1F2C10D98;
    uint64_t v45 = _Block_copy(&aBlock);
    swift_retain();
    sub_1D4469988();
    uint64_t v67 = MEMORY[0x1E4FBC860];
    sub_1D42DDBAC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    uint64_t v46 = v35;
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    uint64_t v47 = v59;
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v46, v36, v45);
    _Block_release(v45);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v36, v47);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v46, v65);
    ((void (*)(char *, uint64_t))v62)(v41, v38);
  }
  return swift_release();
}

uint64_t sub_1D4427CD0(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CB628);
  MEMORY[0x1F4188790](v5);
  unsigned __int8 v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D4469498();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, a3, v8);
  swift_storeEnumTagMultiPayload();
  a1(v7);
  return sub_1D4276C3C((uint64_t)v7, &qword_1EA6CB628);
}

uint64_t sub_1D4427DC4(void (*a1)(char *))
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EA6CB628);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v4 = 0;
  v4[8] = 0;
  swift_storeEnumTagMultiPayload();
  a1(v4);
  return sub_1D4276C3C((uint64_t)v4, &qword_1EA6CB628);
}

uint64_t sub_1D4427E74@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 112);
  swift_bridgeObjectRetain();
  sub_1D43CB9D0((uint64_t (*)(char *))sub_1D4429144, v3, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4427EFC(uint64_t a1)
{
  os_log_type_t v2 = sub_1D446A018();
  sub_1D442E788(v2, 0xD000000000000018, 0x80000001D4482250);
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(a1 + 104) == 1)
  {
    os_log_type_t v4 = sub_1D446A038();
    sub_1D442E788(v4, 0xD000000000000052, 0x80000001D4484310);
    return sub_1D44289C4();
  }
  return result;
}

uint64_t sub_1D4427F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D4469958();
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1D44699B8();
  uint64_t v30 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  os_log_type_t v9 = sub_1D446A038();
  sub_1D442ED88(v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1D4424080(a2);
  uint64_t v11 = sub_1D43523E8(v10);
  swift_bridgeObjectRelease();
  unsigned __int8 v12 = (uint64_t *)(a1 + 112);
  swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 112) + 16) <= *(void *)(v11 + 16) >> 3)
  {
    uint64_t aBlock = v11;
    swift_bridgeObjectRetain();
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_1D442AEB4(v15);
    swift_bridgeObjectRelease();
    uint64_t v14 = aBlock;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = sub_1D442C018(v13, v11);
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = *v12;
  if (*(void *)(v11 + 16) <= *(void *)(*v12 + 16) >> 3)
  {
    uint64_t aBlock = *v12;
    swift_bridgeObjectRetain();
    sub_1D442AEB4(v11);
    uint64_t v17 = aBlock;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1D442C018(v11, v16);
  }
  *unsigned __int8 v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  os_log_type_t v18 = sub_1D446A038();
  sub_1D442EFC0(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  os_log_type_t v19 = sub_1D446A038();
  sub_1D442EFC0(v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (*(void *)(v14 + 16))
  {
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a1;
    *(void *)(v21 + 24) = v14;
    uint64_t v36 = sub_1D442F224;
    uint64_t v37 = v21;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v33 = 1107296256;
    uint64_t v34 = sub_1D42BD950;
    id v35 = &unk_1F2C11298;
    uint64_t v22 = _Block_copy(&aBlock);
    swift_retain();
    sub_1D4469988();
    uint64_t v31 = v20;
    sub_1D42DDBAC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v8, v6, v22);
    _Block_release(v22);
    uint64_t v23 = v29;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v4);
    uint64_t v24 = v28;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v28);
    swift_release();
    if (*(void *)(v17 + 16))
    {
LABEL_9:
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = a1;
      *(void *)(v25 + 24) = v17;
      uint64_t v36 = sub_1D442F230;
      uint64_t v37 = v25;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v33 = 1107296256;
      uint64_t v34 = sub_1D42BD950;
      id v35 = &unk_1F2C112E8;
      uint64_t v26 = _Block_copy(&aBlock);
      swift_retain();
      sub_1D4469988();
      uint64_t v31 = MEMORY[0x1E4FBC860];
      sub_1D42DDBAC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
      sub_1D42D5DA0(&qword_1EBD7FD78);
      sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
      sub_1D446A1F8();
      MEMORY[0x1D9446420](0, v8, v6, v26);
      _Block_release(v26);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v24);
      return swift_release();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = v28;
    uint64_t v23 = v29;
    if (*(void *)(v17 + 16)) {
      goto LABEL_9;
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4428570(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t))(a1 + 32);
  if (v5)
  {
    swift_retain();
    v5(a2);
    return sub_1D42E2C6C((uint64_t)v5);
  }
  return result;
}

uint64_t sub_1D44285E4(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t))(a1 + 48);
  if (v5)
  {
    swift_retain();
    v5(a2);
    return sub_1D42E2C6C((uint64_t)v5);
  }
  return result;
}

uint64_t sub_1D4428658(uint64_t a1)
{
  uint64_t v3 = sub_1D4469958();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = sub_1D44699B8();
  uint64_t v7 = *(void *)(v16[0] - 8);
  MEMORY[0x1F4188790](v16[0]);
  os_log_type_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = *(id *)a1;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 8);
  sub_1D43C9224(*(id *)a1, v11);
  os_log_type_t v12 = sub_1D446A038();
  sub_1D442E334(v12);
  sub_1D43C90E0(v10, v11);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v1;
  *(void *)(v13 + 24) = v10;
  *(unsigned char *)(v13 + 32) = v11;
  aBlock[4] = sub_1D442E978;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C10BB8;
  uint64_t v14 = _Block_copy(aBlock);
  sub_1D43C9224(v10, v11);
  swift_retain();
  sub_1D4469988();
  v16[1] = MEMORY[0x1E4FBC860];
  sub_1D42DDBAC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v9, v6, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, void))(v7 + 8))(v9, v16[0]);
  return swift_release();
}

uint64_t sub_1D4428940(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void (**)(uint64_t *))(a1 + 80);
  if (v7)
  {
    uint64_t v8 = a2;
    char v9 = a3;
    swift_retain();
    v7(&v8);
    return sub_1D42E2C6C((uint64_t)v7);
  }
  return result;
}

uint64_t sub_1D44289C4()
{
  uint64_t v1 = sub_1D4469958();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1D44699B8();
  uint64_t v5 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D44699E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unsigned __int8 v11 = (uint64_t *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  os_log_type_t v12 = sub_1D446A038();
  sub_1D442E788(v12, 0xD000000000000039, 0x80000001D44841D0);
  uint64_t v13 = *(void **)(v0 + 16);
  *unsigned __int8 v11 = v13;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBF0], v8);
  id v14 = v13;
  LOBYTE(v13) = sub_1D4469A08();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (v13)
  {
    swift_beginAccess();
    *(unsigned char *)(v0 + 104) = 0;
    aBlock[4] = sub_1D442E92C;
    void aBlock[5] = v0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1D42BD950;
    uint64_t aBlock[3] = &unk_1F2C10B68;
    uint64_t v16 = _Block_copy(aBlock);
    swift_retain();
    sub_1D4469988();
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1D42DDBAC((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v7, v4, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v18);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D4428D60(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 64);
  if (v3)
  {
    swift_beginAccess();
    sub_1D42972D4((uint64_t)v3);
    uint64_t v4 = swift_bridgeObjectRetain();
    v3(v4);
    sub_1D42E2C6C((uint64_t)v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1D4428DFC(uint64_t a1)
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F97C90]), sel_initWithPreviousState_, a1);
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = sub_1D442ED18;
  uint64_t v16 = v2;
  uint64_t v11 = MEMORY[0x1E4F143A8];
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_1D44293A8;
  id v14 = &unk_1F2C11108;
  uint64_t v3 = _Block_copy(&v11);
  swift_release();
  objc_msgSend(v1, sel_setAccessoryDiscoveredCallback_, v3);
  _Block_release(v3);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = sub_1D442ED20;
  uint64_t v16 = v4;
  uint64_t v11 = MEMORY[0x1E4F143A8];
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_1D42BD950;
  id v14 = &unk_1F2C11130;
  uint64_t v5 = _Block_copy(&v11);
  swift_release();
  objc_msgSend(v1, sel_setSessionInvalidatedCallback_, v5);
  _Block_release(v5);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = sub_1D442ED28;
  uint64_t v16 = v6;
  uint64_t v11 = MEMORY[0x1E4F143A8];
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_1D435C428;
  id v14 = &unk_1F2C11158;
  uint64_t v7 = _Block_copy(&v11);
  swift_release();
  objc_msgSend(v1, sel_setAccessoryDiscoveryErrorCallback_, v7);
  _Block_release(v7);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = sub_1D442ED30;
  uint64_t v16 = v8;
  uint64_t v11 = MEMORY[0x1E4F143A8];
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_1D42BD950;
  id v14 = &unk_1F2C11180;
  uint64_t v9 = _Block_copy(&v11);
  swift_release();
  objc_msgSend(v1, sel_setAccessoryDiscoveryFinishedCallback_, v9);
  _Block_release(v9);
  return v1;
}

void sub_1D44290DC()
{
  sub_1D4425740(v0[2], v0[3], v0[4]);
}

void sub_1D44290EC()
{
  sub_1D44265E8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1D44290F8()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D4429138(uint64_t a1)
{
  return sub_1D442744C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1D4429144()
{
  return sub_1D4469658() & 1;
}

uint64_t sub_1D4429174()
{
  return sub_1D42DDBAC(&qword_1EA6CA178, (void (*)(uint64_t))type metadata accessor for FMIPUnknownItem);
}

unint64_t sub_1D44291C0()
{
  unint64_t result = qword_1EA6CB620;
  if (!qword_1EA6CB620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB620);
  }
  return result;
}

uint64_t sub_1D4429214(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(NSObject **)(result + 16);
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = a1;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_1D442ED70;
    *(void *)(v6 + 24) = v5;
    aBlock[4] = sub_1D42AEE88;
    void aBlock[5] = v6;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1D42AEDE4;
    uint64_t aBlock[3] = &unk_1F2C11248;
    uint64_t v7 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    dispatch_sync(v4, v7);
    _Block_release(v7);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1D44293A8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1D4275AD0(0, &qword_1EA6CA380);
  sub_1D4425540();
  uint64_t v2 = sub_1D4469ED8();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4429438()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *(NSObject **)(result + 16);
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = sub_1D442ED54;
    *(void *)(v3 + 24) = v1;
    aBlock[4] = sub_1D42AEE34;
    void aBlock[5] = v3;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1D42AEDE4;
    uint64_t aBlock[3] = &unk_1F2C111D0;
    uint64_t v4 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v2, v4);
    _Block_release(v4);
    LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
    swift_release_n();
    uint64_t result = swift_release();
    if (v2) {
      __break(1u);
    }
  }
  return result;
}

void sub_1D4429598(void *a1)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    LOBYTE(v5) = 0;
    id v2 = a1;
    FMIPAccessoryError.init(underlyingError:discoveryType:)(a1, (char *)&v5, (uint64_t)&v7);
    uint64_t v3 = v7;
    unsigned __int8 v4 = v8;
    uint64_t v5 = v7;
    unsigned __int8 v6 = v8;
    sub_1D4428658((uint64_t)&v5);
    swift_release();
    sub_1D43C90E0(v3, v4);
  }
}

void sub_1D4429638()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v1 = *(id *)(Strong + 16);
    swift_release();
    sub_1D42D5DA0(&qword_1EA6CB630);
    sub_1D446A0A8();
  }
}

uint64_t sub_1D44296E0@<X0>(BOOL *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v3 = result;
  if (result)
  {
    sub_1D44289C4();
    uint64_t result = swift_release();
  }
  *a1 = v3 == 0;
  return result;
}

uint64_t (*sub_1D4429758())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1D44297D4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 104);
  return result;
}

uint64_t sub_1D442981C(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 104) = v2;
  return result;
}

uint64_t sub_1D4429860@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 112);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FMIPUnknownAccessoryDiscoveryController()
{
  return self;
}

uint64_t method lookup function for FMIPUnknownAccessoryDiscoveryController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPUnknownAccessoryDiscoveryController);
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.callbacks.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.callbacks.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.callbacks.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.discoveryInProgress.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.discoveredAccessories.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.startDiscovery(localFindable:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.stopDiscovery(localFindable:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.startDiscovery(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.stopDiscovery(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.initiateFetchEncryptedPayloadForUnknownBeacon(beacon:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of FMIPUnknownAccessoryDiscoveryController.accessory(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

void *destroy for FMIPUnknownAccessoryDiscoveryController.Callbacks(void *result)
{
  id v1 = result;
  if (*result) {
    uint64_t result = (void *)swift_release();
  }
  if (v1[2]) {
    uint64_t result = (void *)swift_release();
  }
  if (v1[4]) {
    uint64_t result = (void *)swift_release();
  }
  if (v1[6])
  {
    return (void *)swift_release();
  }
  return result;
}

void *initializeWithCopy for FMIPUnknownAccessoryDiscoveryController.Callbacks(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = a2[2];
  if (v5)
  {
    uint64_t v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  uint64_t v7 = a2[4];
  if (v7)
  {
    uint64_t v8 = a2[5];
    a1[4] = v7;
    a1[5] = v8;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  uint64_t v9 = a2[6];
  if (v9)
  {
    uint64_t v10 = a2[7];
    a1[6] = v9;
    a1[7] = v10;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  }
  return a1;
}

void *assignWithCopy for FMIPUnknownAccessoryDiscoveryController.Callbacks(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    swift_retain();
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (a1[4])
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      a1[4] = v10;
      a1[5] = v11;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    a1[4] = v10;
    a1[5] = v12;
    swift_retain();
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (!a1[6])
  {
    if (v13)
    {
      uint64_t v15 = a2[7];
      a1[6] = v13;
      a1[7] = v15;
      swift_retain();
      return a1;
    }
LABEL_28:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v13)
  {
    swift_release();
    goto LABEL_28;
  }
  uint64_t v14 = a2[7];
  a1[6] = v13;
  a1[7] = v14;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for FMIPUnknownAccessoryDiscoveryController.Callbacks(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (a1[4])
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      a1[4] = v10;
      a1[5] = v11;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    a1[4] = v10;
    a1[5] = v12;
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (!a1[6])
  {
    if (v13)
    {
      uint64_t v15 = a2[7];
      a1[6] = v13;
      a1[7] = v15;
      return a1;
    }
LABEL_28:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v13)
  {
    swift_release();
    goto LABEL_28;
  }
  uint64_t v14 = a2[7];
  a1[6] = v13;
  a1[7] = v14;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPUnknownAccessoryDiscoveryController.Callbacks(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPUnknownAccessoryDiscoveryController.Callbacks(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPUnknownAccessoryDiscoveryController.Callbacks()
{
  return &type metadata for FMIPUnknownAccessoryDiscoveryController.Callbacks;
}

uint64_t sub_1D4429F8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = v2;
  uint64_t v9 = *v2;
  sub_1D446A828();
  swift_bridgeObjectRetain();
  FMIPDiscoveredAccessory.hash(into:)();
  uint64_t v10 = sub_1D446A888();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v21 = v5;
    uint64_t v22 = a2;
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v6 + 72);
    while (1)
    {
      sub_1D442F238(*(void *)(v9 + 48) + v14 * v12, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      BOOL v15 = _s8FMIPCore23FMIPDiscoveredAccessoryV2eeoiySbAC_ACtFZ_0(v8, a1);
      sub_1D442F308((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      if (v15) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = 1;
        uint64_t v5 = v21;
        a2 = v22;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v17 = v23;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v17;
    uint64_t v24 = *v17;
    *uint64_t v17 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1D434DC34();
      uint64_t v19 = v24;
    }
    a2 = v22;
    sub_1D442F2A0(*(void *)(v19 + 48) + v14 * v12, v22, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    sub_1D442A44C(v12);
    *uint64_t v17 = v24;
    swift_bridgeObjectRelease();
    uint64_t v16 = 0;
    uint64_t v5 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
}

uint64_t sub_1D442A1EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for FMIPUnknownItem();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v2;
  uint64_t v9 = *v2;
  sub_1D446A828();
  swift_bridgeObjectRetain();
  FMIPUnknownItem.hash(into:)((uint64_t)v24);
  uint64_t v10 = sub_1D446A888();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v21 = v5;
    uint64_t v22 = a2;
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v6 + 72);
    while (1)
    {
      sub_1D442F238(*(void *)(v9 + 48) + v14 * v12, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
      char v15 = _s8FMIPCore15FMIPUnknownItemV2eeoiySbAC_ACtFZ_0(v8, a1);
      sub_1D442F308((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
      if (v15) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = 1;
        uint64_t v5 = v21;
        a2 = v22;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v17 = v23;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v17;
    v24[0] = *v17;
    *uint64_t v17 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1D434DC7C();
      uint64_t v19 = v24[0];
    }
    a2 = v22;
    sub_1D442F2A0(*(void *)(v19 + 48) + v14 * v12, v22, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D442A95C(v12);
    *uint64_t v17 = v24[0];
    swift_bridgeObjectRelease();
    uint64_t v16 = 0;
    uint64_t v5 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
}

uint64_t sub_1D442A44C(unint64_t a1)
{
  uint64_t v48 = type metadata accessor for FMIPHawkeyeProductInformation();
  int64_t v50 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v41 = (uint64_t)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6C97A0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t result = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  uint64_t v13 = *v1 + 56;
  uint64_t v14 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v15 = (a1 + 1) & ~v14;
  if (((1 << v15) & *(void *)(v13 + 8 * (v15 >> 6))) != 0)
  {
    unint64_t v49 = v9;
    uint64_t v40 = v1;
    uint64_t v16 = ~v14;
    swift_retain();
    uint64_t v17 = sub_1D446A208();
    if ((*(void *)(v13 + 8 * (v15 >> 6)) & (1 << v15)) != 0)
    {
      uint64_t v18 = (v17 + 1) & v16;
      uint64_t v19 = *(void *)(v49 + 72);
      uint64_t v42 = v7;
      uint64_t v43 = (uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
      uint64_t v20 = v16;
      uint64_t v21 = v19;
      uint64_t v46 = v12;
      uint64_t v47 = v13;
      uint64_t v44 = v19;
      uint64_t v45 = v18;
      while (1)
      {
        uint64_t v22 = *(void *)(v12 + 48);
        int64_t v50 = v21 * v15;
        sub_1D442F238(v22 + v21 * v15, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
        sub_1D446A828();
        id v23 = *(id *)v11;
        sub_1D446A128();

        uint64_t v24 = *((void *)v11 + 3);
        if (v24)
        {
          unint64_t v49 = a1;
          uint64_t v25 = v20;
          uint64_t v26 = *((void *)v11 + 1);
          uint64_t v27 = *((void *)v11 + 2);
          sub_1D446A848();
          sub_1D446A838();
          sub_1D4354598(v26, v27, v24);
          swift_bridgeObjectRetain();
          sub_1D4469BC8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_1D4469BC8();
          swift_bridgeObjectRelease();
          uint64_t v28 = v27;
          uint64_t v20 = v25;
          a1 = v49;
          uint64_t v7 = v42;
          sub_1D43545DC(v26, v28, v24);
        }
        else
        {
          sub_1D446A848();
        }
        sub_1D42A3A74((uint64_t)&v11[*(int *)(v7 + 24)], (uint64_t)v6, &qword_1EA6C97A0);
        int v29 = (*v43)(v6, 1, v48);
        unint64_t v30 = v45;
        if (v29 == 1)
        {
          sub_1D446A848();
        }
        else
        {
          uint64_t v31 = v41;
          sub_1D442F2A0((uint64_t)v6, v41, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
          sub_1D446A848();
          FMIPHawkeyeProductInformation.hash(into:)();
          sub_1D442F308(v31, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
        }
        uint64_t v13 = v47;
        uint64_t v32 = sub_1D446A888();
        sub_1D442F308((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
        unint64_t v33 = v32 & v20;
        if ((uint64_t)a1 >= (uint64_t)v30) {
          break;
        }
        uint64_t v12 = v46;
        uint64_t v21 = v44;
        if (v33 < v30) {
          goto LABEL_17;
        }
LABEL_18:
        unint64_t v34 = v21 * a1;
        if ((uint64_t)(v21 * a1) < v50 || *(void *)(v12 + 48) + v21 * a1 >= *(void *)(v12 + 48) + v50 + v21)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v15;
          if (v34 == v50) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v15;
LABEL_6:
        unint64_t v15 = (v15 + 1) & v20;
        if (((*(void *)(v13 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
          goto LABEL_22;
        }
      }
      uint64_t v12 = v46;
      uint64_t v21 = v44;
      if (v33 < v30) {
        goto LABEL_6;
      }
LABEL_17:
      if ((uint64_t)a1 < (uint64_t)v33) {
        goto LABEL_6;
      }
      goto LABEL_18;
    }
LABEL_22:
    *(void *)(v13 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    id v1 = v40;
  }
  else
  {
    *(void *)(v13 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v35 = *v1;
  uint64_t v36 = *(void *)(*v1 + 16);
  BOOL v37 = __OFSUB__(v36, 1);
  uint64_t v38 = v36 - 1;
  if (v37)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v35 + 16) = v38;
    ++*(_DWORD *)(v35 + 36);
  }
  return result;
}

uint64_t sub_1D442A95C(unint64_t a1)
{
  uint64_t v26 = type metadata accessor for FMIPUnknownItem();
  uint64_t v3 = *(void *)(v26 - 8);
  uint64_t result = MEMORY[0x1F4188790](v26);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v25 = v1;
    uint64_t v11 = ~v9;
    swift_retain();
    uint64_t v12 = sub_1D446A208();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      uint64_t v13 = v3;
      unint64_t v14 = (v12 + 1) & v11;
      uint64_t v15 = *(void *)(v13 + 72);
      while (1)
      {
        int64_t v16 = v15 * v10;
        sub_1D442F238(*(void *)(v7 + 48) + v15 * v10, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
        sub_1D446A828();
        FMIPUnknownItem.hash(into:)((uint64_t)v27);
        uint64_t v17 = sub_1D446A888();
        sub_1D442F308((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
        unint64_t v18 = v17 & v11;
        if ((uint64_t)a1 >= (uint64_t)v14) {
          break;
        }
        if (v18 < v14) {
          goto LABEL_11;
        }
LABEL_12:
        unint64_t v19 = v15 * a1;
        if ((uint64_t)(v15 * a1) < v16 || *(void *)(v7 + 48) + v15 * a1 >= *(void *)(v7 + 48) + v16 + v15)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v19 == v16) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        unint64_t v10 = (v10 + 1) & v11;
        if (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
          goto LABEL_16;
        }
      }
      if (v18 < v14) {
        goto LABEL_6;
      }
LABEL_11:
      if ((uint64_t)a1 < (uint64_t)v18) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_16:
    *(void *)(v8 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    id v1 = v25;
  }
  else
  {
    *(void *)(v8 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v20 = *v1;
  uint64_t v21 = *(void *)(*v1 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v20 + 16) = v23;
    ++*(_DWORD *)(v20 + 36);
  }
  return result;
}

uint64_t sub_1D442ABFC(uint64_t a1)
{
  uint64_t v3 = sub_1D42D5DA0(qword_1EA6CB640);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6 - 8);
  unint64_t v10 = (uint64_t *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v25 - v12;
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v14 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(a1 + 56);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v21 = v20 | (v19 << 6);
      goto LABEL_6;
    }
    int64_t v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v18) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v14 + 8 * v22);
    ++v19;
    if (!v23)
    {
      int64_t v19 = v22 + 1;
      if (v22 + 1 >= v18) {
        return swift_release();
      }
      unint64_t v23 = *(void *)(v14 + 8 * v19);
      if (!v23)
      {
        int64_t v19 = v22 + 2;
        if (v22 + 2 >= v18) {
          return swift_release();
        }
        unint64_t v23 = *(void *)(v14 + 8 * v19);
        if (!v23)
        {
          int64_t v19 = v22 + 3;
          if (v22 + 3 >= v18) {
            return swift_release();
          }
          unint64_t v23 = *(void *)(v14 + 8 * v19);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_6:
    sub_1D442F238(*(void *)(a1 + 48) + *(void *)(v7 + 72) * v21, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    sub_1D442F2A0((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    sub_1D4429F8C(v10, (uint64_t)v5);
    sub_1D4276C3C((uint64_t)v5, qword_1EA6CB640);
    uint64_t result = sub_1D442F308((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v18) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v14 + 8 * v24);
  if (v23)
  {
    int64_t v19 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v18) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v14 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1D442AEB4(uint64_t a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6CB638);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMIPUnknownItem();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6 - 8);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v25 - v12;
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v14 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(a1 + 56);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v21 = v20 | (v19 << 6);
      goto LABEL_6;
    }
    int64_t v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v18) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v14 + 8 * v22);
    ++v19;
    if (!v23)
    {
      int64_t v19 = v22 + 1;
      if (v22 + 1 >= v18) {
        return swift_release();
      }
      unint64_t v23 = *(void *)(v14 + 8 * v19);
      if (!v23)
      {
        int64_t v19 = v22 + 2;
        if (v22 + 2 >= v18) {
          return swift_release();
        }
        unint64_t v23 = *(void *)(v14 + 8 * v19);
        if (!v23)
        {
          int64_t v19 = v22 + 3;
          if (v22 + 3 >= v18) {
            return swift_release();
          }
          unint64_t v23 = *(void *)(v14 + 8 * v19);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_6:
    sub_1D442F238(*(void *)(a1 + 48) + *(void *)(v7 + 72) * v21, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D442F2A0((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D442A1EC((uint64_t)v10, (uint64_t)v5);
    sub_1D4276C3C((uint64_t)v5, &qword_1EA6CB638);
    uint64_t result = sub_1D442F308((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v18) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v14 + 8 * v24);
  if (v23)
  {
    int64_t v19 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v18) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v14 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1D442B16C(uint64_t a1, uint64_t a2)
{
  uint64_t v113 = *MEMORY[0x1E4F143B8];
  uint64_t v93 = sub_1D42D5DA0(&qword_1EA6C9848);
  MEMORY[0x1F4188790](v93);
  uint64_t v5 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v84 = (uint64_t)&v83 - v11;
  uint64_t v12 = sub_1D42D5DA0(&qword_1EA6C97A0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)&v83 - v16;
  uint64_t v18 = sub_1D42D5DA0(qword_1EA6CB640);
  MEMORY[0x1F4188790](v18 - 8);
  unint64_t v20 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v21 = *(void *)(v99 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v99);
  uint64_t v107 = (uint64_t *)((char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v22);
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v106 = (id *)((char *)&v83 - v24);
  uint64_t v89 = v15;
  uint64_t v85 = v10;
  uint64_t v96 = (int *)v6;
  int v92 = v5;
  uint64_t v25 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v26 = ~v25;
  uint64_t v27 = *(void *)(a1 + 56);
  uint64_t v28 = -v25;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  else {
    uint64_t v29 = -1;
  }
  unint64_t v30 = v29 & v27;
  uint64_t v108 = a1;
  uint64_t v109 = a1 + 56;
  uint64_t v102 = a1 + 56;
  uint64_t v103 = v26;
  uint64_t v110 = v26;
  int64_t v111 = 0;
  uint64_t v112 = v29 & v27;
  uint64_t v88 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v87 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v97 = (unsigned int (**)(uint64_t, uint64_t, int *))(v7 + 48);
  uint64_t v104 = (char *)(a2 + 56);
  swift_bridgeObjectRetain();
  int64_t v31 = 0;
  uint64_t v86 = v17;
  uint64_t v32 = v21;
  uint64_t v90 = v21;
  uint64_t v33 = a1;
  uint64_t v105 = a2;
  int v91 = v20;
  while (1)
  {
    if (v30)
    {
      uint64_t v35 = (v30 - 1) & v30;
      unint64_t v36 = __clz(__rbit64(v30)) | (v31 << 6);
      int64_t v34 = v31;
LABEL_10:
      sub_1D442F238(*(void *)(v33 + 48) + *(void *)(v32 + 72) * v36, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      uint64_t v37 = 0;
      goto LABEL_11;
    }
    int64_t v34 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      __break(1u);
    }
    int64_t v45 = (unint64_t)(v103 + 64) >> 6;
    if (v34 >= v45)
    {
      uint64_t v35 = 0;
      uint64_t v37 = 1;
      int64_t v34 = v31;
      goto LABEL_11;
    }
    unint64_t v46 = *(void *)(v102 + 8 * v34);
    if (v46) {
      goto LABEL_17;
    }
    int64_t v73 = v31 + 2;
    if (v31 + 2 >= v45) {
      goto LABEL_86;
    }
    unint64_t v46 = *(void *)(v102 + 8 * v73);
    if (v46) {
      goto LABEL_74;
    }
    if (v31 + 3 >= v45) {
      goto LABEL_87;
    }
    unint64_t v46 = *(void *)(v102 + 8 * (v31 + 3));
    if (v46)
    {
      int64_t v34 = v31 + 3;
      goto LABEL_17;
    }
    int64_t v73 = v31 + 4;
    if (v31 + 4 < v45)
    {
      unint64_t v46 = *(void *)(v102 + 8 * v73);
      if (v46)
      {
LABEL_74:
        int64_t v34 = v73;
LABEL_17:
        uint64_t v35 = (v46 - 1) & v46;
        unint64_t v36 = __clz(__rbit64(v46)) + (v34 << 6);
        goto LABEL_10;
      }
      int64_t v34 = v31 + 5;
      if (v31 + 5 < v45)
      {
        unint64_t v46 = *(void *)(v102 + 8 * v34);
        if (v46) {
          goto LABEL_17;
        }
        int64_t v34 = v45 - 1;
        int64_t v74 = v31 + 6;
        while (v45 != v74)
        {
          unint64_t v46 = *(void *)(v102 + 8 * v74++);
          if (v46)
          {
            int64_t v34 = v74 - 1;
            goto LABEL_17;
          }
        }
LABEL_86:
        uint64_t v35 = 0;
        uint64_t v37 = 1;
        goto LABEL_11;
      }
LABEL_87:
      uint64_t v35 = 0;
      uint64_t v37 = 1;
      int64_t v34 = v73;
      goto LABEL_11;
    }
    uint64_t v35 = 0;
    uint64_t v37 = 1;
    int64_t v34 = v31 + 3;
LABEL_11:
    uint64_t v38 = v99;
    (*v88)(v20, v37, 1, v99);
    uint64_t v108 = v33;
    uint64_t v109 = v102;
    uint64_t v110 = v103;
    int64_t v111 = v34;
    uint64_t v112 = v35;
    if ((*v87)(v20, 1, v38) == 1)
    {
      sub_1D42F9364();
      sub_1D4276C3C((uint64_t)v20, qword_1EA6CB640);
      return a2;
    }
    uint64_t v39 = v33;
    uint64_t v40 = v106;
    sub_1D442F2A0((uint64_t)v20, (uint64_t)v106, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    sub_1D446A828();
    id v41 = *v40;
    sub_1D446A128();

    uint64_t v42 = (uint64_t)v40[3];
    if (v42)
    {
      uint64_t v44 = (uint64_t)v40[1];
      uint64_t v43 = (uint64_t)v40[2];
      sub_1D446A848();
      sub_1D446A838();
      sub_1D4354598(v44, v43, v42);
      swift_bridgeObjectRetain();
      sub_1D4469BC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1D4469BC8();
      swift_bridgeObjectRelease();
      uint64_t v32 = v90;
      sub_1D43545DC(v44, v43, v42);
    }
    else
    {
      sub_1D446A848();
    }
    uint64_t v47 = v96;
    uint64_t v95 = (uint64_t)v40 + *(int *)(v99 + 24);
    uint64_t v48 = (uint64_t)v86;
    sub_1D42A3A74(v95, (uint64_t)v86, &qword_1EA6C97A0);
    uint64_t v94 = *v97;
    if (v94(v48, 1, v47) == 1)
    {
      sub_1D446A848();
    }
    else
    {
      uint64_t v49 = v84;
      sub_1D442F2A0(v48, v84, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
      sub_1D446A848();
      FMIPHawkeyeProductInformation.hash(into:)();
      sub_1D442F308(v49, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
    }
    a2 = v105;
    unint64_t v20 = v91;
    uint64_t v33 = v39;
    uint64_t v50 = sub_1D446A888();
    uint64_t v51 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v52 = v50 & ~v51;
    if ((*(void *)&v104[(v52 >> 3) & 0xFFFFFFFFFFFFFF8] >> v52)) {
      break;
    }
LABEL_7:
    sub_1D442F308((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    int64_t v31 = v34;
    unint64_t v30 = v35;
  }
  uint64_t v101 = ~v51;
  uint64_t v103 = sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7D970);
  uint64_t v102 = *(void *)(v32 + 72);
  uint64_t v53 = v107;
  while (1)
  {
    sub_1D442F238(*(void *)(a2 + 48) + v102 * v52, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    if ((sub_1D446A118() & 1) == 0) {
      goto LABEL_26;
    }
    uint64_t v57 = v107[1];
    uint64_t v56 = v107[2];
    uint64_t v58 = v107[3];
    uint64_t v59 = (uint64_t)v106[1];
    uint64_t v55 = (uint64_t)v106[2];
    uint64_t v60 = (uint64_t)v106[3];
    if (v58)
    {
      if (!v60)
      {
        uint64_t v98 = v107[2];
        uint64_t v54 = v55;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v55 = v54;
        uint64_t v56 = v98;
LABEL_25:
        uint64_t v100 = v55;
        sub_1D4354598(v59, v55, v60);
        sub_1D43545DC(v57, v56, v58);
        sub_1D43545DC(v59, v100, v60);
        goto LABEL_26;
      }
      if (v57 != v59) {
        goto LABEL_26;
      }
      if ((id)v107[4] != v106[4] || (id)v107[5] != v106[5])
      {
        uint64_t v61 = v107[2];
        uint64_t v62 = (uint64_t)v106[2];
        char v63 = sub_1D446A758();
        uint64_t v55 = v62;
        uint64_t v56 = v61;
        if ((v63 & 1) == 0) {
          goto LABEL_26;
        }
      }
      if ((v56 != v55 || v58 != v60) && (sub_1D446A758() & 1) == 0) {
        goto LABEL_26;
      }
    }
    else if (v60)
    {
      goto LABEL_25;
    }
    uint64_t v64 = (uint64_t)v92;
    uint64_t v65 = (uint64_t)&v92[*(int *)(v93 + 48)];
    sub_1D42A3A74((uint64_t)v107 + *(int *)(v99 + 24), (uint64_t)v92, &qword_1EA6C97A0);
    sub_1D42A3A74(v95, v65, &qword_1EA6C97A0);
    uint64_t v66 = v96;
    uint64_t v67 = v94;
    if (v94(v64, 1, v96) == 1) {
      break;
    }
    uint64_t v68 = (uint64_t)v89;
    sub_1D42A3A74(v64, (uint64_t)v89, &qword_1EA6C97A0);
    if (v67(v65, 1, v66) == 1)
    {
      sub_1D442F308(v68, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
      goto LABEL_44;
    }
    uint64_t v69 = (uint64_t)v85;
    sub_1D442F2A0(v65, (uint64_t)v85, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
    if (*(void *)v68 != *(void *)v69
      || *(void *)(v68 + 8) != *(void *)(v69 + 8)
      || (*(void *)(v68 + 16) != *(void *)(v69 + 16) || *(void *)(v68 + 24) != *(void *)(v69 + 24))
      && (sub_1D446A758() & 1) == 0
      || (*(void *)(v68 + 32) != *(void *)(v69 + 32) || *(void *)(v68 + 40) != *(void *)(v69 + 40))
      && (sub_1D446A758() & 1) == 0)
    {
LABEL_70:
      sub_1D442F308(v69, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
      sub_1D442F308(v68, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
      sub_1D4276C3C(v64, &qword_1EA6C97A0);
      goto LABEL_26;
    }
    uint64_t v70 = *(void *)(v68 + 56);
    uint64_t v71 = *(void *)(v69 + 56);
    if (v70)
    {
      if (!v71 || (*(void *)(v68 + 48) != *(void *)(v69 + 48) || v70 != v71) && (sub_1D446A758() & 1) == 0) {
        goto LABEL_70;
      }
    }
    else if (v71)
    {
      goto LABEL_70;
    }
    if (*(double *)(v68 + 64) != *(double *)(v69 + 64)
      || *(unsigned __int8 *)(v68 + 72) != *(unsigned __int8 *)(v69 + 72)
      || *(unsigned __int8 *)(v68 + 73) != *(unsigned __int8 *)(v69 + 73)
      || (MEMORY[0x1D94457C0](v68 + v66[12], v69 + v66[12]) & 1) == 0
      || (MEMORY[0x1D94457C0](v68 + v66[13], v69 + v66[13]) & 1) == 0
      || (MEMORY[0x1D94457C0](v68 + v66[14], v69 + v66[14]) & 1) == 0
      || (MEMORY[0x1D94457C0](v68 + v66[15], v69 + v66[15]) & 1) == 0
      || (MEMORY[0x1D94457C0](v68 + v66[16], v69 + v66[16]) & 1) == 0)
    {
      goto LABEL_70;
    }
    char v72 = MEMORY[0x1D94457C0](v68 + v66[17], v69 + v66[17]);
    sub_1D442F308(v69, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
    sub_1D442F308(v68, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
    sub_1D4276C3C(v64, &qword_1EA6C97A0);
    if (v72) {
      goto LABEL_90;
    }
LABEL_26:
    uint64_t v53 = v107;
    sub_1D442F308((uint64_t)v107, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    unint64_t v52 = (v52 + 1) & v101;
    a2 = v105;
    uint64_t v40 = v106;
    if (((*(void *)&v104[(v52 >> 3) & 0xFFFFFFFFFFFFFF8] >> v52) & 1) == 0)
    {
      int64_t v34 = v111;
      uint64_t v35 = v112;
      uint64_t v33 = v108;
      uint64_t v102 = v109;
      uint64_t v103 = v110;
      unint64_t v20 = v91;
      uint64_t v32 = v90;
      goto LABEL_7;
    }
  }
  if (v67(v65, 1, v66) != 1)
  {
LABEL_44:
    sub_1D4276C3C(v64, &qword_1EA6C9848);
    goto LABEL_26;
  }
  sub_1D4276C3C(v64, &qword_1EA6C97A0);
LABEL_90:
  sub_1D442F308((uint64_t)v107, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
  uint64_t isStackAllocationSafe = sub_1D442F308((uint64_t)v106, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
  uint64_t v76 = v105;
  char v77 = *(unsigned char *)(v105 + 32);
  unint64_t v78 = (unint64_t)((1 << v77) + 63) >> 6;
  size_t v79 = 8 * v78;
  if ((v77 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v83 - ((v79 + 15) & 0x3FFFFFFFFFFFFFF0), v104, v79);
    a2 = sub_1D442C718((unint64_t *)((char *)&v83 - ((v79 + 15) & 0x3FFFFFFFFFFFFFF0)), v78, v76, v52, &v108);
    swift_release();
    sub_1D42F9364();
  }
  else
  {
    int v80 = (void *)swift_slowAlloc();
    memcpy(v80, v104, v79);
    uint64_t v81 = sub_1D442C718((unint64_t *)v80, v78, v76, v52, &v108);
    swift_release();
    sub_1D42F9364();
    MEMORY[0x1D9447730](v80, -1, -1);
    return v81;
  }
  return a2;
}

uint64_t sub_1D442C018(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1D42D5DA0(&qword_1EA6CB638);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for FMIPUnknownItem();
  uint64_t v7 = *(void *)(v52 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v52);
  unint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v43 - v11;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v50 = v6;
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
  if (-v14 < 64) {
    uint64_t v15 = ~(-1 << -(char)v14);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v13;
  uint64_t v57 = a1;
  uint64_t v58 = a1 + 56;
  uint64_t v53 = a1 + 56;
  uint64_t v51 = ~v14;
  uint64_t v59 = ~v14;
  int64_t v60 = 0;
  uint64_t v61 = v15 & v13;
  uint64_t v49 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v48 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v17 = a2 + 56;
  unint64_t v18 = (unint64_t)(63 - v14) >> 6;
  unint64_t v44 = v18 - 1;
  swift_bridgeObjectRetain();
  int64_t v19 = 0;
  int64_t v47 = v18;
  unint64_t v46 = v18 - 6;
  uint64_t v45 = a1 + 104;
  uint64_t v54 = v7;
  while (1)
  {
    if (v16)
    {
      uint64_t v55 = (v16 - 1) & v16;
      unint64_t v20 = __clz(__rbit64(v16)) | (v19 << 6);
      int64_t v21 = v19;
      uint64_t v22 = (uint64_t)v50;
LABEL_9:
      sub_1D442F238(*(void *)(a1 + 48) + *(void *)(v7 + 72) * v20, v22, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
      uint64_t v23 = 0;
      goto LABEL_10;
    }
    int64_t v21 = v19 + 1;
    uint64_t v22 = (uint64_t)v50;
    if (__OFADD__(v19, 1)) {
      __break(1u);
    }
    if (v21 >= v47)
    {
      uint64_t v55 = 0;
      uint64_t v23 = 1;
      int64_t v21 = v19;
      goto LABEL_10;
    }
    unint64_t v32 = *(void *)(v53 + 8 * v21);
    if (v32) {
      goto LABEL_19;
    }
    int64_t v33 = v19 + 2;
    if (v19 + 2 >= v47)
    {
      uint64_t v55 = 0;
      uint64_t v23 = 1;
      goto LABEL_10;
    }
    unint64_t v32 = *(void *)(v53 + 8 * v33);
    if (v32) {
      goto LABEL_23;
    }
    if (v19 + 3 >= v47)
    {
LABEL_36:
      uint64_t v55 = 0;
      uint64_t v23 = 1;
      int64_t v21 = v33;
      goto LABEL_10;
    }
    unint64_t v32 = *(void *)(v53 + 8 * (v19 + 3));
    if (v32)
    {
      int64_t v21 = v19 + 3;
      uint64_t v7 = v54;
      goto LABEL_19;
    }
    int64_t v33 = v19 + 4;
    if (v19 + 4 >= v47)
    {
      uint64_t v55 = 0;
      uint64_t v23 = 1;
      int64_t v21 = v19 + 3;
    }
    else
    {
      unint64_t v32 = *(void *)(v53 + 8 * v33);
      if (v32)
      {
LABEL_23:
        int64_t v21 = v33;
        uint64_t v7 = v54;
LABEL_19:
        uint64_t v55 = (v32 - 1) & v32;
        unint64_t v20 = __clz(__rbit64(v32)) + (v21 << 6);
        goto LABEL_9;
      }
      int64_t v21 = v19 + 5;
      if (v19 + 5 >= v47) {
        goto LABEL_36;
      }
      uint64_t v7 = v54;
      unint64_t v32 = *(void *)(v53 + 8 * v21);
      if (v32) {
        goto LABEL_19;
      }
      uint64_t v34 = v19;
      while (v46 != v34)
      {
        unint64_t v32 = *(void *)(v45 + 8 * v34++);
        if (v32)
        {
          int64_t v21 = v34 + 5;
          goto LABEL_19;
        }
      }
      uint64_t v55 = 0;
      uint64_t v23 = 1;
      int64_t v21 = v44;
    }
LABEL_10:
    uint64_t v24 = v52;
    (*v49)(v22, v23, 1, v52);
    uint64_t v57 = a1;
    uint64_t v58 = v53;
    uint64_t v59 = v51;
    int64_t v60 = v21;
    uint64_t v61 = v55;
    if ((*v48)(v22, 1, v24) == 1)
    {
      sub_1D42F9364();
      sub_1D4276C3C(v22, &qword_1EA6CB638);
      return a2;
    }
    uint64_t v25 = a1;
    sub_1D442F2A0(v22, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D446A828();
    FMIPUnknownItem.hash(into:)((uint64_t)v56);
    uint64_t v26 = sub_1D446A888();
    uint64_t v27 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v28 = v26 & ~v27;
    if ((*(void *)(v17 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28)) {
      break;
    }
LABEL_6:
    sub_1D442F308((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    int64_t v19 = v21;
    a1 = v25;
    uint64_t v7 = v54;
    unint64_t v16 = v55;
  }
  uint64_t v29 = ~v27;
  uint64_t v30 = *(void *)(v54 + 72);
  while (1)
  {
    sub_1D442F238(*(void *)(a2 + 48) + v30 * v28, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    char v31 = _s8FMIPCore15FMIPUnknownItemV2eeoiySbAC_ACtFZ_0(v10, (uint64_t)v12);
    sub_1D442F308((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    if (v31) {
      break;
    }
    unint64_t v28 = (v28 + 1) & v29;
    if (((*(void *)(v17 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
      goto LABEL_6;
    }
  }
  uint64_t isStackAllocationSafe = sub_1D442F308((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
  char v36 = *(unsigned char *)(a2 + 32);
  unint64_t v37 = (unint64_t)((1 << v36) + 63) >> 6;
  size_t v38 = 8 * v37;
  if ((v36 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v43 - ((v38 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(a2 + 56), v38);
    uint64_t v39 = sub_1D442D3BC((unint64_t *)((char *)&v43 - ((v38 + 15) & 0x3FFFFFFFFFFFFFF0)), v37, a2, v28, &v57);
    swift_release();
    sub_1D42F9364();
    return v39;
  }
  else
  {
    uint64_t v40 = (void *)swift_slowAlloc();
    memcpy(v40, (const void *)(a2 + 56), v38);
    uint64_t v41 = sub_1D442D3BC((unint64_t *)v40, v37, a2, v28, &v57);
    swift_release();
    sub_1D42F9364();
    MEMORY[0x1D9447730](v40, -1, -1);
    return v41;
  }
}

uint64_t sub_1D442C718(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  v73[0] = a2;
  uint64_t v86 = sub_1D42D5DA0(&qword_1EA6C9848);
  MEMORY[0x1F4188790](v86);
  uint64_t v85 = (uint64_t)v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t v10 = *(void *)(v90 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v90);
  uint64_t v77 = (uint64_t)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v76 = (uint64_t)v73 - v13;
  uint64_t v14 = sub_1D42D5DA0(&qword_1EA6C97A0);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v83 = (uint64_t)v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)v73 - v17;
  uint64_t v19 = sub_1D42D5DA0(qword_1EA6CB640);
  MEMORY[0x1F4188790](v19 - 8);
  int64_t v21 = (char *)v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v22 = MEMORY[0x1F4188790](v91);
  uint64_t v24 = (char *)v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v22);
  uint64_t v99 = (id *)((char *)v73 - v26);
  uint64_t v27 = *(void *)(a3 + 16);
  uint64_t v28 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v29 = *(unint64_t *)((char *)a1 + v28) & ((-1 << a4) - 1);
  uint64_t v75 = a1;
  *(unint64_t *)((char *)a1 + v28) = v29;
  uint64_t v30 = v27 - 1;
  uint64_t v82 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  uint64_t v84 = v31;
  uint64_t v81 = (unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  uint64_t v89 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v97 = a3 + 56;
  uint64_t v98 = a3;
  int v80 = a5;
  size_t v79 = v18;
  unint64_t v78 = v21;
  uint64_t v100 = v24;
LABEL_2:
  uint64_t v74 = v30;
LABEL_4:
  while (2)
  {
    uint64_t v32 = *a5;
    uint64_t v33 = a5[1];
    uint64_t v34 = a5[2];
    int64_t v35 = a5[3];
    unint64_t v36 = a5[4];
    if (v36)
    {
      uint64_t v37 = (v36 - 1) & v36;
      unint64_t v38 = __clz(__rbit64(v36)) | (v35 << 6);
LABEL_6:
      sub_1D442F238(*(void *)(v32 + 48) + *(void *)(v84 + 72) * v38, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      uint64_t v39 = 0;
LABEL_7:
      uint64_t v40 = v91;
      (*v82)(v21, v39, 1, v91);
      *a5 = v32;
      a5[1] = v33;
      a5[2] = v34;
      a5[3] = v35;
      a5[4] = v37;
      if ((*v81)(v21, 1, v40) == 1)
      {
        sub_1D4276C3C((uint64_t)v21, qword_1EA6CB640);
        uint64_t v72 = v98;
        swift_retain();
        return sub_1D442D8AC(v75, v73[0], v74, v72);
      }
      uint64_t v41 = v99;
      sub_1D442F2A0((uint64_t)v21, (uint64_t)v99, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
      sub_1D446A828();
      id v42 = *v41;
      sub_1D446A128();

      uint64_t v43 = (uint64_t)v41[3];
      if (v43)
      {
        uint64_t v45 = (uint64_t)v41[1];
        uint64_t v44 = (uint64_t)v41[2];
        sub_1D446A848();
        sub_1D446A838();
        sub_1D4354598(v45, v44, v43);
        swift_bridgeObjectRetain();
        sub_1D4469BC8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1D4469BC8();
        swift_bridgeObjectRelease();
        sub_1D43545DC(v45, v44, v43);
      }
      else
      {
        sub_1D446A848();
      }
      uint64_t v49 = v100;
      uint64_t v88 = (uint64_t)v41 + *(int *)(v91 + 24);
      sub_1D42A3A74(v88, (uint64_t)v18, &qword_1EA6C97A0);
      uint64_t v87 = *v89;
      if (v87(v18, 1, v90) == 1)
      {
        sub_1D446A848();
      }
      else
      {
        uint64_t v50 = v76;
        sub_1D442F2A0((uint64_t)v18, v76, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
        sub_1D446A848();
        FMIPHawkeyeProductInformation.hash(into:)();
        sub_1D442F308(v50, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
      }
      uint64_t v51 = sub_1D446A888();
      uint64_t v52 = -1 << *(unsigned char *)(v98 + 32);
      unint64_t v53 = v51 & ~v52;
      if (((*(void *)(v97 + ((v53 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v53) & 1) == 0)
      {
LABEL_3:
        uint64_t result = sub_1D442F308((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
        a5 = v80;
        unint64_t v18 = v79;
        int64_t v21 = v78;
        continue;
      }
      uint64_t v94 = ~v52;
      uint64_t v96 = sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7D970);
      uint64_t v95 = *(void *)(v84 + 72);
      while (1)
      {
        sub_1D442F238(*(void *)(v98 + 48) + v95 * v53, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
        if ((sub_1D446A118() & 1) == 0) {
          goto LABEL_22;
        }
        uint64_t v54 = v100[1];
        uint64_t v93 = v100[2];
        uint64_t v55 = v100[3];
        uint64_t v56 = (uint64_t)v99[1];
        uint64_t v57 = (uint64_t)v99[2];
        uint64_t v58 = (uint64_t)v99[3];
        if (v55)
        {
          if (!v58)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_21:
            uint64_t v92 = v57;
            sub_1D4354598(v56, v57, v58);
            sub_1D43545DC(v54, v93, v55);
            sub_1D43545DC(v56, v92, v58);
            goto LABEL_22;
          }
          if (v54 != v56
            || ((id)v100[4] != v99[4] || (id)v100[5] != v99[5]) && (sub_1D446A758() & 1) == 0
            || (v93 != v57 || v55 != v58) && (sub_1D446A758() & 1) == 0)
          {
            goto LABEL_22;
          }
        }
        else if (v58)
        {
          goto LABEL_21;
        }
        uint64_t v59 = v85;
        uint64_t v60 = v85 + *(int *)(v86 + 48);
        sub_1D42A3A74((uint64_t)v100 + *(int *)(v91 + 24), v85, &qword_1EA6C97A0);
        sub_1D42A3A74(v88, v60, &qword_1EA6C97A0);
        uint64_t v61 = (int *)v90;
        uint64_t v62 = (unsigned int (*)(uint64_t, uint64_t, int *))v87;
        if (v87((char *)v59, 1, v90) == 1)
        {
          if (v62(v60, 1, v61) == 1)
          {
            sub_1D4276C3C(v59, &qword_1EA6C97A0);
LABEL_71:
            sub_1D442F308((uint64_t)v100, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
            uint64_t result = sub_1D442F308((uint64_t)v99, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
            uint64_t v69 = (v53 >> 3) & 0x1FFFFFFFFFFFFFF8;
            uint64_t v70 = *(unint64_t *)((char *)v75 + v69);
            *(unint64_t *)((char *)v75 + v69) = v70 & ~(1 << v53);
            a5 = v80;
            unint64_t v18 = v79;
            int64_t v21 = v78;
            if ((v70 & (1 << v53)) != 0)
            {
              uint64_t v30 = v74 - 1;
              if (__OFSUB__(v74, 1)) {
                goto LABEL_93;
              }
              if (v74 == 1) {
                return MEMORY[0x1E4FBC870];
              }
              goto LABEL_2;
            }
            goto LABEL_4;
          }
          goto LABEL_40;
        }
        uint64_t v63 = v83;
        sub_1D42A3A74(v59, v83, &qword_1EA6C97A0);
        if (v62(v60, 1, v61) == 1)
        {
          sub_1D442F308(v63, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
LABEL_40:
          sub_1D4276C3C(v59, &qword_1EA6C9848);
          goto LABEL_22;
        }
        uint64_t v64 = v77;
        sub_1D442F2A0(v60, v77, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
        if (*(void *)v63 != *(void *)v64
          || *(void *)(v63 + 8) != *(void *)(v64 + 8)
          || (*(void *)(v63 + 16) != *(void *)(v64 + 16) || *(void *)(v63 + 24) != *(void *)(v64 + 24))
          && (sub_1D446A758() & 1) == 0
          || (*(void *)(v63 + 32) != *(void *)(v64 + 32) || *(void *)(v63 + 40) != *(void *)(v64 + 40))
          && (sub_1D446A758() & 1) == 0)
        {
LABEL_66:
          sub_1D442F308(v64, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
          sub_1D442F308(v63, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
          sub_1D4276C3C(v59, &qword_1EA6C97A0);
          goto LABEL_22;
        }
        uint64_t v65 = *(void *)(v63 + 56);
        uint64_t v66 = *(void *)(v64 + 56);
        if (v65)
        {
          if (!v66 || (*(void *)(v63 + 48) != *(void *)(v64 + 48) || v65 != v66) && (sub_1D446A758() & 1) == 0) {
            goto LABEL_66;
          }
        }
        else if (v66)
        {
          goto LABEL_66;
        }
        if (*(double *)(v63 + 64) != *(double *)(v64 + 64)
          || *(unsigned __int8 *)(v63 + 72) != *(unsigned __int8 *)(v64 + 72)
          || *(unsigned __int8 *)(v63 + 73) != *(unsigned __int8 *)(v64 + 73)
          || (MEMORY[0x1D94457C0](v63 + v61[12], v64 + v61[12]) & 1) == 0
          || (MEMORY[0x1D94457C0](v63 + v61[13], v64 + v61[13]) & 1) == 0
          || (MEMORY[0x1D94457C0](v63 + v61[14], v64 + v61[14]) & 1) == 0
          || (MEMORY[0x1D94457C0](v63 + v61[15], v64 + v61[15]) & 1) == 0
          || (MEMORY[0x1D94457C0](v63 + v61[16], v64 + v61[16]) & 1) == 0)
        {
          goto LABEL_66;
        }
        char v67 = MEMORY[0x1D94457C0](v63 + v61[17], v64 + v61[17]);
        sub_1D442F308(v64, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
        sub_1D442F308(v63, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
        sub_1D4276C3C(v59, &qword_1EA6C97A0);
        if (v67) {
          goto LABEL_71;
        }
LABEL_22:
        uint64_t v49 = v100;
        sub_1D442F308((uint64_t)v100, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
        unint64_t v53 = (v53 + 1) & v94;
        uint64_t v41 = v99;
        if (((*(void *)(v97 + ((v53 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v53) & 1) == 0) {
          goto LABEL_3;
        }
      }
    }
    break;
  }
  int64_t v46 = v35 + 1;
  if (!__OFADD__(v35, 1))
  {
    int64_t v47 = (unint64_t)(v34 + 64) >> 6;
    if (v46 >= v47)
    {
      uint64_t v37 = 0;
      uint64_t v39 = 1;
      goto LABEL_7;
    }
    unint64_t v48 = *(void *)(v33 + 8 * v46);
    if (v48) {
      goto LABEL_13;
    }
    int64_t v68 = v35 + 2;
    if (v35 + 2 < v47)
    {
      unint64_t v48 = *(void *)(v33 + 8 * v68);
      if (v48) {
        goto LABEL_70;
      }
      if (v35 + 3 >= v47) {
        goto LABEL_85;
      }
      unint64_t v48 = *(void *)(v33 + 8 * (v35 + 3));
      if (v48)
      {
        int64_t v46 = v35 + 3;
        goto LABEL_13;
      }
      int64_t v68 = v35 + 4;
      if (v35 + 4 >= v47)
      {
        uint64_t v37 = 0;
        uint64_t v39 = 1;
        v35 += 3;
        goto LABEL_7;
      }
      unint64_t v48 = *(void *)(v33 + 8 * v68);
      if (v48)
      {
LABEL_70:
        int64_t v46 = v68;
LABEL_13:
        uint64_t v37 = (v48 - 1) & v48;
        unint64_t v38 = __clz(__rbit64(v48)) + (v46 << 6);
        int64_t v35 = v46;
        goto LABEL_6;
      }
      int64_t v46 = v35 + 5;
      if (v35 + 5 >= v47)
      {
LABEL_85:
        uint64_t v37 = 0;
        uint64_t v39 = 1;
        int64_t v35 = v68;
        goto LABEL_7;
      }
      unint64_t v48 = *(void *)(v33 + 8 * v46);
      if (v48) {
        goto LABEL_13;
      }
      int64_t v46 = v47 - 1;
      int64_t v71 = v35 + 6;
      while (v47 != v71)
      {
        unint64_t v48 = *(void *)(v33 + 8 * v71++);
        if (v48)
        {
          int64_t v46 = v71 - 1;
          goto LABEL_13;
        }
      }
    }
    uint64_t v37 = 0;
    uint64_t v39 = 1;
    int64_t v35 = v46;
    goto LABEL_7;
  }
  __break(1u);
LABEL_93:
  __break(1u);
  return result;
}

uint64_t sub_1D442D3BC(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  uint64_t v47 = a2;
  uint64_t v9 = sub_1D42D5DA0(&qword_1EA6CB638);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v50 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for FMIPUnknownItem();
  uint64_t v11 = MEMORY[0x1F4188790](v53);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v46 - v15;
  uint64_t v17 = *(void *)(a3 + 16);
  uint64_t v18 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v19 = *(unint64_t *)((char *)a1 + v18) & ((-1 << a4) - 1);
  uint64_t v49 = a1;
  *(unint64_t *)((char *)a1 + v18) = v19;
  uint64_t v20 = v17 - 1;
  uint64_t v54 = v21;
  uint64_t v51 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  uint64_t v52 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v22 = a3 + 56;
  while (2)
  {
    uint64_t v48 = v20;
    do
    {
      while (1)
      {
        uint64_t v24 = *a5;
        uint64_t v23 = a5[1];
        uint64_t v25 = a5[2];
        int64_t v26 = a5[3];
        unint64_t v27 = a5[4];
        uint64_t v58 = v23;
        uint64_t v56 = v25;
        if (v27)
        {
          uint64_t v55 = (v27 - 1) & v27;
          unint64_t v28 = __clz(__rbit64(v27)) | (v26 << 6);
LABEL_6:
          uint64_t v29 = v50;
          sub_1D442F238(*(void *)(v24 + 48) + *(void *)(v54 + 72) * v28, v50, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
          uint64_t v30 = 0;
          goto LABEL_7;
        }
        int64_t v39 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_43;
        }
        int64_t v40 = (unint64_t)(v25 + 64) >> 6;
        if (v39 >= v40)
        {
          uint64_t v55 = 0;
          uint64_t v30 = 1;
          uint64_t v29 = v50;
          goto LABEL_7;
        }
        unint64_t v41 = *(void *)(v23 + 8 * v39);
        if (v41) {
          goto LABEL_16;
        }
        int64_t v44 = v26 + 2;
        if (v26 + 2 >= v40) {
          goto LABEL_34;
        }
        unint64_t v41 = *(void *)(v23 + 8 * v44);
        if (v41) {
          goto LABEL_22;
        }
        if (v26 + 3 >= v40) {
          goto LABEL_35;
        }
        unint64_t v41 = *(void *)(v23 + 8 * (v26 + 3));
        if (v41)
        {
          int64_t v39 = v26 + 3;
          goto LABEL_16;
        }
        int64_t v44 = v26 + 4;
        if (v26 + 4 < v40)
        {
          unint64_t v41 = *(void *)(v23 + 8 * v44);
          if (v41)
          {
LABEL_22:
            int64_t v39 = v44;
LABEL_16:
            uint64_t v55 = (v41 - 1) & v41;
            unint64_t v28 = __clz(__rbit64(v41)) + (v39 << 6);
            int64_t v26 = v39;
            goto LABEL_6;
          }
          int64_t v39 = v26 + 5;
          if (v26 + 5 < v40)
          {
            unint64_t v41 = *(void *)(v23 + 8 * v39);
            if (v41) {
              goto LABEL_16;
            }
            int64_t v39 = v40 - 1;
            int64_t v45 = v26 + 6;
            while (v40 != v45)
            {
              unint64_t v41 = *(void *)(v23 + 8 * v45++);
              if (v41)
              {
                int64_t v39 = v45 - 1;
                goto LABEL_16;
              }
            }
LABEL_34:
            uint64_t v55 = 0;
            uint64_t v30 = 1;
            int64_t v26 = v39;
            uint64_t v29 = v50;
            goto LABEL_7;
          }
LABEL_35:
          uint64_t v55 = 0;
          uint64_t v30 = 1;
          int64_t v26 = v44;
          uint64_t v29 = v50;
          goto LABEL_7;
        }
        uint64_t v55 = 0;
        uint64_t v30 = 1;
        v26 += 3;
        uint64_t v29 = v50;
LABEL_7:
        uint64_t v31 = v53;
        (*v52)(v29, v30, 1, v53);
        uint64_t v32 = v58;
        *a5 = v24;
        a5[1] = v32;
        a5[2] = v56;
        a5[3] = v26;
        a5[4] = v55;
        if ((*v51)(v29, 1, v31) == 1)
        {
          sub_1D4276C3C(v29, &qword_1EA6CB638);
          swift_retain();
          return sub_1D442DE20(v49, v47, v48, a3);
        }
        sub_1D442F2A0(v29, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
        sub_1D446A828();
        FMIPUnknownItem.hash(into:)((uint64_t)v57);
        uint64_t v33 = sub_1D446A888();
        uint64_t v34 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v35 = v33 & ~v34;
        if ((*(void *)(v22 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35)) {
          break;
        }
LABEL_3:
        uint64_t result = sub_1D442F308((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
      }
      uint64_t v36 = ~v34;
      uint64_t v37 = *(void *)(v54 + 72);
      while (1)
      {
        sub_1D442F238(*(void *)(a3 + 48) + v37 * v35, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
        char v38 = _s8FMIPCore15FMIPUnknownItemV2eeoiySbAC_ACtFZ_0(v13, (uint64_t)v16);
        sub_1D442F308((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
        if (v38) {
          break;
        }
        unint64_t v35 = (v35 + 1) & v36;
        if (((*(void *)(v22 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) == 0) {
          goto LABEL_3;
        }
      }
      uint64_t result = sub_1D442F308((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
      uint64_t v42 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v43 = *(unint64_t *)((char *)v49 + v42);
      *(unint64_t *)((char *)v49 + v42) = v43 & ~(1 << v35);
    }
    while ((v43 & (1 << v35)) == 0);
    uint64_t v20 = v48 - 1;
    if (__OFSUB__(v48, 1))
    {
LABEL_43:
      __break(1u);
      return result;
    }
    if (v48 != 1) {
      continue;
    }
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_1D442D8AC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v51 = type metadata accessor for FMIPHawkeyeProductInformation();
  uint64_t v8 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v45 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D42D5DA0(&qword_1EA6C97A0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMIPDiscoveredAccessory();
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_1D42D5DA0(&qword_1EA6CA180);
  uint64_t result = sub_1D446A348();
  uint64_t v16 = result;
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  if (a2 < 1) {
    unint64_t v18 = 0;
  }
  else {
    unint64_t v18 = *a1;
  }
  uint64_t v19 = 0;
  uint64_t v47 = a4;
  uint64_t v48 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v20 = result + 56;
  uint64_t v46 = result;
  while (1)
  {
    if (v18)
    {
      uint64_t v52 = (v18 - 1) & v18;
      uint64_t v53 = v19;
      unint64_t v21 = __clz(__rbit64(v18)) | (v19 << 6);
    }
    else
    {
      uint64_t v22 = v19 + 1;
      if (__OFADD__(v19, 1)) {
        goto LABEL_46;
      }
      if (v22 >= v44)
      {
LABEL_43:
        swift_release();
        return v16;
      }
      unint64_t v23 = v43[v22];
      uint64_t v24 = v19 + 1;
      if (!v23)
      {
        uint64_t v24 = v19 + 2;
        if (v19 + 2 >= v44) {
          goto LABEL_43;
        }
        unint64_t v23 = v43[v24];
        if (!v23)
        {
          uint64_t v24 = v19 + 3;
          if (v19 + 3 >= v44) {
            goto LABEL_43;
          }
          unint64_t v23 = v43[v24];
          if (!v23)
          {
            uint64_t v25 = v19 + 4;
            if (v19 + 4 >= v44) {
              goto LABEL_43;
            }
            unint64_t v23 = v43[v25];
            if (!v23)
            {
              while (1)
              {
                uint64_t v24 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_47;
                }
                if (v24 >= v44) {
                  goto LABEL_43;
                }
                unint64_t v23 = v43[v24];
                ++v25;
                if (v23) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v24 = v19 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v52 = (v23 - 1) & v23;
      uint64_t v53 = v24;
      unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    uint64_t v26 = *(void *)(a4 + 48);
    uint64_t v54 = *(void *)(v49 + 72);
    sub_1D442F238(v26 + v54 * v21, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    sub_1D446A828();
    id v27 = *(id *)v15;
    sub_1D446A128();

    uint64_t v28 = *((void *)v15 + 3);
    if (v28)
    {
      uint64_t v29 = v12;
      uint64_t v30 = *((void *)v15 + 1);
      uint64_t v31 = *((void *)v15 + 2);
      sub_1D446A848();
      sub_1D446A838();
      sub_1D4354598(v30, v31, v28);
      swift_bridgeObjectRetain();
      sub_1D4469BC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1D4469BC8();
      swift_bridgeObjectRelease();
      uint64_t v32 = v31;
      uint64_t v12 = v29;
      sub_1D43545DC(v30, v32, v28);
    }
    else
    {
      sub_1D446A848();
    }
    sub_1D42A3A74((uint64_t)&v15[*(int *)(v50 + 24)], (uint64_t)v12, &qword_1EA6C97A0);
    if ((*v48)(v12, 1, v51) == 1)
    {
      sub_1D446A848();
    }
    else
    {
      uint64_t v33 = v45;
      sub_1D442F2A0((uint64_t)v12, v45, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
      sub_1D446A848();
      FMIPHawkeyeProductInformation.hash(into:)();
      sub_1D442F308(v33, (uint64_t (*)(void))type metadata accessor for FMIPHawkeyeProductInformation);
    }
    uint64_t v16 = v46;
    a4 = v47;
    uint64_t result = sub_1D446A888();
    uint64_t v34 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v20 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v37 = __clz(__rbit64((-1 << v35) & ~*(void *)(v20 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        BOOL v40 = v36 == v39;
        if (v36 == v39) {
          unint64_t v36 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v20 + 8 * v36);
      }
      while (v41 == -1);
      unint64_t v37 = __clz(__rbit64(~v41)) + (v36 << 6);
    }
    *(void *)(v20 + ((v37 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v37;
    uint64_t result = sub_1D442F2A0((uint64_t)v15, *(void *)(v16 + 48) + v37 * v54, (uint64_t (*)(void))type metadata accessor for FMIPDiscoveredAccessory);
    ++*(void *)(v16 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    unint64_t v18 = v52;
    uint64_t v19 = v53;
    if (!a3) {
      goto LABEL_43;
    }
  }
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_1D442DE20(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FMIPUnknownItem();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_1D42D5DA0(&qword_1EA6CA170);
  uint64_t result = sub_1D446A348();
  uint64_t v12 = result;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  if (a2 < 1) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *a1;
  }
  uint64_t v15 = 0;
  uint64_t v16 = result + 56;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v15 << 6);
    }
    else
    {
      uint64_t v19 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_30;
      }
      if (v19 >= v27)
      {
LABEL_27:
        swift_release();
        return v12;
      }
      unint64_t v20 = v26[v19];
      ++v15;
      if (!v20)
      {
        uint64_t v15 = v19 + 1;
        if (v19 + 1 >= v27) {
          goto LABEL_27;
        }
        unint64_t v20 = v26[v15];
        if (!v20)
        {
          uint64_t v15 = v19 + 2;
          if (v19 + 2 >= v27) {
            goto LABEL_27;
          }
          unint64_t v20 = v26[v15];
          if (!v20)
          {
            uint64_t v21 = v19 + 3;
            if (v21 >= v27) {
              goto LABEL_27;
            }
            unint64_t v20 = v26[v21];
            if (!v20)
            {
              while (1)
              {
                uint64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_31;
                }
                if (v15 >= v27) {
                  goto LABEL_27;
                }
                unint64_t v20 = v26[v15];
                ++v21;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v15 = v21;
          }
        }
      }
LABEL_24:
      unint64_t v14 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
    }
    uint64_t v22 = *(void *)(v9 + 72);
    sub_1D442F238(*(void *)(a4 + 48) + v22 * v18, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    sub_1D446A828();
    FMIPUnknownItem.hash(into:)((uint64_t)v28);
    sub_1D446A888();
    unint64_t v23 = sub_1D446A218();
    *(void *)(v16 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t result = sub_1D442F2A0((uint64_t)v11, *(void *)(v12 + 48) + v23 * v22, (uint64_t (*)(void))type metadata accessor for FMIPUnknownItem);
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1D442E0D4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1D42D5DA0(&qword_1EA6CA198);
  uint64_t result = sub_1D446A348();
  uint64_t v9 = result;
  uint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    id v18 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_1D446A108();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_1D442E334(os_log_type_t a1)
{
  if (qword_1EA6C8F50 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EA6E46B8);
  os_log_type_t v3 = a1;
  log = sub_1D44698F8();
  if (os_log_type_enabled(log, a1))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v7 = v5;
    sub_1D446A378();
    sub_1D4469C08();
    FMIPAccessoryError.localizedDescription.getter();
    sub_1D4469C08();
    swift_bridgeObjectRelease();
    sub_1D4469C08();
    sub_1D42CB9EC(0, 0xE000000000000000, &v7);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, log, v3, "FMIPUnknownAccessoryDiscoveryController: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v5, -1, -1);
    MEMORY[0x1D9447730](v4, -1, -1);
  }
  else
  {
  }
}

void sub_1D442E55C(os_log_type_t a1)
{
  if (qword_1EA6C8F50 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EA6E46B8);
  os_log_type_t v3 = a1;
  log = sub_1D44698F8();
  if (os_log_type_enabled(log, a1))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v7 = v5;
    sub_1D446A378();
    sub_1D4469C08();
    swift_getErrorValue();
    sub_1D446A7D8();
    sub_1D4469C08();
    swift_bridgeObjectRelease();
    sub_1D4469C08();
    sub_1D42CB9EC(0, 0xE000000000000000, &v7);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, log, v3, "FMIPUnknownAccessoryDiscoveryController: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v5, -1, -1);
    MEMORY[0x1D9447730](v4, -1, -1);
  }
  else
  {
  }
}

void sub_1D442E788(os_log_type_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_1EA6C8F50 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EA6E46B8);
  log = sub_1D44698F8();
  if (os_log_type_enabled(log, a1))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v10 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_1D42CB9EC(a2, a3, &v10);
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, log, a1, "FMIPUnknownAccessoryDiscoveryController: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v8, -1, -1);
    MEMORY[0x1D9447730](v7, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1D442E92C()
{
  return sub_1D4428D60(v0);
}

uint64_t sub_1D442E934()
{
  swift_release();
  sub_1D43C90E0(*(id *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return MEMORY[0x1F4186498](v0, 33, 7);
}

uint64_t sub_1D442E978()
{
  return sub_1D4428940(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_1D442E984()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D442E9BC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1D442E9E4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1D442EA0C()
{
  return sub_1D4427DC4(*(void (**)(char *))(v0 + 16));
}

uint64_t sub_1D442EA14()
{
  uint64_t v1 = sub_1D4469498();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D442EAE0()
{
  uint64_t v1 = *(void *)(sub_1D4469498() - 8);
  uint64_t v2 = *(void (**)(char *))(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1D4427CD0(v2, v3, v4);
}

uint64_t sub_1D442EB48()
{
  return sub_1D442EC80(2, 1);
}

uint64_t sub_1D442EB54()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1D442EB90(void *a1)
{
  sub_1D4426CA0(a1, *(NSObject **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1D442EBA4()
{
  return sub_1D442EC80(0, 0);
}

void sub_1D442EBB4()
{
  sub_1D44272B4(*(void (**)(void **))(v0 + 16), *(void *)(v0 + 24), *(id *)(v0 + 32));
}

uint64_t sub_1D442EBD8()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1D442EC28(void *a1)
{
  sub_1D4425DD4(a1, *(NSObject **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1D442EC40()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D442EC80(uint64_t result, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    char v5 = result;
    char v6 = a2 & 1;
    return v3(&v4);
  }
  return result;
}

uint64_t sub_1D442ECD0()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D442ED18(uint64_t a1)
{
  return sub_1D4429214(a1);
}

uint64_t sub_1D442ED20()
{
  return sub_1D4429438();
}

void sub_1D442ED28(void *a1)
{
}

void sub_1D442ED30()
{
}

uint64_t sub_1D442ED38@<X0>(BOOL *a1@<X8>)
{
  return sub_1D44296E0(a1);
}

uint64_t sub_1D442ED54()
{
  return sub_1D4427EFC(v0);
}

uint64_t sub_1D442ED5C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D442ED70()
{
  return sub_1D4427F8C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D442ED78()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D442ED88(os_log_type_t a1)
{
  if (qword_1EA6C8F50 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EA6E46B8);
  os_log_type_t v3 = a1;
  log = sub_1D44698F8();
  if (os_log_type_enabled(log, a1))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v7 = v5;
    sub_1D446A378();
    sub_1D4469C08();
    sub_1D4275AD0(0, &qword_1EA6CA380);
    sub_1D4425540();
    sub_1D4469EE8();
    sub_1D4469C08();
    swift_bridgeObjectRelease();
    sub_1D4469C08();
    sub_1D42CB9EC(0, 0xE000000000000000, &v7);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, log, v3, "FMIPUnknownAccessoryDiscoveryController: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v5, -1, -1);
    MEMORY[0x1D9447730](v4, -1, -1);
  }
  else
  {
  }
}

void sub_1D442EFC0(os_log_type_t a1)
{
  if (qword_1EA6C8F50 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EA6E46B8);
  os_log_type_t v3 = a1;
  log = sub_1D44698F8();
  if (os_log_type_enabled(log, a1))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v7 = v5;
    sub_1D446A378();
    sub_1D4469C08();
    type metadata accessor for FMIPUnknownItem();
    sub_1D42DDBAC(&qword_1EA6CA178, (void (*)(uint64_t))type metadata accessor for FMIPUnknownItem);
    sub_1D4469EE8();
    sub_1D4469C08();
    swift_bridgeObjectRelease();
    sub_1D4469C08();
    sub_1D42CB9EC(0, 0xE000000000000000, &v7);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, log, v3, "FMIPUnknownAccessoryDiscoveryController: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v5, -1, -1);
    MEMORY[0x1D9447730](v4, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1D442F224()
{
  return sub_1D4428570(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D442F230()
{
  return sub_1D44285E4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D442F238(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D442F2A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D442F308(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D442F444()
{
  uint64_t v0 = sub_1D4469498();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42CB900();
  sub_1D4469438();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void *FMIPItemImageCache.__allocating_init(converter:)(uint64_t a1, uint64_t a2)
{
  return FMImageCache.init(converter:)(a1, a2);
}

uint64_t FMIPItemImageCache.__deallocating_deinit()
{
  FMImageCache.deinit();
  return swift_deallocClassInstance();
}

BOOL static FMIPSiriBaseResponseError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FMIPSiriBaseResponseError.hash(into:)()
{
  return sub_1D446A838();
}

uint64_t FMIPSiriBaseResponseError.hashValue.getter()
{
  return sub_1D446A888();
}

uint64_t FMIPSiriSyncDeviceData.pushToken.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPSiriSyncDeviceData.ownersDevices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FMIPSiriOwnerDevices.ownerFirstName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPSiriOwnerDevices.ownerLastName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPSiriOwnerDevices.deviceNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FMIPSiriController.__allocating_init()()
{
  uint64_t v0 = sub_1D42D5DA0(&qword_1EBD80058);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1D4469778();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  type metadata accessor for FMIPSiriController();
  uint64_t v4 = swift_allocObject();
  sub_1D442F7CC((uint64_t)v2);
  return v4;
}

uint64_t type metadata accessor for FMIPSiriController()
{
  return self;
}

uint64_t sub_1D442F7CC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD80058);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 16) = 0xD000000000000028;
  *(void *)(v1 + 24) = 0x80000001D4484410;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D4469928();
  sub_1D42D7FAC(v7, (uint64_t)qword_1EBD83228);
  uint64_t v8 = sub_1D44698F8();
  os_log_type_t v9 = sub_1D446A038();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_1D4271000, v8, v9, "FMIPSiriController: initialized", v10, 2u);
    MEMORY[0x1D9447730](v10, -1, -1);
  }

  sub_1D4469798();
  swift_allocObject();
  sub_1D4469788();
  sub_1D42E822C(a1, (uint64_t)v6);
  sub_1D4469818();
  swift_allocObject();
  *(void *)(v2 + 32) = sub_1D4469808();
  uint64_t v11 = sub_1D44697B8();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1D44697A8();
  uint64_t v16 = v11;
  uint64_t v17 = MEMORY[0x1E4F616E0];
  *(void *)&long long v15 = v12;
  sub_1D44313A0(a1);
  sub_1D42E4A0C(&v15, v2 + 40);
  return v2;
}

uint64_t sub_1D442F9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = v2;
  sub_1D42C26F4((void *)(v2 + 40), *(void *)(v2 + 64));
  swift_retain();
  swift_retain();
  sub_1D4469768();
  return swift_release();
}

void sub_1D442FA84(id a1, uint64_t a2, char a3, void (*a4)(uint64_t *), uint64_t a5)
{
  if (a3)
  {
    id v10 = a1;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1D4469928();
    sub_1D42D7FAC(v11, (uint64_t)qword_1EBD83228);
    id v12 = a1;
    id v13 = a1;
    uint64_t v14 = sub_1D44698F8();
    os_log_type_t v15 = sub_1D446A018();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v22[0] = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      id v18 = a1;
      sub_1D42D5DA0(&qword_1EA6C9360);
      uint64_t v19 = sub_1D4469B68();
      sub_1D42CB9EC(v19, v20, v22);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D443127C(a1, a2, 1);
      sub_1D443127C(a1, a2, 1);
      _os_log_impl(&dword_1D4271000, v14, v15, "FMIPSiriController topic token resulted in a failure of %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v17, -1, -1);
      MEMORY[0x1D9447730](v16, -1, -1);
    }
    else
    {
      sub_1D443127C(a1, a2, 1);
      sub_1D443127C(a1, a2, 1);
    }

    v22[1] = 0;
    v22[2] = 0;
    v22[0] = (uint64_t)a1;
    char v23 = 1;
    id v21 = a1;
    a4(v22);
    sub_1D443127C(a1, a2, 1);
    sub_1D443127C(a1, a2, 1);
  }
  else
  {
    os_log_type_t v9 = (void *)swift_allocObject();
    v9[2] = a1;
    v9[3] = a2;
    v9[4] = a4;
    v9[5] = a5;
    sub_1D443126C(a1, a2, 0);
    swift_retain();
    sub_1D44300DC((uint64_t)a1, a2, (uint64_t)sub_1D4431260, (uint64_t)v9);
    swift_release();
  }
}

void sub_1D442FD74(void *a1, uint64_t a2, char a3)
{
  sub_1D442FA84(a1, a2, a3 & 1, *(void (**)(uint64_t *))(v3 + 16), *(void *)(v3 + 24));
}

void sub_1D442FD84(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void))
{
  sub_1D44310A4(a1, (uint64_t)v45);
  uint64_t v8 = (void *)v45[0];
  uint64_t v9 = v45[4];
  sub_1D44310A4(a1, (uint64_t)v46);
  char v10 = v47;
  if (v47)
  {
    id v11 = v8;
    uint64_t v12 = 0;
    a3 = 0;
    a2 = v8;
  }
  else
  {
    int64_t v13 = *(void *)(v9 + 16);
    if (v13)
    {
      char v31 = v47;
      uint64_t v32 = a2;
      uint64_t v33 = a3;
      uint64_t v34 = a4;
      swift_bridgeObjectRetain();
      uint64_t v30 = a1;
      sub_1D44312DC(a1, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1D4431334);
      v43[0] = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1D4337330(0, v13, 0);
      uint64_t v14 = 0;
      uint64_t v12 = v43[0];
      int64_t v35 = v13;
      uint64_t v36 = v9 + 32;
      int64_t v15 = v13;
      do
      {
        uint64_t v16 = (uint64_t *)(v36 + 40 * v14);
        uint64_t v17 = *v16;
        uint64_t v39 = v16[2];
        uint64_t v40 = v16[3];
        uint64_t v18 = v16[4];
        int64_t v19 = *(void *)(v18 + 16);
        uint64_t v41 = v16[1];
        if (v19)
        {
          uint64_t v37 = *v16;
          uint64_t v38 = v12;
          uint64_t v42 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          sub_1D4337070(0, v19, 0);
          uint64_t v20 = v42;
          id v21 = (uint64_t *)(v18 + 40);
          do
          {
            uint64_t v22 = *(v21 - 1);
            uint64_t v23 = *v21;
            unint64_t v25 = *(void *)(v42 + 16);
            unint64_t v24 = *(void *)(v42 + 24);
            swift_bridgeObjectRetain();
            if (v25 >= v24 >> 1) {
              sub_1D4337070(v24 > 1, v25 + 1, 1);
            }
            v21 += 2;
            *(void *)(v42 + 16) = v25 + 1;
            uint64_t v26 = v42 + 16 * v25;
            *(void *)(v26 + 32) = v22;
            *(void *)(v26 + 40) = v23;
            --v19;
          }
          while (v19);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v17 = v37;
          uint64_t v12 = v38;
          int64_t v15 = v35;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v20 = MEMORY[0x1E4FBC860];
        }
        v43[0] = v12;
        unint64_t v28 = *(void *)(v12 + 16);
        unint64_t v27 = *(void *)(v12 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1D4337330(v27 > 1, v28 + 1, 1);
          uint64_t v12 = v43[0];
        }
        ++v14;
        *(void *)(v12 + 16) = v28 + 1;
        uint64_t v29 = (void *)(v12 + 40 * v28);
        id v29[4] = v39;
        v29[5] = v40;
        v29[6] = v17;
        v29[7] = v41;
        unsigned char v29[8] = v20;
      }
      while (v14 != v15);
      swift_bridgeObjectRelease();
      sub_1D44312DC(v30, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1D443110C);
      a4 = v34;
      a2 = v32;
      a3 = v33;
      char v10 = v31;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = MEMORY[0x1E4FBC860];
    }
  }
  v43[0] = a2;
  v43[1] = a3;
  v43[2] = v12;
  char v44 = v10;
  a4(v43);
  sub_1D443128C(a2, a3, v12, v10);
}

uint64_t sub_1D4430080()
{
  sub_1D42C26F4((void *)(v0 + 40), *(void *)(v0 + 64));
  return sub_1D4469768();
}

uint64_t sub_1D44300DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for FMIPSyncDeviceRequest();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1D43E64D0((uint8_t *)0x69766544636E7973, 0xEA00000000006563, a1, a2);
  void v18[3] = v10;
  v18[4] = MEMORY[0x1E4F616D0];
  v18[0] = v11;
  v17[3] = v10;
  v17[4] = sub_1D443103C();
  uint64_t v12 = self;
  swift_retain_n();
  id v13 = objc_msgSend(v12, sel_processInfo, v11);
  id v14 = objc_msgSend(v13, sel_processName);

  sub_1D4469B38();
  int64_t v15 = (void *)swift_allocObject();
  void v15[2] = a3;
  uint64_t v15[3] = a4;
  v15[4] = v5;
  swift_retain();
  swift_retain();
  sub_1D44697F8();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1D42BEC64((uint64_t)v17);
  return sub_1D42BEC64((uint64_t)v18);
}

uint64_t sub_1D443028C(uint64_t a1, unint64_t a2, void *a3, void (*a4)(unsigned char *))
{
  sub_1D4430304(a3, a1, a2, (uint64_t)v6);
  sub_1D44310A4((uint64_t)v6, (uint64_t)v7);
  a4(v7);
  return sub_1D44312DC((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1D443110C);
}

__n128 sub_1D4430304@<Q0>(id a1@<X2>, uint64_t a2@<X0>, unint64_t a3@<X1>, uint64_t a4@<X8>)
{
  if (a1)
  {
    id v6 = a1;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1D4469928();
    sub_1D42D7FAC(v7, (uint64_t)qword_1EBD83228);
    id v8 = a1;
    id v9 = a1;
    uint64_t v10 = sub_1D44698F8();
    os_log_type_t v11 = sub_1D446A018();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(void *)&long long v37 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      swift_getErrorValue();
      uint64_t v14 = sub_1D446A7D8();
      sub_1D42CB9EC(v14, v15, (uint64_t *)&v37);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, v10, v11, "FMIPSiriController: didn't complete because of error: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v13, -1, -1);
      MEMORY[0x1D9447730](v12, -1, -1);
    }
    else
    {
    }
    *(void *)a4 = a1;
    result.n128_u64[0] = 0;
    *(_OWORD *)(a4 + 8) = 0u;
    *(_OWORD *)(a4 + 24) = 0u;
    *(_OWORD *)(a4 + 40) = 0u;
    *(_OWORD *)(a4 + 56) = 0u;
LABEL_21:
    *(unsigned char *)(a4 + 72) = 1;
    return result;
  }
  if (a3 >> 60 == 15)
  {
LABEL_16:
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1D4469928();
    sub_1D42D7FAC(v19, (uint64_t)qword_1EBD83228);
    uint64_t v20 = sub_1D44698F8();
    os_log_type_t v21 = sub_1D446A018();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_1D4271000, v20, v21, "FMIPSiriController: received empty data", v22, 2u);
      MEMORY[0x1D9447730](v22, -1, -1);
    }

    sub_1D4431178();
    uint64_t v23 = swift_allocError();
    unsigned char *v24 = 1;
    *(void *)a4 = v23;
    goto LABEL_21;
  }
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 == a2 >> 32) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 2uLL:
      if (*(void *)(a2 + 16) == *(void *)(a2 + 24)) {
        goto LABEL_16;
      }
LABEL_13:
      sub_1D42DD034(a2, a3);
      goto LABEL_14;
    case 3uLL:
      goto LABEL_9;
    default:
      if ((a3 & 0xFF000000000000) == 0)
      {
LABEL_9:
        sub_1D42DD08C(a2, a3);
        goto LABEL_16;
      }
LABEL_14:
      sub_1D4469168();
      swift_allocObject();
      sub_1D4469158();
      sub_1D44311CC();
      sub_1D4469148();
      swift_release();
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1D4469928();
      sub_1D42D7FAC(v25, (uint64_t)qword_1EBD83228);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v26 = sub_1D44698F8();
      os_log_type_t v27 = sub_1D446A038();
      if (os_log_type_enabled(v26, v27))
      {
        unint64_t v28 = (uint8_t *)swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        *(_DWORD *)unint64_t v28 = 136315138;
        uint64_t v36 = v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_1D4469B68();
        sub_1D42CB9EC(v29, v30, &v36);
        sub_1D446A188();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D4271000, v26, v27, "FMIPSiriController: received response?: %s", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v35, -1, -1);
        MEMORY[0x1D9447730](v28, -1, -1);

        sub_1D42DD08C(a2, a3);
      }
      else
      {
        sub_1D42DD08C(a2, a3);

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      uint64_t v31 = v38;
      uint64_t v32 = v39;
      __n128 result = v40;
      long long v33 = v41;
      uint64_t v34 = v42;
      *(_OWORD *)a4 = v37;
      *(void *)(a4 + 16) = v31;
      *(void *)(a4 + 24) = v32;
      *(__n128 *)(a4 + 32) = result;
      *(_OWORD *)(a4 + 48) = v33;
      *(void *)(a4 + 64) = v34;
      *(unsigned char *)(a4 + 72) = 0;
      break;
  }
  return result;
}

uint64_t FMIPSiriController.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_1D42BEC64(v0 + 40);
  return v0;
}

uint64_t FMIPSiriController.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_1D42BEC64(v0 + 40);
  return swift_deallocClassInstance();
}

unint64_t sub_1D4430B64()
{
  unint64_t result = qword_1EA6CB6C8;
  if (!qword_1EA6CB6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB6C8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMIPSiriBaseResponseError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    char *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4430C84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPSiriBaseResponseError()
{
  return &type metadata for FMIPSiriBaseResponseError;
}

void *sub_1D4430CC0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FMIPSiriSyncDeviceData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FMIPSiriSyncDeviceData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FMIPSiriSyncDeviceData()
{
  return &type metadata for FMIPSiriSyncDeviceData;
}

uint64_t destroy for FMIPSiriOwnerDevices()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FMIPSiriOwnerDevices(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FMIPSiriOwnerDevices(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FMIPSiriOwnerDevices(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMIPSiriOwnerDevices(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMIPSiriOwnerDevices(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPSiriOwnerDevices()
{
  return &type metadata for FMIPSiriOwnerDevices;
}

uint64_t method lookup function for FMIPSiriController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPSiriController);
}

uint64_t dispatch thunk of FMIPSiriController.getVoiceAssistantSyncDevices(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of FMIPSiriController.getVoiceAssistantPushToken(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

unint64_t sub_1D443103C()
{
  unint64_t result = qword_1EBD7FF70;
  if (!qword_1EBD7FF70)
  {
    type metadata accessor for FMIPSyncDeviceRequest();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7FF70);
  }
  return result;
}

uint64_t sub_1D4431098(uint64_t a1, unint64_t a2, void *a3)
{
  return sub_1D443028C(a1, a2, a3, *(void (**)(unsigned char *))(v3 + 16));
}

uint64_t sub_1D44310A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD80048);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D443110C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a10)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1D4431178()
{
  unint64_t result = qword_1EA6CB6D0;
  if (!qword_1EA6CB6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB6D0);
  }
  return result;
}

unint64_t sub_1D44311CC()
{
  unint64_t result = qword_1EBD7FFC8;
  if (!qword_1EBD7FFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD7FFC8);
  }
  return result;
}

uint64_t sub_1D4431220()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1D4431260(uint64_t a1)
{
  sub_1D442FD84(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

id sub_1D443126C(void *a1, uint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

void sub_1D443127C(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

void sub_1D443128C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D44312DC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 72);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), v4);
  return a1;
}

id sub_1D4431334(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a10)
  {
    return a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_1D44313A0(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD80058);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FMIPRemoveRequest()
{
  uint64_t result = qword_1EA6CB6D8;
  if (!qword_1EA6CB6D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D443144C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D443149C()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + qword_1EA6E4A50) + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v10 = v3;
  *((void *)&v10 + 1) = v2;
  uint64_t v4 = qword_1EA6C9D80;
  uint64_t v5 = *(void *)(v0 + qword_1EA6C9D80);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  sub_1D433313C((void *)(v5 + 16), v9);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  swift_release();
  sub_1D42C5494(&v10, v9);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D42C4E78(v9, 0x656369766564, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v0 + v4);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  sub_1D4306B48((void *)(v7 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44315EC()
{
  return swift_release();
}

uint64_t sub_1D44315FC()
{
  sub_1D427B074();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D4431670()
{
  return type metadata accessor for FMIPRemoveRequest();
}

uint64_t sub_1D4431688()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation__isFinished);
}

void sub_1D4431760(char a1)
{
  uint64_t v3 = (void *)sub_1D4469B08();
  objc_msgSend(v1, sel_willChangeValueForKey_, v3);

  *((unsigned char *)v1 + OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation__isFinished) = a1;
  id v4 = (id)sub_1D4469B08();
  objc_msgSend(v1, sel_didChangeValueForKey_, v4);
}

id FMIPItemImageCacheOperation.__allocating_init(request:completion:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = objc_allocWithZone(v3);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  char v10 = *((unsigned char *)a1 + 16);
  uint64_t v11 = a1[3];
  long long v12 = *((_OWORD *)a1 + 2);
  uint64_t v13 = a1[6];
  v7[OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation__isFinished] = 0;
  uint64_t v14 = &v7[OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation_request];
  *(void *)uint64_t v14 = v8;
  *((void *)v14 + 1) = v9;
  v14[16] = v10;
  *((void *)v14 + 3) = v11;
  *((_OWORD *)v14 + 2) = v12;
  *((void *)v14 + 6) = v13;
  unint64_t v15 = &v7[OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation_completion];
  void *v15 = a2;
  v15[1] = a3;
  v17.receiver = v7;
  v17.super_class = v3;
  return objc_msgSendSuper2(&v17, sel_init);
}

id FMIPItemImageCacheOperation.init(request:completion:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  char v6 = *((unsigned char *)a1 + 16);
  uint64_t v7 = a1[3];
  long long v8 = *((_OWORD *)a1 + 2);
  uint64_t v9 = a1[6];
  v3[OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation__isFinished] = 0;
  char v10 = &v3[OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation_request];
  *(void *)char v10 = v4;
  *((void *)v10 + 1) = v5;
  v10[16] = v6;
  *((void *)v10 + 3) = v7;
  *((_OWORD *)v10 + 2) = v8;
  *((void *)v10 + 6) = v9;
  uint64_t v11 = &v3[OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation_completion];
  *uint64_t v11 = a2;
  v11[1] = a3;
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for FMIPItemImageCacheOperation();
  return objc_msgSendSuper2(&v13, sel_init);
}

void sub_1D443194C()
{
  if (objc_msgSend(v0, sel_isCancelled))
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1D4469928();
    sub_1D42D7FAC(v1, (uint64_t)qword_1EBD83228);
    oslog = sub_1D44698F8();
    os_log_type_t v2 = sub_1D446A038();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl(&dword_1D4271000, oslog, v2, "FMItemImageCreationOperation: operation cancelled", v3, 2u);
      MEMORY[0x1D9447730](v3, -1, -1);
    }
  }
}

uint64_t sub_1D4431B6C()
{
  uint64_t v1 = sub_1D4469958();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  long long v41 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1D44699B8();
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  unsigned __int8 v39 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (objc_class *)type metadata accessor for FMIPItemImageCacheOperation();
  v50.receiver = v0;
  v50.super_class = v5;
  objc_msgSendSuper2(&v50, sel_start);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EBD83228);
  uint64_t v7 = v0;
  long long v8 = sub_1D44698F8();
  os_log_type_t v9 = sub_1D446A038();
  char v10 = &qword_1EA6CB000;
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = *(void *)&v7[OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation_request];
    uint64_t v14 = *(void *)&v7[OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation_request + 8];
    char v15 = v7[OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation_request + 16];
    uint64_t v16 = *(void **)&v7[OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation_request + 24];
    long long v17 = *(_OWORD *)&v7[OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation_request + 32];
    uint64_t v18 = *(void *)&v7[OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation_request + 48];
    uint64_t v43 = v12;
    uint64_t aBlock = v13;
    uint64_t v45 = v14;
    LOBYTE(v46) = v15;
    char v47 = v16;
    long long v48 = v17;
    uint64_t v49 = v18;
    uint64_t v19 = FMIPItemImageCacheRequest.fileName.getter();
    uint64_t aBlock = sub_1D42CB9EC(v19, v20, &v43);
    sub_1D446A188();

    char v10 = &qword_1EA6CB000;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v8, v9, "FMItemImageCreationOperation: started for filename: %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v12, -1, -1);
    MEMORY[0x1D9447730](v11, -1, -1);
  }
  else
  {
  }
  os_log_type_t v21 = &v7[v10[222]];
  uint64_t v22 = *((void *)v21 + 1);
  char v23 = v21[16];
  unint64_t v24 = (void *)*((void *)v21 + 3);
  uint64_t v26 = (void *)*((void *)v21 + 4);
  uint64_t v25 = *((void *)v21 + 5);
  uint64_t v27 = *((void *)v21 + 6);
  uint64_t aBlock = *(void *)v21;
  uint64_t v45 = v22;
  LOBYTE(v46) = v23;
  char v47 = v24;
  *(void *)&long long v48 = v26;
  *((void *)&v48 + 1) = v25;
  uint64_t v49 = v27;
  swift_bridgeObjectRetain();
  id v28 = v26;
  swift_bridgeObjectRetain();
  size_t v29 = sub_1D4432208((uint64_t)&aBlock);
  unint64_t v31 = v30;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7E860);
  uint64_t v32 = (void *)sub_1D446A098();
  uint64_t v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v34 = (void *)swift_allocObject();
  v34[2] = v33;
  v34[3] = v29;
  v34[4] = v31;
  *(void *)&long long v48 = sub_1D4432C84;
  *((void *)&v48 + 1) = v34;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v45 = 1107296256;
  uint64_t v46 = sub_1D42BD950;
  char v47 = &unk_1F2C11628;
  uint64_t v35 = _Block_copy(&aBlock);
  sub_1D42E83BC(v29, v31);
  swift_release();
  uint64_t v36 = v39;
  sub_1D4469988();
  uint64_t aBlock = MEMORY[0x1E4FBC860];
  sub_1D42C62B4((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42E2378();
  long long v37 = v41;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v36, v37, v35);
  _Block_release(v35);

  sub_1D42DD08C(v29, v31);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v37, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v36, v42);
}

void sub_1D4432098(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1D9447840](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    long long v8 = *(void (**)(void *, unint64_t, uint64_t))(v6
                                                                  + OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation_completion);
    if (a3 >> 60 == 15)
    {
      sub_1D42DC590();
      os_log_type_t v9 = (void *)swift_allocError();
      *char v10 = 0;
      swift_retain();
      v8(v9, 0, 1);

      swift_release();
    }
    else
    {
      sub_1D42E83BC(a2, a3);
      swift_retain();
      v8((void *)a2, a3, 0);
      swift_release();
      sub_1D42DD08C(a2, a3);
    }
    objc_msgSend(v7, sel_setFinished_, 1);
  }
}

size_t sub_1D4432208(uint64_t a1)
{
  uint64_t v3 = sub_1D4469718();
  uint64_t v4 = *(void *)(v3 - 8);
  size_t result = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *(unsigned __int8 *)(a1 + 16);
  double v9 = 37.0;
  if (*(unsigned char *)(a1 + 16)) {
    double v9 = 66.0;
  }
  double v10 = v9 * *(double *)(a1 + 24);
  if ((~*(void *)&v10 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v10 >= 9.22337204e18)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v25[1] = v1;
  uint64_t v11 = *(CGColor **)(a1 + 32);
  int64_t v12 = (uint64_t)v10;
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  CGContextRef v14 = CGBitmapContextCreate(0, v12, v12, 8uLL, 0, DeviceRGB, 1u);

  if (!v14) {
    return 0;
  }
  char v15 = v14;
  CGContextSetFillColorWithColor(v15, v11);
  v26.origin.x = 0.0;
  v26.origin.y = 0.0;
  v26.size.width = (double)v12;
  v26.size.height = (double)v12;
  CGContextAddEllipseInRect(v15, v26);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E4F1DA40], v3);
  sub_1D4469FD8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  double v16 = 0.7;
  if (v8) {
    double v16 = 0.6;
  }
  long long v17 = sub_1D4432CBC(v16 * (double)v12);
  if (!v17) {
    goto LABEL_20;
  }
  uint64_t v18 = v17;
  size_t result = CGImageGetWidth(v17);
  if (__OFSUB__(v12, result)) {
    goto LABEL_27;
  }
  size_t result = CGImageGetHeight(v18);
  if (!__OFSUB__(v12, result))
  {
    CGImageGetWidth(v18);
    CGImageGetHeight(v18);
    sub_1D4469FC8();
    CGImageRef Image = CGBitmapContextCreateImage(v15);
    if (!Image)
    {

      return 0;
    }
    CGImageRef v20 = Image;
    Mutable = CFDataCreateMutable(0, 0);
    if (!Mutable)
    {

      return (size_t)Mutable;
    }
    uint64_t v22 = (__CFString *)sub_1D4469B08();
    char v23 = CGImageDestinationCreateWithData(Mutable, v22, 1uLL, 0);

    if (v23)
    {
      CGImageDestinationAddImage(v23, v20, 0);
      if (CGImageDestinationFinalize(v23))
      {
        unint64_t v24 = Mutable;
        Mutable = (__CFData *)sub_1D44694E8();

        return (size_t)Mutable;
      }

      return 0;
    }

LABEL_20:
    return 0;
  }
LABEL_28:
  __break(1u);
  return result;
}

CGImageRef sub_1D44325C8()
{
  uint64_t v1 = v0;
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  size_t Width = CGImageGetWidth(v0);
  size_t Height = CGImageGetHeight(v1);
  size_t v4 = CGImageGetWidth(v1);
  DeviceGray = CGColorSpaceCreateDeviceGray();
  CGContextRef v6 = CGBitmapContextCreate(0, Width, Height, 8uLL, v4, DeviceGray, 7u);

  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  CGImageGetWidth(v1);
  CGImageGetHeight(v1);
  sub_1D4469FC8();

  CGImageRef Image = CGBitmapContextCreateImage(v7);
  if (!Image)
  {
LABEL_50:

    return 0;
  }
  double v9 = Image;
  double v10 = v1;
  uint64_t v11 = CGImageGetDataProvider(Image);
  CGImageRef v12 = v11;
  if (!v11)
  {

    return v12;
  }
  CFDataRef v13 = CGDataProviderCopyData(v11);
  if (!v13)
  {

    goto LABEL_50;
  }
  CFDataRef v14 = v13;
  uint64_t v15 = sub_1D44694E8();
  unint64_t v46 = v16;

  size_t v17 = CGImageGetWidth(v10);
  size_t v18 = CGImageGetHeight(v10);
  size_t v19 = CGImageGetHeight(v10);
  if ((v19 & 0x8000000000000000) != 0)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  size_t v20 = v19;
  uint64_t v48 = v18;
  uint64_t v49 = v17;
  CGImageRef v42 = v12;
  uint64_t v43 = v9;
  char v44 = v7;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  if (v19)
  {
    uint64_t v23 = 0;
    size_t v45 = v19;
    char v47 = v10;
    while (1)
    {
      if (v23 == v20) {
        goto LABEL_62;
      }
      size_t v24 = CGImageGetWidth(v10);
      if ((v24 & 0x8000000000000000) != 0) {
        goto LABEL_63;
      }
      size_t v25 = v24;
      if (v24) {
        break;
      }
LABEL_8:
      ++v23;
      size_t v20 = v45;
      if (v23 == v45) {
        goto LABEL_46;
      }
    }
    uint64_t v26 = 0;
    while (2)
    {
      if (v25 == v26)
      {
        __break(1u);
      }
      else
      {
        uint64_t v29 = v26;
        int64_t v30 = CGImageGetWidth(v10);
        int64_t v31 = v30 * v23;
        if ((unsigned __int128)(v30 * (__int128)v23) >> 64 == (v30 * v23) >> 63)
        {
          uint64_t v32 = v31 + v26;
          if (!__OFADD__(v31, v26))
          {
            ++v26;
            switch(v46 >> 62)
            {
              case 1uLL:
                if (v32 < (int)v15 || v32 >= v15 >> 32) {
                  goto LABEL_57;
                }
                uint64_t v34 = sub_1D44692B8();
                if (!v34) {
                  goto LABEL_68;
                }
                uint64_t v35 = v34;
                uint64_t v36 = sub_1D44692C8();
                uint64_t v37 = v32 - v36;
                if (!__OFSUB__(v32, v36)) {
                  goto LABEL_43;
                }
                goto LABEL_59;
              case 2uLL:
                if (v32 < *(void *)(v15 + 16)) {
                  goto LABEL_58;
                }
                if (v32 >= *(void *)(v15 + 24)) {
                  goto LABEL_60;
                }
                uint64_t v38 = sub_1D44692B8();
                if (!v38) {
                  goto LABEL_69;
                }
                uint64_t v35 = v38;
                uint64_t v39 = sub_1D44692C8();
                uint64_t v37 = v32 - v39;
                if (__OFSUB__(v32, v39)) {
                  goto LABEL_61;
                }
LABEL_43:
                int v40 = *(unsigned __int8 *)(v35 + v37);
                double v10 = v47;
                if (v40)
                {
LABEL_13:
                  if (v29 >= v49) {
                    uint64_t v27 = v49;
                  }
                  else {
                    uint64_t v27 = v29;
                  }
                  if (v22 <= v29) {
                    uint64_t v22 = v29;
                  }
                  uint64_t v28 = v48;
                  if (v23 < v48) {
                    uint64_t v28 = v23;
                  }
                  uint64_t v48 = v28;
                  uint64_t v49 = v27;
                  if (v21 <= v23) {
                    uint64_t v21 = v23;
                  }
                }
LABEL_22:
                if (v25 != v26) {
                  continue;
                }
                goto LABEL_8;
              case 3uLL:
                goto LABEL_67;
              default:
                if (v32 >= BYTE6(v46)) {
                  goto LABEL_56;
                }
                uint64_t v50 = v15;
                int v51 = v46;
                __int16 v52 = WORD2(v46);
                if (!*((unsigned char *)&v50 + v32)) {
                  goto LABEL_22;
                }
                goto LABEL_13;
            }
          }
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
      }
      break;
    }
    __break(1u);
    goto LABEL_55;
  }
LABEL_46:
  if (__OFSUB__(v22, v49))
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  if (__OFSUB__(v21, v48))
  {
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
  }
  v54.origin.x = (double)v49;
  v54.origin.y = (double)v48;
  v54.size.width = (double)(v22 - v49) + 1.0;
  v54.size.height = (double)(v21 - v48) + 1.0;
  CGImageRef v12 = CGImageCreateWithImageInRect(v10, v54);

  sub_1D42DCFDC(v15, v46);
  return v12;
}

id FMIPItemImageCacheOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void FMIPItemImageCacheOperation.init()()
{
}

id FMIPItemImageCacheOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMIPItemImageCacheOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D4432B54(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  CGContextRef v6 = (objc_class *)type metadata accessor for FMIPItemImageCacheOperation();
  uint64_t v7 = objc_allocWithZone(v6);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  char v10 = *((unsigned char *)a1 + 16);
  uint64_t v11 = a1[3];
  long long v12 = *((_OWORD *)a1 + 2);
  uint64_t v13 = a1[6];
  v7[OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation__isFinished] = 0;
  CFDataRef v14 = &v7[OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation_request];
  *(void *)CFDataRef v14 = v8;
  *((void *)v14 + 1) = v9;
  v14[16] = v10;
  *((void *)v14 + 3) = v11;
  *((_OWORD *)v14 + 2) = v12;
  *((void *)v14 + 6) = v13;
  uint64_t v15 = &v7[OBJC_IVAR____TtC8FMIPCore27FMIPItemImageCacheOperation_completion];
  void *v15 = a2;
  v15[1] = a3;
  v17.receiver = v7;
  v17.super_class = v6;
  return objc_msgSendSuper2(&v17, sel_init);
}

uint64_t sub_1D4432BFC()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D4432C34()
{
  swift_release();
  unint64_t v1 = *(void *)(v0 + 32);
  if (v1 >> 60 != 15) {
    sub_1D42DCFDC(*(void *)(v0 + 24), v1);
  }
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1D4432C84()
{
  sub_1D4432098(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t method lookup function for FMIPItemImageCacheOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPItemImageCacheOperation);
}

uint64_t dispatch thunk of FMIPItemImageCacheOperation.__allocating_init(request:completion:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

CGImageRef sub_1D4432CBC(double a1)
{
  objc_super v2 = v1;
  sub_1D42D5DA0(&qword_1EA6CB708);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1D4470B60;
  uint64_t v5 = (void *)*MEMORY[0x1E4F24538];
  type metadata accessor for CFString(0);
  *(void *)(v4 + 32) = v5;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = v7;
  *(void *)(v4 + 64) = 0x6C6F43656C707041;
  *(void *)(v4 + 72) = 0xEF696A6F6D45726FLL;
  uint64_t v8 = (void *)*MEMORY[0x1E4F245F0];
  *(void *)(v4 + 120) = v7;
  *(void *)(v4 + 88) = v6;
  *(void *)(v4 + 96) = v8;
  *(void *)(v4 + 152) = MEMORY[0x1E4FBC958];
  *(double *)(v4 + 128) = a1;
  sub_1D4275AD0(0, &qword_1EA6CB710);
  id v9 = v5;
  id v10 = v8;
  CFDictionaryRef v11 = (const __CFDictionary *)sub_1D4469FE8();
  long long v12 = CTFontDescriptorCreateWithAttributes(v11);
  CTFontRef v13 = CTFontCreateWithFontDescriptor(v12, 0.0, 0);
  sub_1D42D5DA0(&qword_1EA6CB718);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D446E050;
  uint64_t v15 = (void *)*MEMORY[0x1E4F243F0];
  *(void *)(inited + 32) = *MEMORY[0x1E4F243F0];
  *(void *)(inited + 40) = v13;
  id v16 = v15;
  objc_super v17 = v13;
  sub_1D43AABA4(inited);
  type metadata accessor for CTFont(0);
  sub_1D42C62B4(&qword_1EA6C9568, type metadata accessor for CFString);
  CFDictionaryRef v18 = (const __CFDictionary *)sub_1D4469A38();
  swift_bridgeObjectRelease();
  CFAllocatorRef v19 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  size_t v20 = (__CFString *)sub_1D4469B08();
  CFAttributedStringRef v21 = CFAttributedStringCreate(v19, v20, v18);

  if (v21)
  {
    uint64_t v22 = CTFramesetterCreateWithAttributedString(v21);
    v51.width = INFINITY;
    v49.location = 0;
    v49.length = 0;
    v51.height = INFINITY;
    CGSize v23 = CTFramesetterSuggestFrameSizeWithConstraints(v22, v49, 0, v51, 0);
    v52.origin.x = 0.0;
    v52.origin.y = 0.0;
    v52.size.width = v23.width;
    v52.size.height = v23.height;
    size_t v24 = CGPathCreateWithRect(v52, 0);
    v50.location = 0;
    v50.length = 0;
    CTFrameRef v25 = CTFramesetterCreateFrame(v22, v50, v24, 0);

    double v26 = v23.width + v23.width;
    if (v23.width + v23.width <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (v26 < 9.22337204e18)
    {
      if ((*(void *)&v26 & 0x7FF0000000000000) != 0x7FF0000000000000)
      {
        double v27 = v23.height + v23.height;
        if ((COERCE_UNSIGNED_INT64(v23.height + v23.height) & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          if (v27 > -9.22337204e18)
          {
            if (v27 < 9.22337204e18)
            {
              frame = v25;
              CFDictionaryRef v47 = v11;
              CTFrameRef v25 = v2;
              size_t v28 = (uint64_t)v26;
              size_t v29 = (uint64_t)v27;
              DeviceRGB = CGColorSpaceCreateDeviceRGB();
              CFDictionaryRef v11 = CGBitmapContextCreate(0, v28, v29, 8uLL, 0, DeviceRGB, 1u);

              CFAttributedStringRef v48 = v17;
              if (v11)
              {
                sub_1D4469FA8();
                sub_1D4469FB8();
                sub_1D4469FA8();
                sub_1D4469FB8();
                CTFrameDraw(frame, v11);
                CGImageRef Image = CGBitmapContextCreateImage(v11);
                if (Image)
                {
                  CGImageRef v32 = Image;
                  CGImageRef v33 = sub_1D44325C8();
                }
                else
                {
                  CGImageRef v33 = 0;
                }
                uint64_t v35 = v12;
                CFAttributedStringRef v41 = v21;
                uint64_t v36 = frame;
                goto LABEL_18;
              }
              if (qword_1EBD80068 == -1)
              {
LABEL_13:
                size_t v45 = v22;
                uint64_t v34 = sub_1D4469928();
                sub_1D42D7FAC(v34, (uint64_t)qword_1EBD83228);
                uint64_t v35 = v25;
                uint64_t v36 = sub_1D44698F8();
                os_log_type_t v37 = sub_1D446A038();
                if (os_log_type_enabled(v36, v37))
                {
                  os_log_type_t type = v37;
                  uint64_t v38 = (uint8_t *)swift_slowAlloc();
                  uint64_t v39 = (void *)swift_slowAlloc();
                  *(_DWORD *)uint64_t v38 = 138412290;
                  int v40 = v35;
                  sub_1D446A188();
                  void *v39 = v35;

                  _os_log_impl(&dword_1D4271000, v36, type, "FMItemImageCreationOperation: Created an nil context for request %@", v38, 0xCu);
                  sub_1D42D5DA0(&qword_1EBD7E830);
                  swift_arrayDestroy();
                  MEMORY[0x1D9447730](v39, -1, -1);
                  MEMORY[0x1D9447730](v38, -1, -1);
                  CGImageRef v33 = 0;
                  uint64_t v35 = v47;
                  CFAttributedStringRef v41 = v48;
                  uint64_t v22 = v18;
                  CFDictionaryRef v11 = v12;
                  CFDictionaryRef v18 = v21;
                  CFDictionaryRef v42 = frame;
                  CFAttributedStringRef v48 = (const __CFAttributedString *)v45;
LABEL_19:

                  long long v12 = v18;
                  CFDictionaryRef v18 = v42;
                  objc_super v17 = v48;
                  goto LABEL_20;
                }

                CGImageRef v33 = 0;
                CFAttributedStringRef v41 = v12;
                uint64_t v22 = v21;
                uint64_t v36 = v45;
                CFDictionaryRef v11 = frame;
LABEL_18:
                CFDictionaryRef v42 = v47;
                goto LABEL_19;
              }
LABEL_26:
              swift_once();
              goto LABEL_13;
            }
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  CGImageRef v33 = 0;
LABEL_20:

  return v33;
}

char sub_1D4433250@<W0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EBD7CDF8);
  char result = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 56);
  if (!v7) {
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for FMIPDevice();
    sub_1D44335FC(v7+ *(int *)(v9 + 120)+ ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80)), (uint64_t)v6);
    uint64_t v10 = type metadata accessor for FMIPLockMetadata();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v6, 1, v10) == 1)
    {
      char result = sub_1D4433664((uint64_t)v6);
LABEL_5:
      LOBYTE(v8) = 0;
      goto LABEL_8;
    }
    uint64_t v11 = *v6;
    sub_1D433F214((uint64_t)v6);
    char result = FMIPActionStatus.init(rawValue:)(qword_1D44798B8[v11]).value;
    LOBYTE(v8) = v13;
    if (v13 == 18) {
      LOBYTE(v8) = 0;
    }
  }
LABEL_8:
  *a1 = v8;
  return result;
}

uint64_t sub_1D44333A8(uint64_t a1)
{
  return sub_1D44333F4(a1);
}

uint64_t sub_1D44333F4(uint64_t a1)
{
  sub_1D42A4D5C(a1, (uint64_t)v13);
  uint64_t v3 = sub_1D432C7E4(v13);
  if (!v1)
  {
    uint64_t v4 = qword_1EBD80068;
    swift_retain();
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1D4469928();
    sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
    swift_retain();
    uint64_t v6 = sub_1D44698F8();
    os_log_type_t v7 = sub_1D446A038();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      v13[0] = v9;
      uint64_t v10 = sub_1D432CBAC();
      v13[6] = sub_1D42CB9EC(v10, v11, v13);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v6, v7, "FMIPLockResponse: initialized with coder %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v9, -1, -1);
      MEMORY[0x1D9447730](v8, -1, -1);
    }
    else
    {
      swift_release_n();
    }
  }
  sub_1D42BEC64(a1);
  return v3;
}

uint64_t type metadata accessor for FMIPLockResponse()
{
  return self;
}

uint64_t sub_1D44335FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7CDF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D4433664(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0(&qword_1EBD7CDF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D44336C4(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65746E6F43706174;
      break;
    case 2:
      unint64_t result = 0x64657463656C6573;
      break;
    case 3:
      unint64_t result = 0x44656C6269736976;
      break;
    case 4:
      unint64_t result = 0x6F4C646C756F6873;
      break;
    case 5:
      unint64_t result = 0x3156676174726961;
      break;
    case 6:
      unint64_t result = 0x3256676174726961;
      break;
    case 7:
      unint64_t result = 0x3156616E6D66;
      break;
    case 8:
      unint64_t result = 0x3256616E6D66;
      break;
    case 9:
      unint64_t result = 0x6E6D66656C707061;
      break;
    case 10:
      unint64_t result = 0x6E6D66656C707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D4433850()
{
  sub_1D4276C3C(v0 + qword_1EBD83030, &qword_1EBD7CBC0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4433898()
{
  uint64_t v0 = sub_1D427B074();
  sub_1D4276C3C(v0 + qword_1EBD83030, &qword_1EBD7CBC0);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D4433924()
{
  return type metadata accessor for FMIPRefreshClientRequest();
}

FMIPCore::FMIPUTAlertCompletionType_optional __swiftcall FMIPUTAlertCompletionType.init(rawValue:)(Swift::String rawValue)
{
  return (FMIPCore::FMIPUTAlertCompletionType_optional)sub_1D4433E64(v1);
}

uint64_t FMIPUTAlertCompletionType.rawValue.getter()
{
  uint64_t v1 = 0x6F4665726F6E6769;
  if (*v0 != 1) {
    uint64_t v1 = 0x68536465736F6C63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E5565726F6E6769;
  }
}

uint64_t sub_1D44339B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D4412F44(*a1, *a2);
}

uint64_t sub_1D44339C0()
{
  return sub_1D446A888();
}

uint64_t sub_1D4433A84()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4433B34()
{
  return sub_1D446A888();
}

FMIPCore::FMIPUTAlertCompletionType_optional sub_1D4433BF4(Swift::String *a1)
{
  return FMIPUTAlertCompletionType.init(rawValue:)(*a1);
}

void sub_1D4433C00(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEE00444F456C6974;
  unint64_t v4 = 0xED00007265766572;
  uint64_t v5 = 0x6F4665726F6E6769;
  if (v2 != 1)
  {
    uint64_t v5 = 0x68536465736F6C63;
    unint64_t v4 = 0xEB00000000746565;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E5565726F6E6769;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

FMIPCore::FMIPUTAlertSheetType_optional __swiftcall FMIPUTAlertSheetType.init(rawValue:)(Swift::String rawValue)
{
  return (FMIPCore::FMIPUTAlertSheetType_optional)sub_1D440F808(v1);
}

uint64_t FMIPUTAlertSheetType.rawValue.getter()
{
  if (*v0) {
    return 0x796C696D6166;
  }
  else {
    return 1919251317;
  }
}

uint64_t sub_1D4433CBC(char *a1, char *a2)
{
  return sub_1D441433C(*a1, *a2);
}

uint64_t sub_1D4433CC8()
{
  return sub_1D446A888();
}

uint64_t sub_1D4433D40()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4433DA4()
{
  return sub_1D446A888();
}

FMIPCore::FMIPUTAlertSheetType_optional sub_1D4433E18(Swift::String *a1)
{
  return FMIPUTAlertSheetType.init(rawValue:)(*a1);
}

void sub_1D4433E24(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1919251317;
  if (*v1) {
    uint64_t v2 = 0x796C696D6166;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

FMIPCore::FMIPUTAlertProductType_optional __swiftcall FMIPUTAlertProductType.init(rawValue:)(Swift::String rawValue)
{
  return (FMIPCore::FMIPUTAlertProductType_optional)sub_1D4433E64(v1);
}

uint64_t sub_1D4433E64@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1D446A518();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t FMIPUTAlertProductType.rawValue.getter()
{
  uint64_t v1 = 0x73646F50726961;
  if (*v0 != 1) {
    uint64_t v1 = 0x726F737365636361;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x676154726961;
  }
}

uint64_t sub_1D4433F18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D4413848(*a1, *a2);
}

uint64_t sub_1D4433F24()
{
  return sub_1D446A888();
}

uint64_t sub_1D4433FC8()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4434058()
{
  return sub_1D446A888();
}

FMIPCore::FMIPUTAlertProductType_optional sub_1D44340F8(Swift::String *a1)
{
  return FMIPUTAlertProductType.init(rawValue:)(*a1);
}

void sub_1D4434104(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x73646F50726961;
  if (v2 != 1)
  {
    uint64_t v5 = 0x726F737365636361;
    unint64_t v4 = 0xE900000000000079;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x676154726961;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

FMIPCore::FMIPUTAlertObservationType_optional __swiftcall FMIPUTAlertObservationType.init(rawValue:)(Swift::String rawValue)
{
  return (FMIPCore::FMIPUTAlertObservationType_optional)sub_1D440F808(v1);
}

uint64_t FMIPUTAlertObservationType.rawValue.getter()
{
  if (*v0) {
    return 0x6F4D6E4F70656562;
  }
  else {
    return 0x647261646E617473;
  }
}

uint64_t sub_1D44341B0(char *a1, char *a2)
{
  return sub_1D44129E4(*a1, *a2);
}

uint64_t sub_1D44341BC()
{
  return sub_1D446A888();
}

uint64_t sub_1D4434244()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D44342B8()
{
  return sub_1D446A888();
}

FMIPCore::FMIPUTAlertObservationType_optional sub_1D443433C(Swift::String *a1)
{
  return FMIPUTAlertObservationType.init(rawValue:)(*a1);
}

void sub_1D4434348(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x647261646E617473;
  if (*v1) {
    uint64_t v2 = 0x6F4D6E4F70656562;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xEA00000000006576;
  }
  *a1 = v2;
  a1[1] = v3;
}

void FMIPUTAlertEvent.sheetType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *FMIPUTAlertEvent.sheetType.setter(unsigned char *result)
{
  unsigned char *v1 = *result;
  return result;
}

uint64_t (*FMIPUTAlertEvent.sheetType.modify())()
{
  return nullsub_1;
}

void FMIPUTAlertEvent.completionAction.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *FMIPUTAlertEvent.completionAction.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*FMIPUTAlertEvent.completionAction.modify())()
{
  return nullsub_1;
}

uint64_t FMIPUTAlertEvent.disableItemTapped.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t FMIPUTAlertEvent.disableItemTapped.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*FMIPUTAlertEvent.disableItemTapped.modify())()
{
  return nullsub_1;
}

uint64_t FMIPUTAlertEvent.didCloseSheet.getter()
{
  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t FMIPUTAlertEvent.didCloseSheet.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 3) = result;
  return result;
}

uint64_t (*FMIPUTAlertEvent.didCloseSheet.modify())()
{
  return nullsub_1;
}

uint64_t FMIPUTAlertEvent.playSoundCount.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t FMIPUTAlertEvent.playSoundCount.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*FMIPUTAlertEvent.playSoundCount.modify())()
{
  return nullsub_1;
}

uint64_t FMIPUTAlertEvent.tracksCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t FMIPUTAlertEvent.tracksCount.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*FMIPUTAlertEvent.tracksCount.modify())()
{
  return nullsub_1;
}

double FMIPUTAlertEvent.tracksElapsedTime.getter()
{
  return *(double *)(v0 + 24);
}

void FMIPUTAlertEvent.tracksElapsedTime.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t (*FMIPUTAlertEvent.tracksElapsedTime.modify())()
{
  return nullsub_1;
}

uint64_t FMIPUTAlertEvent.precisionFindingSessionCount.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t FMIPUTAlertEvent.precisionFindingSessionCount.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*FMIPUTAlertEvent.precisionFindingSessionCount.modify())()
{
  return nullsub_1;
}

uint64_t FMIPUTAlertEvent.proximityFindingSessionCount.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t FMIPUTAlertEvent.proximityFindingSessionCount.setter(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t (*FMIPUTAlertEvent.proximityFindingSessionCount.modify())()
{
  return nullsub_1;
}

void FMIPUTAlertEvent.productType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

unsigned char *FMIPUTAlertEvent.productType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 48) = *result;
  return result;
}

uint64_t (*FMIPUTAlertEvent.productType.modify())()
{
  return nullsub_1;
}

void FMIPUTAlertEvent.observationType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 49);
}

unsigned char *FMIPUTAlertEvent.observationType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 49) = *result;
  return result;
}

uint64_t (*FMIPUTAlertEvent.observationType.modify())()
{
  return nullsub_1;
}

uint64_t FMIPUTAlertEvent.isPosh.getter()
{
  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t FMIPUTAlertEvent.isPosh.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 50) = result;
  return result;
}

uint64_t (*FMIPUTAlertEvent.isPosh.modify())()
{
  return nullsub_1;
}

void __swiftcall FMIPUTAlertEvent.init(sheetType:completionAction:disableItemTapped:didCloseSheet:playSoundCount:tracksCount:tracksElapsedTime:precisionFindingSessionCount:proximityFindingSessionCount:productType:observationType:isPosh:)(FMIPCore::FMIPUTAlertEvent *__return_ptr retstr, FMIPCore::FMIPUTAlertSheetType sheetType, FMIPCore::FMIPUTAlertCompletionType completionAction, Swift::Bool disableItemTapped, Swift::Bool didCloseSheet, Swift::Int playSoundCount, Swift::Int tracksCount, Swift::Double tracksElapsedTime, Swift::Int precisionFindingSessionCount, Swift::Int proximityFindingSessionCount, FMIPCore::FMIPUTAlertProductType productType, FMIPCore::FMIPUTAlertObservationType observationType, Swift::Bool isPosh)
{
  FMIPCore::FMIPUTAlertCompletionType v13 = *(unsigned char *)completionAction;
  FMIPCore::FMIPUTAlertProductType v14 = *(unsigned char *)productType;
  FMIPCore::FMIPUTAlertObservationType v15 = *v16;
  retstr->sheetType = *(unsigned char *)sheetType;
  retstr->completionAction = v13;
  retstr->disableItemTapped = disableItemTapped;
  retstr->didCloseSheet = didCloseSheet;
  retstr->playSoundCount = playSoundCount;
  retstr->tracksCount = tracksCount;
  retstr->tracksElapsedTime = tracksElapsedTime;
  retstr->precisionFindingSessionCount = precisionFindingSessionCount;
  retstr->proximityFindingSessionCount = proximityFindingSessionCount;
  retstr->productType = v14;
  retstr->observationType = v15;
  retstr->isPosh = v17;
}

unint64_t sub_1D4434630(char a1)
{
  unint64_t result = 0x7079547465656873;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x54656C6261736964;
      break;
    case 3:
      unint64_t result = 0x5379616C50646964;
      break;
    case 4:
      unint64_t result = 0x6E756F5379616C70;
      break;
    case 5:
      unint64_t result = 0x6F43736B63617274;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
    case 9:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 11:
      unint64_t result = 0x54746375646F7270;
      break;
    case 12:
      unint64_t result = 0x746176726573626FLL;
      break;
    case 13:
      unint64_t result = 0x68736F507369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FMIPManager.enqueue(UTEvent:item:)(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_1D42D5DA0(&qword_1EBD7CB80);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v99 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v90 - v7;
  uint64_t v9 = sub_1D4469618();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v97 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v119 = (char *)&v90 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v114 = (char *)&v90 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v102 = (char *)&v90 - v17;
  LODWORD(v18) = *a1;
  int v19 = a1[1];
  int v20 = a1[2];
  int v21 = a1[3];
  uint64_t v22 = *((void *)a1 + 1);
  uint64_t v110 = *((void *)a1 + 2);
  uint64_t v23 = *((void *)a1 + 3);
  uint64_t v107 = *((void *)a1 + 4);
  uint64_t v106 = *((void *)a1 + 5);
  int v105 = a1[48];
  int v104 = a1[49];
  int v111 = a1[50];
  uint64_t v24 = type metadata accessor for FMIPUnknownItem();
  uint64_t v25 = *(int *)(v24 + 32);
  uint64_t v115 = a2;
  uint64_t v117 = *(void *)(a2 + v25);
  uint64_t v26 = *(void *)(v117 + 16);
  int v108 = v20;
  int v109 = v19;
  int v113 = v21;
  uint64_t v112 = v22;
  uint64_t v103 = v24;
  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_14:
    sub_1D43C1234((uint64_t)v8);
    char v55 = v111;
    uint64_t v56 = v112;
    char v57 = v113;
    char v58 = v109;
    goto LABEL_30;
  }
  uint64_t v98 = v8;
  int v101 = (int)v18;
  double v27 = *(void **)(v117 + 40);
  size_t v28 = (SEL *)&property descriptor for FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback;
  uint64_t v29 = v26 - 1;
  uint64_t v100 = v10;
  uint64_t v96 = v25;
  if (v26 == 1)
  {
    id v30 = v27;
  }
  else
  {
    uint64_t v116 = (void (**)(char *, uint64_t))(v10 + 8);
    swift_bridgeObjectRetain_n();
    id v30 = v27;
    uint64_t v31 = 64;
    CGImageRef v32 = v30;
    uint64_t v118 = v9;
    CGImageRef v33 = v114;
    uint64_t v34 = v116;
    do
    {
      id v35 = *(id *)(v117 + v31);
      id v36 = objc_msgSend(v35, sel_timestamp);
      sub_1D44695D8();

      id v37 = objc_msgSend(v32, sel_timestamp);
      uint64_t v38 = v119;
      sub_1D44695D8();

      char v39 = sub_1D4469598();
      int v40 = *v34;
      CFAttributedStringRef v41 = v38;
      uint64_t v42 = v118;
      (*v34)(v41, v118);
      v40(v33, v42);
      if (v39) {
        uint64_t v43 = v30;
      }
      else {
        uint64_t v43 = v35;
      }
      if (v39)
      {
        id v30 = v35;
        CGImageRef v32 = v35;
      }

      v31 += 24;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease_n();
    uint64_t v9 = v118;
    uint64_t v10 = v100;
    size_t v28 = (SEL *)&property descriptor for FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback;
  }
  id v44 = [v30 v28[206]];

  size_t v45 = v114;
  sub_1D44695D8();

  uint64_t v46 = v10;
  CFAttributedStringRef v48 = (char *)(v10 + 32);
  CFDictionaryRef v47 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v8 = v98;
  v47(v98, v45, v9);
  CGSize v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  uint64_t v49 = v10 + 56;
  CFRange v50 = v51;
  v51(v8, 0, 1, v9);
  uint64_t v52 = v9;
  uint64_t v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  int v54 = v53(v8, 1, v52);
  LOBYTE(v18) = v101;
  if (v54 == 1) {
    goto LABEL_14;
  }
  uint64_t v92 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v53;
  uint64_t v93 = v46 + 48;
  uint64_t v94 = v50;
  uint64_t v95 = v49;
  uint64_t v98 = v48;
  v47(v102, v8, v52);
  uint64_t v117 = *(void *)(v115 + v96);
  uint64_t v59 = *(void *)(v117 + 16);
  uint64_t v60 = v52;
  if (!v59)
  {
    uint64_t v64 = (uint64_t)v99;
    v94(v99, 1, 1, v52);
    char v55 = v111;
    uint64_t v56 = v112;
    char v57 = v113;
    char v58 = v109;
LABEL_28:
    (*(void (**)(char *, uint64_t))(v100 + 8))(v102, v60);
    sub_1D43C1234(v64);
    goto LABEL_30;
  }
  uint64_t v91 = (void (*)(char *, uint64_t, uint64_t))v47;
  uint64_t v61 = *(void **)(v117 + 40);
  uint64_t v62 = v59 - 1;
  uint64_t v56 = v112;
  char v57 = v113;
  if (v59 == 1)
  {
    id v63 = v61;
  }
  else
  {
    uint64_t v116 = (void (**)(char *, uint64_t))(v100 + 8);
    swift_bridgeObjectRetain_n();
    id v63 = v61;
    uint64_t v65 = 64;
    uint64_t v66 = v63;
    uint64_t v118 = v60;
    char v67 = v114;
    int64_t v68 = v116;
    do
    {
      id v69 = *(id *)(v117 + v65);
      id v70 = objc_msgSend(v66, sel_timestamp);
      sub_1D44695D8();

      id v71 = objc_msgSend(v69, sel_timestamp);
      uint64_t v72 = v119;
      sub_1D44695D8();

      char v73 = sub_1D4469598();
      uint64_t v74 = *v68;
      uint64_t v75 = v72;
      uint64_t v76 = v118;
      (*v68)(v75, v118);
      v74(v67, v76);
      if (v73) {
        uint64_t v77 = v63;
      }
      else {
        uint64_t v77 = v69;
      }
      if (v73)
      {
        id v63 = v69;
        uint64_t v66 = v69;
      }

      v65 += 24;
      --v62;
    }
    while (v62);
    swift_bridgeObjectRelease_n();
    uint64_t v60 = v118;
    char v57 = v113;
    uint64_t v56 = v112;
  }
  char v55 = v111;
  id v78 = objc_msgSend(v63, sel_timestamp);

  size_t v79 = v114;
  sub_1D44695D8();

  uint64_t v64 = (uint64_t)v99;
  int v80 = v79;
  uint64_t v81 = v91;
  v91(v99, (uint64_t)v80, v60);
  v94((char *)v64, 0, 1, v60);
  int v82 = v92(v64, 1, v60);
  char v58 = v109;
  LOBYTE(v18) = v101;
  if (v82 == 1) {
    goto LABEL_28;
  }
  uint64_t v83 = v97;
  v81(v97, v64, v60);
  uint64_t v110 = *(void *)(*(void *)(v115 + v96) + 16) - 1;
  CFDictionaryRef v18 = v102;
  uint64_t v84 = v60;
  sub_1D4469558();
  uint64_t v23 = v85;
  uint64_t v86 = *(void (**)(char *, uint64_t))(v100 + 8);
  v86(v83, v84);
  uint64_t v87 = v84;
  char v55 = v111;
  v86(v18, v87);
  LOBYTE(v18) = v101;
LABEL_30:
  if (*(void *)(v115 + *(int *)(v103 + 24) + 8)) {
    char v88 = 1;
  }
  else {
    char v88 = (char)v18;
  }
  v120[0] = v88;
  v120[1] = v58;
  v120[2] = v108;
  v120[3] = v57;
  uint64_t v121 = v56;
  uint64_t v122 = v110;
  uint64_t v123 = v23;
  uint64_t v124 = v107;
  uint64_t v125 = v106;
  char v126 = v105;
  char v127 = v104;
  char v128 = v55;
  return _s8FMIPCore13FMIPAnalyticsV16sendUTAlertEvent5eventyAA011FMIPUTAlertE0V_tFZ_0((uint64_t)v120);
}

void sub_1D4435080(uint64_t a1)
{
  unint64_t v2 = sub_1D4274BFC(MEMORY[0x1E4FBC860]);
  id v3 = objc_allocWithZone(NSString);
  uint64_t v4 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithString_, v4);

  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v5, 0x7079547465656873, 0xE900000000000065, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v7 = objc_allocWithZone(NSString);
  uint64_t v8 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithString_, v8);

  char v10 = swift_isUniquelyReferenced_nonNull_native();
  v46[0] = v2;
  sub_1D4299B3C((uint64_t)v9, 0xD000000000000010, 0x80000001D4484550, v10);
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, *(unsigned __int8 *)(a1 + 2));
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  v46[0] = v2;
  sub_1D4299B3C((uint64_t)v11, 0x54656C6261736964, 0xED00006465707061, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a1 + 8);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v13 > 0);
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v14, 0x5379616C50646964, 0xEC000000646E756FLL, v15);
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, v13);
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  v46[0] = v2;
  sub_1D4299B3C((uint64_t)v16, 0x6E756F5379616C70, 0xEE00746E756F4364, v17);
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, *(void *)(a1 + 16));
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  v46[0] = v2;
  sub_1D4299B3C((uint64_t)v18, 0x6F43736B63617274, 0xEB00000000746E75, v19);
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithDouble_, *(double *)(a1 + 24));
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  v46[0] = v2;
  sub_1D4299B3C((uint64_t)v20, 0xD000000000000011, 0x80000001D4484570, v21);
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a1 + 32);
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v22 > 0);
  char v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v23, 0xD00000000000001ALL, 0x80000001D4484590, v24);
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, v22);
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  v46[0] = v2;
  sub_1D4299B3C((uint64_t)v25, 0xD00000000000001CLL, 0x80000001D44845B0, v26);
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(a1 + 40);
  id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v27 > 0);
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v28, 0xD00000000000001ALL, 0x80000001D44845D0, v29);
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithInteger_, v27);
  char v31 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v30, 0xD00000000000001CLL, 0x80000001D44845F0, v31);
  swift_bridgeObjectRelease();
  id v32 = objc_allocWithZone(NSString);
  CGImageRef v33 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(v32, sel_initWithString_, v33);

  char v35 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v34, 0x54746375646F7270, 0xEB00000000657079, v35);
  swift_bridgeObjectRelease();
  id v36 = objc_allocWithZone(NSString);
  id v37 = (void *)sub_1D4469B08();
  swift_bridgeObjectRelease();
  id v38 = objc_msgSend(v36, sel_initWithString_, v37);

  char v39 = swift_isUniquelyReferenced_nonNull_native();
  v46[0] = v2;
  sub_1D4299B3C((uint64_t)v38, 0x746176726573626FLL, 0xEF657079546E6F69, v39);
  swift_bridgeObjectRelease();
  id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, *(unsigned __int8 *)(a1 + 50));
  char v41 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D4299B3C((uint64_t)v40, 0x68736F507369, 0xE600000000000000, v41);
  unint64_t v42 = v2;
  swift_bridgeObjectRelease();
  uint64_t v43 = (void *)sub_1D4469B08();
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v42;
  v46[4] = sub_1D4308610;
  v46[5] = v44;
  v46[0] = MEMORY[0x1E4F143A8];
  v46[1] = 1107296256;
  v46[2] = sub_1D4356EBC;
  v46[3] = &unk_1F2C119B0;
  size_t v45 = _Block_copy(v46);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v45);
  swift_bridgeObjectRelease();
}

uint64_t _s8FMIPCore13FMIPAnalyticsV16sendUTAlertEvent5eventyAA011FMIPUTAlertE0V_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_1D4469958();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D44699B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA6C9010 != -1) {
    swift_once();
  }
  uint64_t v10 = swift_allocObject();
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 32) = v11;
  *(_OWORD *)(v10 + 48) = *(_OWORD *)(a1 + 32);
  *(_DWORD *)(v10 + 63) = *(_DWORD *)(a1 + 47);
  aBlock[4] = sub_1D4435F58;
  void aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C11960;
  char v12 = _Block_copy(aBlock);
  sub_1D4469988();
  v14[1] = MEMORY[0x1E4FBC860];
  sub_1D42E81D4();
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42E2378();
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v9, v5, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

unint64_t sub_1D4435B5C()
{
  unint64_t result = qword_1EA6CB728;
  if (!qword_1EA6CB728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB728);
  }
  return result;
}

unint64_t sub_1D4435BB4()
{
  unint64_t result = qword_1EA6CB730;
  if (!qword_1EA6CB730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB730);
  }
  return result;
}

unint64_t sub_1D4435C0C()
{
  unint64_t result = qword_1EA6CB738;
  if (!qword_1EA6CB738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB738);
  }
  return result;
}

unint64_t sub_1D4435C64()
{
  unint64_t result = qword_1EA6CB740;
  if (!qword_1EA6CB740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB740);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPUTAlertCompletionType()
{
  return &type metadata for FMIPUTAlertCompletionType;
}

ValueMetadata *type metadata accessor for FMIPUTAlertSheetType()
{
  return &type metadata for FMIPUTAlertSheetType;
}

unsigned char *_s8FMIPCore25FMIPUTAlertCompletionTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    char *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4435DACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPUTAlertProductType()
{
  return &type metadata for FMIPUTAlertProductType;
}

unsigned char *_s8FMIPCore20FMIPUTAlertSheetTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    char *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4435EB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPUTAlertObservationType()
{
  return &type metadata for FMIPUTAlertObservationType;
}

__n128 initializeWithCopy for FMIPUTAlertEvent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FMIPUTAlertEvent(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[51]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_1D4435F48()
{
  return MEMORY[0x1F4186498](v0, 67, 7);
}

void sub_1D4435F58()
{
  sub_1D4435080(v0 + 16);
}

uint64_t sub_1D4435F60()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

BOOL sub_1D4435F98()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
  return (*(unsigned char *)(v1 + *(int *)(type metadata accessor for FMIPDevice() + 148)) & 4) == 0;
}

uint64_t static FMIPRemoveDeviceAction.== infix(_:_:)(uint64_t a1)
{
  return static FMIPDevice.== infix(_:_:)(a1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device);
}

uint64_t FMIPRemoveDeviceAction.__allocating_init(device:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext) = 0;
  unsigned int v3 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  *unsigned int v3 = 0;
  v3[1] = 0;
  BOOL v4 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
  *BOOL v4 = 0;
  v4[1] = 0;
  int v5 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_username);
  *int v5 = 0;
  v5[1] = 0;
  unsigned int v6 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  *unsigned int v6 = 0;
  v6[1] = 0;
  uint64_t v7 = (void *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_escrowUUID);
  *uint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device;
  *(_OWORD *)(v2 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession) = xmmword_1D446D300;
  sub_1D42BB648(a1, v8, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  return v2;
}

uint64_t FMIPRemoveDeviceAction.init(device:)(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_authenticationContext) = 0;
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_trustedDeviceConfirmation);
  *uint64_t v2 = 0;
  v2[1] = 0;
  unsigned int v3 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_dsid);
  *unsigned int v3 = 0;
  v3[1] = 0;
  BOOL v4 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_username);
  *BOOL v4 = 0;
  v4[1] = 0;
  int v5 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_oneTimeToken);
  *int v5 = 0;
  v5[1] = 0;
  unsigned int v6 = (void *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_escrowUUID);
  *unsigned int v6 = 0;
  v6[1] = 0;
  *(_OWORD *)(v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_recoverySession) = xmmword_1D446D300;
  sub_1D42BB648(a1, v1 + OBJC_IVAR____TtC8FMIPCore16FMIPDeviceAction_device, (uint64_t (*)(void))type metadata accessor for FMIPDevice);
  return v1;
}

uint64_t FMIPRemoveDeviceAction.__deallocating_deinit()
{
  FMIPDeviceAction.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D4436208()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore20FMIPRemoveItemAction_forced);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1D4436250(char a1)
{
  unsigned int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8FMIPCore20FMIPRemoveItemAction_forced);
  uint64_t result = swift_beginAccess();
  *unsigned int v3 = a1;
  return result;
}

uint64_t (*sub_1D443629C())()
{
  return j__swift_endAccess;
}

uint64_t FMIPRemoveItemAction.__allocating_init(item:forced:)(uint64_t a1, char a2)
{
  return sub_1D4436570(a1, a2, &OBJC_IVAR____TtC8FMIPCore20FMIPRemoveItemAction_forced, &OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, (uint64_t (*)(void))type metadata accessor for FMIPItem);
}

uint64_t FMIPRemoveItemAction.init(item:forced:)(uint64_t a1, char a2)
{
  return sub_1D443660C(a1, a2, &OBJC_IVAR____TtC8FMIPCore20FMIPRemoveItemAction_forced, &OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, (uint64_t (*)(void))type metadata accessor for FMIPItem);
}

uint64_t static FMIPRemoveItemAction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1D4436664(a1, a2, &OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, _s8FMIPCore8FMIPItemV2eeoiySbAC_ACtFZ_0, &OBJC_IVAR____TtC8FMIPCore20FMIPRemoveItemAction_forced);
}

void FMIPRemoveItemAction.__allocating_init(item:)()
{
}

void FMIPRemoveItemAction.init(item:)()
{
}

uint64_t FMIPRemoveItemAction.deinit()
{
  sub_1D42CAA08(v0 + OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, (uint64_t (*)(void))type metadata accessor for FMIPItem);
  return v0;
}

uint64_t FMIPRemoveItemAction.__deallocating_deinit()
{
  return sub_1D44367C8(&OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, (uint64_t (*)(void))type metadata accessor for FMIPItem);
}

uint64_t sub_1D4436430(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D4436850(a1, a2, a3, a4, &OBJC_IVAR____TtC8FMIPCore14FMIPItemAction_item, _s8FMIPCore8FMIPItemV2eeoiySbAC_ACtFZ_0, &OBJC_IVAR____TtC8FMIPCore20FMIPRemoveItemAction_forced);
}

uint64_t sub_1D4436458()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8FMIPCore25FMIPRemoveItemGroupAction_forced);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1D44364A0(char a1)
{
  unsigned int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8FMIPCore25FMIPRemoveItemGroupAction_forced);
  uint64_t result = swift_beginAccess();
  *unsigned int v3 = a1;
  return result;
}

uint64_t (*sub_1D44364EC())()
{
  return j_j__swift_endAccess;
}

uint64_t FMIPRemoveItemGroupAction.__allocating_init(itemGroup:forced:)(uint64_t a1, char a2)
{
  return sub_1D4436570(a1, a2, &OBJC_IVAR____TtC8FMIPCore25FMIPRemoveItemGroupAction_forced, &OBJC_IVAR____TtC8FMIPCore19FMIPItemGroupAction_itemGroup, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
}

uint64_t sub_1D4436570(uint64_t a1, char a2, void *a3, void *a4, uint64_t (*a5)(void))
{
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + *a3) = a2;
  sub_1D42BB648(a1, v10 + *a4, a5);
  return v10;
}

uint64_t FMIPRemoveItemGroupAction.init(itemGroup:forced:)(uint64_t a1, char a2)
{
  return sub_1D443660C(a1, a2, &OBJC_IVAR____TtC8FMIPCore25FMIPRemoveItemGroupAction_forced, &OBJC_IVAR____TtC8FMIPCore19FMIPItemGroupAction_itemGroup, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
}

uint64_t sub_1D443660C(uint64_t a1, char a2, void *a3, void *a4, uint64_t (*a5)(void))
{
  *(unsigned char *)(v5 + *a3) = a2;
  sub_1D42BB648(a1, v5 + *a4, a5);
  return v5;
}

uint64_t static FMIPRemoveItemGroupAction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1D4436664(a1, a2, &OBJC_IVAR____TtC8FMIPCore19FMIPItemGroupAction_itemGroup, (uint64_t (*)(uint64_t, uint64_t))_s8FMIPCore13FMIPItemGroupV2eeoiySbAC_ACtFZ_0, &OBJC_IVAR____TtC8FMIPCore25FMIPRemoveItemGroupAction_forced);
}

uint64_t sub_1D4436664(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t), void *a5)
{
  if (a4(a1 + *a3, a2 + *a3))
  {
    uint64_t v8 = (unsigned char *)(a1 + *a5);
    swift_beginAccess();
    LOBYTE(v8) = *v8;
    id v9 = (unsigned char *)(a2 + *a5);
    swift_beginAccess();
    char v10 = v8 ^ *v9 ^ 1;
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

void FMIPRemoveItemGroupAction.__allocating_init(itemGroup:)()
{
}

void FMIPRemoveItemGroupAction.init(itemGroup:)()
{
}

uint64_t FMIPRemoveItemGroupAction.deinit()
{
  sub_1D42CAA08(v0 + OBJC_IVAR____TtC8FMIPCore19FMIPItemGroupAction_itemGroup, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  return v0;
}

uint64_t FMIPRemoveItemGroupAction.__deallocating_deinit()
{
  return sub_1D44367C8(&OBJC_IVAR____TtC8FMIPCore19FMIPItemGroupAction_itemGroup, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
}

uint64_t sub_1D44367C8(void *a1, uint64_t (*a2)(void))
{
  sub_1D42CAA08(v2 + *a1, a2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D4436828(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D4436850(a1, a2, a3, a4, &OBJC_IVAR____TtC8FMIPCore19FMIPItemGroupAction_itemGroup, (uint64_t (*)(uint64_t, uint64_t))static FMIPItemGroup.== infix(_:_:), &OBJC_IVAR____TtC8FMIPCore25FMIPRemoveItemGroupAction_forced);
}

uint64_t sub_1D4436850(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(uint64_t, uint64_t), void *a7)
{
  uint64_t v8 = *a1;
  uint64_t v9 = *a2;
  if (a6(*a1 + *a5, *a2 + *a5))
  {
    char v10 = (unsigned char *)(v8 + *a7);
    swift_beginAccess();
    LOBYTE(v10) = *v10;
    long long v11 = (unsigned char *)(v9 + *a7);
    swift_beginAccess();
    char v12 = v10 ^ *v11 ^ 1;
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1D44368F4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1D4436918(a1, &OBJC_IVAR____TtC8FMIPCore20FMIPRemoveItemAction_forced, a2);
}

uint64_t sub_1D4436900(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D4436974(a1, a2, a3, a4, &OBJC_IVAR____TtC8FMIPCore20FMIPRemoveItemAction_forced);
}

uint64_t sub_1D443690C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1D4436918(a1, &OBJC_IVAR____TtC8FMIPCore25FMIPRemoveItemGroupAction_forced, a2);
}

uint64_t sub_1D4436918@<X0>(void *a1@<X0>, void *a2@<X3>, unsigned char *a3@<X8>)
{
  BOOL v4 = (unsigned char *)(*a1 + *a2);
  uint64_t result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_1D4436968(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D4436974(a1, a2, a3, a4, &OBJC_IVAR____TtC8FMIPCore25FMIPRemoveItemGroupAction_forced);
}

uint64_t sub_1D4436974(char *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  char v5 = *a1;
  unsigned int v6 = (unsigned char *)(*a2 + *a5);
  uint64_t result = swift_beginAccess();
  *unsigned int v6 = v5;
  return result;
}

uint64_t sub_1D44369C0()
{
  return type metadata accessor for FMIPRemoveDeviceAction(0);
}

uint64_t type metadata accessor for FMIPRemoveDeviceAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6CB748);
}

uint64_t sub_1D44369E8()
{
  return type metadata accessor for FMIPRemoveItemAction(0);
}

uint64_t type metadata accessor for FMIPRemoveItemAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6CB758);
}

uint64_t method lookup function for FMIPRemoveItemAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPRemoveItemAction);
}

uint64_t dispatch thunk of FMIPRemoveItemAction.forced.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of FMIPRemoveItemAction.forced.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of FMIPRemoveItemAction.forced.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of FMIPRemoveItemAction.__allocating_init(item:forced:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1D4436AAC()
{
  return type metadata accessor for FMIPRemoveItemGroupAction(0);
}

uint64_t type metadata accessor for FMIPRemoveItemGroupAction(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6CB768);
}

uint64_t sub_1D4436AD4()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FMIPRemoveItemGroupAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPRemoveItemGroupAction);
}

uint64_t dispatch thunk of FMIPRemoveItemGroupAction.forced.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of FMIPRemoveItemGroupAction.forced.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of FMIPRemoveItemGroupAction.forced.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of FMIPRemoveItemGroupAction.__allocating_init(itemGroup:forced:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

Swift::Bool __swiftcall CLLocation.fmifIsNearBy(_:inBTRangeDistanceInMeters:)(CLLocation _, Swift::Double inBTRangeDistanceInMeters)
{
  Class isa = _.super.isa;
  objc_msgSend(v2, sel_distanceFromLocation_, _.super.isa);
  double v6 = v5;
  objc_msgSend(v2, sel_horizontalAccuracy);
  double v8 = v7;
  [(objc_class *)isa horizontalAccuracy];
  return v6 / sqrt(inBTRangeDistanceInMeters * inBTRangeDistanceInMeters + v8 * v8 + v9 * v9) < 1.5;
}

uint64_t type metadata accessor for FMIPSyncDeviceRequest()
{
  uint64_t result = qword_1EBD7FF78;
  if (!qword_1EBD7FF78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D4436C98()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D4436CD8()
{
  sub_1D4469758();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D4436D70()
{
  return type metadata accessor for FMIPSyncDeviceRequest();
}

id String.isEmail.getter()
{
  if (qword_1EA6C8FF0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EA6CB778;
  uint64_t v1 = (void *)sub_1D4469B08();
  id v2 = objc_msgSend(v0, sel_evaluateWithObject_, v1);

  return v2;
}

uint64_t sub_1D4436E0C()
{
  sub_1D4437498();
  sub_1D42D5DA0(&qword_1EA6C98E0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D446E050;
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1D42CB714();
  *(void *)(v0 + 32) = 0xD000000000000029;
  *(void *)(v0 + 40) = 0x80000001D4484770;
  uint64_t result = sub_1D4469F98();
  qword_1EA6CB778 = result;
  return result;
}

id static String.emailPredicate.getter()
{
  if (qword_1EA6C8FF0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EA6CB778;
  return v0;
}

BOOL String.isPhoneNumber.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D44691F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  double v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  long long v11 = (char *)v21 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v21 - v12;
  sub_1D4469178();
  sub_1D4469188();
  sub_1D44691E8();
  sub_1D44691A8();
  sub_1D44691E8();
  id v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  sub_1D44691B8();
  sub_1D44691E8();
  v14(v8, v4);
  v21[0] = a1;
  v21[1] = a2;
  sub_1D42CB768();
  v21[0] = sub_1D446A1A8();
  sub_1D42D5DA0(&qword_1EA6C9E30);
  sub_1D4337090();
  uint64_t v15 = sub_1D4469AE8();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0) {
    uint64_t v18 = v15 & 0xFFFFFFFFFFFFLL;
  }
  BOOL v19 = v18 != 0;
  v14(v11, v4);
  v14(v13, v4);
  return v19;
}

uint64_t String.sanitized.getter(uint64_t a1, unint64_t a2)
{
  char v4 = sub_1D4469C98();
  swift_bridgeObjectRetain();
  if (v4)
  {
    unint64_t v5 = sub_1D4469BD8();
    unint64_t v6 = sub_1D44373E8(v5, a1, a2);
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x1D9445EF0](v6, v8, v10, v12);
    a2 = v13;
    swift_bridgeObjectRelease();
  }
  if (sub_1D4469C98())
  {
    unint64_t v14 = sub_1D4469BD8();
    unint64_t v15 = sub_1D44373E8(v14, a1, a2);
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x1D9445EF0](v15, v17, v19, v21);
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t String.characterCount.getter()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1D4469C78();
  swift_bridgeObjectRelease();
  return v0;
}

Swift::String __swiftcall String.deletingPrefix(_:)(Swift::String a1)
{
  unint64_t v3 = v2;
  uint64_t v4 = v1;
  char v5 = sub_1D4469C98();
  swift_bridgeObjectRetain();
  if (v5)
  {
    unint64_t v6 = sub_1D4469BD8();
    unint64_t v7 = sub_1D44373E8(v6, v4, v3);
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x1D9445EF0](v7, v9, v11, v13);
    unint64_t v3 = v14;
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = v4;
  uint64_t v16 = (void *)v3;
  result._object = v16;
  result._countAndFlagsBits = v15;
  return result;
}

uint64_t String.nonBreaking.getter()
{
  return sub_1D446A1B8();
}

unint64_t sub_1D44373E8(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  Swift::String result = sub_1D4469BF8();
  if (v6) {
    Swift::String result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }
  return sub_1D4469CD8();
}

unint64_t sub_1D4437498()
{
  unint64_t result = qword_1EA6CB788;
  if (!qword_1EA6CB788)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA6CB788);
  }
  return result;
}

void __swiftcall FMIPPerson.init(identifier:person:)(FMIPCore::FMIPPerson *__return_ptr retstr, Swift::String identifier, FMIPCore::FMIPPerson *person)
{
  Swift::String firstName = person->firstName;
  uint64_t countAndFlagsBits = person->lastName._countAndFlagsBits;
  object = person->lastName._object;
  Swift::Bool hasFamilyMembers = person->hasFamilyMembers;
  FMIPCore::FMIPPersonDeviceFetchStatus deviceFetchStatus = person->deviceFetchStatus;
  FMIPCore::FMIPAccountFormatter accountFormatter = person->accountFormatter;
  Swift::Bool isAccountHSA = person->isAccountHSA;
  uint64_t v11 = person->username._countAndFlagsBits;
  uint64_t v10 = person->username._object;
  uint64_t v12 = person->phoneNumber.value._countAndFlagsBits;
  unint64_t v14 = person->phoneNumber.value._object;
  swift_bridgeObjectRelease();
  retstr->Swift::String firstName = firstName;
  retstr->lastName._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->lastName._object = object;
  retstr->Swift::Bool hasFamilyMembers = hasFamilyMembers;
  retstr->FMIPCore::FMIPPersonDeviceFetchStatus deviceFetchStatus = deviceFetchStatus;
  retstr->FMIPCore::FMIPAccountFormatter accountFormatter = accountFormatter;
  retstr->Swift::Bool isAccountHSA = isAccountHSA;
  retstr->username._uint64_t countAndFlagsBits = v11;
  retstr->username._object = v10;
  retstr->identifier = identifier;
  retstr->phoneNumber.value._uint64_t countAndFlagsBits = v12;
  retstr->phoneNumber.value._object = v14;
}

FMIPCore::FMIPPersonDeviceFetchStatus_optional __swiftcall FMIPPersonDeviceFetchStatus.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_1D446A518();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t FMIPPersonDeviceFetchStatus.rawValue.getter()
{
  if (*v0) {
    return 1162760004;
  }
  else {
    return 0x474E4944414F4CLL;
  }
}

uint64_t sub_1D4437620(char *a1, char *a2)
{
  return sub_1D4412850(*a1, *a2);
}

uint64_t sub_1D443762C()
{
  return sub_1D446A888();
}

uint64_t sub_1D44376A8()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4437710()
{
  return sub_1D446A888();
}

FMIPCore::FMIPPersonDeviceFetchStatus_optional sub_1D4437788(Swift::String *a1)
{
  return FMIPPersonDeviceFetchStatus.init(rawValue:)(*a1);
}

void sub_1D4437794(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1162760004;
  if (!*v1) {
    uint64_t v2 = 0x474E4944414F4CLL;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

FMIPCore::FMIPAccountFormatter_optional __swiftcall FMIPAccountFormatter.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  char *v1 = v2;
  return (FMIPCore::FMIPAccountFormatter_optional)rawValue;
}

uint64_t FMIPAccountFormatter.rawValue.getter()
{
  return *v0;
}

uint64_t FMIPDefaultOwnerIdentifier.getter()
{
  return 0x72656E776FLL;
}

uint64_t FMIPDefaultBeaconOwnerIdentifier.getter()
{
  return 0x6F6C4072656E776FLL;
}

uint64_t FMIPPerson.firstName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPPerson.lastName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPPerson.hasFamilyMembers.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

void FMIPPerson.deviceFetchStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 33);
}

void FMIPPerson.accountFormatter.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 34);
}

uint64_t FMIPPerson.isAccountHSA.getter()
{
  return *(unsigned __int8 *)(v0 + 35);
}

uint64_t FMIPPerson.username.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPPerson.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMIPPerson.phoneNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1D4437940(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x65626D654D736168;
      break;
    case 3:
      unint64_t result = 0x4153487369;
      break;
    case 4:
      unint64_t result = 0x6D614E7473726966;
      break;
    case 5:
      unint64_t result = 0x656D614E7473616CLL;
      break;
    case 6:
      unint64_t result = 0x6449656C707061;
      break;
    case 7:
      unint64_t result = 0x696669746E656469;
      break;
    case 8:
      unint64_t result = 0x6D754E656E6F6870;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D4437A9C(unsigned __int8 *a1, char *a2)
{
  return sub_1D4415824(*a1, *a2);
}

uint64_t sub_1D4437AA8()
{
  return sub_1D446A888();
}

uint64_t sub_1D4437AF0()
{
  return sub_1D445D77C();
}

uint64_t sub_1D4437AF8()
{
  return sub_1D446A888();
}

uint64_t sub_1D4437B3C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D443844C();
  *a1 = result;
  return result;
}

unint64_t sub_1D4437B6C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1D4437940(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D4437B98@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D443844C();
  *a1 = result;
  return result;
}

uint64_t sub_1D4437BC0(uint64_t a1)
{
  unint64_t v2 = sub_1D42A5610();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPPerson.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6CB790);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v23 = *(void *)(v1 + 24);
  uint64_t v24 = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 32);
  int v28 = *(unsigned __int8 *)(v1 + 33);
  uint64_t v22 = *(unsigned __int8 *)(v1 + 34);
  int v18 = *(unsigned __int8 *)(v1 + 35);
  int v19 = v7;
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v20 = *(void *)(v1 + 48);
  uint64_t v21 = v8;
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v16 = *(void *)(v1 + 64);
  uint64_t v17 = v9;
  uint64_t v10 = *(void *)(v1 + 80);
  uint64_t v14 = *(void *)(v1 + 72);
  uint64_t v15 = v10;
  sub_1D42C26F4(a1, a1[3]);
  sub_1D42A5610();
  sub_1D446A8E8();
  LOBYTE(v26) = 4;
  uint64_t v11 = v25;
  sub_1D446A658();
  if (!v11)
  {
    LOBYTE(v26) = 5;
    sub_1D446A658();
    LOBYTE(v26) = 6;
    sub_1D446A658();
    LOBYTE(v26) = 0;
    sub_1D446A688();
    LOBYTE(v26) = 1;
    sub_1D446A658();
    swift_bridgeObjectRelease();
    LOBYTE(v26) = 2;
    sub_1D446A668();
    LOBYTE(v26) = 3;
    sub_1D446A668();
    LOBYTE(v26) = 7;
    sub_1D446A658();
    uint64_t v26 = v14;
    uint64_t v27 = v15;
    char v29 = 8;
    sub_1D42D5DA0((uint64_t *)&unk_1EBD7FD68);
    sub_1D42BD508();
    sub_1D446A698();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1D4437F68(void *a1)
{
  return FMIPPerson.encode(to:)(a1);
}

unint64_t sub_1D4437F8C()
{
  unint64_t result = qword_1EA6CB798;
  if (!qword_1EA6CB798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB798);
  }
  return result;
}

unint64_t sub_1D4437FE4()
{
  unint64_t result = qword_1EA6CB7A0;
  if (!qword_1EA6CB7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB7A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPPersonDeviceFetchStatus()
{
  return &type metadata for FMIPPersonDeviceFetchStatus;
}

unsigned char *_s8FMIPCore27FMIPPersonDeviceFetchStatusOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    char *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D4438118);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMIPAccountFormatter()
{
  return &type metadata for FMIPAccountFormatter;
}

uint64_t destroy for FMIPPerson()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMIPPerson(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMIPPerson(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FMIPPerson(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1D44383F8()
{
  unint64_t result = qword_1EA6CB7A8;
  if (!qword_1EA6CB7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6CB7A8);
  }
  return result;
}

uint64_t sub_1D443844C()
{
  unint64_t v0 = sub_1D446A518();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t FMIPReverseGeocodingCache.__allocating_init(preferredLocale:)(uint64_t a1)
{
  uint64_t v2 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(swift_allocObject() + qword_1EA6E4A80 + 8) = 0;
  swift_unknownObjectWeakInit();
  sub_1D42A3A74(a1, (uint64_t)v4, (uint64_t *)&unk_1EBD7E560);
  uint64_t v5 = sub_1D4299224((uint64_t)v4);
  sub_1D4276C3C(a1, (uint64_t *)&unk_1EBD7E560);
  return v5;
}

uint64_t sub_1D4438568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1D4469958();
  uint64_t v27 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D44699B8();
  uint64_t v25 = *(void *)(v11 - 8);
  uint64_t v26 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = *(void *)(v4 + qword_1EA6CB220);
  sub_1D42E510C(a1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v19 = (v16 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v4;
  sub_1D443B10C((uint64_t)v17, v20 + v18);
  uint64_t v21 = (void *)(v20 + v19);
  *uint64_t v21 = a2;
  v21[1] = a3;
  aBlock[4] = sub_1D443B170;
  void aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C11CB8;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1D4469988();
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_1D42C6224((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v13, v10, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
  return swift_release();
}

void sub_1D44388F0(uint64_t a1, uint64_t *a2, void (*a3)(unsigned char *), uint64_t a4)
{
  sub_1D42A789C(a2, v16);
  sub_1D4276C98((uint64_t)v16, (uint64_t)v17, &qword_1EBD7CC10);
  sub_1D4276C98((uint64_t)v17, (uint64_t)v18, &qword_1EBD7CC10);
  if (sub_1D42FE02C((uint64_t)v18) == 1)
  {
    uint64_t v8 = sub_1D42A9D18();
    uint64_t v10 = v9;
    uint64_t v11 = a1 + qword_1EA6CB208;
    swift_beginAccess();
    if (*(void *)(*(void *)v11 + 16))
    {
      swift_bridgeObjectRetain();
      sub_1D42C4FCC(v8, v10);
      char v13 = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13)
      {
        sub_1D4438A90((uint64_t)a2, (uint64_t)a3, a4);
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_1D42A920C((uint64_t)a2, 0, (uint64_t)a3, a4);
  }
  else
  {
    sub_1D4276C98((uint64_t)v17, (uint64_t)v14, &qword_1EBD7CC10);
    sub_1D4276C98((uint64_t)v17, (uint64_t)v15, &qword_1EBD7CC10);
    sub_1D42FC768((uint64_t)v15);
    a3(v14);
    sub_1D443B3DC((uint64_t)v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
    sub_1D443B3DC((uint64_t)v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
  }
}

uint64_t sub_1D4438A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1D4469958();
  uint64_t v27 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D44699B8();
  uint64_t v25 = *(void *)(v11 - 8);
  uint64_t v26 = v11;
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = *(void *)(v4 + qword_1EA6CB220);
  sub_1D42E510C(a1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v19 = (v16 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v4;
  sub_1D443B10C((uint64_t)v17, v20 + v18);
  uint64_t v21 = (uint64_t *)(v20 + v19);
  *uint64_t v21 = a2;
  v21[1] = a3;
  aBlock[4] = sub_1D443B18C;
  void aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C11D08;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  sub_1D42972D4(a2);
  sub_1D4469988();
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_1D42C6224((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v13, v10, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
  return swift_release();
}

void sub_1D4438E1C(uint64_t a1, uint64_t *a2, void (*a3)(void *), uint64_t a4)
{
  uint64_t v52 = a3;
  uint64_t v7 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v51 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v51 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v45 - v11;
  uint64_t v13 = sub_1D42A9D18();
  uint64_t v15 = v14;
  uint64_t v16 = (uint64_t *)(a1 + qword_1EA6CB208);
  swift_beginAccess();
  uint64_t v17 = *v16;
  if (*(void *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_1D42C4FCC(v13, v15);
    if (v19)
    {
      id v20 = *(id *)(*(void *)(v17 + 56) + 8 * v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1EA6C8F58 != -1) {
        swift_once();
      }
      uint64_t v50 = a4;
      uint64_t v21 = sub_1D4469928();
      sub_1D42D7FAC(v21, (uint64_t)qword_1EA6E46D0);
      sub_1D42E510C((uint64_t)a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      id v22 = v20;
      swift_retain_n();
      id v23 = v22;
      uint64_t v24 = sub_1D44698F8();
      os_log_type_t v25 = sub_1D446A038();
      int v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v27 = swift_slowAlloc();
        int v48 = v26;
        uint64_t v28 = v27;
        uint64_t v49 = swift_slowAlloc();
        v54[0] = v49;
        *(_DWORD *)uint64_t v28 = 136315650;
        os_log_t v47 = v24;
        uint64_t v29 = sub_1D446A918();
        v53[0] = sub_1D42CB9EC(v29, v30, v54);
        uint64_t v46 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_1D446A188();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2080;
        uint64_t v31 = FMReverseGeocodingRequest.debugDescription.getter();
        v53[0] = sub_1D42CB9EC(v31, v32, v54);
        sub_1D446A188();

        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 22) = 2080;
        uint64_t v33 = FMReverseGeocodingRequest.debugDescription.getter();
        v53[0] = sub_1D42CB9EC(v33, v34, v54);
        uint64_t v10 = v46;
        sub_1D446A188();
        swift_bridgeObjectRelease();
        sub_1D42E4588((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
        uint64_t v24 = v47;
        _os_log_impl(&dword_1D4271000, v47, (os_log_type_t)v48, "%s: Attaching to an existing operation: %s, source: %s", (uint8_t *)v28, 0x20u);
        uint64_t v35 = v49;
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v35, -1, -1);
        MEMORY[0x1D9447730](v28, -1, -1);
      }
      else
      {

        swift_release_n();
        sub_1D42E4588((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      }

      sub_1D42E510C((uint64_t)a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
      unint64_t v37 = (*(unsigned __int8 *)(v51 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = a1;
      sub_1D443B10C((uint64_t)v10, v38 + v37);
      char v39 = (void *)(v38 + ((v8 + v37 + 7) & 0xFFFFFFFFFFFFFFF8));
      uint64_t v40 = (uint64_t)v52;
      uint64_t v41 = v50;
      void *v39 = v52;
      v39[1] = v41;
      v54[4] = (uint64_t)sub_1D443B1A8;
      v54[5] = v38;
      v54[0] = MEMORY[0x1E4F143A8];
      v54[1] = 1107296256;
      void v54[2] = (uint64_t)sub_1D42BD950;
      unint64_t v54[3] = (uint64_t)&unk_1F2C11D58;
      unint64_t v42 = _Block_copy(v54);
      uint64_t v43 = self;
      swift_retain();
      sub_1D42972D4(v40);
      id v44 = objc_msgSend(v43, sel_blockOperationWithBlock_, v42);
      _Block_release(v42);
      swift_release();
      objc_msgSend(v44, sel_addDependency_, v23);
      objc_msgSend(*(id *)(a1 + qword_1EA6CB218), sel_addOperation_, v44);

      return;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  id v36 = v52;
  if (v52)
  {
    sub_1D42A789C(a2, v53);
    v36(v53);
    sub_1D4276C98((uint64_t)v53, (uint64_t)v54, &qword_1EBD7CC10);
    sub_1D443B3DC((uint64_t)v54, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
  }
}

uint64_t sub_1D4439400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1D4469958();
  uint64_t v27 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D44699B8();
  uint64_t v25 = *(void *)(v11 - 8);
  uint64_t v26 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = *(void *)(a1 + qword_1EA6CB220);
  sub_1D42E510C(a2, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v19 = (v16 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  sub_1D443B10C((uint64_t)v17, v20 + v18);
  uint64_t v21 = (uint64_t *)(v20 + v19);
  *uint64_t v21 = a3;
  v21[1] = a4;
  aBlock[4] = sub_1D443B31C;
  void aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C11DA8;
  id v22 = _Block_copy(aBlock);
  swift_retain();
  sub_1D42972D4(a3);
  sub_1D4469988();
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_1D42C6224((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v13, v10, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
  return swift_release();
}

uint64_t sub_1D443978C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v65 = a3;
  uint64_t v66 = a4;
  uint64_t v6 = sub_1D4469958();
  uint64_t v71 = *(void *)(v6 - 8);
  uint64_t v72 = v6;
  MEMORY[0x1F4188790](v6);
  id v69 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1D44699B8();
  uint64_t v68 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  char v67 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D4469968();
  uint64_t v63 = *(void *)(v9 - 8);
  uint64_t v64 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v62 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D4469618();
  uint64_t v60 = *(void *)(v11 - 8);
  uint64_t v61 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v59 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMReverseGeocodingRequest();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1D42D5DA0((uint64_t *)&unk_1EA6CA4D0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1D42D5DA0(&qword_1EA6CA4C8);
  MEMORY[0x1F4188790](v20 - 8);
  id v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = a2;
  uint64_t v23 = sub_1D42A9D18();
  uint64_t v25 = v24;
  uint64_t v73 = a1;
  uint64_t v26 = (uint64_t *)(a1 + qword_1EA6CB1F8);
  swift_beginAccess();
  uint64_t v27 = *v26;
  if (*(void *)(v27 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_1D42C4FCC(v23, v25);
    if (v29)
    {
      sub_1D42A3A74(*(void *)(v27 + 56) + *(void *)(v17 + 72) * v28, (uint64_t)v22, (uint64_t *)&unk_1EA6CA4D0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v22, 0, 1, v16);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v22, 1, 1, v16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v22, 1, 1, v16);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v22, 1, v16))
  {
    sub_1D4276C3C((uint64_t)v22, &qword_1EA6CA4C8);
    sub_1D42FB494(v80);
  }
  else
  {
    sub_1D42A3A74((uint64_t)v22, (uint64_t)v19, (uint64_t *)&unk_1EA6CA4D0);
    sub_1D4276C3C((uint64_t)v22, &qword_1EA6CA4C8);
    memcpy(v78, &v19[*(int *)(v16 + 48)], sizeof(v78));
    sub_1D42FC768((uint64_t)v78);
    sub_1D4276C3C((uint64_t)v19, (uint64_t *)&unk_1EA6CA4D0);
    memcpy(v80, v78, sizeof(v80));
    nullsub_1(v80);
  }
  sub_1D4276C98((uint64_t)v80, (uint64_t)v79, &qword_1EBD7CC10);
  if (qword_1EA6C8F58 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1D4469928();
  sub_1D42D7FAC(v30, (uint64_t)qword_1EA6E46D0);
  sub_1D42E510C(v74, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
  sub_1D443B3DC((uint64_t)v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
  swift_retain();
  sub_1D443B3DC((uint64_t)v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
  swift_retain();
  uint64_t v31 = sub_1D44698F8();
  os_log_type_t v32 = sub_1D446A038();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v76 = v34;
    *(_DWORD *)uint64_t v33 = 136315650;
    uint64_t v35 = sub_1D446A918();
    *(void *)&v80[0] = sub_1D42CB9EC(v35, v36, &v76);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    uint64_t v37 = FMReverseGeocodingRequest.debugDescription.getter();
    *(void *)&v80[0] = sub_1D42CB9EC(v37, v38, &v76);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D42E4588((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    *(_WORD *)(v33 + 22) = 2080;
    sub_1D4276C98((uint64_t)v79, (uint64_t)v78, &qword_1EBD7CC10);
    sub_1D4276C98((uint64_t)v79, (uint64_t)v80, &qword_1EBD7CC10);
    if (sub_1D42FE02C((uint64_t)v80) == 1)
    {
      unint64_t v39 = 0xE400000000000000;
      unint64_t v40 = 1701736302;
    }
    else
    {
      sub_1D4276C98((uint64_t)v79, (uint64_t)v75, &qword_1EBD7CC10);
      sub_1D42FC768((uint64_t)v75);
      unint64_t v40 = FMIPAddress.debugDescription.getter();
      unint64_t v39 = v41;
      memcpy(v77, v78, sizeof(v77));
      sub_1D42FC8A4((uint64_t)v77);
    }
    v78[0] = sub_1D42CB9EC(v40, v39, &v76);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    sub_1D443B3DC((uint64_t)v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
    sub_1D443B3DC((uint64_t)v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
    _os_log_impl(&dword_1D4271000, v31, v32, "%s: Existing operation completed, notifying the duplicate: %s - %s", (uint8_t *)v33, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v34, -1, -1);
    MEMORY[0x1D9447730](v33, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_1D42E4588((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
    sub_1D443B3DC((uint64_t)v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
    sub_1D443B3DC((uint64_t)v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
  }
  sub_1D4276C98((uint64_t)v79, (uint64_t)v78, &qword_1EBD7CC10);
  if (sub_1D42FE02C((uint64_t)v78) != 1)
  {
    sub_1D4276C98((uint64_t)v79, (uint64_t)v77, &qword_1EBD7CC10);
    memcpy(v80, v77, sizeof(v80));
    uint64_t v42 = v74;
    uint64_t v43 = *(void **)(v74 + 16);
    sub_1D42FC768((uint64_t)v77);
    id v44 = objc_msgSend(v43, sel_timestamp);
    uint64_t v45 = (uint64_t)v59;
    sub_1D44695D8();

    sub_1D4393070(v42, (uint64_t)v80, v45);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v45, v61);
    sub_1D443B3DC((uint64_t)v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
  }
  sub_1D42AADA4();
  os_log_t v47 = v62;
  uint64_t v46 = v63;
  uint64_t v48 = v64;
  (*(void (**)(char *, void, uint64_t))(v63 + 104))(v62, *MEMORY[0x1E4FBCB48], v64);
  uint64_t v49 = (void *)sub_1D446A0D8();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  sub_1D4276C98((uint64_t)v79, (uint64_t)v77, &qword_1EBD7CC10);
  uint64_t v50 = swift_allocObject();
  uint64_t v52 = v65;
  uint64_t v51 = v66;
  *(void *)(v50 + 16) = v65;
  *(void *)(v50 + 24) = v51;
  sub_1D4276C98((uint64_t)v77, v50 + 32, &qword_1EBD7CC10);
  v75[4] = sub_1D443B5B4;
  v75[5] = v50;
  v75[0] = MEMORY[0x1E4F143A8];
  v75[1] = 1107296256;
  v75[2] = sub_1D42BD950;
  v75[3] = &unk_1F2C11DF8;
  uint64_t v53 = _Block_copy(v75);
  sub_1D443B3DC((uint64_t)v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D67E8);
  sub_1D42972D4(v52);
  int v54 = v67;
  sub_1D4469988();
  uint64_t v76 = MEMORY[0x1E4FBC860];
  sub_1D42C6224((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5A0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  char v55 = v69;
  uint64_t v56 = v72;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v54, v55, v53);
  _Block_release(v53);

  (*(void (**)(char *, uint64_t))(v71 + 8))(v55, v56);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v54, v70);
  sub_1D443B3DC((uint64_t)v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1D42D695C);
  return swift_release();
}

uint64_t sub_1D443A308(const void *a1)
{
  uint64_t v3 = sub_1D44699B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D4469958();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v17[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v18, a1, 0x120uLL);
  uint64_t result = MEMORY[0x1D9447840](v1 + qword_1EA6E4A80);
  if (result)
  {
    uint64_t v12 = result;
    id v13 = *(id *)(result + 72);
    sub_1D4469948();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v12;
    memcpy((void *)(v14 + 24), v18, 0x120uLL);
    v17[4] = sub_1D443AFA0;
    void v17[5] = v14;
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 1107296256;
    void v17[2] = sub_1D42BD950;
    v17[3] = &unk_1F2C11C68;
    uint64_t v15 = _Block_copy(v17);
    swift_unknownObjectRetain();
    sub_1D42FC768((uint64_t)v18);
    sub_1D4469988();
    MEMORY[0x1D9446420](0, v6, v10, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D443A58C(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v4 = (int *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = (void *)a1[3];
  sub_1D42A3A74(v1 + qword_1EA6E49F8, (uint64_t)v6 + v4[8], (uint64_t *)&unk_1EBD7E560);
  *uint64_t v6 = v8;
  v6[1] = v7;
  *((unsigned char *)v6 + v4[10]) = 0;
  *((unsigned char *)v6 + v4[9]) = 0;
  _OWORD v6[2] = v9;
  uint64_t v13 = v1;
  uint64_t v14 = v6;
  swift_bridgeObjectRetain();
  id v10 = v9;
  sub_1D42D5DA0(&qword_1EBD7CC10);
  sub_1D446A0A8();
  return sub_1D42E4588((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
}

uint64_t sub_1D443A6CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v8 = (int *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (uint64_t *)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v13 = (void *)a1[3];
  sub_1D42A3A74(v3 + qword_1EA6E49F8, (uint64_t)v10 + v8[8], (uint64_t *)&unk_1EBD7E560);
  *id v10 = v12;
  v10[1] = v11;
  *((unsigned char *)v10 + v8[10]) = 0;
  *((unsigned char *)v10 + v8[9]) = 0;
  v10[2] = v13;
  swift_bridgeObjectRetain();
  id v14 = v13;
  sub_1D4438568((uint64_t)v10, a2, a3);
  return sub_1D42E4588((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
}

uint64_t sub_1D443A7D4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for FMIPSeparationLocation();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (id *)&v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for FMReverseGeocodingRequest();
  uint64_t v11 = (int *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (uint64_t *)&v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D42E510C(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPSeparationLocation);
  sub_1D42A3A74(v2 + qword_1EA6E49F8, (uint64_t)v6, (uint64_t *)&unk_1EBD7E560);
  id v14 = v9[1];
  uint64_t v15 = sub_1D42A9D18();
  uint64_t v17 = v16;
  sub_1D42E4588((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMIPSeparationLocation);
  *uint64_t v13 = v15;
  v13[1] = v17;
  *((unsigned char *)v13 + v11[10]) = 0;
  *((unsigned char *)v13 + v11[9]) = 0;
  void v13[2] = (uint64_t)v14;
  sub_1D4276C98((uint64_t)v6, (uint64_t)v13 + v11[8], (uint64_t *)&unk_1EBD7E560);
  uint64_t v20 = v2;
  uint64_t v21 = v13;
  sub_1D42D5DA0(&qword_1EBD7CC10);
  sub_1D446A0A8();
  return sub_1D42E4588((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
}

uint64_t sub_1D443A9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v23 = a3;
  uint64_t v7 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPSeparationLocation();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (id *)((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for FMReverseGeocodingRequest();
  id v14 = (int *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D42E510C(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPSeparationLocation);
  sub_1D42A3A74(v4 + qword_1EA6E49F8, (uint64_t)v9, (uint64_t *)&unk_1EBD7E560);
  id v17 = v12[1];
  uint64_t v18 = sub_1D42A9D18();
  uint64_t v20 = v19;
  sub_1D42E4588((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMIPSeparationLocation);
  *uint64_t v16 = v18;
  v16[1] = v20;
  *((unsigned char *)v16 + v14[10]) = 0;
  *((unsigned char *)v16 + v14[9]) = 0;
  void v16[2] = (uint64_t)v17;
  sub_1D4276C98((uint64_t)v9, (uint64_t)v16 + v14[8], (uint64_t *)&unk_1EBD7E560);
  sub_1D4438568((uint64_t)v16, a2, v23);
  return sub_1D42E4588((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FMReverseGeocodingRequest);
}

uint64_t FMIPReverseGeocodingCache.init(preferredLocale:)(uint64_t a1)
{
  uint64_t v3 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E560);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + qword_1EA6E4A80 + 8) = 0;
  swift_unknownObjectWeakInit();
  sub_1D42A3A74(a1, (uint64_t)v5, (uint64_t *)&unk_1EBD7E560);
  uint64_t v6 = sub_1D4299224((uint64_t)v5);
  sub_1D4276C3C(a1, (uint64_t *)&unk_1EBD7E560);
  return v6;
}

uint64_t sub_1D443ACAC()
{
  return sub_1D42F9538(v0 + qword_1EA6E4A80);
}

uint64_t FMIPReverseGeocodingCache.deinit()
{
  uint64_t v1 = v0 + qword_1EA6CB1F0;
  uint64_t v2 = sub_1D4469618();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D4276C3C(v0 + qword_1EA6E49F8, (uint64_t *)&unk_1EBD7E560);
  sub_1D42F9538(v0 + qword_1EA6E4A80);
  return v0;
}

uint64_t FMIPReverseGeocodingCache.__deallocating_deinit()
{
  FMIPReverseGeocodingCache.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D443ADF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for FMIPReverseGeocodingCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FMIPReverseGeocodingCache);
}

uint64_t dispatch thunk of FMIPReverseGeocodingCache.address(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of FMIPReverseGeocodingCache.address(for:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t sub_1D443AED0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 312, 7);
}

uint64_t sub_1D443AFA0()
{
  return sub_1D4390C00(*(void *)(v0 + 16), (const void *)(v0 + 24));
}

uint64_t sub_1D443AFAC()
{
  uint64_t v1 = (int *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v5 = v0 + v3 + v1[8];
  uint64_t v6 = sub_1D44696C8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_1D443B10C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMReverseGeocodingRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D443B170()
{
  return sub_1D443B334((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D44388F0);
}

uint64_t sub_1D443B18C()
{
  return sub_1D443B334((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D4438E1C);
}

uint64_t sub_1D443B1A8()
{
  return sub_1D443B334(sub_1D4439400);
}

uint64_t sub_1D443B1C4()
{
  uint64_t v1 = (int *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();

  uint64_t v6 = v5 + v1[8];
  uint64_t v7 = sub_1D44696C8();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  if (*(void *)(v0 + v4)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, v4 + 16, v2 | 7);
}

uint64_t sub_1D443B31C()
{
  return sub_1D443B334(sub_1D443978C);
}

uint64_t sub_1D443B334(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + v3;
  uint64_t v6 = (uint64_t *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  return a1(v4, v5, v7, v8);
}

uint64_t sub_1D443B3DC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v5 = *(_OWORD *)(a1 + 240);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v4 = *(_OWORD *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    *(void *)(a1 + 272),
    *(void *)(a1 + 280));
  return a1;
}

uint64_t sub_1D443B468(uint64_t (*a1)(unsigned char *), uint64_t a2, uint64_t a3)
{
  sub_1D4276C98(a3, (uint64_t)v6, &qword_1EBD7CC10);
  uint64_t result = sub_1D4276C98((uint64_t)v6, (uint64_t)v5, &qword_1EBD7CC10);
  if (a1) {
    return a1(v5);
  }
  return result;
}

uint64_t sub_1D443B4D4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  if (*(void *)(v0 + 200))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, 320, 7);
}

uint64_t sub_1D443B5B4()
{
  return sub_1D443B468(*(uint64_t (**)(unsigned char *))(v0 + 16), *(void *)(v0 + 24), v0 + 32);
}

char *sub_1D443B5E0()
{
  uint64_t v1 = sub_1D42D5DA0(&qword_1EBD7E918);
  MEMORY[0x1F4188790](v1);
  unint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D4469498();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v16 - v9;
  if (qword_1EBD7E648 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1D42D7FAC(v1, (uint64_t)qword_1EBD7CB08);
  sub_1D42E83D0(v11, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1D4304ECC((uint64_t)v3);
    sub_1D438C554();
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    uint64_t v12 = type metadata accessor for FMIPDemoContent();
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
    sub_1D4469448();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
    v13(v8, v4);
    unint64_t v3 = (char *)v12;
    uint64_t v14 = static FMIPDemoContent.load(from:)();
    if (!v0) {
      unint64_t v3 = (char *)v14;
    }
    v13(v10, v4);
  }
  return v3;
}

char *sub_1D443B860(uint64_t a1)
{
  uint64_t result = sub_1D443B5E0();
  uint64_t v4 = result;
  if (!v1)
  {
    type metadata accessor for FMIPDemoDataSource();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 128) = v4;
    type metadata accessor for FMIPDemoDataGenerator();
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1D447A370;
    *(void *)(v6 + 32) = 0x4024000000000000;
    *(void *)(v5 + 136) = v6;
    uint64_t v7 = swift_retain();
    sub_1D440E104(v7, &v18);
    uint64_t v8 = v19;
    uint64_t v9 = v20;
    char v10 = v21;
    char v11 = v22;
    char v12 = v23;
    char v13 = v24;
    long long v14 = v25;
    uint64_t v15 = v26;
    uint64_t v16 = v27;
    uint64_t v17 = v30;
    *(_OWORD *)(v5 + 16) = v18;
    *(void *)(v5 + 32) = v8;
    *(void *)(v5 + 40) = v9;
    *(unsigned char *)(v5 + 48) = v10;
    *(unsigned char *)(v5 + 49) = v11;
    *(unsigned char *)(v5 + 50) = v12;
    *(unsigned char *)(v5 + 51) = v13;
    *(_OWORD *)(v5 + 56) = v14;
    *(void *)(v5 + 72) = v15;
    *(void *)(v5 + 80) = v16;
    *(_OWORD *)(v5 + 88) = v28;
    *(_OWORD *)(v5 + 104) = v29;
    *(void *)(v5 + 120) = v17;
    sub_1D42A4D5C(a1, (uint64_t)&v18);
    type metadata accessor for FMIPDemoInteractionController();
    swift_allocObject();
    return (char *)sub_1D44572E8(v5, &v18);
  }
  return result;
}

uint64_t sub_1D443B984(uint64_t a1)
{
  uint64_t v2 = sub_1D4469688();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v7 = sub_1D446A278();
  }
  else {
    uint64_t v7 = *(void *)(a1 + 16);
  }
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v7)
  {
    uint64_t v41 = MEMORY[0x1E4FBC860];
    sub_1D43371EC(0, v7 & ~(v7 >> 63), 0);
    if (v6)
    {
      uint64_t result = sub_1D446A228();
      char v10 = 1;
    }
    else
    {
      uint64_t result = sub_1D444A078(a1);
      char v10 = v11 & 1;
    }
    uint64_t v38 = result;
    uint64_t v39 = v9;
    char v40 = v10;
    if (v7 < 0)
    {
      __break(1u);
LABEL_25:
      __break(1u);
    }
    else
    {
      uint64_t v12 = a1 & 0xFFFFFFFFFFFFFF8;
      if (a1 < 0) {
        uint64_t v12 = a1;
      }
      uint64_t v35 = v12;
      uint64_t v36 = v3 + 32;
      uint64_t v33 = v5;
      uint64_t v34 = v3;
      unint64_t v32 = a1 & 0xC000000000000001;
      do
      {
        while (1)
        {
          sub_1D4449E04(v38, v39, v40, a1, &qword_1EA6CA230);
          long long v25 = v24;
          id v26 = objc_msgSend(v24, sel_identifier);
          sub_1D4469668();

          uint64_t v27 = v41;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1D43371EC(0, *(void *)(v27 + 16) + 1, 1);
            uint64_t v27 = v41;
          }
          unint64_t v29 = *(void *)(v27 + 16);
          unint64_t v28 = *(void *)(v27 + 24);
          if (v29 >= v28 >> 1)
          {
            sub_1D43371EC(v28 > 1, v29 + 1, 1);
            uint64_t v27 = v41;
          }
          *(void *)(v27 + 16) = v29 + 1;
          uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(v27+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v29, v5, v2);
          uint64_t v41 = v27;
          if (v6) {
            break;
          }
          uint64_t v13 = v38;
          uint64_t v14 = v39;
          char v15 = v40;
          int64_t v16 = sub_1D4449D0C(v38, v39, v40, a1);
          uint64_t v17 = v2;
          uint64_t v19 = v18;
          uint64_t v20 = a1;
          char v22 = v21;
          sub_1D4329478(v13, v14, v15);
          uint64_t v38 = v16;
          uint64_t v39 = v19;
          uint64_t v2 = v17;
          uint64_t v3 = v34;
          char v23 = v22 & 1;
          a1 = v20;
          unint64_t v6 = v32;
          uint64_t v5 = v33;
          char v40 = v23;
          if (!--v7) {
            goto LABEL_22;
          }
        }
        if ((v40 & 1) == 0) {
          goto LABEL_25;
        }
        if (sub_1D446A248()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_1D42D5DA0(&qword_1EA6C9BA8);
        uint64_t v30 = (void (*)(char *, void))sub_1D4469F18();
        sub_1D446A2D8();
        v30(v37, 0);
        --v7;
      }
      while (v7);
LABEL_22:
      sub_1D4329478(v38, v39, v40);
      return v41;
    }
  }
  return result;
}

uint64_t sub_1D443BCCC(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (2)
    {
      uint64_t v6 = a2 + v5++;
      unint64_t v7 = 0xE400000000000000;
      uint64_t v8 = 1952867692;
      switch(*(unsigned char *)(v6 + 32))
      {
        case 1:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x7468676972;
          break;
        case 2:
          uint64_t v8 = 1702060387;
          break;
        case 3:
          uint64_t v8 = 0x6F6C61646E617473;
          unint64_t v7 = 0xEA0000000000656ELL;
          break;
        case 4:
          uint64_t v8 = 1702131053;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE400000000000000;
      uint64_t v10 = 1952867692;
      switch(a1)
      {
        case 1:
          unint64_t v9 = 0xE500000000000000;
          if (v8 == 0x7468676972) {
            goto LABEL_15;
          }
          goto LABEL_16;
        case 2:
          if (v8 != 1702060387) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 3:
          uint64_t v10 = 0x6F6C61646E617473;
          unint64_t v9 = 0xEA0000000000656ELL;
          goto LABEL_14;
        case 4:
          if (v8 != 1702131053) {
            goto LABEL_16;
          }
          goto LABEL_15;
        default:
LABEL_14:
          if (v8 != v10) {
            goto LABEL_16;
          }
LABEL_15:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            return 1;
          }
LABEL_16:
          char v11 = sub_1D446A758();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11)
          {
            swift_bridgeObjectRelease();
            return 1;
          }
          if (v2 != v5) {
            continue;
          }
          swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  return 0;
}

uint64_t sub_1D443BECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1D4469B38();
  uint64_t v5 = v4;
  if (v3 == sub_1D4469B38() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v8 = sub_1D446A758();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = 5;
  while (1)
  {
    uint64_t v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1)) {
      break;
    }
    uint64_t v12 = sub_1D4469B38();
    uint64_t v14 = v13;
    if (v12 == sub_1D4469B38() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v17 = sub_1D446A758();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_7;
    }
    ++v10;
    if (v11 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

BOOL static FMIPDeviceConnectedStateType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D443C038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D444D208(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D443C064(uint64_t a1)
{
  unint64_t v2 = sub_1D42E342C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D443C0A0(uint64_t a1)
{
  unint64_t v2 = sub_1D42E342C();
  return MEMORY[0x1F41862B0](a1, v2);
}

FMIPCore::FMIPUTAlertState_optional __swiftcall FMIPUTAlertState.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_1D446A518();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_1D443C140(char *a1, char *a2)
{
  return sub_1D4414880(*a1, *a2);
}

uint64_t sub_1D443C14C()
{
  return sub_1D446A888();
}

uint64_t sub_1D443C1D0()
{
  sub_1D4469BC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D443C240()
{
  return sub_1D446A888();
}

FMIPCore::FMIPUTAlertState_optional sub_1D443C2C0(Swift::String *a1)
{
  return FMIPUTAlertState.init(rawValue:)(*a1);
}

void sub_1D443C2CC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64656C62616E65;
  if (*v1) {
    uint64_t v2 = 0x64656C6261736964;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t FMIPDeviceConnectedState.associatedDeviceUUID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D42A3A74(v1, a1, (uint64_t *)&unk_1EBD7E930);
}

uint64_t FMIPDeviceConnectedState.state.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FMIPDeviceConnectedState(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for FMIPDeviceConnectedState(uint64_t a1)
{
  return sub_1D42A1DE8(a1, (uint64_t *)&unk_1EA6CB918);
}

uint64_t sub_1D443C38C()
{
  if (*v0) {
    return 0x6574617473;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_1D443C3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D444D290(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D443C3F0(uint64_t a1)
{
  unint64_t v2 = sub_1D444A4E0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D443C42C(uint64_t a1)
{
  unint64_t v2 = sub_1D444A4E0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPDeviceConnectedState.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CB7D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D42C26F4(a1, a1[3]);
  sub_1D444A4E0();
  sub_1D446A8E8();
  v10[15] = 0;
  sub_1D4469688();
  sub_1D444A534(&qword_1EA6C9FE0, MEMORY[0x1E4F27990]);
  sub_1D446A648();
  if (!v2)
  {
    v10[14] = *(unsigned char *)(v3 + *(int *)(type metadata accessor for FMIPDeviceConnectedState(0) + 20));
    v10[13] = 1;
    sub_1D441CF08();
    sub_1D446A698();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FMIPDeviceConnectedState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_1D42D5DA0((uint64_t *)&unk_1EBD7E930);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EA6CB7E8);
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FMIPDeviceConnectedState(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42C26F4(a1, a1[3]);
  sub_1D444A4E0();
  sub_1D446A8C8();
  if (v2) {
    return sub_1D42BEC64((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)v12;
  uint64_t v14 = v19;
  sub_1D4469688();
  char v23 = 0;
  sub_1D444A534(&qword_1EA6C9FD8, MEMORY[0x1E4F27990]);
  uint64_t v15 = v20;
  sub_1D446A588();
  sub_1D4276C98((uint64_t)v6, v13, (uint64_t *)&unk_1EBD7E930);
  char v21 = 1;
  sub_1D441CEB4();
  sub_1D446A5D8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v15);
  *(unsigned char *)(v13 + *(int *)(v10 + 20)) = v22;
  sub_1D444DAF8(v13, v18, type metadata accessor for FMIPDeviceConnectedState);
  sub_1D42BEC64((uint64_t)a1);
  return sub_1D444DB60(v13, type metadata accessor for FMIPDeviceConnectedState);
}

uint64_t sub_1D443C944@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMIPDeviceConnectedState.init(from:)(a1, a2);
}

uint64_t sub_1D443C95C(void *a1)
{
  return FMIPDeviceConnectedState.encode(to:)(a1);
}

uint64_t FMIPDeviceConnectedStateType.hash(into:)()
{
  return sub_1D446A838();
}

uint64_t sub_1D443C9A0(uint64_t a1)
{
  unint64_t v2 = sub_1D444A678();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D443C9DC(uint64_t a1)
{
  unint64_t v2 = sub_1D444A678();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D443CA18()
{
  uint64_t result = 0x656E6E6F63736964;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x657463656E6E6F63;
      break;
    case 2:
      uint64_t result = 0x6465686361747461;
      break;
    case 3:
      uint64_t result = 0x6465686361746564;
      break;
    case 4:
      uint64_t result = 0x6465746365746564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D443CAE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D444D378(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D443CB08(uint64_t a1)
{
  unint64_t v2 = sub_1D444A57C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D443CB44(uint64_t a1)
{
  unint64_t v2 = sub_1D444A57C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D443CB80(uint64_t a1)
{
  unint64_t v2 = sub_1D444A6CC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D443CBBC(uint64_t a1)
{
  unint64_t v2 = sub_1D444A6CC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D443CBF8(uint64_t a1)
{
  unint64_t v2 = sub_1D444A624();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D443CC34(uint64_t a1)
{
  unint64_t v2 = sub_1D444A624();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D443CC70(uint64_t a1)
{
  unint64_t v2 = sub_1D444A5D0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D443CCAC(uint64_t a1)
{
  unint64_t v2 = sub_1D444A5D0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D443CCE8(uint64_t a1)
{
  unint64_t v2 = sub_1D444A720();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D443CD24(uint64_t a1)
{
  unint64_t v2 = sub_1D444A720();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPDeviceConnectedStateType.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6CB7F0);
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v35 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CB7F8);
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  MEMORY[0x1F4188790](v5);
  unint64_t v32 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EA6CB800);
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  MEMORY[0x1F4188790](v7);
  unint64_t v29 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D42D5DA0(&qword_1EA6CB808);
  uint64_t v27 = *(void *)(v9 - 8);
  uint64_t v28 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D42D5DA0(&qword_1EA6CB810);
  uint64_t v26 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D42D5DA0(&qword_1EA6CB818);
  uint64_t v38 = *(void *)(v15 - 8);
  uint64_t v39 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v1;
  sub_1D42C26F4(a1, a1[3]);
  sub_1D444A57C();
  sub_1D446A8E8();
  switch(v18)
  {
    case 1:
      char v41 = 1;
      sub_1D444A6CC();
      uint64_t v21 = v39;
      sub_1D446A618();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
      goto LABEL_8;
    case 2:
      char v42 = 2;
      sub_1D444A678();
      char v22 = v29;
      uint64_t v21 = v39;
      sub_1D446A618();
      uint64_t v24 = v30;
      uint64_t v23 = v31;
      goto LABEL_7;
    case 3:
      char v43 = 3;
      sub_1D444A624();
      char v22 = v32;
      uint64_t v21 = v39;
      sub_1D446A618();
      uint64_t v24 = v33;
      uint64_t v23 = v34;
      goto LABEL_7;
    case 4:
      char v44 = 4;
      sub_1D444A5D0();
      char v22 = v35;
      uint64_t v21 = v39;
      sub_1D446A618();
      uint64_t v24 = v36;
      uint64_t v23 = v37;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
LABEL_8:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v21);
      break;
    default:
      char v40 = 0;
      sub_1D444A720();
      uint64_t v19 = v39;
      sub_1D446A618();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v19);
      break;
  }
  return result;
}

uint64_t FMIPDeviceConnectedStateType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  int v54 = a2;
  uint64_t v50 = sub_1D42D5DA0(&qword_1EA6CB850);
  uint64_t v43 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v53 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1D42D5DA0(&qword_1EA6CB858);
  uint64_t v49 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v52 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CB860);
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v51 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EA6CB868);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D42D5DA0(&qword_1EA6CB870);
  uint64_t v42 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D42D5DA0(&qword_1EA6CB878);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  char v55 = a1;
  sub_1D42C26F4(a1, v17);
  sub_1D444A57C();
  uint64_t v18 = v56;
  sub_1D446A8C8();
  if (v18)
  {
LABEL_7:
    uint64_t v33 = (uint64_t)v55;
    return sub_1D42BEC64(v33);
  }
  uint64_t v39 = v10;
  char v40 = v12;
  uint64_t v19 = v9;
  uint64_t v21 = v51;
  uint64_t v20 = v52;
  uint64_t v41 = 0;
  uint64_t v56 = v14;
  char v22 = v53;
  uint64_t v23 = v54;
  uint64_t v24 = v16;
  uint64_t v25 = sub_1D446A5F8();
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v30 = sub_1D446A3D8();
    swift_allocError();
    unint64_t v32 = v31;
    sub_1D42D5DA0(&qword_1EA6CB480);
    *unint64_t v32 = &type metadata for FMIPDeviceConnectedStateType;
    sub_1D446A538();
    sub_1D446A3C8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x1E4FBBA70], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v13);
    goto LABEL_7;
  }
  char v26 = *(unsigned char *)(v25 + 32);
  switch(v26)
  {
    case 1:
      char v58 = 1;
      sub_1D444A6CC();
      uint64_t v35 = v41;
      sub_1D446A528();
      if (v35) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v45);
      goto LABEL_19;
    case 2:
      char v59 = 2;
      sub_1D444A678();
      uint64_t v36 = v41;
      sub_1D446A528();
      if (v36) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v48);
      goto LABEL_19;
    case 3:
      char v60 = 3;
      sub_1D444A624();
      uint64_t v37 = v41;
      sub_1D446A528();
      if (v37) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v46);
LABEL_19:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      goto LABEL_21;
    case 4:
      char v61 = 4;
      sub_1D444A5D0();
      uint64_t v38 = v41;
      sub_1D446A528();
      if (v38) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      uint64_t v23 = v54;
      goto LABEL_21;
    default:
      char v27 = *(unsigned char *)(v25 + 32);
      char v57 = 0;
      sub_1D444A720();
      unint64_t v29 = v40;
      uint64_t v28 = v41;
      sub_1D446A528();
      if (v28)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
        uint64_t v33 = (uint64_t)v55;
        return sub_1D42BEC64(v33);
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      char v26 = v27;
LABEL_21:
      *uint64_t v23 = v26;
      uint64_t result = sub_1D42BEC64((uint64_t)v55);
      break;
  }
  return result;
}

uint64_t sub_1D443D9F0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FMIPDeviceConnectedStateType.init(from:)(a1, a2);
}

uint64_t sub_1D443DA08(void *a1)
{
  return FMIPDeviceConnectedStateType.encode(to:)(a1);
}

uint64_t FMIPBeaconSeparationMonitoringState.description.getter()
{
  uint64_t result = 0x64656C62616E65;
  switch(*v0)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 0x64656C6261736964;
      break;
    case 3:
      uint64_t result = 0x646573756170;
      break;
    default:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_1D443DAA8()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64656C62616E65;
      break;
    case 2:
      uint64_t result = 0x64656C6261736964;
      break;
    case 3:
      uint64_t result = 0x646573756170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D443DB30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D444D5CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D443DB58(uint64_t a1)
{
  unint64_t v2 = sub_1D444A774();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D443DB94(uint64_t a1)
{
  unint64_t v2 = sub_1D444A774();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D443DBD0(uint64_t a1)
{
  unint64_t v2 = sub_1D444A81C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D443DC0C(uint64_t a1)
{
  unint64_t v2 = sub_1D444A81C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D443DC48(uint64_t a1)
{
  unint64_t v2 = sub_1D444A870();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D443DC84(uint64_t a1)
{
  unint64_t v2 = sub_1D444A870();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D443DCC0(uint64_t a1)
{
  unint64_t v2 = sub_1D444A7C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D443DCFC(uint64_t a1)
{
  unint64_t v2 = sub_1D444A7C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D443DD38(uint64_t a1)
{
  unint64_t v2 = sub_1D444A8C4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D443DD74(uint64_t a1)
{
  unint64_t v2 = sub_1D444A8C4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FMIPBeaconSeparationMonitoringState.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6CB880);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x1F4188790](v3);
  unint64_t v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CB888);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  char v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D42D5DA0(&qword_1EA6CB890);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D42D5DA0(&qword_1EA6CB898);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D42D5DA0(&qword_1EA6CB8A0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  sub_1D42C26F4(a1, a1[3]);
  sub_1D444A774();
  sub_1D446A8E8();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_1D444A870();
      uint64_t v17 = v23;
      sub_1D446A618();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_1D444A81C();
      uint64_t v17 = v26;
      sub_1D446A618();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_1D444A7C8();
      uint64_t v17 = v29;
      sub_1D446A618();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_1D444A8C4();
      sub_1D446A618();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t FMIPBeaconSeparationMonitoringState.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6CB8D0);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D42D5DA0(&qword_1EA6CB8D8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D42D5DA0(&qword_1EA6CB8E0);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D42D5DA0(&qword_1EA6CB8E8);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D42D5DA0(&qword_1EA6CB8F0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v51 = a1;
  sub_1D42C26F4(a1, v18);
  sub_1D444A774();
  uint64_t v19 = v52;
  sub_1D446A8C8();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  char v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  uint64_t v23 = v17;
  uint64_t v24 = sub_1D446A5F8();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_1D446A3D8();
    swift_allocError();
    unint64_t v29 = v28;
    sub_1D42D5DA0(&qword_1EA6CB480);
    *unint64_t v29 = &type metadata for FMIPBeaconSeparationMonitoringState;
    sub_1D446A538();
    sub_1D446A3C8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x1E4FBBA70], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return sub_1D42BEC64(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_1D444A870();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_1D446A528();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_1D444A81C();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_1D446A528();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_1D444A7C8();
      uint64_t v37 = v52;
      sub_1D446A528();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return sub_1D42BEC64(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_1D444A8C4();
      uint64_t v26 = v52;
      sub_1D446A528();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
LABEL_19:
      unsigned char *v38 = v25;
      break;
  }
  return sub_1D42BEC64(v30);
}

uint64_t sub_1D443E828()
{
  uint64_t result = 0x64656C62616E65;
  switch(*v0)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 0x64656C6261736964;
      break;
    case 3:
      uint64_t result = 0x646573756170;
      break;
    default:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_1D443E8B0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FMIPBeaconSeparationMonitoringState.init(from:)(a1, a2);
}

uint64_t sub_1D443E8C8(void *a1)
{
  return FMIPBeaconSeparationMonitoringState.encode(to:)(a1);
}

BOOL FMIPSeparationMonitoringState.allowsSeparationMonitoringUI.getter()
{
  return *v0 != 5;
}

BOOL static FMIPSeparationMonitoringState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 6) {
    return v3 == 6;
  }
  if (v2 == 7) {
    return v3 == 7;
  }
  if ((v3 & 0xFE) == 6) {
    return 0;
  }
  return v2 == v3;
}

uint64_t FMIPSeparationMonitoringState.allowsSeparationMonitoringConfiguration.getter()
{
  int v1 = *v0;
  int v2 = v1 & 0xFE;
  BOOL v4 = v1 != 4 && v1 != 2;
  return v2 == 6 || v4;
}

BOOL sub_1D443E978(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL v4 = v3 == 6;
  BOOL v5 = v3 == 7;
  BOOL v7 = v2 == v3 && (v3 & 0xFE) != 6;
  if (v2 == 7) {
    BOOL v7 = v5;
  }
  if (v2 == 6) {
    return v4;
  }
  else {
    return v7;
  }
}

uint64_t sub_1D443E9B4()
{
  uint64_t v0 = sub_1D4469618();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D4469608();
  sub_1D4469518();
  double v5 = v4;
  sub_1D4469518();
  double v7 = v5 - v6;
  if (v7 >= 0.0 && v7 <= 900.0)
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  if (v7 >= 900.0 && v7 <= 3600.0)
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 1;
  }
  if (v7 < 3600.0)
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 3;
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v7 > 43200.0) {
    return 3;
  }
  return 2;
}

void sub_1D443EB5C(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_1D4469B38();
  uint64_t v6 = v5;
  if (v4 == sub_1D4469B38() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  char v9 = sub_1D446A758();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v10 = 0;
  if ((v9 & 1) == 0)
  {
    uint64_t v11 = sub_1D4469B38();
    uint64_t v13 = v12;
    if (v11 == sub_1D4469B38() && v13 == v14)
    {
      swift_bridgeObjectRelease_n();
      char v10 = 1;
      goto LABEL_14;
    }
    char v16 = sub_1D446A758();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v16)
    {
      char v10 = 1;
      goto LABEL_14;
    }
    uint64_t v17 = sub_1D4469B38();
    uint64_t v19 = v18;
    if (v17 == sub_1D4469B38() && v19 == v20)
    {
      char v10 = 2;
      swift_bridgeObjectRelease_n();
      goto LABEL_14;
    }
    char v21 = sub_1D446A758();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v21)
    {
      char v10 = 2;
      goto LABEL_14;
    }
    uint64_t v22 = sub_1D4469B38();
    uint64_t v24 = v23;
    if (v22 == sub_1D4469B38() && v24 == v25)
    {
      swift_bridgeObjectRelease_n();
      char v10 = 3;
      goto LABEL_14;
    }
    char v26 = sub_1D446A758();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v26)
    {
      char v10 = 3;
      goto LABEL_14;
    }
    uint64_t v27 = sub_1D4469B38();
    uint64_t v29 = v28;
    if (v27 == sub_1D4469B38() && v29 == v30)
    {
      swift_bridgeObjectRelease_n();
      char v10 = 4;
      goto LABEL_14;
    }
    char v31 = sub_1D446A758();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v31)
    {
      char v10 = 4;
      goto LABEL_14;
    }
    uint64_t v32 = sub_1D4469B38();
    uint64_t v34 = v33;
    if (v32 == sub_1D4469B38() && v34 == v35)
    {
      swift_bridgeObjectRelease_n();
      char v10 = 5;
      goto LABEL_14;
    }
    char v36 = sub_1D446A758();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v36)
    {
      char v10 = 5;
      goto LABEL_14;
    }
    uint64_t v37 = sub_1D4469B38();
    uint64_t v39 = v38;
    if (v37 == sub_1D4469B38() && v39 == v40)
    {
      swift_bridgeObjectRelease_n();
      char v10 = 6;
      goto LABEL_14;
    }
    char v41 = sub_1D446A758();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v41)
    {
      char v10 = 6;
      goto LABEL_14;
    }
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1D4469928();
    sub_1D42D7FAC(v42, (uint64_t)qword_1EBD83228);
    uint64_t v43 = sub_1D44698F8();
    os_log_type_t v44 = sub_1D446A028();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl(&dword_1D4271000, v43, v44, "FMIPBeaconRefreshingController: unhandled beacon type!", v45, 2u);
      MEMORY[0x1D9447730](v45, -1, -1);
    }

LABEL_13:
    char v10 = 0;
  }
LABEL_14:

  *a2 = v10;
}

void sub_1D443EFC0()
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1D4469928();
  sub_1D42D7FAC(v0, (uint64_t)qword_1EBD83228);
  uint64_t v1 = sub_1D44698F8();
  os_log_type_t v2 = sub_1D4469FF8();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = v4;
    *(_DWORD *)int v3 = 136315138;
    sub_1D42CB9EC(0xD000000000000010, 0x80000001D44849C0, &v5);
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v1, v2, "FMIPBeaconRefreshingController: %s - Will update", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v4, -1, -1);
    MEMORY[0x1D9447730](v3, -1, -1);
  }

  sub_1D42AB908();
}

uint64_t sub_1D443F148()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D4469958();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D44699B8();
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D4469928();
  sub_1D42D7FAC(v9, (uint64_t)qword_1EBD83228);
  swift_retain();
  char v10 = sub_1D44698F8();
  os_log_type_t v11 = sub_1D446A038();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 67109120;
    LODWORD(aBlock[0]) = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_isThrottled);
    sub_1D446A188();
    swift_release();
    _os_log_impl(&dword_1D4271000, v10, v11, "FMIPBeaconRefreshingController: isThrottled?: %{BOOL}d)", v12, 8u);
    MEMORY[0x1D9447730](v12, -1, -1);
  }
  else
  {

    swift_release();
  }
  sub_1D4275AD0(0, (unint64_t *)&qword_1EBD7E860);
  uint64_t v13 = (void *)sub_1D446A098();
  aBlock[4] = sub_1D444D920;
  void aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C12818;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1D4469988();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1D444A534((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v8, v5, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v17);
}

void sub_1D443F51C()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_isThrottled) == 1
    && *(unsigned char *)(v0 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_isThrottledOverride) != 1)
  {
    sub_1D443FA54();
    sub_1D4446078();
  }
  else
  {
    uint64_t v1 = *(NSObject **)(v0 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshQueue);
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = sub_1D42E3810;
    *(void *)(v2 + 24) = v0;
    v4[4] = sub_1D42AEE88;
    v4[5] = v2;
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 1107296256;
    v4[2] = sub_1D42AEDE4;
    v4[3] = &unk_1F2C12D18;
    uint64_t v3 = _Block_copy(v4);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v1, v3);
    _Block_release(v3);
    LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v1) {
      __break(1u);
    }
  }
}

uint64_t sub_1D443F6AC()
{
  uint64_t v1 = v0;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  uint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  uint64_t v5 = &qword_1EBD83000;
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v20 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = sub_1D4469638();
    unint64_t v10 = sub_1D427A0D0(0xCuLL, v8, v9);
    uint64_t v11 = MEMORY[0x1D9445EF0](v10);
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D42CB9EC(v11, v13, &v20);
    sub_1D446A188();
    swift_release_n();
    uint64_t v5 = &qword_1EBD83000;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPBeaconRefreshingController<%s>.deinit", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v7, -1, -1);
    MEMORY[0x1D9447730](v6, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v14 = v0 + v5[38];
  uint64_t v15 = sub_1D4469688();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v16 = v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_lastRefreshTime;
  uint64_t v17 = sub_1D4469618();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
  v18(v16, v17);
  sub_1D42F9538(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_delegate);
  v18(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_lastActiveTimestamp, v17);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1D443F9FC()
{
  sub_1D443F6AC();
  return swift_deallocClassInstance();
}

uint64_t sub_1D443FA54()
{
  uint64_t v1 = sub_1D4469958();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  os_log_type_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D44699B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshQueue);
  aBlock[4] = sub_1D444F3C8;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C13150;
  unint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_1D4469988();
  v11[1] = MEMORY[0x1E4FBC860];
  sub_1D444A534((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

void sub_1D443FD00(unsigned char *a1)
{
  uint64_t v2 = sub_1D4469618();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D4469928();
  sub_1D42D7FAC(v6, (uint64_t)qword_1EBD83228);
  uint64_t v7 = sub_1D44698F8();
  os_log_type_t v8 = sub_1D446A038();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v9 = 0;
    _os_log_impl(&dword_1D4271000, v7, v8, "FMIPBeaconRefreshingController: Stop Refreshing", v9, 2u);
    MEMORY[0x1D9447730](v9, -1, -1);
  }

  a1[OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_isRefreshing] = 0;
  sub_1D4283284();
  a1[OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_currentlyRefreshing] = 0;
  a1[OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_nextRefreshQueued] = 0;
  sub_1D4469548();
  unint64_t v10 = &a1[OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_lastRefreshTime];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v3 + 40))(v10, v5, v2);
  swift_endAccess();
  uint64_t v11 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveObserver(v11, a1, (CFNotificationName)*MEMORY[0x1E4F97DD0], 0);
  CFNotificationCenterRemoveObserver(v11, a1, (CFNotificationName)*MEMORY[0x1E4F97DF8], 0);
  id v12 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v12, sel_removeObserver_, a1);

  uint64_t v13 = sub_1D4469108();
  uint64_t v28 = (void *)v13;
  uint64_t v29 = sub_1D444A534(&qword_1EBD7E550, MEMORY[0x1E4F619E0]);
  uint64_t v14 = sub_1D42BECB4(&aBlock);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v13 - 8) + 104))(v14, *MEMORY[0x1E4F619D0], v13);
  LOBYTE(v13) = MEMORY[0x1D9445460](&aBlock);
  sub_1D42BEC64((uint64_t)&aBlock);
  if ((v13 & 1) != 0
    && a1[OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_shouldUseBeaconsOptimizationSPI] == 1)
  {
    uint64_t v15 = sub_1D44698F8();
    os_log_type_t v16 = sub_1D446A008();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_1D4271000, v15, v16, "FMIPBeaconRefreshingController: stopUpdatingApplicationBeacons - Will call", v17, 2u);
      MEMORY[0x1D9447730](v17, -1, -1);
    }

    uint64_t v18 = *(void **)&a1[OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_ownerSession];
    uint64_t v29 = (uint64_t)sub_1D444F3D0;
    uint64_t v30 = a1;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v26 = 1107296256;
    uint64_t v27 = sub_1D4276428;
    uint64_t v28 = &unk_1F2C131A0;
    uint64_t v19 = _Block_copy(&aBlock);
    id v20 = v18;
    swift_retain();
    swift_release();
    objc_msgSend(v20, sel_stopUpdatingApplicationBeaconsWithCompletion_, v19);
    _Block_release(v19);
  }
  uint64_t v21 = OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_ownerSession;
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_ownerSession], sel_stopRefreshing);
  objc_msgSend(*(id *)&a1[v21], sel_stopRefreshingSeparationMonitoringState);
  uint64_t v22 = *(void **)&a1[v21];
  uint64_t v29 = (uint64_t)sub_1D44406D0;
  uint64_t v30 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v26 = 1107296256;
  uint64_t v27 = sub_1D42E1B08;
  uint64_t v28 = &unk_1F2C13178;
  uint64_t v23 = _Block_copy(&aBlock);
  id v24 = v22;
  objc_msgSend(v24, sel_unsubscribeLocationUpdatesWithCompletion_, v23);
  _Block_release(v23);
}

uint64_t sub_1D44401E4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = sub_1D4469958();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  os_log_type_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D44699B8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)(a3 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshQueue);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a2;
  aBlock[4] = sub_1D444F45C;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C131F0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  id v15 = a2;
  sub_1D4469988();
  v17[1] = MEMORY[0x1E4FBC860];
  sub_1D444A534((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

void sub_1D44404B8(uint64_t a1, void *a2)
{
  *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_appBeacons) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D4469928();
  sub_1D42D7FAC(v3, (uint64_t)qword_1EBD83228);
  id v4 = a2;
  id v5 = a2;
  oslog = sub_1D44698F8();
  os_log_type_t v6 = sub_1D446A038();
  if (os_log_type_enabled(oslog, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    if (a2)
    {
      swift_getErrorValue();
      uint64_t v9 = sub_1D446A7D8();
      unint64_t v11 = v10;
    }
    else
    {
      unint64_t v11 = 0xE400000000000000;
      uint64_t v9 = 1701736302;
    }
    sub_1D42CB9EC(v9, v11, &v13);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, oslog, v6, "FMIPBeaconRefreshingController: stopUpdatingApplicationBeacons - Stopped updating application beacons, error: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v8, -1, -1);
    MEMORY[0x1D9447730](v7, -1, -1);
  }
  else
  {
  }
}

void sub_1D44406D0(void *a1)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  id v3 = a1;
  id v4 = a1;
  oslog = sub_1D44698F8();
  os_log_type_t v5 = sub_1D446A038();
  if (os_log_type_enabled(oslog, v5))
  {
    os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)os_log_type_t v6 = 136315138;
    if (a1)
    {
      swift_getErrorValue();
      uint64_t v8 = sub_1D446A7D8();
      unint64_t v10 = v9;
    }
    else
    {
      unint64_t v10 = 0xE400000000000000;
      uint64_t v8 = 1701736302;
    }
    sub_1D42CB9EC(v8, v10, &v12);
    sub_1D446A188();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D4271000, oslog, v5, "FMIPBeaconRefreshingController: Stopped Refreshing Locations, error: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v7, -1, -1);
    MEMORY[0x1D9447730](v6, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1D44408C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v58 = a6;
  uint64_t v59 = a3;
  uint64_t v60 = a4;
  uint64_t v68 = a2;
  uint64_t v8 = sub_1D4469958();
  uint64_t v65 = *(void *)(v8 - 8);
  uint64_t v66 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v63 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1D44699B8();
  uint64_t v62 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  char v61 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D4469618();
  uint64_t v56 = *(void *)(v11 - 8);
  uint64_t v57 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v54 = v12;
  char v55 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D4469688();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  char v53 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v49 - v17;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1D4469928();
  sub_1D42D7FAC(v19, (uint64_t)qword_1EBD83228);
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v51(v18, a1, v13);
  id v20 = sub_1D44698F8();
  os_log_type_t v21 = sub_1D446A038();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v67 = v13;
  if (v22)
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v50 = a5;
    uint64_t v25 = v24;
    aBlock[0] = v24;
    uint64_t v49 = a1;
    *(_DWORD *)uint64_t v23 = 136315138;
    uint64_t v26 = sub_1D4469638();
    uint64_t v69 = sub_1D42CB9EC(v26, v27, aBlock);
    a1 = v49;
    sub_1D446A188();
    uint64_t v28 = v14;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v67);
    _os_log_impl(&dword_1D4271000, v20, v21, "FMIPBeaconRefreshingController: Refreshing beacons %s", v23, 0xCu);
    swift_arrayDestroy();
    uint64_t v29 = v25;
    a5 = v50;
    MEMORY[0x1D9447730](v29, -1, -1);
    uint64_t v30 = v23;
    uint64_t v13 = v67;
    MEMORY[0x1D9447730](v30, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);

    uint64_t v28 = v14;
  }
  uint64_t v31 = v68;
  uint64_t v50 = *(void *)(v68 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshQueue);
  uint64_t v32 = v53;
  v51(v53, a1, v13);
  uint64_t v33 = v55;
  uint64_t v34 = v56;
  uint64_t v35 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, a5, v57);
  unint64_t v36 = (*(unsigned __int8 *)(v28 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v37 = (v52 + *(unsigned __int8 *)(v34 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  unint64_t v38 = (v54 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = (char *)swift_allocObject();
  uint64_t v40 = v28;
  uint64_t v41 = (uint64_t)v39;
  *((void *)v39 + 2) = v31;
  uint64_t v43 = v59;
  uint64_t v42 = v60;
  *((void *)v39 + 3) = v59;
  *((void *)v39 + 4) = v42;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v39[v36], v32, v67);
  (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v41 + v37, v33, v35);
  *(void *)(v41 + v38) = v58;
  aBlock[4] = (uint64_t)sub_1D444EA88;
  void aBlock[5] = v41;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_1D42BD950;
  uint64_t aBlock[3] = (uint64_t)&unk_1F2C12EF8;
  os_log_type_t v44 = _Block_copy(aBlock);
  swift_retain();
  sub_1D42972D4(v43);
  uint64_t v45 = v61;
  sub_1D4469988();
  uint64_t v69 = MEMORY[0x1E4FBC860];
  sub_1D444A534((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  uint64_t v46 = v63;
  uint64_t v47 = v66;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v45, v46, v44);
  _Block_release(v44);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v46, v47);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v64);
  return swift_release();
}

void sub_1D4440FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v57 = a5;
  uint64_t v59 = a4;
  uint64_t v62 = a3;
  uint64_t v63 = sub_1D4469688();
  uint64_t v61 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v58 = v7;
  uint64_t v60 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D4469618();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v52 - v13;
  sub_1D4469608();
  id v15 = (id)(a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_lastRefreshTime);
  swift_beginAccess();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v55 = v9 + 16;
  uint64_t v54 = v16;
  v16(v12, (uint64_t)v15, v8);
  sub_1D4469558();
  double v18 = v17;
  uint64_t v67 = v9;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v12, v8);
  uint64_t v66 = v14;
  v19(v14, v8);
  int v20 = 0;
  uint64_t v64 = a2;
  if (!a2 && v18 <= 30.0) {
    int v20 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_currentlyRefreshing);
  }
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1D4469928();
  sub_1D42D7FAC(v21, (uint64_t)qword_1EBD83228);
  swift_retain();
  BOOL v22 = sub_1D44698F8();
  os_log_type_t v23 = sub_1D446A038();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v65 = v8;
  if (v24)
  {
    uint64_t v25 = (_DWORD *)swift_slowAlloc();
    id v53 = v15;
    uint64_t v26 = v25;
    *uint64_t v25 = 67109632;
    LODWORD(aBlock[0]) = v20;
    sub_1D446A188();
    *((_WORD *)v26 + 4) = 1024;
    LODWORD(aBlock[0]) = v18 > 30.0;
    sub_1D446A188();
    *((_WORD *)v26 + 7) = 1024;
    LODWORD(aBlock[0]) = *(unsigned __int8 *)(a1
                                            + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_currentlyRefreshing);
    sub_1D446A188();
    swift_release();
    _os_log_impl(&dword_1D4271000, v22, v23, "FMIPBeaconRefreshingController: Should rate limit? %{BOOL}d, possibly stuck? %{BOOL}d, currentlyRefreshing? %{BOOL}d", (uint8_t *)v26, 0x14u);
    unint64_t v27 = v26;
    uint64_t v8 = v65;
    id v15 = v53;
    MEMORY[0x1D9447730](v27, -1, -1);

    if (!v20) {
      goto LABEL_14;
    }
  }
  else
  {

    swift_release();
    if (!v20)
    {
LABEL_14:
      *(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_currentlyRefreshing) = 1;
      uint64_t v32 = v66;
      sub_1D4469608();
      swift_beginAccess();
      (*(void (**)(id, char *, uint64_t))(v67 + 40))(v15, v32, v8);
      swift_endAccess();
      uint64_t v33 = sub_1D44698F8();
      os_log_type_t v34 = sub_1D446A038();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl(&dword_1D4271000, v33, v34, "FMIPBeaconRefreshingController: Refresh Beacon Groups", v35, 2u);
        MEMORY[0x1D9447730](v35, -1, -1);
      }

      id v53 = *(id *)(a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_ownerSession);
      uint64_t v36 = v63;
      uint64_t v52 = sub_1D4469D58();
      unint64_t v37 = v60;
      uint64_t v38 = v61;
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, v59, v36);
      uint64_t v39 = v66;
      v54(v66, v57, v8);
      unint64_t v40 = (*(unsigned __int8 *)(v38 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      uint64_t v41 = v67;
      unint64_t v42 = (v58 + *(unsigned __int8 *)(v67 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
      unint64_t v43 = (v56 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v44 = swift_allocObject();
      *(void *)(v44 + 16) = a1;
      (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v44 + v40, v37, v36);
      (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v44 + v42, v39, v65);
      uint64_t v45 = (uint64_t *)(v44 + v43);
      uint64_t v46 = v64;
      uint64_t v47 = v62;
      *uint64_t v45 = v64;
      v45[1] = v47;
      aBlock[4] = sub_1D444ECF8;
      void aBlock[5] = v44;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_1D42E0280;
      uint64_t aBlock[3] = &unk_1F2C12F48;
      uint64_t v48 = _Block_copy(aBlock);
      swift_retain();
      sub_1D42972D4(v46);
      swift_release();
      id v49 = v53;
      uint64_t v50 = (void *)v52;
      objc_msgSend(v53, sel_beaconGroupsForUUIDs_completion_, v52, v48);
      _Block_release(v48);

      return;
    }
  }
  uint64_t v28 = sub_1D44698F8();
  os_log_type_t v29 = sub_1D446A038();
  BOOL v30 = os_log_type_enabled(v28, v29);
  if (v18 > 30.0)
  {
    if (v30)
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 134217984;
      *(double *)uint64_t aBlock = v18;
      sub_1D446A188();
      _os_log_impl(&dword_1D4271000, v28, v29, "FMIPBeaconRefreshingController: Refresh queue seemed stuck (for %f sec), allowing refresh.", v31, 0xCu);
      MEMORY[0x1D9447730](v31, -1, -1);
    }

    goto LABEL_14;
  }
  if (v30)
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v51 = 134217984;
    *(double *)uint64_t aBlock = v18;
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v28, v29, "FMIPBeaconRefreshingController: Ignoring refresh, the previous one didn't finish, %fs ago", v51, 0xCu);
    MEMORY[0x1D9447730](v51, -1, -1);
  }

  *(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_nextRefreshQueued) = 1;
}

void sub_1D4441738(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v45 = a4;
  uint64_t v53 = sub_1D4469618();
  uint64_t v48 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v44 = v10;
  uint64_t v52 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D4469688();
  uint64_t v46 = *(void *)(v11 - 8);
  uint64_t v47 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v43 = v12;
  uint64_t v51 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMIPItemGroup();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_1D42B2D58(v17);
  swift_bridgeObjectRelease();
  if (v18 < 0 || (v18 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1D446A498();
    swift_release();
    uint64_t v49 = a5;
    uint64_t v50 = a6;
    if (v19) {
      goto LABEL_4;
    }
LABEL_14:
    swift_release();
    uint64_t v21 = MEMORY[0x1E4FBC860];
    goto LABEL_15;
  }
  uint64_t v19 = *(void *)(v18 + 16);
  uint64_t v49 = a5;
  uint64_t v50 = a6;
  if (!v19) {
    goto LABEL_14;
  }
LABEL_4:
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1D4337294(0, v19 & ~(v19 >> 63), 0);
  if (v19 < 0)
  {
    __break(1u);
    return;
  }
  uint64_t v41 = a3;
  unint64_t v42 = a2;
  uint64_t v20 = 0;
  uint64_t v21 = aBlock[0];
  do
  {
    if ((v18 & 0xC000000000000001) != 0) {
      id v22 = (id)MEMORY[0x1D9446710](v20, v18);
    }
    else {
      id v22 = *(id *)(v18 + 8 * v20 + 32);
    }
    sub_1D4343304((uint64_t)v22, v16);
    aBlock[0] = v21;
    unint64_t v24 = *(void *)(v21 + 16);
    unint64_t v23 = *(void *)(v21 + 24);
    if (v24 >= v23 >> 1)
    {
      sub_1D4337294(v23 > 1, v24 + 1, 1);
      uint64_t v21 = aBlock[0];
    }
    ++v20;
    *(void *)(v21 + 16) = v24 + 1;
    sub_1D444E76C((uint64_t)v16, v21+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v24, (uint64_t (*)(void))type metadata accessor for FMIPItemGroup);
  }
  while (v19 != v20);
  swift_release();
  a3 = v41;
  a2 = v42;
LABEL_15:
  *(void *)&a2[OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_itemGroups] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1D4469928();
  sub_1D42D7FAC(v25, (uint64_t)qword_1EBD83228);
  uint64_t v26 = sub_1D44698F8();
  os_log_type_t v27 = sub_1D446A038();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_1D4271000, v26, v27, "FMIPBeaconRefreshingController: Calling SPOwnerSession - allBeacons", v28, 2u);
    MEMORY[0x1D9447730](v28, -1, -1);
  }

  unint64_t v42 = *(char **)&a2[OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_ownerSession];
  uint64_t v29 = v46;
  uint64_t v30 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v51, a3, v47);
  uint64_t v31 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v52, v45, v53);
  unint64_t v32 = (*(unsigned __int8 *)(v29 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v33 = (v43 + *(unsigned __int8 *)(v31 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v34 = (v44 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v35 + v32, v51, v30);
  (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v35 + v33, v52, v53);
  *(void *)(v35 + v34) = v21;
  uint64_t v36 = (uint64_t *)(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v38 = v49;
  uint64_t v37 = v50;
  *uint64_t v36 = v49;
  v36[1] = v37;
  aBlock[4] = sub_1D444EF90;
  void aBlock[5] = v35;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1D4444728;
  uint64_t aBlock[3] = &unk_1F2C12F98;
  uint64_t v39 = _Block_copy(aBlock);
  unint64_t v40 = v42;
  swift_retain();
  sub_1D42972D4(v38);
  swift_release();
  objc_msgSend(v40, sel_allBeaconsWithCompletion_, v39);
  _Block_release(v39);
}

uint64_t sub_1D4441CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v217 = a7;
  uint64_t v228 = a6;
  uint64_t v218 = a5;
  uint64_t v240 = a4;
  uint64_t v245 = a3;
  uint64_t v9 = sub_1D4469958();
  uint64_t v227 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t)&v216 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = sub_1D44699B8();
  uint64_t v226 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v225 = (char *)&v216 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMIPDeviceLostModeMetadata();
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v253 = (uint64_t)&v216 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v252 = (uint64_t)&v216 - v17;
  uint64_t v18 = sub_1D4469618();
  uint64_t v239 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  unint64_t v246 = (char *)&v216 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v236 = (char *)&v216 - v21;
  uint64_t v22 = sub_1D42D5DA0(&qword_1EBD7CB80);
  uint64_t v23 = MEMORY[0x1F4188790](v22 - 8);
  uint64_t v241 = (uint64_t)&v216 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v238 = (char *)&v216 - v25;
  uint64_t updated = type metadata accessor for FMIPItemUpdateType(0);
  MEMORY[0x1F4188790](updated);
  uint64_t v237 = (char *)&v216 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v231 = 0;
  uint64_t v259 = sub_1D4469688();
  uint64_t v250 = *(void *)(v259 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v259);
  uint64_t v222 = (char *)&v216 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v229 = (char *)&v216 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v261 = (uint64_t)&v216 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v251 = (char *)&v216 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v233 = (char *)&v216 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v232 = (char *)&v216 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v230 = (char *)&v216 - v40;
  MEMORY[0x1F4188790](v39);
  uint64_t v248 = (uint64_t)&v216 - v41;
  unint64_t v42 = *(NSObject **)(a2 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshQueue);
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = a2;
  *(void *)(v43 + 24) = a1;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_1D444F0D0;
  *(void *)(v44 + 24) = v43;
  uint64_t v224 = v43;
  uint64_t v267 = sub_1D42AEE88;
  uint64_t v268 = v44;
  uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
  uint64_t v264 = 1107296256;
  uint64_t v265 = sub_1D42AEDE4;
  uint64_t v266 = &unk_1F2C13010;
  uint64_t v45 = _Block_copy(&aBlock);
  uint64_t v242 = a2;
  swift_retain();
  uint64_t v258 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  uint64_t v223 = v42;
  dispatch_sync(v42, v45);
  _Block_release(v45);
  LOBYTE(v45) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v45)
  {
LABEL_154:
    __break(1u);
    goto LABEL_155;
  }
  uint64_t v234 = v18;
  if (qword_1EBD80068 != -1) {
LABEL_155:
  }
    swift_once();
  uint64_t v46 = sub_1D4469928();
  uint64_t v47 = sub_1D42D7FAC(v46, (uint64_t)qword_1EBD83228);
  uint64_t v48 = v258;
  swift_bridgeObjectRetain();
  uint64_t v244 = v47;
  uint64_t v49 = sub_1D44698F8();
  os_log_type_t v50 = sub_1D446A038();
  BOOL v51 = os_log_type_enabled(v49, v50);
  uint64_t v221 = v9;
  unint64_t v220 = v12;
  uint64_t v219 = v11;
  if (v51)
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v52 = 138412290;
    uint64_t v11 = (uint64_t)&qword_1EBD7CB40;
    sub_1D4275AD0(0, &qword_1EBD7CB40);
    sub_1D42B2630(&qword_1EBD7D978, &qword_1EBD7CB40);
    uint64_t v54 = (void *)sub_1D4469EC8();
    uint64_t aBlock = v54;
    sub_1D446A188();
    *uint64_t v53 = v54;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D4271000, v49, v50, "FMIPBeaconRefreshingController: beacons received %@", v52, 0xCu);
    sub_1D42D5DA0(&qword_1EBD7E830);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v53, -1, -1);
    MEMORY[0x1D9447730](v52, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  unint64_t v247 = v48 & 0xC000000000000001;
  if ((v48 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1D446A238();
    sub_1D4275AD0(0, &qword_1EBD7CB40);
    sub_1D42B2630(&qword_1EBD7D978, &qword_1EBD7CB40);
    sub_1D4469F48();
    uint64_t v55 = v269;
    uint64_t v56 = v270;
    uint64_t v57 = v271;
    uint64_t v58 = v272;
    unint64_t v59 = v273;
  }
  else
  {
    uint64_t v60 = -1 << *(unsigned char *)(v48 + 32);
    uint64_t v56 = v48 + 56;
    uint64_t v57 = ~v60;
    uint64_t v61 = -v60;
    if (v61 < 64) {
      uint64_t v62 = ~(-1 << v61);
    }
    else {
      uint64_t v62 = -1;
    }
    unint64_t v59 = v62 & *(void *)(v48 + 56);
    uint64_t v58 = 0;
    uint64_t v55 = swift_bridgeObjectRetain();
  }
  uint64_t v256 = (void (*)(char *, uint64_t))(v55 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v243 = v57;
  uint64_t v257 = (void *)((unint64_t)(v57 + 64) >> 6);
  id v216 = (id)*MEMORY[0x1E4F97D60];
  double v255 = (void (**)(char *, uint64_t, uint64_t))(v250 + 16);
  unint64_t v260 = (void (**)(uint64_t, uint64_t))(v250 + 8);
  unint64_t v249 = (void *)MEMORY[0x1E4FBC868];
  unint64_t v12 = (unint64_t)&property descriptor for FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback;
  id v254 = (void (*)(char *, uint64_t, uint64_t))(MEMORY[0x1E4FBC838] + 8);
  while (1)
  {
    uint64_t v9 = v58;
    if ((v55 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v65 = (void *)sub_1D446A2B8();
    if (!v65) {
      goto LABEL_51;
    }
    id v274 = v65;
    sub_1D4275AD0(0, &qword_1EBD7CB40);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v11 = (uint64_t)aBlock;
    swift_unknownObjectRelease();
    if (!v11) {
      goto LABEL_51;
    }
LABEL_34:
    id v69 = objc_msgSend((id)v11, sel_role, v216);

    if (v69)
    {
    }
    else
    {
      id v70 = [(id)v11 *(SEL *)(v12 + 1408)];
      sub_1D4469668();

      id v71 = v216;
      id v72 = objc_msgSend((id)v11, sel_taskInformation);
      type metadata accessor for SPBeaconTaskName(0);
      sub_1D4275AD0(0, &qword_1EA6CA118);
      sub_1D444A534((unint64_t *)&qword_1EA6C92C8, type metadata accessor for SPBeaconTaskName);
      uint64_t v73 = sub_1D4469A58();

      if (*(void *)(v73 + 16) && (unint64_t v74 = sub_1D43AEF30((uint64_t)v71), (v75 & 1) != 0))
      {
        id v76 = *(id *)(*(void *)(v73 + 56) + 8 * v74);

        swift_bridgeObjectRelease();
        id v77 = objc_msgSend(v76, sel_state);

        BOOL v78 = v77 == 0;
      }
      else
      {

        swift_bridgeObjectRelease();
        BOOL v78 = 0;
      }
      size_t v79 = v249;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t aBlock = v79;
      unint64_t v82 = sub_1D43AEE98(v248);
      uint64_t v83 = v79[2];
      BOOL v84 = (v81 & 1) == 0;
      uint64_t v85 = v83 + v84;
      if (__OFADD__(v83, v84))
      {
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        uint64_t result = sub_1D446A7A8();
        __break(1u);
        return result;
      }
      char v86 = v81;
      if (v79[3] >= v85)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1D43DA664();
        }
      }
      else
      {
        sub_1D43D68E8(v85, isUniquelyReferenced_nonNull_native);
        unint64_t v87 = sub_1D43AEE98(v248);
        if ((v86 & 1) != (v88 & 1)) {
          goto LABEL_158;
        }
        unint64_t v82 = v87;
      }
      unint64_t v12 = 0x1E69E6000;
      uint64_t v89 = aBlock;
      unint64_t v249 = aBlock;
      if (v86)
      {
        *(unsigned char *)(aBlock[7] + v82) = v78;
      }
      else
      {
        aBlock[(v82 >> 6) + 8] |= 1 << v82;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v250 + 16))(v89[6] + *(void *)(v250 + 72) * v82, v248, v259);
        *(unsigned char *)(v89[7] + v82) = v78;
        uint64_t v90 = v89[2];
        BOOL v91 = __OFADD__(v90, 1);
        uint64_t v92 = v90 + 1;
        if (v91) {
          goto LABEL_157;
        }
        v89[2] = v92;
      }
      swift_bridgeObjectRelease();
      (*v260)(v248, v259);
    }
  }
  if (v59)
  {
    unint64_t v63 = __clz(__rbit64(v59));
    v59 &= v59 - 1;
    unint64_t v64 = v63 | (v58 << 6);
    goto LABEL_33;
  }
  uint64_t v66 = v58 + 1;
  if (__OFADD__(v58, 1)) {
    goto LABEL_152;
  }
  if (v66 < (uint64_t)v257)
  {
    unint64_t v67 = *(void *)(v56 + 8 * v66);
    ++v58;
    if (!v67)
    {
      uint64_t v58 = v9 + 2;
      if (v9 + 2 >= (uint64_t)v257) {
        goto LABEL_51;
      }
      unint64_t v67 = *(void *)(v56 + 8 * v58);
      if (!v67)
      {
        uint64_t v58 = v9 + 3;
        if (v9 + 3 >= (uint64_t)v257) {
          goto LABEL_51;
        }
        unint64_t v67 = *(void *)(v56 + 8 * v58);
        if (!v67)
        {
          uint64_t v58 = v9 + 4;
          if (v9 + 4 >= (uint64_t)v257) {
            goto LABEL_51;
          }
          unint64_t v67 = *(void *)(v56 + 8 * v58);
          if (!v67)
          {
            uint64_t v68 = v9 + 5;
            do
            {
              if (v257 == (void *)v68) {
                goto LABEL_51;
              }
              unint64_t v67 = *(void *)(v56 + 8 * v68++);
            }
            while (!v67);
            uint64_t v58 = v68 - 1;
          }
        }
      }
    }
    unint64_t v59 = (v67 - 1) & v67;
    unint64_t v64 = __clz(__rbit64(v67)) + (v58 << 6);
LABEL_33:
    uint64_t v11 = (uint64_t)*(id *)(*(void *)(v55 + 48) + 8 * v64);
    if (!v11) {
      goto LABEL_51;
    }
    goto LABEL_34;
  }
LABEL_51:
  sub_1D42F9364();
  uint64_t v243 = v242 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_delegate;
  if (MEMORY[0x1D9447840]())
  {
    sub_1D42D5DA0(&qword_1EA6CBA58);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D446E050;
    *(unsigned char *)(inited + 32) = 0;
    *(void *)(inited + 40) = v249;
    unint64_t v94 = sub_1D43B385C(inited);
    swift_setDeallocating();
    swift_bridgeObjectRetain();
    sub_1D42D5DA0(&qword_1EA6CBA60);
    swift_arrayDestroy();
    sub_1D428A6E8(v94);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t v95 = sub_1D42D5DA0(&qword_1EA6CAF88);
  uint64_t v96 = (uint64_t)v237;
  uint64_t v97 = &v237[*(int *)(v95 + 48)];
  id v254 = *v255;
  v254(v237, v245, v259);
  uint64_t v98 = v239;
  uint64_t v99 = v234;
  (*(void (**)(char *, uint64_t, uint64_t))(v239 + 16))(v97, v240, v234);
  swift_storeEnumTagMultiPayload();
  uint64_t v100 = (uint64_t)v238;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v238, 1, 1, v99);
  type metadata accessor for FMIPItemUpdateContext(0);
  uint64_t v101 = swift_allocObject();
  sub_1D444DAF8(v96, v101 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_type, type metadata accessor for FMIPItemUpdateType);
  uint64_t v102 = v236;
  sub_1D4469608();
  uint64_t v103 = *(void (**)(uint64_t, char *, uint64_t))(v98 + 32);
  v103(v101 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_timestamp, v102, v99);
  uint64_t v104 = v241;
  sub_1D42A3A74(v100, v241, &qword_1EBD7CB80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v104, 1, v99) == 1)
  {
    int v105 = v246;
    sub_1D4469608();
    sub_1D4276C3C(v100, &qword_1EBD7CB80);
    sub_1D444DB60(v96, type metadata accessor for FMIPItemUpdateType);
    sub_1D4276C3C(v104, &qword_1EBD7CB80);
  }
  else
  {
    sub_1D4276C3C(v100, &qword_1EBD7CB80);
    sub_1D444DB60(v96, type metadata accessor for FMIPItemUpdateType);
    int v105 = v246;
    v103((uint64_t)v246, (char *)v104, v99);
  }
  v103(v101 + OBJC_IVAR____TtC8FMIPCore21FMIPItemUpdateContext_creationTimestamp, v105, v99);
  if (!v247)
  {
    uint64_t v123 = swift_bridgeObjectRetain();
    uint64_t v106 = sub_1D44499E0(v123);
    goto LABEL_78;
  }
  uint64_t v106 = MEMORY[0x1E4FBC870];
  uint64_t aBlock = (void *)MEMORY[0x1E4FBC870];
  swift_bridgeObjectRetain();
  sub_1D446A238();
  uint64_t v107 = sub_1D446A2B8();
  if (!v107) {
    goto LABEL_77;
  }
  uint64_t v108 = v107;
  uint64_t v109 = v101;
  sub_1D4275AD0(0, &qword_1EBD7CB40);
  uint64_t v9 = MEMORY[0x1E4FBC838] + 8;
  uint64_t v11 = 63;
  while (2)
  {
    uint64_t v262 = v108;
    swift_dynamicCast();
    id v110 = objc_msgSend(v274, sel_role);

    unint64_t v12 = (unint64_t)v274;
    if (!v110)
    {

      goto LABEL_60;
    }
    int v111 = aBlock;
    unint64_t v112 = aBlock[2];
    if (aBlock[3] <= v112)
    {
      sub_1D434AFF4(v112 + 1);
      int v111 = aBlock;
    }
    uint64_t v113 = sub_1D446A108();
    uint64_t v114 = v111 + 7;
    uint64_t v115 = -1 << *((unsigned char *)v111 + 32);
    unint64_t v116 = v113 & ~v115;
    unint64_t v117 = v116 >> 6;
    if (((-1 << v116) & ~v111[(v116 >> 6) + 7]) != 0)
    {
      unint64_t v118 = __clz(__rbit64((-1 << v116) & ~v111[(v116 >> 6) + 7])) | v116 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_74;
    }
    char v119 = 0;
    unint64_t v120 = (unint64_t)(63 - v115) >> 6;
    do
    {
      if (++v117 == v120 && (v119 & 1) != 0)
      {
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
        goto LABEL_154;
      }
      BOOL v121 = v117 == v120;
      if (v117 == v120) {
        unint64_t v117 = 0;
      }
      v119 |= v121;
      uint64_t v122 = v114[v117];
    }
    while (v122 == -1);
    unint64_t v118 = __clz(__rbit64(~v122)) + (v117 << 6);
LABEL_74:
    *(void *)((char *)v114 + ((v118 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v118;
    *(void *)(v111[6] + 8 * v118) = v12;
    ++v111[2];
LABEL_60:
    uint64_t v108 = sub_1D446A2B8();
    if (v108) {
      continue;
    }
    break;
  }
  uint64_t v106 = (uint64_t)aBlock;
  uint64_t v101 = v109;
LABEL_77:
  swift_release();
LABEL_78:
  uint64_t v124 = v242;
  swift_retain();
  uint64_t v125 = sub_1D444DE58(v106, v124);
  swift_release();
  swift_retain();
  uint64_t v126 = sub_1D444E4F4(v125, v124);
  swift_release();
  swift_retain();
  uint64_t v127 = sub_1D444C7F8(v126, v101);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v128 = swift_bridgeObjectRetain();
  unint64_t v129 = sub_1D4386340(v128);
  swift_bridgeObjectRelease();
  uint64_t v130 = sub_1D42E1B1C(v129, &qword_1EBD7CB40, 0x1E4F97BE8, (uint64_t)&protocol witness table for SPBeacon);
  swift_release();
  sub_1D428414C(v130);
  swift_bridgeObjectRelease();
  uint64_t v131 = v230;
  uint64_t v132 = v259;
  v254(v230, v245, v259);
  uint64_t v133 = sub_1D44698F8();
  os_log_type_t v134 = sub_1D446A038();
  BOOL v135 = os_log_type_enabled(v133, v134);
  uint64_t v240 = v101;
  if (v135)
  {
    uint64_t v136 = v131;
    uint64_t v137 = (uint8_t *)swift_slowAlloc();
    uint64_t v138 = (void *)swift_slowAlloc();
    uint64_t aBlock = v138;
    *(_DWORD *)uint64_t v137 = 136315138;
    uint64_t v139 = sub_1D4469638();
    id v274 = (id)sub_1D42CB9EC(v139, v140, (uint64_t *)&aBlock);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    uint64_t v256 = (void (*)(char *, uint64_t))*v260;
    v256(v136, v132);
    _os_log_impl(&dword_1D4271000, v133, v134, "FMIPBeaconRefreshingController: separation state %s", v137, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v138, -1, -1);
    MEMORY[0x1D9447730](v137, -1, -1);
  }
  else
  {
    uint64_t v256 = (void (*)(char *, uint64_t))*v260;
    v256(v131, v132);
  }

  uint64_t v141 = v233;
  uint64_t v142 = v232;
  if (MEMORY[0x1D9447840](v243))
  {
    sub_1D42E7888(v127);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v254(v142, v245, v132);
  uint64_t v143 = sub_1D44698F8();
  os_log_type_t v144 = sub_1D446A038();
  if (os_log_type_enabled(v143, v144))
  {
    uint64_t v145 = (uint8_t *)swift_slowAlloc();
    uint64_t v146 = (void *)swift_slowAlloc();
    uint64_t aBlock = v146;
    *(_DWORD *)uint64_t v145 = 136315138;
    uint64_t v147 = sub_1D4469638();
    id v274 = (id)sub_1D42CB9EC(v147, v148, (uint64_t *)&aBlock);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    v256(v142, v132);
    _os_log_impl(&dword_1D4271000, v143, v144, "FMIPBeaconRefreshingController: items updated %s", v145, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v146, -1, -1);
    MEMORY[0x1D9447730](v145, -1, -1);
  }
  else
  {
    v256(v142, v132);
  }

  if (MEMORY[0x1D9447840](v243))
  {
    sub_1D42B30A8(v218);
    swift_unknownObjectRelease();
  }
  v254(v141, v245, v132);
  uint64_t v149 = sub_1D44698F8();
  os_log_type_t v150 = sub_1D446A038();
  if (os_log_type_enabled(v149, v150))
  {
    uint64_t v151 = (uint8_t *)swift_slowAlloc();
    uint64_t v152 = (void *)swift_slowAlloc();
    uint64_t aBlock = v152;
    *(_DWORD *)uint64_t v151 = 136315138;
    uint64_t v153 = sub_1D4469638();
    id v274 = (id)sub_1D42CB9EC(v153, v154, (uint64_t *)&aBlock);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    v256(v141, v132);
    _os_log_impl(&dword_1D4271000, v149, v150, "FMIPBeaconRefreshingController: groups updated %s", v151, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v152, -1, -1);
    MEMORY[0x1D9447730](v151, -1, -1);
  }
  else
  {
    v256(v141, v132);
  }

  uint64_t v9 = v258;
  uint64_t v155 = MEMORY[0x1E4FBC860];
  uint64_t v257 = (void *)sub_1D43AACB0(MEMORY[0x1E4FBC860]);
  size_t v156 = (void *)sub_1D43AAEE0(v155);
  if (v247)
  {
    swift_bridgeObjectRetain();
    sub_1D446A238();
    sub_1D4275AD0(0, &qword_1EBD7CB40);
    sub_1D42B2630(&qword_1EBD7D978, &qword_1EBD7CB40);
    sub_1D4469F48();
    uint64_t v9 = (uint64_t)v274;
    unint64_t v249 = v275;
    uint64_t v157 = v276;
    unint64_t v12 = v277;
    uint64_t v11 = v278;
  }
  else
  {
    uint64_t v158 = -1 << *(unsigned char *)(v9 + 32);
    uint64_t v159 = *(void *)(v9 + 56);
    unint64_t v249 = (void *)(v9 + 56);
    uint64_t v160 = ~v158;
    uint64_t v161 = -v158;
    if (v161 < 64) {
      uint64_t v162 = ~(-1 << v161);
    }
    else {
      uint64_t v162 = -1;
    }
    uint64_t v11 = v162 & v159;
    swift_bridgeObjectRetain();
    uint64_t v157 = v160;
    unint64_t v12 = 0;
  }
  uint64_t v163 = (void (*)(uint64_t, uint64_t))v256;
  unint64_t v247 = v9 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v241 = v157;
  uint64_t v248 = (unint64_t)(v157 + 64) >> 6;
  unint64_t v246 = (char *)(MEMORY[0x1E4FBC838] + 8);
  uint64_t v258 = v9;
  while (2)
  {
    if (v9 < 0)
    {
      uint64_t v167 = sub_1D446A2B8();
      if (!v167) {
        goto LABEL_135;
      }
      uint64_t v262 = v167;
      sub_1D4275AD0(0, &qword_1EBD7CB40);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v9 = (uint64_t)aBlock;
      swift_unknownObjectRelease();
      unint64_t v166 = v12;
      uint64_t v164 = v11;
      if (!v9) {
        goto LABEL_135;
      }
      goto LABEL_122;
    }
    if (v11)
    {
      uint64_t v164 = (v11 - 1) & v11;
      unint64_t v165 = __clz(__rbit64(v11)) | (v12 << 6);
      unint64_t v166 = v12;
LABEL_121:
      uint64_t v9 = (uint64_t)*(id *)(*(void *)(v9 + 48) + 8 * v165);
      if (!v9) {
        goto LABEL_135;
      }
LABEL_122:
      id v171 = objc_msgSend((id)v9, sel_lostModeInfo, v216, v217);
      if (v171)
      {
        uint64_t v172 = v171;
        id v173 = objc_msgSend((id)v9, sel_identifier);
        uint64_t v11 = (uint64_t)v251;
        sub_1D4469668();

        id v174 = v172;
        uint64_t v175 = v252;
        FMIPDeviceLostModeMetadata.init(lostModeInfo:)(v174, v252);
        uint64_t v176 = v253;
        sub_1D444E76C(v175, v253, (uint64_t (*)(void))type metadata accessor for FMIPDeviceLostModeMetadata);
        uint64_t v177 = v257;
        char v178 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t aBlock = v177;
        uint64_t v163 = (void (*)(uint64_t, uint64_t))v256;
        sub_1D43D7FF4(v176, v11, v178);
        uint64_t v257 = aBlock;
        swift_bridgeObjectRelease();
        v163(v11, v132);
      }
      id v179 = objc_msgSend((id)v9, sel_identifier);
      uint64_t v180 = v261;
      sub_1D4469668();

      sub_1D443EB5C(objc_msgSend((id)v9, sel_type), (char *)&v262);
      char v181 = v262;
      int v182 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t aBlock = v156;
      unint64_t v12 = sub_1D43AEE98(v180);
      uint64_t v184 = v156[2];
      BOOL v185 = (v183 & 1) == 0;
      uint64_t v186 = v184 + v185;
      if (__OFADD__(v184, v185)) {
        goto LABEL_150;
      }
      uint64_t v11 = v183;
      if (v156[3] >= v186)
      {
        if (v182)
        {
          size_t v156 = aBlock;
          if ((v183 & 1) == 0) {
            goto LABEL_131;
          }
        }
        else
        {
          sub_1D43DA8F4();
          size_t v156 = aBlock;
          if ((v11 & 1) == 0) {
            goto LABEL_131;
          }
        }
      }
      else
      {
        sub_1D43D6D0C(v186, v182);
        unint64_t v187 = sub_1D43AEE98(v261);
        if ((v11 & 1) != (v188 & 1)) {
          goto LABEL_158;
        }
        unint64_t v12 = v187;
        size_t v156 = aBlock;
        if ((v11 & 1) == 0)
        {
LABEL_131:
          v156[(v12 >> 6) + 8] |= 1 << v12;
          v254((char *)(v156[6] + *(void *)(v250 + 72) * v12), v261, v259);
          *(unsigned char *)(v156[7] + v12) = v181;
          uint64_t v189 = v156[2];
          BOOL v91 = __OFADD__(v189, 1);
          uint64_t v190 = v189 + 1;
          if (v91) {
            goto LABEL_151;
          }
          v156[2] = v190;
          goto LABEL_100;
        }
      }
      *(unsigned char *)(v156[7] + v12) = v181;
LABEL_100:
      swift_bridgeObjectRelease();
      uint64_t v132 = v259;
      v163(v261, v259);

      unint64_t v12 = v166;
      uint64_t v11 = v164;
      uint64_t v9 = v258;
      continue;
    }
    break;
  }
  uint64_t v168 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_153;
  }
  if (v168 >= v248) {
    goto LABEL_135;
  }
  unint64_t v169 = v249[v168];
  unint64_t v166 = v12 + 1;
  if (v169) {
    goto LABEL_120;
  }
  unint64_t v166 = v12 + 2;
  if ((uint64_t)(v12 + 2) >= v248) {
    goto LABEL_135;
  }
  unint64_t v169 = v249[v166];
  if (v169) {
    goto LABEL_120;
  }
  unint64_t v166 = v12 + 3;
  if ((uint64_t)(v12 + 3) >= v248) {
    goto LABEL_135;
  }
  unint64_t v169 = v249[v166];
  if (v169) {
    goto LABEL_120;
  }
  unint64_t v166 = v12 + 4;
  if ((uint64_t)(v12 + 4) >= v248) {
    goto LABEL_135;
  }
  unint64_t v169 = v249[v166];
  if (v169)
  {
LABEL_120:
    uint64_t v164 = (v169 - 1) & v169;
    unint64_t v165 = __clz(__rbit64(v169)) + (v166 << 6);
    goto LABEL_121;
  }
  unint64_t v170 = v12 + 5;
  while (v248 != v170)
  {
    unint64_t v169 = v249[v170++];
    if (v169)
    {
      unint64_t v166 = v170 - 1;
      uint64_t v9 = v258;
      goto LABEL_120;
    }
  }
LABEL_135:
  sub_1D42F9364();
  if (MEMORY[0x1D9447840](v243))
  {
    sub_1D4389C84((uint64_t)v257);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v191 = v229;
  v254(v229, v245, v132);
  uint64_t v192 = sub_1D44698F8();
  uint64_t v193 = v132;
  os_log_type_t v194 = sub_1D446A038();
  if (os_log_type_enabled(v192, v194))
  {
    uint64_t v195 = (uint8_t *)swift_slowAlloc();
    uint64_t v196 = (void *)swift_slowAlloc();
    uint64_t aBlock = v196;
    *(_DWORD *)uint64_t v195 = 136315138;
    uint64_t v197 = sub_1D4469638();
    uint64_t v262 = sub_1D42CB9EC(v197, v198, (uint64_t *)&aBlock);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    v256(v191, v193);
    _os_log_impl(&dword_1D4271000, v192, v194, "FMIPBeaconRefreshingController: lost mode info %s", v195, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v196, -1, -1);
    MEMORY[0x1D9447730](v195, -1, -1);
  }
  else
  {
    v256(v191, v193);
  }

  int v199 = v222;
  if (MEMORY[0x1D9447840](v243))
  {
    sub_1D4294030((uint64_t)v156);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v254(v199, v245, v193);
  int v200 = sub_1D44698F8();
  os_log_type_t v201 = sub_1D446A038();
  BOOL v202 = os_log_type_enabled(v200, v201);
  uint64_t v203 = v226;
  if (v202)
  {
    uint64_t v204 = (uint8_t *)swift_slowAlloc();
    int v205 = (void *)swift_slowAlloc();
    uint64_t aBlock = v205;
    *(_DWORD *)uint64_t v204 = 136315138;
    uint64_t v206 = sub_1D4469638();
    uint64_t v262 = sub_1D42CB9EC(v206, v207, (uint64_t *)&aBlock);
    sub_1D446A188();
    swift_bridgeObjectRelease();
    v256(v199, v193);
    _os_log_impl(&dword_1D4271000, v200, v201, "FMIPBeaconRefreshingController: beacon types %s", v204, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v205, -1, -1);
    MEMORY[0x1D9447730](v204, -1, -1);
  }
  else
  {
    v256(v199, v193);
  }

  uint64_t v208 = v221;
  uint64_t v209 = v227;
  unint64_t v210 = v220;
  uint64_t v267 = sub_1D444F0E8;
  uint64_t v268 = v242;
  uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
  uint64_t v264 = 1107296256;
  uint64_t v265 = sub_1D42BD950;
  uint64_t v266 = &unk_1F2C13038;
  uint64_t v211 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v212 = v225;
  sub_1D4469988();
  uint64_t v262 = MEMORY[0x1E4FBC860];
  sub_1D444A534((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  uint64_t v213 = v219;
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v212, v213, v211);
  _Block_release(v211);
  (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v213, v208);
  (*(void (**)(char *, unint64_t))(v203 + 8))(v212, v210);
  uint64_t v214 = swift_release();
  if (v228) {
    v228(v214);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1D4444058(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1D4386340(a2);
  swift_bridgeObjectRelease();
  *(void *)(a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_spBeacons) = v4;
  return swift_bridgeObjectRelease();
}

void sub_1D44440C0(void *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = sub_1D4469688();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v46 - v7;
  uint64_t v9 = sub_1D4469618();
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v54 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v46 - v13;
  *((unsigned char *)a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_currentlyRefreshing) = 0;
  if (*((unsigned char *)a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_nextRefreshQueued) == 1)
  {
    uint64_t v53 = v12;
    uint64_t v50 = v2;
    BOOL v51 = a1;
    *((unsigned char *)a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_nextRefreshQueued) = 0;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1D4469928();
    sub_1D42D7FAC(v15, (uint64_t)qword_1EBD83228);
    uint64_t v16 = sub_1D44698F8();
    os_log_type_t v17 = sub_1D446A038();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v52 = v4;
    if (v18)
    {
      uint64_t v19 = v14;
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_1D4271000, v16, v17, "FMIPBeaconRefreshingController: Another refresh was queued, running.", v20, 2u);
      uint64_t v21 = v20;
      uint64_t v14 = v19;
      uint64_t v4 = v52;
      MEMORY[0x1D9447730](v21, -1, -1);
    }

    sub_1D4469608();
    sub_1D4469678();
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    uint64_t v48 = v8;
    v22((char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8, v3);
    uint64_t v49 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v23 = v54;
    uint64_t v24 = *(void (**)(uint64_t, char *, uint64_t))(v54 + 16);
    uint64_t v47 = v14;
    v24(v53, v14, v9);
    unint64_t v25 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    unint64_t v26 = (v5 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v27 = v9;
    unint64_t v28 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v29 = (*(unsigned __int8 *)(v23 + 80) + v28 + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
    uint64_t v32 = v49;
    uint64_t v49 = (char *)v3;
    v31(v30 + v25, v32, v3);
    *(void *)(v30 + v26) = v51;
    uint64_t v33 = (void *)(v30 + v28);
    *uint64_t v33 = 0;
    v33[1] = 0;
    uint64_t v34 = v27;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(v30 + v29, v53, v27);
    *(void *)(v30 + ((v10 + v29 + 7) & 0xFFFFFFFFFFFFFFF8)) = v50;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = sub_1D444E8F0;
    *(void *)(v35 + 24) = v30;
    aBlock[4] = sub_1D42AEE88;
    void aBlock[5] = v35;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1D42AEDE4;
    uint64_t aBlock[3] = &unk_1F2C130B0;
    uint64_t v36 = _Block_copy(aBlock);
    uint64_t v37 = _Block_copy(v36);
    uint64_t v38 = qword_1EBD7E6F0;
    swift_retain();
    swift_retain();
    if (v38 != -1) {
      swift_once();
    }
    uint64_t v39 = qword_1EBD7E6E8;
    swift_unknownObjectRetain();
    uint64_t v40 = _os_activity_create(&dword_1D4271000, "FMIPBeaconRefreshingController.refreshBeacons", v39, OS_ACTIVITY_FLAG_DEFAULT);
    swift_unknownObjectRelease();
    uint64_t v41 = _Block_copy(v37);
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = v41;
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = sub_1D438C100;
    *(void *)(v43 + 24) = v42;
    v55[4] = sub_1D42AEE88;
    v55[5] = v43;
    v55[0] = MEMORY[0x1E4F143A8];
    v55[1] = 1107296256;
    v55[2] = sub_1D42AEDE4;
    v55[3] = &unk_1F2C13128;
    uint64_t v44 = _Block_copy(v55);
    swift_retain();
    swift_release();
    os_activity_apply(v40, v44);
    _Block_release(v44);
    LOBYTE(v44) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    _Block_release(v37);
    swift_unknownObjectRelease();
    _Block_release(v36);
    if (v44)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, char *))(v52 + 8))(v48, v49);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v47, v34);
      swift_release();
      swift_release();
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1D4444728(uint64_t a1, uint64_t a2)
{
  return sub_1D42B257C(a1, a2, &qword_1EBD7CB40, 0x1E4F97BE8, &qword_1EBD7D978);
}

uint64_t sub_1D4444744(uint64_t result)
{
  *(unsigned char *)(result + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_currentlyRefreshing) = 0;
  if (*(unsigned char *)(result + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_nextRefreshQueued) == 1)
  {
    *(unsigned char *)(result + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_nextRefreshQueued) = 0;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1D4469928();
    sub_1D42D7FAC(v1, (uint64_t)qword_1EBD83228);
    uint64_t v2 = sub_1D44698F8();
    os_log_type_t v3 = sub_1D446A038();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1D4271000, v2, v3, "FMIPBeaconRefreshingController: Another refresh was queued, running.", v4, 2u);
      MEMORY[0x1D9447730](v4, -1, -1);
    }

    return sub_1D42BED18(0, 0);
  }
  return result;
}

uint64_t sub_1D4444854(uint64_t a1)
{
  uint64_t v3 = sub_1D4469958();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D44699B8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshQueue);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v18 = *(void *)(a1 + 24);
  uint64_t v19 = v11;
  uint64_t v12 = swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v12 + 32) = v13;
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(a1 + 32);
  *(void *)(v12 + 56) = v1;
  aBlock[4] = sub_1D444D96C;
  void aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1D42BD950;
  uint64_t aBlock[3] = &unk_1F2C12868;
  uint64_t v14 = _Block_copy(aBlock);
  sub_1D42AB8DC((uint64_t)&v19);
  sub_1D42AB8DC((uint64_t)&v18);
  swift_retain();
  sub_1D4469988();
  v16[1] = MEMORY[0x1E4FBC860];
  sub_1D444A534((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
  sub_1D42D5DA0(&qword_1EBD7FD78);
  sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
  sub_1D446A1F8();
  MEMORY[0x1D9446420](0, v10, v6, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_1D4444B44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1D42ABDD0();
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D4469928();
  sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
  swift_retain_n();
  id v5 = v3;
  uint64_t v6 = sub_1D44698F8();
  os_log_type_t v7 = sub_1D446A038();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    aBlock[0] = v20;
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v9 = sub_1D4469638();
    unint64_t v11 = sub_1D427A0D0(0xCuLL, v9, v10);
    uint64_t v12 = MEMORY[0x1D9445EF0](v11);
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D42CB9EC(v12, v14, aBlock);
    sub_1D446A188();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2048;
    id v15 = objc_msgSend(v5, sel_searchIdentifiers);
    sub_1D4469688();
    sub_1D4469D78();

    swift_bridgeObjectRelease();
    sub_1D446A188();

    _os_log_impl(&dword_1D4271000, v6, v7, "🥑 FMIPBeaconRefreshingController<%s> asking %ld snapshot locations…", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9447730](v20, -1, -1);
    MEMORY[0x1D9447730](v8, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v16 = *(void **)(a2 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_ownerSession);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = (uint64_t)sub_1D444D978;
  void aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_1D43C6864;
  uint64_t aBlock[3] = (uint64_t)&unk_1F2C12890;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = v16;
  swift_release();
  objc_msgSend(v19, sel_locationForContext_completion_, v5, v18);
  _Block_release(v18);
}

void sub_1D4444E9C(void *a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    uint64_t v60 = Strong;
    if (a2)
    {
      uint64_t v6 = a2;
      if (qword_1EBD80068 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_1D4469928();
      sub_1D42D7FAC(v7, (uint64_t)qword_1EBD83228);
      uint64_t v8 = a2;
      swift_retain();
      uint64_t v9 = a2;
      swift_retain();
      unint64_t v10 = sub_1D44698F8();
      os_log_type_t v11 = sub_1D446A038();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        uint64_t aBlock = v13;
        *(_DWORD *)uint64_t v12 = 136315394;
        uint64_t v14 = sub_1D4469638();
        unint64_t v16 = sub_1D427A0D0(0xCuLL, v14, v15);
        uint64_t v17 = MEMORY[0x1D9445EF0](v16);
        unint64_t v19 = v18;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v20 = v17;
        uint64_t v5 = v60;
        sub_1D42CB9EC(v20, v19, &aBlock);
        sub_1D446A188();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v21 = sub_1D446A7D8();
        uint64_t v61 = sub_1D42CB9EC(v21, v22, &aBlock);
        sub_1D446A188();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D4271000, v10, v11, "🥑 FMIPBeaconRefreshingController<%s> failed obtaining snapshot locations %s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v13, -1, -1);
        MEMORY[0x1D9447730](v12, -1, -1);
      }
      else
      {
        swift_release_n();
      }
      unint64_t v24 = sub_1D43AB0E0(MEMORY[0x1E4FBC860]);
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v24;
      *(void *)(v25 + 24) = v5;
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = sub_1D444F53C;
      *(void *)(v26 + 24) = v25;
      id v71 = sub_1D42AEE88;
      uint64_t v72 = v26;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v68 = 1107296256;
      id v69 = sub_1D42AEDE4;
      id v70 = &unk_1F2C129F8;
      uint64_t v27 = _Block_copy(&aBlock);
      unint64_t v28 = _Block_copy(v27);
      uint64_t v29 = qword_1EBD7E6F0;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v29 != -1) {
        swift_once();
      }
      uint64_t v30 = qword_1EBD7E6E8;
      swift_unknownObjectRetain();
      uint64_t v31 = _os_activity_create(&dword_1D4271000, "FMIPBeaconRefreshingController.refreshLocations", v30, OS_ACTIVITY_FLAG_DEFAULT);
      swift_unknownObjectRelease();
      uint64_t v32 = _Block_copy(v28);
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v32;
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = sub_1D438C100;
      *(void *)(v5 + 24) = v33;
      uint64_t v65 = sub_1D42AEE88;
      uint64_t v66 = v5;
      uint64_t v61 = MEMORY[0x1E4F143A8];
      uint64_t v62 = 1107296256;
      unint64_t v63 = sub_1D42AEDE4;
      unint64_t v64 = &unk_1F2C12A70;
      uint64_t v34 = _Block_copy(&v61);
      swift_retain();
      swift_release();
      os_activity_apply(v31, v34);
      _Block_release(v34);
      LOBYTE(v34) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      _Block_release(v28);
      swift_unknownObjectRelease();
      _Block_release(v27);
      if (v34)
      {
        __break(1u);
LABEL_26:
        swift_once();
LABEL_17:
        uint64_t v36 = sub_1D4469928();
        sub_1D42D7FAC(v36, (uint64_t)qword_1EBD83228);
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v37 = sub_1D44698F8();
        os_log_type_t v38 = sub_1D446A038();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t aBlock = v40;
          *(_DWORD *)uint64_t v39 = 136315394;
          uint64_t v41 = sub_1D4469638();
          unint64_t v43 = sub_1D427A0D0(0xCuLL, v41, v42);
          uint64_t v44 = MEMORY[0x1D9445EF0](v43);
          unint64_t v46 = v45;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v61 = sub_1D42CB9EC(v44, v46, &aBlock);
          sub_1D446A188();
          swift_release_n();
          uint64_t v5 = v60;
          swift_bridgeObjectRelease();
          *(_WORD *)(v39 + 12) = 2048;
          uint64_t v47 = a2[2];
          swift_bridgeObjectRelease();
          uint64_t v61 = v47;
          sub_1D446A188();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D4271000, v37, v38, "🥑 FMIPBeaconRefreshingController<%s> obtained %ld snapshot locations", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1D9447730](v40, -1, -1);
          MEMORY[0x1D9447730](v39, -1, -1);
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
        }
        uint64_t v48 = swift_allocObject();
        *(void *)(v48 + 16) = a2;
        *(void *)(v48 + 24) = v5;
        uint64_t v49 = swift_allocObject();
        *(void *)(v49 + 16) = sub_1D444F53C;
        *(void *)(v49 + 24) = v48;
        id v71 = sub_1D42AEE88;
        uint64_t v72 = v49;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v68 = 1107296256;
        id v69 = sub_1D42AEDE4;
        id v70 = &unk_1F2C12908;
        uint64_t v50 = _Block_copy(&aBlock);
        BOOL v51 = _Block_copy(v50);
        uint64_t v52 = qword_1EBD7E6F0;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v52 != -1) {
          swift_once();
        }
        uint64_t v53 = qword_1EBD7E6E8;
        swift_unknownObjectRetain();
        uint64_t v54 = _os_activity_create(&dword_1D4271000, "FMIPBeaconRefreshingController.refreshLocations", v53, OS_ACTIVITY_FLAG_DEFAULT);
        swift_unknownObjectRelease();
        uint64_t v55 = _Block_copy(v51);
        uint64_t v56 = swift_allocObject();
        *(void *)(v56 + 16) = v55;
        uint64_t v57 = swift_allocObject();
        *(void *)(v57 + 16) = sub_1D438C100;
        *(void *)(v57 + 24) = v56;
        uint64_t v65 = sub_1D42AEE88;
        uint64_t v66 = v57;
        uint64_t v61 = MEMORY[0x1E4F143A8];
        uint64_t v62 = 1107296256;
        unint64_t v63 = sub_1D42AEDE4;
        unint64_t v64 = &unk_1F2C12980;
        uint64_t v58 = _Block_copy(&v61);
        swift_retain();
        swift_release();
        os_activity_apply(v54, v58);
        _Block_release(v58);
        LOBYTE(v58) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        _Block_release(v51);
        swift_unknownObjectRelease();
        _Block_release(v50);
        if (v58)
        {
          __break(1u);
        }
        else
        {
          swift_release();
          swift_release();
          char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          if ((isEscapingClosureAtFileLocation & 1) == 0) {
            return;
          }
        }
        __break(1u);
        JUMPOUT(0x1D444598CLL);
      }
      swift_release();
      swift_release();
      char v35 = swift_isEscapingClosureAtFileLocation();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      if ((v35 & 1) == 0) {
        return;
      }
      __break(1u);
    }
    else if (a1)
    {
      id v23 = objc_msgSend(a1, sel_locationsByBeaconIdentifier);
      sub_1D4469688();
      sub_1D4275AD0(0, &qword_1EA6CA898);
      sub_1D444A534(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
      a2 = (void *)sub_1D4469A58();

      goto LABEL_16;
    }
    a2 = (void *)sub_1D43AB0E0(MEMORY[0x1E4FBC860]);
LABEL_16:
    if (qword_1EBD80068 == -1) {
      goto LABEL_17;
    }
    goto LABEL_26;
  }
}

uint64_t sub_1D44459A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D4469958();
  v19[0] = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D44699B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D4469928();
  sub_1D42D7FAC(v9, (uint64_t)qword_1EBD83228);
  unint64_t v10 = sub_1D44698F8();
  os_log_type_t v11 = sub_1D446A038();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_1D4271000, v10, v11, "FMIPBeaconRefreshingController: refreshTimerFired", v12, 2u);
    MEMORY[0x1D9447730](v12, -1, -1);
  }

  uint64_t v13 = OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_isThrottled;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_isThrottled) == 1)
  {
    aBlock[4] = sub_1D444D918;
    void aBlock[5] = v0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1D42BD950;
    uint64_t aBlock[3] = &unk_1F2C127F0;
    uint64_t v14 = _Block_copy(aBlock);
    swift_retain();
    sub_1D4469988();
    v19[1] = MEMORY[0x1E4FBC860];
    sub_1D444A534((unint64_t *)&qword_1EBD7E940, MEMORY[0x1E4FBCB00]);
    sub_1D42D5DA0(&qword_1EBD7FD78);
    sub_1D42BF5F0((unint64_t *)&qword_1EBD7FD80, &qword_1EBD7FD78);
    sub_1D446A1F8();
    MEMORY[0x1D9446420](0, v8, v4, v14);
    _Block_release(v14);
    (*(void (**)(char *, uint64_t))(v19[0] + 8))(v4, v2);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_release();
  }
  else
  {
    unint64_t v16 = sub_1D44698F8();
    os_log_type_t v17 = sub_1D446A038();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v18 = 0;
      _os_log_impl(&dword_1D4271000, v16, v17, "FMIPBeaconRefreshingController: throttling", v18, 2u);
      MEMORY[0x1D9447730](v18, -1, -1);
    }

    *(unsigned char *)(v1 + v13) = 1;
    return sub_1D443F148();
  }
}

void sub_1D4445DC4(uint64_t a1)
{
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  uint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPBeaconRefreshingController: starting to refresh again", v5, 2u);
    MEMORY[0x1D9447730](v5, -1, -1);
  }

  *(unsigned char *)(a1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_isThrottled) = 0;
  sub_1D443F148();
  sub_1D4445ED0();
}

void sub_1D4445ED0()
{
  uint64_t v1 = v0;
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D4469928();
  sub_1D42D7FAC(v2, (uint64_t)qword_1EBD83228);
  uint64_t v3 = sub_1D44698F8();
  os_log_type_t v4 = sub_1D446A038();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1D4271000, v3, v4, "FMIPBeaconRefreshingController: setupRefreshingTimer", v5, 2u);
    MEMORY[0x1D9447730](v5, -1, -1);
  }

  sub_1D4275AD0(0, &qword_1EA6CB350);
  v11[3] = type metadata accessor for FMIPBeaconRefreshingController(0);
  v11[0] = v1;
  long long v9 = 0u;
  long long v10 = 0u;
  swift_retain();
  id v6 = sub_1D42C2530(v11, (uint64_t)sel_refreshTimerFired, &v9, 0, 15.0);
  id v7 = objc_msgSend(self, sel_mainRunLoop, v9, v10, v11[0]);
  objc_msgSend(v7, sel_addTimer_forMode_, v6, *MEMORY[0x1E4F1C3A0]);

  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshTimer);
  *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshTimer) = v6;
}

void sub_1D4446078()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D4469618();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_lastActiveTimestamp;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  LOBYTE(v6) = sub_1D443E9B4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  double v7 = dbl_1D447B4A0[(char)v6];
  if (qword_1EBD80068 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D4469928();
  sub_1D42D7FAC(v8, (uint64_t)qword_1EBD83228);
  long long v9 = sub_1D44698F8();
  os_log_type_t v10 = sub_1D446A038();
  if (os_log_type_enabled(v9, v10))
  {
    os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v11 = 134217984;
    *(double *)os_log_type_t v17 = v7;
    sub_1D446A188();
    _os_log_impl(&dword_1D4271000, v9, v10, "FMIPBeaconRefreshingController: setupThrottlingTimer interval: %f", v11, 0xCu);
    MEMORY[0x1D9447730](v11, -1, -1);
  }

  uint64_t v12 = OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshTimer;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshTimer), sel_invalidate);
  sub_1D4275AD0(0, &qword_1EA6CB350);
  v17[3] = type metadata accessor for FMIPBeaconRefreshingController(0);
  v17[0] = v1;
  memset(v16, 0, sizeof(v16));
  swift_retain();
  id v13 = sub_1D42C2530(v17, (uint64_t)sel_refreshTimerFired, v16, 0, v7);
  id v14 = objc_msgSend(self, sel_mainRunLoop);
  objc_msgSend(v14, sel_addTimer_forMode_, v13, *MEMORY[0x1E4F1C3A0]);

  unint64_t v15 = *(void **)(v1 + v12);
  *(void *)(v1 + v12) = v13;
}

void sub_1D4446344()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D4469108();
  *((void *)&v21 + 1) = v2;
  uint64_t v22 = sub_1D444A534(&qword_1EBD7E550, MEMORY[0x1E4F619E0]);
  uint64_t v3 = sub_1D42BECB4((uint64_t *)&v20);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v2 - 8) + 104))(v3, *MEMORY[0x1E4F619D0], v2);
  LOBYTE(v2) = MEMORY[0x1D9445460](&v20);
  sub_1D42BEC64((uint64_t)&v20);
  if ((v2 & 1) != 0
    && *(unsigned char *)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_shouldUseBeaconsOptimizationSPI) == 1)
  {
    *(void *)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_appBeacons) = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1D4469928();
    sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
    uint64_t v5 = sub_1D44698F8();
    os_log_type_t v6 = sub_1D446A008();
    if (os_log_type_enabled(v5, v6))
    {
      double v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v7 = 0;
      _os_log_impl(&dword_1D4271000, v5, v6, "FMIPBeaconRefreshingController: startUpdatingApplicationBeacons - Will call", v7, 2u);
      MEMORY[0x1D9447730](v7, -1, -1);
    }

    uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_ownerSession);
    long long v9 = self;
    id v10 = v8;
    id v11 = objc_msgSend(v9, sel_fmipItemContext);
    uint64_t v12 = swift_allocObject();
    swift_weakInit();
    uint64_t v22 = (uint64_t)sub_1D444D908;
    uint64_t v23 = v12;
    *(void *)&long long v20 = MEMORY[0x1E4F143A8];
    *((void *)&v20 + 1) = 1107296256;
    *(void *)&long long v21 = sub_1D42796DC;
    *((void *)&v21 + 1) = &unk_1F2C127A0;
    id v13 = _Block_copy(&v20);
    swift_release();
    uint64_t v22 = (uint64_t)sub_1D444D910;
    uint64_t v23 = v1;
    *(void *)&long long v20 = MEMORY[0x1E4F143A8];
    *((void *)&v20 + 1) = 1107296256;
    *(void *)&long long v21 = sub_1D4276428;
    *((void *)&v21 + 1) = &unk_1F2C127C8;
    id v14 = _Block_copy(&v20);
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_startUpdatingApplicationBeaconsWithContext_collectionDifference_completion_, v11, v13, v14);
    _Block_release(v14);
    _Block_release(v13);
  }
  else
  {
    long long v15 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy + 16);
    long long v20 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy);
    long long v21 = v15;
    LOBYTE(v22) = *(unsigned char *)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy + 32);
    uint64_t v24 = *((void *)&v15 + 1);
    uint64_t v25 = v15;
    sub_1D42AB8DC((uint64_t)&v25);
    sub_1D42AB8DC((uint64_t)&v24);
    unint64_t v16 = sub_1D42ABDD0();
    sub_1D42ABDA4((uint64_t)&v25);
    sub_1D42ABDA4((uint64_t)&v24);
    id v17 = v16;
    unint64_t v18 = swift_bridgeObjectRetain();
    sub_1D444CD94(v18, v17);
    swift_bridgeObjectRelease();

    unint64_t v19 = *(void **)(v1 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_ownerSession);
    sub_1D4275AD0(0, &qword_1EBD7CB40);
    id v10 = v19;
    id v11 = (id)sub_1D4469D58();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_startRefreshingBeacons_, v11);
  }
}

void sub_1D4446760(uint64_t a1, void *a2)
{
  uint64_t v52 = a1;
  v54[4] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1D42D5DA0(&qword_1EA6CBA48);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  os_log_type_t v6 = ((char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1D42D5DA0(&qword_1EA6CBA40);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  id v13 = (char *)&v45 - v12;
  MEMORY[0x1F4188790](v11);
  long long v15 = (char *)&v45 - v14;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = Strong;
    uint64_t v49 = v6;
    uint64_t v50 = v4;
    BOOL v51 = a2;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1D4469928();
    uint64_t v19 = sub_1D42D7FAC(v18, (uint64_t)qword_1EBD83228);
    sub_1D42A3A74(v52, (uint64_t)v15, &qword_1EA6CBA40);
    uint64_t v48 = v19;
    long long v20 = sub_1D44698F8();
    os_log_type_t v21 = sub_1D446A008();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v47 = v17;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v46 = v3;
      uint64_t v25 = v24;
      v54[0] = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      sub_1D42A3A74((uint64_t)v15, (uint64_t)v13, &qword_1EA6CBA40);
      uint64_t v26 = sub_1D4469B68();
      uint64_t v53 = sub_1D42CB9EC(v26, v27, v54);
      sub_1D446A188();
      swift_bridgeObjectRelease();
      sub_1D4276C3C((uint64_t)v15, &qword_1EA6CBA40);
      _os_log_impl(&dword_1D4271000, v20, v21, "FMIPBeaconRefreshingController: startUpdatingApplicationBeacons - Did receive callback %s", v23, 0xCu);
      swift_arrayDestroy();
      uint64_t v28 = v25;
      uint64_t v3 = v46;
      MEMORY[0x1D9447730](v28, -1, -1);
      MEMORY[0x1D9447730](v23, -1, -1);
    }
    else
    {
      sub_1D4276C3C((uint64_t)v15, &qword_1EA6CBA40);
    }

    sub_1D42A3A74(v52, (uint64_t)v10, &qword_1EA6CBA40);
    uint64_t v33 = v50;
    int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48))(v10, 1, v3);
    char v35 = v51;
    uint64_t v36 = v49;
    if (v34 == 1)
    {
      sub_1D4276C3C((uint64_t)v10, &qword_1EA6CBA40);
      id v37 = v35;
      id v38 = v35;
      uint64_t v39 = sub_1D44698F8();
      os_log_type_t v40 = sub_1D446A038();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        unint64_t v42 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v41 = 138412290;
        if (v35)
        {
          id v43 = v35;
          uint64_t v44 = _swift_stdlib_bridgeErrorToNSError();
          v54[0] = v44;
          sub_1D446A188();
        }
        else
        {
          v54[0] = 0;
          sub_1D446A188();
          uint64_t v44 = 0;
        }
        *unint64_t v42 = v44;

        _os_log_impl(&dword_1D4271000, v39, v40, "FMIPBeaconRefreshingController: startUpdatingApplicationBeacons - No collectionDifference - Error: %@", v41, 0xCu);
        sub_1D42D5DA0(&qword_1EBD7E830);
        swift_arrayDestroy();
        MEMORY[0x1D9447730](v42, -1, -1);
        MEMORY[0x1D9447730](v41, -1, -1);
      }
      else
      {
      }
      swift_release();
    }
    else
    {
      (*(void (**)(NSObject *, char *, uint64_t))(v33 + 32))(v49, v10, v3);
      sub_1D429FD3C(v36);
      swift_release();
      (*(void (**)(NSObject *, uint64_t))(v33 + 8))(v36, v3);
    }
  }
  else
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1D4469928();
    sub_1D42D7FAC(v29, (uint64_t)qword_1EBD83228);
    uint64_t v30 = sub_1D44698F8();
    os_log_type_t v31 = sub_1D446A038();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_1D4271000, v30, v31, "FMIPBeaconRefreshingController: startUpdatingApplicationBeacons - No self on startUpdatingApplicationBeacons callback", v32, 2u);
      MEMORY[0x1D9447730](v32, -1, -1);
    }
  }
}

void sub_1D4446D6C(int a1, id a2, uint64_t a3)
{
  if (a2)
  {
    id v4 = a2;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1D4469928();
    sub_1D42D7FAC(v5, (uint64_t)qword_1EBD83228);
    id v6 = a2;
    id v7 = a2;
    oslog = sub_1D44698F8();
    os_log_type_t v8 = sub_1D446A038();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      v25[0] = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      swift_getErrorValue();
      uint64_t v11 = sub_1D446A7D8();
      uint64_t v27 = sub_1D42CB9EC(v11, v12, v25);
      sub_1D446A188();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D4271000, oslog, v8, "FMIPBeaconRefreshingController: startUpdatingApplicationBeacons - Start failed due to error: %s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v10, -1, -1);
      MEMORY[0x1D9447730](v9, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1D4469928();
    sub_1D42D7FAC(v14, (uint64_t)qword_1EBD83228);
    swift_retain_n();
    long long v15 = sub_1D44698F8();
    os_log_type_t v16 = sub_1D446A038();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v27 = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v19 = *(void *)(a3 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy + 16);
      uint64_t v20 = *(void *)(a3 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy + 24);
      char v21 = *(unsigned char *)(a3 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy + 32);
      v25[1] = *(void *)(a3 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy + 8);
      void v25[2] = v19;
      v25[3] = v20;
      char v26 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1D4469B68();
      v25[0] = sub_1D42CB9EC(v22, v23, &v27);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v15, v16, "FMIPBeaconRefreshingController: startUpdatingApplicationBeacons - Successfully started updating application beacons: %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v18, -1, -1);
      MEMORY[0x1D9447730](v17, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

void sub_1D4447138(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    if (qword_1EBD80068 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1D4469928();
    sub_1D42D7FAC(v4, (uint64_t)qword_1EBD83228);
    swift_retain_n();
    uint64_t v5 = sub_1D44698F8();
    os_log_type_t v6 = sub_1D446A038();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)id v7 = 136315138;
      aBlock[0] = v32;
      uint64_t v8 = sub_1D4469638();
      unint64_t v10 = sub_1D427A0D0(0xCuLL, v8, v9);
      uint64_t v11 = v3;
      unint64_t v12 = a1;
      uint64_t v13 = MEMORY[0x1D9445EF0](v10);
      unint64_t v15 = v14;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v13;
      a1 = v12;
      uint64_t v3 = v11;
      v33[0] = sub_1D42CB9EC(v16, v15, aBlock);
      sub_1D446A188();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D4271000, v5, v6, "FMIPBeaconRefreshingController<%s> latestLocationsUpdatedBlock fired", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9447730](v32, -1, -1);
      MEMORY[0x1D9447730](v7, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8FMIPCore30FMIPBeaconRefreshingController_refreshingPolicy))
    {
      swift_release();
      return;
    }
    id v17 = objc_msgSend(a1, sel_locationsByBeaconIdentifier);
    sub_1D4469688();
    sub_1D4275AD0(0, &qword_1EA6CA898);
    sub_1D444A534(&qword_1EBD7CB90, MEMORY[0x1E4F27990]);
    uint64_t v18 = sub_1D4469A58();

    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v18;
    *(void *)(v19 + 24) = v3;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = sub_1D42E3798;
    *(void *)(v20 + 24) = v19;
    aBlock[4] = (uint64_t)sub_1D42AEE88;
    void aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_1D42AEDE4;
    uint64_t aBlock[3] = (uint64_t)&unk_1F2C126B0;
    char v21 = _Block_copy(aBlock);
    uint64_t v22 = _Block_copy(v21);
    uint64_t v23 = qword_1EBD7E6F0;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v23 != -1) {
      swift_once();
    }
    uint64_t v24 = qword_1EBD7E6E8;
    swift_unknownObjectRetain();
    uint64_t v25 = _os_activity_create(&dword_1D4271000, "FMIPBeaconRefreshingController.refreshLocations", v24, OS_ACTIVITY_FLAG_DEFAULT);
    swift_unknownObjectRelease();
    char v26 = _Block_copy(v22);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v26;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = sub_1D438C100;
    *(void *)(v28 + 24) = v27;
    v33[4] = sub_1D42AEE88;
    v33[5] = v28;
    v33[0] = MEMORY[0x1E4F143A8];
    v33[1] = 1107296256;
    _OWORD v33[2] = sub_1D42AEDE4;
    v33[3] = &unk_1F2C12728;
    uint64_t v29 = _Block_copy(v33);
    swift_retain();
    swift_release();
    os_activity_apply(v25, v29);
    _Block_release(v29);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    _Block_release(v22);
    swift_unknownObjectRelease();
    _Block_release(v21);
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      swift_release();
      swift_release();
      char v31 = swift_isEscapingClosureAtFileLocation();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      if ((v31 & 1) == 0) {
        return;
      }
    }
    __break(1u);
  }
}