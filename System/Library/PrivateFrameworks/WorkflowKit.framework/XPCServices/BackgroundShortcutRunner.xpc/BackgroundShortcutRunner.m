double sub_100002A48@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  double result;
  long long v9;
  long long v10;
  long long v11;
  Swift::String v12;

  v4 = [a1 identifier];
  v5 = sub_10006F050();
  v7 = v6;

  v12._countAndFlagsBits = v5;
  v12._object = v7;
  sub_10006F0A0(v12);
  swift_bridgeObjectRelease();
  sub_10006E5C0();
  sub_10000772C(&qword_100081A98);
  sub_10006E5D0();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    result = *(double *)&v9;
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
  }
  return result;
}

void sub_100002B84(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v128 = a1;
  uint64_t v129 = a3;
  uint64_t v7 = sub_10000772C(&qword_100081AA0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  v10 = (void (*)(char *, uint64_t))((char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __chkstk_darwin(v8);
  v13 = (void (*)(char *, uint64_t))((char *)&v120 - v12);
  uint64_t v14 = __chkstk_darwin(v11);
  v16 = (void (*)(char *, uint64_t))((char *)&v120 - v15);
  __chkstk_darwin(v14);
  v18 = (void (*)(char *, uint64_t))((char *)&v120 - v17);
  self;
  uint64_t v19 = swift_dynamicCastObjCClass();
  uint64_t v127 = a4;
  if (!v19)
  {
    self;
    uint64_t v32 = swift_dynamicCastObjCClass();
    if (v32)
    {
      v33 = (void *)v32;
      id v34 = a2;
      id v35 = [v33 fullyQualifiedLinkActionIdentifier];
      id v36 = [v35 bundleIdentifier];

      uint64_t v24 = sub_10006F050();
      uint64_t v26 = v37;

      if (sub_10006F490())
      {
        uint64_t v38 = enum case for ContainerDefinition.ContainerType.framework(_:);
        uint64_t v39 = sub_10006EBD0();
        (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(*(void *)(v39 - 8) + 104))(v13, v38, v39);
        uint64_t v40 = (uint64_t)v13;
        uint64_t v41 = 0;
        uint64_t v42 = v39;
      }
      else
      {
        uint64_t v42 = sub_10006EBD0();
        uint64_t v40 = (uint64_t)v13;
        uint64_t v41 = 1;
      }
      sub_100007770(v40, v41, 1, v42);
      uint64_t v62 = sub_1000036D8(v24, v26, v13, v128);
      if (v4)
      {
        swift_bridgeObjectRelease();

        uint64_t v44 = (uint64_t)v13;
        goto LABEL_26;
      }
      uint64_t v126 = v62;
      sub_1000078D0((uint64_t)v13, &qword_100081AA0);
      id v64 = [v33 displayableAppDescriptor];
      if (v64)
      {
        v65 = v64;
        uint64_t v66 = sub_1000075E8(v64, (SEL *)&selRef_bundleIdentifier);
        if (v67)
        {
          uint64_t v68 = v66;
          uint64_t v69 = v67;
          BOOL v70 = v66 == v24 && v67 == v26;
          if (!v70 && (sub_10006F780() & 1) == 0)
          {
            uint64_t v85 = sub_10006EBD0();
            sub_100007770((uint64_t)v10, 1, 1, v85);
            uint64_t v78 = sub_1000036D8(v68, v69, v10, v128);
            sub_1000078D0((uint64_t)v10, &qword_100081AA0);
            swift_bridgeObjectRelease();

            unsigned int v51 = 0;
            v52 = &_swiftEmptyArrayStorage;
            uint64_t v45 = v126;
            goto LABEL_46;
          }

          swift_bridgeObjectRelease();
        }
        else
        {
        }
      }

      unsigned int v51 = 0;
      v52 = &_swiftEmptyArrayStorage;
      uint64_t v45 = v126;
LABEL_45:
      uint64_t v78 = v45;
      goto LABEL_46;
    }
    self;
    uint64_t v53 = swift_dynamicCastObjCClass();
    if (!v53)
    {
      uint64_t v71 = sub_10006F050();
      uint64_t v26 = v72;
      uint64_t v73 = sub_1000038A0(v128);
      if (!v4)
      {
        uint64_t v45 = v73;
        uint64_t v125 = v71;
        id v74 = [a2 displayableAppDescriptor];
        if (v74)
        {
          v75 = v74;
          uint64_t v76 = v45;
          id v77 = [a2 app];
          uint64_t v78 = sub_100003798(v75, 1);
          char v80 = v79;

          unsigned int v51 = v80 & 1;
          v52 = &_swiftEmptyArrayStorage;
          uint64_t v24 = v125;
          uint64_t v45 = v76;
        }
        else
        {
          id v86 = [a2 appDescriptor];
          if (v86)
          {
            v87 = v86;
            uint64_t v88 = v45;
            id v89 = [a2 app];
            uint64_t v117 = sub_100003798(v87, 1);
            char v119 = v118;

            unsigned int v51 = v119 & 1;
            v52 = &_swiftEmptyArrayStorage;
            uint64_t v24 = v125;
            uint64_t v45 = v88;
            uint64_t v78 = v117;
          }
          else
          {
            uint64_t v78 = 0;
            v52 = &_swiftEmptyArrayStorage;
            unsigned int v51 = 1;
            uint64_t v24 = v125;
          }
        }
        goto LABEL_46;
      }
LABEL_58:
      swift_bridgeObjectRelease();
      return;
    }
    v54 = (void *)v53;
    id v55 = a2;
    id v56 = [v54 appDescriptor];
    if (v56)
    {
      v57 = v56;
      uint64_t v58 = sub_1000075E8(v56, (SEL *)&selRef_bundleIdentifier);
      if (v59)
      {
        uint64_t v24 = v58;
        uint64_t v26 = v59;
        uint64_t v60 = sub_100003798(v57, 0);
        if (v4)
        {

          goto LABEL_58;
        }
        char v83 = v61;
        uint64_t v84 = v60;

        if ((v83 & 1) == 0)
        {
          uint64_t v45 = v84;
          goto LABEL_55;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
    uint64_t v90 = v128;
    uint64_t v24 = sub_10006F050();
    uint64_t v26 = v91;
    uint64_t v92 = sub_1000038A0(v90);
    if (v4)
    {

      goto LABEL_58;
    }
    uint64_t v45 = v92;
LABEL_55:
    id v93 = [v54 displayableAppDescriptor];
    if (v93)
    {
      v94 = v93;
      uint64_t v78 = sub_100003798(v93, 1);
      char v96 = v95;

      unsigned int v51 = v96 & 1;
    }
    else
    {
      uint64_t v78 = 0;
      unsigned int v51 = 1;
    }
    self;
    uint64_t v97 = swift_dynamicCastObjCClass();
    if (v97)
    {
      v98 = (void *)v97;
      id v99 = v55;
      uint64_t v100 = sub_100007518(v98);
      if (v100)
      {
        id v124 = v98;
        uint64_t v101 = *(void *)(v100 + 16);
        if (v101)
        {
          uint64_t v120 = v100;
          id v121 = v99;
          unsigned int v122 = v51;
          uint64_t v123 = v78;
          v102 = (uint64_t *)(v100 + 40);
          v52 = &_swiftEmptyArrayStorage;
          uint64_t v125 = v24;
          uint64_t v126 = v45;
          while (1)
          {
            uint64_t v104 = *(v102 - 1);
            uint64_t v103 = *v102;
            swift_bridgeObjectRetain();
            NSString v105 = sub_10006F020();
            id v106 = objc_msgSend(v124, "actionForAppIdentifier:", v105, v120);

            if (v106)
            {
              id v107 = objc_allocWithZone((Class)INAppDescriptor);
              id v108 = sub_100006DBC(v104, v103);
              uint64_t v109 = sub_100003798(v108, 1);
              uint64_t v45 = v126;
              if (v110)
              {

                uint64_t v24 = v125;
                goto LABEL_79;
              }
              uint64_t v111 = v109;
              uint64_t v24 = v125;
              if (v109 == v126) {
                goto LABEL_78;
              }
              char v112 = v122;
              if (v109 != v123) {
                char v112 = 1;
              }
              if ((v112 & 1) == 0)
              {
LABEL_78:

                goto LABEL_79;
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_100067050();
                v52 = v114;
              }
              unint64_t v113 = v52[2];
              if (v113 >= v52[3] >> 1)
              {
                sub_100067050();
                v52 = v115;
              }
              v52[2] = v113 + 1;
              v52[v113 + 4] = v111;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            uint64_t v24 = v125;
            uint64_t v45 = v126;
LABEL_79:
            v102 += 2;
            if (!--v101)
            {
              id v116 = v121;

              swift_bridgeObjectRelease();
              uint64_t v78 = v123;
              unsigned int v51 = v122;
              goto LABEL_46;
            }
          }
        }

        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
    else
    {
    }
LABEL_85:
    v52 = &_swiftEmptyArrayStorage;
LABEL_46:
    v82 = (void *)v127;
    *(void *)uint64_t v127 = v24;
    v82[1] = v26;
    v82[2] = v45;
    v82[3] = v78;
    v82[4] = v51;
    v82[5] = v52;
    return;
  }
  v20 = (void *)v19;
  id v21 = a2;
  id v22 = [v20 fullyQualifiedLinkActionIdentifier];
  id v23 = [v22 bundleIdentifier];

  uint64_t v24 = sub_10006F050();
  uint64_t v26 = v25;

  if (sub_10006F490())
  {
    uint64_t v27 = enum case for ContainerDefinition.ContainerType.framework(_:);
    uint64_t v28 = sub_10006EBD0();
    (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v18, v27, v28);
    uint64_t v29 = (uint64_t)v18;
    uint64_t v30 = 0;
    uint64_t v31 = v28;
  }
  else
  {
    uint64_t v31 = sub_10006EBD0();
    uint64_t v29 = (uint64_t)v18;
    uint64_t v30 = 1;
  }
  sub_100007770(v29, v30, 1, v31);
  uint64_t v43 = sub_1000036D8(v24, v26, v18, v128);
  if (!v4)
  {
    uint64_t v45 = v43;
    sub_1000078D0((uint64_t)v18, &qword_100081AA0);
    uint64_t v46 = sub_1000075E8(v20, (SEL *)&selRef_displayableAppBundleIdentifier);
    if (!v47)
    {
LABEL_17:

      unsigned int v51 = 0;
      v52 = &_swiftEmptyArrayStorage;
      goto LABEL_45;
    }
    uint64_t v48 = v46;
    uint64_t v49 = v47;
    BOOL v50 = v46 == v24 && v47 == v26;
    if (v50 || (sub_10006F780() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    uint64_t v81 = sub_10006EBD0();
    sub_100007770((uint64_t)v16, 1, 1, v81);
    uint64_t v78 = sub_1000036D8(v48, v49, v16, v128);
    sub_1000078D0((uint64_t)v16, &qword_100081AA0);
    swift_bridgeObjectRelease();

    unsigned int v51 = 0;
    goto LABEL_85;
  }
  swift_bridgeObjectRelease();

  uint64_t v44 = (uint64_t)v18;
LABEL_26:
  sub_1000078D0(v44, &qword_100081AA0);
  uint64_t v131 = v4;
  swift_errorRetain();
  sub_10000772C(&qword_100081AA8);
  if ((swift_dynamicCast() & 1) != 0 && v130)
  {
    swift_bridgeObjectRelease();
    swift_errorRelease();
    v63 = (_OWORD *)v127;
    *(_OWORD *)(v127 + 16) = 0u;
    v63[2] = 0u;
    _OWORD *v63 = 0u;
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
  }
}

uint64_t sub_1000036D8(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4)
{
  uint64_t v10 = sub_10001656C();
  if ((v11 & 1) == 0) {
    return v10;
  }
  uint64_t v12 = sub_100003B7C(a1, a2, a3, a4);
  if (!v4)
  {
    v5 = v12;
    swift_bridgeObjectRetain();
    sub_1000165E4();
  }
  return (uint64_t)v5;
}

uint64_t sub_100003798(void *a1, char a2)
{
  sub_1000075E8(a1, (SEL *)&selRef_bundleIdentifier);
  if (!v5 || (v2 = sub_10001656C(), char v7 = v6, swift_bridgeObjectRelease(), (v7 & 1) != 0))
  {
    uint64_t v8 = (void *)sub_100008240();
    if (a2)
    {
      uint64_t v11 = sub_100004E88(v8, v9, v10);
      if (v3) {
        return v2;
      }
      if (v18)
      {
        uint64_t v11 = sub_100008254();
        if (v20)
        {
          id v21 = (void *)sub_100008240();
          return sub_100004CEC(v21, v22, v23);
        }
      }
    }
    else
    {
      uint64_t v11 = sub_100004CEC(v8, v9, v10);
      if (v3) {
        return v2;
      }
      if (v12)
      {
        v13 = (void *)sub_100008240();
        uint64_t v11 = sub_100004E88(v13, v14, v15);
        if (v16) {
          return sub_100008254();
        }
      }
    }
    return v11;
  }
  return v2;
}

uint64_t sub_1000038A0(uint64_t a1)
{
  sub_10006F050();
  uint64_t v3 = sub_10001656C();
  if (v4)
  {
    uint64_t v6 = sub_10006F050();
    uint64_t v8 = v7;
    id v9 = objc_allocWithZone((Class)LSApplicationRecord);
    id v10 = sub_100006E20(v6, v8, 0);
    if (v1)
    {
      __chkstk_darwin(v10);
      sub_10006E800();
      swift_errorRelease();
      uint64_t v5 = v17;
    }
    else
    {
      uint64_t v11 = v10;
      uint64_t v12 = sub_10006F050();
      uint64_t v14 = v13;
      id v16 = v11;
      uint64_t v5 = sub_1000040C0(v12, v14, v11, a1);
      swift_bridgeObjectRelease();
    }
    sub_1000165E4();
  }
  else
  {
    uint64_t v5 = v3;
    swift_bridgeObjectRelease();
  }
  return v5;
}

BOOL sub_100003A8C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_100003A9C(uint64_t a1, char a2)
{
}

Swift::Int sub_100003AC4(char a1)
{
  return sub_10006F840();
}

BOOL sub_100003B0C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100003A8C(*a1, *a2);
}

Swift::Int sub_100003B18()
{
  return sub_100003AC4(*v0);
}

void sub_100003B20(uint64_t a1)
{
  sub_100003A9C(a1, *v1);
}

Swift::Int sub_100003B28()
{
  Swift::UInt v1 = *v0;
  sub_10006F820();
  sub_10006F830(v1);
  return sub_10006F840();
}

void (*sub_100003B7C(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4))(char *, uint64_t)
{
  uint64_t v31 = a4;
  uint64_t v33 = a1;
  uint64_t v7 = sub_10000772C(&qword_100081AA0);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10006EBD0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v32 = (char *)&v31 - v15;
  if (qword_1000819D0 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_100083CA0;
  uint64_t v17 = qword_100083CA0 + 16;
  swift_beginAccess();
  if (!*(void *)(*(void *)(v16 + 16) + 16))
  {
    sub_100007828();
    swift_allocError();
    *id v21 = 0;
    swift_willThrow();
    return a3;
  }
  sub_100007798((uint64_t)a3, (uint64_t)v9);
  a3 = (void (*)(char *, uint64_t))&enum case for ContainerDefinition.ContainerType.extension(_:);
  if (sub_100007800((uint64_t)v9, 1, v10) != 1)
  {
    char v20 = v32;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v32, v9, v10);
    uint64_t v18 = v4;
    goto LABEL_14;
  }
  sub_1000078D0((uint64_t)v9, &qword_100081AA0);
  uint64_t v18 = v4;
  if (!*(void *)(*(void *)v17 + 16))
  {
LABEL_11:
    uint64_t v22 = *(void (**)(char *, void, uint64_t))(v11 + 104);
    uint64_t v23 = v32;
    v22(v32, enum case for ContainerDefinition.ContainerType.app(_:), v10);
    id v24 = objc_allocWithZone((Class)LSApplicationExtensionRecord);
    swift_bridgeObjectRetain();
    id v25 = sub_100006EFC();
    if (v4)
    {
      swift_errorRelease();
      uint64_t v18 = 0;
      char v20 = v23;
      a3 = (void (*)(char *, uint64_t))&enum case for ContainerDefinition.ContainerType.extension(_:);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v11 + 8))(v23, v10);
      v22(v23, enum case for ContainerDefinition.ContainerType.extension(_:), v10);
      a3 = (void (*)(char *, uint64_t))&enum case for ContainerDefinition.ContainerType.extension(_:);
      char v20 = v23;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100068668(v33, a2);
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a3 = (void (*)(char *, uint64_t))&enum case for ContainerDefinition.ContainerType.extension(_:);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v20 = v32;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v32, enum case for ContainerDefinition.ContainerType.daemon(_:), v10);
LABEL_14:
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v20, v10);
  int v26 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v14, v10);
  if (v26 == enum case for ContainerDefinition.ContainerType.app(_:))
  {
    uint64_t v27 = v18;
    sub_1000040C0(v33, a2, 0, v31);
  }
  else if (v26 == enum case for ContainerDefinition.ContainerType.daemon(_:))
  {
    uint64_t v27 = v18;
    uint64_t v28 = sub_10000569C(v33, a2);
  }
  else if (v26 == enum case for ContainerDefinition.ContainerType.extension(_:))
  {
    uint64_t v27 = v18;
    sub_100004D90();
  }
  else
  {
    if (v26 != enum case for ContainerDefinition.ContainerType.framework(_:))
    {
      sub_100007828();
      swift_allocError();
      *uint64_t v30 = 1;
      swift_willThrow();
      a3 = *(void (**)(char *, uint64_t))(v11 + 8);
      a3(v20, v10);
      a3(v14, v10);
      return a3;
    }
    uint64_t v27 = v18;
    uint64_t v28 = sub_100005854();
  }
  if (!v27) {
    a3 = (void (*)(char *, uint64_t))v28;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
  return a3;
}

void sub_1000040C0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (a3)
  {
    id v9 = a3;
    goto LABEL_3;
  }
  if (sub_10006F050() == a1 && v11 == a2) {
    goto LABEL_17;
  }
  char v13 = sub_10006F780();
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_18;
  }
  if (sub_10006F050() == a1 && v14 == a2)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  char v16 = sub_10006F780();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    id v17 = objc_allocWithZone((Class)LSApplicationRecord);
    swift_bridgeObjectRetain();
    id v18 = sub_100006E20(a1, a2, 1);
    if (v4)
    {
      id v10 = (id)swift_errorRelease();
      id v9 = 0;
      goto LABEL_4;
    }
    id v9 = v18;
LABEL_3:
    id v10 = a3;
LABEL_4:
    __chkstk_darwin(v10);
    sub_10006E800();

    return;
  }
LABEL_18:
  sub_1000038A0(a4);
}

uint64_t sub_100004284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, Swift::Int64 *a5@<X8>)
{
  uint64_t v66 = a3;
  uint64_t v67 = a4;
  uint64_t v72 = a2;
  BOOL v70 = a5;
  uint64_t v6 = sub_10006DE00();
  __chkstk_darwin(v6 - 8);
  uint64_t v68 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_10006DEB0();
  v75._countAndFlagsBits = *(void *)(v71 - 8);
  uint64_t v8 = __chkstk_darwin(v71);
  v65 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  v75._object = (char *)&v60 - v11;
  __chkstk_darwin(v10);
  uint64_t v69 = (char *)&v60 - v12;
  uint64_t v13 = sub_10006EBD0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  char v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10006EBE0();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  char v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006F050();
  id v21 = *(void (**)(char *, void, uint64_t))(v14 + 104);
  uint64_t v76 = (void (**)(char *, uint64_t))v13;
  v21(v16, enum case for ContainerDefinition.ContainerType.app(_:), v13);
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for ContainerDefinition.Origin.firstParty(_:), v17);
  uint64_t v22 = v77;
  uint64_t v23 = sub_10006E700();
  if (v22)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    return (*(uint64_t (**)(char *, void))(v14 + 8))(v16, v76);
  }
  else
  {
    uint64_t v77 = 0;
    uint64_t v63 = a1;
    Swift::Int64 v64 = v23;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    (*(void (**)(char *, void))(v14 + 8))(v16, v76);
    unint64_t v25 = *(void *)(v72 + 24);
    if (v25 >> 62) {
      goto LABEL_18;
    }
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v27 = v70;
      uint64_t v28 = v71;
      object = v75._object;
      uint64_t v30 = v69;
      Swift::Int64 v31 = v64;
      if (!v26) {
        break;
      }
      unint64_t v61 = v25;
      unint64_t v62 = v25 & 0xC000000000000001;
      uint64_t v76 = (void (**)(char *, uint64_t))(v75._countAndFlagsBits + 8);
      uint64_t v32 = 4;
      uint64_t v60 = v26;
      while (1)
      {
        id v33 = v62 ? (id)sub_10006F620() : *(id *)(v25 + 8 * v32);
        if (__OFADD__(v32 - 4, 1)) {
          break;
        }
        uint64_t v73 = v32 - 3;
        id v34 = v33;
        id v35 = [v33 locale];
        sub_10006DEA0();

        v75._countAndFlagsBits = sub_10006DE50();
        v75._object = v36;
        id v74 = *v76;
        v74(v30, v28);
        uint64_t v37 = sub_10006F070();
        uint64_t v39 = v38;
        uint64_t v40 = sub_10006F070();
        uint64_t v42 = v41;
        sub_10006DE80();
        if (qword_1000819D8 != -1) {
          swift_once();
        }
        id v43 = objc_msgSend((id)static NSBundle._current, "bundleURL", v60);
        uint64_t v44 = (uint64_t)v68;
        sub_10006DDF0();

        id v45 = objc_allocWithZone((Class)_NSLocalizedStringResource);
        id v46 = sub_100006FC8(v37, v39, v40, v42, 0, 0, (uint64_t)object, v44);
        id v47 = [v34 localize:v46];

        uint64_t v48 = sub_10006F050();
        BOOL v50 = v49;

        Swift::Int64 v31 = v64;
        v78._countAndFlagsBits = v48;
        v78._object = v50;
        uint64_t v51 = v77;
        sub_10006E7A0(v64, v75, v78);
        if (v51)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        uint64_t v52 = v32;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v53 = [v34 locale];
        v54 = v34;
        id v55 = v65;
        sub_10006DEA0();

        uint64_t v56 = sub_10006DE50();
        uint64_t v58 = v57;
        uint64_t v59 = v55;
        uint64_t v28 = v71;
        v74(v59, v71);
        sub_10000495C(v66, v67, v31, v56, v58);
        unint64_t v25 = v61;
        uint64_t v77 = 0;
        swift_bridgeObjectRelease();

        uint64_t v32 = v52 + 1;
        uint64_t v30 = v69;
        uint64_t v27 = v70;
        if (v73 == v60) {
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_10006F6F0();
    }
LABEL_15:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v27 = v31;
  }
  return result;
}

void sub_10000495C(uint64_t a1, uint64_t a2, Swift::Int64 a3, uint64_t a4, void *a5)
{
  v37._object = a5;
  v37._countAndFlagsBits = a4;
  sub_100007890();
  swift_bridgeObjectRetain();
  id v6 = sub_100006D2C();
  if (!v6) {
    return;
  }
  uint64_t v7 = v6;
  uint64_t v8 = sub_10000757C(v6);
  if (!v8)
  {
    long long v38 = 0u;
    long long v39 = 0u;
    goto LABEL_18;
  }
  sub_100008284(0xD000000000000015, 0x8000000100071BE0, v8, &v38);
  swift_bridgeObjectRelease();
  if (!*((void *)&v39 + 1))
  {
LABEL_18:

    sub_1000078D0((uint64_t)&v38, &qword_100082450);
    return;
  }
  sub_10000772C(&qword_100081AD0);
  if (swift_dynamicCast())
  {
    id v35 = v7;
    uint64_t v9 = v40;
    uint64_t v10 = *(void *)(v40 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = 0;
      uint64_t v12 = &_swiftEmptyArrayStorage;
      do
      {
        uint64_t v13 = *(void *)(v9 + 8 * v11 + 32);
        if (*(void *)(v13 + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v14 = sub_100068668(0xD000000000000014, 0x8000000100071C00);
          if (v15)
          {
            char v16 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v14);
            uint64_t v17 = *v16;
            uint64_t v18 = v16[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_100067104(0, v12[2] + 1, 1, (uint64_t)v12);
              uint64_t v12 = v22;
            }
            unint64_t v20 = v12[2];
            unint64_t v19 = v12[3];
            if (v20 >= v19 >> 1)
            {
              sub_100067104(v19 > 1, v20 + 1, 1, (uint64_t)v12);
              uint64_t v12 = v23;
            }
            v12[2] = v20 + 1;
            id v21 = (char *)&v12[2 * v20];
            *((void *)v21 + 4) = v17;
            *((void *)v21 + 5) = v18;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        ++v11;
      }
      while (v10 != v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = &_swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    uint64_t v34 = v12[2];
    if (v34)
    {
      Swift::Int v24 = 0;
      unint64_t v25 = (char *)(v12 + 5);
      while (1)
      {
        swift_bridgeObjectRetain();
        NSString v26 = sub_10006F020();
        NSString v27 = sub_10006F020();
        swift_bridgeObjectRelease();
        NSString v28 = sub_10006F020();
        NSString v29 = sub_10006F020();
        id v30 = [v35 localizedStringForKey:v26 value:v27 table:v28 localization:v29];

        uint64_t v31 = sub_10006F050();
        id v33 = v32;

        v41._countAndFlagsBits = v31;
        v41._object = v33;
        sub_10006E770(a3, v37, v41, v24);
        if (v5) {
          break;
        }
        v25 += 16;
        ++v24;
        swift_bridgeObjectRelease();
        if (v34 == v24) {
          goto LABEL_28;
        }
      }
      swift_bridgeObjectRelease();
    }
LABEL_28:

    swift_bridgeObjectRelease();
  }
  else
  {
  }
}

uint64_t sub_100004CEC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1000075E8(a1, (SEL *)&selRef_extensionBundleIdentifier);
  if (!v5) {
    return 0;
  }
  sub_100004D90();
  if (v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    a3 = v6;
    sub_1000165E4();
  }
  return a3;
}

void sub_100004D90()
{
  id v1 = objc_allocWithZone((Class)LSApplicationExtensionRecord);
  swift_bridgeObjectRetain();
  id v2 = sub_100006EFC();
  if (!v0)
  {
    uint64_t v3 = v2;
    __chkstk_darwin(v2);
    sub_10006E800();
  }
}

uint64_t sub_100004E88(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = [a1 applicationRecord];
  uint64_t v7 = sub_1000075E8(a1, (SEL *)&selRef_bundleIdentifier);
  uint64_t v9 = v8;
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v8)
  {

    return 0;
  }
  uint64_t v10 = v7;
  id v11 = v6;
  sub_1000040C0(v10, v9, v6, a3);
  if (v3)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    a3 = v12;
    sub_1000165E4();
  }
  return a3;
}

uint64_t sub_100004F88(void *a1)
{
  uint64_t v2 = sub_1000075E8(a1, (SEL *)&selRef_bundleIdentifier);
  if (!v3) {
    return 0;
  }
  __chkstk_darwin(v2);
  sub_10000772C(&qword_100081AE0);
  sub_10006E800();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v1) {
    return v5;
  }
  return result;
}

uint64_t sub_100005080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v58 = a6;
  uint64_t v59 = a7;
  uint64_t v60 = a5;
  uint64_t v61 = a1;
  v65 = (void *)a3;
  uint64_t v66 = sub_10006DEB0();
  uint64_t v62 = *(void *)(v66 - 8);
  uint64_t v8 = __chkstk_darwin(v66);
  id v55 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v56 = (char *)&v50 - v10;
  uint64_t v11 = sub_10006EBE0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10006EBD0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for ContainerDefinition.ContainerType.app(_:), v15);
  v57 = a4;
  sub_1000075E8(a4, (SEL *)&selRef_teamIdentifier);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for ContainerDefinition.Origin.unknown(_:), v11);
  unint64_t v19 = v63;
  uint64_t v20 = sub_10006E700();
  if (v19)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  else
  {
    Swift::Int64 v54 = v20;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    unint64_t v22 = *(void *)(v60 + 24);
    if (v22 >> 62) {
      goto LABEL_20;
    }
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (1)
    {
      unint64_t v25 = v58;
      uint64_t v24 = v59;
      NSString v26 = v57;
      if (!v23) {
        break;
      }
      unint64_t v52 = v22;
      unint64_t v53 = v22 & 0xC000000000000001;
      uint64_t v63 = (void (**)(char *, uint64_t))(v62 + 8);
      uint64_t v27 = 4;
      uint64_t v51 = v23;
      while (1)
      {
        id v28 = v53 ? (id)sub_10006F620() : *(id *)(v22 + 8 * v27);
        NSString v29 = v28;
        id v30 = v56;
        if (__OFADD__(v27 - 4, 1)) {
          break;
        }
        uint64_t v62 = v27 - 3;
        id v31 = [v28 locale];
        sub_10006DEA0();

        uint64_t v32 = sub_10006DE50();
        uint64_t v34 = v33;
        id v35 = *v63;
        (*v63)(v30, v66);
        if (v25
          && (id v36 = [v25 localizedNameWithContext:v29]) != 0)
        {
          Swift::String v37 = v36;
          uint64_t v38 = sub_10006F050();
          uint64_t v40 = v39;
        }
        else
        {
          uint64_t v41 = sub_1000075E8(v26, (SEL *)&selRef_localizedName);
          if (v42)
          {
            uint64_t v38 = v41;
            uint64_t v40 = v42;
          }
          else
          {
            uint64_t v40 = v65;
            swift_bridgeObjectRetain();
            uint64_t v38 = v64;
          }
        }
        Swift::Int64 v43 = v54;
        v67._countAndFlagsBits = v32;
        v67._object = v34;
        v68._countAndFlagsBits = v38;
        v68._object = v40;
        sub_10006E7A0(v54, v67, v68);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v44 = [v29 locale];
        id v45 = v55;
        sub_10006DEA0();

        uint64_t v46 = sub_10006DE50();
        uint64_t v48 = v47;
        v35(v45, v66);
        sub_10000495C(v64, (uint64_t)v65, v43, v46, v48);
        swift_bridgeObjectRelease();

        ++v27;
        unint64_t v22 = v52;
        unint64_t v25 = v58;
        uint64_t v24 = v59;
        NSString v26 = v57;
        if (v62 == v51) {
          goto LABEL_18;
        }
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_10006F6F0();
    }
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    Swift::Int64 v49 = v54;
    uint64_t result = sub_1000165E4();
    *(void *)uint64_t v24 = v49;
    *(unsigned char *)(v24 + 8) = 0;
  }
  return result;
}

uint64_t sub_100005640()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100005668()
{
  sub_100005640();
  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_10000569C(uint64_t a1, uint64_t a2)
{
  if (qword_1000819D0 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_100083CA0;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 16);
  if (!*(void *)(v6 + 16)) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_100068668(a1, a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_8:
    sub_10000792C();
    swift_allocError();
    *uint64_t v15 = a1;
    v15[1] = a2;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  uint64_t v9 = (_OWORD *)(*(void *)(v6 + 56) + (v7 << 6));
  long long v11 = v9[2];
  long long v10 = v9[3];
  long long v12 = v9[1];
  v17[0] = *v9;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = v10;
  sub_100007978((uint64_t)v17);
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_bridgeObjectRelease();
  __chkstk_darwin(v13);
  sub_10006E800();
  uint64_t result = sub_1000079EC((uint64_t)v17);
  if (!v2) {
    return v16;
  }
  return result;
}

uint64_t sub_100005854()
{
  uint64_t result = sub_10006E800();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1000058BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, Swift::Int64 *a6@<X8>)
{
  uint64_t v66 = a5;
  uint64_t v67 = a2;
  uint64_t v68 = a3;
  uint64_t v69 = a1;
  id v55 = a6;
  uint64_t v74 = sub_10006DEB0();
  uint64_t v73 = *(char **)(v74 - 8);
  uint64_t v8 = __chkstk_darwin(v74);
  uint64_t v63 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  v57 = (char *)&v54 - v11;
  __chkstk_darwin(v10);
  uint64_t v64 = (char *)&v54 - v12;
  uint64_t v13 = sub_10006EBE0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10006EBD0();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = a4;
  if (a4) {
    sub_1000075E8(a4, (SEL *)&selRef_bundleVersion);
  }
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for ContainerDefinition.ContainerType.app(_:), v17);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for ContainerDefinition.Origin.unknown(_:), v13);
  uint64_t v21 = sub_10006E700();
  if (v6)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  else
  {
    Swift::Int64 v62 = v21;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    unint64_t v23 = *(void *)(v66 + 24);
    if (v23 >> 62) {
      goto LABEL_19;
    }
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v25 = v74;
      Swift::Int64 v26 = v62;
      if (!v24) {
        break;
      }
      unint64_t v61 = v23 & 0xC000000000000001;
      uint64_t v27 = v73 + 8;
      uint64_t v28 = 4;
      long long v56 = xmmword_100070F50;
      uint64_t v59 = v73 + 8;
      unint64_t v60 = v23;
      uint64_t v58 = v24;
      while (1)
      {
        NSString v29 = v61 ? (char *)sub_10006F620() : (char *)*(id *)(v23 + 8 * v28);
        if (__OFADD__(v28 - 4, 1)) {
          break;
        }
        uint64_t v70 = v28;
        uint64_t v71 = v28 - 3;
        id v30 = v29;
        id v31 = [v29 locale];
        uint64_t v32 = v64;
        sub_10006DEA0();

        v72._countAndFlagsBits = sub_10006DE50();
        v72._object = v33;
        uint64_t v34 = *(void (**)(char *, uint64_t))v27;
        (*(void (**)(char *, uint64_t))v27)(v32, v25);
        id v35 = v65;
        uint64_t v73 = v30;
        if (v65)
        {
          uint64_t v36 = v25;
          sub_10000772C(&qword_100081AB8);
          uint64_t v37 = swift_allocObject();
          *(_OWORD *)(v37 + 16) = v56;
          id v38 = [v30 locale];
          long long v39 = v57;
          sub_10006DEA0();

          uint64_t v40 = sub_10006DE50();
          uint64_t v42 = v41;
          v34(v39, v36);
          *(void *)(v37 + 32) = v40;
          *(void *)(v37 + 40) = v42;
          Swift::Int64 v26 = v62;
          Class isa = sub_10006F0E0().super.isa;
          swift_bridgeObjectRelease();
          id v44 = [v35 localizedNameWithPreferredLocalizations:isa];

          uint64_t v45 = sub_10006F050();
          id v47 = v46;
        }
        else
        {
          uint64_t v45 = 0;
          id v47 = (void *)0xE000000000000000;
          Swift::Int64 v26 = v62;
        }
        v75._countAndFlagsBits = v45;
        v75._object = v47;
        sub_10006E7A0(v26, v72, v75);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v48 = v73;
        id v49 = [v73 locale];
        uint64_t v50 = v63;
        sub_10006DEA0();

        uint64_t v51 = sub_10006DE50();
        unint64_t v53 = v52;
        uint64_t v27 = v59;
        v34(v50, v74);
        sub_10000495C(v67, v68, v26, v51, v53);
        swift_bridgeObjectRelease();

        uint64_t v28 = v70 + 1;
        uint64_t v25 = v74;
        unint64_t v23 = v60;
        if (v71 == v58) {
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_10006F6F0();
    }
LABEL_17:
    uint64_t result = swift_bridgeObjectRelease();
    *id v55 = v26;
  }
  return result;
}

uint64_t sub_100005F00@<X0>(uint64_t a1@<X0>, Swift::Int64 a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *(void *)&long long v58 = a5;
  uint64_t v67 = a1;
  uint64_t v68 = a3;
  Swift::Int64 v61 = a2;
  uint64_t v66 = a6;
  uint64_t v64 = sub_10006DEB0();
  uint64_t v55 = *(void *)(v64 - 8);
  uint64_t v7 = __chkstk_darwin(v64);
  Swift::Int64 v62 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v65 = (char *)&v54 - v9;
  uint64_t v10 = sub_10006EBE0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10006EBD0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000075E8(a4, (SEL *)&selRef_bundleVersion);
  uint64_t v18 = *(void (**)(char *, void, uint64_t))(v15 + 104);
  unint64_t v60 = v14;
  v18(v17, enum case for ContainerDefinition.ContainerType.extension(_:), v14);
  sub_1000075E8(a4, (SEL *)&selRef_teamIdentifier);
  id v63 = a4;
  unsigned int v19 = [a4 developerType];
  uint64_t v20 = (unsigned int *)&enum case for ContainerDefinition.Origin.thirdParty(_:);
  uint64_t v21 = (unsigned int *)&enum case for ContainerDefinition.Origin.firstParty(_:);
  if (v19 != 1) {
    uint64_t v21 = (unsigned int *)&enum case for ContainerDefinition.Origin.unknown(_:);
  }
  if (v19 != 3) {
    uint64_t v20 = v21;
  }
  uint64_t v22 = *v20;
  unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  uint64_t v69 = v10;
  v23(v13, v22, v10);
  uint64_t v24 = v70;
  uint64_t v25 = sub_10006E700();
  if (v24)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v69);
    return (*(uint64_t (**)(char *, unint64_t))(v15 + 8))(v17, v60);
  }
  else
  {
    uint64_t v27 = v55;
    Swift::Int64 v61 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v69);
    (*(void (**)(char *, unint64_t))(v15 + 8))(v17, v60);
    unint64_t v28 = *(void *)(v58 + 24);
    if (v28 >> 62) {
      goto LABEL_21;
    }
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (1)
    {
      id v31 = v65;
      id v30 = v66;
      if (!v29) {
        break;
      }
      uint64_t v59 = v27 + 8;
      unint64_t v60 = v28 & 0xC000000000000001;
      uint64_t v32 = 4;
      long long v58 = xmmword_100070F50;
      uint64_t v56 = v29;
      unint64_t v57 = v28;
      id v33 = (void (**)(char *, uint64_t))(v27 + 8);
      while (1)
      {
        uint64_t v27 = v32 - 4;
        id v34 = v60 ? (id)sub_10006F620() : *(id *)(v28 + 8 * v32);
        uint64_t v35 = v64;
        if (__OFADD__(v27, 1)) {
          break;
        }
        uint64_t v68 = v32 - 3;
        uint64_t v36 = v34;
        id v37 = [v34 locale];
        sub_10006DEA0();

        uint64_t v69 = sub_10006DE50();
        long long v39 = v38;
        uint64_t v70 = 0;
        uint64_t v40 = *v33;
        (*v33)(v31, v35);
        sub_10000772C(&qword_100081AB8);
        uint64_t v41 = swift_allocObject();
        *(_OWORD *)(v41 + 16) = v58;
        id v42 = [v36 locale];
        Swift::Int64 v43 = v62;
        sub_10006DEA0();

        uint64_t v44 = sub_10006DE50();
        uint64_t v45 = v35;
        uint64_t v47 = v46;
        v40(v43, v45);
        *(void *)(v41 + 32) = v44;
        *(void *)(v41 + 40) = v47;
        Class isa = sub_10006F0E0().super.isa;
        swift_bridgeObjectRelease();
        id v49 = [v63 localizedNameWithPreferredLocalizations:isa];

        uint64_t v50 = sub_10006F050();
        unint64_t v52 = v51;

        v71._countAndFlagsBits = v69;
        v71._object = v39;
        v72._countAndFlagsBits = v50;
        v72._object = v52;
        uint64_t v53 = v70;
        sub_10006E7A0(v61, v71, v72);
        if (v53)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        ++v32;
        unint64_t v28 = v57;
        id v31 = v65;
        id v30 = v66;
        if (v68 == v56) {
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_21:
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_10006F6F0();
    }
LABEL_17:
    uint64_t result = swift_bridgeObjectRelease();
    *id v30 = v61;
  }
  return result;
}

uint64_t sub_1000064C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, Swift::Int64 a3@<X2>, void (**a4)(char *, uint64_t)@<X3>, void (*a5)(char *, uint64_t)@<X4>, void *a6@<X8>)
{
  id v42 = a5;
  uint64_t v43 = a2;
  Swift::Int64 v45 = a3;
  uint64_t v39 = a1;
  uint64_t v47 = a6;
  uint64_t v46 = sub_10006DEB0();
  id v38 = *(void (***)(char *, uint64_t))(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10006EBE0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10006EBD0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = a4;
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for ContainerDefinition.ContainerType.daemon(_:), v13);
  uint64_t v17 = *(void (**)(char *, void, uint64_t))(v10 + 104);
  unint64_t v44 = v9;
  v17(v12, enum case for ContainerDefinition.Origin.firstParty(_:), v9);
  uint64_t v18 = v39;
  uint64_t v19 = v48;
  uint64_t v20 = sub_10006E700();
  if (v19)
  {
    (*(void (**)(char *, unint64_t))(v10 + 8))(v12, v44);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    uint64_t v22 = v38;
    uint64_t v48 = 0;
    unint64_t v23 = v41;
    Swift::Int64 v45 = v20;
    (*(void (**)(char *, unint64_t))(v10 + 8))(v12, v44);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    unint64_t v24 = *((void *)v42 + 3);
    if (v24 >> 62) {
      goto LABEL_18;
    }
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (1)
    {
      Swift::Int64 v26 = v47;
      if (!v25) {
        break;
      }
      uint64_t v27 = (uint64_t)v23[2];
      id v42 = v23[3];
      uint64_t v43 = v27;
      unint64_t v44 = v24 & 0xC000000000000001;
      unint64_t v40 = v24;
      uint64_t v41 = v22 + 1;
      uint64_t v28 = 4;
      while (1)
      {
        unint64_t v23 = (void (**)(char *, uint64_t))(v28 - 4);
        uint64_t v29 = v44
            ? (void (**)(char *, uint64_t))sub_10006F620()
            : (void (**)(char *, uint64_t))*(id *)(v24 + 8 * v28);
        uint64_t v30 = v28 - 3;
        if (__OFADD__(v23, 1)) {
          break;
        }
        uint64_t v22 = v29;
        id v31 = [v29 locale];
        sub_10006DEA0();

        uint64_t v32 = sub_10006DE50();
        uint64_t v33 = v18;
        uint64_t v35 = v34;
        (*v41)(v8, v46);
        v49._countAndFlagsBits = v32;
        v49._object = v35;
        v50._object = v42;
        v50._countAndFlagsBits = v43;
        uint64_t v36 = v48;
        sub_10006E7A0(v45, v49, v50);
        if (v36)
        {

          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        uint64_t v48 = 0;
        swift_bridgeObjectRelease();

        ++v28;
        BOOL v37 = v30 == v25;
        Swift::Int64 v26 = v47;
        uint64_t v18 = v33;
        unint64_t v24 = v40;
        if (v37) {
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_10006F6F0();
    }
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *Swift::Int64 v26 = v45;
  }
  return result;
}

uint64_t sub_10000690C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unint64_t a4@<X3>, void *a5@<X8>)
{
  unint64_t v34 = a4;
  id v38 = a5;
  uint64_t v39 = a1;
  uint64_t v36 = sub_10006DEB0();
  uint64_t v33 = *(void (***)(char *, uint64_t))(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10006EBE0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10006EBD0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for ContainerDefinition.ContainerType.framework(_:), v13);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for ContainerDefinition.Origin.firstParty(_:), v9);
  v37._countAndFlagsBits = a2;
  v37._object = a3;
  uint64_t v17 = v40;
  uint64_t v18 = sub_10006E700();
  uint64_t v40 = v17;
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    Swift::Int64 v35 = v18;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    unint64_t v20 = *(void *)(v34 + 24);
    if (v20 >> 62) {
      goto LABEL_16;
    }
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v22 = v38;
      if (!v21) {
        break;
      }
      ++v33;
      unint64_t v34 = v20 & 0xC000000000000001;
      uint64_t v23 = 4;
      while (1)
      {
        id v24 = v34 ? (id)sub_10006F620() : *(id *)(v20 + 8 * v23);
        uint64_t v25 = v24;
        uint64_t v26 = v23 - 3;
        if (__OFADD__(v23 - 4, 1)) {
          break;
        }
        uint64_t v27 = v21;
        id v28 = [v24 locale];
        sub_10006DEA0();

        uint64_t v29 = sub_10006DE50();
        id v31 = v30;
        (*v33)(v8, v36);
        v41._countAndFlagsBits = v29;
        v41._object = v31;
        uint64_t v32 = v40;
        sub_10006E7A0(v35, v41, v37);
        if (v32)
        {

          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        uint64_t v40 = 0;
        swift_bridgeObjectRelease();

        ++v23;
        uint64_t v21 = v27;
        uint64_t v22 = v38;
        if (v26 == v27) {
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_10006F6F0();
    }
LABEL_13:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v22 = v35;
  }
  return result;
}

id sub_100006D2C()
{
  NSString v0 = sub_10006F020();
  swift_bridgeObjectRelease();
  id v1 = [(id)swift_getObjCClassFromMetadata() bundleWithIdentifier:v0];

  return v1;
}

uint64_t variable initialization expression of ToolKitHelper.ContentPropertyPossibleValuesDefinition.contentItemClass()
{
  return 0;
}

uint64_t type metadata accessor for ContainerIndexer()
{
  return self;
}

id sub_100006DBC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v3 = sub_10006F020();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }
  id v4 = [v2 initWithBundleIdentifier:v3];

  return v4;
}

id sub_100006E20(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = sub_10006F020();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    sub_10006DDC0();

    swift_willThrow();
  }
  return v6;
}

id sub_100006EFC()
{
  NSString v1 = sub_10006F020();
  swift_bridgeObjectRelease();
  id v6 = 0;
  id v2 = [v0 initWithBundleIdentifier:v1 error:&v6];

  if (v2)
  {
    id v3 = v6;
  }
  else
  {
    id v4 = v6;
    sub_10006DDC0();

    swift_willThrow();
  }
  return v2;
}

id sub_100006FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  NSString v14 = sub_10006F020();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    NSString v15 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v16 = 0;
    goto LABEL_6;
  }
  NSString v15 = sub_10006F020();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v16 = sub_10006F020();
  swift_bridgeObjectRelease();
LABEL_6:
  Class isa = sub_10006DE70().super.isa;
  sub_10006DDE0(v18);
  unint64_t v20 = v19;
  id v21 = [v9 initWithKey:v14 defaultValue:v15 table:v16 locale:isa bundleURL:v19];

  uint64_t v22 = sub_10006DE00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(a8, v22);
  uint64_t v23 = sub_10006DEB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(a7, v23);
  return v21;
}

uint64_t sub_100007144(uint64_t a1, id *a2)
{
  return sub_1000080B4(a1, a2);
}

uint64_t sub_10000715C(uint64_t a1, id *a2)
{
  return sub_10000812C(a1, a2) & 1;
}

uint64_t sub_100007178()
{
  return sub_1000081E4(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_1000071A8()
{
  return sub_100007648();
}

Swift::Int sub_1000071C4()
{
  return sub_10000769C();
}

uint64_t sub_1000071E0()
{
  return sub_1000081E4(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

NSString sub_100007210@<X0>(void *a1@<X8>)
{
  NSString result = sub_1000081AC();
  *a1 = result;
  return result;
}

uint64_t sub_100007238()
{
  return sub_1000521D8();
}

uint64_t sub_100007244()
{
  return sub_10000802C() & 1;
}

uint64_t sub_10000726C(uint64_t a1)
{
  uint64_t v2 = sub_100007D9C(&qword_100081B58, type metadata accessor for WFMeasurementUnitType);
  uint64_t v3 = sub_100007D9C((unint64_t *)&unk_100081B60, type metadata accessor for WFMeasurementUnitType);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100007328@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_10006F020();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100007370@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10000739C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000073A0(uint64_t a1)
{
  uint64_t v2 = sub_100007D9C(&qword_100082490, type metadata accessor for LNPlatformName);
  uint64_t v3 = sub_100007D9C(&qword_100081B70, type metadata accessor for LNPlatformName);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000745C(uint64_t a1)
{
  uint64_t v2 = sub_100007D9C(&qword_100081B78, type metadata accessor for WFExecutionPlatform);
  uint64_t v3 = sub_100007D9C((unint64_t *)&unk_100081B80, type metadata accessor for WFExecutionPlatform);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100007518(void *a1)
{
  id v2 = [a1 supportedAppIdentifiers];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_10006F0F0();

  return v3;
}

uint64_t sub_10000757C(void *a1)
{
  id v1 = [a1 infoDictionary];
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_10006EFC0();

  return v3;
}

uint64_t sub_1000075E8(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_10006F050();

  return v4;
}

uint64_t sub_100007648()
{
  sub_10006F050();
  sub_10006F090();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_10000769C()
{
  sub_10006F050();
  sub_10006F820();
  sub_10006F090();
  Swift::Int v0 = sub_10006F840();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_100007710(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100002B84(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_10000772C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100007770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_100007798(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000772C(&qword_100081AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100007800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

unint64_t sub_100007828()
{
  unint64_t result = qword_100081AB0;
  if (!qword_100081AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100081AB0);
  }
  return result;
}

uint64_t sub_100007874()
{
  sub_100008278();
  return sub_1000058BC(v0, v1, v2, v3, v4, v5);
}

unint64_t sub_100007890()
{
  unint64_t result = qword_100081AC0;
  if (!qword_100081AC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100081AC0);
  }
  return result;
}

uint64_t sub_1000078D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10000772C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10000792C()
{
  unint64_t result = qword_100081AD8;
  if (!qword_100081AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100081AD8);
  }
  return result;
}

uint64_t sub_100007978(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000079D0()
{
  sub_100008278();
  return sub_1000064C4(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_1000079EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100007A44()
{
  sub_100008278();
  return sub_100005F00(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100007A60@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_10000690C(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_100007A80()
{
  sub_100008278();
  return sub_100005080(v1, v2, v3, v4, v5, *(void **)(v0 + 48), v6);
}

uint64_t sub_100007AA0@<X0>(uint64_t a1@<X0>, Swift::Int64 *a2@<X8>)
{
  return sub_100004284(a1, v2[2], v2[3], v2[4], a2);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for WFMeasurementUnitType(uint64_t a1)
{
}

unsigned char *initializeBufferWithCopyOfBuffer for ContainerIndexer.ContainerIndexerError(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ContainerIndexer.ContainerIndexerError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ContainerIndexer.ContainerIndexerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100007C4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100007C74(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100007C80(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ContainerIndexer.ContainerIndexerError()
{
  return &type metadata for ContainerIndexer.ContainerIndexerError;
}

void type metadata accessor for LNPlatformName(uint64_t a1)
{
}

void type metadata accessor for WFExecutionPlatform(uint64_t a1)
{
}

void sub_100007CC4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_100007D0C()
{
  return sub_100007D9C(&qword_100081B08, type metadata accessor for WFExecutionPlatform);
}

uint64_t sub_100007D54()
{
  return sub_100007D9C(&qword_100081B10, type metadata accessor for WFExecutionPlatform);
}

uint64_t sub_100007D9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100007DE4()
{
  return sub_100007D9C(&qword_100081B18, type metadata accessor for WFExecutionPlatform);
}

uint64_t sub_100007E2C()
{
  return sub_100007D9C(&qword_100081B20, type metadata accessor for LNPlatformName);
}

uint64_t sub_100007E74()
{
  return sub_100007D9C(&qword_100081B28, type metadata accessor for LNPlatformName);
}

unint64_t sub_100007EC0()
{
  unint64_t result = qword_100081B30;
  if (!qword_100081B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100081B30);
  }
  return result;
}

uint64_t sub_100007F0C()
{
  return sub_100007D9C(&qword_100081B38, type metadata accessor for WFMeasurementUnitType);
}

uint64_t sub_100007F54()
{
  return sub_100007D9C(&qword_100081B40, type metadata accessor for WFMeasurementUnitType);
}

uint64_t sub_100007F9C()
{
  return sub_100007D9C(&qword_100081B48, type metadata accessor for WFMeasurementUnitType);
}

uint64_t sub_100007FE4()
{
  return sub_100007D9C(&qword_100081B50, type metadata accessor for LNPlatformName);
}

uint64_t sub_10000802C()
{
  uint64_t v0 = sub_10006F050();
  uint64_t v2 = v1;
  if (v0 == sub_10006F050() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_10006F780();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1000080B4(uint64_t a1, id *a2)
{
  uint64_t result = sub_10006F030();
  *a2 = 0;
  return result;
}

uint64_t sub_10000812C(uint64_t a1, id *a2)
{
  char v3 = sub_10006F040();
  *a2 = 0;
  return v3 & 1;
}

NSString sub_1000081AC()
{
  sub_10006F050();
  NSString v0 = sub_10006F020();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000081E4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_10006F050();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100008240()
{
  return v0;
}

uint64_t sub_100008254()
{
  return sub_100004F88(v0);
}

double sub_100008284@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (uint64_t v6 = sub_100068668(a1, a2), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(a3 + 56) + 32 * v6;
    sub_100009038(v8, (uint64_t)a4);
  }
  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_1000082E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_100068668(a1, a2), (v3 & 1) != 0)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

uint64_t sub_10000832C()
{
  type metadata accessor for DaemonEnumerator();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_10006EFE0();
  *(void *)(v0 + 16) = result;
  qword_100083CA0 = v0;
  return result;
}

void sub_10000838C()
{
  uint64_t v1 = v0;
  sub_100008EDC();
  id v2 = sub_100008B58();
  if (!v2)
  {
    sub_100008F1C();
    swift_allocError();
    *char v5 = 0;
    swift_willThrow();
    return;
  }
  char v3 = v2;
  strcpy((char *)&v67, "LaunchDaemons");
  HIWORD(v67) = -4864;
  id v4 = objc_msgSend(v2, "__swift_objectForKeyedSubscript:", sub_10006F7A0());
  swift_unknownObjectRelease();
  if (v4)
  {
    sub_10006F4F0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v67 = 0u;
    v68[0] = 0u;
  }
  sub_100009094((uint64_t)&v67, (uint64_t)&v69, &qword_100082450);
  if (!*((void *)&v71 + 1))
  {
    sub_100008F68((uint64_t)&v69);
    goto LABEL_70;
  }
  sub_10000772C(&qword_100081CC0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_70:
    sub_100008F1C();
    swift_allocError();
    unsigned char *v52 = 0;
LABEL_71:
    swift_willThrow();

    return;
  }
  uint64_t v6 = v65;
  id v7 = [self currentDevice];
  uint64_t v58 = sub_100008FC8(v7);
  if (!v8)
  {
    swift_bridgeObjectRelease();
    sub_100008F1C();
    swift_allocError();
    *uint64_t v53 = 1;
    goto LABEL_71;
  }
  uint64_t v54 = v3;
  int64_t v72 = 0;
  uint64_t v9 = v65 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v65 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v65 + 64);
  int64_t v62 = (unint64_t)(v10 + 63) >> 6;
  Swift::Int64 v61 = (uint64_t *)(v1 + 16);
  uint64_t v56 = v65;
  uint64_t v57 = v8;
  uint64_t v55 = v65 + 64;
  while (v12)
  {
    unint64_t v13 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v14 = v13 | (v72 << 6);
LABEL_14:
    uint64_t v15 = *(void *)(v6 + 56);
    NSString v16 = (void *)(*(void *)(v6 + 48) + 16 * v14);
    uint64_t v17 = v16[1];
    *(void *)&long long v67 = *v16;
    *((void *)&v67 + 1) = v17;
    sub_100009038(v15 + 32 * v14, (uint64_t)v68);
    swift_bridgeObjectRetain();
LABEL_33:
    sub_100009094((uint64_t)&v67, (uint64_t)&v69, &qword_100081CC8);
    uint64_t v21 = v70;
    if (!v70)
    {
      swift_bridgeObjectRelease();

      swift_release();
      return;
    }
    uint64_t v22 = v69;
    sub_1000090F8(&v71, &v67);
    if (swift_dynamicCast())
    {
      uint64_t v63 = v22;
      if (*(void *)(v65 + 16) && (uint64_t v23 = sub_100068668(0x6C6562614CLL, 0xE500000000000000), (v24 & 1) != 0))
      {
        sub_100009038(*(void *)(v65 + 56) + 32 * v23, (uint64_t)&v67);
        int v25 = swift_dynamicCast();
        uint64_t v26 = v65;
        if (!v25) {
          uint64_t v26 = 0;
        }
        uint64_t v64 = v26;
        if (v25) {
          uint64_t v27 = v66;
        }
        else {
          uint64_t v27 = 0;
        }
      }
      else
      {
        uint64_t v64 = 0;
        uint64_t v27 = 0;
      }
      if (*(void *)(v65 + 16) && (uint64_t v28 = sub_100068668(0xD000000000000010, 0x8000000100071C90), (v29 & 1) != 0))
      {
        sub_100009038(*(void *)(v65 + 56) + 32 * v28, (uint64_t)&v67);
      }
      else
      {
        long long v67 = 0u;
        v68[0] = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v68[0] + 1))
      {
        sub_100008F68((uint64_t)&v67);
LABEL_57:
        swift_bridgeObjectRelease();
        goto LABEL_58;
      }
      sub_10000772C(&qword_100081CD8);
      if (swift_dynamicCast()) {
        uint64_t v30 = v65;
      }
      else {
        uint64_t v30 = 0;
      }
      if (!v27 || !v30) {
        goto LABEL_57;
      }
      if (*(void *)(v30 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        NSString v31 = sub_10006F020();
        swift_bridgeObjectRelease();
        id v32 = [v31 lastPathComponent];

        uint64_t v33 = sub_10006F050();
        uint64_t v59 = v34;
        uint64_t v60 = v33;

        uint64_t v35 = v64;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v35 = v64;
        uint64_t v59 = v27;
        uint64_t v60 = v64;
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v65 = *v61;
      *Swift::Int64 v61 = 0x8000000000000000;
      uint64_t v37 = sub_100068668(v35, v27);
      uint64_t v39 = *(void *)(v65 + 16);
      BOOL v40 = (v38 & 1) == 0;
      Swift::Int v41 = v39 + v40;
      if (__OFADD__(v39, v40)) {
        goto LABEL_75;
      }
      unint64_t v42 = v37;
      char v43 = v38;
      sub_10000772C(&qword_100081CD0);
      if (sub_10006F6A0(isUniquelyReferenced_nonNull_native, v41))
      {
        uint64_t v44 = sub_100068668(v64, v27);
        if ((v43 & 1) != (v45 & 1)) {
          goto LABEL_78;
        }
        unint64_t v42 = v44;
      }
      if (v43)
      {
        uint64_t v46 = (uint64_t *)(*(void *)(v65 + 56) + (v42 << 6));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *uint64_t v46 = v64;
        v46[1] = v27;
        v46[2] = v60;
        v46[3] = v59;
        v46[4] = v63;
        v46[5] = v21;
        v46[6] = v58;
        v46[7] = v57;
      }
      else
      {
        *(void *)(v65 + 8 * (v42 >> 6) + 64) |= 1 << v42;
        uint64_t v47 = (uint64_t *)(*(void *)(v65 + 48) + 16 * v42);
        *uint64_t v47 = v64;
        v47[1] = v27;
        uint64_t v48 = (uint64_t *)(*(void *)(v65 + 56) + (v42 << 6));
        *uint64_t v48 = v64;
        v48[1] = v27;
        v48[2] = v60;
        v48[3] = v59;
        v48[4] = v63;
        v48[5] = v21;
        v48[6] = v58;
        v48[7] = v57;
        uint64_t v49 = *(void *)(v65 + 16);
        BOOL v50 = __OFADD__(v49, 1);
        uint64_t v51 = v49 + 1;
        if (v50) {
          goto LABEL_76;
        }
        *(void *)(v65 + 16) = v51;
        swift_bridgeObjectRetain();
      }
      uint64_t v9 = v55;
      uint64_t v6 = v56;
      *Swift::Int64 v61 = v65;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
    }
    else
    {
LABEL_58:
      swift_bridgeObjectRelease();
    }
  }
  int64_t v18 = v72 + 1;
  if (__OFADD__(v72, 1))
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if (v18 >= v62)
  {
LABEL_32:
    unint64_t v12 = 0;
    memset(v68, 0, sizeof(v68));
    long long v67 = 0u;
    goto LABEL_33;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v18);
  if (v19)
  {
LABEL_18:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v14 = __clz(__rbit64(v19)) + (v18 << 6);
    int64_t v72 = v18;
    goto LABEL_14;
  }
  int64_t v20 = v72 + 2;
  ++v72;
  if (v18 + 1 >= v62) {
    goto LABEL_32;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v20);
  if (v19) {
    goto LABEL_21;
  }
  int64_t v72 = v18 + 1;
  if (v18 + 2 >= v62) {
    goto LABEL_32;
  }
  unint64_t v19 = *(void *)(v9 + 8 * (v18 + 2));
  if (v19)
  {
    v18 += 2;
    goto LABEL_18;
  }
  int64_t v20 = v18 + 3;
  int64_t v72 = v18 + 2;
  if (v18 + 3 >= v62) {
    goto LABEL_32;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v20);
  if (v19)
  {
LABEL_21:
    int64_t v18 = v20;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v18 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v18 >= v62)
    {
      int64_t v72 = v62 - 1;
      goto LABEL_32;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v18);
    ++v20;
    if (v19) {
      goto LABEL_18;
    }
  }
LABEL_77:
  __break(1u);
LABEL_78:
  sub_10006F7C0();
  __break(1u);
}

id sub_100008B58()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = sub_10006F020();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithContentsOfFile:v1];

  return v2;
}

uint64_t sub_100008BCC()
{
  swift_bridgeObjectRelease();
  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for DaemonEnumerator()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for DaemonRecord(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for DaemonRecord()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DaemonRecord(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DaemonRecord(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for DaemonRecord(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for DaemonRecord(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DaemonRecord(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DaemonRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DaemonRecord()
{
  return &type metadata for DaemonRecord;
}

unint64_t sub_100008EDC()
{
  unint64_t result = qword_100081CB0;
  if (!qword_100081CB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100081CB0);
  }
  return result;
}

unint64_t sub_100008F1C()
{
  unint64_t result = qword_100081CB8;
  if (!qword_100081CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100081CB8);
  }
  return result;
}

uint64_t sub_100008F68(uint64_t a1)
{
  uint64_t v2 = sub_10000772C(&qword_100082450);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100008FC8(void *a1)
{
  id v2 = [a1 systemBuildNumber];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_10006F050();

  return v3;
}

uint64_t sub_100009038(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100009094(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000772C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

_OWORD *sub_1000090F8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unsigned char *storeEnumTagSinglePayload for DaemonEnumerator.EnumeratorError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000091D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DaemonEnumerator.EnumeratorError()
{
  return &type metadata for DaemonEnumerator.EnumeratorError;
}

unint64_t sub_100009210()
{
  unint64_t result = qword_100081CE0;
  if (!qword_100081CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100081CE0);
  }
  return result;
}

unint64_t StaticString._asString.getter(unint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    if (result) {
      return sub_10006F070();
    }
    __break(1u);
  }
  if (HIDWORD(result))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return sub_10006F070();
  }
  if (result >> 11 == 27) {
    goto LABEL_14;
  }
  if (WORD1(result) > 0x10u) {
    goto LABEL_11;
  }
  if ((result & 0xFFFFFF80) != 0 || result <= 0xFF) {
    return sub_10006F070();
  }
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t *NSBundle._current.unsafeMutableAddressor()
{
  if (qword_1000819D8 != -1) {
    swift_once();
  }
  return &static NSBundle._current;
}

id sub_1000093B8()
{
  _s2__CMa();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = [self bundleForClass:ObjCClassFromMetadata];
  static NSBundle._current = (uint64_t)result;
  return result;
}

id static NSBundle._current.getter()
{
  if (qword_1000819D8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static NSBundle._current;
  return v0;
}

uint64_t sub_10000946C()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t _s2__CMa()
{
  return self;
}

uint64_t sub_1000094A0(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_1000115E8();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1000094C8()
{
  sub_1000116F8();
  uint64_t v1 = _s23IndexingPreflightResultV4StepOMa(0);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v3 = _s23IndexingPreflightResultVMa(0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000095C8;
  uint64_t v5 = *(void *)(v0 + 16);
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v5, v1, v3, 0, 0, &unk_100081D90, v2, v1);
}

uint64_t sub_1000095C8()
{
  sub_1000114D4();
  sub_100011474();
  uint64_t v3 = v2;
  sub_1000114FC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1000114E0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1000115E8();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    sub_1000115DC();
    return v10();
  }
}

uint64_t sub_1000096C8()
{
  sub_1000114D4();
  swift_task_dealloc();
  sub_1000115DC();
  return v0();
}

uint64_t sub_100009724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  sub_10000772C(&qword_100081D98);
  v4[6] = swift_task_alloc();
  v4[7] = _s23IndexingPreflightResultV4StepOMa(0);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  uint64_t v5 = sub_10000772C(&qword_100081DA0);
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  uint64_t v6 = sub_10006E200();
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = _s23IndexingPreflightResultVMa(0);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  uint64_t v7 = sub_10006E160();
  v4[20] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[21] = v8;
  v4[22] = *(void *)(v8 + 64);
  v4[23] = swift_task_alloc();
  sub_10000772C(&qword_100081DA8);
  v4[24] = swift_task_alloc();
  return _swift_task_switch(sub_100009998, 0, 0);
}

uint64_t sub_100009998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v16 = v14[23];
  uint64_t v15 = v14[24];
  uint64_t v17 = v14[21];
  uint64_t v18 = v14[20];
  Swift::Int64 v61 = (void *)v14[5];
  uint64_t v62 = sub_10006F1A0();
  uint64_t v19 = sub_1000115AC();
  sub_100007770(v19, v20, v21, v22);
  sub_1000114F0();
  v23();
  uint64_t v24 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
  v63(v25 + ((v24 + 32) & ~v24), v16, v18);
  sub_10000AA30(v15, (uint64_t)&unk_100081DB8, v25);
  sub_10000ED80(v15, &qword_100081DA8);
  uint64_t v26 = sub_1000115AC();
  sub_100007770(v26, v27, v28, v62);
  char v29 = (void *)swift_allocObject();
  v29[2] = 0;
  v29[3] = 0;
  v29[4] = v61;
  id v30 = v61;
  sub_10000AA30(v15, (uint64_t)&unk_100081DC8, (uint64_t)v29);
  sub_10000ED80(v15, &qword_100081DA8);
  uint64_t v31 = sub_1000115AC();
  sub_100007770(v31, v32, v33, v62);
  sub_1000114F0();
  v34();
  uint64_t v35 = (v24 + 40) & ~v24;
  uint64_t v36 = (void *)swift_allocObject();
  v36[2] = 0;
  v36[3] = 0;
  v36[4] = v30;
  v63((uint64_t)v36 + v35, v16, v18);
  id v37 = v30;
  sub_10000AA30(v15, (uint64_t)&unk_100081DD8, (uint64_t)v36);
  sub_10000ED80(v15, &qword_100081DA8);
  uint64_t v38 = sub_1000115AC();
  sub_100007770(v38, v39, v40, v62);
  sub_1000114F0();
  v41();
  unint64_t v42 = (void *)swift_allocObject();
  v42[2] = 0;
  v42[3] = 0;
  v42[4] = v37;
  v63((uint64_t)v42 + v35, v16, v18);
  id v43 = v37;
  sub_10000AA30(v15, (uint64_t)&unk_100081DE8, (uint64_t)v42);
  sub_10000ED80(v15, &qword_100081DA8);
  sub_10006E1C0();
  uint64_t v44 = v14[19];
  uint64_t v45 = v14[15];
  uint64_t v46 = v14[16];
  uint64_t v48 = v14[13];
  uint64_t v47 = v14[14];
  sub_10006E070();
  sub_10000772C((uint64_t *)&unk_100081DF0);
  uint64_t v49 = sub_10006EFE0();
  BOOL v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32);
  v14[25] = v50;
  v14[26] = (v47 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v50(v44, v45, v48);
  *(void *)(v44 + *(int *)(v46 + 24)) = &_swiftEmptySetSingleton;
  *(void *)(v44 + *(int *)(v46 + 28)) = v49;
  sub_10000EE20();
  sub_10000772C(&qword_100081AA8);
  sub_10006F1B0();
  sub_10000ECE4();
  uint64_t v51 = (void *)swift_task_alloc();
  v14[27] = v51;
  *uint64_t v51 = v14;
  v51[1] = sub_100009E84;
  uint64_t v52 = sub_100011664();
  return dispatch thunk of AsyncIteratorProtocol.next()(v52, v53, v54, v55, v56, v57, v58, v59, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_100009E84()
{
  sub_1000114D4();
  sub_100011474();
  uint64_t v3 = v2;
  sub_1000114FC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1000114E0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 144);
    sub_10001162C();
    v8();
    sub_10000EE70(v7, (void (*)(void))_s23IndexingPreflightResultVMa);
  }
  sub_1000115E8();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_100009F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_100011704();
  uint64_t v15 = v14[6];
  if (sub_100007800(v15, 1, v14[7]) == 1)
  {
    uint64_t v16 = v14[19];
    uint64_t v62 = v14[15];
    uint64_t v63 = v14[9];
    uint64_t v64 = v14[8];
    (*(void (**)(void, void))(v14[11] + 8))(v14[12], v14[10]);
    sub_10000ED80(v15, &qword_100081D98);
    sub_10000EDD0();
    sub_10000EE70(v16, (void (*)(void))_s23IndexingPreflightResultVMa);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001151C();
    sub_100011590();
    return v18(v17, v18, v19, v20, v21, v22, v23, v24, v62, v63, v64, a12, a13, a14);
  }
  sub_10000EDD0();
  sub_10000EE20();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v36 = *(void *)v14[8];
      uint64_t v37 = *(void *)(v14[18] + *(int *)(v14[16] + 24));
      if ((v37 & 0xC000000000000001) != 0)
      {
        if (!sub_10006F580()) {
          goto LABEL_9;
        }
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        JUMPOUT(0x10000A3E8);
      }
      if (*(void *)(v37 + 16)) {
        goto LABEL_18;
      }
LABEL_9:
      uint64_t v38 = v14[17];
      uint64_t v39 = v14[18];
      uint64_t v40 = v14[16];
      sub_1000114F0();
      v41();
      sub_10006E0A0();
      sub_100011508();
      uint64_t v42 = sub_100011744();
      v43(v42);
      uint64_t v44 = *(void *)(v39 + *(int *)(v40 + 28));
      *(void *)(v38 + *(int *)(v40 + 24)) = v36;
      *(void *)(v38 + *(int *)(v40 + 28)) = v44;
LABEL_12:
      swift_bridgeObjectRetain();
LABEL_14:
      uint64_t v52 = v14[18];
      sub_10000EE70(v14[9], (void (*)(void))_s23IndexingPreflightResultV4StepOMa);
      sub_10000EE70(v52, (void (*)(void))_s23IndexingPreflightResultVMa);
      sub_10000EDD0();
      sub_10000ECE4();
      uint64_t v53 = (void *)swift_task_alloc();
      v14[27] = v53;
      *uint64_t v53 = v14;
      v53[1] = sub_100009E84;
      sub_100011664();
      sub_100011590();
      return dispatch thunk of AsyncIteratorProtocol.next()(v54, v55, v56, v57, v58, v59, v60, v61, a9, a10, a11, a12, a13, a14);
    case 2u:
      uint64_t v45 = v14[18];
      uint64_t v46 = v14[16];
      if (*(void *)(*(void *)(v45 + *(int *)(v46 + 28)) + 16)) {
        goto LABEL_19;
      }
      uint64_t v47 = v14[17];
      uint64_t v48 = *(void *)v14[8];
      sub_1000114F0();
      v49();
      sub_10006E0A0();
      sub_100011508();
      uint64_t v50 = sub_100011744();
      v51(v50);
      *(void *)(v47 + *(int *)(v46 + 24)) = *(void *)(v45 + *(int *)(v46 + 24));
      *(void *)(v47 + *(int *)(v46 + 28)) = v48;
      goto LABEL_12;
    case 3u:
      sub_10000EE20();
      goto LABEL_14;
    default:
      uint64_t v26 = (void (*)(uint64_t, uint64_t, uint64_t))v14[25];
      uint64_t v27 = v14[17];
      uint64_t v28 = v14[18];
      char v29 = (int *)v14[16];
      uint64_t v30 = v14[13];
      uint64_t v31 = v14[8];
      uint64_t v32 = v31 + *(int *)(sub_10000772C(&qword_100081E08) + 48);
      v26(v27, v31, v30);
      uint64_t v33 = v27 + v29[5];
      sub_10006E0A0();
      sub_100011508();
      (*(void (**)(uint64_t, uint64_t))(v34 + 32))(v33, v32);
      uint64_t v35 = *(void *)(v28 + v29[7]);
      *(void *)(v27 + v29[6]) = *(void *)(v28 + v29[6]);
      *(void *)(v27 + v29[7]) = v35;
      swift_bridgeObjectRetain();
      goto LABEL_12;
  }
}

uint64_t sub_10000A3F8()
{
  sub_10000EE70(*(void *)(v0 + 152), (void (*)(void))_s23IndexingPreflightResultVMa);
  sub_100011770();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000115DC();
  return v1();
}

uint64_t sub_10000A4F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  uint64_t v5 = sub_10006E0A0();
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  uint64_t v6 = sub_10006E200();
  v4[7] = v6;
  v4[8] = *(void *)(v6 - 8);
  v4[9] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v4[10] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_10000A648;
  return sub_100017428();
}

uint64_t sub_10000A648()
{
  sub_1000114D4();
  sub_100011474();
  uint64_t v3 = v2;
  sub_1000114FC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1000114E0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1000115E8();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v3 + 96) = v10;
    *uint64_t v10 = v5;
    v10[1] = sub_10000A784;
    return sub_100018500();
  }
}

uint64_t sub_10000A784()
{
  sub_1000114D4();
  sub_100011474();
  sub_1000114FC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1000114E0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 104) = v0;
  swift_task_dealloc();
  sub_1000115E8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10000A860()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[2];
  uint64_t v8 = v7 + *(int *)(sub_10000772C(&qword_100081E08) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v7, v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v8, v4, v5);
  _s23IndexingPreflightResultV4StepOMa(0);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001151C();
  return v9();
}

uint64_t sub_10000A950()
{
  sub_1000114D4();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000115DC();
  return v0();
}

uint64_t sub_10000A9B8()
{
  sub_1000114D4();
  sub_10001162C();
  v0();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000115DC();
  return v1();
}

uint64_t sub_10000AA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_10000772C(&qword_100081DA8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001039C(a1, (uint64_t)v8);
  uint64_t v9 = sub_10006F1A0();
  if (sub_100007800((uint64_t)v8, 1, v9) == 1)
  {
    sub_10000ED80((uint64_t)v8, &qword_100081DA8);
  }
  else
  {
    sub_10006F190();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v10 = sub_10006F150();
    uint64_t v12 = v11;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  uint64_t v13 = *v4;
  _s23IndexingPreflightResultV4StepOMa(0);
  unint64_t v14 = (void *)(v12 | v10);
  if (v12 | v10)
  {
    v17[0] = 0;
    v17[1] = 0;
    unint64_t v14 = v17;
    v17[2] = v10;
    v17[3] = v12;
  }
  v16[1] = 1;
  v16[2] = v14;
  v16[3] = v13;
  swift_task_create();
  return swift_release();
}

uint64_t sub_10000ABE0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10000AC74;
  return sub_10000ADCC();
}

uint64_t sub_10000AC74()
{
  sub_1000114D4();
  sub_100011474();
  uint64_t v2 = *v1;
  sub_1000114E0();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (v0)
  {
    sub_1000115DC();
    return v4();
  }
  else
  {
    sub_1000115E8();
    return _swift_task_switch(v6, v7, v8);
  }
}

uint64_t sub_10000AD6C()
{
  sub_1000114D4();
  sub_100011790();
  swift_storeEnumTagMultiPayload();
  sub_10001151C();
  return v0();
}

uint64_t sub_10000ADCC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10000AE8C;
  return withThrowingDiscardingTaskGroup<A>(returning:isolation:body:)();
}

uint64_t sub_10000AE8C()
{
  sub_1000114D4();
  sub_100011474();
  sub_1000114FC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1000114E0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 24) = v0;
  swift_task_dealloc();
  sub_1000115E8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10000AF68()
{
  sub_10001151C();
  return v0();
}

uint64_t sub_10000AF80()
{
  sub_1000115DC();
  return v0();
}

uint64_t sub_10000AF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_10000B03C;
  return sub_10000B174(a5);
}

uint64_t sub_10000B03C()
{
  sub_1000114D4();
  sub_100011474();
  sub_1000114FC();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 32) = v3;
  swift_task_dealloc();
  sub_1000115E8();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_10000B10C()
{
  sub_1000114D4();
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  sub_100011790();
  swift_storeEnumTagMultiPayload();
  sub_10001151C();
  return v1();
}

uint64_t sub_10000B174(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_10006E2D0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  uint64_t v3 = sub_10006E2F0();
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  uint64_t v4 = sub_10006E0F0();
  v1[13] = v4;
  v1[14] = *(void *)(v4 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  uint64_t v5 = sub_10006E360();
  v1[17] = v5;
  v1[18] = *(void *)(v5 - 8);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  uint64_t v6 = sub_10006E160();
  v1[22] = v6;
  v1[23] = *(void *)(v6 - 8);
  v1[24] = swift_task_alloc();
  return _swift_task_switch(sub_10000B408, 0, 0);
}

uint64_t sub_10000B408()
{
  v136 = v0;
  sub_1000114F0();
  v1();
  uint64_t v2 = sub_100011764();
  int v4 = v3(v2);
  uint64_t v126 = v0;
  if (v4 == enum case for ToolKitIndexingReason.Changeset.partial(_:))
  {
    uint64_t v5 = (uint64_t *)v0[24];
    (*(void (**)(uint64_t *, void))(v0[23] + 96))(v5, v0[22]);
    uint64_t v6 = *v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!*(void *)(v6 + 16))
    {
      swift_bridgeObjectRelease();
      goto LABEL_111;
    }
    sub_10006E280();
    uint64_t v7 = sub_10006E350();
    os_log_type_t v8 = sub_10006F2F0();
    if (os_log_type_enabled(v7, v8))
    {
      *(_WORD *)sub_100011554() = 0;
      sub_10001167C((void *)&_mh_execute_header, v7, v9, "Getting actions");
      sub_10001153C();
    }

    sub_100011758();
    uint64_t v129 = v10;
    sub_100011784();
    v11();
    sub_10006E0C0();
    sub_10006E2E0();
    sub_10006E2B0();
    uint64_t v12 = sub_10006E2E0();
    os_signpost_type_t v13 = sub_10006F3D0();
    uint64_t v134 = v6;
    if (sub_10006F4B0())
    {
      unint64_t v14 = *(void (**)(void))(v0[4] + 16);
      sub_1000114F0();
      v14();
      uint64_t v15 = (uint8_t *)sub_100011554();
      *(_WORD *)uint64_t v15 = 0;
      os_signpost_id_t v16 = sub_10006E2C0();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v12, v13, v16, "FetchingActions", "Fetching actions for a given set of bundles", v15, 2u);
      sub_100011784();
      v17();
      sub_10001153C();

      uint64_t v18 = v14;
    }
    else
    {
      uint64_t v31 = v0[4];

      uint64_t v18 = *(void (**)(void))(v31 + 16);
    }
    uint64_t v32 = v0[10];
    uint64_t v34 = v0[8];
    uint64_t v33 = v0[9];
    ((void (*)(void, void, void))v18)(v0[6], v0[5], v0[3]);
    sub_10006E330();
    swift_allocObject();
    sub_1000115BC();
    sub_1000114F0();
    v35();
    sub_10006E100();
    sub_100011784();
    v36();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    id v123 = [self sharedProvider];
    id v132 = [objc_allocWithZone((Class)WFIntentActionProvider) initWithOptions:1];
    if ((ToolKitIndexingReason.Changeset.isExpensive.getter() & 1) == 0)
    {
      uint64_t v39 = (char *)v134;
      if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0) {
        goto LABEL_125;
      }
      goto LABEL_23;
    }
    sub_10006E280();
    uint64_t v37 = sub_10006E350();
    os_log_type_t v38 = sub_10006F310();
    uint64_t v39 = (char *)v134;
    if (os_log_type_enabled(v37, v38))
    {
      *(_WORD *)sub_100011554() = 0;
      sub_10001167C((void *)&_mh_execute_header, v37, v40, "indexing: the changeset is expensive, filling Link provider in full");
      sub_10001153C();
    }

    uint64_t v41 = sub_100011758();
    v129(v41);
    id v42 = [v123 createAllAvailableActions];
    if (v42)
    {
      id v43 = v42;
      sub_10001028C(0, &qword_100081E28);
      sub_10001014C();
      sub_100011764();
      uint64_t v44 = (void *)sub_10006F1C0();
    }
    else
    {
      uint64_t v44 = &_swiftEmptySetSingleton;
    }
    swift_bridgeObjectRetain();
    Swift::Int v46 = sub_10000F428((uint64_t)v44, v134);
LABEL_31:
    uint64_t v122 = 0;
    sub_10000DB48(v46);
    uint64_t v55 = v39 + 56;
    sub_1000115F4();
    uint64_t v58 = v57 & v56;
    int64_t v60 = (unint64_t)(63 - v59) >> 6;
    swift_bridgeObjectRetain();
    int64_t v61 = 0;
    if (v58)
    {
LABEL_32:
      v58 &= v58 - 1;
      uint64_t v62 = v132;
      goto LABEL_44;
    }
    while (1)
    {
      BOOL v63 = __OFADD__(v61++, 1);
      if (v63) {
        goto LABEL_120;
      }
      uint64_t v62 = v132;
      if (v61 >= v60) {
        break;
      }
      if (!*(void *)&v55[8 * v61])
      {
        int64_t v64 = v61 + 1;
        if (v61 + 1 >= v60) {
          break;
        }
        if (!*(void *)&v55[8 * v64])
        {
          int64_t v64 = v61 + 2;
          if (v61 + 2 >= v60) {
            break;
          }
          if (!*(void *)&v55[8 * v64])
          {
            int64_t v64 = v61 + 3;
            if (v61 + 3 >= v60) {
              break;
            }
            if (!*(void *)&v55[8 * v64])
            {
              while (1)
              {
                int64_t v61 = v64 + 1;
                if (__OFADD__(v64, 1)) {
                  goto LABEL_122;
                }
                if (v61 >= v60) {
                  goto LABEL_50;
                }
                ++v64;
                if (*(void *)&v55[8 * v61]) {
                  goto LABEL_43;
                }
              }
            }
          }
        }
        int64_t v61 = v64;
      }
LABEL_43:
      sub_100011720();
      uint64_t v58 = v66 & v65;
LABEL_44:
      swift_bridgeObjectRetain();
      NSString v67 = sub_10006F020();
      swift_bridgeObjectRelease();
      uint64_t v39 = (char *)objc_msgSend(v62, "createActionsForBundleIdentifier:", v67, v122);

      sub_10001028C(0, &qword_100081E28);
      sub_10001014C();
      unint64_t v68 = sub_10006F1C0();

      sub_10000DB48(v68);
      if (v58) {
        goto LABEL_32;
      }
    }
LABEL_50:
    swift_release();
    id v69 = [v132 actionIdentifiersRequiringBundledActionProviderMappedByApp];
    sub_10000772C(&qword_100081E38);
    uint64_t v70 = sub_10006EFC0();

    uint64_t v71 = sub_100019A8C(v70);
    uint64_t v72 = sub_10000F69C(v71, v134);
    swift_bridgeObjectRelease();
    if (!*(void *)(v72 + 16))
    {
      swift_release();
      goto LABEL_110;
    }
    id v124 = [objc_allocWithZone((Class)WFBundledActionProvider) init];
    uint64_t v127 = v72 + 56;
    sub_1000115F4();
    uint64_t v76 = v75 & v74;
    int64_t v128 = (unint64_t)(63 - v77) >> 6;
    Swift::String v78 = &selRef_parameterKey;
    if (v76)
    {
LABEL_52:
      uint64_t v130 = (v76 - 1) & v76;
      uint64_t v131 = v73;
      goto LABEL_63;
    }
    while (1)
    {
      BOOL v63 = __OFADD__(v73, 1);
      int64_t v79 = v73 + 1;
      if (v63) {
        goto LABEL_121;
      }
      if (v79 >= v128)
      {
LABEL_109:
        swift_release();

        uint64_t v62 = v124;
LABEL_110:

        uint64_t v0 = v126;
        sub_10000E1BC();
        uint64_t v117 = sub_100011758();
        v118(v117);
LABEL_111:
        sub_10001156C();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        char v119 = (uint64_t (*)(void *))v0[1];
        return v119(&_swiftEmptySetSingleton);
      }
      if (!*(void *)(v127 + 8 * v79))
      {
        if (v79 + 1 >= v128) {
          goto LABEL_109;
        }
        if (!*(void *)(v127 + 8 * (v79 + 1)))
        {
          if (v79 + 2 >= v128) {
            goto LABEL_109;
          }
          if (!*(void *)(v127 + 8 * (v79 + 2)))
          {
            int64_t v80 = v79 + 3;
            if (v79 + 3 >= v128) {
              goto LABEL_109;
            }
            if (!*(void *)(v127 + 8 * v80))
            {
              do
              {
                int64_t v116 = v80 + 1;
                if (__OFADD__(v80, 1)) {
                  goto LABEL_124;
                }
                if (v116 >= v128) {
                  goto LABEL_109;
                }
                ++v80;
              }
              while (!*(void *)(v127 + 8 * v116));
            }
          }
        }
      }
      sub_100011720();
      uint64_t v130 = v82 & v81;
      uint64_t v131 = v83;
LABEL_63:
      swift_bridgeObjectRetain();
      id v84 = [v62 v78[102]];
      uint64_t v85 = sub_10006EFC0();

      if (*(void *)(v85 + 16) && (uint64_t v86 = sub_100011764(), v88 = sub_100068668(v86, v87), (v89 & 1) != 0))
      {
        uint64_t v90 = *(void *)(*(void *)(v85 + 56) + 8 * v88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v39 = *(char **)(v90 + 16);
        if (v39)
        {
          v135[0] = &_swiftEmptyArrayStorage;
          uint64_t v134 = v90;
          sub_10006F660();
          uint64_t v91 = sub_10001020C(v90);
          int v93 = v92;
          v94 = 0;
          uint64_t v95 = v90 + 64;
          char v96 = *(unsigned char *)(v90 + 32);
          int v133 = v92;
          uint64_t v125 = v90 + 88;
          while (1)
          {
            if (v91 < 0 || v91 >= 1 << v96)
            {
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              if (sub_10006F6F0())
              {
                sub_10004CB88((unint64_t)&_swiftEmptyArrayStorage);
                uint64_t v45 = v120;
LABEL_24:
                Swift::Int v46 = sub_10000DFA4((uint64_t)v45, (uint64_t)v39, v123);
                goto LABEL_31;
              }
LABEL_23:
              uint64_t v45 = &_swiftEmptySetSingleton;
              goto LABEL_24;
            }
            unint64_t v97 = (unint64_t)v91 >> 6;
            if ((*(void *)(v95 + 8 * ((unint64_t)v91 >> 6)) & (1 << v91)) == 0) {
              goto LABEL_115;
            }
            if (*(_DWORD *)(v90 + 36) != v93) {
              goto LABEL_116;
            }
            v98 = v39;
            id v99 = (uint64_t *)(*(void *)(v90 + 56) + 16 * v91);
            uint64_t v100 = *v99;
            uint64_t v101 = v99[1];
            id v102 = objc_allocWithZone((Class)WFActionRequest);
            swift_bridgeObjectRetain();
            uint64_t v39 = (char *)sub_10000E640(v100, v101, 0);
            sub_10006F640();
            sub_10006F670();
            sub_10006F680();
            sub_10006F650();
            uint64_t v90 = v134;
            char v96 = *(unsigned char *)(v134 + 32);
            unint64_t v103 = 1 << v96;
            if (v91 >= 1 << v96) {
              goto LABEL_117;
            }
            uint64_t v104 = *(void *)(v95 + 8 * v97);
            if ((v104 & (1 << v91)) == 0) {
              goto LABEL_118;
            }
            if (*(_DWORD *)(v134 + 36) != v93) {
              goto LABEL_119;
            }
            uint64_t v39 = v98;
            unint64_t v105 = v104 & (-2 << (v91 & 0x3F));
            if (v105)
            {
              unint64_t v103 = __clz(__rbit64(v105)) | v91 & 0xFFFFFFFFFFFFFFC0;
            }
            else
            {
              unint64_t v106 = v97 + 1;
              if (v97 + 1 < (v103 + 63) >> 6)
              {
                unint64_t v107 = *(void *)(v95 + 8 * v106);
                if (!v107)
                {
                  unint64_t v108 = (v103 + 63) >> 6;
                  unint64_t v106 = v97 + 2;
                  if (v97 + 2 >= v108) {
                    goto LABEL_79;
                  }
                  unint64_t v107 = *(void *)(v95 + 8 * v106);
                  if (!v107)
                  {
                    while (v97 + 3 < v108)
                    {
                      unint64_t v107 = *(void *)(v125 + 8 * v97++);
                      if (v107)
                      {
                        unint64_t v106 = v97 + 2;
                        goto LABEL_78;
                      }
                    }
                    goto LABEL_79;
                  }
                }
LABEL_78:
                unint64_t v103 = __clz(__rbit64(v107)) + (v106 << 6);
              }
            }
LABEL_79:
            ++v94;
            int v93 = v133;
            uint64_t v91 = v103;
            if (v94 == v98)
            {
              id v109 = v135[0];
              swift_bridgeObjectRelease();
              uint64_t v62 = v132;
              Swift::String v78 = &selRef_parameterKey;
              goto LABEL_88;
            }
          }
        }
        swift_bridgeObjectRelease();
        id v109 = &_swiftEmptyArrayStorage;
LABEL_88:
        sub_10001028C(0, &qword_100081E40);
        Class isa = sub_10006F0E0().super.isa;
        [v124 createActionsForRequests:isa];

        if ((unint64_t)v109 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v111 = sub_10006F6F0();
          swift_bridgeObjectRelease();
          if (v111)
          {
LABEL_90:
            if (v111 < 1) {
              goto LABEL_123;
            }
            for (uint64_t i = 0; i != v111; ++i)
            {
              if (((unint64_t)v109 & 0xC000000000000001) != 0) {
                id v113 = (id)sub_10006F620();
              }
              else {
                id v113 = *((id *)v109 + i + 4);
              }
              v114 = v113;
              id v115 = objc_msgSend(v113, "result", v122);
              if (v115)
              {
                uint64_t v39 = (char *)v115;
                sub_10004D2D4(v135, v39);
              }
              else
              {
              }
            }
            Swift::String v78 = &selRef_parameterKey;
          }
        }
        else
        {
          uint64_t v111 = *(void *)(((unint64_t)v109 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v111) {
            goto LABEL_90;
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v76 = v130;
      uint64_t v73 = v131;
      if (v130) {
        goto LABEL_52;
      }
    }
  }
  if (v4 != enum case for ToolKitIndexingReason.Changeset.full(_:))
  {
    if (v4 != enum case for ToolKitIndexingReason.Changeset.none(_:))
    {
      sub_10001162C();
      v30();
    }
    goto LABEL_111;
  }
  sub_10006E280();
  uint64_t v19 = sub_10006E350();
  os_log_type_t v20 = sub_10006F2F0();
  if (os_log_type_enabled(v19, v20))
  {
    *(_WORD *)sub_100011554() = 0;
    sub_10001167C((void *)&_mh_execute_header, v19, v21, "Filling registry");
    sub_10001153C();
  }

  sub_100011758();
  sub_100011784();
  v22();
  sub_10006E0C0();
  sub_10006E2E0();
  sub_10006E2B0();
  uint64_t v23 = sub_10006E2E0();
  os_signpost_type_t v24 = sub_10006F3D0();
  if (sub_10006F4B0())
  {
    uint64_t v25 = *(void (**)(void))(v0[4] + 16);
    sub_1000114F0();
    v25();
    uint64_t v26 = (uint8_t *)sub_100011554();
    *(_WORD *)uint64_t v26 = 0;
    os_signpost_id_t v27 = sub_10006E2C0();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v23, v24, v27, "RegistryFill", "Filling the action registry prior to indexing", v26, 2u);
    sub_100011654();
    v28();
    sub_10001153C();

    char v29 = v25;
  }
  else
  {
    uint64_t v47 = v0[4];

    char v29 = *(void (**)(void))(v47 + 16);
  }
  uint64_t v48 = v126[7];
  uint64_t v49 = v126[3];
  uint64_t v50 = v126[4];
  ((void (*)(void, uint64_t, uint64_t))v29)(v126[6], v48, v49);
  sub_10006E330();
  swift_allocObject();
  sub_1000115BC();
  sub_1000114F0();
  v51();
  sub_10006E100();
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  uint64_t v52 = sub_100011698();
  v53(v52);
  v126[25] = [self toolKitRegistry];
  uint64_t v54 = (void *)swift_task_alloc();
  v126[26] = v54;
  void *v54 = v126;
  v54[1] = sub_10000C390;
  return WFActionRegistry.fillAndWait()();
}

uint64_t sub_10000C390()
{
  sub_1000114D4();
  sub_100011474();
  uint64_t v1 = *v0;
  sub_1000114E0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1000115E8();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10000C458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_100011704();
  uint64_t v15 = *(void **)(v14 + 200);
  id v16 = [v15 actions];
  sub_10001028C(0, &qword_100081E28);
  sub_10001014C();
  uint64_t v31 = sub_10006F1C0();

  sub_10000E1BC();
  sub_100011654();
  v17();
  sub_10001156C();
  uint64_t v29 = v19;
  uint64_t v30 = v18;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100011590();
  return v22(v20, v21, v22, v23, v24, v25, v26, v27, v29, v30, v31, a12, a13, a14);
}

uint64_t sub_10000C59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return _swift_task_switch(sub_10000C5C0, 0, 0);
}

uint64_t sub_10000C5C0()
{
  sub_1000116F8();
  **(void **)(v0 + 16) = sub_10000C64C(*(void *)(v0 + 32));
  sub_100011790();
  swift_storeEnumTagMultiPayload();
  sub_10001151C();
  return v1();
}

uint64_t sub_10000C64C(uint64_t a1)
{
  uint64_t v83 = a1;
  uint64_t v1 = sub_10006E160();
  uint64_t v86 = *(void (***)(void, void, void))(v1 - 8);
  unint64_t v87 = v1;
  __chkstk_darwin(v1);
  id v84 = (uint64_t *)((char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v79 = sub_10006E2D0();
  uint64_t v3 = *(void *)(v79 - 8);
  uint64_t v4 = __chkstk_darwin(v79);
  uint64_t v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  os_log_type_t v8 = (char *)&v75 - v7;
  uint64_t v9 = sub_10006E2F0();
  uint64_t v81 = *(void *)(v9 - 8);
  uint64_t v82 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  int64_t v80 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  os_signpost_type_t v13 = (char *)&v75 - v12;
  uint64_t v14 = sub_10006E0F0();
  uint64_t v77 = *(void *)(v14 - 8);
  uint64_t v78 = v14;
  __chkstk_darwin(v14);
  id v16 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006E0C0();
  sub_10006E2E0();
  sub_10006E2B0();
  uint64_t v17 = sub_10006E2E0();
  os_signpost_type_t v18 = sub_10006F3D0();
  char v19 = sub_10006F4B0();
  uint64_t v85 = v16;
  if (v19)
  {
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v76 = v8;
    uint64_t v21 = v6;
    uint64_t v22 = v6;
    uint64_t v23 = v79;
    v20(v22, v8, v79);
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    os_signpost_id_t v25 = sub_10006E2C0();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v17, v18, v25, "SampleInvocationFetch", "Fetching sample invocations prior to indexing", v24, 2u);
    uint64_t v26 = v3;
    os_log_type_t v8 = v76;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v21, v23);
    id v16 = v85;
    swift_slowDealloc();

    uint64_t v27 = v23;
    uint64_t v6 = v21;
  }
  else
  {

    uint64_t v26 = v3;
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v27 = v79;
  }
  v20(v6, v8, v27);
  sub_10006E330();
  swift_allocObject();
  sub_10006E320();
  uint64_t v28 = v81;
  uint64_t v29 = v82;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v80, v13, v82);
  sub_10006E100();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v27);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v29);
  uint64_t v31 = v86;
  unint64_t v30 = v87;
  uint64_t v32 = v84;
  ((void (**)(uint64_t *, uint64_t, unint64_t))v86)[2](v84, v83, v87);
  int v33 = ((uint64_t (*)(uint64_t *, unint64_t))v31[11])(v32, v30);
  if (v33 == enum case for ToolKitIndexingReason.Changeset.partial(_:))
  {
    ((void (*)(uint64_t *, unint64_t))v31[12])(v32, v30);
    uint64_t v34 = *v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v35 = sub_10004F234(v34);
    swift_bridgeObjectRelease();
  }
  else if (v33 == enum case for ToolKitIndexingReason.Changeset.full(_:))
  {
    id v36 = [self sharedProvider];
    id v37 = [v36 metadataProvider];

    id v88 = 0;
    id v38 = [v37 bundlesWithError:&v88];
    id v39 = v88;
    if (!v38)
    {
      uint64_t v44 = v88;
      sub_10006DDC0();

      swift_willThrow();
LABEL_34:
      sub_10000E1BC();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v16, v78);
      return (uint64_t)v44;
    }
    uint64_t v40 = v38;
    uint64_t v35 = (uint64_t *)sub_10006F0F0();
    id v41 = v39;
  }
  else
  {
    if (v33 != enum case for ToolKitIndexingReason.Changeset.none(_:)) {
      ((void (*)(uint64_t *, unint64_t))v31[1])(v32, v30);
    }
    uint64_t v35 = (uint64_t *)&_swiftEmptyArrayStorage;
  }
  uint64_t v42 = v35[2];
  id v84 = v35;
  if (!v42)
  {
    uint64_t v44 = &_swiftEmptyDictionarySingleton;
LABEL_31:
    swift_bridgeObjectRelease();
    uint64_t v72 = v85;
    sub_10000E1BC();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v72, v78);
    return (uint64_t)v44;
  }
  uint64_t v86 = (void (**)(void, void, void))self;
  id v43 = v35 + 5;
  uint64_t v44 = &_swiftEmptyDictionarySingleton;
  while (1)
  {
    uint64_t v46 = *(v43 - 1);
    uint64_t v45 = *v43;
    swift_bridgeObjectRetain();
    id v47 = [v86 sharedProvider];
    NSString v48 = sub_10006F020();
    id v88 = 0;
    id v49 = [v47 examplePhrasesForBundleIdentifier:v48 useCache:1 error:&v88];

    id v50 = v88;
    if (!v49)
    {
      id v73 = v88;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10006DDC0();

      swift_willThrow();
      id v16 = v85;
      goto LABEL_34;
    }
    sub_10001028C(0, &qword_100081E10);
    unint64_t v51 = sub_10006F0F0();
    id v52 = v50;

    if (v51 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_10006F6F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v53 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v53 >= 1) {
      break;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v43 += 2;
    if (!--v42) {
      goto LABEL_31;
    }
  }
  unint64_t v87 = v51;
  uint64_t v54 = v42;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v88 = v44;
  uint64_t v56 = v46;
  uint64_t v57 = sub_100068668(v46, v45);
  uint64_t v59 = v44[2];
  BOOL v60 = (v58 & 1) == 0;
  Swift::Int v61 = v59 + v60;
  if (__OFADD__(v59, v60))
  {
    __break(1u);
LABEL_37:
    __break(1u);
  }
  unint64_t v62 = v57;
  char v63 = v58;
  sub_10000772C(&qword_100081E18);
  BOOL v64 = sub_10006F6A0(isUniquelyReferenced_nonNull_native, v61);
  uint64_t v42 = v54;
  if (!v64)
  {
LABEL_22:
    uint64_t v44 = v88;
    if (v63)
    {
      uint64_t v67 = *((void *)v88 + 7);
      swift_bridgeObjectRelease();
      *(void *)(v67 + 8 * v62) = v87;
    }
    else
    {
      *((void *)v88 + (v62 >> 6) + 8) |= 1 << v62;
      unint64_t v68 = (uint64_t *)(v44[6] + 16 * v62);
      *unint64_t v68 = v56;
      v68[1] = v45;
      *(void *)(v44[7] + 8 * v62) = v87;
      uint64_t v69 = v44[2];
      BOOL v70 = __OFADD__(v69, 1);
      uint64_t v71 = v69 + 1;
      if (v70) {
        goto LABEL_37;
      }
      v44[2] = v71;
      swift_bridgeObjectRetain();
    }
    goto LABEL_27;
  }
  uint64_t v65 = sub_100068668(v56, v45);
  if ((v63 & 1) == (v66 & 1))
  {
    unint64_t v62 = v65;
    goto LABEL_22;
  }
  uint64_t result = sub_10006F7C0();
  __break(1u);
  return result;
}

uint64_t sub_10000CF38(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  sub_10000772C(&qword_100081DA8);
  *(void *)(v2 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_10000CFCC, 0, 0);
}

uint64_t sub_10000CFCC()
{
  sub_1000114D4();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_10006F1A0();
  sub_100007770(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  sub_10000D4A4(v1, (uint64_t)&unk_100081ED8, v3);
  sub_10000ED80(v1, &qword_100081DA8);
  swift_task_dealloc();
  sub_10001151C();
  return v4();
}

uint64_t sub_10000D08C()
{
  uint64_t v1 = sub_10006E2D0();
  v0[2] = v1;
  v0[3] = *(void *)(v1 - 8);
  v0[4] = swift_task_alloc();
  v0[5] = swift_task_alloc();
  uint64_t v2 = sub_10006E2F0();
  v0[6] = v2;
  v0[7] = *(void *)(v2 - 8);
  v0[8] = swift_task_alloc();
  v0[9] = swift_task_alloc();
  uint64_t v3 = sub_10006E0F0();
  v0[10] = v3;
  v0[11] = *(void *)(v3 - 8);
  v0[12] = swift_task_alloc();
  return _swift_task_switch(sub_10000D220, 0, 0);
}

uint64_t sub_10000D220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_100011704();
  sub_10006E0C0();
  sub_10006E2E0();
  sub_10006E2B0();
  uint64_t v15 = sub_10006E2E0();
  os_signpost_type_t v16 = sub_10006F3D0();
  if (sub_10006F4B0())
  {
    uint64_t v17 = *(void (**)(void))(v14[3] + 16);
    sub_1000114F0();
    v17();
    os_signpost_type_t v18 = (uint8_t *)sub_100011554();
    *(_WORD *)os_signpost_type_t v18 = 0;
    os_signpost_id_t v19 = sub_10006E2C0();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, v16, v19, "DaemonEnumerator", "Enumerating daemons on system prior to indexing", v18, 2u);
    sub_100011654();
    v20();
    sub_10001153C();

    uint64_t v21 = v17;
  }
  else
  {
    uint64_t v22 = v14[3];

    uint64_t v21 = *(void (**)(void))(v22 + 16);
  }
  uint64_t v41 = v14[12];
  uint64_t v23 = v14[5];
  uint64_t v25 = v14[2];
  uint64_t v24 = v14[3];
  ((void (*)(void, uint64_t, uint64_t))v21)(v14[4], v23, v25);
  sub_10006E330();
  swift_allocObject();
  sub_1000115BC();
  sub_1000114F0();
  v26();
  sub_10006E100();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  uint64_t v27 = sub_100011698();
  v28(v27);
  if (qword_1000819D0 != -1) {
    swift_once();
  }
  uint64_t v30 = v14[11];
  uint64_t v29 = v14[12];
  uint64_t v31 = v14[10];
  sub_10000838C();
  sub_10000E1BC();
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000115DC();
  sub_100011590();
  return v33(v32, v33, v34, v35, v36, v37, v38, v39, a9, v41, a11, a12, a13, a14);
}

uint64_t sub_10000D4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_10000772C(&qword_100081DA8);
  __chkstk_darwin();
  os_log_type_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001039C(a1, (uint64_t)v8);
  uint64_t v9 = sub_10006F1A0();
  if (sub_100007800((uint64_t)v8, 1, v9) == 1)
  {
    sub_10000ED80((uint64_t)v8, &qword_100081DA8);
  }
  else
  {
    sub_10006F190();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v10 = sub_10006F150();
    uint64_t v12 = v11;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  uint64_t v13 = *v4;
  uint64_t v14 = (void *)(v12 | v10);
  if (v12 | v10)
  {
    v17[0] = 0;
    v17[1] = 0;
    uint64_t v14 = v17;
    v17[2] = v10;
    v17[3] = v12;
  }
  v16[1] = 1;
  v16[2] = v14;
  v16[3] = v13;
  swift_task_create();
  return swift_release();
}

uint64_t ToolKitIndexingReason.Changeset.isExpensive.getter()
{
  sub_10006E360();
  sub_10001148C();
  __chkstk_darwin(v1);
  uint64_t v2 = sub_10006E160();
  sub_10001148C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1000116E0();
  id v6 = [self sharedProvider];
  id v7 = [v6 metadataProvider];

  sub_1000114F0();
  v8();
  int v9 = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 88))(v0, v2);
  if (v9 == enum case for ToolKitIndexingReason.Changeset.partial(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v0, v2);
    uint64_t v10 = *v0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v11 = v7;
    uint64_t v12 = sub_10000DDE8(0, v10, v11);
    swift_bridgeObjectRelease();

    return v12 > 80;
  }
  else if (v9 == enum case for ToolKitIndexingReason.Changeset.full(_:))
  {

    return 1;
  }
  else if (v9 == enum case for ToolKitIndexingReason.Changeset.none(_:))
  {

    return 0;
  }
  else
  {
    uint64_t result = sub_10006F770();
    __break(1u);
  }
  return result;
}

uint64_t sub_10000D908(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  if (!swift_dynamicCastObjCProtocolConditional()) {
    goto LABEL_8;
  }
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4 || (self, (uint64_t v4 = swift_dynamicCastObjCClass()) != 0))
  {
    uint64_t v5 = (void *)v4;
    id v6 = v3;
    id v7 = [v5 fullyQualifiedLinkActionIdentifier];
  }
  else
  {
    sub_10006DFB0();
    if (!swift_dynamicCastClass())
    {
      while (1)
      {
        id v16 = v3;
        sub_10006F600(31);
        v17._object = (void *)0x8000000100071DE0;
        v17._countAndFlagsBits = 0xD00000000000001DLL;
        sub_10006F0A0(v17);
        sub_10000772C((uint64_t *)&unk_100081EB0);
        sub_10006F690();
LABEL_8:
        sub_10006F6D0();
        __break(1u);
      }
    }
    id v15 = v3;
    id v7 = (id)sub_10006DFA0();
  }
  os_log_type_t v8 = v7;
  id v9 = [v7 bundleIdentifier];

  uint64_t v10 = sub_10006F050();
  uint64_t v12 = v11;

  sub_100019814(v10, v12, a2);
  LOBYTE(v10) = v13;
  swift_bridgeObjectRelease();

  return v10 & 1;
}

void sub_10000DB48(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_10006F570();
    sub_10001028C(0, &qword_100081E28);
    sub_10001014C();
    sub_10006F1F0();
    unint64_t v1 = (unint64_t)v17[1];
    id v16 = v17[2];
    uint64_t v2 = (uint64_t)v17[3];
    id v3 = v17[4];
    unint64_t v4 = (unint64_t)v17[5];
  }
  else
  {
    id v3 = 0;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    id v16 = (void *)(a1 + 56);
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v9 = (v4 - 1) & v4;
      unint64_t v10 = __clz(__rbit64(v4)) | ((void)v3 << 6);
      uint64_t v11 = (char *)v3;
      goto LABEL_29;
    }
    uint64_t v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v13 >= v8) {
      goto LABEL_32;
    }
    unint64_t v14 = v16[v13];
    uint64_t v11 = (char *)v3 + 1;
    if (!v14)
    {
      uint64_t v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8) {
        goto LABEL_32;
      }
      unint64_t v14 = v16[(void)v11];
      if (!v14)
      {
        uint64_t v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8) {
          goto LABEL_32;
        }
        unint64_t v14 = v16[(void)v11];
        if (!v14)
        {
          uint64_t v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8) {
            goto LABEL_32;
          }
          unint64_t v14 = v16[(void)v11];
          if (!v14)
          {
            uint64_t v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8) {
              goto LABEL_32;
            }
            unint64_t v14 = v16[(void)v11];
            if (!v14)
            {
              uint64_t v15 = (uint64_t)v3 + 6;
              while (v15 < v8)
              {
                unint64_t v14 = v16[v15++];
                if (v14)
                {
                  uint64_t v11 = (char *)(v15 - 1);
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1000102C8();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + ((void)v11 << 6);
LABEL_29:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_10004D2D4(v17, v12);

      id v3 = v11;
      unint64_t v4 = v9;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_10006F5A0())
      {
        sub_10001028C(0, &qword_100081E28);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v12 = v17[0];
        swift_unknownObjectRelease();
        uint64_t v11 = (char *)v3;
        uint64_t v9 = v4;
        if (v12) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_10000DDE8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v21 = a1;
  uint64_t v6 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    os_signpost_type_t v18 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = v18[1];
    v20[0] = *v18;
    v20[1] = v19;
    swift_bridgeObjectRetain();
    sub_10000E4E0(&v21, v20, a3);
    if (v3)
    {

      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10)
  {
LABEL_26:

    swift_release();
    return v21;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10000DFA4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  for (v6 &= v6 - 1; ; uint64_t v6 = (v11 - 1) & v11)
  {
    swift_bridgeObjectRetain();
    NSString v13 = sub_10006F020();
    id v14 = [a3 createActionsForBundleIdentifier:v13];

    sub_10001028C(0, &qword_100081E28);
    sub_10001014C();
    unint64_t v15 = sub_10006F1C0();

    sub_10000DB48(v15);
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    uint64_t v11 = *(void *)(v16 + 8 * v10);
    ++v9;
    if (!v11)
    {
      int64_t v9 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      uint64_t v11 = *(void *)(v16 + 8 * v9);
      if (!v11)
      {
        int64_t v9 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        uint64_t v11 = *(void *)(v16 + 8 * v9);
        if (!v11)
        {
          int64_t v9 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          uint64_t v11 = *(void *)(v16 + 8 * v9);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_20:
    ;
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:

    swift_release();
    return a1;
  }
  uint64_t v11 = *(void *)(v16 + 8 * v12);
  if (v11)
  {
    int64_t v9 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_23;
    }
    uint64_t v11 = *(void *)(v16 + 8 * v9);
    ++v12;
    if (v11) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10000E1BC()
{
  sub_10006E300();
  sub_10001148C();
  uint64_t v31 = v2;
  uint64_t v32 = v1;
  __chkstk_darwin(v1);
  uint64_t v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_10006E2D0();
  sub_10001148C();
  uint64_t v7 = v6;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v30 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  int64_t v12 = &v28[-v11];
  sub_10006E2F0();
  sub_10001148C();
  uint64_t v33 = v14;
  uint64_t v34 = v13;
  __chkstk_darwin(v13);
  sub_1000116E0();
  sub_10006E0B0();
  unint64_t v15 = sub_10006E0D0();
  char v17 = v16;
  sub_10006E0E0();
  os_signpost_type_t v18 = sub_10006E2E0();
  sub_10006E310();
  int v29 = sub_10006F3C0();
  uint64_t result = sub_10006F4B0();
  if ((result & 1) == 0)
  {
    swift_release();

    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v12, v5);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v0, v34);
  }
  if ((v17 & 1) == 0)
  {
    if (v15)
    {
      uint64_t v21 = v31;
      uint64_t v20 = v32;
LABEL_10:
      swift_retain();
      sub_10006E340();
      swift_release();
      if ((*(unsigned int (**)(unsigned char *, uint64_t))(v21 + 88))(v4, v20) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v22 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v4, v20);
        uint64_t v22 = "";
      }
      uint64_t v23 = v30;
      sub_1000114F0();
      v24();
      uint64_t v25 = (uint8_t *)sub_100011554();
      *(_WORD *)uint64_t v25 = 0;
      os_signpost_id_t v26 = sub_10006E2C0();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v18, (os_signpost_type_t)v29, v26, (const char *)v15, v22, v25, 2u);
      uint64_t v27 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
      v27(v23, v5);
      sub_10001153C();
      swift_release();

      v27(v12, v5);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v0, v34);
    }
    __break(1u);
    goto LABEL_16;
  }
  if (HIDWORD(v15))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v15 >> 11 != 27)
  {
    uint64_t v21 = v31;
    uint64_t v20 = v32;
    if (WORD1(v15) <= 0x10u)
    {
      unint64_t v15 = (unint64_t)&v35;
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10000E4E0(void *a1, uint64_t *a2, void *a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v23 = 0;
  id v7 = sub_1000101AC(v5, v6, (uint64_t)&v23, a3, (SEL *)&selRef_actionIdentifiersForBundleIdentifier_error_);
  uint64_t v8 = v23;
  if (v7)
  {
    uint64_t v9 = v7;
    uint64_t v10 = sub_10006F0F0();
    id v11 = v8;

    uint64_t v12 = *(void *)(v10 + 16);
    swift_bridgeObjectRelease();
    uint64_t v23 = 0;
    id v13 = sub_1000101AC(v5, v6, (uint64_t)&v23, a3, (SEL *)&selRef_entityIdentifiersForBundleIdentifier_error_);
    uint64_t v8 = v23;
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = sub_10006F0F0();
      id v16 = v8;

      uint64_t v17 = *(void *)(v15 + 16);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v19 = v12 + v17;
      if (__OFADD__(v12, v17))
      {
        __break(1u);
      }
      else
      {
        BOOL v20 = __OFADD__(*a1, v19);
        uint64_t v21 = *a1 + v19;
        if (!v20)
        {
          *a1 = v21;
          return result;
        }
      }
      __break(1u);
    }
  }
  id v22 = v8;
  sub_10006DDC0();

  return swift_willThrow();
}

id sub_10000E640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = sub_10006F020();
  swift_bridgeObjectRelease();
  if (a3)
  {
    v6.super.Class isa = sub_10006EFB0().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6.super.Class isa = 0;
  }
  id v7 = [v3 initWithActionIdentifier:v5 serializedParameters:v6.super.isa];

  return v7;
}

uint64_t sub_10000E6E0()
{
  return swift_slowAlloc();
}

uint64_t _s23IndexingPreflightResultV4StepOMa(uint64_t a1)
{
  return sub_10000E7D0(a1, qword_100081F50);
}

uint64_t sub_10000E708()
{
  sub_1000116F8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)sub_10001152C(v7);
  *uint64_t v8 = v9;
  v8[1] = sub_100011470;
  return sub_100009724(v4, v2, v6, v5);
}

uint64_t _s23IndexingPreflightResultVMa(uint64_t a1)
{
  return sub_10000E7D0(a1, qword_100081FE0);
}

uint64_t sub_10000E7D0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10000E804()
{
  sub_10006E160();
  sub_10001148C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 32) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_unknownObjectRelease();
  uint64_t v8 = sub_10001163C();
  v9(v8);
  return _swift_deallocObject(v0, v6, v7);
}

uint64_t sub_10000E898()
{
  sub_1000116F8();
  uint64_t v0 = sub_10006E160();
  sub_1000114C0(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_10001152C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_100011470;
  uint64_t v4 = sub_1000116B0();
  return sub_10000A4F0(v4, v5, v6, v7);
}

uint64_t sub_10000E948()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10000E988()
{
  sub_1000116F8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10001152C(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_10000EA20;
  uint64_t v3 = sub_1000116B0();
  return sub_10000ABE0(v3);
}

uint64_t sub_10000EA20()
{
  sub_1000114D4();
  sub_100011474();
  uint64_t v1 = *v0;
  sub_1000114E0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1000115DC();
  return v3();
}

uint64_t sub_10000EAE4()
{
  uint64_t v0 = sub_10006E160();
  sub_1000114C0(v0);
  sub_1000116C8();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_10001152C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_100011470;
  uint64_t v4 = sub_100011610();
  return sub_10000AF9C(v4, v5, v6, v7, v8);
}

uint64_t sub_10000EB98()
{
  sub_10006E160();
  sub_10001148C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 40) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_unknownObjectRelease();

  uint64_t v8 = sub_10001163C();
  v9(v8);
  return _swift_deallocObject(v0, v6, v7);
}

uint64_t sub_10000EC34()
{
  uint64_t v0 = sub_10006E160();
  sub_1000114C0(v0);
  sub_1000116C8();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_10001152C(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_100011470;
  uint64_t v4 = sub_100011610();
  return sub_10000C59C(v4, v5, v6, v7, v8);
}

unint64_t sub_10000ECE4()
{
  unint64_t result = qword_100081E00;
  if (!qword_100081E00)
  {
    sub_10000ED38(&qword_100081DA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100081E00);
  }
  return result;
}

uint64_t sub_10000ED38(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10000ED80(uint64_t a1, uint64_t *a2)
{
  sub_10000772C(a2);
  sub_1000117B0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10000EDD0()
{
  uint64_t v2 = sub_100011730();
  v3(v2);
  sub_100011508();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_10000EE20()
{
  uint64_t v2 = sub_100011730();
  v3(v2);
  sub_100011508();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

uint64_t sub_10000EE70(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1000117B0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_10000EEC4(uint64_t a1, void *a2)
{
  sub_10006F450(a2[5]);
  unint64_t result = sub_10006F560();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_10000EF48(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_35:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10000772C(&qword_100082320);
  uint64_t result = sub_10006F5F0();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v32 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v32) {
      goto LABEL_35;
    }
    ++v10;
    if (!a1[v14])
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v32) {
        goto LABEL_35;
      }
      if (!a1[v10])
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v32) {
          goto LABEL_35;
        }
        if (!a1[v10]) {
          break;
        }
      }
    }
LABEL_23:
    sub_100011720();
    unint64_t v9 = v17 & v16;
    unint64_t v13 = v18 + (v10 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_10006F820();
    swift_bridgeObjectRetain();
    sub_10006F090();
    uint64_t result = sub_10006F840();
    uint64_t v22 = -1 << v8[32];
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) == 0)
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v24);
        if (v29 != -1)
        {
          unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(void *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t v30 = (void *)(*((void *)v8 + 6) + 16 * v25);
    *uint64_t v30 = v20;
    v30[1] = v21;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_38;
    }
    if (!v5) {
      goto LABEL_35;
    }
  }
  uint64_t v15 = v14 + 3;
  if (v15 >= v32) {
    goto LABEL_35;
  }
  if (a1[v15])
  {
    uint64_t v10 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_35;
    }
    ++v15;
    if (a1[v10]) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10000F1D0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v9 = &_swiftEmptySetSingleton;
LABEL_35:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10000772C(&qword_100081E48);
  uint64_t result = sub_10006F5F0();
  unint64_t v9 = (void *)result;
  uint64_t v29 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_35;
    }
    unint64_t v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_35;
      }
      unint64_t v16 = v29[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_35;
        }
        unint64_t v16 = v29[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::Int v18 = v9[5];
    id v19 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_10006F450(v18);
    uint64_t v20 = -1 << *((unsigned char *)v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_38;
    }
    if (!v5) {
      goto LABEL_35;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_35;
  }
  unint64_t v16 = v29[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_35;
    }
    unint64_t v16 = v29[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

Swift::Int sub_10000F428(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if ((a1 & 0xC000000000000001) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)sub_10000FD70(a1, a2);
    swift_bridgeObjectRelease();
    return (Swift::Int)v6;
  }
  uint64_t v6 = &_swiftEmptySetSingleton;
  unint64_t v21 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRetain();
  sub_10006F570();
  if (!sub_10006F5A0())
  {
LABEL_21:
    swift_bridgeObjectRelease_n();
    swift_release();
    return (Swift::Int)v6;
  }
  uint64_t v6 = (void *)sub_10001028C(0, &qword_100081E28);
  while (1)
  {
    swift_dynamicCast();
    char v7 = sub_10000D908(&v20, a2);
    if (v3)
    {
      swift_release();

      swift_bridgeObjectRelease_n();
      swift_release();
      return (Swift::Int)v6;
    }
    uint64_t v8 = v20;
    if (v7) {
      break;
    }

LABEL_19:
    if (!sub_10006F5A0())
    {
      uint64_t v6 = v21;
      goto LABEL_21;
    }
  }
  unint64_t v9 = v21;
  if (*((void *)v21 + 3) <= *((void *)v21 + 2))
  {
    sub_10004904C();
    unint64_t v9 = v21;
  }
  Swift::Int result = sub_10006F450(v9[5]);
  uint64_t v11 = (char *)(v9 + 7);
  uint64_t v12 = -1 << *((unsigned char *)v9 + 32);
  unint64_t v13 = result & ~v12;
  unint64_t v14 = v13 >> 6;
  if (((-1 << v13) & ~v9[(v13 >> 6) + 7]) != 0)
  {
    unint64_t v15 = __clz(__rbit64((-1 << v13) & ~v9[(v13 >> 6) + 7])) | v13 & 0x7FFFFFFFFFFFFFC0;
LABEL_18:
    *(void *)&v11[(v15 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v15;
    *(void *)(v9[6] + 8 * v15) = v8;
    ++v9[2];
    goto LABEL_19;
  }
  char v16 = 0;
  unint64_t v17 = (unint64_t)(63 - v12) >> 6;
  while (++v14 != v17 || (v16 & 1) == 0)
  {
    BOOL v18 = v14 == v17;
    if (v14 == v17) {
      unint64_t v14 = 0;
    }
    v16 |= v18;
    uint64_t v19 = *(void *)&v11[8 * v14];
    if (v19 != -1)
    {
      unint64_t v15 = __clz(__rbit64(~v19)) + (v14 << 6);
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10000F69C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    uint64_t v6 = (uint64_t *)((char *)&v10 - ((8 * v5 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_100047DB0(0, v5, v6);
    uint64_t v7 = sub_10000F830((uint64_t)v6, v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    sub_100047DB0(0, v5, v8);
    uint64_t v7 = sub_10000F830((uint64_t)v8, v5, a2, v3);
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

uint64_t sub_10000F830(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  uint64_t v57 = (unint64_t *)result;
  if (*(void *)(a4 + 16) >= *(void *)(a3 + 16))
  {
    int64_t v34 = 0;
    uint64_t v60 = a3 + 56;
    uint64_t v61 = 0;
    uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
    if (v35 < 64) {
      uint64_t v36 = ~(-1 << v35);
    }
    else {
      uint64_t v36 = -1;
    }
    unint64_t v37 = v36 & *(void *)(a3 + 56);
    int64_t v63 = (unint64_t)(v35 + 63) >> 6;
    uint64_t v38 = a4 + 56;
    while (1)
    {
      while (1)
      {
        if (v37)
        {
          unint64_t v39 = __clz(__rbit64(v37));
          v37 &= v37 - 1;
          unint64_t v40 = v39 | (v34 << 6);
        }
        else
        {
          int64_t v41 = v34 + 1;
          if (__OFADD__(v34, 1))
          {
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }
          if (v41 >= v63) {
            goto LABEL_79;
          }
          unint64_t v42 = *(void *)(v60 + 8 * v41);
          ++v34;
          if (!v42)
          {
            int64_t v34 = v41 + 1;
            if (v41 + 1 >= v63) {
              goto LABEL_79;
            }
            unint64_t v42 = *(void *)(v60 + 8 * v34);
            if (!v42)
            {
              int64_t v34 = v41 + 2;
              if (v41 + 2 >= v63) {
                goto LABEL_79;
              }
              unint64_t v42 = *(void *)(v60 + 8 * v34);
              if (!v42)
              {
                int64_t v43 = v41 + 3;
                if (v43 >= v63) {
                  goto LABEL_79;
                }
                unint64_t v42 = *(void *)(v60 + 8 * v43);
                if (!v42)
                {
                  while (1)
                  {
                    int64_t v34 = v43 + 1;
                    if (__OFADD__(v43, 1)) {
                      goto LABEL_85;
                    }
                    if (v34 >= v63) {
                      break;
                    }
                    unint64_t v42 = *(void *)(v60 + 8 * v34);
                    ++v43;
                    if (v42) {
                      goto LABEL_61;
                    }
                  }
LABEL_79:
                  swift_retain();
                  return sub_10000EF48(v57, a2, v61, v5);
                }
                int64_t v34 = v43;
              }
            }
          }
LABEL_61:
          unint64_t v37 = (v42 - 1) & v42;
          unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
        }
        uint64_t v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
        uint64_t v46 = *v44;
        uint64_t v45 = v44[1];
        sub_10006F820();
        swift_bridgeObjectRetain();
        sub_10006F090();
        Swift::Int v47 = sub_10006F840();
        uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
        unint64_t v49 = v47 & ~v48;
        if ((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49)) {
          break;
        }
LABEL_78:
        Swift::Int result = swift_bridgeObjectRelease();
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v50 = *(void *)(a4 + 48);
      unint64_t v51 = (void *)(v50 + 16 * v49);
      BOOL v52 = *v51 == v46 && v51[1] == v45;
      if (!v52 && (sub_10006F780() & 1) == 0)
      {
        uint64_t v53 = ~v48;
        do
        {
          unint64_t v49 = (v49 + 1) & v53;
          if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
            goto LABEL_78;
          }
          uint64_t v54 = (void *)(v50 + 16 * v49);
          BOOL v55 = *v54 == v46 && v54[1] == v45;
        }
        while (!v55 && (sub_10006F780() & 1) == 0);
      }
      Swift::Int result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_83;
      }
    }
  }
  int64_t v6 = 0;
  uint64_t v58 = a4 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  int64_t v59 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v61 = 0;
  uint64_t v10 = a3 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      int64_t v62 = v6;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_22;
    }
    int64_t v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_81;
    }
    if (v13 >= v59) {
      goto LABEL_79;
    }
    unint64_t v14 = *(void *)(v58 + 8 * v13);
    int64_t v15 = v6 + 1;
    if (!v14)
    {
      int64_t v15 = v6 + 2;
      if (v6 + 2 >= v59) {
        goto LABEL_79;
      }
      unint64_t v14 = *(void *)(v58 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v6 + 3;
        if (v6 + 3 >= v59) {
          goto LABEL_79;
        }
        unint64_t v14 = *(void *)(v58 + 8 * v15);
        if (!v14) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v9 = (v14 - 1) & v14;
    int64_t v62 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_22:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_10006F820();
    swift_bridgeObjectRetain();
    sub_10006F090();
    Swift::Int v20 = sub_10006F840();
    uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    uint64_t v24 = 1 << v22;
    if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) == 0) {
      goto LABEL_36;
    }
    uint64_t v25 = *(void *)(a3 + 48);
    BOOL v26 = (void *)(v25 + 16 * v22);
    BOOL v27 = *v26 == v19 && v26[1] == v18;
    if (v27 || (sub_10006F780() & 1) != 0)
    {
      Swift::Int result = swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      v57[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_82;
      }
    }
    else
    {
      uint64_t v28 = ~v21;
      for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
      {
        unint64_t v30 = i & v28;
        if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
          break;
        }
        uint64_t v31 = (void *)(v25 + 16 * v30);
        BOOL v32 = *v31 == v19 && v31[1] == v18;
        if (v32 || (sub_10006F780() & 1) != 0)
        {
          Swift::Int result = swift_bridgeObjectRelease();
          unint64_t v23 = v30 >> 6;
          uint64_t v24 = 1 << v30;
          goto LABEL_38;
        }
      }
LABEL_36:
      Swift::Int result = swift_bridgeObjectRelease();
      int64_t v6 = v62;
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  uint64_t v16 = v6 + 4;
  if (v6 + 4 >= v59) {
    goto LABEL_79;
  }
  unint64_t v14 = *(void *)(v58 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v6 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v59) {
      goto LABEL_79;
    }
    unint64_t v14 = *(void *)(v58 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
  return result;
}

uint64_t sub_10000FD70(uint64_t a1, uint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    unint64_t v9 = (unint64_t *)((char *)&v15 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_100047DB0(0, v7, v9);
    swift_bridgeObjectRetain();
    sub_10000FF44(v9, v7, a1, a2);
    uint64_t v11 = v10;
    swift_release();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v12 = (unint64_t *)swift_slowAlloc();
    sub_100047DB0(0, v7, v12);
    swift_bridgeObjectRetain();
    sub_10000FF44(v12, v7, a1, a2);
    uint64_t v11 = v13;
    swift_release();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return v11;
}

void sub_10000FF44(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  uint64_t v22 = 0;
  int64_t v23 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    unint64_t v12 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v13 = v12 | (v7 << 6);
LABEL_17:
    uint64_t v24 = *(void **)(*(void *)(a3 + 48) + 8 * v13);
    unint64_t v17 = v24;
    char v18 = sub_10000D908(&v24, a4);
    if (v4)
    {
      swift_bridgeObjectRelease();

      return;
    }
    char v19 = v18;

    if (v19)
    {
      *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      BOOL v14 = __OFADD__(v22++, 1);
      if (v14) {
        goto LABEL_30;
      }
    }
  }
  BOOL v14 = __OFADD__(v7++, 1);
  if (v14)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v23) {
    goto LABEL_27;
  }
  unint64_t v15 = *(void *)(v8 + 8 * v7);
  if (v15)
  {
LABEL_16:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v7 << 6);
    goto LABEL_17;
  }
  int64_t v16 = v7 + 1;
  if (v7 + 1 >= v23) {
    goto LABEL_27;
  }
  unint64_t v15 = *(void *)(v8 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v7 + 2;
  if (v7 + 2 >= v23) {
    goto LABEL_27;
  }
  unint64_t v15 = *(void *)(v8 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v7 + 3;
  if (v7 + 3 >= v23)
  {
LABEL_27:
    swift_retain();
    sub_10000F1D0(a1, a2, v22, a3);
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v15 = *(void *)(v8 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v7 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v7 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v7 >= v23) {
      goto LABEL_27;
    }
    unint64_t v15 = *(void *)(v8 + 8 * v7);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

unint64_t sub_10001014C()
{
  unint64_t result = qword_100081E30;
  if (!qword_100081E30)
  {
    sub_10001028C(255, &qword_100081E28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100081E30);
  }
  return result;
}

id sub_1000101AC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  NSString v8 = sub_10006F020();
  id v9 = objc_msgSend(a4, *a5, v8, a3);

  return v9;
}

uint64_t sub_10001020C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_10001028C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1000102C8()
{
  return swift_release();
}

uint64_t sub_1000102D0()
{
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100010308()
{
  sub_1000114D4();
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_100011470;
  return sub_10000D08C();
}

uint64_t sub_10001039C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000772C(&qword_100081DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100010404(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      uint64_t v8 = sub_10006E200();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = *(int *)(sub_10000772C(&qword_100081E08) + 48);
      uint64_t v10 = (char *)a1 + v9;
      unint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_10006E0A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100010598(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2 || result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = sub_10006E200();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    uint64_t v4 = a1 + *(int *)(sub_10000772C(&qword_100081E08) + 48);
    uint64_t v5 = sub_10006E0A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  return result;
}

void *sub_10001068C(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = sub_10006E200();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(sub_10000772C(&qword_100081E08) + 48);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10006E0A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1000107DC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10000EE70((uint64_t)a1, (void (*)(void))_s23IndexingPreflightResultV4StepOMa);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = sub_10006E200();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = *(int *)(sub_10000772C(&qword_100081E08) + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_10006E0A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_100010950(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_10006E200();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = *(int *)(sub_10000772C(&qword_100081E08) + 48);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_10006E0A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_100010A58(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10000EE70((uint64_t)a1, (void (*)(void))_s23IndexingPreflightResultV4StepOMa);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_10006E200();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = *(int *)(sub_10000772C(&qword_100081E08) + 48);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_10006E0A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100010B90()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100010BA0()
{
  uint64_t result = sub_10006E200();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_10006E0A0();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v4 = &v3;
      uint64_t v5 = (char *)&value witness table for Builtin.BridgeObject + 64;
      uint64_t v6 = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100010C80(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10006E200();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10006E0A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100010DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006E200();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_10006E0A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100010E78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006E200();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10006E0A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100010F58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006E200();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10006E0A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100011050(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006E200();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10006E0A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  return a1;
}

uint64_t sub_100011124(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006E200();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10006E0A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10001120C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100011220);
}

uint64_t sub_100011220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10006E200();
  sub_1000114A8();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return sub_100007800(v9, a2, v8);
  }
  sub_10006E0A0();
  sub_1000114A8();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_1000112D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000112E8);
}

void sub_1000112E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10006E200();
  sub_1000114A8();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10006E0A0();
    sub_1000114A8();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }
  sub_100007770(v11, a2, a2, v10);
}

uint64_t sub_100011398()
{
  uint64_t result = sub_10006E200();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_10006E0A0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000114C0(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_10001151C()
{
  return v0 + 8;
}

uint64_t sub_10001152C(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_10001153C()
{
  return swift_slowDealloc();
}

uint64_t sub_100011554()
{
  return swift_slowAlloc();
}

uint64_t sub_10001156C()
{
  return *(void *)(v0 + 192);
}

uint64_t sub_1000115AC()
{
  return v0;
}

uint64_t sub_1000115BC()
{
  return sub_10006E320();
}

uint64_t sub_1000115DC()
{
  return v0 + 8;
}

uint64_t sub_100011610()
{
  return v0;
}

uint64_t sub_10001163C()
{
  return v0 + v1;
}

uint64_t sub_100011664()
{
  return *(void *)(v0 + 48);
}

void sub_10001167C(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

uint64_t sub_100011698()
{
  return v0;
}

uint64_t sub_1000116B0()
{
  return v0;
}

uint64_t sub_100011730()
{
  return 0;
}

uint64_t sub_100011744()
{
  return v0;
}

uint64_t sub_100011758()
{
  return v0;
}

uint64_t sub_100011764()
{
  return v0;
}

uint64_t sub_100011790()
{
  _s23IndexingPreflightResultV4StepOMa(0);
  return v0;
}

uint64_t sub_1000117C4(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v46 = a5;
  uint64_t v47 = a4;
  id v48 = a3;
  uint64_t v8 = sub_10006EA40();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v45 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v44 = (char *)&v34 - v12;
  uint64_t v43 = sub_10006E9E0();
  uint64_t v13 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v49 = (uint64_t)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v50 = v5;
    BOOL v52 = _swiftEmptyArrayStorage;
    sub_100068F40(0, v15, 0);
    uint64_t result = sub_100052C94(a1);
    uint64_t v17 = result;
    uint64_t v19 = v18;
    uint64_t v20 = v13;
    char v22 = v21 & 1;
    uint64_t v41 = v9;
    uint64_t v42 = a1 + 56;
    uint64_t v38 = v9 + 32;
    uint64_t v39 = v9 + 16;
    unint64_t v40 = (void (**)(void *, uint64_t))(v9 + 8);
    uint64_t v35 = v20;
    uint64_t v36 = v8;
    uint64_t v34 = v20 + 32;
    unint64_t v37 = a2;
    while ((v17 & 0x8000000000000000) == 0 && v17 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(v42 + (((unint64_t)v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
        goto LABEL_19;
      }
      if (*(_DWORD *)(a1 + 36) != v19) {
        goto LABEL_20;
      }
      uint64_t v23 = a1;
      uint64_t v24 = v41;
      uint64_t v25 = *(void *)(a1 + 48) + *(void *)(v41 + 72) * v17;
      BOOL v26 = v44;
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v44, v25, v8);
      BOOL v27 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
      uint64_t v28 = v45;
      v27(v45, v26, v8);
      uint64_t v29 = v50;
      sub_100015A6C((uint64_t)v28, (uint64_t)v48, v47, v46, (void (*)(char *, uint64_t, uint64_t))&v51, v49);
      uint64_t v50 = v29;
      if (v29)
      {
        (*v40)(v28, v8);
        swift_bridgeObjectRelease();

        swift_release();
        return (uint64_t)v28;
      }
      (*v40)(v28, v8);
      uint64_t v28 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100068F40(0, v28[2] + 1, 1);
        uint64_t v28 = v52;
      }
      a1 = v23;
      unint64_t v31 = v28[2];
      unint64_t v30 = v28[3];
      if (v31 >= v30 >> 1)
      {
        sub_100068F40(v30 > 1, v31 + 1, 1);
        uint64_t v28 = v52;
      }
      v28[2] = v31 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v35 + 32))((unint64_t)v28+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v31, v49, v43);
      BOOL v52 = v28;
      uint64_t result = sub_100052AF8(v17, v19, v22 & 1, v23);
      uint64_t v17 = result;
      uint64_t v19 = v32;
      char v22 = v33 & 1;
      --v15;
      uint64_t v8 = v36;
      a2 = v37;
      if (!v15)
      {
        sub_10001650C(result, v32, v33 & 1);

        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  else
  {

    uint64_t v28 = _swiftEmptyArrayStorage;
LABEL_16:
    swift_bridgeObjectRelease();

    return (uint64_t)v28;
  }
  return result;
}

void *sub_100011BE0(uint64_t a1)
{
  uint64_t v13 = sub_10006E9E0();
  uint64_t v3 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v15 = _swiftEmptyArrayStorage;
    uint64_t v14 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_100068F40(0, v5, 0);
    uint64_t v6 = v15;
    uint64_t v7 = (id *)(a1 + 32);
    v12[1] = v3 + 32;
    while (1)
    {
      id v8 = *v7;
      sub_100012710(v8);
      if (v1) {
        break;
      }

      uint64_t v15 = v6;
      unint64_t v10 = v6[2];
      unint64_t v9 = v6[3];
      if (v10 >= v9 >> 1)
      {
        sub_100068F40(v9 > 1, v10 + 1, 1);
        uint64_t v6 = v15;
      }
      v6[2] = v10 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v6+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v10, v14, v13);
      ++v7;
      if (!--v5)
      {
        swift_release();
        return v6;
      }
    }
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  return v6;
}

void *sub_100011DC8(uint64_t a1)
{
  uint64_t v15 = sub_10006EA40();
  uint64_t v3 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v13[1] = v1;
    int64_t v16 = _swiftEmptyArrayStorage;
    sub_100068FA4(0, v6, 0);
    uint64_t v7 = v16;
    uint64_t v8 = *(void *)(sub_10006E9E0() - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v14 = *(void *)(v8 + 72);
    do
    {
      sub_10006E9A0();
      int64_t v16 = v7;
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1)
      {
        sub_100068FA4(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v16;
      }
      v7[2] = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v11, v5, v15);
      v9 += v14;
      --v6;
    }
    while (v6);
  }
  return v7;
}

void *sub_100011FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

uint64_t sub_100011FC0(uint64_t a1, void *a2)
{
  sub_10006E9E0();
  sub_10001148C();
  uint64_t v61 = v4;
  uint64_t v62 = v3;
  __chkstk_darwin(v3);
  sub_100016530();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_10006E040();
  __chkstk_darwin(v8 - 8);
  sub_100016530();
  unint64_t v11 = (void *)(v10 - v9);
  uint64_t v12 = sub_10006EEE0();
  sub_10001148C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_100016530();
  uint64_t v18 = v17 - v16;
  sub_10006F260();
  sub_10001148C();
  __chkstk_darwin(v19);
  sub_100016530();
  BOOL v70 = _swiftEmptyArrayStorage;
  uint64_t v66 = a1;
  if (sub_10001028C(0, &qword_100082120) == a1)
  {
    id v23 = [self availableUnitTypes];
    type metadata accessor for WFMeasurementUnitType(0);
    uint64_t v24 = sub_10006F0F0();

    swift_retain();
    unint64_t v11 = sub_100011BE0(v24);
    swift_bridgeObjectRelease();
    if (v68) {
      return (uint64_t)v11;
    }
    sub_10001A69C();
  }
  else
  {
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v18, enum case for TypedValueResolutionCoercion.default(_:), v12);
    id v20 = a2;
    sub_10006E020();
    sub_10006F250();
    sub_10006F2D0();
    if (v68)
    {
      uint64_t v21 = sub_100016558();
      v22(v21);
      swift_bridgeObjectRelease();
      return (uint64_t)v11;
    }
    uint64_t v25 = sub_100067138(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
    unint64_t v27 = *(void *)(v25 + 16);
    unint64_t v26 = *(void *)(v25 + 24);
    if (v27 >= v26 >> 1) {
      uint64_t v25 = sub_100067138(v26 > 1, v27 + 1, 1, v25);
    }
    *(void *)(v25 + 16) = v27 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v61 + 32))(v25+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v27, v7, v62);
    BOOL v70 = (void *)v25;
    uint64_t v28 = sub_100016558();
    v29(v28);
  }
  uint64_t v30 = a1;
  id v31 = [(id)swift_getObjCClassFromMetadata() allProperties];
  sub_10001028C(0, &qword_100082128);
  unint64_t v32 = sub_10006F0F0();

  if (v32 >> 62) {
    goto LABEL_44;
  }
  uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v33)
  {
    unint64_t v64 = v32;
    unint64_t v65 = v32 & 0xC000000000000001;
    uint64_t v34 = 4;
    uint64_t v63 = v33;
    while (1)
    {
      id v35 = v65 ? (id)sub_10006F620() : *(id *)(v32 + 8 * v34);
      id v36 = v35;
      if (__OFADD__(v34 - 4, 1)) {
        break;
      }
      unint64_t v37 = sub_100012964(v35, v30, a2);
      uint64_t v38 = v34 - 3;
      uint64_t v39 = v36;
      uint64_t v30 = v37[2];
      uint64_t v40 = (uint64_t)v70;
      uint64_t v41 = v70[2];
      uint64_t v42 = v41 + v30;
      if (__OFADD__(v41, v30)) {
        goto LABEL_40;
      }
      uint64_t v69 = v37;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || (uint64_t v44 = v70[3] >> 1, v44 < v42))
      {
        if (v41 <= v42) {
          uint64_t v45 = v41 + v30;
        }
        else {
          uint64_t v45 = v41;
        }
        uint64_t v40 = sub_100067138(isUniquelyReferenced_nonNull_native, v45, 1, (uint64_t)v70);
        uint64_t v44 = *(void *)(v40 + 24) >> 1;
      }
      if (v69[2])
      {
        uint64_t v46 = *(void *)(v40 + 16);
        unint64_t v32 = v64;
        if (v44 - v46 < v30) {
          goto LABEL_42;
        }
        unint64_t v47 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
        uint64_t v48 = *(void *)(v61 + 72);
        unint64_t v49 = v40 + v47 + v48 * v46;
        unint64_t v50 = (unint64_t)v69 + v47;
        unint64_t v51 = (unint64_t)v69 + v47 + v48 * v30;
        if (v50 < v49 + v48 * v30 && v49 < v51)
        {
          uint64_t result = sub_10006F710();
          __break(1u);
          return result;
        }
        swift_arrayInitWithCopy();
        uint64_t v53 = v63;
        if (v30)
        {
          uint64_t v54 = *(void *)(v40 + 16);
          BOOL v55 = __OFADD__(v54, v30);
          uint64_t v56 = v54 + v30;
          if (v55) {
            goto LABEL_43;
          }
          *(void *)(v40 + 16) = v56;
        }
      }
      else
      {
        uint64_t v53 = v63;
        unint64_t v32 = v64;
        if (v30) {
          goto LABEL_41;
        }
      }
      swift_bridgeObjectRelease();

      BOOL v70 = (void *)v40;
      ++v34;
      uint64_t v30 = v66;
      if (v38 == v53) {
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_10006F6F0();
    swift_bridgeObjectRelease();
  }
LABEL_35:
  swift_bridgeObjectRelease();
  sub_10001028C(0, &qword_100082130);
  if (swift_dynamicCastMetatype())
  {
    id v57 = [(id)swift_getObjCClassFromMetadata() enumMetadata];
    sub_10001028C(0, &qword_100082140);
    sub_10006F430();
  }
  swift_retain();
  sub_10000772C(&qword_100082138);
  uint64_t v58 = sub_10006F060();
  __chkstk_darwin(v58);
  sub_10006E5C0();
  sub_10006E5D0();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v59 = swift_bridgeObjectRetain();
  unint64_t v11 = sub_100011DC8(v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (uint64_t)v11;
}

uint64_t sub_100012710(void *a1)
{
  uint64_t v2 = sub_10006E040();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10006EEE0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10006F260();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WFMeasurementUnitType(0);
  v15[4] = v11;
  v15[5] = &protocol witness table for WFMeasurementUnitType;
  v15[1] = a1;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for TypedValueResolutionCoercion.default(_:), v3);
  id v12 = a1;
  sub_10006E020();
  id v13 = [self defaultContext];
  sub_10006F250();
  sub_10001028C(0, &qword_100082120);
  sub_10006F2D0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void *sub_100012964(void *a1, uint64_t a2, void *a3)
{
  id v21 = a3;
  uint64_t v25 = a2;
  uint64_t v24 = sub_10006EEB0();
  uint64_t v5 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10006E960();
  uint64_t v22 = *(void *)(v8 - 8);
  uint64_t v23 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v11 = [a1 hasPossibleValues];
  unsigned __int8 v12 = objc_msgSend(objc_msgSend(a1, "possibleValues"), "isAsynchronous");
  swift_unknownObjectRelease();
  id v13 = _swiftEmptyArrayStorage;
  if (v11 && (v12 & 1) == 0)
  {
    id v14 = [a1 possibleValues];
    swift_getObjectType();
    uint64_t v15 = sub_10006F440();
    swift_unknownObjectRelease();
    uint64_t v16 = v25;
    sub_10006F270();
    id v13 = a1;
    sub_10006F380();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);
    if (!v3)
    {
      uint64_t v17 = sub_10006E940();
      id v18 = a1;
      id v19 = v21;
      swift_bridgeObjectRetain();
      id v13 = (void *)sub_1000117C4(v17, v18, v19, v15, v16);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v23);
    }
    swift_bridgeObjectRelease();
  }
  return v13;
}

uint64_t sub_100012C40(uint64_t a1, uint64_t *a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v24 = a5;
  uint64_t v23 = a1;
  uint64_t v9 = sub_10006E9E0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unsigned __int8 v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *a2;
  uint64_t v14 = *(void *)(*a2 + 16);
  if (v14)
  {
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
    uint64_t v15 = v10 + 16;
    unint64_t v17 = result + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    id v18 = (void (**)(char *, uint64_t))(v15 - 8);
    uint64_t v21 = *(void *)(v15 + 56);
    uint64_t v22 = v16;
    uint64_t v20 = result;
    swift_bridgeObjectRetain();
    int v19 = a4 & 1;
    while (1)
    {
      v22(v12, v17, v9);
      sub_100012DE8((uint64_t)v12, v23, v19, v24);
      if (v6) {
        break;
      }
      swift_bridgeObjectRelease();
      (*v18)(v12, v9);
      v17 += v21;
      if (!--v14) {
        return swift_bridgeObjectRelease();
      }
    }
    (*v18)(v12, v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100012DE8(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  uint64_t v5 = v4;
  int v52 = a3;
  uint64_t v53 = a2;
  uint64_t v8 = sub_10000772C(&qword_100081AA0);
  __chkstk_darwin(v8 - 8);
  unint64_t v51 = (void (*)(char *, uint64_t))((char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10006EA40();
  uint64_t v54 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unsigned __int8 v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ToolKitIndexer.TypeRegistryKey(0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v18 = (char *)v46 - v17;
  uint64_t v55 = a1;
  sub_10006E9A0();
  id v19 = [a4 locale];
  sub_10006DEA0();

  uint64_t v20 = *(void *)(v5 + 24);
  uint64_t v56 = v18;
  uint64_t v21 = sub_10001A8F0();
  if (v22)
  {
    uint64_t v23 = v21;
    uint64_t v24 = (uint64_t)v56;
  }
  else
  {
    uint64_t v25 = v51;
    unint64_t v47 = v16;
    uint64_t v48 = a4;
    v46[1] = v20;
    uint64_t v50 = v10;
    sub_10006E9A0();
    uint64_t v26 = sub_10006E9F0();
    uint64_t v23 = v27;
    unint64_t v49 = v12;
    if (v52)
    {
      uint64_t v28 = enum case for ContainerDefinition.ContainerType.framework(_:);
      uint64_t v29 = sub_10006EBD0();
      (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v25, v28, v29);
      uint64_t v30 = (uint64_t)v25;
      uint64_t v31 = 0;
      uint64_t v32 = v29;
    }
    else
    {
      uint64_t v32 = sub_10006EBD0();
      uint64_t v30 = (uint64_t)v25;
      uint64_t v31 = 1;
    }
    sub_100007770(v30, v31, 1, v32);
    uint64_t v33 = v59;
    uint64_t v34 = v54;
    uint64_t v35 = sub_1000036D8(v26, v23, v25, v53);
    uint64_t v36 = v50;
    if (v33)
    {
      swift_bridgeObjectRelease();
      sub_1000078D0((uint64_t)v25, &qword_100081AA0);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v49, v36);
      sub_1000163A8((uint64_t)v56);
      return v23;
    }
    uint64_t v37 = v35;
    sub_1000078D0((uint64_t)v25, &qword_100081AA0);
    uint64_t v38 = swift_bridgeObjectRelease();
    __chkstk_darwin(v38);
    uint64_t v39 = v55;
    v46[-4] = v55;
    v46[-3] = v37;
    v46[-2] = v48;
    uint64_t v40 = sub_10006E800();
    uint64_t v23 = v57;
    uint64_t v42 = v58;
    __chkstk_darwin(v40);
    v46[-4] = v39;
    v46[-3] = v23;
    v46[-2] = v42;
    uint64_t v43 = sub_10006E800();
    __chkstk_darwin(v43);
    v46[-4] = v39;
    v46[-3] = v23;
    v46[-2] = v42;
    sub_10006E800();
    uint64_t v44 = v49;
    uint64_t v24 = (uint64_t)v56;
    uint64_t v45 = (uint64_t)v47;
    sub_100016464((uint64_t)v56, (uint64_t)v47);
    swift_bridgeObjectRetain();
    sub_10001A960(v23, v42, v45);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v44, v50);
  }
  sub_1000163A8(v24);
  return v23;
}

uint64_t sub_1000132E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  v13[8] = a4;
  v13[9] = v12;
  v13[6] = a2;
  v13[7] = a3;
  v13[5] = a1;
  uint64_t v16 = sub_10006DEB0();
  v13[10] = v16;
  sub_100016518(v16);
  v13[11] = v17;
  v13[12] = swift_task_alloc();
  uint64_t v18 = sub_10006E9E0();
  v13[13] = v18;
  sub_100016518(v18);
  v13[14] = v19;
  uint64_t v20 = swift_task_alloc();
  v13[15] = v20;
  uint64_t v26 = (void *)swift_task_alloc();
  v13[16] = v26;
  *uint64_t v26 = v13;
  v26[1] = sub_100013418;
  return WFParameter.toolkitTypeDefinition(for:localizationContext:)(v20, a3, a4, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

uint64_t sub_100013418()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000137E0;
  }
  else {
    uint64_t v2 = sub_10001352C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10001352C()
{
  uint64_t v22 = v0[9];
  v0[4] = *(void *)(v22 + 16);
  uint64_t v23 = v0[17];
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v20 = v0[10];
  uint64_t v21 = v0[15];
  uint64_t v4 = (void *)v0[7];
  uint64_t v3 = (void *)v0[8];
  uint64_t v5 = (void *)v0[6];
  swift_retain();
  id v6 = [v4 identifier];
  sub_10006F050();

  v25._countAndFlagsBits = 35;
  v25._object = (void *)0xE100000000000000;
  sub_10006F0A0(v25);
  id v7 = [v5 key];
  uint64_t v8 = sub_10006F050();
  uint64_t v10 = v9;

  v26._countAndFlagsBits = v8;
  v26._object = v10;
  sub_10006F0A0(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 45;
  v27._object = (void *)0xE100000000000000;
  sub_10006F0A0(v27);
  id v11 = [v3 locale];
  sub_10006DEA0();

  uint64_t v12 = sub_10006DE50();
  uint64_t v14 = v13;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v20);
  v28._countAndFlagsBits = v12;
  v28._object = v14;
  sub_10006F0A0(v28);
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)swift_task_alloc();
  v15[2] = v22;
  v15[3] = v21;
  v15[4] = v4;
  v15[5] = v3;
  sub_10006E5C0();
  sub_10006E5D0();
  if (v23)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_release();
    swift_bridgeObjectRelease();
    sub_10006E9A0();
  }
  uint64_t v16 = sub_100016540();
  v17(v16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1000137E0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100013850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X4>, uint64_t *a4@<X8>)
{
  char v9 = sub_10006F490();
  uint64_t result = sub_100012DE8(a2, a1, v9 & 1, a3);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v11;
  }
  return result;
}

uint64_t sub_1000138C8(uint64_t a1)
{
  uint64_t v3 = sub_10006E9E0();
  sub_10001148C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100016530();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_10006EA20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a1, v10);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v9, enum case for TypeDefinition.primitive(_:), v3);
  swift_retain();
  v12._countAndFlagsBits = sub_10006EA00();
  sub_10006F0A0(v12);
  swift_bridgeObjectRelease();
  sub_10006E5C0();
  sub_10006E5D0();
  swift_bridgeObjectRelease();
  swift_release();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    sub_10006E9A0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

void sub_100013AC8(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  id v7 = [self defaultContext];
  uint64_t v8 = sub_100012DE8(a2, a1, 0, v7);
  uint64_t v10 = v9;

  if (!v3)
  {
    *a3 = v8;
    a3[1] = v10;
  }
}

uint64_t sub_100013B64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  id v200 = a4;
  v201 = a3;
  v167 = a5;
  uint64_t v7 = sub_10000772C(&qword_1000820D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v194 = (uint64_t)&v149 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000772C(&qword_1000820D8);
  __chkstk_darwin(v9 - 8);
  v191 = (char *)&v149 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000772C(&qword_1000820E0);
  __chkstk_darwin(v11 - 8);
  uint64_t v195 = (uint64_t)&v149 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000772C(&qword_1000820E8);
  __chkstk_darwin(v13 - 8);
  uint64_t v193 = (uint64_t)&v149 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000772C(&qword_1000820F0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  v180 = (char *)&v149 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  v179 = (char *)&v149 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v178 = (char *)&v149 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v186 = (char *)&v149 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v190 = (char *)&v149 - v25;
  __chkstk_darwin(v24);
  v182 = (char *)&v149 - v26;
  uint64_t v183 = sub_10006EE50();
  uint64_t v185 = *(void *)(v183 - 8);
  __chkstk_darwin(v183);
  v187 = (char *)&v149 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = sub_10006ED40();
  uint64_t v161 = *(void *)(v162 - 8);
  __chkstk_darwin(v162);
  v160 = (char *)&v149 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = (void (*)(void))sub_10006E960();
  v158 = (void (**)(char *, uint64_t))*((void *)v170 - 1);
  __chkstk_darwin(v170);
  v169 = (void (**)(char *, uint64_t))((char *)&v149 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v173 = sub_10006EE00();
  v174 = *(char **)(v173 - 8);
  __chkstk_darwin(v173);
  v159 = (char *)&v149 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_10006EAC0();
  uint64_t v164 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  v163 = (char *)&v149 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10006DEB0();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v197 = v32;
  uint64_t v198 = v33;
  uint64_t v34 = __chkstk_darwin(v32);
  v181 = (char *)&v149 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  v168 = (char *)&v149 - v37;
  __chkstk_darwin(v36);
  v189 = (char *)&v149 - v38;
  uint64_t v39 = sub_10000772C(&qword_1000820F8);
  __chkstk_darwin(v39 - 8);
  v188 = (char *)&v149 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = sub_10006EE90();
  uint64_t v172 = *(void *)(v192 - 8);
  __chkstk_darwin(v192);
  v171 = (char *)&v149 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = (void (*)(char *, unint64_t, uint64_t))sub_10006EA50();
  uint64_t v177 = *((void *)v176 - 1);
  __chkstk_darwin(v176);
  v175 = (char *)&v149 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10006E9E0();
  uint64_t v196 = *(void *)(v43 - 8);
  uint64_t v44 = __chkstk_darwin(v43);
  uint64_t v46 = (char *)&v149 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __chkstk_darwin(v44);
  unint64_t v49 = (char *)&v149 - v48;
  __chkstk_darwin(v47);
  unint64_t v51 = (char *)&v149 - v50;
  uint64_t v52 = sub_10006EA70();
  uint64_t v53 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v55 = (char *)&v149 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = a2;
  uint64_t v56 = v202;
  uint64_t result = sub_10006E7E0();
  if (v56) {
    return result;
  }
  v155 = v55;
  uint64_t v157 = v53;
  uint64_t v156 = v52;
  v152 = v49;
  v151 = v46;
  uint64_t v184 = result;
  v201 = v58;
  uint64_t v202 = 0;
  uint64_t v166 = a1;
  uint64_t v59 = v196;
  uint64_t v61 = v196 + 16;
  uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t))(v196 + 16);
  v60(v51, v199, v43);
  v154 = *(uint64_t (**)(char *, uint64_t))(v59 + 88);
  int v62 = v154(v51, v43);
  uint64_t v63 = v43;
  uint64_t v153 = v59 + 88;
  if (v62 == enum case for TypeDefinition.query(_:))
  {
    (*(void (**)(char *, uint64_t))(v59 + 96))(v51, v43);
    uint64_t v64 = v157;
    unint64_t v65 = v155;
    uint64_t v66 = v156;
    (*(void (**)(char *, char *))(v157 + 32))(v155, v51);
    uint64_t v67 = v175;
    sub_10006EA60();
    uint64_t v68 = v202;
    sub_10006E720();
    uint64_t v202 = v68;
    if (v68)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void (*)(char *, unint64_t, uint64_t)))(v177 + 8))(v67, v176);
      return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v65, v66);
    }
    v150 = v60;
    (*(void (**)(char *, void (*)(char *, unint64_t, uint64_t)))(v177 + 8))(v67, v176);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
  }
  else
  {
    v150 = v60;
    (*(void (**)(char *, uint64_t))(v59 + 8))(v51, v43);
  }
  uint64_t v69 = (uint64_t)v188;
  sub_10006E9C0();
  uint64_t v70 = v192;
  int v71 = sub_100007800(v69, 1, v192);
  id v72 = v200;
  id v73 = v189;
  if (v71 == 1)
  {
    uint64_t result = sub_1000078D0(v69, &qword_1000820F8);
LABEL_9:
    uint64_t v74 = v167;
    uint64_t v75 = (uint64_t)v201;
    uint64_t *v167 = v184;
    v74[1] = v75;
    return result;
  }
  uint64_t v157 = v61;
  uint64_t v156 = v63;
  uint64_t v76 = v172;
  uint64_t v77 = v69;
  uint64_t v78 = v171;
  (*(void (**)(char *, uint64_t, uint64_t))(v172 + 32))(v171, v77, v70);
  v188 = (char *)sub_10006EE70();
  int64_t v80 = v79;
  v176 = (void (*)(char *, unint64_t, uint64_t))sub_10006EE60();
  uint64_t v82 = v81;
  v175 = (char *)sub_10006EE80();
  id v83 = [v72 locale];
  sub_10006DEA0();

  sub_10006DE50();
  uint64_t v85 = v84;
  uint64_t v86 = v198 + 8;
  unint64_t v87 = *(void (**)(char *, uint64_t))(v198 + 8);
  v87(v73, v197);
  v148._countAndFlagsBits = v85;
  v203._countAndFlagsBits = v184;
  v203._object = v201;
  v205._countAndFlagsBits = (uint64_t)v188;
  uint64_t v177 = (uint64_t)v80;
  v205._object = v80;
  v207.value._countAndFlagsBits = (uint64_t)v176;
  v188 = v82;
  v207.value._object = v82;
  v88._rawValue = v175;
  uint64_t v89 = v202;
  sub_10006E780(v203, v205, v207, v88, v148);
  uint64_t v202 = v89;
  if (v89)
  {
    (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v192);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  id v90 = v200;
  v189 = (char *)v87;
  uint64_t v198 = v86;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v91 = v152;
  uint64_t v92 = v156;
  v150(v152, v199, v156);
  if (v154(v91, v92) == enum case for TypeDefinition.entity(_:))
  {
    (*(void (**)(char *, uint64_t))(v196 + 96))(v91, v92);
    uint64_t v93 = v164;
    v94 = v163;
    uint64_t v95 = v165;
    (*(void (**)(char *, char *, uint64_t))(v164 + 32))(v163, v91, v165);
    uint64_t v96 = sub_10006EAB0();
    uint64_t v97 = *(void *)(v96 + 16);
    if (v97)
    {
      v176 = (void (*)(char *, unint64_t, uint64_t))*((void *)v174 + 2);
      unint64_t v98 = (v174[80] + 32) & ~(unint64_t)v174[80];
      v152 = (char *)v96;
      unint64_t v99 = v96 + v98;
      v175 = (char *)(v158 + 1);
      v158 = (void (**)(char *, uint64_t))(v174 + 8);
      v155 = (char *)*((void *)v174 + 9);
      uint64_t v100 = v173;
      uint64_t v101 = v159;
      v174 += 16;
      uint64_t v102 = v184;
      while (1)
      {
        uint64_t v177 = v97;
        v176(v101, v99, v100);
        sub_10006EDE0();
        unint64_t v103 = v169;
        sub_10006EDF0();
        uint64_t v104 = v201;
        uint64_t v105 = v202;
        sub_10006E6D0();
        if (v105)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(void, void (*)(void)))v175)(v103, v170);
          goto LABEL_51;
        }
        (*(void (**)(void, void (*)(void)))v175)(v103, v170);
        swift_bridgeObjectRelease();
        uint64_t v202 = 0;
        v188 = (char *)sub_10006EDE0();
        unint64_t v107 = v106;
        id v108 = [v200 locale];
        id v109 = v168;
        sub_10006DEA0();

        uint64_t v110 = sub_10006DE50();
        char v112 = v111;
        ((void (*)(char *, uint64_t))v189)(v109, v197);
        v209._countAndFlagsBits = sub_10006EDD0();
        v114 = v113;
        v204._countAndFlagsBits = v102;
        v204._object = v104;
        v206._countAndFlagsBits = (uint64_t)v188;
        v206._object = v107;
        v208._countAndFlagsBits = v110;
        v208._object = v112;
        v209._object = v114;
        uint64_t v115 = v202;
        sub_10006E790(v204, v206, v208, v209);
        if (v115) {
          break;
        }
        uint64_t v202 = 0;
        uint64_t v100 = v173;
        (*v158)(v101, v173);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v99 += (unint64_t)v155;
        uint64_t v97 = v177 - 1;
        uint64_t v117 = (uint64_t)v190;
        uint64_t v116 = (uint64_t)v191;
        if (v177 == 1)
        {
          swift_bridgeObjectRelease();
          id v90 = v200;
          uint64_t v95 = v165;
          uint64_t v93 = v164;
          v94 = v163;
          goto LABEL_22;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_51:
      (*v158)(v101, v173);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v164 + 8))(v163, v165);
      return (*(uint64_t (**)(char *, uint64_t))(v172 + 8))(v171, v192);
    }
    swift_bridgeObjectRelease();
    uint64_t v117 = (uint64_t)v190;
    uint64_t v116 = (uint64_t)v191;
LABEL_22:
    (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v95);
    uint64_t v118 = (uint64_t)v186;
    char v119 = v187;
    uint64_t v92 = v156;
    uint64_t v120 = v151;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v196 + 8))(v91, v92);
    uint64_t v117 = (uint64_t)v190;
    uint64_t v116 = (uint64_t)v191;
    uint64_t v118 = (uint64_t)v186;
    char v119 = v187;
    uint64_t v120 = v151;
  }
  v150(v120, v199, v92);
  if (v154(v120, v92) != enum case for TypeDefinition.enumeration(_:))
  {
    (*(void (**)(char *, uint64_t))(v172 + 8))(v171, v192);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v196 + 8))(v120, v92);
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t))(v196 + 96))(v120, v92);
  (*(void (**)(char *, char *, uint64_t))(v161 + 32))(v160, v120, v162);
  uint64_t v121 = sub_10006ED30();
  uint64_t v122 = *(void *)(v121 + 16);
  if (!v122)
  {
LABEL_46:
    swift_bridgeObjectRelease();
    uint64_t v145 = v172;
    uint64_t v146 = v192;
    v147 = v171;
    (*(void (**)(char *, uint64_t))(v161 + 8))(v160, v162);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v145 + 8))(v147, v146);
    goto LABEL_9;
  }
  v170 = *(void (**)(void))(v185 + 16);
  unint64_t v123 = (*(unsigned __int8 *)(v185 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v185 + 80);
  uint64_t v165 = v121;
  id v124 = (char *)(v121 + v123);
  v169 = (void (**)(char *, uint64_t))(v185 + 8);
  v168 = *(char **)(v185 + 72);
  id v125 = v90;
  v185 += 16;
  while (1)
  {
    v174 = v124;
    v170(v119);
    id v126 = [v125 locale];
    uint64_t v127 = v181;
    sub_10006DEA0();

    v188 = (char *)sub_10006DE50();
    uint64_t v199 = v128;
    ((void (*)(char *, uint64_t))v189)(v127, v197);
    uint64_t v177 = sub_10006EE40();
    uint64_t v196 = v129;
    uint64_t v130 = (uint64_t)v182;
    sub_10006EE20();
    uint64_t v131 = sub_10006ED00();
    if (sub_100007800(v130, 1, v131) == 1)
    {
      sub_1000078D0(v130, &qword_1000820F0);
      v175 = 0;
      v176 = 0;
    }
    else
    {
      v175 = (char *)sub_10006EC80();
      v176 = v132;
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v131 - 8) + 8))(v130, v131);
    }
    uint64_t v133 = (uint64_t)v179;
    sub_10006EE20();
    if (sub_100007800(v117, 1, v131) == 1)
    {
      sub_1000078D0(v117, &qword_1000820F0);
      uint64_t v134 = sub_10000772C(&qword_100082100);
      sub_100007770(v193, 1, 1, v134);
    }
    else
    {
      sub_10006ECE0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v131 - 8) + 8))(v117, v131);
    }
    sub_10006EE20();
    if (sub_100007800(v118, 1, v131) == 1)
    {
      sub_1000078D0(v118, &qword_1000820F0);
      uint64_t v135 = sub_10000772C(&qword_100082108);
      sub_100007770(v195, 1, 1, v135);
    }
    else
    {
      sub_10006ECC0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v131 - 8) + 8))(v118, v131);
    }
    uint64_t v136 = (uint64_t)v180;
    uint64_t v137 = (uint64_t)v178;
    sub_10006EE20();
    if (sub_100007800(v137, 1, v131) == 1)
    {
      sub_1000078D0(v137, &qword_1000820F0);
      uint64_t v138 = sub_10000772C(&qword_100082110);
      sub_100007770(v116, 1, 1, v138);
    }
    else
    {
      sub_10006EC60();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v131 - 8) + 8))(v137, v131);
    }
    sub_10006EE20();
    if (sub_100007800(v133, 1, v131) == 1)
    {
      sub_1000078D0(v133, &qword_1000820F0);
      uint64_t v139 = sub_10006EC10();
      sub_100007770(v194, 1, 1, v139);
    }
    else
    {
      sub_10006EC40();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v131 - 8) + 8))(v133, v131);
    }
    sub_10006EE20();
    int v140 = sub_100007800(v136, 1, v131);
    uint64_t v173 = v122;
    if (v140 == 1)
    {
      sub_1000078D0(v136, &qword_1000820F0);
    }
    else
    {
      sub_10006ECF0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v131 - 8) + 8))(v136, v131);
    }
    uint64_t v142 = v193;
    uint64_t v141 = v194;
    uint64_t v143 = v202;
    uint64_t v116 = (uint64_t)v191;
    uint64_t v144 = v195;
    sub_10006E6F0();
    if (v143) {
      break;
    }
    uint64_t v202 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000078D0(v141, &qword_1000820D0);
    sub_1000078D0(v116, &qword_1000820D8);
    sub_1000078D0(v144, &qword_1000820E0);
    sub_1000078D0(v142, &qword_1000820E8);
    char v119 = v187;
    (*v169)(v187, v183);
    id v124 = &v168[(void)v174];
    uint64_t v122 = v173 - 1;
    id v125 = v200;
    uint64_t v118 = (uint64_t)v186;
    uint64_t v117 = (uint64_t)v190;
    if (v173 == 1) {
      goto LABEL_46;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000078D0(v141, &qword_1000820D0);
  sub_1000078D0(v116, &qword_1000820D8);
  sub_1000078D0(v144, &qword_1000820E0);
  sub_1000078D0(v142, &qword_1000820E8);
  (*v169)(v187, v183);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v161 + 8))(v160, v162);
  return (*(uint64_t (**)(char *, uint64_t))(v172 + 8))(v171, v192);
}

uint64_t sub_10001542C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a4;
  uint64_t v19 = a1;
  uint64_t v20 = a3;
  uint64_t v5 = sub_10006EBC0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10006E9B0();
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v11 = v6 + 16;
    uint64_t v17 = v9;
    uint64_t v18 = v12;
    unint64_t v13 = v9 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v15 = *(void *)(v11 + 56);
    while (1)
    {
      v18(v8, v13, v5);
      sub_10006E730();
      if (v4) {
        break;
      }
      (*v14)(v8, v5);
      v13 += v15;
      if (!--v10) {
        return swift_bridgeObjectRelease();
      }
    }
    (*v14)(v8, v5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000155B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v57 = a4;
  uint64_t v55 = a1;
  uint64_t v56 = a3;
  uint64_t v37 = sub_10006E2A0();
  uint64_t v5 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10006EB10();
  uint64_t v8 = *(void *)(v51 - 8);
  uint64_t v9 = __chkstk_darwin(v51);
  uint64_t v50 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v49 = (char *)&v34 - v11;
  uint64_t v12 = sub_10006EB30();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_10006E9D0();
  uint64_t v17 = result;
  uint64_t v40 = *(void *)(result + 16);
  if (!v40) {
    return swift_bridgeObjectRelease();
  }
  unint64_t v18 = 0;
  unint64_t v48 = result + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v47 = v13 + 16;
  unsigned int v44 = enum case for CoercionDefinition.Direction.export(_:);
  uint64_t v42 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v43 = (void (**)(char *, void, uint64_t))(v8 + 104);
  uint64_t v53 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v54 = v5 + 16;
  uint64_t v45 = result;
  uint64_t v46 = (void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v38 = v5;
  uint64_t v41 = v12;
  uint64_t v35 = v15;
  uint64_t v39 = v13;
  while (v18 < *(void *)(v17 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v15, v48 + *(void *)(v13 + 72) * v18, v12);
    sub_10006E6B0();
    if (v4)
    {
      (*v46)(v15, v12);
      return swift_bridgeObjectRelease();
    }
    unint64_t v52 = v18;
    uint64_t v19 = v49;
    sub_10006EB20();
    uint64_t v20 = v50;
    uint64_t v21 = v51;
    (*v43)(v50, v44, v51);
    char v22 = sub_10006EB00();
    uint64_t v23 = v15;
    uint64_t v24 = *v42;
    (*v42)(v20, v21);
    v24(v19, v21);
    if (v22)
    {
      uint64_t v25 = sub_10006EAF0();
      uint64_t v26 = *(void *)(v25 + 16);
      if (v26)
      {
        uint64_t v27 = *(unsigned __int8 *)(v38 + 80);
        uint64_t v36 = v25;
        uint64_t v28 = v25 + ((v27 + 32) & ~v27);
        uint64_t v29 = *(void *)(v38 + 72);
        uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
        uint64_t v31 = v37;
        do
        {
          v30(v7, v28, v31);
          v59._countAndFlagsBits = sub_10006E290();
          uint64_t v33 = v32;
          v58._countAndFlagsBits = v56;
          v58._object = v57;
          v59._object = v33;
          sub_10006E6E0(v58, v59);
          (*v53)(v7, v31);
          swift_bridgeObjectRelease();
          v28 += v29;
          --v26;
        }
        while (v26);
        swift_bridgeObjectRelease();
        uint64_t v12 = v41;
        uint64_t v17 = v45;
        uint64_t v15 = v35;
      }
      else
      {
        uint64_t v15 = v23;
        swift_bridgeObjectRelease();
        uint64_t v17 = v45;
        uint64_t v12 = v41;
      }
    }
    else
    {
      uint64_t v15 = v23;
      uint64_t v12 = v41;
      uint64_t v17 = v45;
    }
    unint64_t v18 = v52 + 1;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v46)(v15, v12);
    uint64_t v13 = v39;
    if (v18 == v40) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

void sub_100015A6C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void (*a5)(char *, uint64_t, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v68 = a3;
  uint64_t v69 = a5;
  uint64_t v62 = a4;
  uint64_t v63 = a6;
  uint64_t v64 = a1;
  uint64_t v65 = a2;
  uint64_t v6 = sub_10006EE90();
  __chkstk_darwin(v6 - 8);
  uint64_t v61 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10006ED20();
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  Swift::String v59 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_10006EA40();
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v57 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000772C(&qword_1000820D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v73 = (uint64_t)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000772C(&qword_100082148);
  __chkstk_darwin(v12 - 8);
  uint64_t v75 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000772C(&qword_1000820F0);
  __chkstk_darwin(v14 - 8);
  id v72 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10006DFF0();
  uint64_t v76 = *(void *)(v16 - 8);
  uint64_t v77 = v16;
  __chkstk_darwin(v16);
  unint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10006EE50();
  uint64_t v74 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10006E040();
  uint64_t v67 = *(void (***)(char *, uint64_t))(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10006ED40();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v71;
  uint64_t v30 = sub_10006F390();
  if (v29)
  {
    *(void *)uint64_t v69 = v29;
  }
  else
  {
    uint64_t v31 = (void *)v30;
    uint64_t v54 = v26;
    uint64_t v66 = v22;
    uint64_t v70 = v19;
    int v71 = v21;
    uint64_t v32 = v76;
    if (v30)
    {
      sub_10006E020();
      sub_10006F330();
      v67[1](v24, v66);

      uint64_t v50 = v63;
      (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v63, v28, v25);
      uint64_t v51 = enum case for TypeDefinition.enumeration(_:);
      uint64_t v52 = sub_10006E9E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 104))(v50, v51, v52);
    }
    else
    {
      uint64_t v54 = 0;
      uint64_t v33 = *(void *)(v68 + 16);
      if (v33)
      {
        uint64_t v34 = v68;
        uint64_t v78 = _swiftEmptyArrayStorage;
        sub_100069008(0, v33, 0);
        uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
        uint64_t v36 = v34 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
        uint64_t v68 = *(void *)(v32 + 72);
        uint64_t v69 = v35;
        uint64_t v37 = (uint64_t)v75;
        uint64_t v66 = v74 + 32;
        uint64_t v67 = (void (**)(char *, uint64_t))(v32 + 8);
        uint64_t v38 = v77;
        uint64_t v76 = v32 + 16;
        do
        {
          v69(v18, v36, v38);
          sub_10006DFE0();
          sub_10006DFE0();
          uint64_t v39 = sub_10006EC50();
          sub_100007770(v37, 1, 1, v39);
          uint64_t v40 = sub_10006EC10();
          sub_100007770(v73, 1, 1, v40);
          uint64_t v38 = v77;
          uint64_t v41 = (uint64_t)v72;
          uint64_t v37 = (uint64_t)v75;
          sub_10006EC70();
          uint64_t v42 = sub_10006ED00();
          sub_100007770(v41, 0, 1, v42);
          sub_10006EE30();
          (*v67)(v18, v38);
          uint64_t v43 = v78;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100069008(0, v43[2] + 1, 1);
            uint64_t v38 = v77;
            uint64_t v43 = v78;
          }
          unsigned int v44 = v71;
          unint64_t v46 = v43[2];
          unint64_t v45 = v43[3];
          if (v46 >= v45 >> 1)
          {
            sub_100069008(v45 > 1, v46 + 1, 1);
            unsigned int v44 = v71;
            uint64_t v38 = v77;
            uint64_t v43 = v78;
          }
          v43[2] = v46 + 1;
          (*(void (**)(unint64_t, char *))(v74 + 32))((unint64_t)v43+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(void *)(v74 + 72) * v46, v44);
          uint64_t v78 = v43;
          v36 += v68;
          --v33;
        }
        while (v33);
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v57, v64, v56);
      (*(void (**)(char *, void, uint64_t))(v58 + 104))(v59, enum case for EnumerationDefinition.Kind.actionEnum(_:), v60);
      sub_10006F2E0();
      uint64_t v47 = v63;
      sub_10006ED10();
      uint64_t v48 = enum case for TypeDefinition.enumeration(_:);
      uint64_t v49 = sub_10006E9E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 104))(v47, v48, v49);
    }
  }
}

uint64_t sub_100016304()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100016334()
{
  sub_100016304();
  return _swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for TypeIndexer()
{
  return self;
}

void sub_10001638C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100013AC8(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1000163A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolKitIndexer.TypeRegistryKey(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100016404@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100013B64(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), a2);
}

uint64_t sub_100016424(uint64_t a1)
{
  return sub_10001542C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100016444(uint64_t a1)
{
  return sub_1000155B0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100016464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitIndexer.TypeRegistryKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000164C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100013850(a1, *(void *)(v2 + 24), *(void **)(v2 + 40), a2);
}

uint64_t sub_1000164E8(uint64_t a1)
{
  return sub_100012C40(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_10001650C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100016518(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_100016540()
{
  return v0;
}

uint64_t sub_100016558()
{
  return v0;
}

uint64_t sub_10001656C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  uint64_t v2 = sub_100057770();
  sub_100053148(v2, v3);
  os_unfair_lock_unlock(v1 + 6);
  swift_release();
  return v5;
}

uint64_t sub_1000165E4()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_100057770();
  sub_100053128();
  os_unfair_lock_unlock(v1 + 6);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_100016668(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_10006F570();
    sub_10001028C(0, &qword_100082400);
    sub_1000525E0(&qword_100082408, &qword_100082400);
    sub_10006F1F0();
    uint64_t v1 = v18;
    uint64_t v16 = v19;
    uint64_t v2 = v20;
    int64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v9 = (v4 - 1) & v4;
      unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
      int64_t v11 = v3;
      goto LABEL_29;
    }
    int64_t v13 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v13 >= v8) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v16 + 8 * v13);
    int64_t v11 = v3 + 1;
    if (!v14)
    {
      int64_t v11 = v3 + 2;
      if (v3 + 2 >= v8) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v16 + 8 * v11);
      if (!v14)
      {
        int64_t v11 = v3 + 3;
        if (v3 + 3 >= v8) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v16 + 8 * v11);
        if (!v14)
        {
          int64_t v11 = v3 + 4;
          if (v3 + 4 >= v8) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v16 + 8 * v11);
          if (!v14)
          {
            int64_t v11 = v3 + 5;
            if (v3 + 5 >= v8) {
              goto LABEL_37;
            }
            unint64_t v14 = *(void *)(v16 + 8 * v11);
            if (!v14)
            {
              int64_t v15 = v3 + 6;
              while (v15 < v8)
              {
                unint64_t v14 = *(void *)(v16 + 8 * v15++);
                if (v14)
                {
                  int64_t v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_37:
              sub_1000102C8();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
LABEL_29:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_37;
    }
    while (1)
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        sub_10006F0D0();
        if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_10006F120();
        }
        sub_10006F140();
        sub_10006F110();
      }
      else
      {
      }
      int64_t v3 = v11;
      unint64_t v4 = v9;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_10006F5A0())
      {
        sub_10001028C(0, &qword_100082400);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v12 = v17;
        swift_unknownObjectRelease();
        int64_t v11 = v3;
        uint64_t v9 = v4;
        if (v17) {
          continue;
        }
      }
      goto LABEL_37;
    }
  }
  __break(1u);
}

char *sub_1000169B4(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_10000772C(&qword_1000824E0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (void *)((char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10006E880();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v26 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v24 = (char *)v21 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = a1 + 32;
    v21[1] = a1;
    uint64_t v22 = v11;
    uint64_t v25 = (void (**)(char *, uint64_t *, uint64_t))(v11 + 32);
    swift_bridgeObjectRetain();
    int64_t v15 = (char *)&_swiftEmptyArrayStorage;
    uint64_t v23 = a2;
    while (1)
    {
      sub_1000425B4(v14, a2, v7);
      if (v2) {
        break;
      }
      if (sub_100007800((uint64_t)v7, 1, v8) == 1)
      {
        sub_100053404((uint64_t)v7, &qword_1000824E0);
      }
      else
      {
        uint64_t v16 = v24;
        uint64_t v17 = *v25;
        (*v25)(v24, v7, v8);
        v17(v26, (uint64_t *)v16, v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v15 = (char *)sub_1000675C4(0, *((void *)v15 + 2) + 1, 1, (uint64_t)v15);
        }
        unint64_t v19 = *((void *)v15 + 2);
        unint64_t v18 = *((void *)v15 + 3);
        if (v19 >= v18 >> 1) {
          int64_t v15 = (char *)sub_1000675C4(v18 > 1, v19 + 1, 1, (uint64_t)v15);
        }
        *((void *)v15 + 2) = v19 + 1;
        v17(&v15[((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v19], (uint64_t *)v26, v8);
        a2 = v23;
      }
      v14 += 32;
      if (!--v13)
      {

        swift_bridgeObjectRelease();
        return v15;
      }
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    return (char *)&_swiftEmptyArrayStorage;
  }
  return v15;
}

void sub_100016C7C(uint64_t a1, void (*a2)(void))
{
  uint64_t v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_10006F570();
    sub_10001028C(0, &qword_100082400);
    sub_1000525E0(&qword_100082408, &qword_100082400);
    sub_100057DB4();
    sub_10006F1F0();
    uint64_t v5 = v18;
    uint64_t v16 = v19;
    uint64_t v6 = v20;
    int64_t v7 = v21;
    unint64_t v2 = v22;
  }
  else
  {
    uint64_t v16 = a1 + 56;
    uint64_t v6 = ~(-1 << *(unsigned char *)(a1 + 32));
    sub_100058B70();
    swift_bridgeObjectRetain();
    int64_t v7 = 0;
  }
  int64_t v8 = (unint64_t)(v6 + 64) >> 6;
  if (v5 < 0) {
    goto LABEL_7;
  }
  while (1)
  {
    if (v2)
    {
      uint64_t v3 = (v2 - 1) & v2;
      unint64_t v9 = __clz(__rbit64(v2)) | (v7 << 6);
      int64_t v10 = v7;
      goto LABEL_26;
    }
    int64_t v12 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      break;
    }
    if (v12 >= v8) {
      goto LABEL_34;
    }
    int64_t v10 = v7 + 1;
    if (!*(void *)(v16 + 8 * v12))
    {
      int64_t v10 = v7 + 2;
      if (v7 + 2 >= v8) {
        goto LABEL_34;
      }
      if (!*(void *)(v16 + 8 * v10))
      {
        int64_t v10 = v7 + 3;
        if (v7 + 3 >= v8) {
          goto LABEL_34;
        }
        if (!*(void *)(v16 + 8 * v10))
        {
          int64_t v10 = v7 + 4;
          if (v7 + 4 >= v8) {
            goto LABEL_34;
          }
          if (!*(void *)(v16 + 8 * v10))
          {
            int64_t v10 = v7 + 5;
            if (v7 + 5 >= v8) {
              goto LABEL_34;
            }
            if (!*(void *)(v16 + 8 * v10))
            {
              int64_t v13 = v7 + 6;
              while (v13 < v8)
              {
                if (*(void *)(v16 + 8 * v13++))
                {
                  int64_t v10 = v13 - 1;
                  goto LABEL_25;
                }
              }
LABEL_34:
              sub_1000102C8();
              return;
            }
          }
        }
      }
    }
LABEL_25:
    sub_1000598EC();
    unint64_t v9 = v15 + (v10 << 6);
LABEL_26:
    id v11 = *(id *)(*(void *)(v5 + 48) + 8 * v9);
    if (!v11) {
      goto LABEL_34;
    }
    while (1)
    {
      a2(0);
      if (swift_dynamicCastClass())
      {
        sub_10006F0D0();
        if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_10006F120();
        }
        sub_100059D70();
        sub_10006F140();
        sub_10006F110();
      }
      else
      {
      }
      int64_t v7 = v10;
      unint64_t v2 = v3;
      if ((v5 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_7:
      if (sub_10006F5A0())
      {
        sub_10001028C(0, &qword_100082400);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v11 = v17;
        swift_unknownObjectRelease();
        int64_t v10 = v7;
        uint64_t v3 = v2;
        if (v17) {
          continue;
        }
      }
      goto LABEL_34;
    }
  }
  __break(1u);
}

void *sub_100016FAC(uint64_t a1)
{
  uint64_t result = &_swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      NSString v5 = sub_10006F020();
      id v6 = (id)WFLinkActionIdentifierFromShortcutsActionIdentifier();
      swift_bridgeObjectRelease();

      if (v6)
      {
        sub_10006F0D0();
        if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_10006F120();
        }
        sub_10006F140();
        sub_10006F110();
      }
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1000170B4(void *a1)
{
  uint64_t v2 = sub_10006DDD0();
  uint64_t v16 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = a1;
  sub_10006F230();

  sub_100052038(&qword_1000824B0, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
  sub_10006F4C0();
  if (v22)
  {
    id v6 = &_swiftEmptyArrayStorage;
    do
    {
      sub_1000090F8(&v21, v20);
      sub_100009038((uint64_t)v20, (uint64_t)v17);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v18 = 0;
        uint64_t v19 = 0;
      }
      sub_100052558((uint64_t)v20);
      uint64_t v7 = v19;
      if (v19)
      {
        uint64_t v8 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100067104(0, v6[2] + 1, 1, (uint64_t)v6);
          id v6 = v12;
        }
        unint64_t v10 = v6[2];
        unint64_t v9 = v6[3];
        if (v10 >= v9 >> 1)
        {
          sub_100067104(v9 > 1, v10 + 1, 1, (uint64_t)v6);
          id v6 = v13;
        }
        v6[2] = v10 + 1;
        id v11 = (char *)&v6[2 * v10];
        *((void *)v11 + 4) = v8;
        *((void *)v11 + 5) = v7;
      }
      sub_10006F4C0();
    }
    while (v22);
  }
  else
  {
    id v6 = &_swiftEmptyArrayStorage;
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v2);
  return v6;
}

unint64_t sub_1000172F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_10005303C(a1);
  if (v6) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v7 = 1;
  }
  else
  {
    sub_100052BE0(result, a2);
    uint64_t v7 = 0;
  }
  uint64_t v8 = sub_10006EA40();
  return sub_100007770(a2, v7, 1, v8);
}

id sub_100017390(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_10006F6F0();
  swift_bridgeObjectRelease();
  if (!v3) {
    return 0;
  }
LABEL_3:
  sub_100068F18(0, (a1 & 0xC000000000000001) == 0, a1);
  if ((a1 & 0xC000000000000001) != 0) {
    return (id)sub_10006F620();
  }
  else {
    return *(id *)(a1 + 32);
  }
}

uint64_t sub_100017428()
{
  sub_1000114D4();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = sub_10006E200();
  v1[4] = v3;
  sub_100016518(v3);
  v1[5] = v4;
  v1[6] = sub_1000551C0();
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  uint64_t v5 = sub_10006E120();
  v1[12] = v5;
  sub_100016518(v5);
  v1[13] = v6;
  v1[14] = sub_1000551C0();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  uint64_t v7 = sub_10000772C(&qword_100082590);
  sub_100055A7C(v7);
  v1[17] = sub_1000551C0();
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  uint64_t v8 = sub_10006E160();
  v1[27] = v8;
  sub_100016518(v8);
  v1[28] = v9;
  v1[29] = sub_10005558C();
  sub_1000115E8();
  return _swift_task_switch(v10, v11, v12);
}

uint64_t sub_1000175F8()
{
  uint64_t v4 = (void (**)(void))v0[28];
  uint64_t v3 = (uint64_t *)v0[29];
  sub_1000114F0();
  v5();
  uint64_t v6 = sub_1000588F8();
  int v8 = v7(v6);
  if (v8 != enum case for ToolKitIndexingReason.Changeset.partial(_:))
  {
    if (v8 == enum case for ToolKitIndexingReason.Changeset.full(_:))
    {
      uint64_t v55 = (void *)swift_task_alloc();
      v0[30] = v55;
      *uint64_t v55 = v0;
      v55[1] = sub_100017F9C;
      sub_1000558D4();
      return static LaunchServicesSnapshot.complete()();
    }
    if (v8 != enum case for ToolKitIndexingReason.Changeset.none(_:))
    {
LABEL_60:
      sub_1000558D4();
      return sub_10006F770();
    }
    sub_10006E1C0();
LABEL_63:
    sub_100055814();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001151C();
LABEL_64:
    sub_1000558D4();
    __asm { BRAA            X1, X16 }
  }
  sub_1000596C4();
  uint64_t v9 = v0[5];
  uint64_t v10 = sub_1000596B0();
  v11(v10);
  uint64_t v76 = *v3;
  uint64_t v12 = v3[2];
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_100059CA4();
  uint64_t v14 = v1;
  sub_100007770(v13, v15, v16, v17);
  uint64_t v18 = sub_100059CE4();
  sub_1000532F0(v18, v19, v20);
  uint64_t v80 = v12 + 56;
  sub_100057398();
  uint64_t v23 = v22 & v21;
  sub_100058870();
  uint64_t v81 = v24;
  int v83 = enum case for ToolKitIndexingReason.Changeset.Provenance.launchServicesSnapshot(_:);
  int v79 = enum case for ToolKitIndexingReason.Changeset.Provenance.appIntentsChange(_:);
  int v78 = enum case for ToolKitIndexingReason.Changeset.Provenance.appProtectionChange(_:);
  int v77 = enum case for ToolKitIndexingReason.Changeset.Provenance.cascadeSync(_:);
  uint64_t v84 = (void (**)(void))(v9 + 32);
  uint64_t v82 = (void (**)(void))(v9 + 8);
  swift_bridgeObjectRetain();
  uint64_t v25 = 0;
  if (!v23) {
    goto LABEL_4;
  }
LABEL_3:
  uint64_t v85 = (v23 - 1) & v23;
  for (uint64_t i = v25; ; uint64_t i = v37)
  {
    uint64_t v12 = v0[16];
    uint64_t v2 = v0[14];
    uint64_t v38 = *(void (**)(void))(v14 + 16);
    sub_100055580();
    v38();
    sub_10005524C();
    v39();
    sub_100055580();
    v38();
    sub_100059578();
    sub_100057318();
    int v41 = v40();
    if (v41 == v83)
    {
      uint64_t v42 = v0[20];
      uint64_t v38 = (void (*)(void))v0[4];
      sub_100055574();
      v43();
      unsigned int v44 = *v84;
      sub_100055548();
      v44();
      uint64_t v45 = sub_100058EB4();
      sub_1000532F0(v45, v46, &qword_100082590);
      uint64_t v12 = 1;
      sub_100055CAC(v42);
      if (!v47)
      {
        sub_10005865C();
        sub_100055548();
        v44();
        sub_100052038(&qword_100082598, (void (*)(uint64_t))&type metadata accessor for LaunchServicesSnapshot);
        sub_100057C38();
        if (v4)
        {
          uint64_t v65 = v0[24];
          uint64_t v66 = *v82;
          sub_100055228();
          v66();
          sub_100058750();
          sub_100055228();
          v66();
          sub_100058538();
          sub_1000551DC();
          v67();
          swift_release();
          sub_100053404(v65, &qword_100082590);
          swift_bridgeObjectRelease();
          sub_100059C08();
          swift_bridgeObjectRelease();
          sub_1000571C4();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          sub_100055AFC();
          goto LABEL_64;
        }
        sub_1000551DC();
        v48();
        uint64_t v12 = 0;
      }
      sub_1000572B4();
      uint64_t v49 = *v4;
      uint64_t v50 = sub_1000586E0();
      ((void (*)(uint64_t))v49)(v50);
      sub_100059DE8();
      if (v47)
      {
        sub_1000594F0();
        v49();
        sub_100053404(v12, &qword_100082590);
      }
      else
      {
        sub_100055548();
        v44();
      }
      sub_1000594DC();
      uint64_t v2 = (uint64_t)v82;
      uint64_t v52 = *v82;
      sub_100055240();
      v52();
      sub_100055240();
      v52();
      sub_1000585E4(v12);
      uint64_t v14 = v1;
    }
    else if (v41 == v79)
    {
      uint64_t v12 = v0[14];
      sub_1000532F0(v0[24], v0[22], &qword_100082590);
      sub_100058EB4();
      sub_1000551DC();
      v51();
    }
    else
    {
      if (v41 != v78 && v41 != v77) {
        goto LABEL_60;
      }
      sub_1000532F0(v0[24], v0[22], &qword_100082590);
    }
    sub_100057AA0();
    sub_100058750();
    sub_1000551DC();
    v53();
    sub_100053404(v12, &qword_100082590);
    sub_100053348((uint64_t)v38, v12, &qword_100082590);
    uint64_t v23 = v85;
    uint64_t v25 = i;
    if (v85) {
      goto LABEL_3;
    }
LABEL_4:
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
      goto LABEL_68;
    }
    if (v27 >= v81) {
      goto LABEL_46;
    }
    if (!*(void *)(v80 + 8 * v27))
    {
      sub_1000587E0();
      if (v28 == v26) {
        goto LABEL_46;
      }
      sub_1000587B0();
      if (!v29)
      {
        sub_1000587E0();
        if (v28 == v26) {
          goto LABEL_46;
        }
        sub_1000587B0();
        if (!v30)
        {
          sub_1000587E0();
          if (v28 == v26) {
            goto LABEL_46;
          }
          sub_1000587B0();
          if (!v31)
          {
            sub_1000587E0();
            if (v28 == v26) {
              goto LABEL_46;
            }
            sub_1000587B0();
            if (!v32)
            {
              sub_1000587E0();
              if (v28 == v26)
              {
LABEL_46:
                sub_100059470();
                swift_release();
                sub_100053348((uint64_t)v4, v12, &qword_100082590);
                sub_100053404(v23, &qword_100082590);
                swift_bridgeObjectRelease();
                sub_1000532F0(v12, v14, &qword_100082590);
                sub_100055EE0(v14, 1, v2);
                if (v47)
                {
                  Swift::String v59 = &_swiftEmptySetSingleton;
                }
                else
                {
                  uint64_t v23 = v0[4];
                  sub_10005524C();
                  v57();
                  uint64_t v58 = sub_10006E1A0();
                  Swift::String v59 = (void *)sub_10001990C(v58);
                  uint64_t v60 = sub_1000572EC();
                  v61(v60);
                }
                uint64_t v62 = sub_1000424BC((uint64_t)v59, v76);
                v0[32] = v62;
                swift_bridgeObjectRelease();
                if (v62[2])
                {
                  uint64_t v63 = (void *)swift_task_alloc();
                  v0[33] = v63;
                  void *v63 = v0;
                  v63[1] = sub_100018078;
                  sub_1000593F8();
                  sub_1000558D4();
                  return static LaunchServicesSnapshot.partial(_:failIfContainerNotFound:)();
                }
                sub_1000593D8();
                sub_1000532F0(v23, (uint64_t)v59, &qword_100082590);
                sub_100059CB8();
                if (v47)
                {
                  sub_10006E1C0();
                  uint64_t v68 = sub_100057804();
                  sub_100053404(v68, v69);
                  sub_100053404((uint64_t)v62, &qword_100082590);
                }
                else
                {
                  sub_100053404(v23, &qword_100082590);
                  uint64_t v71 = sub_1000586C8();
                  v72(v71);
                }
                goto LABEL_63;
              }
              sub_1000587B0();
              if (!v34) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_22:
    sub_100011720();
    uint64_t v85 = v36 & v35;
  }
  while (1)
  {
    uint64_t v54 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v54 >= v81) {
      goto LABEL_46;
    }
    ++v33;
    if (*(void *)(v80 + 8 * v54)) {
      goto LABEL_22;
    }
  }
LABEL_68:
  __break(1u);
  return static LaunchServicesSnapshot.partial(_:failIfContainerNotFound:)();
}

uint64_t sub_100017F9C()
{
  sub_1000114D4();
  sub_100011474();
  sub_1000114FC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1000114E0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 248) = v0;
  swift_task_dealloc();
  sub_1000115E8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_100018078()
{
  sub_1000114D4();
  sub_100011474();
  sub_1000114FC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1000114E0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 272) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_1000115E8();
  return _swift_task_switch(v7, v8, v9);
}

#error "1000181E4: call analysis failed (funcsize=159)"

uint64_t sub_1000183F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_100056444();
  sub_1000579CC();
  sub_100053404(*(void *)(v22 + 208), &qword_100082590);
  sub_1000552CC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100058F90();
  sub_100055E88();
  return v24(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_100018500()
{
  sub_1000114D4();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = sub_10006E0A0();
  v1[4] = v3;
  sub_100016518(v3);
  v1[5] = v4;
  v1[6] = sub_1000551C0();
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  uint64_t v5 = sub_10006E120();
  v1[12] = v5;
  sub_100016518(v5);
  v1[13] = v6;
  v1[14] = sub_1000551C0();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  uint64_t v7 = sub_10000772C(&qword_100082578);
  sub_100055A7C(v7);
  v1[17] = sub_1000551C0();
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  uint64_t v8 = sub_10006E160();
  v1[27] = v8;
  sub_100016518(v8);
  v1[28] = v9;
  v1[29] = sub_10005558C();
  sub_1000115E8();
  return _swift_task_switch(v10, v11, v12);
}

uint64_t sub_1000186D0()
{
  uint64_t v4 = v0[28];
  uint64_t v3 = (uint64_t *)v0[29];
  uint64_t v5 = (void (*)(void))v0[27];
  sub_1000114F0();
  v6();
  uint64_t v7 = sub_1000588F8();
  int v9 = v8(v7);
  if (v9 != enum case for ToolKitIndexingReason.Changeset.partial(_:))
  {
    if (v9 == enum case for ToolKitIndexingReason.Changeset.full(_:))
    {
      uint64_t v53 = (void *)swift_task_alloc();
      v0[30] = v53;
      *uint64_t v53 = v0;
      v53[1] = sub_100019074;
      sub_1000558D4();
      return static LinkSnapshot.complete()();
    }
    if (v9 != enum case for ToolKitIndexingReason.Changeset.none(_:))
    {
LABEL_63:
      sub_1000558D4();
      return sub_10006F770();
    }
    sub_10006E070();
LABEL_66:
    sub_100055814();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001151C();
LABEL_67:
    sub_1000558D4();
    __asm { BRAA            X1, X16 }
  }
  sub_1000596C4();
  uint64_t v10 = v0[5];
  uint64_t v11 = sub_1000596B0();
  v12(v11);
  uint64_t v76 = *v3;
  uint64_t v13 = v3[2];
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_100059CA4();
  sub_100007770(v14, v15, v16, v17);
  uint64_t v18 = v4;
  uint64_t v19 = v1;
  sub_1000532F0(v18, (uint64_t)v5, &qword_100082578);
  uint64_t v83 = v13 + 56;
  sub_100057398();
  uint64_t v22 = v21 & v20;
  sub_100058870();
  uint64_t v84 = v23;
  int v85 = enum case for ToolKitIndexingReason.Changeset.Provenance.launchServicesSnapshot(_:);
  int v81 = enum case for ToolKitIndexingReason.Changeset.Provenance.appIntentsChange(_:);
  int v79 = enum case for ToolKitIndexingReason.Changeset.Provenance.appProtectionChange(_:);
  int v77 = enum case for ToolKitIndexingReason.Changeset.Provenance.cascadeSync(_:);
  uint64_t v82 = (void (**)(void))(v10 + 32);
  uint64_t v80 = (void (**)(void))(v10 + 8);
  swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  int v78 = v19;
  if (!v22) {
    goto LABEL_4;
  }
LABEL_3:
  for (v22 &= v22 - 1; ; uint64_t v22 = v34 & v33)
  {
    uint64_t v13 = v0[16];
    uint64_t v2 = v0[14];
    uint64_t v5 = v19[2];
    sub_100055580();
    v5();
    sub_10005524C();
    v35();
    sub_100055580();
    v5();
    sub_100059578();
    sub_100057318();
    int v37 = v36();
    if (v37 == v85)
    {
      uint64_t v13 = v0[14];
      uint64_t v5 = (void (*)(void))v0[12];
      sub_1000532F0(v0[24], v0[22], &qword_100082578);
      sub_100055B70();
      v38();
    }
    else if (v37 == v81)
    {
      uint64_t v39 = v0[20];
      uint64_t v5 = (void (*)(void))v0[4];
      sub_100055574();
      v40();
      int v41 = *v82;
      sub_100055548();
      v41();
      uint64_t v42 = sub_100058EB4();
      sub_1000532F0(v42, v43, &qword_100082578);
      uint64_t v13 = 1;
      sub_100055CAC(v39);
      if (!v44)
      {
        sub_10005865C();
        sub_100055548();
        v41();
        sub_100052038(&qword_100082580, (void (*)(uint64_t))&type metadata accessor for LinkSnapshot);
        sub_100057C38();
        if (v19)
        {
          uint64_t v67 = v0[24];
          uint64_t v68 = *v80;
          sub_100055C1C();
          v68();
          sub_100058750();
          sub_100055C1C();
          v68();
          sub_1000584E4();
          sub_1000551DC();
          v69();
          swift_release();
          sub_100053404(v67, &qword_100082578);
          swift_bridgeObjectRelease();
          sub_100059C08();
          swift_bridgeObjectRelease();
          sub_1000571C4();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          sub_1000115DC();
          goto LABEL_67;
        }
        sub_1000551DC();
        v45();
        uint64_t v13 = 0;
      }
      sub_1000572B4();
      uint64_t v46 = *v19;
      uint64_t v47 = sub_1000586E0();
      ((void (*)(uint64_t))v46)(v47);
      sub_100059DE8();
      if (v44)
      {
        sub_1000594F0();
        v46();
        sub_100053404(v13, &qword_100082578);
      }
      else
      {
        sub_100055548();
        v50();
      }
      sub_1000594DC();
      uint64_t v2 = (uint64_t)v80;
      uint64_t v51 = *v80;
      sub_100055240();
      v51();
      sub_100055240();
      v51();
      sub_1000585E4(v13);
      uint64_t v19 = v78;
    }
    else
    {
      if (v37 == v79)
      {
        uint64_t v48 = v0[24];
        uint64_t v49 = v0[22];
      }
      else
      {
        if (v37 != v77) {
          goto LABEL_63;
        }
        uint64_t v48 = v0[24];
        uint64_t v49 = v0[22];
      }
      sub_1000532F0(v48, v49, &qword_100082578);
    }
    sub_100057AA0();
    sub_100055B70();
    v52();
    sub_100053404(v13, &qword_100082578);
    sub_100053348((uint64_t)v5, v13, &qword_100082578);
    if (v22) {
      goto LABEL_3;
    }
LABEL_4:
    BOOL v25 = __OFADD__(v24++, 1);
    if (v25)
    {
      __break(1u);
      goto LABEL_71;
    }
    if (v24 >= v84) {
      goto LABEL_49;
    }
    if (!*(void *)(v83 + 8 * v24)) {
      break;
    }
LABEL_23:
    sub_100011720();
  }
  sub_10005814C();
  if (v26 == v25) {
    goto LABEL_49;
  }
  sub_100058140();
  if (v28) {
    goto LABEL_22;
  }
  sub_10005814C();
  if (v26 == v25) {
    goto LABEL_49;
  }
  sub_100058140();
  if (v29) {
    goto LABEL_22;
  }
  sub_10005814C();
  if (v26 == v25) {
    goto LABEL_49;
  }
  sub_100058140();
  if (v30) {
    goto LABEL_22;
  }
  sub_10005814C();
  if (v26 == v25) {
    goto LABEL_49;
  }
  sub_100058140();
  if (v31) {
    goto LABEL_22;
  }
  sub_10005814C();
  if (v26 == v25)
  {
LABEL_49:
    sub_100059470();
    swift_release();
    sub_100053348((uint64_t)v19, v13, &qword_100082578);
    sub_100053404((uint64_t)v5, &qword_100082578);
    swift_bridgeObjectRelease();
    sub_1000532F0(v13, v24, &qword_100082578);
    sub_100055EE0(v24, 1, v2);
    if (v44)
    {
      uint64_t v57 = &_swiftEmptySetSingleton;
    }
    else
    {
      uint64_t v5 = (void (*)(void))v0[4];
      sub_10005524C();
      v55();
      uint64_t v56 = sub_10006E050();
      uint64_t v57 = (void *)sub_10001990C(v56);
      uint64_t v58 = sub_1000572EC();
      v59(v58);
    }
    uint64_t v60 = sub_1000424BC((uint64_t)v57, v76);
    v0[32] = v60;
    swift_bridgeObjectRelease();
    if (v60[2])
    {
      uint64_t v61 = (void *)swift_task_alloc();
      v0[33] = v61;
      *uint64_t v61 = v0;
      v61[1] = sub_100019294;
      sub_1000593F8();
      sub_1000558D4();
      return static LinkSnapshot.partial(_:failIfContainerNotFound:)();
    }
    sub_1000593D8();
    sub_1000532F0((uint64_t)v5, (uint64_t)v57, &qword_100082578);
    sub_100059CB8();
    if (v44)
    {
      sub_10006E070();
      uint64_t v63 = sub_100011758();
      sub_100053404(v63, v64);
      uint64_t v65 = sub_100056A90();
      sub_100053404(v65, v66);
    }
    else
    {
      sub_100053404((uint64_t)v5, &qword_100082578);
      uint64_t v71 = sub_1000586C8();
      v72(v71);
    }
    goto LABEL_66;
  }
  sub_100058140();
  if (v32)
  {
LABEL_22:
    uint64_t v24 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v24 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v24 >= v84) {
      goto LABEL_49;
    }
    ++v27;
    if (*(void *)(v83 + 8 * v24)) {
      goto LABEL_23;
    }
  }
LABEL_71:
  __break(1u);
  return static LinkSnapshot.partial(_:failIfContainerNotFound:)();
}

uint64_t sub_100019074()
{
  sub_1000114D4();
  sub_100011474();
  sub_1000114FC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1000114E0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 248) = v0;
  swift_task_dealloc();
  sub_1000115E8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_100019150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_100056444();
  sub_1000579CC();
  uint64_t v32 = v22[17];
  uint64_t v33 = v22[16];
  uint64_t v34 = v22[15];
  uint64_t v35 = v22[14];
  uint64_t v36 = v22[11];
  uint64_t v37 = v22[10];
  uint64_t v38 = v22[9];
  uint64_t v39 = v22[8];
  uint64_t v40 = v22[7];
  uint64_t v41 = v22[6];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001151C();
  sub_100055E88();
  return v24(v23, v24, v25, v26, v27, v28, v29, v30, a9, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41,
           a20,
           a21,
           a22);
}

uint64_t sub_100019294()
{
  sub_1000114D4();
  sub_100011474();
  sub_1000114FC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1000114E0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 272) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_1000115E8();
  return _swift_task_switch(v7, v8, v9);
}

#error "100019400: call analysis failed (funcsize=159)"

uint64_t sub_100019614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_100056444();
  sub_1000579CC();
  sub_1000552CC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100058F90();
  sub_100055E88();
  return v23(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_10001970C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_100056444();
  sub_1000579CC();
  sub_100053404(*(void *)(v22 + 208), &qword_100082578);
  sub_1000552CC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100058F90();
  sub_100055E88();
  return v24(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

void sub_100019814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_100058088();
    sub_10006F820();
    sub_10006F090();
    Swift::Int v6 = sub_10006F840();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    Swift::Int v8 = v6 & ~v7;
    sub_10005706C();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != v4 || v11[1] != v3) && (sub_100055DE0() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        sub_10005706C();
        if (v15)
        {
          do
          {
            uint64_t v16 = (void *)(v10 + 16 * v14);
            if (*v16 == v4 && v16[1] == v3) {
              break;
            }
            if (sub_100055DE0()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            sub_10005706C();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

uint64_t sub_10001990C(uint64_t a1)
{
  uint64_t v18 = sub_10006F1E0();
  uint64_t result = sub_100052AC0(a1, v19);
  uint64_t v3 = v19[0];
  uint64_t v4 = v19[1];
  int64_t v5 = v19[3];
  unint64_t v6 = v20;
  int64_t v7 = (unint64_t)(v19[2] + 64) >> 6;
  if (!v20) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v9 = v8 | (v5 << 6);
  while (1)
  {
    uint64_t v14 = (Swift::Int *)(*(void *)(v3 + 48) + 16 * v9);
    Swift::Int v15 = *v14;
    Swift::Int v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_10004D124(&v17, v15, v16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v10 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_21;
    }
    unint64_t v11 = *(void *)(v4 + 8 * v10);
    int64_t v12 = v5 + 1;
    if (!v11)
    {
      int64_t v12 = v5 + 2;
      if (v5 + 2 >= v7) {
        goto LABEL_21;
      }
      unint64_t v11 = *(void *)(v4 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v5 + 3;
        if (v5 + 3 >= v7) {
          goto LABEL_21;
        }
        unint64_t v11 = *(void *)(v4 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v5 + 4;
          if (v5 + 4 >= v7) {
            goto LABEL_21;
          }
          unint64_t v11 = *(void *)(v4 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v5 + 5;
            if (v5 + 5 >= v7) {
              goto LABEL_21;
            }
            unint64_t v11 = *(void *)(v4 + 8 * v12);
            if (!v11)
            {
              int64_t v13 = v5 + 6;
              while (v13 < v7)
              {
                unint64_t v11 = *(void *)(v4 + 8 * v13++);
                if (v11)
                {
                  int64_t v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              return v18;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v5 = v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_100019A90(uint64_t a1)
{
  uint64_t v2 = sub_10006EA40();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v19 - v7;
  sub_100052038(&qword_100082308, (void (*)(uint64_t))&type metadata accessor for TypeIdentifier);
  uint64_t v9 = sub_10006F1E0();
  uint64_t v20 = v9;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    int64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    int64_t v12 = v13;
    unint64_t v14 = (*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64);
    uint64_t v19 = a1;
    uint64_t v15 = a1 + v14;
    uint64_t v16 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v15, v2);
      sub_10004DB9C((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v15 += v16;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    return v20;
  }
  else
  {
    uint64_t v17 = v9;
    swift_bridgeObjectRelease();
  }
  return v17;
}

uint64_t sub_100019C50(uint64_t a1)
{
  uint64_t v2 = sub_10006E960();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v19 - v7;
  sub_100052038(&qword_1000824F0, (void (*)(uint64_t))&type metadata accessor for TypeInstance);
  uint64_t v9 = sub_10006F1E0();
  uint64_t v20 = v9;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    int64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    int64_t v12 = v13;
    unint64_t v14 = (*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64);
    uint64_t v19 = a1;
    uint64_t v15 = a1 + v14;
    uint64_t v16 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v15, v2);
      sub_10004D878((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v15 += v16;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    return v20;
  }
  else
  {
    uint64_t v17 = v9;
    swift_bridgeObjectRelease();
  }
  return v17;
}

uint64_t sub_100019E10(uint64_t a1)
{
  uint64_t v2 = sub_10006F1E0();
  uint64_t v10 = v2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_10004D124(&v9, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    uint64_t v7 = v2;
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_100019EC4(uint64_t a1)
{
  uint64_t v34 = sub_10006E9E0();
  uint64_t v3 = *(void *)(v34 - 8);
  uint64_t v4 = __chkstk_darwin(v34);
  uint64_t v33 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v32 = (char *)v27 - v6;
  uint64_t v31 = sub_10006EA40();
  uint64_t v7 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = &_swiftEmptyArrayStorage;
  if (!v9) {
    return (uint64_t)v10;
  }
  v27[1] = v1;
  uint64_t v36 = &_swiftEmptyArrayStorage;
  sub_100068FA4(0, v9, 0);
  uint64_t result = sub_10005303C(a1);
  int64_t v12 = result;
  int v14 = v13;
  char v16 = v15 & 1;
  uint64_t v29 = v3;
  uint64_t v30 = a1 + 56;
  v27[4] = v3 + 32;
  v27[5] = v3 + 16;
  v27[2] = v7 + 32;
  v27[3] = v3 + 8;
  uint64_t v28 = a1;
  uint64_t v17 = v3;
  while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(v30 + (((unint64_t)v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(a1 + 36) != v14) {
      goto LABEL_16;
    }
    uint64_t v18 = v7;
    int64_t v19 = *(void *)(a1 + 48) + *(void *)(v17 + 72) * v12;
    uint64_t v20 = v32;
    uint64_t v21 = v34;
    (*(void (**)(char *, int64_t, uint64_t))(v17 + 16))(v32, v19, v34);
    uint64_t v22 = v33;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v33, v20, v21);
    sub_10006E9A0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v21);
    uint64_t v10 = v36;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100068FA4(0, v10[2] + 1, 1);
      uint64_t v10 = v36;
    }
    unint64_t v24 = v10[2];
    unint64_t v23 = v10[3];
    if (v24 >= v23 >> 1)
    {
      sub_100068FA4(v23 > 1, v24 + 1, 1);
      uint64_t v10 = v36;
    }
    v10[2] = v24 + 1;
    uint64_t v7 = v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))((unint64_t)v10+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v24, v35, v31);
    uint64_t v36 = v10;
    a1 = v28;
    uint64_t result = sub_100052AFC(v12, v14, v16 & 1, v28);
    int64_t v12 = result;
    int v14 = v25;
    char v16 = v26 & 1;
    if (!--v9)
    {
      sub_10001650C(result, v25, v26 & 1);
      return (uint64_t)v10;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void sub_10001A240(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    sub_1000690F0();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v3 = 0;
    while (v2 != v3)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v4 = (id)sub_10006F620();
      }
      else {
        id v4 = *(id *)(a1 + 8 * v3 + 32);
      }
      uint64_t v5 = v4;
      id v6 = [v4 key];
      uint64_t v7 = sub_10006F050();
      uint64_t v9 = v8;

      unint64_t v10 = _swiftEmptyArrayStorage[2];
      if (v10 >= _swiftEmptyArrayStorage[3] >> 1) {
        sub_1000690F0();
      }
      ++v3;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v7;
      v11[5] = v9;
      if (v2 == v3) {
        return;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_10006F6F0();
    swift_bridgeObjectRelease();
  }
}

char *sub_10001A3BC(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v35 = a2;
  uint64_t v34 = sub_10006DEB0();
  uint64_t v5 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v33 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      uint64_t v38 = &_swiftEmptyArrayStorage;
      uint64_t result = sub_1000690D0(0, v7 & ~(v7 >> 63), 0);
      if (v7 < 0) {
        break;
      }
      uint64_t v9 = 0;
      unint64_t v30 = a1 & 0xC000000000000001;
      uint64_t v31 = v7;
      unint64_t v10 = v38;
      uint64_t v28 = v3;
      uint64_t v29 = (void (**)(char *, uint64_t))(v5 + 8);
      unint64_t v32 = a1;
      while (v7 != v9)
      {
        if (v30) {
          id v11 = (id)sub_10006F620();
        }
        else {
          id v11 = *(id *)(a1 + 8 * v9 + 32);
        }
        int64_t v12 = v11;
        id v13 = objc_msgSend(v11, "locale", v28);
        int v14 = v33;
        sub_10006DEA0();

        uint64_t v3 = sub_10006DE50();
        uint64_t v37 = v15;
        (*v29)(v14, v34);
        id v16 = v35;
        id v17 = [v35 localizedLabelWithContext:v12];
        uint64_t v36 = sub_10006F050();
        uint64_t v19 = v18;

        id v20 = [v16 localizedDescriptionWithContext:v12];
        if (v20)
        {
          uint64_t v21 = v20;
          uint64_t v22 = sub_10006F050();
          uint64_t v5 = v23;
        }
        else
        {

          uint64_t v22 = 0;
          uint64_t v5 = 0;
        }
        uint64_t v38 = v10;
        unint64_t v25 = v10[2];
        unint64_t v24 = v10[3];
        if (v25 >= v24 >> 1)
        {
          sub_1000690D0((char *)(v24 > 1), v25 + 1, 1);
          unint64_t v10 = v38;
        }
        ++v9;
        v10[2] = v25 + 1;
        char v26 = &v10[6 * v25];
        uint64_t v27 = v37;
        v26[4] = v3;
        v26[5] = v27;
        v26[6] = v36;
        v26[7] = v19;
        v26[8] = v22;
        v26[9] = v5;
        uint64_t v7 = v31;
        a1 = v32;
        if (v31 == v9)
        {

          return (char *)v10;
        }
      }
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_10006F6F0();
      swift_bridgeObjectRelease();
      if (!v7) {
        goto LABEL_18;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_18:

    return (char *)&_swiftEmptyArrayStorage;
  }
  return result;
}

void sub_10001A69C()
{
}

void sub_10001A6DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t v6 = *(void *)(v3 + 24) >> 1, v6 < v4 + v2))
  {
    sub_1000673A4();
    uint64_t v3 = v7;
    uint64_t v6 = *(void *)(v7 + 24) >> 1;
  }
  if (!*(void *)(a1 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v3 + 16);
  if (v6 - v8 < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1000682E0((char *)(a1 + 32), v2, (char *)(v3 + 8 * v8 + 32));
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return;
  }
  uint64_t v9 = *(void *)(v3 + 16);
  BOOL v10 = __OFADD__(v9, v2);
  uint64_t v11 = v9 + v2;
  if (!v10)
  {
    *(void *)(v3 + 16) = v11;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_10001A7C0()
{
  sub_100058000();
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *v0;
  uint64_t v7 = *(void *)(*v0 + 16);
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v8 = v4;
  uint64_t v9 = v3;
  BOOL v10 = v2;
  uint64_t v11 = v1;
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 + v5 > *(void *)(v6 + 24) >> 1) {
    uint64_t v6 = v10();
  }
  if (!*(void *)(v11 + 16))
  {
    if (!v5) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  uint64_t v12 = *(void *)(v6 + 16);
  uint64_t v13 = (*(void *)(v6 + 24) >> 1) - v12;
  uint64_t v14 = *(void *)(v8(0) - 8);
  if (v13 < v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v9(v11 + v15, v5, v6 + v15 + *(void *)(v14 + 72) * v12);
  if (!v5)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t *v0 = v6;
    sub_100057F90();
    return;
  }
  uint64_t v16 = *(void *)(v6 + 16);
  BOOL v17 = __OFADD__(v16, v5);
  uint64_t v18 = v16 + v5;
  if (!v17)
  {
    *(void *)(v6 + 16) = v18;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_10001A8F0()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  uint64_t v2 = (uint64_t *)sub_100057770();
  sub_100053270(v2, v3);
  os_unfair_lock_unlock(v1 + 6);
  swift_release();
  return sub_100056A90();
}

uint64_t sub_10001A960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(os_unfair_lock_s **)(v3 + 24);
  swift_retain();
  os_unfair_lock_lock(v5 + 6);
  sub_100057770();
  sub_1000531B4();
  os_unfair_lock_unlock(v5 + 6);
  swift_release();
  sub_100052E7C(a3, (void (*)(void))type metadata accessor for ToolKitIndexer.TypeRegistryKey);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10001A9FC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)result;
  if (*(void *)(*(void *)result + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_100068668(a2, a3);
    if (v9) {
      uint64_t v10 = *(void *)(*(void *)(v5 + 56) + 8 * v8);
    }
    else {
      uint64_t v10 = 0;
    }
    char v11 = v9 ^ 1;
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
    char v11 = 1;
  }
  *(void *)a4 = v10;
  *(unsigned char *)(a4 + 8) = v11 & 1;
  return result;
}

uint64_t sub_10001AA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    sub_10004767C(a2, a3);
  }
  else {
    sub_1000478F8(a4, a2, a3);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_10001AB10@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v5 = sub_100068704(a2), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 16 * v5);
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t result = 0;
  }
  *a3 = v7;
  a3[1] = result;
  return result;
}

uint64_t sub_10001AB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for ToolKitIndexer.TypeRegistryKey(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000531D0();
  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_100047988(a3, a4, (uint64_t)v8);
    return sub_100052E7C((uint64_t)v8, (void (*)(void))type metadata accessor for ToolKitIndexer.TypeRegistryKey);
  }
  else
  {
    sub_10004778C((uint64_t)v8);
    sub_100052E7C((uint64_t)v8, (void (*)(void))type metadata accessor for ToolKitIndexer.TypeRegistryKey);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10001AC90()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_10001ACB8()
{
  sub_10001AC90();
  uint64_t v0 = sub_100058EC0();
  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_10001ACE4()
{
  sub_10000772C(&qword_100082550);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = &_swiftEmptyDictionarySingleton;
  *(void *)(v0 + 16) = v1;
  sub_10000772C(&qword_100082558);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 24) = 0;
  *(void *)(v2 + 16) = &_swiftEmptyDictionarySingleton;
  *(void *)(v0 + 24) = v2;
  return v0;
}

uint64_t sub_10001AD54()
{
  return sub_10006F000();
}

uint64_t sub_10001AE2C()
{
  if ((sub_10006EA30() & 1) == 0) {
    return 0;
  }
  type metadata accessor for ToolKitIndexer.TypeRegistryKey(0);
  return sub_10006DE90();
}

Swift::Int sub_10001AE8C()
{
  return sub_10006F840();
}

Swift::Int sub_10001AF64()
{
  return sub_10006F840();
}

id ToolKitIndexer.__allocating_init(clientIdentifier:)()
{
  id v1 = objc_allocWithZone(v0);
  return ToolKitIndexer.init(clientIdentifier:)();
}

id ToolKitIndexer.init(clientIdentifier:)()
{
  swift_bridgeObjectRelease();
  sub_10006E820();
  uint64_t v2 = v0;
  uint64_t v3 = sub_10006E810();
  if (v1)
  {

    type metadata accessor for ToolKitIndexer();
    return (id)swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)&v2[OBJC_IVAR___WFToolKitIndexer_toolDatabase] = v3;

    v5.receiver = v2;
    v5.super_class = (Class)type metadata accessor for ToolKitIndexer();
    return objc_msgSendSuper2(&v5, "init");
  }
}

uint64_t type metadata accessor for ToolKitIndexer()
{
  return self;
}

uint64_t ToolKitIndexer.reindex(request:)()
{
  sub_1000114D4();
  v1[29] = v2;
  v1[30] = v0;
  uint64_t v3 = sub_10006E360();
  v1[31] = v3;
  sub_100016518(v3);
  v1[32] = v4;
  v1[33] = sub_1000551C0();
  v1[34] = swift_task_alloc();
  uint64_t v5 = sub_10006E600();
  v1[35] = v5;
  sub_100016518(v5);
  v1[36] = v6;
  v1[37] = sub_10005558C();
  uint64_t v7 = sub_10006E160();
  v1[38] = v7;
  sub_100016518(v7);
  v1[39] = v8;
  v1[40] = sub_10005558C();
  uint64_t v9 = sub_10000772C(&qword_100082160);
  sub_100055A7C(v9);
  v1[41] = sub_10005558C();
  uint64_t v10 = sub_10000772C(&qword_100082168);
  v1[42] = v10;
  sub_100055A7C(v10);
  v1[43] = sub_1000551C0();
  v1[44] = swift_task_alloc();
  uint64_t v11 = sub_10006E590();
  v1[45] = v11;
  sub_100016518(v11);
  v1[46] = v12;
  v1[47] = sub_1000551C0();
  v1[48] = swift_task_alloc();
  uint64_t v13 = sub_10006E570();
  v1[49] = v13;
  sub_100016518(v13);
  v1[50] = v14;
  v1[51] = sub_10005558C();
  uint64_t v15 = sub_10006DE30();
  v1[52] = v15;
  sub_100016518(v15);
  v1[53] = v16;
  v1[54] = *(void *)(v17 + 64);
  v1[55] = sub_1000551C0();
  v1[56] = swift_task_alloc();
  sub_1000115E8();
  return _swift_task_switch(v18, v19, v20);
}

uint64_t sub_10001B3D0()
{
  uint64_t v1 = *(void *)(v0 + 368);
  *(void *)(v0 + 456) = os_transaction_create();
  sub_10006E260();
  *(CFTimeInterval *)(v0 + 464) = CACurrentMediaTime();
  sub_10006E610();
  sub_10006E560();
  sub_100055234();
  v2();
  sub_100055330();
  v3();
  sub_100052038(&qword_100082170, (void (*)(uint64_t))&type metadata accessor for ToolDatabase.Environment);
  sub_100058F40();
  char v4 = sub_10006F010();
  uint64_t v5 = *(void (**)(void))(v1 + 8);
  sub_1000593B4();
  sub_100055228();
  v5();
  sub_100056610();
  sub_100055228();
  v5();
  if (v4)
  {
    sub_10006E280();
    uint64_t v6 = (void *)sub_10006E350();
    os_log_type_t v7 = sub_10006F320();
    if (sub_100056A74(v7))
    {
      uint64_t v8 = (uint8_t *)sub_100011554();
      *(_WORD *)uint64_t v8 = 0;
      sub_100058C64();
      _os_log_impl(v9, v10, v11, v12, v8, 2u);
      sub_10001153C();
    }

    sub_100055234();
    v13();
    sub_10000792C();
    swift_allocError();
    *uint64_t v14 = 0;
    v14[1] = 0;
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_100057C6C();
    sub_10005521C();
    v15();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1000115DC();
    sub_100058D7C();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v18 = *(void *)(v0 + 440);
  uint64_t v19 = *(void *)(v0 + 424);
  uint64_t v20 = *(void *)(v0 + 416);
  uint64_t v21 = *(void *)(v0 + 328);
  uint64_t v22 = *(void **)(v0 + 240);
  uint64_t v37 = *(void **)(v0 + 232);
  uint64_t v23 = self;
  *(void *)(v0 + 472) = v23;
  id v24 = [v23 defaultCenter];
  unint64_t v25 = (void *)sub_10006F3A0();
  uint64_t v26 = sub_10006EFE0();
  sub_100051480((uint64_t)v25, 0, v26, v24);

  sub_10006E5A0();
  sub_1000551F4();
  sub_1000551E8();
  v27();
  sub_1000585E4(v21);
  sub_1000114F0();
  v28();
  unint64_t v29 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v30 = swift_allocObject();
  *(void *)(v0 + 480) = v30;
  *(void *)(v30 + 16) = v22;
  *(void *)(v30 + 24) = v37;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 32))(v30 + v29, v18, v20);
  id v31 = v22;
  id v32 = v37;
  swift_task_alloc();
  sub_100058568();
  *(void *)(v0 + 488) = v33;
  void *v33 = v34;
  v33[1] = sub_10001B860;
  sub_100058D7C();
  return ToolDatabase.inTransaction<A>(mode:work:)();
}

uint64_t sub_10001B860()
{
  sub_100011474();
  sub_1000114FC();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 328);
  uint64_t v6 = *v1;
  sub_1000114E0();
  *os_log_type_t v7 = v6;
  *(void *)(v8 + 496) = v0;
  swift_task_dealloc();
  sub_100053404(v5, &qword_100082160);
  swift_release();
  sub_1000115E8();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_10001B988()
{
  sub_1000579CC();
  uint64_t v1 = *(void *)(v0 + 344);
  sub_1000532F0(*(void *)(v0 + 352), v1, &qword_100082168);
  sub_100055CAC(v1);
  if (v2)
  {
    sub_100053404(*(void *)(v0 + 344), &qword_100082168);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 496);
    sub_100055548();
    v4();
    uint64_t v5 = sub_10006E150();
    if (v3)
    {
      uint64_t v7 = *(void *)(v0 + 352);
      swift_unknownObjectRelease();
      sub_1000553C4();
      v8();
      sub_100053404(v7, &qword_100082168);
      sub_10005521C();
      v9();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_100055AFC();
      goto LABEL_10;
    }
    uint64_t v11 = v5;
    uint64_t v12 = v6;
    uint64_t v36 = *(void *)(v0 + 312);
    uint64_t v37 = *(void *)(v0 + 304);
    uint64_t v38 = *(void *)(v0 + 320);
    id v35 = [*(id *)(v0 + 472) defaultCenter];
    uint64_t v34 = (void *)sub_10006F3B0();
    sub_10000772C(&qword_100082188);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000716B0;
    *(void *)(v0 + 192) = 0x657365676E616863;
    *(void *)(v0 + 200) = 0xE900000000000074;
    sub_1000584E4();
    sub_10006F5B0();
    *(void *)(inited + 96) = sub_10000772C((uint64_t *)&unk_100082190);
    *(void *)(inited + 72) = v11;
    *(void *)(inited + 80) = v12;
    *(void *)(v0 + 208) = 0x656372756F73;
    *(void *)(v0 + 216) = 0xE600000000000000;
    uint64_t v14 = sub_100057804();
    sub_1000516AC(v14, v15);
    sub_10006F5B0();
    sub_100055330();
    v16();
    uint64_t v17 = sub_10006E5F0();
    sub_1000556D0();
    v18();
    *(void *)(inited + 168) = &type metadata for Int;
    *(void *)(inited + 144) = v17;
    uint64_t v19 = sub_10006EFE0();
    sub_100051480((uint64_t)v34, 0, v19, v35);

    uint64_t v20 = sub_100057804();
    sub_100051718(v20, v21);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v38, v37);
  }
  sub_10006E280();
  uint64_t v22 = (void *)sub_10006E350();
  os_log_type_t v23 = sub_10006F320();
  if (sub_100056A74(v23))
  {
    double v24 = *(double *)(v0 + 464);
    unint64_t v25 = (uint8_t *)sub_1000556B8();
    *(_DWORD *)unint64_t v25 = 134217984;
    *(CFTimeInterval *)(v0 + 224) = CACurrentMediaTime() - v24;
    sub_10006F4D0();
    sub_100058C64();
    _os_log_impl(v26, v27, v28, v29, v25, 0xCu);
    sub_10001153C();
  }
  uint64_t v30 = *(void *)(v0 + 352);

  sub_100058F40();
  sub_10005527C();
  v31();
  sub_100053404(v30, &qword_100082168);
  sub_1000553C4();
  v32();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001151C();
LABEL_10:
  return v10();
}

void sub_10001BE6C()
{
  swift_unknownObjectRelease();
  sub_100057C6C();
  sub_10005521C();
  v0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000115DC();
  sub_100058D7C();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_10001BF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  v5[14] = _s23IndexingPreflightResultVMa(0);
  v5[15] = swift_task_alloc();
  uint64_t v6 = sub_10006E360();
  v5[16] = v6;
  v5[17] = *(void *)(v6 - 8);
  v5[18] = swift_task_alloc();
  uint64_t v7 = sub_10006DE30();
  v5[19] = v7;
  v5[20] = *(void *)(v7 - 8);
  v5[21] = swift_task_alloc();
  uint64_t v8 = sub_10006E160();
  v5[22] = v8;
  v5[23] = *(void *)(v8 - 8);
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  return _swift_task_switch(sub_10001C138, 0, 0);
}

void sub_10001C138()
{
  sub_100059790();
  sub_10001D0D4();
  uint64_t v1 = (void *)v0[12];
  sub_10006DED0();
  sub_1000568EC();
  id v2 = v1;
  v0[27] = sub_10006DEC0();
  swift_task_alloc();
  sub_100058568();
  v0[28] = v3;
  *uint64_t v3 = v4;
  v3[1] = sub_10001C288;
  sub_100058910();
  __asm { BR              X2 }
}

uint64_t sub_10001C288()
{
  sub_1000114D4();
  sub_100011474();
  uint64_t v3 = v2;
  sub_1000114FC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1000114E0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 232) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  sub_1000115E8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10001C36C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_log_t log, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_100056444();
  a29 = v31;
  a30 = v32;
  sub_1000579CC();
  a28 = v30;
  uint64_t v33 = *(void *)(v30 + 208);
  uint64_t v34 = *(void *)(v30 + 184);
  uint64_t v76 = *(void *)(v30 + 176);
  uint64_t v77 = *(void *)(v30 + 200);
  id v35 = *(void **)(v30 + 96);
  sub_10006E8F0();
  sub_10006E8E0();
  sub_10006E260();
  sub_10006E8B0();
  swift_release();
  sub_100055B70();
  v36();
  sub_10006E280();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v77, v33, v76);
  id v37 = v35;
  uint64_t v38 = sub_10006E350();
  os_log_type_t v39 = sub_10006F320();
  int v40 = v39;
  if (os_log_type_enabled(v38, v39))
  {
    a10 = *(void *)(v30 + 200);
    log = v38;
    uint64_t v41 = *(void *)(v30 + 184);
    a13 = *(void *)(v30 + 176);
    a16 = *(void *)(v30 + 136);
    uint64_t v76 = *(void *)(v30 + 128);
    uint64_t v77 = *(void *)(v30 + 144);
    uint64_t v42 = *(void **)(v30 + 96);
    uint64_t v43 = swift_slowAlloc();
    char v44 = (void *)sub_100057B90();
    a14 = sub_100055530();
    *(void *)(v30 + 56) = v42;
    a11 = v30 + 336;
    a19 = a14;
    *(_DWORD *)uint64_t v43 = 138412802;
    HIDWORD(a12) = v40;
    id v45 = v42;
    sub_10006F4D0();
    *char v44 = v42;

    *(_WORD *)(v43 + 12) = 2080;
    uint64_t v46 = sub_10006E130();
    *(void *)(v30 + 64) = sub_100046AE8(v46, v47, &a19);
    sub_10006F4D0();
    swift_bridgeObjectRelease();
    uint64_t v48 = *(void (**)(void))(v41 + 8);
    uint64_t v49 = (v41 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    sub_100055240();
    v48();
    *(_WORD *)(v43 + 22) = 1024;
    *(_DWORD *)(v30 + 336) = BSPthreadGetCurrentPriority();
    sub_10006F4D0();
    _os_log_impl((void *)&_mh_execute_header, log, (os_log_type_t)v40, "Indexing for request: %@, changeset: %s, priority: %d", (uint8_t *)v43, 0x1Cu);
    sub_10000772C(&qword_100082350);
    sub_100058BA0();
    sub_10001153C();
    swift_arrayDestroy();
    sub_10001153C();
    sub_10001153C();

    sub_1000551DC();
    v50();
  }
  else
  {
    uint64_t v51 = *(void *)(v30 + 184);
    uint64_t v52 = *(void **)(v30 + 96);

    uint64_t v48 = *(void (**)(void))(v51 + 8);
    uint64_t v49 = (v51 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    sub_100056A90();
    sub_10005527C();
    v48();

    uint64_t v53 = sub_100056304();
    v54(v53);
  }
  *(void *)(v30 + 240) = v48;
  sub_100055330();
  v55();
  sub_100052038(&qword_100082338, (void (*)(uint64_t))&type metadata accessor for ToolKitIndexingReason.Changeset);
  char v56 = sub_10006F010();
  *(void *)(v30 + 248) = v49;
  uint64_t v57 = sub_100011758();
  ((void (*)(uint64_t))v48)(v57);
  if (v56)
  {
    ((void (*)(void, void))v48)(*(void *)(v30 + 208), *(void *)(v30 + 176));
    uint64_t v58 = sub_100057A4C();
    sub_100055CCC(v58, v59, v60, v61);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001151C();
    sub_100055E88();
    return v63(v62, v63, v64, v65, v66, v67, v68, v69, a9, a10, a11, a12, a13, a14, log, a16, v76, v77, a19,
             a20,
             a21,
             a22);
  }
  else
  {
    swift_task_alloc();
    sub_100058568();
    *(void *)(v30 + 256) = v71;
    *uint64_t v71 = v72;
    v71[1] = sub_10001C7D4;
    sub_100055E88();
    return sub_1000094A0(v73, v74);
  }
}

uint64_t sub_10001C7D4()
{
  sub_1000114D4();
  sub_100011474();
  sub_1000114FC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1000114E0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 264) = v0;
  swift_task_dealloc();
  sub_1000115E8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10001C8B0()
{
  sub_1000562A0();
  uint64_t v1 = v0[33];
  sub_10001D468();
  uint64_t v3 = v2;
  v0[34] = v2;
  type metadata accessor for ToolKitIndexer.SharedIndexingState();
  uint64_t v4 = sub_100055204();
  v0[35] = v4;
  sub_10001ACE4();
  sub_1000593B4();
  sub_100025A58();
  v0[36] = v1;
  if (v1)
  {
    uint64_t v5 = (void (*)(uint64_t))v0[30];
    uint64_t v6 = v0[15];
    swift_release();
    swift_bridgeObjectRelease();
    sub_100052E7C(v6, (void (*)(void))_s23IndexingPreflightResultVMa);
    uint64_t v7 = sub_100057D28();
    v5(v7);
    sub_100056904();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100055AFC();
    return v8();
  }
  else
  {
    type metadata accessor for ContainerIndexer();
    uint64_t v10 = sub_100055204();
    v0[37] = v10;
    *(void *)(v10 + 16) = v4;
    *(void *)(v10 + 24) = v3;
    type metadata accessor for TypeIndexer();
    v0[38] = swift_initStackObject();
    sub_100056840();
    v0[39] = sub_100011FB0(v11, v12, v13);
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v14 = (void *)swift_task_alloc();
    v0[40] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_10001CAD4;
    return sub_10001DFB8();
  }
}

uint64_t sub_10001CAD4()
{
  uint64_t v1 = *v0;
  sub_1000114E0();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  *uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 328) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_10001CC74;
  return sub_100022F04();
}

uint64_t sub_10001CC74()
{
  sub_1000114D4();
  sub_100011474();
  uint64_t v1 = *v0;
  sub_1000114E0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_1000115E8();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10001CD58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1000553D0();
  sub_1000562A0();
  uint64_t v13 = v12[36];
  sub_100041884();
  if (v13)
  {
    uint64_t v14 = (void (*)(uint64_t))v12[30];
    uint64_t v15 = v12[15];
    swift_release();
    swift_release();
    swift_release();
    sub_100052E7C(v15, (void (*)(void))_s23IndexingPreflightResultVMa);
    uint64_t v16 = sub_100056304();
    v14(v16);
    sub_100056904();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100055AFC();
  }
  else
  {
    sub_1000418D8();
    sub_10006E5B0();
    sub_100052E7C(v12[15], (void (*)(void))_s23IndexingPreflightResultVMa);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v26 = sub_100056418();
    v27(v26);
    uint64_t v28 = sub_100057A4C();
    sub_100007770(v28, 0, 1, v29);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001151C();
  }
  sub_100055194();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12);
}

uint64_t sub_10001CF8C()
{
  sub_100056CA8();
  swift_release();
  sub_100056904();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000115DC();
  return v0();
}

uint64_t sub_10001D02C()
{
  sub_100056CA8();
  (*(void (**)(void, void))(v0 + 240))(*(void *)(v0 + 208), *(void *)(v0 + 176));
  sub_100056904();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000115DC();
  return v1();
}

void sub_10001D0D4()
{
  sub_100058600();
  uint64_t v2 = v1;
  uint64_t v3 = sub_10000772C(&qword_1000825A0);
  uint64_t v4 = sub_100055A7C(v3);
  __chkstk_darwin(v4);
  sub_100016530();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_10006E220();
  sub_10001148C();
  uint64_t v30 = v9;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (unint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v14 = sub_10000772C(&qword_1000825A8);
  uint64_t v15 = sub_100055A7C(v14);
  __chkstk_darwin(v15);
  sub_100057A84();
  uint64_t v16 = sub_10006E240();
  sub_10001148C();
  __chkstk_darwin(v17);
  sub_1000585A8();
  uint64_t v29 = v2;
  sub_10006E250();
  if (sub_100007800(v0, 1, v16) == 1)
  {
    uint64_t v18 = &qword_1000825A8;
    uint64_t v19 = v0;
LABEL_5:
    sub_100053404(v19, v18);
LABEL_6:
    sub_100057F78();
    return;
  }
  sub_100055548();
  v20();
  sub_10006E230();
  if (sub_100007800(v7, 1, v8) == 1)
  {
    sub_100055B70();
    v21();
    uint64_t v18 = &qword_1000825A0;
    uint64_t v19 = v7;
    goto LABEL_5;
  }
  uint64_t v22 = v30;
  sub_100055548();
  v23();
  sub_1000114F0();
  v24();
  if ((*(unsigned int (**)(unint64_t *, uint64_t))(v22 + 88))(v13, v8) == enum case for ToolKitIndexingRequest.TestingConfig.Failure.retryingError(_:))
  {
    (*(void (**)(unint64_t *, uint64_t))(v22 + 96))(v13, v8);
    unint64_t v25 = *v13;
    if (sub_10006E210() < v25)
    {
      sub_10006E270();
      sub_100052038(&qword_1000825B0, (void (*)(uint64_t))&type metadata accessor for ToolKitTestingRetryingError);
      sub_10005983C();
      swift_allocError();
      sub_1000551E8();
      v26();
      swift_willThrow();
    }
    sub_100055228();
    v27();
    sub_100055B70();
    v28();
    goto LABEL_6;
  }
  sub_10006F770();
  __break(1u);
}

void sub_10001D468()
{
  sub_100058000();
  uint64_t v1 = sub_10006DEB0();
  uint64_t v2 = sub_100055A7C(v1);
  __chkstk_darwin(v2);
  sub_100057A84();
  uint64_t v3 = sub_10006E360();
  sub_10001148C();
  uint64_t v5 = v4;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v96 = (char *)v93 - v10;
  sub_100058488();
  __chkstk_darwin(v11);
  uint64_t v97 = (char *)v93 - v12;
  sub_100058488();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v93 - v15;
  __chkstk_darwin(v14);
  uint64_t v107 = sub_10006DE60();
  uint64_t v100 = WFLogCategoryToolKit;
  sub_10006E280();
  uint64_t v17 = sub_10006E350();
  LOBYTE(v18) = sub_10006F300();
  BOOL v19 = os_log_type_enabled(v17, (os_log_type_t)v18);
  uint64_t v98 = v3;
  uint64_t v99 = v5;
  uint64_t v95 = v0;
  v93[1] = v9;
  if (v19)
  {
    uint64_t v20 = (uint8_t *)sub_1000556B8();
    uint64_t v21 = sub_100055530();
    v94 = v16;
    v105[0] = v21;
    *(_DWORD *)uint64_t v20 = 136315138;
    sub_100055CE4();
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_10006F100();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_100046AE8(v22, v24, v105);
    sub_100057190(v25);
    uint64_t v5 = v99;
    sub_10006F4D0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v18, "Preferred languages: %s", v20, 0xCu);
    sub_100058C70();
    uint64_t v16 = v94;
    sub_10001153C();
    sub_10001153C();
  }

  uint64_t v101 = *(void *)(v5 + 8);
  sub_10005521C();
  v26();
  id v27 = [self sharedPreferences];
  uint64_t v28 = sub_10005209C(v27);
  if (v29)
  {
    uint64_t v30 = v28;
    uint64_t v31 = v29;
    sub_1000593C0();
    swift_bridgeObjectRetain_n();
    uint64_t v32 = (void *)sub_10006E350();
    os_log_type_t v33 = sub_10006F300();
    if (sub_10005603C(v33))
    {
      uint64_t v18 = sub_1000556B8();
      uint64_t v34 = sub_100055530();
      v94 = v16;
      v105[0] = v34;
      *(_DWORD *)uint64_t v18 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_100059560();
      uint64_t v38 = sub_100046AE8(v35, v36, v37);
      sub_100057190(v38);
      sub_10006F4D0();
      swift_bridgeObjectRelease_n();
      sub_100059A44((void *)&_mh_execute_header, v39, v40, "Siri language: %s");
      swift_arrayDestroy();
      sub_10001153C();
      sub_10001153C();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_10005521C();
    v41();
    sub_100055CE4();
    uint64_t v42 = sub_100059560();
    if (sub_100026C84(v42, v43, v44))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_beginAccess();
      sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100067104);
      uint64_t v18 = *(void *)(v107 + 16);
      sub_1000468F4(v18, (uint64_t (*)(BOOL))sub_100067104);
      uint64_t v45 = v107;
      *(void *)(v107 + 16) = v18 + 1;
      uint64_t v46 = v45 + 16 * v18;
      *(void *)(v46 + 32) = v30;
      *(void *)(v46 + 40) = v31;
      uint64_t v107 = v45;
      swift_endAccess();
    }
  }
  sub_10001028C(0, (unint64_t *)&unk_100082560);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v48 = self;
  v94 = (char *)[v48 bundleForClass:ObjCClassFromMetadata];
  Class isa = (Class)[v94 localizations];
  if (!isa)
  {
    LOBYTE(v18) = sub_10006F0F0();
    Class isa = sub_10006F0E0().super.isa;
    swift_bridgeObjectRelease();
  }
  sub_10006F0F0();
  sub_1000593C0();
  swift_bridgeObjectRetain();
  uint64_t v50 = (void *)sub_10006E350();
  os_log_type_t v51 = sub_10006F300();
  if (sub_10005603C(v51))
  {
    uint64_t v18 = sub_1000556B8();
    v105[0] = sub_100055530();
    *(_DWORD *)uint64_t v18 = 136315138;
    v93[0] = v18 + 4;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_10006F100();
    unint64_t v54 = v53;
    swift_bridgeObjectRelease();
    uint64_t v55 = sub_100046AE8(v52, v54, v105);
    sub_100057190(v55);
    sub_10006F4D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_100059A44((void *)&_mh_execute_header, v56, v57, "Foundation localizations: %s");
    swift_arrayDestroy();
    sub_10001153C();
    sub_10001153C();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_10005521C();
  v58();
  unint64_t v106 = &_swiftEmptySetSingleton;
  sub_100055CE4();
  if (*(void *)(v107 + 16))
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      Class v59 = sub_10006F0E0().super.isa;
      swift_bridgeObjectRelease();
      id v60 = [v48 preferredLocalizationsFromArray:isa forPreferences:v59];

      uint64_t v18 = sub_10006F0F0();
      uint64_t v61 = *(void *)(v18 + 16);
      if (v61)
      {
        uint64_t v62 = (Swift::Int *)(v18 + 40);
        do
        {
          Swift::Int v63 = *(v62 - 1);
          Swift::Int v64 = *v62;
          swift_bridgeObjectRetain();
          sub_10004D124(&v104, v63, v64);
          swift_bridgeObjectRelease();
          v62 += 2;
          --v61;
        }
        while (v61);
      }
      swift_bridgeObjectRelease();
      swift_beginAccess();
      uint64_t v65 = (void *)v107;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10005146C((uint64_t)v65);
        uint64_t v65 = v68;
      }
      uint64_t v66 = v65[2];
      if (!v66) {
        break;
      }
      uint64_t v67 = v66 - 1;
      memmove(v65 + 4, v65 + 6, 16 * (v66 - 1));
      v65[2] = v67;
      uint64_t v107 = (uint64_t)v65;
      swift_endAccess();
      swift_bridgeObjectRelease();
      if (!*(void *)(v107 + 16)) {
        goto LABEL_23;
      }
    }
    __break(1u);
    swift_release();
    __break(1u);
  }
  else
  {
LABEL_23:

    sub_1000593C0();
    uint64_t v69 = (void *)sub_10006E350();
    os_log_type_t v70 = sub_10006F320();
    if (sub_100055DFC(v70))
    {
      uint64_t v71 = (_DWORD *)sub_1000556B8();
      Swift::Int v104 = sub_100055530();
      *uint64_t v71 = 136315138;
      sub_100055CE4();
      swift_bridgeObjectRetain();
      sub_10006F1D0();
      swift_bridgeObjectRelease();
      uint64_t v72 = sub_100059578();
      uint64_t v102 = (void *)sub_100046AE8(v72, v73, v74);
      sub_10006F4D0();
      swift_bridgeObjectRelease();
      sub_100057634((void *)&_mh_execute_header, v75, v76, "Preferred localizations: %s");
      sub_100058C70();
      sub_10001153C();
      sub_10001153C();
    }

    sub_10005521C();
    v77();
    uint64_t v78 = v95;
    sub_100055CE4();
    uint64_t v79 = (uint64_t)v106;
    if (!v106[2])
    {
      sub_1000593C0();
      uint64_t v80 = sub_10006E350();
      os_log_type_t v81 = sub_10006F310();
      if (sub_100055DFC(v81))
      {
        uint64_t v82 = (uint8_t *)sub_100011554();
        *(_WORD *)uint64_t v82 = 0;
        _os_log_impl((void *)&_mh_execute_header, v80, (os_log_type_t)v18, "No preferred localizations. Falling back to English", v82, 2u);
        sub_10001153C();
      }

      sub_100056304();
      sub_10005521C();
      v83();
      swift_beginAccess();
      sub_10004D124(&v103, 28261, 0xE200000000000000);
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v79 = (uint64_t)v106;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v84 = sub_10004F234(v79);
    swift_bridgeObjectRelease();
    uint64_t v102 = v84;
    sub_10004F120((uint64_t *)&v102);
    swift_bridgeObjectRelease();
    int v85 = v102;
    uint64_t v86 = v102[2];
    if (v86)
    {
      uint64_t v102 = _swiftEmptyArrayStorage;
      sub_10006F660();
      unint64_t v87 = v85 + 5;
      do
      {
        swift_bridgeObjectRetain_n();
        sub_100057D28();
        sub_10006DE40();
        id v88 = objc_allocWithZone((Class)INStringLocalizer);
        swift_bridgeObjectRetain();
        uint64_t v89 = sub_100057D28();
        id v91 = sub_100046420(v89, v90);
        id v92 = objc_allocWithZone((Class)WFLocalizationContext);
        sub_100046484(v78, v91);
        swift_bridgeObjectRelease();
        sub_10006F640();
        sub_10006F670();
        sub_100058538();
        sub_10006F680();
        sub_10006F650();
        v87 += 2;
        --v86;
      }
      while (v86);
    }
    swift_bridgeObjectRelease();
    swift_release();

    swift_bridgeObjectRelease();
    sub_100057F90();
  }
}

uint64_t sub_10001DFB8()
{
  sub_1000114D4();
  v0[75] = v1;
  v0[74] = v2;
  v0[73] = v3;
  v0[72] = v4;
  v0[71] = v5;
  uint64_t v6 = sub_10006DEB0();
  v0[76] = v6;
  sub_100016518(v6);
  v0[77] = v7;
  v0[78] = sub_10005558C();
  uint64_t v8 = sub_10006E360();
  v0[79] = v8;
  sub_100016518(v8);
  v0[80] = v9;
  v0[81] = sub_1000551C0();
  v0[82] = swift_task_alloc();
  v0[83] = swift_task_alloc();
  uint64_t v10 = sub_10006E300();
  v0[84] = v10;
  sub_100016518(v10);
  v0[85] = v11;
  v0[86] = sub_1000551C0();
  v0[87] = swift_task_alloc();
  v0[88] = swift_task_alloc();
  uint64_t v12 = sub_10006EA40();
  v0[89] = v12;
  sub_100016518(v12);
  v0[90] = v13;
  v0[91] = sub_1000551C0();
  v0[92] = swift_task_alloc();
  v0[93] = swift_task_alloc();
  uint64_t v14 = sub_10006EA20();
  v0[94] = v14;
  sub_100016518(v14);
  v0[95] = v15;
  v0[96] = sub_10005558C();
  uint64_t v16 = sub_10006E2D0();
  v0[97] = v16;
  sub_100016518(v16);
  v0[98] = v17;
  v0[99] = sub_1000551C0();
  v0[100] = swift_task_alloc();
  v0[101] = swift_task_alloc();
  v0[102] = swift_task_alloc();
  v0[103] = swift_task_alloc();
  v0[104] = swift_task_alloc();
  v0[105] = swift_task_alloc();
  uint64_t v18 = sub_10006E2F0();
  v0[106] = v18;
  sub_100016518(v18);
  v0[107] = v19;
  v0[108] = sub_1000551C0();
  v0[109] = swift_task_alloc();
  v0[110] = swift_task_alloc();
  v0[111] = swift_task_alloc();
  v0[112] = swift_task_alloc();
  v0[113] = swift_task_alloc();
  v0[114] = swift_task_alloc();
  uint64_t v20 = sub_10006E0F0();
  v0[115] = v20;
  sub_100016518(v20);
  v0[116] = v21;
  v0[117] = sub_1000551C0();
  v0[118] = swift_task_alloc();
  v0[119] = swift_task_alloc();
  uint64_t v22 = sub_10006E160();
  v0[120] = v22;
  sub_100016518(v22);
  v0[121] = v23;
  v0[122] = sub_10005558C();
  sub_1000115E8();
  return _swift_task_switch(v24, v25, v26);
}

void sub_10001E2C4(uint64_t x0_0, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1000553D0();
  sub_1000562A0();
  uint64_t v216 = v12 + 528;
  *(void *)(v12 + 528) = _swiftEmptyArrayStorage;
  sub_100055330();
  v15();
  char v16 = sub_10006E140();
  sub_100055234();
  v17();
  uint64_t v18 = "ContainerIndexerError";
  uint64_t v19 = "ContainerIndexerError";
  if (v16)
  {
    uint64_t v20 = sub_10006EA10();
    uint64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      uint64_t v22 = *(void *)(v12 + 784);
      unint64_t v23 = v20
          + ((*(unsigned __int8 *)(*(void *)(v12 + 760) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 + 760) + 80));
      v221 = (void *)(v22 + 16);
      unint64_t v231 = *(void *)(v12 + 856) + 8;
      uint64_t v220 = *(void *)(*(void *)(v12 + 760) + 72);
      int v217 = enum case for OSSignpostError.doubleEnd(_:);
      uint64_t v237 = v22 + 8;
      do
      {
        uint64_t v227 = v21;
        unint64_t v225 = v23;
        sub_1000114F0();
        v24();
        sub_10006EA00();
        sub_100059170();
        v245[0] = v25;
        sub_10005913C();
        sub_10006F0A0(v246);
        uint64_t v26 = v245[0];
        unint64_t v27 = v245[1];
        uint64_t v28 = sub_100055204();
        uint64_t v232 = v26;
        *(void *)(v28 + 16) = v26;
        *(void *)(v28 + 24) = v27;
        uint64_t v29 = sub_100055258();
        sub_100056B6C(v29);
        uint64_t v30 = sub_100055258();
        sub_100058A6C(v30);
        uint64_t v31 = sub_100055204();
        *(void *)(v31 + 16) = sub_10005462C;
        *(void *)(v31 + 24) = v28;
        sub_10000772C((uint64_t *)&unk_100082390);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1000716C0;
        *(void *)(inited + 32) = sub_100054620;
        *(void *)(inited + 40) = v29;
        *(void *)(inited + 48) = sub_100054620;
        *(void *)(inited + 56) = v14;
        *(void *)(inited + 64) = sub_1000545D4;
        *(void *)(inited + 72) = v31;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_10006E0C0();
        sub_10006E2E0();
        sub_10006E2B0();
        os_log_type_t v33 = sub_10006E2E0();
        os_signpost_type_t v34 = sub_10006F3D0();
        if (sub_10006F4B0())
        {
          v233 = (void (*)(void, void, void))*v221;
          sub_1000566C4();
          v35();
          unint64_t v36 = (uint8_t *)sub_1000556B8();
          v245[0] = sub_100055530();
          *(_DWORD *)unint64_t v36 = 136315138;
          swift_bridgeObjectRetain();
          swift_retain();
          *(void *)(v12 + 560) = sub_100046AE8(v232, v27, v245);
          sub_10006F4D0();
          sub_100057758();
          swift_release();
          swift_release();
          swift_release();
          os_signpost_id_t v37 = sub_10006E2C0();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v33, v34, v37, "IndexType", "type=%{signpost.description:attribute}s", v36, 0xCu);
          sub_100055234();
          v38();
          swift_arrayDestroy();
          sub_10001153C();
          sub_10001153C();

          uint64_t v39 = v233;
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();

          uint64_t v39 = (void (*)(void, void, void))*v221;
        }
        uint64_t v229 = *(void *)(v12 + 768);
        v234 = v39;
        v39(*(void *)(v12 + 832), *(void *)(v12 + 840), *(void *)(v12 + 776));
        sub_10006E330();
        sub_1000568EC();
        sub_1000115BC();
        sub_100055270();
        v40();
        sub_100055D8C();
        sub_100055234();
        v41();
        sub_100056610();
        sub_10005521C();
        v42();
        sub_1000138C8(v229);
        swift_bridgeObjectRelease();
        sub_10006E8F0();
        sub_10006E8E0();
        sub_10006E8C0();
        swift_release();
        sub_100011758();
        sub_1000551DC();
        v43();
        sub_10006E0B0();
        unint64_t v44 = sub_10006E0D0();
        char v46 = v45;
        sub_10006E0E0();
        unint64_t v47 = sub_10006E2E0();
        sub_10006E310();
        os_signpost_type_t v48 = sub_10006F3C0();
        if (sub_10006F4B0())
        {
          if (v46)
          {
            if (HIDWORD(v44)) {
              goto LABEL_116;
            }
            if (v44 >> 11 == 27) {
              goto LABEL_118;
            }
            BOOL v49 = v44 > 0x10FFFF;
            unint64_t v44 = v12 + 536;
            if (v49) {
              goto LABEL_117;
            }
          }
          else if (!v44)
          {
            goto LABEL_115;
          }
          swift_retain();
          sub_10006E340();
          swift_release();
          sub_100057318();
          os_log_type_t v51 = "[Error] Interval already ended";
          if (v50() != v217)
          {
            sub_1000551DC();
            v52();
            os_log_type_t v51 = "";
          }
          v234(*(void *)(v12 + 832), *(void *)(v12 + 824), *(void *)(v12 + 776));
          unint64_t v53 = (_WORD *)sub_100011554();
          os_signpost_id_t v54 = sub_100056D8C(v53);
          sub_100056B48((void *)&_mh_execute_header, v47, v48, v54, (const char *)v44, v51);
          sub_100058EB4();
          sub_10005521C();
          v55();
          sub_10001153C();
        }
        uint64_t v14 = *(void *)(v12 + 824);

        swift_release();
        sub_100058750();
        uint64_t v13 = v237;
        sub_100055B70();
        v56();
        sub_100056610();
        sub_10005521C();
        v57();
        sub_1000551DC();
        v58();
        sub_1000551DC();
        v59();
        unint64_t v23 = v225 + v220;
        uint64_t v21 = v227 - 1;
      }
      while (v227 != 1);
      swift_bridgeObjectRelease();
      uint64_t v19 = "ContainerIndexerError";
      uint64_t v18 = "ContainerIndexerError";
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    id v60 = [self sharedRegistry];
    uint64_t v61 = sub_10006F410();
    sub_10001A6DC(v61);
  }
  unint64_t v219 = v12 + 424;
  uint64_t v62 = *(void *)(v12 + 576);
  if ((*(void *)(v62 + *(int *)(_s23IndexingPreflightResultVMa(0) + 24)) & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_10006F570();
    sub_100058C8C();
    sub_100058494();
    sub_1000525E0(v63, v64);
    sub_100057DB4();
    sub_10006F1F0();
    uint64_t v65 = *(void *)(v12 + 256);
    uint64_t v62 = *(void *)(v12 + 264);
    uint64_t v66 = *(void *)(v12 + 272);
    uint64_t v67 = *(void *)(v12 + 280);
    uint64_t v13 = *(void *)(v12 + 288);
  }
  else
  {
    sub_100058CEC();
    uint64_t v66 = ~v68;
    sub_100058B70();
    uint64_t v65 = swift_bridgeObjectRetain();
    uint64_t v67 = 0;
  }
  *(void *)(v12 + 1000) = v66;
  *(void *)(v12 + 992) = v62;
  *(void *)(v12 + 984) = v65;
  *(void *)(v12 + 1008) = WFLogCategoryToolKit;
  *(void *)(v12 + 1016) = WFLogCategoryToolKitIndexing;
  int v218 = enum case for OSSignpostError.doubleEnd(_:);
  *(_DWORD *)(v12 + 1168) = enum case for OSSignpostError.doubleEnd(_:);
  long long v230 = *((_OWORD *)v18 + 108);
  int v226 = *((void *)v19 + 222);
  if (v65 < 0) {
    goto LABEL_27;
  }
LABEL_25:
  if (v13)
  {
    sub_1000599C4();
    uint64_t v71 = v70 | (v67 << 6);
    goto LABEL_38;
  }
  int64_t v74 = v67 + 1;
  if (__OFADD__(v67, 1)) {
    goto LABEL_123;
  }
  uint64_t v75 = *(void *)(v12 + 1000);
  if (v74 >= (uint64_t)((unint64_t)(v75 + 64) >> 6)) {
    goto LABEL_83;
  }
  uint64_t v76 = *(void *)(v12 + 992);
  if (*(void *)(v76 + 8 * v74))
  {
LABEL_37:
    sub_100011720();
    uint64_t v71 = v79 + (v74 << 6);
LABEL_38:
    id v73 = sub_100059954(v69, v71);
    while (1)
    {
      sub_100058B34();
      if (!v73) {
        goto LABEL_83;
      }
      uint64_t v80 = sub_10006F470();
      sub_10001A6DC(v80);
      id v81 = [v73 parameters];
      sub_10001028C(0, &qword_1000823F0);
      unint64_t v82 = sub_10006F0F0();
      *(void *)(v12 + 1048) = v82;

      if (v82 >> 62)
      {
        sub_100055CFC();
        sub_10006F6F0();
        sub_1000565F8();
      }
      else
      {
        sub_100056E10();
      }
      *(void *)(v12 + 1056) = v81;
      if (v81)
      {
        if (*(void *)(v12 + 600) >> 62)
        {
          sub_100055CFC();
          sub_10006F6F0();
          sub_1000565F8();
        }
        else
        {
          sub_100056E10();
        }
        *(void *)(v12 + 1064) = v81;
        while (1)
        {
          if ((*(void *)(v12 + 1048) & 0xC000000000000001) != 0)
          {
            uint64_t v83 = sub_10006F620();
          }
          else
          {
            sub_100058B18();
            if (v86)
            {
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              __break(1u);
              goto LABEL_114;
            }
            uint64_t v83 = (uint64_t)sub_100056DF8(v84, v85);
          }
          sub_100058CC4(v83);
          *(void *)(v12 + 1080) = v87;
          if (v88)
          {
            __break(1u);
            goto LABEL_84;
          }
          id v89 = [*(id *)(v12 + 1024) identifier];
          uint64_t v90 = sub_10006F050();
          uint64_t v92 = v91;

          *(void *)(v12 + 384) = v90;
          *(void *)(v12 + 392) = v92;
          v247._countAndFlagsBits = 35;
          v247._object = (void *)0xE100000000000000;
          sub_10006F0A0(v247);
          id v93 = [v81 key];
          sub_10006F050();

          sub_100059DBC();
          swift_bridgeObjectRelease();
          uint64_t v94 = *(void *)(v12 + 384);
          uint64_t v95 = *(void *)(v12 + 392);
          uint64_t v96 = sub_100055204();
          *(void *)(v96 + 16) = v94;
          *(void *)(v96 + 24) = v95;
          uint64_t v97 = sub_100055258();
          sub_100056B6C(v97);
          uint64_t v98 = sub_100055258();
          sub_100059830(v98);
          uint64_t v99 = sub_100055204();
          *(void *)(v99 + 16) = sub_10005319C;
          *(void *)(v99 + 24) = v96;
          sub_10000772C((uint64_t *)&unk_100082390);
          uint64_t v100 = swift_initStackObject();
          *(_OWORD *)(v100 + 16) = v230;
          *(void *)(v100 + 32) = sub_100054620;
          *(void *)(v100 + 40) = v97;
          *(void *)(v100 + 48) = sub_100054620;
          *(void *)(v100 + 56) = v98;
          *(void *)(v100 + 64) = sub_1000545D4;
          *(void *)(v100 + 72) = v99;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_10006E0C0();
          sub_10006E2E0();
          sub_10006E2B0();
          uint64_t v101 = sub_10006E2E0();
          os_signpost_type_t v102 = sub_10006F3D0();
          if (sub_10006F4B0())
          {
            uint64_t v240 = *(void *)(*(void *)(v12 + 784) + 16);
            sub_1000114F0();
            v103();
            Swift::Int v104 = (uint8_t *)sub_1000556B8();
            v245[0] = sub_100055530();
            *(_DWORD *)Swift::Int v104 = v226;
            swift_bridgeObjectRetain();
            swift_retain();
            uint64_t v105 = sub_100058538();
            *(void *)(v12 + 488) = sub_100046AE8(v105, v106, v107);
            sub_10006F4D0();
            swift_bridgeObjectRelease_n();
            swift_release();
            swift_release();
            swift_release();
            os_signpost_id_t v108 = sub_10006E2C0();
            _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v101, v102, v108, "IndexType", "type=%{signpost.description:attribute}s", v104, 0xCu);
            sub_100055234();
            v109();
            swift_arrayDestroy();
            sub_10001153C();
            sub_10001153C();

            uint64_t v110 = v240;
          }
          else
          {
            uint64_t v111 = *(void *)(v12 + 784);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();

            uint64_t v110 = *(void *)(v111 + 16);
          }
          *(void *)(v12 + 1088) = v110;
          uint64_t v241 = *(void *)(v12 + 1064);
          uint64_t v112 = *(void *)(v12 + 856);
          uint64_t v113 = *(void *)(v12 + 784);
          *(void *)(v12 + 1096) = (v113 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
          sub_1000114F0();
          v114();
          sub_10006E330();
          sub_1000568EC();
          sub_1000115BC();
          sub_1000114F0();
          v115();
          sub_100055D8C();
          *(void *)(v12 + 1104) = *(void *)(v113 + 8);
          *(void *)(v12 + 1112) = (v113 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          sub_100055240();
          v116();
          *(void *)(v12 + 1120) = *(void *)(v112 + 8);
          *(void *)(v12 + 1128) = (v112 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          sub_100055228();
          v117();
          if (v241) {
            break;
          }
          sub_10006E0B0();
          unint64_t v118 = sub_10006E0D0();
          char v120 = v119;
          sub_10006E0E0();
          uint64_t v121 = sub_10006E2E0();
          sub_10006E310();
          os_signpost_type_t v122 = sub_10006F3C0();
          if (sub_10006F4B0())
          {
            if (v120)
            {
              if (HIDWORD(v118)) {
                goto LABEL_111;
              }
              if (v118 >> 11 == 27) {
                goto LABEL_113;
              }
              BOOL v49 = v118 > 0x10FFFF;
              unint64_t v118 = v12 + 448;
              if (v49) {
                goto LABEL_112;
              }
            }
            else if (!v118)
            {
              goto LABEL_110;
            }
            os_signpost_type_t v242 = v122;
            int v123 = *(_DWORD *)(v12 + 1168);
            uint64_t v124 = *(void *)(v12 + 696);
            uint64_t v125 = *(void *)(v12 + 680);
            uint64_t v126 = *(void *)(v12 + 672);
            swift_retain();
            sub_10006E340();
            swift_release();
            int v127 = (*(uint64_t (**)(uint64_t, uint64_t))(v125 + 88))(v124, v126);
            uint64_t v128 = "[Error] Interval already ended";
            if (v127 != v123)
            {
              sub_10005521C();
              v129();
              uint64_t v128 = "";
            }
            uint64_t v130 = *(void (**)(uint64_t))(v12 + 1104);
            sub_100057458();
            v131(v124);
            id v132 = (_WORD *)sub_100011554();
            os_signpost_id_t v133 = sub_100056D8C(v132);
            sub_100056B48((void *)&_mh_execute_header, v121, v242, v133, (const char *)v118, v128);
            uint64_t v134 = sub_100057D28();
            v130(v134);
            sub_10001153C();
          }
          sub_100059764();
          v235 = v135;
          id v81 = *(id *)(v12 + 1112);
          uint64_t v136 = *(void (**)(uint64_t, uint64_t))(v12 + 1104);
          uint64_t v137 = *(void **)(v12 + 1072);
          uint64_t v238 = *(void *)(v12 + 1056);
          uint64_t v243 = *(void *)(v12 + 1080);
          uint64_t v138 = v121;
          uint64_t v139 = *(void *)(v12 + 928);
          unint64_t v231 = *(void *)(v12 + 920);
          uint64_t v140 = *(void *)(v12 + 808);
          uint64_t v141 = *(void *)(v12 + 776);

          swift_release();
          v136(v140, v141);
          uint64_t v142 = sub_100059C84();
          v235(v142);
          uint64_t v67 = v139 + 8;
          sub_1000556D0();
          v143();
          if (v243 == v238) {
            goto LABEL_66;
          }
        }
        if (*(uint64_t *)(v12 + 1064) < 1) {
          goto LABEL_119;
        }
        uint64_t v147 = *(void *)(v12 + 600);
        *(void *)(v12 + 1136) = 0;
        swift_bridgeObjectRetain();
        if ((v147 & 0xC000000000000001) != 0) {
          id v148 = (id)sub_10006F620();
        }
        else {
          id v148 = *(id *)(v147 + 32);
        }
        *(void *)(v12 + 1144) = v148;
        uint64_t v149 = swift_task_alloc();
        v150 = (void *)sub_100058574(v149);
        void *v150 = v151;
        v150[1] = sub_10002015C;
        sub_100056428();
        sub_100055194();
        sub_1000132E0(v152, v153, v154, v155, v156, v157, v158, v159, a9, a10, a11, a12);
        return;
      }
LABEL_66:
      uint64_t v144 = *(void **)(v12 + 1024);
      swift_bridgeObjectRelease();

      uint64_t v13 = *(void *)(v12 + 1040);
      uint64_t v67 = *(void *)(v12 + 1032);
      if ((*(void *)(v12 + 984) & 0x8000000000000000) == 0) {
        goto LABEL_25;
      }
LABEL_27:
      uint64_t v72 = sub_10006F5A0();
      if (!v72) {
        goto LABEL_83;
      }
      *(void *)(v12 + 504) = v72;
      sub_10001028C(0, &qword_100081E28);
      sub_100059AA4();
      sub_100059C84();
      sub_1000591F8();
      id v73 = *(id *)(v12 + 496);
      swift_unknownObjectRelease();
    }
  }
  int64_t v77 = (unint64_t)(v75 + 64) >> 6;
  int64_t v78 = v67 + 2;
  if (v67 + 2 < v77)
  {
    if (*(void *)(v76 + 8 * v78))
    {
LABEL_36:
      int64_t v74 = v78;
      goto LABEL_37;
    }
    int64_t v78 = v67 + 3;
    if (v67 + 3 < v77)
    {
      if (*(void *)(v76 + 8 * v78)) {
        goto LABEL_36;
      }
      int64_t v74 = v67 + 4;
      if (v67 + 4 < v77)
      {
        if (!*(void *)(v76 + 8 * v74))
        {
          int64_t v145 = v67 + 5;
          while (v145 < v77)
          {
            if (*(void *)(v76 + 8 * v145++))
            {
              int64_t v74 = v145 - 1;
              goto LABEL_37;
            }
          }
          goto LABEL_84;
        }
        goto LABEL_37;
      }
    }
  }
LABEL_83:
  sub_100058B60();
LABEL_84:
  sub_1000102C8();
  uint64_t v224 = *(void *)(*(void *)v216 + 16);
  if (!v224)
  {
LABEL_104:
    swift_bridgeObjectRelease();
    sub_100055684();
    sub_10005684C();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1000115DC();
    sub_100055194();
    v209(v208, v209, v210, v211, v212, v213, v214, v215, a9, a10, a11, a12);
    return;
  }
  unint64_t v160 = 0;
  uint64_t v223 = *(void *)v216 + 32;
  v244 = (void *)v12;
  sub_100058804();
  uint64_t v222 = v161;
  while (v160 < *(void *)(v161 + 16))
  {
    uint64_t v162 = v244;
    uint64_t v239 = *(void *)(v223 + 8 * v160);
    v244[64] = v239;
    sub_10000772C(&qword_100082138);
    uint64_t v163 = sub_10006F060();
    unint64_t v165 = v164;
    uint64_t v166 = sub_100055204();
    uint64_t v236 = v163;
    *(void *)(v166 + 16) = v163;
    *(void *)(v166 + 24) = v165;
    uint64_t v167 = sub_100055258();
    sub_100056B6C(v167);
    uint64_t v168 = sub_100055258();
    sub_100058A6C(v168);
    uint64_t v169 = sub_100055204();
    *(void *)(v169 + 16) = sub_10005462C;
    *(void *)(v169 + 24) = v166;
    sub_10000772C((uint64_t *)&unk_100082390);
    uint64_t v170 = swift_initStackObject();
    *(_OWORD *)(v170 + 16) = v230;
    *(void *)(v170 + 32) = sub_100054620;
    *(void *)(v170 + 40) = v167;
    *(void *)(v170 + 48) = sub_100054620;
    *(void *)(v170 + 56) = v67;
    *(void *)(v170 + 64) = sub_1000545D4;
    *(void *)(v170 + 72) = v169;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10006E0C0();
    sub_10006E2E0();
    sub_10006E2B0();
    v171 = sub_10006E2E0();
    uint64_t v172 = sub_10006F3D0();
    unint64_t v228 = v160;
    if (sub_10006F4B0())
    {
      LODWORD(v231) = v172;
      uint64_t v173 = v244[98];
      sub_100058FE4();
      sub_1000114F0();
      v174();
      v175 = (uint8_t *)sub_1000556B8();
      v245[0] = sub_100055530();
      *(_DWORD *)v175 = v226;
      swift_bridgeObjectRetain();
      swift_retain();
      v244[50] = sub_100046AE8(v236, v165, v245);
      sub_10006F4D0();
      sub_100057758();
      swift_release();
      swift_release();
      swift_release();
      os_signpost_id_t v176 = sub_10006E2C0();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v171, (os_signpost_type_t)v231, v176, "IndexType", "type=%{signpost.description:attribute}s", v175, 0xCu);
      uint64_t v172 = v173 + 8;
      sub_10005527C();
      v177();
      swift_arrayDestroy();
      sub_10001153C();
      sub_10001153C();
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }

    sub_100055BD4();
    sub_1000114F0();
    v178();
    sub_10006E330();
    sub_1000568EC();
    sub_1000115BC();
    sub_1000114F0();
    v179();
    sub_100055D8C();
    sub_100055B70();
    v180();
    v181 = *(void (**)(void))(v172 + 8);
    sub_100056304();
    sub_10005527C();
    v181();
    swift_retain();
    v182 = sub_1000262DC(v231, v165, v239);
    uint64_t v183 = v182[2];
    if (v183)
    {
      sub_10006E8F0();
      sub_1000568AC();
      unint64_t v231 = (unint64_t)v182;
      uint64_t v185 = (char *)v182 + v184;
      uint64_t v187 = *(void *)(v186 + 72);
      v188 = *(void (**)(uint64_t))(v186 + 16);
      do
      {
        uint64_t v189 = sub_1000584F0();
        v188(v189);
        sub_10006E8E0();
        sub_100057200();
        sub_10006E8C0();
        swift_release();
        sub_100058538();
        sub_100011784();
        v190();
        uint64_t v162 = v244;
        v185 += v187;
        --v183;
      }
      while (v183);
    }
    swift_bridgeObjectRelease();
    sub_10006E0B0();
    unint64_t v191 = sub_10006E0D0();
    char v193 = v192;
    sub_10006E0E0();
    uint64_t v67 = sub_10006E2E0();
    sub_10006E310();
    os_signpost_type_t v194 = sub_10006F3C0();
    if (sub_10006F4B0())
    {
      if (v193)
      {
        if (HIDWORD(v191)) {
          goto LABEL_121;
        }
        if (v191 >> 11 == 27) {
          goto LABEL_124;
        }
        BOOL v49 = v191 > 0x10FFFF;
        unint64_t v191 = v219;
        if (v49) {
          goto LABEL_122;
        }
      }
      else if (!v191)
      {
        goto LABEL_120;
      }
      uint64_t v195 = v162[86];
      uint64_t v196 = v244[85];
      uint64_t v197 = v244[84];
      swift_retain();
      sub_10006E340();
      swift_release();
      int v198 = (*(uint64_t (**)(uint64_t, uint64_t))(v196 + 88))(v195, v197);
      uint64_t v199 = "[Error] Interval already ended";
      if (v198 != v218)
      {
        sub_10005521C();
        v200();
        uint64_t v199 = "";
      }
      sub_100055270();
      v201();
      uint64_t v202 = (_WORD *)sub_100011554();
      os_signpost_id_t v203 = sub_100056D8C(v202);
      sub_100056B48((void *)&_mh_execute_header, v67, v194, v203, (const char *)v191, v199);
      sub_100059C20();
      sub_10005521C();
      v204();
      sub_10001153C();
    }
    unint64_t v160 = v228 + 1;

    swift_release();
    sub_1000593A8();
    sub_10005521C();
    v205();
    sub_100056304();
    sub_10005521C();
    v206();
    sub_100011784();
    v207();
    uint64_t v161 = v222;
    if (v228 + 1 == v224) {
      goto LABEL_104;
    }
  }
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
}

uint64_t sub_10002015C()
{
  sub_1000114D4();
  sub_100011474();
  sub_1000114FC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1000114E0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 1160) = v0;
  swift_task_dealloc();
  sub_1000115E8();
  return _swift_task_switch(v7, v8, v9);
}

void sub_100020238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v223 = v12;
  uint64_t v13 = *(void **)(v12 + 1144);
  sub_10006E8F0();
  sub_10006E8E0();
  sub_10006E8C0();
  swift_release();

  sub_100011758();
  sub_100055B70();
  v14();
  uint64_t v15 = *(void *)(v12 + 1136) + 1;
  if (v15 != *(void *)(v12 + 1064))
  {
    uint64_t v101 = *(void *)(v12 + 600);
LABEL_54:
    *(void *)(v12 + 1136) = v15;
    if ((v101 & 0xC000000000000001) != 0) {
      id v102 = (id)sub_10006F620();
    }
    else {
      id v102 = *(id *)(v101 + 8 * v15 + 32);
    }
    *(void *)(v12 + 1144) = v102;
    uint64_t v103 = swift_task_alloc();
    Swift::Int v104 = (void *)sub_100058574(v103);
    *Swift::Int v104 = v105;
    v104[1] = sub_10002015C;
    sub_100056428();
    sub_100056C50();
    sub_1000132E0(v106, v107, v108, v109, v110, v111, v112, v113, a9, a10, a11, a12);
    return;
  }
  uint64_t v199 = v12 + 400;
  uint64_t v195 = (uint64_t *)(v12 + 416);
  uint64_t v219 = *(void *)(v12 + 1160);
  Swift::String v204 = (uint64_t *)(v12 + 528);
  swift_bridgeObjectRelease();
  *((void *)&v16 + 1) = 6;
  *(void *)&long long v16 = 136315138;
  long long v200 = v16;
  do
  {
    sub_10006E0B0();
    unint64_t v17 = sub_10006E0D0();
    char v19 = v18;
    sub_10006E0E0();
    uint64_t v20 = sub_10006E2E0();
    sub_10006E310();
    os_signpost_type_t v21 = sub_10006F3C0();
    if (sub_10006F4B0())
    {
      if (v19)
      {
        if (HIDWORD(v17)) {
          goto LABEL_103;
        }
        if (v17 >> 11 == 27) {
          goto LABEL_105;
        }
        BOOL v22 = v17 > 0x10FFFF;
        unint64_t v17 = v12 + 448;
        if (v22) {
          goto LABEL_104;
        }
      }
      else if (!v17)
      {
        goto LABEL_102;
      }
      os_signpost_type_t v215 = v21;
      int v23 = *(_DWORD *)(v12 + 1168);
      uint64_t v24 = *(void *)(v12 + 696);
      uint64_t v25 = *(void *)(v12 + 680);
      uint64_t v26 = *(void *)(v12 + 672);
      swift_retain();
      sub_10006E340();
      swift_release();
      int v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 88))(v24, v26);
      uint64_t v28 = "[Error] Interval already ended";
      if (v27 != v23)
      {
        sub_10005521C();
        v29();
        uint64_t v28 = "";
      }
      uint64_t v30 = *(void (**)(uint64_t))(v12 + 1104);
      sub_100057458();
      v31(v24);
      uint64_t v32 = (_WORD *)sub_100011554();
      os_signpost_id_t v33 = sub_100056D8C(v32);
      sub_100056B48((void *)&_mh_execute_header, v20, v215, v33, (const char *)v17, v28);
      uint64_t v34 = sub_100059C20();
      v30(v34);
      sub_10001153C();
    }
    sub_100059764();
    uint64_t v210 = v35;
    uint64_t v212 = v36;
    id v37 = *(id *)(v12 + 1112);
    uint64_t v38 = *(void (**)(uint64_t))(v12 + 1104);
    uint64_t v39 = v20;
    uint64_t v40 = *(void **)(v12 + 1072);
    uint64_t v213 = *(void *)(v12 + 1056);
    uint64_t v216 = *(void *)(v12 + 1080);
    uint64_t v41 = *(void *)(v12 + 928);
    uint64_t v206 = *(void *)(v12 + 920);
    uint64_t v209 = *(void *)(v12 + 944);

    swift_release();
    uint64_t v42 = sub_1000593A8();
    v38(v42);
    uint64_t v43 = sub_100056610();
    v210(v43);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v209, v206);
    if (v216 == v213)
    {
      unint64_t v44 = *(void **)(v12 + 1024);
      swift_bridgeObjectRelease();

      unint64_t v45 = *(void *)(v12 + 1040);
      uint64_t v46 = *(void *)(v12 + 1032);
      uint64_t v47 = *(void *)(v12 + 984);
      if (v47 < 0)
      {
        uint64_t v49 = sub_10006F5A0();
        if (!v49) {
          goto LABEL_61;
        }
        uint64_t v50 = sub_100059898(v49);
        sub_10001028C(v50, &qword_100081E28);
        sub_100059AA4();
        sub_1000571A4();
        sub_1000591F8();
        id v37 = *(id *)(v12 + 496);
        swift_unknownObjectRelease();
        goto LABEL_33;
      }
      if (v45)
      {
        unint64_t v48 = __clz(__rbit64(v45)) | (v46 << 6);
LABEL_32:
        id v37 = sub_100059954(v47, v48);
LABEL_33:
        sub_100058B34();
        if (!v37) {
          goto LABEL_61;
        }
        uint64_t v57 = sub_10006F470();
        sub_10001A6DC(v57);
        id v58 = [v37 parameters];
        sub_100059A84();
        unint64_t v59 = sub_10006F0F0();
        *(void *)(v12 + 1048) = v59;

        if (v59 >> 62)
        {
          sub_100055CFC();
          sub_10006F6F0();
          sub_1000565F8();
        }
        else
        {
          sub_100056E10();
        }
        *(void *)(v12 + 1056) = v37;
        if (*(void *)(v12 + 600) >> 62)
        {
          sub_100055CFC();
          sub_10006F6F0();
          sub_1000565F8();
        }
        else
        {
          sub_100056E10();
        }
        *(void *)(v12 + 1064) = v37;
        goto LABEL_42;
      }
      int64_t v51 = v46 + 1;
      if (__OFADD__(v46, 1)) {
        goto LABEL_98;
      }
      unint64_t v52 = *(void *)(v12 + 1000) + 64;
      if (v51 >= (uint64_t)(v52 >> 6))
      {
LABEL_60:
        unint64_t v45 = 0;
LABEL_61:
        sub_100058B60();
      }
      else
      {
        uint64_t v53 = *(void *)(v12 + 992);
        if (*(void *)(v53 + 8 * v51)) {
          goto LABEL_31;
        }
        int64_t v54 = v52 >> 6;
        if (v46 + 2 >= v54) {
          goto LABEL_60;
        }
        if (*(void *)(v53 + 8 * (v46 + 2))) {
          goto LABEL_31;
        }
        if (v46 + 3 >= v54) {
          goto LABEL_60;
        }
        if (*(void *)(v53 + 8 * (v46 + 3))) {
          goto LABEL_31;
        }
        if (v46 + 4 >= v54) {
          goto LABEL_60;
        }
        if (*(void *)(v53 + 8 * (v46 + 4)))
        {
LABEL_31:
          sub_1000582E8();
          goto LABEL_32;
        }
        int64_t v55 = v46 + 5;
        while (v55 < v54)
        {
          if (*(void *)(v53 + 8 * v55++)) {
            goto LABEL_31;
          }
        }
        unint64_t v45 = 0;
      }
      sub_1000102C8();
      uint64_t v114 = *v204;
      uint64_t v205 = *(void *)(*v204 + 16);
      if (!v205)
      {
LABEL_88:
        swift_bridgeObjectRelease();
        sub_100055684();
        sub_10005684C();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        sub_1000115DC();
        sub_100056C50();
        __asm { BRAA            X1, X16 }
      }
      unint64_t v115 = 0;
      uint64_t v203 = v114 + 32;
      sub_1000591A4();
      HIDWORD(v196) = enum case for OSSignpostError.doubleEnd(_:);
      int v198 = (char *)&type metadata for Any + 8;
      *(void *)&long long v116 = 136315394;
      long long v193 = v116;
      sub_100058804();
      uint64_t v201 = v118;
      uint64_t v202 = v117;
      while (v115 < *(void *)(v117 + 16))
      {
        unint64_t v211 = v115;
        uint64_t v220 = *(void *)(v203 + 8 * v115);
        *(void *)(v12 + 512) = v220;
        sub_10000772C(&qword_100082138);
        uint64_t v119 = sub_10006F060();
        unint64_t v121 = v120;
        uint64_t v122 = sub_100055204();
        *(void *)(v122 + 16) = v119;
        *(void *)(v122 + 24) = v121;
        uint64_t v123 = sub_100055258();
        sub_100056B6C(v123);
        uint64_t v124 = sub_100055258();
        sub_100058A6C(v124);
        uint64_t v125 = sub_100055204();
        *(void *)(v125 + 16) = sub_10005462C;
        *(void *)(v125 + 24) = v122;
        sub_10000772C((uint64_t *)&unk_100082390);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1000716C0;
        *(void *)(inited + 32) = sub_100054620;
        *(void *)(inited + 40) = v123;
        *(void *)(inited + 48) = sub_100054620;
        *(void *)(inited + 56) = v45;
        *(void *)(inited + 64) = sub_1000545D4;
        *(void *)(inited + 72) = v125;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_10006E0C0();
        sub_10006E2E0();
        sub_10006E2B0();
        int v127 = sub_10006E2E0();
        os_signpost_type_t v128 = sub_10006F3D0();
        if (sub_10006F4B0())
        {
          uint64_t v214 = v127;
          uint64_t v129 = *(NSObject **)(v12 + 784);
          sub_1000114F0();
          v130();
          os_signpost_type_t v208 = v128;
          uint64_t v131 = v119;
          id v132 = (uint8_t *)sub_1000556B8();
          uint64_t v212 = sub_100055530();
          v222[0] = v212;
          *(_DWORD *)id v132 = sub_1000592F0(v212, v133, v134, v135, v136, v137, v138, v139, v190, v191, v193, *((uint64_t *)&v193 + 1), (uint64_t)v195, v196, (uint64_t)v198, v199, v200).n128_u32[0];
          swift_bridgeObjectRetain();
          swift_retain();
          *(void *)(v12 + 400) = sub_100046AE8(v131, v121, v222);
          sub_10006F4D0();
          swift_bridgeObjectRelease_n();
          swift_release();
          swift_release();
          swift_release();
          os_signpost_id_t v140 = sub_10006E2C0();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v214, v208, v140, "IndexType", "type=%{signpost.description:attribute}s", v132, 0xCu);
          int v127 = v129 + 1;
          sub_100055C1C();
          v141();
          uint64_t v125 = v212;
          swift_arrayDestroy();
          sub_10001153C();
          sub_10001153C();
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
        }
        sub_100055BD4();
        sub_1000114F0();
        v142();
        sub_10006E330();
        sub_1000568EC();
        sub_1000115BC();
        sub_1000114F0();
        v143();
        sub_100055D8C();
        sub_100055B70();
        v144();
        uint64_t v145 = v125 + 8;
        sub_100056304();
        sub_10005527C();
        v146();
        swift_retain();
        uint64_t v147 = sub_1000262DC(v212, (uint64_t)v127, v220);
        if (v219)
        {
          sub_10006E280();
          swift_errorRetain();
          swift_errorRetain();
          id v148 = sub_10006E350();
          os_log_type_t v149 = sub_10006F310();
          BOOL v150 = os_log_type_enabled(v148, v149);
          uint64_t v151 = *(void *)(v12 + 632);
          if (v150)
          {
            uint64_t v152 = sub_100056678();
            uint64_t v153 = (void *)sub_100057B90();
            uint64_t v212 = v151;
            v222[0] = sub_100055530();
            *(_DWORD *)uint64_t v152 = v193;
            uint64_t v154 = sub_10006F850();
            *uint64_t v195 = sub_100046AE8(v154, v155, v222);
            sub_10006F4D0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v152 + 12) = 2112;
            swift_errorRetain();
            uint64_t v156 = _swift_stdlib_bridgeErrorToNSError();
            *(void *)(v12 + 408) = v156;
            sub_10006F4D0();
            *uint64_t v153 = v156;
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v148, v149, "Failed to index content item type %s: %@", (uint8_t *)v152, 0x16u);
            sub_10000772C(&qword_100082350);
            swift_arrayDestroy();
            sub_10001153C();
            sub_100058C70();
            sub_10001153C();
            sub_10001153C();

            sub_1000551DC();
            v157();
          }
          else
          {
            swift_errorRelease();
            swift_errorRelease();

            uint64_t v166 = sub_100057DB4();
            v167(v166);
          }
          sub_10006E8E0();
          sub_1000569C8();
          swift_bridgeObjectRelease();
          sub_100058618();
          v222[1] = v201;
          v225._countAndFlagsBits = sub_10006F850();
          sub_10006F0A0(v225);
          swift_bridgeObjectRelease();
          swift_getErrorValue();
          sub_10006F7D0();
          sub_1000561A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_errorRelease();
        }
        else
        {
          uint64_t v158 = v147[2];
          if (v158)
          {
            sub_1000568AC();
            uint64_t v212 = v159;
            uint64_t v161 = v159 + v160;
            uint64_t v221 = *(void *)(v162 + 72);
            do
            {
              uint64_t v163 = sub_100056534();
              v164(v163);
              sub_10006E8E0();
              sub_10006E8C0();
              swift_release();
              v145 += 8;
              sub_10005527C();
              v165();
              v161 += v221;
              --v158;
            }
            while (v158);
          }
          swift_bridgeObjectRelease();
        }
        unint64_t v45 = *(void *)(v12 + 792);
        sub_10006E0B0();
        unint64_t v168 = sub_10006E0D0();
        char v170 = v169;
        sub_10006E0E0();
        v171 = sub_10006E2E0();
        sub_10006E310();
        os_signpost_type_t v172 = sub_10006F3C0();
        if (sub_10006F4B0())
        {
          if (v170)
          {
            if (HIDWORD(v168)) {
              goto LABEL_96;
            }
            if (v168 >> 11 == 27) {
              goto LABEL_99;
            }
            BOOL v22 = v168 > 0x10FFFF;
            unint64_t v168 = v12 + 424;
            if (v22) {
              goto LABEL_97;
            }
          }
          else if (!v168)
          {
            goto LABEL_95;
          }
          uint64_t v173 = *(void *)(v12 + 688);
          uint64_t v174 = *(void *)(v12 + 680);
          uint64_t v175 = *(void *)(v12 + 672);
          swift_retain();
          sub_10006E340();
          swift_release();
          os_signpost_id_t v176 = *(uint64_t (**)(uint64_t, uint64_t))(v174 + 88);
          unint64_t v45 = v174 + 88;
          int v177 = v176(v173, v175);
          v178 = "[Error] Interval already ended";
          if (v177 != HIDWORD(v196))
          {
            sub_10005521C();
            v179();
            v178 = "";
          }
          sub_1000578B0();
          sub_100055270();
          v180();
          v181 = (_WORD *)sub_100011554();
          os_signpost_id_t v182 = sub_100056D8C(v181);
          sub_100056B48((void *)&_mh_execute_header, v171, v172, v182, (const char *)v168, v178);
          sub_10005521C();
          v183();
          sub_10001153C();
        }
        uint64_t v184 = v171;
        unint64_t v115 = v211;
        sub_100056C20(v184);
        swift_release();
        sub_10005521C();
        v185();
        sub_100056304();
        sub_10005521C();
        v186();
        sub_100055228();
        v187();
        uint64_t v219 = 0;
        uint64_t v117 = v202;
        if (v211 == v205) {
          goto LABEL_88;
        }
      }
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
      goto LABEL_106;
    }
LABEL_42:
    if ((*(void *)(v12 + 1048) & 0xC000000000000001) != 0)
    {
      uint64_t v60 = sub_10006F620();
    }
    else
    {
      sub_100058B18();
      if (v63) {
        goto LABEL_101;
      }
      uint64_t v60 = (uint64_t)sub_100056DF8(v61, v62);
    }
    sub_100058CC4(v60);
    *(void *)(v12 + 1080) = v64;
    if (v65) {
      goto LABEL_100;
    }
    id v66 = [*(id *)(v12 + 1024) identifier];
    uint64_t v67 = sub_10006F050();
    uint64_t v69 = v68;

    *(void *)(v12 + 384) = v67;
    *(void *)(v12 + 392) = v69;
    v224._countAndFlagsBits = 35;
    v224._object = (void *)0xE100000000000000;
    sub_10006F0A0(v224);
    id v70 = [v37 key];
    sub_10006F050();

    sub_100059DBC();
    swift_bridgeObjectRelease();
    uint64_t v71 = *(void *)(v12 + 384);
    unint64_t v72 = *(void *)(v12 + 392);
    uint64_t v73 = sub_100055204();
    *(void *)(v73 + 16) = v71;
    *(void *)(v73 + 24) = v72;
    uint64_t v74 = sub_100055258();
    sub_100056B6C(v74);
    uint64_t v75 = sub_100055258();
    sub_100059830(v75);
    uint64_t v76 = sub_100055204();
    *(void *)(v76 + 16) = sub_10005319C;
    *(void *)(v76 + 24) = v73;
    sub_10000772C((uint64_t *)&unk_100082390);
    uint64_t v77 = swift_initStackObject();
    *(_OWORD *)(v77 + 16) = xmmword_1000716C0;
    *(void *)(v77 + 32) = sub_100054620;
    *(void *)(v77 + 40) = v74;
    *(void *)(v77 + 48) = sub_100054620;
    *(void *)(v77 + 56) = v75;
    *(void *)(v77 + 64) = sub_1000545D4;
    *(void *)(v77 + 72) = v76;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10006E0C0();
    sub_10006E2E0();
    sub_10006E2B0();
    int64_t v78 = sub_10006E2E0();
    os_signpost_type_t v79 = sub_10006F3D0();
    if (sub_10006F4B0())
    {
      sub_100058FE4();
      uint64_t v217 = v80;
      sub_1000114F0();
      v81();
      os_signpost_type_t v207 = v79;
      uint64_t v82 = v71;
      uint64_t v83 = (uint8_t *)sub_1000556B8();
      v222[0] = sub_100055530();
      *(_DWORD *)uint64_t v83 = sub_1000592F0(v222[0], v84, v85, v86, v87, v88, v89, v90, v190, v191, v192, v194, (uint64_t)v195, v196, v197, v199, v200).n128_u32[0];
      swift_bridgeObjectRetain();
      swift_retain();
      *(void *)(v12 + 488) = sub_100046AE8(v82, v72, v222);
      sub_10006F4D0();
      swift_bridgeObjectRelease_n();
      swift_release();
      swift_release();
      swift_release();
      os_signpost_id_t v91 = sub_10006E2C0();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v78, v207, v91, "IndexType", "type=%{signpost.description:attribute}s", v83, 0xCu);
      sub_10005527C();
      v92();
      swift_arrayDestroy();
      sub_10001153C();
      sub_10001153C();

      uint64_t v93 = v217;
    }
    else
    {
      uint64_t v94 = *(void *)(v12 + 784);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();

      uint64_t v93 = *(void *)(v94 + 16);
    }
    *(void *)(v12 + 1088) = v93;
    uint64_t v218 = *(void *)(v12 + 1064);
    uint64_t v95 = *(void *)(v12 + 856);
    uint64_t v96 = *(void *)(v12 + 784);
    *(void *)(v12 + 1096) = (v96 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    sub_1000114F0();
    v97();
    sub_10006E330();
    sub_1000568EC();
    sub_1000115BC();
    sub_1000114F0();
    v98();
    sub_100055D8C();
    *(void *)(v12 + 1104) = *(void *)(v96 + 8);
    *(void *)(v12 + 1112) = (v96 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    sub_100055240();
    v99();
    *(void *)(v12 + 1120) = *(void *)(v95 + 8);
    *(void *)(v12 + 1128) = (v95 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    sub_100055228();
    v100();
  }
  while (!v218);
  if (*(uint64_t *)(v12 + 1064) >= 1)
  {
    uint64_t v101 = *(void *)(v12 + 600);
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
    goto LABEL_54;
  }
LABEL_106:
  __break(1u);
}

void sub_1000215DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v246 = v12;
  uint64_t v13 = *(void **)(v12 + 1144);
  uint64_t v14 = *(void **)(v12 + 1072);
  uint64_t v15 = *(void **)(v12 + 1024);
  sub_10006E280();
  id v16 = v14;
  id v17 = v15;
  swift_errorRetain();
  id v18 = v13;
  id v19 = v16;
  id v20 = v17;
  swift_errorRetain();
  id v21 = v18;
  BOOL v22 = sub_10006E350();
  os_log_type_t v23 = sub_10006F310();
  if (os_log_type_enabled(v22, v23))
  {
    id v228 = *(id *)(v12 + 1144);
    uint64_t v24 = *(void **)(v12 + 1072);
    id v225 = *(id *)(v12 + 1024);
    swift_slowAlloc();
    int v226 = (void *)sub_1000573E4();
    v245[0] = sub_10005703C();
    *(_DWORD *)(v12 + 488) = 138413058;
    os_log_type_t v232 = v23;
    *(void *)(v12 + 456) = v24;
    id v25 = v24;
    sub_10006F4D0();
    *int v226 = v24;

    *(_WORD *)(v12 + 500) = 2080;
    id v26 = [v225 identifier];
    sub_10006F050();

    uint64_t v27 = sub_1000584E4();
    *(void *)(v12 + 464) = sub_100046AE8(v27, v28, v29);
    sub_100058494();
    sub_10006F4D0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v12 + 510) = 2112;
    swift_errorRetain();
    uint64_t v30 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v12 + 472) = v30;
    sub_10006F4D0();
    v226[1] = v30;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v12 + 520) = 2080;
    id v31 = [v228 locale];
    sub_10006DEA0();

    uint64_t v32 = sub_10006DE50();
    unint64_t v34 = v33;
    sub_1000551DC();
    v35();
    *(void *)(v12 + 480) = sub_100046AE8(v32, v34, v245);
    sub_10006F4D0();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v22, v232, "Failed to index parameter type: %@ in %s: %@ for locale: %s", (uint8_t *)(v12 + 488), 0x2Au);
    sub_10000772C(&qword_100082350);
    swift_arrayDestroy();
    sub_10001153C();
    sub_100057D9C();
    sub_10001153C();
    sub_10001153C();

    sub_1000551DC();
    v36();
  }
  else
  {
    id v37 = *(void **)(v12 + 1144);
    uint64_t v38 = *(void **)(v12 + 1072);
    uint64_t v39 = *(void **)(v12 + 1024);

    swift_errorRelease();
    swift_errorRelease();

    uint64_t v40 = sub_100011758();
    v41(v40);
  }
  uint64_t v42 = *(void **)(v12 + 1144);
  uint64_t v43 = *(void **)(v12 + 1072);
  unint64_t v44 = *(void **)(v12 + 1024);
  sub_10006E8F0();
  sub_10006E8E0();
  sub_10004651C(40);
  swift_bridgeObjectRelease();
  *(void *)(v12 + 368) = 0x6574656D61726170;
  *(void *)(v12 + 376) = 0xEA00000000002072;
  id v45 = [v43 key];
  sub_10006F050();

  v247._countAndFlagsBits = sub_100057200();
  sub_10006F0A0(v247);
  swift_bridgeObjectRelease();
  v248._countAndFlagsBits = 0x6974636120666F20;
  v248._object = (void *)0xEB00000000206E6FLL;
  sub_10006F0A0(v248);
  id v46 = [v44 identifier];
  sub_10006F050();

  v249._countAndFlagsBits = sub_100057DB4();
  sub_10006F0A0(v249);
  swift_bridgeObjectRelease();
  v250._countAndFlagsBits = 0x636F6C20726F6620;
  v250._object = (void *)0xED0000203A656C61;
  sub_10006F0A0(v250);
  id v47 = [v42 locale];
  sub_10006DEA0();

  uint64_t v48 = sub_10006DE50();
  uint64_t v50 = v49;
  sub_100055228();
  v51();
  v251._countAndFlagsBits = v48;
  v251._object = v50;
  sub_10006F0A0(v251);
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  sub_10006F7D0();
  sub_100057DB4();
  sub_10006E8D0();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_errorRelease();
  uint64_t v52 = *(void *)(v12 + 1136) + 1;
  uint64_t v53 = *(void *)(v12 + 600);
  if (v52 != *(void *)(v12 + 1064))
  {
LABEL_85:
    *(void *)(v12 + 1136) = v52;
    if ((v53 & 0xC000000000000001) != 0) {
      id v201 = (id)sub_10006F620();
    }
    else {
      id v201 = *(id *)(v53 + 8 * v52 + 32);
    }
    *(void *)(v12 + 1144) = v201;
    uint64_t v202 = swift_task_alloc();
    uint64_t v203 = (void *)sub_100058574(v202);
    *uint64_t v203 = v204;
    v203[1] = sub_10002015C;
    sub_100056428();
    sub_100056C50();
    sub_1000132E0(v205, v206, v207, v208, v209, v210, v211, v212, a9, a10, a11, a12);
    return;
  }
  uint64_t v222 = v12 + 400;
  unint64_t v224 = v12 + 424;
  uint64_t v218 = v12 + 416;
  id v229 = (id)(v12 + 528);
  swift_bridgeObjectRelease();
  *((void *)&v54 + 1) = 6;
  *(void *)&long long v54 = 136315138;
  long long v223 = v54;
  do
  {
    sub_10006E0B0();
    unint64_t v55 = sub_10006E0D0();
    char v57 = v56;
    sub_10006E0E0();
    id v58 = sub_10006E2E0();
    sub_10006E310();
    os_signpost_type_t v59 = sub_10006F3C0();
    if (sub_10006F4B0())
    {
      if (v57)
      {
        if (HIDWORD(v55)) {
          goto LABEL_101;
        }
        if (v55 >> 11 == 27) {
          goto LABEL_103;
        }
        BOOL v60 = v55 > 0x10FFFF;
        unint64_t v55 = v12 + 448;
        if (v60) {
          goto LABEL_102;
        }
      }
      else if (!v55)
      {
        goto LABEL_100;
      }
      os_signpost_type_t v238 = v59;
      int v61 = *(_DWORD *)(v12 + 1168);
      uint64_t v62 = *(void *)(v12 + 696);
      uint64_t v63 = *(void *)(v12 + 680);
      uint64_t v64 = *(void *)(v12 + 672);
      swift_retain();
      sub_10006E340();
      swift_release();
      int v65 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 88))(v62, v64);
      id v66 = "[Error] Interval already ended";
      if (v65 != v61)
      {
        sub_10005521C();
        v67();
        id v66 = "";
      }
      uint64_t v68 = *(void (**)(uint64_t))(v12 + 1104);
      sub_100057458();
      v69(v62);
      id v70 = (_WORD *)sub_100011554();
      os_signpost_id_t v71 = sub_100056D8C(v70);
      sub_100056B48((void *)&_mh_execute_header, v58, v238, v71, (const char *)v55, v66);
      uint64_t v72 = sub_100058EB4();
      v68(v72);
      sub_10001153C();
    }
    sub_100059764();
    v235 = v73;
    id v74 = *(id *)(v12 + 1112);
    uint64_t v75 = *(void (**)(uint64_t))(v12 + 1104);
    uint64_t v76 = v58;
    uint64_t v77 = *(void **)(v12 + 1072);
    uint64_t v237 = *(void *)(v12 + 1056);
    uint64_t v239 = *(void *)(v12 + 1080);
    uint64_t v78 = *(void *)(v12 + 928);
    uint64_t v233 = *(void *)(v12 + 920);
    uint64_t v234 = *(void *)(v12 + 944);

    swift_release();
    uint64_t v79 = sub_100058750();
    v75(v79);
    uint64_t v80 = sub_100056610();
    v235(v80);
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v234, v233);
    if (v239 == v237)
    {
      id v81 = *(void **)(v12 + 1024);
      swift_bridgeObjectRelease();

      uint64_t v82 = *(void *)(v12 + 1032);
      if ((*(void *)(v12 + 984) & 0x8000000000000000) != 0)
      {
        uint64_t v86 = sub_10006F5A0();
        if (!v86) {
          goto LABEL_56;
        }
        uint64_t v87 = sub_100059898(v86);
        sub_10001028C(v87, &qword_100081E28);
        sub_100059AA4();
        sub_10005959C();
        sub_1000591F8();
        id v74 = *(id *)(v12 + 496);
        swift_unknownObjectRelease();
        goto LABEL_36;
      }
      if (*(void *)(v12 + 1040))
      {
        sub_1000599C4();
        uint64_t v85 = v84 | (v82 << 6);
LABEL_35:
        id v74 = sub_100059954(v83, v85);
LABEL_36:
        sub_100058B34();
        if (!v74) {
          goto LABEL_56;
        }
        uint64_t v94 = sub_10006F470();
        sub_10001A6DC(v94);
        id v95 = [v74 parameters];
        sub_100059A84();
        unint64_t v96 = sub_10006F0F0();
        *(void *)(v12 + 1048) = v96;

        if (v96 >> 62)
        {
          sub_100055CFC();
          sub_10006F6F0();
          sub_1000565F8();
        }
        else
        {
          sub_100056E10();
        }
        *(void *)(v12 + 1056) = v74;
        if (*(void *)(v12 + 600) >> 62)
        {
          sub_100055CFC();
          sub_10006F6F0();
          sub_1000565F8();
        }
        else
        {
          sub_100056E10();
        }
        *(void *)(v12 + 1064) = v74;
        goto LABEL_45;
      }
      int64_t v88 = v82 + 1;
      if (__OFADD__(v82, 1)) {
        goto LABEL_96;
      }
      unint64_t v89 = *(void *)(v12 + 1000) + 64;
      if (v88 >= (uint64_t)(v89 >> 6))
      {
LABEL_56:
        sub_100058B60();
      }
      else
      {
        uint64_t v90 = *(void *)(v12 + 992);
        if (*(void *)(v90 + 8 * v88)) {
          goto LABEL_34;
        }
        int64_t v91 = v89 >> 6;
        if (v82 + 2 >= v91) {
          goto LABEL_56;
        }
        if (*(void *)(v90 + 8 * (v82 + 2))) {
          goto LABEL_34;
        }
        if (v82 + 3 >= v91) {
          goto LABEL_56;
        }
        if (*(void *)(v90 + 8 * (v82 + 3))) {
          goto LABEL_34;
        }
        if (v82 + 4 >= v91) {
          goto LABEL_56;
        }
        if (*(void *)(v90 + 8 * (v82 + 4)))
        {
LABEL_34:
          sub_1000582E8();
          goto LABEL_35;
        }
        int64_t v92 = v82 + 5;
        while (v92 < v91)
        {
          if (*(void *)(v90 + 8 * v92++)) {
            goto LABEL_34;
          }
        }
      }
      sub_1000102C8();
      uint64_t v231 = *(void *)(*(void *)v229 + 16);
      if (!v231)
      {
LABEL_80:
        swift_bridgeObjectRelease();
        sub_100055684();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        sub_1000115DC();
        sub_100056C50();
        __asm { BRAA            X1, X16 }
      }
      unint64_t v138 = 0;
      long long v230 = (void *)(*(void *)v229 + 32);
      sub_1000591A4();
      HIDWORD(v219) = enum case for OSSignpostError.doubleEnd(_:);
      uint64_t v221 = (char *)&type metadata for Any + 8;
      *(void *)&long long v139 = 136315394;
      long long v216 = v139;
      sub_100058804();
      uint64_t v227 = v140;
      while (v138 < *(void *)(v140 + 16))
      {
        unint64_t v236 = v138;
        uint64_t v243 = v230[v138];
        *(void *)(v12 + 512) = v243;
        sub_10000772C(&qword_100082138);
        uint64_t v141 = sub_10006F060();
        uint64_t v143 = v142;
        uint64_t v144 = sub_100055204();
        *(void *)(v144 + 16) = v141;
        *(void *)(v144 + 24) = v143;
        uint64_t v145 = sub_100055258();
        sub_100056B6C(v145);
        uint64_t v146 = sub_100055258();
        *(unsigned char *)(v146 + 16) = 8;
        uint64_t v147 = sub_100055204();
        *(void *)(v147 + 16) = sub_10005462C;
        *(void *)(v147 + 24) = v144;
        sub_10000772C((uint64_t *)&unk_100082390);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1000716C0;
        *(void *)(inited + 32) = sub_100054620;
        *(void *)(inited + 40) = v145;
        *(void *)(inited + 48) = sub_100054620;
        *(void *)(inited + 56) = v146;
        *(void *)(inited + 64) = sub_1000545D4;
        *(void *)(inited + 72) = v147;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_10006E0C0();
        sub_10006E2E0();
        sub_10006E2B0();
        os_log_type_t v149 = sub_10006E2E0();
        os_signpost_type_t v150 = sub_10006F3D0();
        if (sub_10006F4B0())
        {
          sub_1000114F0();
          v151();
          uint64_t v152 = (uint8_t *)sub_1000556B8();
          v245[0] = sub_100055530();
          *(_DWORD *)uint64_t v152 = sub_1000592F0(v245[0], v153, v154, v155, v156, v157, v158, v159, v213, v214, v216, *((uint64_t *)&v216 + 1), v218, v219, (uint64_t)v221, v222, v223).n128_u32[0];
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v160 = sub_100011758();
          *(void *)(v12 + 400) = sub_100046AE8(v160, v161, v162);
          sub_10006F4D0();
          sub_100057758();
          swift_release();
          swift_release();
          swift_release();
          os_signpost_id_t v163 = sub_10006E2C0();
          unint64_t v164 = v149;
          uint64_t v165 = v12;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v164, v150, v163, "IndexType", "type=%{signpost.description:attribute}s", v152, 0xCu);
          sub_1000556D0();
          v166();
          swift_arrayDestroy();
          sub_10001153C();
          sub_10001153C();
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();

          uint64_t v165 = v12;
        }
        unint64_t v242 = *(void *)(v165 + 600);
        uint64_t v167 = *(void *)(v165 + 584);
        sub_100055270();
        v168();
        sub_10006E330();
        sub_1000568EC();
        sub_1000115BC();
        sub_1000114F0();
        v169();
        sub_100055D8C();
        sub_100055B70();
        v170();
        sub_100056304();
        sub_100011784();
        v171();
        swift_retain();
        uint64_t v172 = sub_1000262DC(v242, v167, v243)[2];
        if (v172)
        {
          sub_1000568AC();
          uint64_t v175 = v173 + v174;
          uint64_t v12 = v165;
          uint64_t v244 = *(void *)(v176 + 72);
          do
          {
            uint64_t v177 = sub_100056534();
            v178(v177);
            sub_10006E8E0();
            sub_10006E8C0();
            swift_release();
            v165 += 8;
            sub_10005527C();
            v179();
            v175 += v244;
            --v172;
          }
          while (v172);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v12 = v165;
        }
        sub_10006E0B0();
        unint64_t v180 = sub_10006E0D0();
        char v182 = v181;
        sub_10006E0E0();
        uint64_t v183 = sub_10006E2E0();
        sub_10006E310();
        os_signpost_type_t v184 = sub_10006F3C0();
        if (sub_10006F4B0())
        {
          if (v182)
          {
            if (HIDWORD(v180)) {
              goto LABEL_94;
            }
            if (v180 >> 11 == 27) {
              goto LABEL_97;
            }
            BOOL v60 = v180 > 0x10FFFF;
            unint64_t v180 = v224;
            if (v60) {
              goto LABEL_95;
            }
          }
          else if (!v180)
          {
            goto LABEL_93;
          }
          uint64_t v185 = *(void *)(v12 + 688);
          uint64_t v186 = *(void *)(v12 + 680);
          uint64_t v187 = *(void *)(v12 + 672);
          swift_retain();
          sub_10006E340();
          swift_release();
          int v188 = (*(uint64_t (**)(uint64_t, uint64_t))(v186 + 88))(v185, v187);
          uint64_t v189 = "[Error] Interval already ended";
          if (v188 != HIDWORD(v219))
          {
            sub_10005521C();
            v190();
            uint64_t v189 = "";
          }
          sub_1000578B0();
          sub_100055270();
          v191();
          uint64_t v192 = (_WORD *)sub_100011554();
          os_signpost_id_t v193 = sub_100056D8C(v192);
          sub_100056B48((void *)&_mh_execute_header, v183, v184, v193, (const char *)v180, v189);
          sub_10005521C();
          v194();
          sub_10001153C();
        }
        uint64_t v195 = v183;
        unint64_t v138 = v236;
        sub_100056C20(v195);
        swift_release();
        sub_10005521C();
        v196();
        sub_100056304();
        sub_10005521C();
        v197();
        sub_100055228();
        v198();
        uint64_t v140 = v227;
        if (v236 == v231) {
          goto LABEL_80;
        }
      }
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
      goto LABEL_104;
    }
LABEL_45:
    if ((*(void *)(v12 + 1048) & 0xC000000000000001) != 0)
    {
      uint64_t v97 = sub_10006F620();
    }
    else
    {
      sub_100058B18();
      if (v100) {
        goto LABEL_99;
      }
      uint64_t v97 = (uint64_t)sub_100056DF8(v98, v99);
    }
    sub_100058CC4(v97);
    *(void *)(v12 + 1080) = v101;
    if (v102) {
      goto LABEL_98;
    }
    id v103 = [*(id *)(v12 + 1024) identifier];
    uint64_t v104 = sub_10006F050();
    uint64_t v106 = v105;

    *(void *)(v12 + 384) = v104;
    *(void *)(v12 + 392) = v106;
    v252._countAndFlagsBits = 35;
    v252._object = (void *)0xE100000000000000;
    sub_10006F0A0(v252);
    id v107 = [v74 key];
    sub_10006F050();

    sub_100059DBC();
    swift_bridgeObjectRelease();
    uint64_t v109 = *(void *)(v12 + 384);
    unint64_t v108 = *(void *)(v12 + 392);
    uint64_t v110 = sub_100055204();
    *(void *)(v110 + 16) = v109;
    *(void *)(v110 + 24) = v108;
    uint64_t v111 = sub_100055258();
    sub_100056B6C(v111);
    uint64_t v112 = sub_100055258();
    sub_100059830(v112);
    uint64_t v113 = sub_100055204();
    *(void *)(v113 + 16) = sub_10005319C;
    *(void *)(v113 + 24) = v110;
    sub_10000772C((uint64_t *)&unk_100082390);
    uint64_t v114 = swift_initStackObject();
    *(_OWORD *)(v114 + 16) = xmmword_1000716C0;
    *(void *)(v114 + 32) = sub_100054620;
    *(void *)(v114 + 40) = v111;
    *(void *)(v114 + 48) = sub_100054620;
    *(void *)(v114 + 56) = v112;
    *(void *)(v114 + 64) = sub_1000545D4;
    *(void *)(v114 + 72) = v113;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10006E0C0();
    sub_10006E2E0();
    sub_10006E2B0();
    unint64_t v115 = sub_10006E2E0();
    os_signpost_type_t v116 = sub_10006F3D0();
    if (sub_10006F4B0())
    {
      sub_100058FE4();
      uint64_t v240 = v117;
      sub_1000114F0();
      v118();
      uint64_t v119 = v109;
      unint64_t v120 = (uint8_t *)sub_1000556B8();
      v245[0] = sub_100055530();
      *(_DWORD *)unint64_t v120 = sub_1000592F0(v245[0], v121, v122, v123, v124, v125, v126, v127, v213, v214, v215, v217, v218, v219, v220, v222, v223).n128_u32[0];
      swift_bridgeObjectRetain();
      swift_retain();
      *(void *)(v12 + 488) = sub_100046AE8(v119, v108, v245);
      sub_10006F4D0();
      swift_bridgeObjectRelease_n();
      swift_release();
      swift_release();
      swift_release();
      os_signpost_id_t v128 = sub_10006E2C0();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v115, v116, v128, "IndexType", "type=%{signpost.description:attribute}s", v120, 0xCu);
      sub_10005527C();
      v129();
      swift_arrayDestroy();
      sub_10001153C();
      sub_10001153C();

      uint64_t v130 = v240;
    }
    else
    {
      uint64_t v131 = *(void *)(v12 + 784);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();

      uint64_t v130 = *(void *)(v131 + 16);
    }
    *(void *)(v12 + 1088) = v130;
    uint64_t v241 = *(void *)(v12 + 1064);
    uint64_t v132 = *(void *)(v12 + 856);
    uint64_t v133 = *(void *)(v12 + 784);
    *(void *)(v12 + 1096) = (v133 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    sub_1000114F0();
    v134();
    sub_10006E330();
    sub_1000568EC();
    sub_1000115BC();
    sub_1000114F0();
    v135();
    sub_100055D8C();
    *(void *)(v12 + 1104) = *(void *)(v133 + 8);
    *(void *)(v12 + 1112) = (v133 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    sub_100055240();
    v136();
    *(void *)(v12 + 1120) = *(void *)(v132 + 8);
    *(void *)(v12 + 1128) = (v132 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    sub_100055228();
    v137();
  }
  while (!v241);
  if (*(uint64_t *)(v12 + 1064) >= 1)
  {
    uint64_t v53 = *(void *)(v12 + 600);
    swift_bridgeObjectRetain();
    uint64_t v52 = 0;
    goto LABEL_85;
  }
LABEL_104:
  __break(1u);
}

uint64_t sub_100022F04()
{
  sub_1000114D4();
  v1[34] = v2;
  v1[35] = v0;
  v1[32] = v3;
  v1[33] = v4;
  v1[30] = v5;
  v1[31] = v6;
  uint64_t v7 = sub_10006E360();
  v1[36] = v7;
  sub_100016518(v7);
  v1[37] = v8;
  v1[38] = sub_1000551C0();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  v1[43] = swift_task_alloc();
  v1[44] = swift_task_alloc();
  sub_1000115E8();
  return _swift_task_switch(v9, v10, v11);
}

#error "1000239B4: call analysis failed (funcsize=696)"

uint64_t sub_100023B0C()
{
  sub_1000114D4();
  sub_100011474();
  uint64_t v3 = v2;
  sub_1000114FC();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 448) = v5;
  *(void *)(v3 + 456) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  sub_1000115E8();
  return _swift_task_switch(v6, v7, v8);
}

#error "10002483C: call analysis failed (funcsize=865)"

#error "1000255A4: call analysis failed (funcsize=856)"

uint64_t sub_100025804(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v6 = a1;
  a3;
  uint64_t v7 = (void *)swift_task_alloc();
  v3[5] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1000258C8;
  return ToolKitIndexer.reindex(request:)();
}

uint64_t sub_1000258C8()
{
  sub_100056CA8();
  uint64_t v2 = v0;
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = (void *)*v1;
  sub_1000114E0();
  *uint64_t v5 = v4;
  id v6 = (void *)v3[3];
  uint64_t v7 = (void *)v3[2];
  uint64_t v8 = (void *)*v1;
  *uint64_t v5 = *v1;
  swift_task_dealloc();

  uint64_t v9 = v3[4];
  if (v2)
  {
    uint64_t v10 = (void *)sub_10006DDB0();
    swift_errorRelease();
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v9 + 16))(v9, 0);
  }
  _Block_release((const void *)v4[4]);
  uint64_t v11 = (uint64_t (*)(void))v8[1];
  return v11();
}

void sub_100025A58()
{
  sub_100058600();
  uint64_t v38 = v1;
  uint64_t v37 = v2;
  uint64_t v3 = sub_10006E2D0();
  sub_10001148C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100057274();
  v36[0] = v7;
  sub_100058488();
  __chkstk_darwin(v8);
  sub_1000594A8();
  sub_10006E2F0();
  sub_10001148C();
  v36[2] = v10;
  v36[3] = v9;
  __chkstk_darwin(v9);
  sub_100057274();
  v36[1] = v11;
  sub_100058488();
  __chkstk_darwin(v12);
  sub_10006E0F0();
  sub_10001148C();
  v36[5] = v14;
  v36[6] = v13;
  __chkstk_darwin(v13);
  sub_100016530();
  v36[4] = v16 - v15;
  sub_10006E360();
  sub_10001148C();
  __chkstk_darwin(v17);
  sub_100016530();
  sub_10006E280();
  id v18 = sub_10006E350();
  os_log_type_t v19 = sub_10006F2F0();
  if (os_log_type_enabled(v18, v19))
  {
    id v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Clearing database", v20, 2u);
    swift_slowDealloc();
  }

  sub_1000556D0();
  v21();
  sub_10006E0C0();
  sub_10006E2E0();
  sub_10006E2B0();
  BOOL v22 = sub_10006E2E0();
  os_signpost_type_t v23 = sub_10006F3D0();
  if (sub_10006F4B0())
  {
    uint64_t v24 = v0;
    id v25 = *(void (**)(void))(v5 + 16);
    uint64_t v26 = v36[0];
    sub_1000114F0();
    v25();
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    os_signpost_id_t v28 = sub_10006E2C0();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, v23, v28, "DatabaseWipe", "Clearing database prior to indexing", v27, 2u);
    sub_100059C20();
    sub_10005521C();
    v29();
    swift_slowDealloc();

    uint64_t v30 = v26;
  }
  else
  {

    uint64_t v24 = v0;
    id v25 = *(void (**)(void))(v5 + 16);
    uint64_t v30 = v36[0];
  }
  ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v30, v24, v3);
  sub_10006E330();
  swift_allocObject();
  sub_10006E320();
  sub_1000114F0();
  v31();
  sub_10006E100();
  sub_100055240();
  v32();
  sub_100055234();
  uint64_t v34 = v33();
  __chkstk_darwin(v34);
  v36[-2] = v37;
  sub_10006E5B0();
  sub_10002785C();
  sub_1000551DC();
  v35();
  sub_100057F78();
}

void sub_100025EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10006E160();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 == enum case for ToolKitIndexingReason.Changeset.partial(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v6, v3);
    uint64_t v8 = *v6;
    uint64_t v9 = v6[1];
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_10002606C(v9, v8);
    uint64_t v11 = sub_10004F234(v10);
    swift_bridgeObjectRelease();
    v12._rawValue = v11;
    sub_10006E7C0(v12);
    swift_release();
  }
  else if (v7 == enum case for ToolKitIndexingReason.Changeset.full(_:))
  {
    sub_10006E7F0();
  }
  else if (v7 != enum case for ToolKitIndexingReason.Changeset.none(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_10002606C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v9 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v3 << 6))
  {
    uint64_t v14 = (Swift::Int *)(*(void *)(v2 + 48) + 16 * i);
    Swift::Int v15 = *v14;
    Swift::Int v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_10004D124(&v17, v15, v16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id ToolKitIndexer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return [v1 init];
}

void ToolKitIndexer.init()()
{
}

id ToolKitIndexer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ToolKitIndexer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000262A8(uint64_t a1)
{
  return a1;
}

void *sub_1000262DC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a1;
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_10006F6F0())
  {
    unint64_t v33 = v5 & 0xC000000000000001;
    unint64_t v7 = _swiftEmptyArrayStorage;
    uint64_t v8 = 4;
    uint64_t v32 = v5;
    while (1)
    {
      id v9 = v33 ? (id)sub_10006F620() : *(id *)(v5 + 8 * v8);
      uint64_t v10 = v9;
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      uint64_t v12 = sub_100011FC0(a3, v9);
      if (v4)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v7;
      }
      uint64_t v13 = v12;

      uint64_t v14 = *(void *)(v13 + 16);
      uint64_t v15 = v7[2];
      uint64_t v5 = v15 + v14;
      if (__OFADD__(v15, v14)) {
        goto LABEL_31;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v5 > v7[3] >> 1)
      {
        if (v15 <= v5) {
          uint64_t v17 = v15 + v14;
        }
        else {
          uint64_t v17 = v15;
        }
        unint64_t v7 = (void *)sub_100067180(isUniquelyReferenced_nonNull_native, v17, 1, (uint64_t)v7);
      }
      if (*(void *)(v13 + 16))
      {
        uint64_t v18 = v7[2];
        uint64_t v5 = (v7[3] >> 1) - v18;
        uint64_t v19 = *(void *)(sub_10006EA40() - 8);
        uint64_t v20 = *(void *)(v19 + 72);
        if (v5 < v14) {
          goto LABEL_33;
        }
        unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
        BOOL v22 = (char *)v7 + v21 + v20 * v18;
        unint64_t v23 = v13 + v21;
        uint64_t v24 = v20 * v14;
        id v25 = &v22[v24];
        unint64_t v26 = v23 + v24;
        if (v23 < (unint64_t)v25 && (unint64_t)v22 < v26)
        {
          uint64_t result = (void *)sub_10006F710();
          __break(1u);
          return result;
        }
        swift_arrayInitWithCopy();
        if (v14)
        {
          uint64_t v28 = v7[2];
          BOOL v29 = __OFADD__(v28, v14);
          uint64_t v30 = v28 + v14;
          if (v29) {
            goto LABEL_34;
          }
          v7[2] = v30;
        }
      }
      else if (v14)
      {
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      ++v8;
      uint64_t v5 = v32;
      if (v11 == v6)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return v7;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100026598(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_33;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_10006F6F0())
  {
    uint64_t v3 = &_swiftEmptyArrayStorage;
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)sub_10006F620() : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = [v5 actionIdentifier];
      sub_10006F050();

      uint64_t v9 = sub_10006EEC0();
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(v9 + 16);
      uint64_t v11 = v3[2];
      uint64_t v12 = v11 + v10;
      if (__OFADD__(v11, v10)) {
        goto LABEL_29;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v12 > v3[3] >> 1)
      {
        if (v11 <= v12) {
          uint64_t v14 = v11 + v10;
        }
        else {
          uint64_t v14 = v11;
        }
        uint64_t v3 = (void *)sub_1000674A4(isUniquelyReferenced_nonNull_native, v14, 1, (uint64_t)v3);
      }
      if (*(void *)(v9 + 16))
      {
        uint64_t v15 = v3[2];
        uint64_t v16 = (v3[3] >> 1) - v15;
        uint64_t v17 = *(void *)(sub_10006EED0() - 8);
        uint64_t v18 = *(void *)(v17 + 72);
        if (v16 < v10) {
          goto LABEL_31;
        }
        unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
        uint64_t v20 = (char *)v3 + v19 + v18 * v15;
        unint64_t v21 = v9 + v19;
        uint64_t v22 = v18 * v10;
        unint64_t v23 = &v20[v22];
        unint64_t v24 = v21 + v22;
        if (v21 < (unint64_t)v23 && (unint64_t)v20 < v24)
        {
          uint64_t result = sub_10006F710();
          __break(1u);
          return result;
        }
        swift_arrayInitWithCopy();
        if (v10)
        {
          uint64_t v26 = v3[2];
          BOOL v27 = __OFADD__(v26, v10);
          uint64_t v28 = v26 + v10;
          if (v27) {
            goto LABEL_32;
          }
          v3[2] = v28;
        }
      }
      else if (v10)
      {
        goto LABEL_30;
      }
      swift_bridgeObjectRelease();
      ++v4;
      if (v7 == v2) {
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
  }
  uint64_t v3 = &_swiftEmptyArrayStorage;
LABEL_35:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (uint64_t)v3;
}

unint64_t sub_10002684C(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3)
  {
    sub_10006F600(30);
    swift_bridgeObjectRelease();
    unint64_t v4 = 0xD00000000000001CLL;
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    sub_10006F600(27);
    swift_bridgeObjectRelease();
    unint64_t v4 = 0xD000000000000019;
LABEL_5:
    unint64_t v6 = v4;
    sub_100059DBC();
    return v6;
  }
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x206C6F72746E6F63;
      break;
    case 2:
      unint64_t result = 0x6D206E6F69746361;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1000269C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (!a4)
  {
    Swift::UInt v4 = 2;
    goto LABEL_5;
  }
  if (a4 == 1)
  {
    Swift::UInt v4 = 3;
LABEL_5:
    sub_10006F830(v4);
    sub_1000596F8();
    sub_10006F090();
    return;
  }
  switch(a2)
  {
    case 1:
      Swift::UInt v5 = 1;
      break;
    case 2:
      Swift::UInt v5 = 4;
      break;
    case 3:
      Swift::UInt v5 = 5;
      break;
    case 4:
      Swift::UInt v5 = 6;
      break;
    default:
      Swift::UInt v5 = 0;
      break;
  }
  sub_10006F830(v5);
}

uint64_t sub_100026A9C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6) {
      goto LABEL_11;
    }
    return 0;
  }
  if (a3 != 1)
  {
    switch(a1)
    {
      case 1:
        if (a6 != 2 || a4 != 1) {
          return 0;
        }
        break;
      case 2:
        if (a6 != 2 || a4 != 2) {
          return 0;
        }
        break;
      case 3:
        if (a6 != 2 || a4 != 3) {
          return 0;
        }
        break;
      case 4:
        if (a6 != 2 || a4 != 4) {
          return 0;
        }
        break;
      default:
        return a6 == 2 && !(a5 | a4);
    }
    return !a5;
  }
  if (a6 != 1) {
    return 0;
  }
LABEL_11:
  if (a1 != a4 || a2 != a5) {
    return sub_10006F780();
  }
  return 1;
}

Swift::Int sub_100026B90(uint64_t a1, uint64_t a2, char a3)
{
  sub_10006F820();
  sub_1000269C4((uint64_t)v7, a1, a2, a3);
  return sub_10006F840();
}

Swift::Int sub_100026BF0()
{
  return sub_100026B90(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_100026BFC(uint64_t a1)
{
  sub_1000269C4(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

Swift::Int sub_100026C08()
{
  char v1 = *(unsigned char *)(v0 + 16);
  sub_10006F820();
  sub_1000596F8();
  sub_1000269C4(v2, v3, v4, v1);
  return sub_10006F840();
}

unint64_t sub_100026C5C()
{
  return sub_10002684C(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_100026C68(uint64_t a1, uint64_t a2)
{
  return sub_100026A9C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_100026C84(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_10006F780();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_10006F780() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100026D4C()
{
  sub_1000114D4();
  v1[29] = v2;
  v1[30] = v0;
  v1[27] = v3;
  v1[28] = v4;
  v1[25] = v5;
  v1[26] = v6;
  uint64_t v7 = sub_10006E2D0();
  v1[31] = v7;
  sub_100016518(v7);
  v1[32] = v8;
  v1[33] = sub_1000551C0();
  v1[34] = swift_task_alloc();
  uint64_t v9 = sub_10006E2F0();
  v1[35] = v9;
  sub_100016518(v9);
  v1[36] = v10;
  v1[37] = sub_1000551C0();
  v1[38] = swift_task_alloc();
  uint64_t v11 = sub_10006E0F0();
  v1[39] = v11;
  sub_100016518(v11);
  v1[40] = v12;
  v1[41] = sub_10005558C();
  sub_1000115E8();
  return _swift_task_switch(v13, v14, v15);
}

uint64_t sub_100026E58(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint8_t *a9, uint64_t a10, void *a11, os_log_t log, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32)
{
  sub_100058940();
  a31 = v33;
  a32 = v34;
  a30 = v32;
  uint64_t v35 = (void *)v32[25];
  uint64_t v36 = sub_100055E70();
  *(void *)(v36 + 16) = v35;
  uint64_t v37 = sub_100055258();
  sub_100056B6C(v37);
  uint64_t v38 = sub_100055258();
  sub_100059830(v38);
  uint64_t v39 = sub_100055204();
  *(void *)(v39 + 16) = sub_100052718;
  *(void *)(v39 + 24) = v36;
  sub_10000772C((uint64_t *)&unk_100082390);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000716C0;
  *(void *)(inited + 32) = sub_100052738;
  *(void *)(inited + 40) = v37;
  *(void *)(inited + 48) = sub_100054620;
  *(void *)(inited + 56) = v38;
  *(void *)(inited + 64) = sub_100052750;
  *(void *)(inited + 72) = v39;
  id v41 = v35;
  swift_retain();
  sub_10006E0C0();
  sub_10006E2E0();
  sub_10006E2B0();
  uint64_t v42 = sub_10006E2E0();
  int v43 = sub_10006F3D0();
  uint64_t v87 = (id *)(v32 + 25);
  if (sub_10006F4B0())
  {
    a13 = v32[33];
    a15 = v32[31];
    a16 = v32[32];
    unint64_t v44 = (void *)v32[25];
    a11 = v44;
    a17 = *(void *)(a16 + 16);
    sub_1000114F0();
    v45();
    log = v42;
    id v46 = (uint8_t *)sub_1000556B8();
    a14 = sub_100055530();
    a20 = a14;
    *(_DWORD *)id v46 = 136315138;
    a9 = v46 + 4;
    swift_retain();
    id v47 = [v44 identifier];
    HIDWORD(a10) = v43;
    uint64_t v48 = sub_10006F050();
    unint64_t v50 = v49;

    v32[24] = sub_100046AE8(v48, v50, &a20);
    sub_10006F4D0();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();

    swift_release();
    os_signpost_id_t v51 = sub_10006E2C0();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, log, BYTE4(a10), v51, "IndexTool", "action=%{signpost.description:attribute}s", v46, 0xCu);
    sub_1000551DC();
    v52();
    swift_arrayDestroy();
    sub_10001153C();
    sub_10001153C();
  }
  else
  {
    uint64_t v53 = (void *)v32[25];
    swift_release();

    swift_release();
  }
  uint64_t v54 = v32[41];
  unint64_t v55 = v32[38];
  uint64_t v88 = v32[25];
  uint64_t v56 = sub_100059C20();
  v57(v56);
  sub_10006E330();
  sub_1000568EC();
  id v58 = (void *)sub_1000115BC();
  sub_1000114F0();
  v59();
  sub_100055D8C();
  sub_1000593A8();
  sub_100055C1C();
  v60();
  sub_100056304();
  sub_100055228();
  v61();
  self;
  if (swift_dynamicCastObjCClass())
  {
    uint64_t v62 = 1;
    sub_100058054();
    sub_100058B08();
LABEL_17:
    if (v55 >= v63 >> 1)
    {
      sub_10006760C();
      id v58 = v86;
    }
    v58[2] = v54;
    uint64_t v67 = (char *)&v58[3 * v55];
    *((void *)v67 + 4) = v62;
    *((void *)v67 + 5) = 0;
    v67[48] = 2;
    goto LABEL_20;
  }
  id v58 = *v87;
  self;
  if (sub_100056938()) {
    goto LABEL_16;
  }
  unint64_t v55 = 0xEE006E6F69746341;
  uint64_t v54 = (uint64_t)[*v87 localizedName];
  uint64_t v64 = sub_10006F050();
  id v58 = v65;

  if (v64 == 0x206E776F6E6B6E55 && v58 == (void *)0xEE006E6F69746341)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v54 = sub_10006F780();
  swift_bridgeObjectRelease();
  if (v54)
  {
LABEL_16:
    sub_100058054();
    sub_100058B08();
    uint64_t v62 = 2;
    goto LABEL_17;
  }
  id v58 = *v87;
  self;
  if (sub_100056938() || (id v58 = *v87, self, sub_100056938()))
  {
    sub_100058054();
    sub_100058B08();
    uint64_t v62 = 4;
    goto LABEL_17;
  }
  if (_swiftEmptyArrayStorage[2]
    || (swift_bridgeObjectRelease(),
        uint64_t v78 = (void *)sub_1000571A4(),
        sub_100002A48(v78, v79),
        sub_100053348((uint64_t)(v32 + 18), (uint64_t)(v32 + 12), &qword_100081A98),
        (uint64_t v80 = v32[13]) == 0))
  {
LABEL_20:
    sub_100057FC4();
    sub_100055240();
    v68();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1000563EC();
    return v71(v69, v70, v71, v72, v73, v74, v75, v76, a9, a10, a11, log, a13, a14, a15, a16, a17, v87, v88,
             a20,
             a21,
             a22,
             a23,
             a24);
  }
  uint64_t v81 = v32[28];
  uint64_t v82 = v32[12];
  v32[42] = v32[17];
  uint64_t v83 = _s23IndexingPreflightResultVMa(0);
  v32[43] = sub_1000082E8(v82, v80, *(void *)(v81 + *(int *)(v83 + 28)));
  swift_bridgeObjectRelease();
  uint64_t v84 = (void *)swift_task_alloc();
  v32[44] = v84;
  *uint64_t v84 = v32;
  v84[1] = sub_1000275CC;
  sub_1000563EC();
  return sub_100027B2C();
}

uint64_t sub_1000275CC()
{
  sub_1000114D4();
  sub_100011474();
  sub_1000114FC();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1000114E0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 360) = v0;
  swift_task_dealloc();
  sub_1000115E8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_1000276A8()
{
  sub_100059790();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10002785C();
  sub_1000556D0();
  v1();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_10002778C()
{
  sub_100059790();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100057FC4();
  sub_100055240();
  v0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000115DC();
  return v1();
}

void sub_100027854(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_10002785C()
{
  sub_100058000();
  sub_10006E300();
  sub_10001148C();
  uint64_t v27 = v2;
  uint64_t v28 = v1;
  __chkstk_darwin(v1);
  sub_100016530();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = sub_10006E2D0();
  sub_10001148C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_100057274();
  sub_100058488();
  __chkstk_darwin(v10);
  sub_1000594A8();
  sub_10006E2F0();
  sub_10001148C();
  __chkstk_darwin(v11);
  sub_100016530();
  sub_10006E0B0();
  unint64_t v12 = sub_10006E0D0();
  char v14 = v13;
  sub_10006E0E0();
  uint64_t v15 = sub_10006E2E0();
  sub_10006E310();
  os_signpost_type_t v26 = sub_10006F3C0();
  if ((sub_10006F4B0() & 1) == 0)
  {
    swift_release();

    sub_10005527C();
    v18();
LABEL_14:
    sub_1000551DC();
    v25();
    sub_100057F90();
    return;
  }
  if ((v14 & 1) == 0)
  {
    if (v12)
    {
      uint64_t v17 = v27;
      uint64_t v16 = v28;
LABEL_10:
      swift_retain();
      sub_10006E340();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v17 + 88))(v5, v16) == enum case for OSSignpostError.doubleEnd(_:))
      {
        unint64_t v19 = "[Error] Interval already ended";
      }
      else
      {
        sub_100055B70();
        v20();
        unint64_t v19 = "";
      }
      sub_100058FE4();
      sub_1000114F0();
      v21();
      uint64_t v22 = (_WORD *)sub_100011554();
      os_signpost_id_t v23 = sub_100056D8C(v22);
      sub_100056B48((void *)&_mh_execute_header, v15, v26, v23, (const char *)v12, v19);
      unint64_t v24 = *(void (**)(void))(v8 + 8);
      sub_100057D28();
      sub_10005527C();
      v24();
      sub_10001153C();
      swift_release();

      ((void (*)(uint64_t, uint64_t))v24)(v0, v6);
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_16;
  }
  if (HIDWORD(v12))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v12 >> 11 != 27)
  {
    uint64_t v17 = v27;
    uint64_t v16 = v28;
    if (WORD1(v12) <= 0x10u)
    {
      unint64_t v12 = (unint64_t)&v29;
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_100027B2C()
{
  sub_1000114D4();
  *(void *)(v0 + 624) = v1;
  *(void *)(v0 + 616) = v2;
  *(unsigned char *)(v0 + 2080) = v3;
  *(void *)(v0 + 608) = v4;
  *(void *)(v0 + 600) = v5;
  *(void *)(v0 + 592) = v6;
  *(void *)(v0 + 584) = v7;
  *(void *)(v0 + 576) = v8;
  uint64_t v9 = sub_10006E410();
  *(void *)(v0 + 632) = v9;
  sub_100016518(v9);
  *(void *)(v0 + 640) = v10;
  *(void *)(v0 + 648) = sub_1000551C0();
  *(void *)(v0 + 656) = swift_task_alloc();
  *(void *)(v0 + 664) = swift_task_alloc();
  uint64_t v11 = sub_10006E420();
  *(void *)(v0 + 672) = v11;
  sub_100016518(v11);
  *(void *)(v0 + 680) = v12;
  *(void *)(v0 + 688) = sub_10005558C();
  uint64_t v13 = sub_10000772C(&qword_1000823A8);
  sub_100055A7C(v13);
  *(void *)(v0 + 696) = sub_1000551C0();
  *(void *)(v0 + 704) = swift_task_alloc();
  *(void *)(v0 + 712) = swift_task_alloc();
  *(void *)(v0 + 720) = swift_task_alloc();
  uint64_t v14 = sub_10000772C(&qword_1000823B0);
  sub_100055A7C(v14);
  *(void *)(v0 + 728) = sub_10005558C();
  uint64_t v15 = sub_10006DE00();
  *(void *)(v0 + 736) = v15;
  sub_100016518(v15);
  *(void *)(v0 + 744) = v16;
  *(void *)(v0 + 752) = sub_1000551C0();
  *(void *)(v0 + 760) = swift_task_alloc();
  uint64_t v17 = sub_10000772C(&qword_1000823B8);
  sub_100055A7C(v17);
  *(void *)(v0 + 768) = sub_10005558C();
  uint64_t v18 = sub_10000772C(&qword_1000823C0);
  sub_100055A7C(v18);
  *(void *)(v0 + 776) = sub_10005558C();
  uint64_t v19 = sub_10006E390();
  *(void *)(v0 + 784) = v19;
  sub_100016518(v19);
  *(void *)(v0 + 792) = v20;
  *(void *)(v0 + 800) = sub_10005558C();
  uint64_t v21 = sub_10006EE10();
  *(void *)(v0 + 808) = v21;
  sub_100016518(v21);
  *(void *)(v0 + 816) = v22;
  *(void *)(v0 + 824) = sub_10005558C();
  uint64_t v23 = sub_10006E370();
  *(void *)(v0 + 832) = v23;
  sub_100016518(v23);
  *(void *)(v0 + 840) = v24;
  *(void *)(v0 + 848) = *(void *)(v25 + 64);
  *(void *)(v0 + 856) = sub_1000551C0();
  *(void *)(v0 + 864) = swift_task_alloc();
  *(void *)(v0 + 872) = swift_task_alloc();
  uint64_t v26 = sub_10000772C(&qword_1000823C8);
  sub_100055A7C(v26);
  *(void *)(v0 + 880) = sub_1000551C0();
  *(void *)(v0 + 888) = swift_task_alloc();
  *(void *)(v0 + 896) = swift_task_alloc();
  uint64_t v27 = sub_10000772C(&qword_1000823D0);
  sub_100055A7C(v27);
  *(void *)(v0 + 904) = sub_1000551C0();
  *(void *)(v0 + 912) = swift_task_alloc();
  uint64_t v28 = sub_10006EAA0();
  *(void *)(v0 + 920) = v28;
  sub_100016518(v28);
  *(void *)(v0 + 928) = v29;
  *(void *)(v0 + 936) = *(void *)(v30 + 64);
  *(void *)(v0 + 944) = sub_1000551C0();
  *(void *)(v0 + 952) = swift_task_alloc();
  *(void *)(v0 + 960) = swift_task_alloc();
  *(void *)(v0 + 968) = swift_task_alloc();
  *(void *)(v0 + 976) = swift_task_alloc();
  uint64_t v31 = sub_10006DF30();
  *(void *)(v0 + 984) = v31;
  sub_100016518(v31);
  *(void *)(v0 + 992) = v32;
  *(void *)(v0 + 1000) = sub_10005558C();
  uint64_t v33 = sub_10006EF10();
  *(void *)(v0 + 1008) = v33;
  sub_100016518(v33);
  *(void *)(v0 + 1016) = v34;
  *(void *)(v0 + 1024) = *(void *)(v35 + 64);
  *(void *)(v0 + 1032) = sub_1000551C0();
  *(void *)(v0 + 1040) = swift_task_alloc();
  uint64_t v36 = sub_10006EB90();
  *(void *)(v0 + 1048) = v36;
  sub_100016518(v36);
  *(void *)(v0 + 1056) = v37;
  *(void *)(v0 + 1064) = sub_1000551C0();
  *(void *)(v0 + 1072) = swift_task_alloc();
  uint64_t v38 = sub_10006E360();
  *(void *)(v0 + 1080) = v38;
  sub_100016518(v38);
  *(void *)(v0 + 1088) = v39;
  *(void *)(v0 + 1096) = sub_1000551C0();
  *(void *)(v0 + 1104) = swift_task_alloc();
  uint64_t v40 = sub_10000772C(&qword_1000823D8);
  *(void *)(v0 + 1112) = v40;
  sub_100055A7C(v40);
  *(void *)(v0 + 1120) = sub_1000551C0();
  *(void *)(v0 + 1128) = swift_task_alloc();
  *(void *)(v0 + 1136) = swift_task_alloc();
  uint64_t v41 = sub_10006E3F0();
  *(void *)(v0 + 1144) = v41;
  sub_100016518(v41);
  *(void *)(v0 + 1152) = v42;
  *(void *)(v0 + 1160) = *(void *)(v43 + 64);
  *(void *)(v0 + 1168) = sub_1000551C0();
  *(void *)(v0 + 1176) = swift_task_alloc();
  *(void *)(v0 + 1184) = swift_task_alloc();
  *(void *)(v0 + 1192) = swift_task_alloc();
  *(void *)(v0 + 1200) = swift_task_alloc();
  *(void *)(v0 + 1208) = swift_task_alloc();
  *(void *)(v0 + 1216) = swift_task_alloc();
  *(void *)(v0 + 1224) = swift_task_alloc();
  *(void *)(v0 + 1232) = swift_task_alloc();
  uint64_t v44 = sub_10006E480();
  *(void *)(v0 + 1240) = v44;
  sub_100016518(v44);
  *(void *)(v0 + 1248) = v45;
  *(void *)(v0 + 1256) = sub_10005558C();
  uint64_t v46 = sub_10006E500();
  *(void *)(v0 + 1264) = v46;
  sub_100016518(v46);
  *(void *)(v0 + 1272) = v47;
  *(void *)(v0 + 1280) = sub_1000551C0();
  *(void *)(v0 + 1288) = swift_task_alloc();
  *(void *)(v0 + 1296) = swift_task_alloc();
  uint64_t v48 = sub_10006E3A0();
  *(void *)(v0 + 1304) = v48;
  sub_100016518(v48);
  *(void *)(v0 + 1312) = v49;
  *(void *)(v0 + 1320) = sub_10005558C();
  uint64_t v50 = _s15ActionParameterVMa(0);
  *(void *)(v0 + 1328) = v50;
  sub_100055A7C(v50);
  *(void *)(v0 + 1336) = sub_1000551C0();
  *(void *)(v0 + 1344) = swift_task_alloc();
  uint64_t v51 = sub_10006EBF0();
  *(void *)(v0 + 1352) = v51;
  sub_100016518(v51);
  *(void *)(v0 + 1360) = v52;
  *(void *)(v0 + 1368) = sub_10005558C();
  uint64_t v53 = sub_10006EF40();
  sub_100055A7C(v53);
  *(void *)(v0 + 1376) = sub_10005558C();
  uint64_t v54 = sub_10006EF30();
  *(void *)(v0 + 1384) = v54;
  sub_100016518(v54);
  *(void *)(v0 + 1392) = v55;
  *(void *)(v0 + 1400) = sub_1000551C0();
  *(void *)(v0 + 1408) = swift_task_alloc();
  uint64_t v56 = sub_10006E880();
  *(void *)(v0 + 1416) = v56;
  sub_100016518(v56);
  *(void *)(v0 + 1424) = v57;
  *(void *)(v0 + 1432) = *(void *)(v58 + 64);
  *(void *)(v0 + 1440) = sub_1000551C0();
  *(void *)(v0 + 1448) = swift_task_alloc();
  *(void *)(v0 + 1456) = swift_task_alloc();
  *(void *)(v0 + 1464) = swift_task_alloc();
  uint64_t v59 = sub_10006EA40();
  *(void *)(v0 + 1472) = v59;
  sub_100016518(v59);
  *(void *)(v0 + 1480) = v60;
  *(void *)(v0 + 1488) = sub_1000551C0();
  *(void *)(v0 + 1496) = swift_task_alloc();
  uint64_t v61 = sub_10000772C(&qword_1000823E0);
  sub_100055A7C(v61);
  *(void *)(v0 + 1504) = sub_10005558C();
  uint64_t v62 = sub_10006E960();
  *(void *)(v0 + 1512) = v62;
  sub_100016518(v62);
  *(void *)(v0 + 1520) = v63;
  *(void *)(v0 + 1528) = sub_1000551C0();
  *(void *)(v0 + 1536) = swift_task_alloc();
  *(void *)(v0 + 1544) = swift_task_alloc();
  *(void *)(v0 + 1552) = swift_task_alloc();
  uint64_t v64 = sub_10006E9E0();
  *(void *)(v0 + 1560) = v64;
  sub_100016518(v64);
  *(void *)(v0 + 1568) = v65;
  *(void *)(v0 + 1576) = sub_1000551C0();
  *(void *)(v0 + 1584) = swift_task_alloc();
  *(void *)(v0 + 1592) = swift_task_alloc();
  *(void *)(v0 + 1600) = swift_task_alloc();
  uint64_t v66 = sub_10006E040();
  sub_100055A7C(v66);
  *(void *)(v0 + 1608) = sub_10005558C();
  uint64_t v67 = sub_10006F260();
  *(void *)(v0 + 1616) = v67;
  sub_100016518(v67);
  *(void *)(v0 + 1624) = v68;
  *(void *)(v0 + 1632) = sub_10005558C();
  sub_1000115E8();
  return _swift_task_switch(v69, v70, v71);
}

void sub_10002836C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1000553D0();
  sub_1000562A0();
  uint64_t v13 = *(void **)(v12 + 576);
  self;
  uint64_t v14 = sub_100056938();
  *(void *)(v12 + 1640) = v14;
  if (v14)
  {
    sub_1000576B4();
    id v15 = v13;
    *(void *)(v12 + 1648) = sub_10006F170();
    sub_1000553EC();
    sub_10005533C();
LABEL_3:
    sub_100058F4C();
    sub_100055194();
    _swift_task_switch(v16, v17, v18);
    return;
  }
  v417 = (uint64_t **)(v12 + 536);
  *(_OWORD *)(v12 + 1664) = 0u;
  uint64_t v20 = *(void **)(v12 + 576);
  uint64_t v21 = WFAction_ptr;
  v425[3] = sub_10001028C(0, &qword_100081E28);
  v425[4] = sub_1000525E0(&qword_1000823E8, &qword_100081E28);
  v425[0] = (uint64_t)v20;
  v20;
  sub_10006E020();
  uint64_t v22 = self;
  *(void *)(v12 + 1680) = v22;
  id v23 = [v22 defaultContext];
  sub_10006F240();
  *(void *)(v12 + 536) = &_swiftEmptySetSingleton;
  uint64_t v24 = *(void *)(sub_10006F470() + 16);
  uint64_t v424 = v12;
  if (v24)
  {
    uint64_t v25 = 0;
    uint64_t v26 = (void (**)(void))(*(void *)(v12 + 1568) + 8);
    do
    {
      sub_10006F2D0();
      uint64_t v21 = *(_UNKNOWN ***)(v12 + 1592);
      uint64_t v27 = *(char **)(v12 + 1584);
      ++v25;
      sub_1000560F0();
      v28();
      sub_10004DEC0((uint64_t)v21, v27);
      uint64_t v29 = *v26;
      sub_100055240();
      v29();
      sub_100056610();
      uint64_t v12 = v424;
      sub_100055240();
      v29();
    }
    while (v24 != v25);
    swift_bridgeObjectRelease();
    uint64_t v30 = *v417;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t *)&_swiftEmptySetSingleton;
  }
  uint64_t v31 = v12 + 504;
  id v32 = [*(id *)(v12 + 576) outputsMultipleItems];
  uint64_t v33 = swift_bridgeObjectRetain();
  uint64_t v34 = 0;
  sub_100019EC4(v33);
  sub_1000565F8();
  uint64_t v35 = sub_100019A90(v12 + 504);
  uint64_t v36 = *(void *)(v35 + 16);
  uint64_t v37 = (void (*)(void))enum case for TypeInstance.type(_:);
  v406 = 0;
  if (v36 == 1)
  {
    sub_100059770();
    swift_bridgeObjectRelease();
    sub_100055CAC((uint64_t)v30);
    if (v158) {
      goto LABEL_317;
    }
    sub_100058D64();
    uint64_t v53 = swift_allocBox();
    sub_100056840();
    uint64_t v38 = v424;
    v54();
    *uint64_t v30 = v53;
    uint64_t v55 = sub_100056150();
    v56(v55);
  }
  else
  {
    LODWORD(v405) = v32;
    if (v36)
    {
      uint64_t v57 = *(void (***)(void))(v424 + 1520);
      v425[0] = (uint64_t)_swiftEmptyArrayStorage;
      sub_10004668C(v36, (uint64_t (*)(void))sub_100069110);
      int64_t v58 = sub_10005303C(v35);
      sub_100055EF8();
      do
      {
        if (v58 < 0 || (sub_100057C2C(), v58 >= v59))
        {
LABEL_268:
          __break(1u);
LABEL_269:
          __break(1u);
LABEL_270:
          __break(1u);
LABEL_271:
          __break(1u);
LABEL_272:
          sub_100055348();
          sub_10005738C();
LABEL_168:
          sub_1000559C8();
          sub_100055194();
          return;
        }
        if (((*(void *)(v413 + (((unint64_t)v58 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v58) & 1) == 0) {
          goto LABEL_269;
        }
        if (*(_DWORD *)(v35 + 36) != v21) {
          goto LABEL_270;
        }
        sub_100056344();
        uint64_t v60 = sub_100059504();
        ((void (*)(uint64_t))v35)(v60);
        sub_10005524C();
        v61();
        uint64_t v62 = swift_allocBox();
        uint64_t v64 = sub_1000596E4(v62, v63);
        ((void (*)(uint64_t))v35)(v64);
        uint64_t v35 = (uint64_t)v32;
        void *v57 = v37;
        uint64_t v37 = *v416;
        sub_100055330();
        v37();
        sub_1000551DC();
        v65();
        sub_10004EFF8((uint64_t (*)(void, uint64_t, uint64_t))sub_100069110);
        sub_10005967C();
        sub_10004F09C();
        int64_t v58 = sub_100052AFC(v58, v422, v420 & 1, (uint64_t)v32);
        uint64_t v21 = v66;
        char v68 = v67 & 1;
        --v36;
      }
      while (v36);
      uint64_t v38 = v424;
      uint64_t v69 = *(uint64_t **)(v424 + 1536);
      uint64_t v34 = sub_100055E70();
      sub_10001650C(v58, (uint64_t)v21, v68);
      swift_bridgeObjectRelease();
      *(void *)(v34 + 16) = sub_100019C50(v425[0]);
      *uint64_t v69 = v34;
      uint64_t v70 = sub_100059BF4();
      ((void (*)(uint64_t))v37)(v70);
    }
    else
    {
      uint64_t v38 = v424;
      sub_100058D4C();
      uint64_t v34 = *(void *)(v424 + 1472);
      swift_bridgeObjectRelease();
      uint64_t v21 = (_UNKNOWN **)swift_allocBox();
      uint64_t v40 = v39;
      sub_10006EA20();
      uint64_t v41 = swift_allocBox();
      sub_1000551E8();
      v42();
      *uint64_t v40 = v41;
      enum case for TypeInstance.type(_:)[13]((uint64_t)v40, enum case for TypeIdentifier.primitive(_:), v34);
      *uint64_t v30 = (uint64_t)v21;
      uint64_t v43 = sub_100056150();
      v44(v43);
    }
  }
  uint64_t v71 = v38;
  uint64_t v72 = *(void *)(v38 + 1520);
  sub_10005963C();
  *(void *)(v71 + 1688) = *(void *)(v72 + 8);
  sub_10005521C();
  v73();
  sub_100056E1C();
  v74();
  uint64_t v75 = (uint64_t)&selRef_parameterKey;
  id v76 = [v21 parameters];
  uint64_t v31 = sub_10001028C(0, &qword_1000823F0);
  unint64_t v77 = sub_10006F0F0();

  unint64_t inited = (unint64_t)_swiftEmptyArrayStorage;
  v425[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (v77 >> 62) {
    goto LABEL_303;
  }
  uint64_t v79 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v79)
    {
      if (v79 < 1) {
        goto LABEL_307;
      }
      uint64_t v34 = v75;
      char v80 = sub_10006A5F4(v77);
      for (uint64_t i = 0; i != v79; ++i)
      {
        if (v80) {
          uint64_t v82 = (uint64_t)sub_100057B24();
        }
        else {
          uint64_t v82 = sub_1000595A8();
        }
        uint64_t v83 = (void *)v82;
        self;
        if (swift_dynamicCastObjCClass())
        {
          sub_10006F640();
          sub_10006F670();
          sub_10006F680();
          sub_10006F650();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      unint64_t inited = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v75 = v34;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_100058D98();
    uint64_t v85 = v84;
    swift_release();
    uint64_t v86 = sub_100019E10(v85);
    id v87 = sub_1000595E0(v86);
    unint64_t v88 = sub_10006F0F0();
    *(void *)(v79 + 1704) = v88;

    if (v88 >> 62)
    {
      sub_100059900();
      sub_10006F6F0();
      sub_1000565F8();
    }
    else
    {
      sub_100056E10();
    }
    *(void *)(v79 + 1712) = v31;
    unint64_t v89 = &WFLogCategoryToolKitIndexing;
    if (v31)
    {
      sub_1000595CC();
      v406 = (uint64_t *)(v79 + 440);
      uint64_t v31 = v79 + 1664;
      *(unsigned char *)(v79 + 2081) = sub_10006A5F4(v88) & 1;
      *(void *)(v79 + 1720) = WFParameterRelationResourceRelationEqual;
      *(void *)(v79 + 1728) = WFParameterRelationResourceRelationAny;
      *(void *)(v79 + 1736) = WFParameterRelationResourceRelationNotEqual;
      *(void *)(v79 + 1744) = WFParameterRelationResourceRelationGreaterThan;
      *(void *)(v79 + 1752) = WFParameterRelationResourceRelationGreaterThanOrEqual;
      *(void *)(v79 + 1760) = WFParameterRelationResourceRelationLessThan;
      *(void *)(v79 + 1768) = WFParameterRelationResourceRelationLessThanOrEqual;
      *(void *)(v79 + 1776) = WFParameterRelationResourceRelationContains;
      *(_DWORD *)(v79 + 2056) = enum case for ParameterRelationshipDefinition.Relation.isSome(_:);
      *(_DWORD *)(v79 + 2060) = enum case for ParameterRelationshipDefinition.Relation.contains(_:);
      *(_DWORD *)(v79 + 2064) = enum case for ParameterRelationshipDefinition.Relation.lessThan(_:);
      *(_DWORD *)(v79 + 2068) = enum case for ParameterRelationshipDefinition.Relation.greaterThan(_:);
      *(_DWORD *)(v79 + 2072) = enum case for ParameterRelationshipDefinition.Relation.notEquals(_:);
      *(_DWORD *)(v79 + 2076) = enum case for ParameterRelationshipDefinition.Relation.equals(_:);
      *(void *)(v79 + 1784) = WFLogCategoryToolKitIndexing;
      uint64_t v90 = (unsigned __int8 *)(v79 + 2081);
      while (1)
      {
        *(void *)(v79 + 1792) = 0;
        int v91 = *v90;
        uint64_t v92 = sub_100068F18(0, *v90, *(void *)(v79 + 1704));
        if (v91 == 1) {
          uint64_t v93 = (uint64_t)sub_100056DF8(v92, *(void *)(v79 + 1704));
        }
        else {
          uint64_t v93 = sub_10006F620();
        }
        unint64_t v89 = (void *)v93;
        sub_1000595C0(v93);
        *(void *)(v79 + 1808) = v94;
        if (v95) {
          goto LABEL_271;
        }
        self;
        if (!swift_dynamicCastObjCClass()) {
          break;
        }

        sub_100057350();
        if (v158) {
          goto LABEL_51;
        }
      }
      uint64_t *v406 = sub_100046794(0);
      v403 = v89;
      id v146 = [v89 resourceManager];
      sub_10001028C(0, &qword_1000823F8);
      id v147 = [v146 resourceObjectsOfClass:swift_getObjCClassFromMetadata()];

      if (!v147) {
        goto LABEL_318;
      }
      uint64_t v31 = (uint64_t)WFResource_ptr;
      sub_100057654();
      sub_100059104(&qword_100082408);
      uint64_t v148 = sub_10006F1C0();

      sub_100016668(v148);
      uint64_t v150 = v149;
      swift_bridgeObjectRelease();
      uint64_t v400 = sub_100066FFC(v150);
      if (!v400)
      {
LABEL_159:
        swift_bridgeObjectRelease();
        unint64_t v234 = swift_bridgeObjectRetain();
        id v235 = sub_100017390(v234);
        swift_bridgeObjectRelease();
        if (!v235) {
          id v235 = [*(id *)(v79 + 1680) defaultContext];
        }
        *(void *)(v79 + 1816) = v235;
        unint64_t v236 = (void *)swift_task_alloc();
        *(void *)(v79 + 1824) = v236;
        *unint64_t v236 = v79;
        v236[1] = sub_10002F798;
        sub_100055194();
        WFParameter.toolkitTypeDefinition(for:localizationContext:)(v237, v238, v239, v240, v241, v242, v243, v244, a9, a10, a11, a12);
        return;
      }
      char v401 = sub_10006A5F4(v150);
      uint64_t v151 = 0;
      uint64_t v395 = v150 + 32;
      uint64_t v398 = v150;
      while (1)
      {
        sub_100068F18(v151, v401 & 1, v150);
        if (v401) {
          id v152 = *(id *)(v395 + 8 * v151);
        }
        else {
          id v152 = (id)sub_10006F620();
        }
        v412 = v152;
        uint64_t v404 = v151 + 1;
        if (__OFADD__(v151, 1)) {
          goto LABEL_308;
        }
        uint64_t v153 = *(void *)(v79 + 1696);
        id v154 = [v152 parameterKey];
        sub_10006F050();
        uint64_t v31 = v155;

        if (!*(void *)(v153 + 16)) {
          break;
        }
        sub_100059B74();
        sub_100058194();
        sub_10006F840();
        sub_100056560();
        if ((v156 & 1) == 0) {
          break;
        }
        sub_100056408();
        BOOL v158 = v158 && v157 == v31;
        if (!v158 && (sub_100055DE0() & 1) == 0)
        {
          do
          {
            sub_10005601C();
            if ((v159 & 1) == 0) {
              goto LABEL_102;
            }
            sub_100056408();
            BOOL v161 = v158 && v160 == v31;
          }
          while (!v161 && (sub_100055DE0() & 1) == 0);
          uint64_t v150 = v398;
          ++v151;
          swift_bridgeObjectRelease();

          goto LABEL_139;
        }
        swift_bridgeObjectRelease();

LABEL_138:
        uint64_t v150 = v398;
        uint64_t v151 = v404;
LABEL_139:
        if (v151 == v400) {
          goto LABEL_159;
        }
      }
LABEL_102:
      swift_bridgeObjectRelease();
      id v162 = [v412 comparedValues];
      uint64_t v31 = sub_10006F0F0();

      id v163 = v403;
      uint64_t v164 = sub_10005983C();
      uint64_t v166 = sub_1000169B4(v164, v165);
      swift_bridgeObjectRelease();
      sub_100059F54((uint64_t)v166);
      uint64_t v167 = sub_100052038(&qword_100082410, (void (*)(uint64_t))&type metadata accessor for TypedValue);
      uint64_t v168 = sub_100059A04(v167);
      if (sub_10006A5EC(v166))
      {
        sub_100058AFC();
        if (v169 != v95) {
          goto LABEL_310;
        }
        char v410 = sub_100068F08(v166);
        uint64_t v31 = 0;
        do
        {
          if (v410)
          {
            sub_1000114F0();
            v171();
          }
          else
          {
            uint64_t v172 = *(void *)(v79 + 1432);
            uint64_t v173 = sub_100055504(v31, v170, (void (*)(void))&type metadata accessor for TypedValue);
            if (v172 != 8) {
              goto LABEL_306;
            }
            *(void *)(v79 + 424) = v173;
            sub_1000114F0();
            v174();
            swift_unknownObjectRelease();
          }
          sub_100055548();
          v175();
          swift_bridgeObjectRetain();
          sub_10006EFF0();
          sub_1000567C8();
          if (v176)
          {
            sub_1000592DC();
            while (1)
            {
              uint64_t v177 = *(void *)(v424 + 1424);
              uint64_t v31 = v168;
              sub_1000114F0();
              v178();
              sub_100052038(&qword_100082418, (void (*)(uint64_t))&type metadata accessor for TypedValue);
              char v179 = sub_10005617C();
              uint64_t v168 = *(void *)(v177 + 8);
              sub_100055240();
              ((void (*)(void))v168)();
              if (v179) {
                break;
              }
              sub_100057114();
              if ((v180 & 1) == 0) {
                goto LABEL_113;
              }
            }
            sub_100059B3C();
            sub_100055240();
            ((void (*)(void))v168)();
            uint64_t v168 = v31;
          }
          else
          {
LABEL_113:
            sub_1000579A4();
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            sub_100056C6C();
            v182();
            *(void *)(v31 + 392) = v168;
            if (*(void *)(v168 + 24) <= *(void *)(v168 + 16))
            {
              if (isUniquelyReferenced_nonNull_native) {
                sub_1000496D0();
              }
              else {
                sub_10004B82C();
              }
              sub_100058158();
              sub_1000567FC();
              if (v183)
              {
                do
                {
                  uint64_t v184 = sub_100056310();
                  v185(v184);
                  sub_100052038(&qword_100082418, (void (*)(uint64_t))&type metadata accessor for TypedValue);
                  char v186 = sub_10005617C();
                  v31 += 8;
                  sub_10005527C();
                  v187();
                  if (v186)
                  {
                    sub_100058E40();
                    sub_100055194();
                    sub_10006F7B0();
                    return;
                  }
                  sub_1000563D0();
                }
                while ((v188 & 1) != 0);
              }
            }
            else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_10004ACEC();
            }
            uint64_t v79 = v424;
            uint64_t v168 = *(void *)(v424 + 392);
            *(void *)(v168 + (((unint64_t)&swift_bridgeObjectRelease_n_ptr >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << (char)&swift_bridgeObjectRelease_n_ptr;
            sub_100055548();
            v189();
            uint64_t v190 = *(void *)(v168 + 16);
            BOOL v95 = __OFADD__(v190, 1);
            uint64_t v191 = v190 + 1;
            if (v95)
            {
              __break(1u);
LABEL_306:
              __break(1u);
LABEL_307:
              __break(1u);
LABEL_308:
              __break(1u);
LABEL_309:
              __break(1u);
LABEL_310:
              __break(1u);
LABEL_311:
              __break(1u);
LABEL_312:
              __break(1u);
LABEL_313:
              __break(1u);
LABEL_314:
              __break(1u);
LABEL_315:
              __break(1u);
LABEL_316:
              __break(1u);
LABEL_317:
              __break(1u);
LABEL_318:

              __break(1u);
              JUMPOUT(0x10002BD24);
            }
            sub_100058238(v191);
            uint64_t v192 = sub_1000597CC();
            v193(v192);
          }
          sub_1000592A8();
        }
        while (!v158);
      }
      swift_bridgeObjectRelease();
      id v194 = [v412 relation];
      sub_10006F050();
      if (v79 == sub_100058C3C() && v31 == v195)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v197 = sub_1000564A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v197 & 1) == 0)
        {
          int v198 = *(void **)(v424 + 1728);
          id v199 = v194;
          id v200 = v198;
          uint64_t v31 = sub_100055E4C();

          if (v31)
          {
            sub_100055DC4();
            swift_bridgeObjectRelease();
LABEL_136:
            sub_100059280();
LABEL_137:
            sub_1000567F0();
            v201();
            sub_1000580B0();
            id v202 = [v412 parameterKey];
            sub_10006F050();

            sub_1000114F0();
            v203();
            sub_1000594BC();
            uint64_t v79 = (uint64_t)sub_10006757C;
            sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006757C);
            sub_100057CB0();
            sub_100059390();

            uint64_t v204 = sub_100057840();
            v205(v204);
            goto LABEL_138;
          }
          uint64_t v206 = *(void **)(v424 + 1736);
          id v207 = v199;
          id v208 = v206;
          uint64_t v31 = sub_100055E4C();

          if ((v31 & 1) == 0)
          {
            uint64_t v209 = *(void **)(v424 + 1744);
            id v210 = v207;
            id v211 = v209;
            uint64_t v31 = sub_100055E4C();

            if ((v31 & 1) == 0)
            {
              uint64_t v212 = *(void **)(v424 + 1752);
              id v213 = v210;
              id v214 = v212;
              uint64_t v31 = sub_100055E4C();

              if ((v31 & 1) == 0)
              {
                uint64_t v215 = *(void **)(v424 + 1760);
                id v216 = v213;
                id v217 = v215;
                uint64_t v31 = sub_100055E4C();

                if (v31) {
                  goto LABEL_145;
                }
                uint64_t v218 = *(void **)(v424 + 1768);
                id v219 = v216;
                id v220 = v218;
                uint64_t v31 = sub_100055E4C();

                if ((v31 & 1) == 0)
                {
                  id v221 = *(id *)(v424 + 1776);
                  char v222 = sub_100055E4C();

                  uint64_t v31 = *(void *)(v424 + 1384);
                  if (v222) {
                    sub_100059224();
                  }
                  else {
                    swift_bridgeObjectRelease();
                  }
                  goto LABEL_137;
                }
              }
              sub_100055DC4();
              *(void *)uint64_t v31 = v168;
              *(unsigned char *)(v31 + 8) = 1;
              goto LABEL_136;
            }
LABEL_145:
            sub_100055DC4();
            *(void *)uint64_t v31 = v168;
            *(unsigned char *)(v31 + 8) = 0;
            goto LABEL_136;
          }
        }
      }
      sub_100055DC4();
      *(void *)uint64_t v31 = v168;
      goto LABEL_136;
    }
LABEL_51:
    sub_100057324();
    swift_bridgeObjectRelease();
    sub_100052038(&qword_100082420, (void (*)(uint64_t))&type metadata accessor for ToolFlag);
    sub_100059044();
    *(void *)(v79 + 400) = sub_100046794(0);
    uint64_t v96 = swift_allocBox();
    sub_100058D04(v96, v97);
    *(void *)(v79 + 408) = sub_100046794(0);
    sub_100052038(&qword_100082428, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
    sub_10000772C(&qword_100082430);
    sub_100052D74();
    sub_100057524();
    uint64_t v411 = sub_10006E3B0();
    uint64_t v399 = inited;
    if (sub_10006A5EC(v411)) {
      break;
    }
LABEL_78:
    sub_1000571E4();
    sub_10006E280();
    uint64_t v119 = sub_100055E70();
    sub_1000584A0(v119);
    uint64_t v120 = sub_100055204();
    *(void *)(v120 + 16) = sub_100052DC8;
    *(void *)(v120 + 24) = inited;
    id v121 = v89;
    swift_retain_n();
    id v122 = v121;
    v423 = (void *)sub_10006E350();
    LODWORD(v407) = sub_10006F300();
    uint64_t v123 = (uint64_t *)sub_100055258();
    *((unsigned char *)v123 + 16) = 32;
    uint64_t v124 = (void *)sub_100055258();
    sub_100058410((uint64_t)v124);
    uint64_t v79 = sub_100055204();
    *(void *)(v79 + 16) = sub_10005461C;
    *(void *)(v79 + 24) = v34;
    uint64_t v125 = sub_100055204();
    *(void *)(v125 + 16) = sub_100052DE0;
    *(void *)(v125 + 24) = v79;
    uint64_t v126 = sub_100055258();
    *(unsigned char *)(v126 + 16) = 32;
    uint64_t v75 = sub_100055258();
    *(unsigned char *)(v75 + 16) = (_BYTE)v121;
    uint64_t v127 = sub_100055204();
    *(void *)(v127 + 16) = sub_100052DD0;
    *(void *)(v127 + 24) = v120;
    os_signpost_id_t v128 = (void (**)(void))sub_100055204();
    v128[2] = (void (*)(void))sub_1000545C8;
    v128[3] = (void (*)(void))v127;
    sub_10000772C((uint64_t *)&unk_100082390);
    unint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000716D0;
    *(void *)(inited + 32) = sub_100054620;
    *(void *)(inited + 40) = v123;
    *(void *)(inited + 48) = sub_100054620;
    *(void *)(inited + 56) = v124;
    *(void *)(inited + 64) = sub_1000545D4;
    *(void *)(inited + 72) = v125;
    *(void *)(inited + 80) = sub_100054620;
    *(void *)(inited + 88) = v126;
    *(void *)(inited + 96) = sub_100054620;
    *(void *)(inited + 104) = v75;
    *(void *)(inited + 112) = sub_1000545D4;
    *(void *)(inited + 120) = v128;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v415 = v127;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v129 = (void *)v125;
    swift_retain();
    swift_retain();
    swift_retain();
    v416 = v128;
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v130 = (uint64_t (*)(char, uint64_t, char, uint64_t))&selRef_parameterKey;
    if (sub_100056824((os_log_type_t)v407))
    {
      unint64_t inited = sub_100055B7C();
      unint64_t v131 = sub_10005703C();
      sub_100056C78(v131);
      *(unsigned char *)(inited + 3) = 8;
      swift_release();
      id v132 = sub_100059350();
      uint64_t v133 = sub_10006F050();
      unint64_t v135 = v134;

      uint64_t v136 = sub_100046AE8(v133, v135, v425);
      sub_1000585C0(v136);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();

      *(unsigned char *)(inited + 12) = v126;
      swift_release();
      *(unsigned char *)(inited + 13) = 8;
      swift_release();
      uint64_t v125 = inited + 14;
      sub_100055CE4();
      uint64_t v79 = v396;
      uint64_t v130 = v397;
      sub_1000114F0();
      v137();
      sub_100052038(&qword_100082448, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
      unint64_t v138 = (void *)sub_100058AC4();
      unint64_t v140 = v139;
      v75 += 8;
      sub_1000556D0();
      v141();
      uint64_t v142 = sub_100046AE8((uint64_t)v138, v140, v425);
      sub_100058584(v142);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_1000597B4();
      sub_100058AA0((void *)&_mh_execute_header, v143, v144, "%s: Visibility flags: %s");
      uint64_t v124 = v405;
      sub_100057D9C();
      sub_10001153C();
      sub_10001153C();

      sub_1000551DC();
      v145();
    }
    else
    {
      sub_1000578F4();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_1000597B4();

      sub_100011784();
      v223();
      os_signpost_id_t v128 = (void (**)(void))v126;
    }
    unint64_t v224 = v128[209];
    if (v224)
    {
      uint64_t v225 = sub_10006F180();
      sub_100058CD4(v225);
      v128[236] = (void (*)(void))sub_10006F170();
      sub_1000553EC();
      sub_10005533C();
      goto LABEL_3;
    }
    [(id)sub_100055FEC() requiresUnlock];
    uint64_t v226 = sub_100056598();
    if (v228)
    {
      sub_10005708C();
      sub_100058B28();
      v229();
      uint64_t v79 = enum case for RuntimeDeviceState.unlocked(_:);
      sub_10006EB80();
      sub_1000551F4();
      sub_1000551E8();
      v230();
      uint64_t v231 = sub_100056004();
      v232(v231);
      uint64_t v130 = sub_1000674EC;
      unint64_t v224 = (void (*)(void))v75;
      sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
      sub_100055FCC();
      sub_1000469EC();
    }
    else
    {
      v227(v226, enum case for ToolAuthenticationPolicy.none(_:));
    }
    if (sub_10005665C((uint64_t)&OBJC_PROTOCOL___WFLinkActionProtocol))
    {
      sub_1000563C0();
      sub_100055330();
    }
    else
    {
      sub_100058024();
      self;
      sub_100056938();
      sub_100056058();
      sub_100058018();
    }
    v245();
    if ([(id)sub_100058DF8() isDiscontinued])
    {
      sub_100056B9C();
      sub_100042D34((char *)inited, (uint64_t)v124);
      Swift::String v247 = (void (*)(void))*((void *)v130 + 1);
      uint64_t v130 = (uint64_t (*)(char, uint64_t, char, uint64_t))((char *)v130 + 8);
      unint64_t v224 = v247;
      sub_100055234();
      v247();
      sub_100055234();
      v247();
      self;
      uint64_t v248 = swift_dynamicCastObjCClass();
      *(void *)(v424 + 1984) = v248;
      if (v248)
      {
        sub_1000576B4();
        Swift::String v249 = v224;
        *(void *)(v424 + 1992) = sub_10006F170();
        sub_1000553EC();
        sub_10005533C();
        goto LABEL_3;
      }
    }
    if ([(id)sub_100057FB8() isResidentCompatible])
    {
      sub_100057960();
      sub_100042D34((char *)v79, (uint64_t)v124);
      unint64_t v224 = (void (*)(void))*((void *)v130 + 1);
      sub_100055234();
      v224();
      ((void (*)(uint64_t, uint64_t))v224)(v79, v125);
    }
    sub_1000566F8();
    id v250 = [v224 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
    uint64_t v31 = (uint64_t)WFResource_ptr;
    unint64_t v77 = sub_100057654();
    unint64_t v251 = sub_100059104(&qword_100082408);
    uint64_t v252 = sub_100058BF4(v251);

    sub_100016C7C(v252, (void (*)(void))&type metadata accessor for WFDeviceCapabilityResource);
    swift_bridgeObjectRelease();
    if (sub_10005817C())
    {
      sub_100057518();
      if (v169 != v95) {
        goto LABEL_312;
      }
      sub_100056A3C();
      sub_100057080();
      uint64_t v129 = (void *)enum case for RuntimeRequirement.deviceCapability(_:);
      do
      {
        if (v75) {
          sub_100056774();
        }
        else {
          sub_100058714();
        }
        sub_1000575E8();
        uint64_t v253 = sub_10005791C();
        v254(v253);
        unint64_t v77 = (unint64_t)sub_1000674EC;
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
        sub_100058094(*(void *)(inited + 400));
        sub_100059390();
      }
      while ((uint64_t *)v125 != v123);
    }
    uint64_t v31 = v424;
    v255 = *(void **)(v424 + 576);
    swift_bridgeObjectRelease();
    sub_10006DF90();
    id v256 = [v255 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
    v257 = (void *)sub_1000574DC();

    sub_100016C7C((uint64_t)v257, (void (*)(void))&type metadata accessor for WFFeatureFlagResource);
    sub_1000598CC();
    if (sub_10005817C())
    {
      sub_100056FD8();
      if (v169 != v95) {
        goto LABEL_313;
      }
      LODWORD(v415) = sub_100058E50();
      uint64_t v129 = 0;
      sub_1000590F0(enum case for RuntimeRequirement.featureFlag(_:));
      do
      {
        if (v415) {
          sub_100056758();
        }
        else {
          sub_10005868C();
        }
        sub_100058C18();
        sub_100059ABC();
        char v258 = sub_10005996C();
        void *v257 = inited;
        v416[1] = (void (*)(void))v75;
        v416[2] = (void (*)(void))v125;
        v416[3] = (void (*)(void))v123;
        *((unsigned char *)v416 + 32) = v258 & 1;
        sub_1000551E8();
        v259();
        uint64_t v125 = (uint64_t)sub_1000674EC;
        v255 = v423;
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
        sub_1000560D4(*(void *)(v424 + 400));
        sub_1000469EC();

        sub_100057F6C();
      }
      while (!v158);
    }
    sub_100058070();
    if (v255)
    {
      sub_100057054();
      id v260 = v255;
      *(void *)(v424 + 2016) = sub_10006F170();
      sub_1000553EC();
      sub_10005533C();
      goto LABEL_3;
    }
    uint64_t v261 = sub_100046794(0);
    if (sub_10006A5EC(v261))
    {
      v262 = (void *)sub_10004CDD8(v261);
    }
    else
    {
      swift_bridgeObjectRelease();
      v262 = &_swiftEmptySetSingleton;
    }
    v425[9] = (uint64_t)v262;
    v263 = (void *)sub_100046794(0);
    if (sub_10006A5EC(v263))
    {
      v264 = (void *)sub_10004CDD8((uint64_t)v263);
    }
    else
    {
      swift_bridgeObjectRelease();
      v264 = &_swiftEmptySetSingleton;
    }
    sub_1000569EC((uint64_t)v264);
    id v265 = [v263 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
    uint64_t v266 = sub_1000574DC();

    uint64_t v34 = v407;
    sub_100016C7C(v266, (void (*)(void))&type metadata accessor for WFDeviceIdiomResource);
    id v268 = v267;
    uint64_t v396 = v407;
    swift_bridgeObjectRelease();
    uint64_t v421 = (uint64_t)v268;
    v418 = (void (*)(void))sub_100066FFC(v268);
    if (!v418)
    {
LABEL_215:
      sub_100058DE0();
      id v294 = [v268 disabledOnPlatforms];
      sub_1000574C4();
      uint64_t v31 = sub_1000574AC();

      if (sub_10006A5EC(v31))
      {
        sub_100057C60();
        if (v169 != v95) {
          goto LABEL_314;
        }
        sub_100056A58();
        sub_100057170();
        do
        {
          if (inited) {
            sub_100057E14();
          }
          else {
            sub_10005875C();
          }
          sub_100057400();
          sub_100056FA0();

          sub_100055228();
          v295();
        }
        while (v79 != v75);
      }
      swift_bridgeObjectRelease();
      sub_100057DD8();
      if (v296) {
        uint64_t v297 = swift_bridgeObjectRetain();
      }
      else {
        uint64_t v297 = sub_10006EA90();
      }
      uint64_t v298 = sub_100059B1C(v297);
      sub_100047F78(v298);
      swift_bridgeObjectRelease();
      sub_1000587EC();
      uint64_t v299 = sub_100043434();
      sub_100056F84();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v419 = sub_10006A5EC(v299);
      if (v419)
      {
        sub_100056FD8();
        if (v169 != v95) {
          goto LABEL_315;
        }
        uint64_t v300 = sub_100056AD0();
        sub_100056B24(v300);
        sub_100057DC0(enum case for RuntimeRequirement.platform(_:));
        do
        {
          if (v416)
          {
            sub_100055270();
            v301();
          }
          else
          {
            uint64_t v302 = sub_10005529C((unint64_t)v123, v299, (void (*)(void))&type metadata accessor for RuntimePlatform);
            if (v406 != (uint64_t *)8) {
              goto LABEL_309;
            }
            *(void *)(v79 + 448) = v302;
            sub_100055270();
            v303();
            swift_unknownObjectRelease();
          }
          uint64_t v31 = *(void *)(v79 + 1072);
          unint64_t inited = *(void *)(v79 + 1032);
          uint64_t v75 = *(void *)(v79 + 888);
          uint64_t v79 = *(void *)(v424 + 880);
          uint64_t v123 = (uint64_t *)((char *)v123 + 1);
          sub_10005524C();
          v304();
          uint64_t v305 = sub_10006ED70();
          sub_1000558F0(v305);
          sub_100055270();
          v306();
          sub_1000551E8();
          v307();
          sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
          sub_100059C2C();
          sub_1000576CC();
          sub_1000551DC();
          v308();
        }
        while ((uint64_t *)v419 != v123);
      }
      swift_bridgeObjectRelease();
      uint64_t v31 = sub_10006F480();
      *(void *)(v79 + 456) = v31;
      uint64_t v309 = sub_100046794(0);
      uint64_t v310 = sub_100059BD4(v309, (uint64_t)&OBJC_PROTOCOL___WFLinkActionProtocol);
      if (v310)
      {
        v311 = (void *)v310;
        id v312 = *(id *)(v79 + 576);
        id v313 = [v311 backingActionIdentifiers];
        uint64_t v314 = sub_10006F0F0();

        uint64_t v34 = (uint64_t)v402;
        unint64_t inited = (unint64_t)sub_100016FAC(v314);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v315 = sub_100026598(inited);

        uint64_t v79 = v424;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)(v424 + 464) = v315;
      }
      else
      {
        uint64_t v34 = (uint64_t)v402;
      }
      if (!sub_100059BB4())
      {
        uint64_t v316 = sub_10006A5EC(v31);
        if (v316)
        {
          v317 = (uint64_t *)v316;
          if (v316 < 1) {
            goto LABEL_316;
          }
          sub_100056E88();
          sub_1000582D0();
          sub_100055F4C(enum case for SystemToolProtocol.assistantSchema(_:));
          uint64_t v123 = 0;
          sub_100057B3C((uint64_t)"SystemToolProtocol");
          do
          {
            if (inited)
            {
              sub_100055270();
              v318();
            }
            else
            {
              uint64_t v319 = sub_100056890((unint64_t)v123, v31, (void (*)(void))&type metadata accessor for SystemToolProtocol);
              if (v416 != (void (**)(void))8) {
                goto LABEL_311;
              }
              *(void *)(v79 + 512) = v319;
              sub_100055270();
              v320();
              swift_unknownObjectRelease();
            }
            uint64_t v321 = sub_10005606C();
            v322(v321);
            uint64_t v323 = sub_100056138();
            v324(v323);
            sub_100059AD4();
            if (v158)
            {
              uint64_t v325 = sub_100055288();
              v326(v325);
              sub_10005524C();
              v327();
              uint64_t v328 = sub_10006EDA0();
              sub_10006ED90();
              sub_10005905C();
              sub_100059880();
              if (*(void *)(v328 + 16) && (sub_100068818(), (v329 & 1) != 0))
              {
                sub_1000114F0();
                v330();
                uint64_t v331 = 0;
              }
              else
              {
                uint64_t v331 = 1;
              }
              uint64_t v333 = *(void *)(v79 + 784);
              uint64_t v334 = *(void *)(v79 + 776);
              sub_100056DC8(v334, v331);
              sub_100007800(v334, 1, v333);
              sub_1000599E4();
              if (v158)
              {
                uint64_t v335 = *(void *)(v79 + 776);
                sub_1000551DC();
                v336();
                sub_100053404(v335, &qword_1000823C0);
              }
              else
              {
                sub_10005524C();
                v337();
                sub_10006E380();
                sub_10001A7C0();
                sub_1000551DC();
                v338();
                uint64_t v339 = sub_100057E2C();
                v340(v339);
              }
              uint64_t v31 = v408;
              v317 = (uint64_t *)v407;
              LOBYTE(inited) = (_BYTE)v406;
            }
            else
            {
              sub_1000551DC();
              v332();
            }
            uint64_t v123 = (uint64_t *)((char *)v123 + 1);
          }
          while (v317 != v123);
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v341 = v79 + 456;
      if (sub_10006A5EC(*v402))
      {
        sub_100055330();
        v342();
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006745C);
        sub_100055C28(*(void *)(v79 + 456));
        sub_1000469EC();
      }
      v343 = *(void **)(v79 + 1672);
      if (v343)
      {
        sub_10006F180();
        id v344 = v343;
        *(void *)(v79 + 2040) = sub_10006F170();
        sub_10006F150();
        sub_10005533C();
        goto LABEL_3;
      }
      v345 = (uint64_t *)(v79 + 480);
      v346 = (void *)(v79 + 488);
      sub_1000075E8(*(void **)(v79 + 576), (SEL *)&selRef_iconName);
      v418 = (void (*)(void))(v79 + 480);
      if (v347)
      {
        sub_1000599A4();
        swift_bridgeObjectRelease();
        uint64_t *v345 = v34;
        *(void *)(v79 + 488) = v79;
        uint64_t v34 = enum case for ToolIcon.workflowAsset(_:);
        uint64_t v348 = sub_10006E510();
        sub_1000551F4();
        sub_1000551E8();
        v349();
        sub_100007770(v79 + 480, 0, 1, v348);
        sub_100059804();
        goto LABEL_299;
      }
      sub_1000075E8(*(void **)(v79 + 576), (SEL *)&selRef_iconSymbolName);
      sub_100059804();
      if (!v351) {
        goto LABEL_275;
      }
      uint64_t v352 = v350;
      uint64_t v34 = v351;
      sub_1000075E8(*(void **)(v79 + 576), (SEL *)&selRef_iconBackgroundColorName);
      if (!v353) {
        goto LABEL_274;
      }
      v354 = [(id)sub_100057BA8() definition];
      if (v354)
      {
        v346 = v354;
        id v355 = [v354 objectForKey:WFActionIconSymbolColorNameKey];

        if (v355)
        {
          sub_10006F4F0();
          uint64_t v356 = swift_unknownObjectRelease();
        }
        else
        {
          sub_100059C6C();
        }
        sub_10005942C(v356, v357, &qword_100082450);
        uint64_t v79 = v424;
        if (*(void *)(v424 + 328))
        {
          if (sub_1000560FC())
          {
            sub_10006E400();
            goto LABEL_283;
          }
LABEL_282:
          sub_100055CCC(*(void *)(v79 + 720), v362, v363, *(void *)(v79 + 632));
LABEL_283:
          sub_1000587BC();
          swift_bridgeObjectRelease();
          BOOL v364 = v123 == v345 && v75 == 0xE400000000000000;
          if (v364 || (sub_100055554() & 1) != 0)
          {
            uint64_t v365 = *(void *)(v79 + 712);
            uint64_t v366 = *(void *)(v79 + 632);
            sub_1000532F0(*(void *)(v79 + 720), v365, &qword_1000823A8);
            sub_100055EE0(v365, 1, v366);
            if (!v158)
            {
              uint64_t v371 = sub_100056BCC();
              sub_100053404(v371, &qword_1000823A8);
              swift_bridgeObjectRelease();
              v372 = (void (*)(void))v346[4];
              sub_100056D38();
              v372();
              sub_100056D38();
              v372();
LABEL_298:
              v376 = *(uint64_t **)(v341 + 768);
              sub_100055330();
              v377();
              sub_10000772C(&qword_100082460);
              uint64_t *v376 = v415;
              v376[1] = v352;
              sub_1000568D4();
              v378();
              uint64_t v34 = enum case for ToolIcon.symbol(_:);
              sub_10006E510();
              sub_1000551F4();
              sub_1000551E8();
              v379();
              sub_100059D24();
              goto LABEL_299;
            }
            sub_100053404(*(void *)(v79 + 712), &qword_1000823A8);
          }
          uint64_t v367 = *(void *)(v79 + 704);
          sub_100057238();
          uint64_t v368 = sub_100056EE8();
          if (v158)
          {
            sub_1000551E8();
            v370();
            sub_100053404(v79, &qword_1000823A8);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t))(v369 + 32))(v368, v79);
          }
          uint64_t v373 = sub_1000590DC();
          sub_100053348(v373, v367, &qword_1000823A8);
          sub_100056F24();
          if (v158)
          {
            sub_100055330();
            v374();
            sub_100053404(v79, &qword_1000823A8);
            sub_10005748C();
          }
          else
          {
            sub_100058990();
            ((void (*)(void))v75)();
          }
          sub_100057F18();
          sub_10000772C(&qword_100082458);
          sub_100056840();
          ((void (*)(void))v75)();
          uint64_t v375 = sub_100056418();
          ((void (*)(uint64_t))v75)(v375);
          goto LABEL_298;
        }
      }
      else
      {
        sub_100058F10();
      }
      sub_100053404(v352, &qword_100082450);
      goto LABEL_282;
    }
    id v268 = *(id *)(v424 + 992);
    uint64_t v269 = *(void *)(v424 + 928);
    LODWORD(v416) = sub_100068F0C(v421);
    sub_1000599D8();
    LODWORD(v415) = enum case for WFDeviceIdiomResource.Requirement.equalTo(_:);
    sub_100057EF0(enum case for WFDeviceIdiomResource.Requirement.notEqualTo(_:));
    char v409 = v269 + 104;
    LODWORD(v402) = enum case for RuntimePlatform.watch(_:);
    sub_100057ED8();
    uint64_t v31 = v269 + 8;
    while (1)
    {
      if (v416) {
        id v270 = *(id *)(v421 + 8 * v75 + 32);
      }
      else {
        sub_10006F620();
      }
      sub_1000596D8();
      if (v95) {
        break;
      }
      sub_100057E60();
      uint64_t v271 = sub_100058110();
      if (v272(v271) == v415)
      {
        id v268 = *(id *)(v34 + 1000);
        uint64_t v273 = sub_100055288();
        v274(v273);
        sub_100055E64();
        switch(v275)
        {
          case 0:
          case 5:
            sub_1000576E4();
            goto LABEL_211;
          case 1:
          case 2:
          case 3:
          case 4:
          case 6:
            uint64_t v283 = *(void *)(v424 + 976);
            unint64_t v77 = *(void *)(v424 + 968);
            uint64_t v123 = *(uint64_t **)(v424 + 960);
            uint64_t v34 = *(void *)(v424 + 920);
            uint64_t v284 = *(void *)(v424 + 912);
            sub_1000551E8();
            v285();
            sub_100007770(v284, 0, 1, v34);
            sub_10005524C();
            v286();
            sub_100055270();
            v287();
            sub_10004D554(v77, (char *)v123);

            id v268 = *(id *)v31;
            sub_10005527C();
            ((void (*)(void))v268)();
            ((void (*)(uint64_t, uint64_t))v268)(v283, v34);
            goto LABEL_214;
          default:
            goto LABEL_272;
        }
      }
      sub_100059074();
      if (v158)
      {
        sub_100055574();
        v280();
        sub_100055E64();
        switch(v281)
        {
          case 0:
          case 5:
            sub_1000576F4();
LABEL_211:
            sub_100056EB8(v276, v277, v278, v279);
            sub_100053404((uint64_t)v268, &qword_1000823D0);
            goto LABEL_214;
          case 1:
          case 2:
          case 3:
          case 4:
          case 6:
            uint64_t v34 = *(void *)(v424 + 960);
            unint64_t v77 = *(void *)(v424 + 952);
            uint64_t v123 = *(uint64_t **)(v424 + 920);
            uint64_t v288 = *(void *)(v424 + 904);
            sub_1000551E8();
            v289();
            sub_100007770(v288, 0, 1, (uint64_t)v123);
            sub_10005524C();
            v290();
            sub_100055270();
            v291();
            sub_100056FA0();

            id v268 = *(id *)v31;
            sub_10005527C();
            ((void (*)(void))v268)();
            uint64_t v292 = sub_100059B5C();
            ((void (*)(uint64_t, uint64_t))v268)(v292, v293);
            goto LABEL_214;
          default:
            goto LABEL_272;
        }
      }

      sub_1000551DC();
      v282();
LABEL_214:
      ++v75;
      if ((void (*)(void))v79 == v418) {
        goto LABEL_215;
      }
    }
    __break(1u);
LABEL_303:
    sub_100059AFC();
    uint64_t v79 = sub_10006F6F0();
    swift_bridgeObjectRelease();
  }
  uint64_t v98 = sub_100056CB4();
  sub_10005626C(v98);
  sub_100058828((uint64_t)"ToolVisibilityFlag");
  while (1)
  {
    if (v409)
    {
      uint64_t v99 = sub_10005609C();
      ((void (*)(uint64_t))v89)(v99);
      goto LABEL_57;
    }
    uint64_t v100 = sub_100058628(v34, v411, (void (*)(void))&type metadata accessor for ToolVisibilityFlag);
    if (v405 != (void *)8) {
      break;
    }
    *(void *)(v79 + 416) = v100;
    unint64_t v89 = *(void **)v75;
    sub_1000560F0();
    ((void (*)(void))v89)();
    swift_unknownObjectRelease();
LABEL_57:
    if (__OFADD__(v34, 1))
    {
      __break(1u);
      goto LABEL_268;
    }
    v414 = *v416;
    sub_100055548();
    v101();
    v418 = (void (*)(void))v89;
    sub_1000560F0();
    ((void (*)(void))v89)();
    sub_10006E3E0();
    sub_100052038(&qword_100082440, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
    char v102 = sub_100058898();
    uint64_t v75 = *(void *)v31;
    sub_100055228();
    ((void (*)(void))v75)();
    if (v102)
    {
      unint64_t v89 = *(void **)(v79 + 576);
      sub_10005527C();
      ((void (*)(void))v75)();
      if ([v89 visibleForUse:0])
      {
        sub_100057AF0();
        sub_1000114F0();
        v103();
        sub_10005663C();
        uint64_t v104 = sub_100056214();
        sub_1000559E8(v104);
        if (v105)
        {
          unint64_t v89 = *(void **)(v79 + 1208);
          uint64_t v396 = *(void *)(v79 + 1200);
          sub_100055228();
          ((void (*)(void))v75)();
          sub_100055580();
          v418();
          sub_100055580();
          v418();
          sub_10005661C();
          unint64_t inited = (unint64_t)v414;
        }
        else
        {
          uint64_t v106 = sub_100056084();
          ((void (*)(uint64_t))inited)(v106);
        }
        uint64_t v117 = sub_100055364();
        ((void (*)(unsigned char *))inited)(v117);
        sub_100055228();
        ((void (*)(void))v75)();
        os_signpost_type_t v116 = v397;
LABEL_74:
        unint64_t inited = v399;
        goto LABEL_75;
      }
    }
    else
    {
      sub_10006E3D0();
      char v107 = sub_1000561F0();
      sub_100055228();
      ((void (*)(void))v75)();
      if (v107)
      {
        unint64_t v89 = *(void **)(v79 + 576);
        sub_10005527C();
        ((void (*)(void))v75)();
        if ([v89 visibleForUse:1])
        {
          sub_100057AC8();
          sub_1000114F0();
          v108();
          sub_10005663C();
          uint64_t v109 = sub_100056214();
          sub_1000559E8(v109);
          if (v110)
          {
            unint64_t v89 = *(void **)(v79 + 1208);
            uint64_t v396 = *(void *)(v79 + 1184);
            sub_100055228();
            ((void (*)(void))v75)();
            sub_100055580();
            v418();
            sub_100055580();
            v418();
            sub_10005661C();
            unint64_t inited = (unint64_t)v414;
          }
          else
          {
            uint64_t v111 = sub_100056084();
            ((void (*)(uint64_t))inited)(v111);
          }
          uint64_t v118 = sub_100055364();
          ((void (*)(unsigned char *))inited)(v118);
          sub_100055228();
          ((void (*)(void))v75)();
          os_signpost_type_t v116 = v394;
          goto LABEL_74;
        }
      }
      else
      {
        sub_100059484();
        char v112 = sub_1000561F0();
        sub_100055228();
        ((void (*)(void))v75)();
        if ((v112 & 1) == 0)
        {

          sub_10004651C(27);
          swift_bridgeObjectRelease();
          sub_100056748();
          sub_100056790(v246);
          sub_100052038(&qword_100082448, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
          v426._countAndFlagsBits = sub_10006F750();
          sub_100058D34(v426);
          swift_bridgeObjectRelease();
          sub_10006F080();
          sub_100055C44();
          goto LABEL_168;
        }
        unint64_t v89 = *(void **)(v79 + 1168);
        sub_100055228();
        ((void (*)(void))v75)();
        sub_1000114F0();
        v113();
        sub_10006E3E0();
        char v114 = sub_10006F500();
        sub_100055228();
        ((void (*)(void))v75)();
        sub_100055228();
        ((void (*)(void))v75)();
        if ((v114 & 1) != 0 && [*(id *)(v79 + 576) isApprovedForPublicShortcutsDrawer])
        {
          unint64_t v115 = *(char **)(v79 + 1208);
          unint64_t v89 = *(void **)(v79 + 1168);
          sub_100059484();
          sub_100042A3C(v115, (uint64_t)v89);
          sub_100055228();
          ((void (*)(void))v75)();
          os_signpost_type_t v116 = v393;
LABEL_75:
          ((void (*)(void, void))v75)(*(void *)v116, *(void *)(v79 + 1144));
        }
      }
    }
    sub_10005527C();
    ((void (*)(void))v75)();
    sub_100059294();
    if (v158) {
      goto LABEL_78;
    }
  }
  __break(1u);
LABEL_274:
  swift_bridgeObjectRelease();
LABEL_275:
  swift_bridgeObjectRelease();
  uint64_t v358 = *(void *)(v79 + 768);
  swift_bridgeObjectRelease();
  uint64_t v359 = sub_10006E510();
  sub_100055CCC(v358, v360, v361, v359);
LABEL_299:
  id v380 = sub_1000555A4();
  sub_10006F050();

  uint64_t v381 = swift_task_alloc();
  sub_1000556DC(v381);
  sub_10005746C();
  sub_1000557F0();
  if (v34)
  {
    uint64_t v382 = *(void *)(v424 + 768);
    sub_10005521C();
    v383();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_100053404(v382, &qword_1000823B8);
    sub_100011784();
    v384();
    sub_1000556D0();
    v385();
    swift_bridgeObjectRelease();
    sub_1000588E0();
    swift_bridgeObjectRelease();
    sub_100055234();
    v386();
    swift_bridgeObjectRelease();
    sub_100055240();
    v387();
    swift_bridgeObjectRelease();
    sub_100054E04();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100055AFC();
  }
  else
  {
    sub_100054838();
    v388();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_100053404(0, &qword_1000823B8);
    sub_100055234();
    v389();
    sub_100055240();
    v390();
    swift_bridgeObjectRelease();
    sub_100058674();
    swift_bridgeObjectRelease();
    sub_100055228();
    v391();
    swift_bridgeObjectRelease();
    sub_1000553C4();
    v392();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001151C();
  }
  sub_100055194();
  v46(v45, v46, v47, v48, v49, v50, v51, v52, a9, a10, a11, a12);
}

uint64_t sub_10002BD5C()
{
  sub_1000114D4();
  uint64_t v1 = *(void **)(v0 + 1640);
  swift_release();
  *(void *)(v0 + 1656) = [v1 metadata];
  sub_1000115E8();
  return _swift_task_switch(v2, v3, v4);
}

void sub_10002BDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1000553D0();
  sub_1000562A0();
  v423 = (uint64_t **)(v12 + 67);
  uint64_t v13 = (void *)v12[207];
  uint64_t v14 = (void *)v12[72];
  id v15 = [v13 outputType];

  uint64_t v16 = v12[205];
  v12[209] = v16;
  v12[208] = v15;
  uint64_t v17 = (void *)v12[72];
  v431[3] = sub_100058CA8();
  sub_100056840();
  uint64_t v18 = (uint64_t)v12;
  v431[4] = sub_1000525E0(v19, v20);
  v431[0] = (uint64_t)v17;
  uint64_t v21 = (uint64_t)v15;
  id v22 = v17;
  sub_10006E020();
  id v23 = self;
  v12[210] = v23;
  id v24 = [v23 defaultContext];
  sub_10006F240();
  v12[67] = &_swiftEmptySetSingleton;
  uint64_t v25 = *(void *)(sub_10006F470() + 16);
  if (v25)
  {
    char v426 = v16;
    uint64_t v428 = v21;
    uint64_t v26 = 0;
    uint64_t v27 = (void (**)(void))(*(void *)(v18 + 1568) + 8);
    do
    {
      sub_10006F2D0();
      id v22 = *(id *)(v18 + 1592);
      uint64_t v28 = *(char **)(v18 + 1584);
      ++v26;
      uint64_t v29 = sub_100056A90();
      v30(v29);
      sub_10004DEC0((uint64_t)v22, v28);
      uint64_t v31 = *v27;
      sub_1000556D0();
      v31();
      sub_100058F40();
      sub_1000556D0();
      v31();
    }
    while (v25 != v26);
    swift_bridgeObjectRelease();
    id v32 = *v423;
    uint64_t v21 = v428;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v32 = (uint64_t *)&_swiftEmptySetSingleton;
  }
  id v33 = [*(id *)(v18 + 576) outputsMultipleItems];
  uint64_t v34 = swift_bridgeObjectRetain();
  sub_100019EC4(v34);
  sub_1000565F8();
  uint64_t v35 = sub_100019A90(v18 + 504);
  uint64_t v36 = *(void *)(v35 + 16);
  uint64_t v37 = (void (*)(void))enum case for TypeInstance.type(_:);
  uint64_t v430 = v18;
  if (v36 == 1)
  {
    sub_100059770();
    swift_bridgeObjectRelease();
    sub_100055CAC((uint64_t)v32);
    if (v156) {
      goto LABEL_315;
    }
    sub_100058D64();
    uint64_t v38 = v18;
    uint64_t v41 = swift_allocBox();
    sub_100056840();
    v54();
    *id v32 = v41;
    uint64_t v55 = sub_100056150();
    v56(v55);
  }
  else
  {
    LODWORD(v411) = v33;
    if (v36)
    {
      uint64_t v57 = *(void (***)(void))(v18 + 1520);
      v431[0] = (uint64_t)_swiftEmptyArrayStorage;
      sub_10004668C(v36, (uint64_t (*)(void))sub_100069110);
      int64_t v58 = sub_10005303C(v35);
      sub_100055EF8();
      do
      {
        if (v58 < 0 || (sub_100057C2C(), v58 >= v59))
        {
LABEL_266:
          __break(1u);
LABEL_267:
          __break(1u);
LABEL_268:
          __break(1u);
LABEL_269:
          __break(1u);
LABEL_270:
          sub_100055348();
          sub_10005738C();
LABEL_164:
          sub_1000559C8();
          sub_100055194();
          return;
        }
        if (((*(void *)(v419 + (((unint64_t)v58 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v58) & 1) == 0) {
          goto LABEL_267;
        }
        if (*(_DWORD *)(v35 + 36) != v22) {
          goto LABEL_268;
        }
        sub_100056344();
        sub_100059504();
        sub_100055580();
        ((void (*)(void))v35)();
        sub_10005524C();
        v60();
        uint64_t v61 = swift_allocBox();
        sub_1000596E4(v61, v62);
        sub_100055580();
        ((void (*)(void))v35)();
        uint64_t v35 = (uint64_t)v33;
        void *v57 = v37;
        uint64_t v37 = *v422;
        sub_100055330();
        v37();
        sub_1000551DC();
        v63();
        sub_10004EFF8((uint64_t (*)(void, uint64_t, uint64_t))sub_100069110);
        sub_10005967C();
        sub_10004F09C();
        int64_t v58 = sub_100052AFC(v58, v428, v426 & 1, (uint64_t)v33);
        id v22 = v64;
        char v66 = v65 & 1;
        --v36;
      }
      while (v36);
      uint64_t v38 = v430;
      char v67 = *(uint64_t **)(v430 + 1536);
      uint64_t v41 = sub_100055E70();
      uint64_t v68 = sub_1000584F0();
      sub_10001650C(v68, v69, v66);
      swift_bridgeObjectRelease();
      *(void *)(v41 + 16) = sub_100019C50(v431[0]);
      *char v67 = v41;
      uint64_t v70 = sub_100059BF4();
      ((void (*)(uint64_t))v37)(v70);
    }
    else
    {
      sub_100058D4C();
      uint64_t v38 = v18;
      uint64_t v39 = *(void *)(v18 + 1472);
      swift_bridgeObjectRelease();
      id v22 = (id)swift_allocBox();
      uint64_t v41 = v40;
      sub_10006EA20();
      uint64_t v42 = swift_allocBox();
      sub_1000551E8();
      v43();
      *(void *)uint64_t v41 = v42;
      enum case for TypeInstance.type(_:)[13](v41, enum case for TypeIdentifier.primitive(_:), v39);
      *id v32 = (uint64_t)v22;
      uint64_t v44 = sub_100056150();
      v45(v44);
    }
  }
  uint64_t v71 = *(void *)(v38 + 1520);
  sub_10005963C();
  *(void *)(v38 + 1688) = *(void *)(v71 + 8);
  sub_10005521C();
  v72();
  sub_100056E1C();
  v73();
  uint64_t v21 = (uint64_t)&selRef_parameterKey;
  id v74 = [v22 parameters];
  uint64_t v75 = (void **)sub_10001028C(0, &qword_1000823F0);
  unint64_t v76 = sub_10006F0F0();

  unint64_t inited = (unint64_t)_swiftEmptyArrayStorage;
  v431[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (v76 >> 62) {
    goto LABEL_301;
  }
  uint64_t v18 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v18)
    {
      if (v18 < 1) {
        goto LABEL_305;
      }
      uint64_t v41 = v21;
      char v78 = sub_10006A5F4(v76);
      for (uint64_t i = 0; i != v18; ++i)
      {
        if (v78) {
          uint64_t v80 = (uint64_t)sub_100057B24();
        }
        else {
          uint64_t v80 = sub_1000595A8();
        }
        uint64_t v81 = (void *)v80;
        self;
        if (swift_dynamicCastObjCClass())
        {
          sub_10006F640();
          sub_10006F670();
          sub_10006F680();
          sub_10006F650();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      unint64_t inited = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v21 = v41;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_100058D98();
    uint64_t v83 = v82;
    swift_release();
    uint64_t v84 = sub_100019E10(v83);
    id v85 = sub_1000595E0(v84);
    unint64_t v86 = sub_10006F0F0();
    *(void *)(v18 + 1704) = v86;

    if (v86 >> 62)
    {
      sub_100059900();
      sub_10006F6F0();
      sub_1000565F8();
    }
    else
    {
      sub_100056E10();
    }
    *(void *)(v18 + 1712) = v75;
    id v87 = &WFLogCategoryToolKitIndexing;
    if (v75)
    {
      sub_1000595CC();
      *(unsigned char *)(v18 + 2081) = sub_10006A5F4(v86) & 1;
      *(void *)(v18 + 1720) = WFParameterRelationResourceRelationEqual;
      *(void *)(v18 + 1728) = WFParameterRelationResourceRelationAny;
      *(void *)(v18 + 1736) = WFParameterRelationResourceRelationNotEqual;
      *(void *)(v18 + 1744) = WFParameterRelationResourceRelationGreaterThan;
      *(void *)(v18 + 1752) = WFParameterRelationResourceRelationGreaterThanOrEqual;
      *(void *)(v18 + 1760) = WFParameterRelationResourceRelationLessThan;
      *(void *)(v18 + 1768) = WFParameterRelationResourceRelationLessThanOrEqual;
      *(void *)(v18 + 1776) = WFParameterRelationResourceRelationContains;
      *(_DWORD *)(v18 + 2056) = enum case for ParameterRelationshipDefinition.Relation.isSome(_:);
      *(_DWORD *)(v18 + 2060) = enum case for ParameterRelationshipDefinition.Relation.contains(_:);
      *(_DWORD *)(v18 + 2064) = enum case for ParameterRelationshipDefinition.Relation.lessThan(_:);
      *(_DWORD *)(v18 + 2068) = enum case for ParameterRelationshipDefinition.Relation.greaterThan(_:);
      *(_DWORD *)(v18 + 2072) = enum case for ParameterRelationshipDefinition.Relation.notEquals(_:);
      *(_DWORD *)(v18 + 2076) = enum case for ParameterRelationshipDefinition.Relation.equals(_:);
      *(void *)(v18 + 1784) = WFLogCategoryToolKitIndexing;
      uint64_t v75 = (void **)(v18 + 2081);
      while (1)
      {
        *(void *)(v18 + 1792) = 0;
        int v88 = *(unsigned __int8 *)v75;
        uint64_t v89 = sub_100068F18(0, *(unsigned __int8 *)v75, *(void *)(v18 + 1704));
        if (v88 == 1) {
          uint64_t v90 = (uint64_t)sub_100056DF8(v89, *(void *)(v18 + 1704));
        }
        else {
          uint64_t v90 = sub_10006F620();
        }
        id v87 = (void *)v90;
        sub_1000595C0(v90);
        *(void *)(v18 + 1808) = v91;
        if (v92) {
          goto LABEL_269;
        }
        self;
        if (!swift_dynamicCastObjCClass()) {
          break;
        }

        sub_100057350();
        if (v156) {
          goto LABEL_46;
        }
      }
      *(void *)(v18 + 440) = sub_100046794(0);
      char v410 = v87;
      id v143 = [v87 resourceManager];
      sub_10001028C(0, &qword_1000823F8);
      id v144 = [v143 resourceObjectsOfClass:swift_getObjCClassFromMetadata()];

      if (!v144) {
        goto LABEL_316;
      }
      sub_100057654();
      sub_100059104(&qword_100082408);
      uint64_t v145 = sub_10006F1C0();

      sub_100016668(v145);
      uint64_t v147 = v146;
      swift_bridgeObjectRelease();
      uint64_t v407 = sub_100066FFC(v147);
      if (!v407)
      {
LABEL_155:
        swift_bridgeObjectRelease();
        unint64_t v237 = swift_bridgeObjectRetain();
        id v238 = sub_100017390(v237);
        swift_bridgeObjectRelease();
        if (!v238) {
          id v238 = [*(id *)(v18 + 1680) defaultContext];
        }
        *(void *)(v18 + 1816) = v238;
        uint64_t v239 = (void *)swift_task_alloc();
        *(void *)(v18 + 1824) = v239;
        *uint64_t v239 = v18;
        v239[1] = sub_10002F798;
        sub_100055194();
        WFParameter.toolkitTypeDefinition(for:localizationContext:)(v240, v241, v242, v243, v244, v245, v246, v247, a9, a10, a11, a12);
        return;
      }
      char v409 = sub_10006A5F4(v147);
      uint64_t v148 = 0;
      uint64_t v402 = v147 + 32;
      uint64_t v406 = v147;
      while (1)
      {
        sub_100068F18(v148, v409 & 1, v147);
        if (v409) {
          id v149 = *(id *)(v402 + 8 * v148);
        }
        else {
          id v149 = (id)sub_10006F620();
        }
        v418 = v149;
        BOOL v92 = __OFADD__(v148++, 1);
        if (v92) {
          goto LABEL_306;
        }
        uint64_t v412 = v148;
        uint64_t v150 = *(void *)(v18 + 1696);
        id v151 = [v149 parameterKey];
        sub_10006F050();
        uint64_t v153 = v152;

        if (!*(void *)(v150 + 16)) {
          break;
        }
        sub_100059B74();
        sub_100058194();
        sub_10006F840();
        sub_100056560();
        if ((v154 & 1) == 0) {
          break;
        }
        sub_100056408();
        BOOL v156 = v156 && v155 == v153;
        if (!v156 && (sub_100055DE0() & 1) == 0)
        {
          do
          {
            sub_10005601C();
            if ((v157 & 1) == 0) {
              goto LABEL_97;
            }
            sub_100056408();
            BOOL v159 = v156 && v158 == v153;
          }
          while (!v159 && (sub_100055DE0() & 1) == 0);
          uint64_t v147 = v406;
          swift_bridgeObjectRelease();

          goto LABEL_135;
        }
        swift_bridgeObjectRelease();

LABEL_134:
        uint64_t v147 = v406;
        uint64_t v148 = v412;
LABEL_135:
        if (v148 == v407) {
          goto LABEL_155;
        }
      }
LABEL_97:
      swift_bridgeObjectRelease();
      id v160 = [v418 comparedValues];
      unint64_t v161 = sub_10006F0F0();

      id v162 = v410;
      uint64_t v163 = sub_10005983C();
      uint64_t v165 = sub_1000169B4(v163, v164);
      swift_bridgeObjectRelease();
      sub_100059F54((uint64_t)v165);
      uint64_t v166 = sub_100052038(&qword_100082410, (void (*)(uint64_t))&type metadata accessor for TypedValue);
      uint64_t v167 = sub_100059A04(v166);
      if (sub_10006A5EC(v165))
      {
        sub_100058AFC();
        if (v168 != v92) {
          goto LABEL_308;
        }
        char v416 = sub_100068F08(v165);
        unint64_t v161 = 0;
        do
        {
          if (v416)
          {
            sub_1000114F0();
            v170();
          }
          else
          {
            uint64_t v171 = *(void *)(v18 + 1432);
            uint64_t v172 = sub_100055504(v161, v169, (void (*)(void))&type metadata accessor for TypedValue);
            if (v171 != 8) {
              goto LABEL_304;
            }
            *(void *)(v18 + 424) = v172;
            sub_1000114F0();
            v173();
            swift_unknownObjectRelease();
          }
          sub_100055548();
          v174();
          swift_bridgeObjectRetain();
          sub_10006EFF0();
          sub_1000567C8();
          if (v175)
          {
            sub_1000592DC();
            while (1)
            {
              uint64_t v176 = *(void *)(v430 + 1424);
              unint64_t v161 = v167;
              sub_1000114F0();
              v177();
              sub_100052038(&qword_100082418, (void (*)(uint64_t))&type metadata accessor for TypedValue);
              char v178 = sub_10005617C();
              uint64_t v167 = *(void *)(v176 + 8);
              sub_100055240();
              ((void (*)(void))v167)();
              if (v178) {
                break;
              }
              sub_100057114();
              if ((v179 & 1) == 0) {
                goto LABEL_108;
              }
            }
            sub_100059B3C();
            sub_100055240();
            ((void (*)(void))v167)();
            uint64_t v167 = v161;
          }
          else
          {
LABEL_108:
            sub_1000579A4();
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            sub_100056C6C();
            v181();
            *(void *)(v161 + 392) = v167;
            if (*(void *)(v167 + 24) <= *(void *)(v167 + 16))
            {
              if (isUniquelyReferenced_nonNull_native) {
                sub_1000496D0();
              }
              else {
                sub_10004B82C();
              }
              sub_100058158();
              sub_1000567FC();
              if (v183)
              {
                uint64_t v21 = ~v182;
                do
                {
                  uint64_t v184 = sub_100056310();
                  v185(v184);
                  sub_100052038(&qword_100082418, (void (*)(uint64_t))&type metadata accessor for TypedValue);
                  char v186 = sub_10005617C();
                  v161 += 8;
                  sub_10005527C();
                  v187();
                  if (v186)
                  {
                    sub_100058E40();
                    sub_100055194();
                    sub_10006F7B0();
                    return;
                  }
                  sub_1000563D0();
                }
                while ((v188 & 1) != 0);
              }
            }
            else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_10004ACEC();
            }
            uint64_t v18 = v430;
            uint64_t v167 = *(void *)(v430 + 392);
            *(void *)(v167 + (((unint64_t)&swift_bridgeObjectRelease_n_ptr >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << (char)&swift_bridgeObjectRelease_n_ptr;
            sub_100055548();
            v189();
            uint64_t v190 = *(void *)(v167 + 16);
            BOOL v92 = __OFADD__(v190, 1);
            uint64_t v191 = v190 + 1;
            if (v92)
            {
              __break(1u);
LABEL_304:
              __break(1u);
LABEL_305:
              __break(1u);
LABEL_306:
              __break(1u);
LABEL_307:
              __break(1u);
LABEL_308:
              __break(1u);
LABEL_309:
              __break(1u);
LABEL_310:
              __break(1u);
LABEL_311:
              __break(1u);
LABEL_312:
              __break(1u);
LABEL_313:
              __break(1u);
LABEL_314:
              __break(1u);
LABEL_315:

              __break(1u);
LABEL_316:

              __break(1u);
              JUMPOUT(0x10002F760);
            }
            sub_100058238(v191);
            uint64_t v192 = sub_1000597CC();
            v193(v192);
          }
          sub_1000592A8();
        }
        while (!v156);
      }
      swift_bridgeObjectRelease();
      id v194 = [v418 relation];
      sub_10006F050();
      if (v18 == sub_100058C3C() && v161 == v195)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v197 = sub_1000564A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v197 & 1) == 0)
        {
          int v198 = *(void **)(v430 + 1728);
          id v199 = v194;
          id v200 = v198;
          char v201 = sub_100055E4C();

          if (v201)
          {
            sub_100055DC4();
            swift_bridgeObjectRelease();
LABEL_132:
            sub_100059280();
LABEL_133:
            sub_1000567F0();
            v202();
            sub_1000580B0();
            uint64_t v21 = (uint64_t)v418;
            id v203 = [v418 parameterKey];
            sub_10006F050();

            sub_1000114F0();
            v204();
            sub_1000594BC();
            uint64_t v18 = (uint64_t)sub_10006757C;
            sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006757C);
            sub_100057CB0();
            sub_100059390();

            uint64_t v205 = sub_100057840();
            v206(v205);
            goto LABEL_134;
          }
          id v207 = *(void **)(v430 + 1736);
          id v208 = v199;
          id v209 = v207;
          unint64_t v161 = sub_100055E4C();

          if ((v161 & 1) == 0)
          {
            id v210 = *(void **)(v430 + 1744);
            id v211 = v208;
            id v212 = v210;
            uint64_t v213 = sub_100055E4C();

            if ((v213 & 1) == 0)
            {
              id v214 = *(void **)(v430 + 1752);
              id v215 = v211;
              id v216 = v214;
              uint64_t v217 = sub_100055E4C();

              if ((v217 & 1) == 0)
              {
                uint64_t v218 = *(void **)(v430 + 1760);
                id v219 = v215;
                id v220 = v218;
                uint64_t v213 = sub_100055E4C();

                if (v213) {
                  goto LABEL_141;
                }
                id v221 = *(void **)(v430 + 1768);
                id v222 = v219;
                id v223 = v221;
                uint64_t v217 = sub_100055E4C();

                if ((v217 & 1) == 0)
                {
                  id v224 = *(id *)(v430 + 1776);
                  char v225 = sub_100055E4C();

                  if (v225) {
                    sub_100059224();
                  }
                  else {
                    swift_bridgeObjectRelease();
                  }
                  goto LABEL_133;
                }
              }
              sub_100055DC4();
              *(void *)uint64_t v217 = v167;
              *(unsigned char *)(v217 + 8) = 1;
              goto LABEL_132;
            }
LABEL_141:
            sub_100055DC4();
            *(void *)uint64_t v213 = v167;
            *(unsigned char *)(v213 + 8) = 0;
            goto LABEL_132;
          }
        }
      }
      sub_100055DC4();
      *(void *)unint64_t v161 = v167;
      goto LABEL_132;
    }
LABEL_46:
    sub_100057324();
    swift_bridgeObjectRelease();
    sub_100052038(&qword_100082420, (void (*)(uint64_t))&type metadata accessor for ToolFlag);
    sub_100059044();
    *(void *)(v18 + 400) = sub_100046794(0);
    uint64_t v93 = swift_allocBox();
    sub_100058D04(v93, v94);
    *(void *)(v18 + 408) = sub_100046794(0);
    sub_100052038(&qword_100082428, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
    sub_10000772C(&qword_100082430);
    sub_100052D74();
    sub_100057524();
    uint64_t v417 = sub_10006E3B0();
    uint64_t v405 = inited;
    if (sub_10006A5EC(v417)) {
      break;
    }
LABEL_73:
    sub_1000571E4();
    sub_10006E280();
    uint64_t v116 = sub_100055E70();
    sub_1000584A0(v116);
    uint64_t v117 = sub_100055204();
    *(void *)(v117 + 16) = sub_100052DC8;
    *(void *)(v117 + 24) = inited;
    id v118 = v87;
    swift_retain_n();
    id v119 = v118;
    v429 = (void *)sub_10006E350();
    LODWORD(v413) = sub_10006F300();
    uint64_t v120 = (uint64_t *)sub_100055258();
    *((unsigned char *)v120 + 16) = 32;
    id v121 = (void *)sub_100055258();
    sub_100058410((uint64_t)v121);
    uint64_t v18 = sub_100055204();
    *(void *)(v18 + 16) = sub_10005461C;
    *(void *)(v18 + 24) = v41;
    uint64_t v122 = sub_100055204();
    *(void *)(v122 + 16) = sub_100052DE0;
    *(void *)(v122 + 24) = v18;
    uint64_t v123 = sub_100055258();
    *(unsigned char *)(v123 + 16) = 32;
    uint64_t v21 = sub_100055258();
    *(unsigned char *)(v21 + 16) = (_BYTE)v118;
    uint64_t v124 = sub_100055204();
    *(void *)(v124 + 16) = sub_100052DD0;
    *(void *)(v124 + 24) = v117;
    uint64_t v125 = (void (**)(void))sub_100055204();
    v125[2] = (void (*)(void))sub_1000545C8;
    v125[3] = (void (*)(void))v124;
    sub_10000772C((uint64_t *)&unk_100082390);
    unint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000716D0;
    *(void *)(inited + 32) = sub_100054620;
    *(void *)(inited + 40) = v120;
    *(void *)(inited + 48) = sub_100054620;
    *(void *)(inited + 56) = v121;
    *(void *)(inited + 64) = sub_1000545D4;
    *(void *)(inited + 72) = v122;
    *(void *)(inited + 80) = sub_100054620;
    *(void *)(inited + 88) = v123;
    *(void *)(inited + 96) = sub_100054620;
    *(void *)(inited + 104) = v21;
    *(void *)(inited + 112) = sub_1000545D4;
    *(void *)(inited + 120) = v125;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v421 = v124;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v126 = (void *)v122;
    swift_retain();
    swift_retain();
    swift_retain();
    int v422 = v125;
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v127 = (uint64_t (*)(char, uint64_t, char, uint64_t))&selRef_parameterKey;
    if (sub_100056824((os_log_type_t)v413))
    {
      unint64_t inited = sub_100055B7C();
      unint64_t v128 = sub_10005703C();
      sub_100056C78(v128);
      *(unsigned char *)(inited + 3) = 8;
      swift_release();
      id v129 = sub_100059350();
      uint64_t v130 = sub_10006F050();
      unint64_t v132 = v131;

      uint64_t v133 = sub_100046AE8(v130, v132, v431);
      sub_1000585C0(v133);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();

      *(unsigned char *)(inited + 12) = v123;
      swift_release();
      *(unsigned char *)(inited + 13) = 8;
      swift_release();
      uint64_t v122 = inited + 14;
      sub_100055CE4();
      uint64_t v18 = v403;
      uint64_t v127 = v404;
      sub_1000114F0();
      v134();
      sub_100052038(&qword_100082448, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
      unint64_t v135 = (void *)sub_100058AC4();
      unint64_t v137 = v136;
      v21 += 8;
      sub_1000556D0();
      v138();
      uint64_t v139 = sub_100046AE8((uint64_t)v135, v137, v431);
      sub_100058584(v139);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_1000597B4();
      sub_100058AA0((void *)&_mh_execute_header, v140, v141, "%s: Visibility flags: %s");
      id v121 = v411;
      sub_100057D9C();
      sub_10001153C();
      sub_10001153C();

      sub_1000551DC();
      v142();
    }
    else
    {
      sub_1000578F4();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_1000597B4();

      sub_100011784();
      v226();
      uint64_t v125 = (void (**)(void))v123;
    }
    uint64_t v227 = v125[209];
    if (v227)
    {
      uint64_t v228 = sub_10006F180();
      sub_100058CD4(v228);
      v125[236] = (void (*)(void))sub_10006F170();
      sub_1000553EC();
      sub_10005533C();
LABEL_188:
      sub_100058F4C();
      sub_100055194();
      _swift_task_switch(v264, v265, v266);
      return;
    }
    [(id)sub_100055FEC() requiresUnlock];
    uint64_t v229 = sub_100056598();
    if (v231)
    {
      sub_10005708C();
      sub_100058B28();
      v232();
      uint64_t v18 = enum case for RuntimeDeviceState.unlocked(_:);
      sub_10006EB80();
      sub_1000551F4();
      sub_1000551E8();
      v233();
      uint64_t v234 = sub_100056004();
      v235(v234);
      uint64_t v127 = sub_1000674EC;
      uint64_t v227 = (void (*)(void))v21;
      sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
      sub_100055FCC();
      sub_1000469EC();
    }
    else
    {
      v230(v229, enum case for ToolAuthenticationPolicy.none(_:));
    }
    if (sub_10005665C((uint64_t)&OBJC_PROTOCOL___WFLinkActionProtocol))
    {
      sub_1000563C0();
      sub_100055330();
    }
    else
    {
      sub_100058024();
      self;
      sub_100056938();
      sub_100056058();
      sub_100058018();
    }
    v248();
    if ([(id)sub_100058DF8() isDiscontinued])
    {
      sub_100056B9C();
      sub_100042D34((char *)inited, (uint64_t)v121);
      id v250 = (void (*)(void))*((void *)v127 + 1);
      uint64_t v127 = (uint64_t (*)(char, uint64_t, char, uint64_t))((char *)v127 + 8);
      uint64_t v227 = v250;
      sub_100055234();
      v250();
      sub_100055234();
      v250();
      self;
      uint64_t v251 = swift_dynamicCastObjCClass();
      *(void *)(v430 + 1984) = v251;
      if (v251)
      {
        sub_1000576B4();
        uint64_t v252 = v227;
        *(void *)(v430 + 1992) = sub_10006F170();
        sub_1000553EC();
        sub_10005533C();
        goto LABEL_188;
      }
    }
    if ([(id)sub_100057FB8() isResidentCompatible])
    {
      sub_100057960();
      sub_100042D34((char *)v18, (uint64_t)v121);
      uint64_t v227 = (void (*)(void))*((void *)v127 + 1);
      sub_100055234();
      v227();
      ((void (*)(uint64_t, uint64_t))v227)(v18, v122);
    }
    sub_1000566F8();
    id v253 = [v227 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
    unint64_t v76 = sub_100057654();
    unint64_t v254 = sub_100059104(&qword_100082408);
    uint64_t v255 = sub_100058BF4(v254);

    sub_100016C7C(v255, (void (*)(void))&type metadata accessor for WFDeviceCapabilityResource);
    swift_bridgeObjectRelease();
    if (sub_10005817C())
    {
      sub_100057518();
      if (v168 != v92) {
        goto LABEL_310;
      }
      sub_100056A3C();
      sub_100057080();
      uint64_t v126 = (void *)enum case for RuntimeRequirement.deviceCapability(_:);
      do
      {
        if (v21) {
          sub_100056774();
        }
        else {
          sub_100058714();
        }
        sub_1000575E8();
        uint64_t v256 = sub_10005791C();
        v257(v256);
        unint64_t v76 = (unint64_t)sub_1000674EC;
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
        sub_100058094(*(void *)(inited + 400));
        sub_100059390();
      }
      while ((uint64_t *)v122 != v120);
    }
    char v258 = *(void **)(v430 + 576);
    swift_bridgeObjectRelease();
    sub_10006DF90();
    id v259 = [v258 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
    id v260 = (void *)sub_1000574DC();

    sub_100016C7C((uint64_t)v260, (void (*)(void))&type metadata accessor for WFFeatureFlagResource);
    sub_1000598CC();
    if (sub_10005817C())
    {
      sub_100056FD8();
      if (v168 != v92) {
        goto LABEL_311;
      }
      LODWORD(v421) = sub_100058E50();
      uint64_t v126 = 0;
      sub_1000590F0(enum case for RuntimeRequirement.featureFlag(_:));
      do
      {
        if (v421) {
          sub_100056758();
        }
        else {
          sub_10005868C();
        }
        sub_100058C18();
        sub_100059ABC();
        char v261 = sub_10005996C();
        *id v260 = inited;
        v422[1] = (void (*)(void))v21;
        v422[2] = (void (*)(void))v122;
        v422[3] = (void (*)(void))v120;
        *((unsigned char *)v422 + 32) = v261 & 1;
        sub_1000551E8();
        v262();
        uint64_t v122 = (uint64_t)sub_1000674EC;
        char v258 = v429;
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
        sub_1000560D4(*(void *)(v430 + 400));
        sub_1000469EC();

        sub_100057F6C();
      }
      while (!v156);
    }
    sub_100058070();
    if (v258)
    {
      sub_100057054();
      id v263 = v258;
      *(void *)(v430 + 2016) = sub_10006F170();
      sub_1000553EC();
      sub_10005533C();
      goto LABEL_188;
    }
    uint64_t v268 = sub_100046794(0);
    if (sub_10006A5EC(v268))
    {
      uint64_t v269 = (void *)sub_10004CDD8(v268);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v269 = &_swiftEmptySetSingleton;
    }
    v431[9] = (uint64_t)v269;
    id v270 = (void *)sub_100046794(0);
    if (sub_10006A5EC(v270))
    {
      uint64_t v271 = (void *)sub_10004CDD8((uint64_t)v270);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v271 = &_swiftEmptySetSingleton;
    }
    sub_1000569EC((uint64_t)v271);
    id v272 = [v270 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
    uint64_t v273 = sub_1000574DC();

    uint64_t v41 = v413;
    sub_100016C7C(v273, (void (*)(void))&type metadata accessor for WFDeviceIdiomResource);
    uint64_t v275 = v274;
    uint64_t v403 = v413;
    swift_bridgeObjectRelease();
    uint64_t v427 = (uint64_t)v275;
    uint64_t v424 = (void (*)(void))sub_100066FFC(v275);
    if (!v424)
    {
LABEL_214:
      sub_100058DE0();
      id v301 = [v275 disabledOnPlatforms];
      sub_1000574C4();
      uint64_t v302 = sub_1000574AC();

      if (sub_10006A5EC(v302))
      {
        sub_100057C60();
        if (v168 != v92) {
          goto LABEL_312;
        }
        sub_100056A58();
        sub_100057170();
        do
        {
          if (inited) {
            sub_100057E14();
          }
          else {
            sub_10005875C();
          }
          sub_100057400();
          sub_100056FA0();

          sub_100055228();
          v303();
        }
        while (v18 != v21);
      }
      swift_bridgeObjectRelease();
      sub_100057DD8();
      if (v304) {
        uint64_t v305 = swift_bridgeObjectRetain();
      }
      else {
        uint64_t v305 = sub_10006EA90();
      }
      uint64_t v306 = sub_100059B1C(v305);
      sub_100047F78(v306);
      swift_bridgeObjectRelease();
      sub_1000587EC();
      uint64_t v307 = sub_100043434();
      sub_100056F84();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v425 = sub_10006A5EC(v307);
      if (v425)
      {
        sub_100056FD8();
        if (v168 == v92)
        {
          uint64_t v308 = sub_100056AD0();
          sub_100056B24(v308);
          sub_100057DC0(enum case for RuntimeRequirement.platform(_:));
          while ((v422 & 1) != 0)
          {
            sub_100055270();
            v309();
            unint64_t inited = *(void *)(v18 + 1032);
            uint64_t v21 = *(void *)(v18 + 888);
            uint64_t v18 = *(void *)(v430 + 880);
            uint64_t v120 = (uint64_t *)((char *)v120 + 1);
            sub_10005524C();
            v310();
            uint64_t v311 = sub_10006ED70();
            sub_1000558F0(v311);
            sub_100055270();
            v312();
            sub_1000551E8();
            v313();
            sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
            sub_100059C2C();
            sub_1000576CC();
            sub_1000551DC();
            v314();
            if ((uint64_t *)v425 == v120) {
              goto LABEL_231;
            }
          }
          sub_10005529C((unint64_t)v120, v307, (void (*)(void))&type metadata accessor for RuntimePlatform);
          goto LABEL_307;
        }
        goto LABEL_313;
      }
LABEL_231:
      swift_bridgeObjectRelease();
      uint64_t v315 = sub_10006F480();
      *(void *)(v18 + 456) = v315;
      uint64_t v316 = sub_100046794(0);
      uint64_t v317 = sub_100059BD4(v316, (uint64_t)&OBJC_PROTOCOL___WFLinkActionProtocol);
      if (v317)
      {
        v318 = (void *)v317;
        id v319 = *(id *)(v18 + 576);
        id v320 = [v318 backingActionIdentifiers];
        uint64_t v321 = sub_10006F0F0();

        uint64_t v41 = (uint64_t)v408;
        unint64_t inited = (unint64_t)sub_100016FAC(v321);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v322 = sub_100026598(inited);

        uint64_t v18 = v430;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)(v430 + 464) = v322;
      }
      else
      {
        uint64_t v41 = (uint64_t)v408;
      }
      if (!sub_100059BB4())
      {
        uint64_t v323 = sub_10006A5EC(v315);
        if (v323)
        {
          v324 = (uint64_t *)v323;
          if (v323 < 1) {
            goto LABEL_314;
          }
          sub_100056E88();
          sub_1000582D0();
          sub_100055F4C(enum case for SystemToolProtocol.assistantSchema(_:));
          uint64_t v120 = 0;
          sub_100057B3C((uint64_t)"SystemToolProtocol");
          do
          {
            if (inited)
            {
              sub_100055270();
              v325();
            }
            else
            {
              uint64_t v326 = sub_100056890((unint64_t)v120, v315, (void (*)(void))&type metadata accessor for SystemToolProtocol);
              if (v422 != (void (**)(void))8) {
                goto LABEL_309;
              }
              *(void *)(v18 + 512) = v326;
              sub_100055270();
              v327();
              swift_unknownObjectRelease();
            }
            uint64_t v328 = sub_10005606C();
            v329(v328);
            uint64_t v330 = sub_100056138();
            v331(v330);
            sub_100059AD4();
            if (v156)
            {
              uint64_t v332 = sub_100055288();
              v333(v332);
              sub_10005524C();
              v334();
              uint64_t v335 = sub_10006EDA0();
              sub_10006ED90();
              sub_10005905C();
              sub_100059880();
              if (*(void *)(v335 + 16) && (sub_100068818(), (v336 & 1) != 0))
              {
                sub_1000114F0();
                v337();
                uint64_t v338 = 0;
              }
              else
              {
                uint64_t v338 = 1;
              }
              uint64_t v340 = *(void *)(v18 + 784);
              uint64_t v341 = *(void *)(v18 + 776);
              sub_100056DC8(v341, v338);
              sub_100007800(v341, 1, v340);
              sub_1000599E4();
              if (v156)
              {
                uint64_t v342 = *(void *)(v18 + 776);
                sub_1000551DC();
                v343();
                sub_100053404(v342, &qword_1000823C0);
              }
              else
              {
                sub_10005524C();
                v344();
                sub_10006E380();
                sub_10001A7C0();
                sub_1000551DC();
                v345();
                uint64_t v346 = sub_100057E2C();
                v347(v346);
              }
              uint64_t v315 = v414;
              v324 = (uint64_t *)v413;
              LOBYTE(inited) = 0;
            }
            else
            {
              sub_1000551DC();
              v339();
            }
            uint64_t v120 = (uint64_t *)((char *)v120 + 1);
          }
          while (v324 != v120);
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v348 = v18 + 456;
      if (sub_10006A5EC(*v408))
      {
        sub_100055330();
        v349();
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006745C);
        sub_100055C28(*(void *)(v18 + 456));
        sub_1000469EC();
      }
      uint64_t v350 = *(void **)(v18 + 1672);
      if (v350)
      {
        sub_10006F180();
        id v351 = v350;
        *(void *)(v18 + 2040) = sub_10006F170();
        sub_10006F150();
        sub_10005533C();
        goto LABEL_188;
      }
      uint64_t v352 = (uint64_t *)(v18 + 480);
      uint64_t v353 = (void *)(v18 + 488);
      sub_1000075E8(*(void **)(v18 + 576), (SEL *)&selRef_iconName);
      uint64_t v424 = (void (*)(void))(v18 + 480);
      if (v354)
      {
        sub_1000599A4();
        swift_bridgeObjectRelease();
        *uint64_t v352 = v41;
        *(void *)(v18 + 488) = v18;
        uint64_t v41 = enum case for ToolIcon.workflowAsset(_:);
        uint64_t v355 = sub_10006E510();
        sub_1000551F4();
        sub_1000551E8();
        v356();
        sub_100007770(v18 + 480, 0, 1, v355);
        sub_100059804();
        goto LABEL_297;
      }
      sub_1000075E8(*(void **)(v18 + 576), (SEL *)&selRef_iconSymbolName);
      sub_100059804();
      if (!v358) {
        goto LABEL_273;
      }
      uint64_t v359 = v357;
      uint64_t v41 = v358;
      sub_1000075E8(*(void **)(v18 + 576), (SEL *)&selRef_iconBackgroundColorName);
      if (!v360) {
        goto LABEL_272;
      }
      uint64_t v361 = [(id)sub_100057BA8() definition];
      if (v361)
      {
        uint64_t v353 = v361;
        id v362 = [v361 objectForKey:WFActionIconSymbolColorNameKey];

        if (v362)
        {
          sub_10006F4F0();
          uint64_t v363 = swift_unknownObjectRelease();
        }
        else
        {
          sub_100059C6C();
        }
        sub_10005942C(v363, v364, &qword_100082450);
        uint64_t v18 = v430;
        if (*(void *)(v430 + 328))
        {
          if (sub_1000560FC())
          {
            sub_10006E400();
            goto LABEL_281;
          }
LABEL_280:
          sub_100055CCC(*(void *)(v18 + 720), v369, v370, *(void *)(v18 + 632));
LABEL_281:
          sub_1000587BC();
          swift_bridgeObjectRelease();
          BOOL v371 = v120 == v352 && v21 == 0xE400000000000000;
          if (v371 || (sub_100055554() & 1) != 0)
          {
            uint64_t v372 = *(void *)(v18 + 712);
            uint64_t v373 = *(void *)(v18 + 632);
            sub_1000532F0(*(void *)(v18 + 720), v372, &qword_1000823A8);
            sub_100055EE0(v372, 1, v373);
            if (!v156)
            {
              uint64_t v378 = sub_100056BCC();
              sub_100053404(v378, &qword_1000823A8);
              swift_bridgeObjectRelease();
              v379 = (void (*)(void))v353[4];
              sub_100056D38();
              v379();
              sub_100056D38();
              v379();
LABEL_296:
              v383 = *(uint64_t **)(v348 + 768);
              sub_100055330();
              v384();
              sub_10000772C(&qword_100082460);
              uint64_t *v383 = v421;
              v383[1] = v359;
              sub_1000568D4();
              v385();
              uint64_t v41 = enum case for ToolIcon.symbol(_:);
              sub_10006E510();
              sub_1000551F4();
              sub_1000551E8();
              v386();
              sub_100059D24();
              goto LABEL_297;
            }
            sub_100053404(*(void *)(v18 + 712), &qword_1000823A8);
          }
          uint64_t v374 = *(void *)(v18 + 704);
          sub_100057238();
          uint64_t v375 = sub_100056EE8();
          if (v156)
          {
            sub_1000551E8();
            v377();
            sub_100053404(v18, &qword_1000823A8);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t))(v376 + 32))(v375, v18);
          }
          uint64_t v380 = sub_1000590DC();
          sub_100053348(v380, v374, &qword_1000823A8);
          sub_100056F24();
          if (v156)
          {
            sub_100055330();
            v381();
            sub_100053404(v18, &qword_1000823A8);
            sub_10005748C();
          }
          else
          {
            sub_100058990();
            ((void (*)(void))v21)();
          }
          sub_100057F18();
          sub_10000772C(&qword_100082458);
          sub_100056840();
          ((void (*)(void))v21)();
          uint64_t v382 = sub_100056418();
          ((void (*)(uint64_t))v21)(v382);
          goto LABEL_296;
        }
      }
      else
      {
        sub_100058F10();
      }
      sub_100053404(v359, &qword_100082450);
      goto LABEL_280;
    }
    uint64_t v275 = *(void **)(v430 + 992);
    uint64_t v276 = *(void *)(v430 + 928);
    LODWORD(v422) = sub_100068F0C(v427);
    sub_1000599D8();
    LODWORD(v421) = enum case for WFDeviceIdiomResource.Requirement.equalTo(_:);
    sub_100057EF0(enum case for WFDeviceIdiomResource.Requirement.notEqualTo(_:));
    char v415 = v276 + 104;
    LODWORD(v408) = enum case for RuntimePlatform.watch(_:);
    sub_100057ED8();
    uint64_t v75 = (void **)(v276 + 8);
    while (1)
    {
      if (v422) {
        id v277 = *(id *)(v427 + 8 * v21 + 32);
      }
      else {
        sub_10006F620();
      }
      sub_1000596D8();
      if (v92) {
        break;
      }
      sub_100057E60();
      uint64_t v278 = sub_100058110();
      if (v279(v278) == v421)
      {
        uint64_t v275 = *(void **)(v41 + 1000);
        uint64_t v280 = sub_100055288();
        v281(v280);
        sub_100055E64();
        switch(v282)
        {
          case 0:
          case 5:
            sub_1000576E4();
            goto LABEL_210;
          case 1:
          case 2:
          case 3:
          case 4:
          case 6:
            uint64_t v290 = *(void *)(v430 + 976);
            unint64_t v76 = *(void *)(v430 + 968);
            uint64_t v120 = *(uint64_t **)(v430 + 960);
            uint64_t v41 = *(void *)(v430 + 920);
            uint64_t v291 = *(void *)(v430 + 912);
            sub_1000551E8();
            v292();
            sub_100007770(v291, 0, 1, v41);
            sub_10005524C();
            v293();
            sub_100055270();
            v294();
            sub_10004D554(v76, (char *)v120);

            uint64_t v275 = *v75;
            sub_10005527C();
            ((void (*)(void))v275)();
            ((void (*)(uint64_t, uint64_t))v275)(v290, v41);
            goto LABEL_213;
          default:
            goto LABEL_270;
        }
      }
      sub_100059074();
      if (v156)
      {
        sub_100055574();
        v287();
        sub_100055E64();
        switch(v288)
        {
          case 0:
          case 5:
            sub_1000576F4();
LABEL_210:
            sub_100056EB8(v283, v284, v285, v286);
            sub_100053404((uint64_t)v275, &qword_1000823D0);
            goto LABEL_213;
          case 1:
          case 2:
          case 3:
          case 4:
          case 6:
            uint64_t v41 = *(void *)(v430 + 960);
            unint64_t v76 = *(void *)(v430 + 952);
            uint64_t v120 = *(uint64_t **)(v430 + 920);
            uint64_t v295 = *(void *)(v430 + 904);
            sub_1000551E8();
            v296();
            sub_100007770(v295, 0, 1, (uint64_t)v120);
            sub_10005524C();
            v297();
            sub_100055270();
            v298();
            sub_100056FA0();

            uint64_t v275 = *v75;
            sub_10005527C();
            ((void (*)(void))v275)();
            uint64_t v299 = sub_100059B5C();
            ((void (*)(uint64_t, uint64_t))v275)(v299, v300);
            goto LABEL_213;
          default:
            goto LABEL_270;
        }
      }

      sub_1000551DC();
      v289();
LABEL_213:
      ++v21;
      if ((void (*)(void))v18 == v424) {
        goto LABEL_214;
      }
    }
    __break(1u);
LABEL_301:
    sub_100059AFC();
    uint64_t v18 = sub_10006F6F0();
    swift_bridgeObjectRelease();
  }
  uint64_t v95 = sub_100056CB4();
  sub_10005626C(v95);
  sub_100058828((uint64_t)"ToolVisibilityFlag");
  while (1)
  {
    if (v415)
    {
      uint64_t v96 = sub_10005609C();
      ((void (*)(uint64_t))v87)(v96);
      goto LABEL_52;
    }
    uint64_t v97 = sub_100058628(v41, v417, (void (*)(void))&type metadata accessor for ToolVisibilityFlag);
    if (v411 != (void *)8) {
      break;
    }
    *(void *)(v18 + 416) = v97;
    id v87 = *(void **)v21;
    sub_1000560F0();
    ((void (*)(void))v87)();
    swift_unknownObjectRelease();
LABEL_52:
    if (__OFADD__(v41, 1))
    {
      __break(1u);
      goto LABEL_266;
    }
    char v420 = *v422;
    sub_100055548();
    v98();
    uint64_t v424 = (void (*)(void))v87;
    sub_1000560F0();
    ((void (*)(void))v87)();
    sub_10006E3E0();
    sub_100052038(&qword_100082440, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
    char v99 = sub_100058898();
    uint64_t v21 = (uint64_t)*v75;
    sub_100055228();
    ((void (*)(void))v21)();
    if (v99)
    {
      id v87 = *(void **)(v18 + 576);
      sub_10005527C();
      ((void (*)(void))v21)();
      if ([v87 visibleForUse:0])
      {
        sub_100057AF0();
        sub_1000114F0();
        v100();
        sub_10005663C();
        uint64_t v101 = sub_100056214();
        sub_1000559E8(v101);
        if (v102)
        {
          id v87 = *(void **)(v18 + 1208);
          uint64_t v403 = *(void *)(v18 + 1200);
          sub_100055228();
          ((void (*)(void))v21)();
          sub_100055580();
          v424();
          sub_100055580();
          v424();
          sub_10005661C();
          unint64_t inited = (unint64_t)v420;
        }
        else
        {
          uint64_t v103 = sub_100056084();
          ((void (*)(uint64_t))inited)(v103);
        }
        char v114 = sub_100055364();
        ((void (*)(unsigned char *))inited)(v114);
        sub_100055228();
        ((void (*)(void))v21)();
        uint64_t v113 = v404;
LABEL_69:
        unint64_t inited = v405;
        goto LABEL_70;
      }
    }
    else
    {
      sub_10006E3D0();
      char v104 = sub_1000561F0();
      sub_100055228();
      ((void (*)(void))v21)();
      if (v104)
      {
        id v87 = *(void **)(v18 + 576);
        sub_10005527C();
        ((void (*)(void))v21)();
        if ([v87 visibleForUse:1])
        {
          sub_100057AC8();
          sub_1000114F0();
          v105();
          sub_10005663C();
          uint64_t v106 = sub_100056214();
          sub_1000559E8(v106);
          if (v107)
          {
            id v87 = *(void **)(v18 + 1208);
            uint64_t v403 = *(void *)(v18 + 1184);
            sub_100055228();
            ((void (*)(void))v21)();
            sub_100055580();
            v424();
            sub_100055580();
            v424();
            sub_10005661C();
            unint64_t inited = (unint64_t)v420;
          }
          else
          {
            uint64_t v108 = sub_100056084();
            ((void (*)(uint64_t))inited)(v108);
          }
          unint64_t v115 = sub_100055364();
          ((void (*)(unsigned char *))inited)(v115);
          sub_100055228();
          ((void (*)(void))v21)();
          uint64_t v113 = v401;
          goto LABEL_69;
        }
      }
      else
      {
        sub_100059484();
        char v109 = sub_1000561F0();
        sub_100055228();
        ((void (*)(void))v21)();
        if ((v109 & 1) == 0)
        {

          sub_10004651C(27);
          swift_bridgeObjectRelease();
          sub_100056748();
          sub_100056790(v249);
          sub_100052038(&qword_100082448, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
          v432._countAndFlagsBits = sub_10006F750();
          sub_100058D34(v432);
          swift_bridgeObjectRelease();
          sub_10006F080();
          sub_100055C44();
          goto LABEL_164;
        }
        id v87 = *(void **)(v18 + 1168);
        sub_100055228();
        ((void (*)(void))v21)();
        sub_1000114F0();
        v110();
        sub_10006E3E0();
        char v111 = sub_10006F500();
        sub_100055228();
        ((void (*)(void))v21)();
        sub_100055228();
        ((void (*)(void))v21)();
        if ((v111 & 1) != 0 && [*(id *)(v18 + 576) isApprovedForPublicShortcutsDrawer])
        {
          char v112 = *(char **)(v18 + 1208);
          id v87 = *(void **)(v18 + 1168);
          sub_100059484();
          sub_100042A3C(v112, (uint64_t)v87);
          sub_100055228();
          ((void (*)(void))v21)();
          uint64_t v113 = v400;
LABEL_70:
          ((void (*)(void, void))v21)(*(void *)v113, *(void *)(v18 + 1144));
        }
      }
    }
    sub_10005527C();
    ((void (*)(void))v21)();
    sub_100059294();
    if (v156) {
      goto LABEL_73;
    }
  }
  __break(1u);
LABEL_272:
  swift_bridgeObjectRelease();
LABEL_273:
  swift_bridgeObjectRelease();
  uint64_t v365 = *(void *)(v18 + 768);
  swift_bridgeObjectRelease();
  uint64_t v366 = sub_10006E510();
  sub_100055CCC(v365, v367, v368, v366);
LABEL_297:
  id v387 = sub_1000555A4();
  sub_10006F050();

  uint64_t v388 = swift_task_alloc();
  sub_1000556DC(v388);
  sub_10005746C();
  sub_1000557F0();
  if (v41)
  {
    uint64_t v389 = *(void *)(v430 + 768);
    sub_10005521C();
    v390();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_100053404(v389, &qword_1000823B8);
    sub_100011784();
    v391();
    sub_1000556D0();
    v392();
    swift_bridgeObjectRelease();
    sub_1000588E0();
    swift_bridgeObjectRelease();
    sub_100055234();
    v393();
    swift_bridgeObjectRelease();
    sub_100055240();
    v394();
    swift_bridgeObjectRelease();
    sub_100054E04();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100055AFC();
  }
  else
  {
    sub_100054838();
    v395();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_100053404(0, &qword_1000823B8);
    sub_100055234();
    v396();
    sub_100055240();
    v397();
    swift_bridgeObjectRelease();
    sub_100058674();
    swift_bridgeObjectRelease();
    sub_100055228();
    v398();
    swift_bridgeObjectRelease();
    sub_1000553C4();
    v399();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001151C();
  }
  sub_100055194();
  v47(v46, v47, v48, v49, v50, v51, v52, v53, a9, a10, a11, a12);
}

uint64_t sub_10002F798()
{
  sub_1000114D4();
  sub_100011474();
  uint64_t v3 = v2;
  sub_1000114FC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1000114E0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 1832) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void **)(v3 + 1816);
    swift_bridgeObjectRelease();

    sub_1000115E8();
    return _swift_task_switch(v8, v9, v10);
  }
  else
  {

    swift_task_alloc();
    sub_100058568();
    *(void *)(v3 + 1840) = v11;
    *uint64_t v11 = v12;
    v11[1] = sub_10002F8F0;
    uint64_t v13 = *(void *)(v3 + 1528);
    uint64_t v14 = *(void *)(v3 + 576);
    return WFParameter.toolkitTypeInstance(for:)(v13, v14);
  }
}

uint64_t sub_10002F8F0()
{
  sub_1000114D4();
  sub_100011474();
  uint64_t v3 = v2;
  sub_1000114FC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1000114E0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 1848) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  sub_1000115E8();
  return _swift_task_switch(v7, v8, v9);
}

void sub_10002F9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1000553D0();
  sub_1000562A0();
  uint64_t v13 = *((void *)v12 + 231);
  sub_10006F210();
  v507 = v12;
  if (v13)
  {
    sub_1000551DC();
    v14();
    sub_100055234();
    v15();
    swift_bridgeObjectRelease();
    uint64_t v16 = (void *)*((void *)v12 + 225);
    sub_10006E280();
    uint64_t v17 = sub_100055E70();
    *(void *)(v17 + 16) = v16;
    uint64_t v18 = v17;
    uint64_t v505 = sub_100055E70();
    *(void *)(v505 + 16) = v13;
    id v19 = v16;
    swift_errorRetain();
    id v20 = v19;
    swift_errorRetain();
    v503 = sub_10006E350();
    os_log_type_t v472 = sub_10006F310();
    uint64_t v21 = sub_100055258();
    *(unsigned char *)(v21 + 16) = 64;
    uint64_t v22 = v21;
    uint64_t v467 = sub_100055258();
    *(unsigned char *)(v467 + 16) = 8;
    uint64_t v23 = sub_100055204();
    *(void *)(v23 + 16) = sub_100052CC8;
    *(void *)(v23 + 24) = v18;
    uint64_t v24 = sub_100055204();
    *(void *)(v24 + 16) = sub_1000545CC;
    *(void *)(v24 + 24) = v23;
    uint64_t v25 = sub_100055258();
    *(unsigned char *)(v25 + 16) = 64;
    uint64_t v26 = sub_100055258();
    *(unsigned char *)(v26 + 16) = 8;
    uint64_t v27 = sub_100055204();
    *(void *)(v27 + 16) = sub_100052D00;
    *(void *)(v27 + 24) = v505;
    uint64_t v28 = sub_100055204();
    *(void *)(v28 + 16) = sub_100052D44;
    *(void *)(v28 + 24) = v27;
    uint64_t v29 = sub_100055204();
    *(void *)(v29 + 16) = sub_100052D4C;
    *(void *)(v29 + 24) = v28;
    sub_10000772C((uint64_t *)&unk_100082390);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000716D0;
    *(void *)(inited + 32) = sub_100054620;
    *(void *)(inited + 40) = v22;
    *(void *)(inited + 48) = sub_100054620;
    *(void *)(inited + 56) = v467;
    *(void *)(inited + 64) = sub_100052D34;
    *(void *)(inited + 72) = v24;
    *(void *)(inited + 80) = sub_100054620;
    *(void *)(inited + 88) = v25;
    *(void *)(inited + 96) = sub_100054620;
    *(void *)(inited + 104) = v26;
    *(void *)(inited + 112) = sub_1000545D0;
    *(void *)(inited + 120) = v29;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    BOOL v31 = os_log_type_enabled(v503, v472);
    id v32 = (void *)*((void *)v507 + 225);
    if (v31)
    {
      sub_10000E6E0();
      id v33 = (void *)sub_1000573E4();
      sub_1000571B0();
      swift_release();
      *(unsigned char *)(inited + 3) = 8;
      swift_release();
      *((void *)v507 + 69) = v32;
      id v34 = v32;
      sub_10006F4D0();
      void *v33 = v32;
      swift_release();
      swift_release();
      swift_release();

      *(unsigned char *)(inited + 12) = 64;
      swift_release();
      *(unsigned char *)(inited + 13) = 8;
      swift_release();
      swift_errorRetain();
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      *((void *)v507 + 70) = v35;
      uint64_t v36 = v507;
      sub_10006F4D0();
      v33[1] = v35;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v503, v472, "Failed to index action parameter: %@ due to %@", (uint8_t *)inited, 0x16u);
      sub_10000772C(&qword_100082350);
      swift_arrayDestroy();
      sub_10001153C();
      sub_10001153C();

      uint64_t v37 = *((void *)v507 + 225);
    }
    else
    {

      swift_errorRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v36 = v507;
      uint64_t v37 = v503;
    }
    swift_errorRelease();

    sub_100011784();
    v50();
  }
  else
  {
    uint64_t v38 = *((void *)v12 + 209);
    id v39 = *((id *)v12 + 225);
    unint64_t v40 = sub_10005983C();
    uint64_t v42 = sub_10001A3BC(v40, v41);
    uint64_t v43 = sub_100046794(0);
    uint64_t v44 = v43;
    v494 = v42;
    if (v38)
    {
      NSString v45 = [*((id *)v12 + 209) identifier];
      if (!v45)
      {
        sub_10006F050();
        NSString v45 = sub_10006F020();
        swift_bridgeObjectRelease();
      }
      id v46 = (id)WFLinkActionIdentifierFromShortcutsActionIdentifier();

      if (v46)
      {
        uint64_t v47 = (void *)*((void *)v12 + 225);
        swift_bridgeObjectRelease();
        id v48 = [v46 actionIdentifier];
        sub_10006F050();

        id v49 = [v47 key];
        sub_10006F050();

        uint64_t v459 = sub_10006EEC0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v459 = v44;
      }
    }
    else
    {
      uint64_t v459 = v43;
    }
    uint64_t v473 = *((void *)v12 + 224);
    v486 = (void *)*((void *)v12 + 225);
    v503 = *((void *)v12 + 191);
    uint64_t v51 = *((void *)v12 + 190);
    uint64_t v52 = *((void *)v12 + 189);
    uint64_t v53 = (uint64_t *)*((void *)v12 + 168);
    uint64_t v54 = (int *)*((void *)v12 + 166);
    id v55 = [v486 key];
    uint64_t v56 = sub_10006F050();
    uint64_t v58 = v57;

    uint64_t v59 = *((void *)v507 + 55);
    sub_100058FE4();
    sub_1000114F0();
    v60();
    (*(void (**)(char *, NSObject *, uint64_t))(v51 + 16))((char *)v53 + v54[8], v503, v52);
    sub_1000114F0();
    v61();
    *uint64_t v53 = v56;
    v53[1] = v58;
    v53[2] = v473;
    v53[3] = v59;
    *(uint64_t *)((char *)v53 + v54[10]) = v459;
    *(uint64_t *)((char *)v53 + v54[11]) = (uint64_t)v494;
    sub_1000531D0();
    sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100067534);
    uint64_t v62 = *(void *)(*((void *)v507 + 61) + 16);
    uint64_t v63 = sub_1000593B4();
    sub_1000468F4(v63, v64);
    sub_10004693C(v62);

    sub_100052E7C((uint64_t)v53, (void (*)(void))_s15ActionParameterVMa);
    sub_1000556D0();
    v65();
    uint64_t v36 = v507;
    sub_1000551DC();
    v66();
    sub_10005527C();
    v67();
  }
  uint64_t v68 = *((void *)v36 + 226);
  if (v68 != *((void *)v36 + 214))
  {
    uint64_t v69 = (unsigned __int8 *)(v36 + 2081);
    while (1)
    {
      *((void *)v36 + 224) = v68;
      int v70 = *v69;
      uint64_t v71 = sub_100068F18(v68, *v69, *((void *)v36 + 213));
      if (v70 == 1) {
        uint64_t v72 = (uint64_t)sub_100056DF8(v71, *((void *)v36 + 213));
      }
      else {
        uint64_t v72 = sub_10006F620();
      }
      uint64_t v73 = (void *)v72;
      *((void *)v36 + 225) = v72;
      *((void *)v36 + 226) = v68 + 1;
      if (__OFADD__(v68, 1))
      {
LABEL_240:
        __break(1u);
LABEL_241:
        sub_100055348();
        sub_10005738C();
LABEL_137:
        sub_1000559C8();
        sub_100055194();
        return;
      }
      self;
      if (!swift_dynamicCastObjCClass()) {
        break;
      }

      uint64_t v68 = *((void *)v36 + 226);
      if (v68 == *((void *)v36 + 214)) {
        goto LABEL_23;
      }
    }
    *((void *)v36 + 55) = sub_100046794(0);
    v457 = v73;
    id v133 = [v73 resourceManager];
    sub_10001028C(0, &qword_1000823F8);
    id v134 = [v133 resourceObjectsOfClass:swift_getObjCClassFromMetadata()];

    if (!v134) {
      goto LABEL_285;
    }
    sub_10001028C(0, &qword_100082400);
    sub_1000525E0(&qword_100082408, &qword_100082400);
    uint64_t v135 = sub_100058BD8();

    sub_100016668(v135);
    uint64_t v137 = v136;
    swift_bridgeObjectRelease();
    uint64_t v454 = sub_100066FFC(v137);
    if (!v454)
    {
LABEL_131:
      swift_bridgeObjectRelease();
      unint64_t v233 = swift_bridgeObjectRetain();
      id v234 = sub_100017390(v233);
      swift_bridgeObjectRelease();
      if (!v234) {
        id v234 = [*((id *)v36 + 210) defaultContext];
      }
      *((void *)v36 + 227) = v234;
      id v235 = (void *)swift_task_alloc();
      *((void *)v36 + 228) = v235;
      *id v235 = v36;
      v235[1] = sub_10002F798;
      sub_100055194();
      WFParameter.toolkitTypeDefinition(for:localizationContext:)(v236, v237, v238, v239, v240, v241, v242, v243, a9, a10, a11, a12);
      return;
    }
    char typea = sub_10006A5F4(v137);
    uint64_t v138 = 0;
    uint64_t v452 = v137 + 32;
    uint64_t v453 = v137;
    while (1)
    {
      sub_100068F18(v138, typea & 1, v137);
      if (typea) {
        id v139 = *(id *)(v452 + 8 * v138);
      }
      else {
        id v139 = (id)sub_10006F620();
      }
      BOOL v140 = __OFADD__(v138, 1);
      uint64_t v141 = v138 + 1;
      if (v140) {
        goto LABEL_277;
      }
      uint64_t v460 = v141;
      uint64_t v142 = *((void *)v36 + 212);
      v475 = v139;
      id v143 = [v139 parameterKey];
      sub_10006F050();
      uint64_t v145 = v144;

      if (!*(void *)(v142 + 16)) {
        break;
      }
      uint64_t v146 = *((void *)v36 + 212);
      sub_10006F820();
      sub_100058194();
      Swift::Int v147 = sub_10006F840();
      if (((*(void *)(v146
                       + (((v147 & (unint64_t)~(-1 << *(unsigned char *)(v146 + 32))) >> 3) & 0xFFFFFFFFFFFFFF8)
                       + 56) >> (v147 & ~(-1 << *(unsigned char *)(v146 + 32)))) & 1) == 0)
        break;
      sub_100056408();
      BOOL v149 = v149 && v148 == v145;
      if (!v149 && (sub_100055DE0() & 1) == 0)
      {
        do
        {
          sub_10005601C();
          if ((v150 & 1) == 0) {
            goto LABEL_76;
          }
          sub_100056408();
          BOOL v152 = v149 && v151 == v145;
        }
        while (!v152 && (sub_100055DE0() & 1) == 0);
        uint64_t v137 = v453;
        uint64_t v138 = v460;
        swift_bridgeObjectRelease();

        goto LABEL_111;
      }
      swift_bridgeObjectRelease();

      uint64_t v137 = v453;
LABEL_110:
      uint64_t v138 = v460;
LABEL_111:
      if (v138 == v454) {
        goto LABEL_131;
      }
    }
LABEL_76:
    uint64_t v153 = *((void *)v36 + 177);
    swift_bridgeObjectRelease();
    id v154 = [v475 comparedValues];
    uint64_t v155 = sub_10006F0F0();

    BOOL v156 = sub_1000169B4(v155, v457);
    swift_bridgeObjectRelease();
    uint64_t v157 = sub_100059F54((uint64_t)v156);
    uint64_t v158 = sub_100052038(&qword_100082410, (void (*)(uint64_t))&type metadata accessor for TypedValue);
    uint64_t v159 = sub_10005759C(v158);
    if (sub_10006A5EC(v156))
    {
      sub_100058AFC();
      if (v160 != v140) {
        goto LABEL_279;
      }
      char v482 = sub_100068F08(v156);
      unint64_t v162 = 0;
      uint64_t v478 = v153;
      do
      {
        unint64_t v504 = v162;
        if (v482)
        {
          sub_1000114F0();
          v163();
        }
        else
        {
          uint64_t v164 = *((void *)v36 + 179);
          uint64_t v165 = sub_100055504(v162, v161, (void (*)(void))&type metadata accessor for TypedValue);
          if (v164 != 8) {
            goto LABEL_275;
          }
          *((void *)v36 + 53) = v165;
          sub_1000114F0();
          v166();
          swift_unknownObjectRelease();
        }
        sub_100055548();
        v167();
        swift_bridgeObjectRetain();
        sub_10005959C();
        unint64_t v168 = sub_10006EFF0() & ~(-1 << *(unsigned char *)(v159 + 32));
        if ((*(void *)(v159 + 56 + ((v168 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v168))
        {
          while (1)
          {
            uint64_t v169 = *((void *)v507 + 178);
            uint64_t v157 = *((void *)v507 + 177);
            uint64_t v170 = v159;
            sub_1000114F0();
            v171();
            sub_100052038(&qword_100082418, (void (*)(uint64_t))&type metadata accessor for TypedValue);
            char v172 = sub_100058F5C();
            uint64_t v174 = *(void (**)(void))(v169 + 8);
            uint64_t v155 = v169 + 8;
            uint64_t v173 = v174;
            sub_1000553C4();
            v174();
            if (v172) {
              break;
            }
            sub_1000563D0();
            uint64_t v159 = v170;
            if ((v175 & 1) == 0) {
              goto LABEL_86;
            }
          }
          uint64_t v36 = v507;
          swift_bridgeObjectRelease();
          sub_1000553C4();
          v173();
          uint64_t v159 = v170;
        }
        else
        {
LABEL_86:
          uint64_t v157 = *((void *)v507 + 182);
          swift_bridgeObjectRelease();
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          sub_10005959C();
          sub_100055580();
          v177();
          *((void *)v507 + 49) = v159;
          if (*(void *)(v159 + 24) <= *(void *)(v159 + 16))
          {
            if (isUniquelyReferenced_nonNull_native) {
              sub_1000496D0();
            }
            else {
              sub_10004B82C();
            }
            uint64_t v178 = *((void *)v507 + 49);
            uint64_t v179 = sub_10006EFF0();
            uint64_t v180 = -1 << *(unsigned char *)(v178 + 32);
            unint64_t v168 = v179 & ~v180;
            if ((*(void *)(v178 + 56 + ((v168 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v168))
            {
              uint64_t v181 = ~v180;
              uint64_t v155 = *(void *)(*((void *)v507 + 178) + 72);
              do
              {
                uint64_t v157 = *((void *)v507 + 177);
                sub_100055580();
                v182();
                sub_100052038(&qword_100082418, (void (*)(uint64_t))&type metadata accessor for TypedValue);
                char v183 = sub_100058F5C();
                sub_100011784();
                v184();
                if (v183)
                {
                  sub_100058E40();
                  sub_100055194();
                  sub_10006F7B0();
                  return;
                }
                unint64_t v168 = (v168 + 1) & v181;
              }
              while (((*(void *)(v178 + 56 + ((v168 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v168) & 1) != 0);
            }
          }
          else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_10004ACEC();
          }
          uint64_t v36 = v507;
          uint64_t v159 = *((void *)v507 + 49);
          *(void *)(v159 + ((v168 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v168;
          sub_100055548();
          v185();
          uint64_t v186 = *(void *)(v159 + 16);
          BOOL v140 = __OFADD__(v186, 1);
          uint64_t v187 = v186 + 1;
          if (v140)
          {
            __break(1u);
LABEL_275:
            __break(1u);
LABEL_276:
            __break(1u);
LABEL_277:
            __break(1u);
LABEL_278:
            __break(1u);
LABEL_279:
            __break(1u);
LABEL_280:
            __break(1u);
LABEL_281:
            __break(1u);
LABEL_282:
            __break(1u);
LABEL_283:
            __break(1u);
LABEL_284:
            __break(1u);
LABEL_285:

            __break(1u);
            JUMPOUT(0x100033FD4);
          }
          uint64_t v188 = *((void *)v507 + 182);
          uint64_t v189 = *((void *)v507 + 178);
          uint64_t v190 = *((void *)v507 + 177);
          *(void *)(v159 + 16) = v187;
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v188, v190);
        }
        unint64_t v162 = v504 + 1;
      }
      while (v504 + 1 != v478);
    }
    uint64_t v191 = (void *)*((void *)v36 + 215);
    swift_bridgeObjectRelease();
    id v192 = [v475 relation];
    sub_10006F050();
    if (v155 == sub_100058C3C() && v191 == v193)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v137 = v453;
    }
    else
    {
      char v195 = sub_1000564A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v137 = v453;
      if ((v195 & 1) == 0)
      {
        uint64_t v196 = (void *)*((void *)v36 + 216);
        id v197 = v192;
        id v198 = v196;
        char v199 = sub_100057670();

        if (v199)
        {
          sub_100057020();
          swift_bridgeObjectRelease();
LABEL_109:
          sub_10005658C();
          v200();
          uint64_t v201 = *((void *)v36 + 176);
          uint64_t v202 = *((void *)v36 + 174);
          uint64_t v203 = *((void *)v36 + 173);
          id v204 = [v475 parameterKey];
          sub_10006F050();

          sub_1000114F0();
          v205();
          sub_1000586F8();
          sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006757C);
          uint64_t v36 = v507;
          sub_1000468F4(*(void *)(*((void *)v507 + 55) + 16), (uint64_t (*)(BOOL))sub_10006757C);
          sub_1000469EC();

          (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v201, v203);
          goto LABEL_110;
        }
        uint64_t v206 = (void *)*((void *)v36 + 217);
        id v207 = v197;
        id v208 = v206;
        uint64_t v157 = sub_100057670();

        if ((v157 & 1) == 0)
        {
          id v209 = (void *)*((void *)v36 + 218);
          id v210 = v207;
          id v211 = v209;
          uint64_t v212 = sub_100057670();

          if ((v212 & 1) == 0)
          {
            uint64_t v213 = (void *)*((void *)v36 + 219);
            id v214 = v210;
            id v215 = v213;
            uint64_t v216 = sub_100057670();

            if ((v216 & 1) == 0)
            {
              uint64_t v217 = (void *)*((void *)v36 + 220);
              id v218 = v214;
              id v219 = v217;
              uint64_t v212 = sub_100057670();

              if (v212) {
                goto LABEL_117;
              }
              id v220 = (void *)*((void *)v36 + 221);
              id v221 = v218;
              id v222 = v220;
              uint64_t v216 = sub_100057670();

              if ((v216 & 1) == 0)
              {
                id v223 = *((id *)v36 + 222);
                char v224 = sub_100057670();

                if (v224) {
                  **((void **)v36 + 176) = v159;
                }
                else {
                  swift_bridgeObjectRelease();
                }
                goto LABEL_109;
              }
            }
            sub_100057020();
            *(void *)uint64_t v216 = v159;
            *(unsigned char *)(v216 + 8) = 1;
            goto LABEL_109;
          }
LABEL_117:
          sub_100057020();
          *(void *)uint64_t v212 = v159;
          *(unsigned char *)(v212 + 8) = 0;
          goto LABEL_109;
        }
      }
    }
    sub_100057020();
    *(void *)uint64_t v157 = v159;
    goto LABEL_109;
  }
LABEL_23:
  *((void *)v36 + 232) = 0;
  id v74 = (unsigned char *)*((void *)v36 + 143);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100052038(&qword_100082420, (void (*)(uint64_t))&type metadata accessor for ToolFlag);
  sub_10006F530();
  *((void *)v36 + 50) = sub_100046794(0);
  uint64_t v75 = swift_allocBox();
  Class isa = v76;
  *((void *)v36 + 233) = v75;
  *((void *)v36 + 234) = v76;
  *((void *)v36 + 51) = sub_100046794(0);
  sub_100052038(&qword_100082428, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
  sub_10000772C(&qword_100082430);
  sub_100052D74();
  sub_10006F540();
  uint64_t v487 = sub_10006E3B0();
  uint64_t v477 = sub_10006A5EC(v487);
  uint64_t v481 = v75;
  if (!v477)
  {
LABEL_49:
    uint64_t v103 = (void *)*((void *)v36 + 72);
    swift_bridgeObjectRelease();
    sub_10006E280();
    uint64_t v104 = sub_100055E70();
    sub_1000584A0(v104);
    uint64_t v105 = sub_100055204();
    *(void *)(v105 + 16) = sub_100052DC8;
    *(void *)(v105 + 24) = v75;
    id v106 = v103;
    swift_retain_n();
    id v107 = v106;
    v506 = sub_10006E350();
    os_log_type_t v468 = sub_10006F300();
    uint64_t v463 = sub_100055258();
    *(unsigned char *)(v463 + 16) = 32;
    uint64_t v108 = sub_100055258();
    *(unsigned char *)(v108 + 16) = 8;
    uint64_t v109 = sub_100055204();
    *(void *)(v109 + 16) = sub_10005461C;
    *(void *)(v109 + 24) = v74;
    uint64_t v110 = sub_100055204();
    *(void *)(v110 + 16) = sub_100052DE0;
    *(void *)(v110 + 24) = v109;
    uint64_t v111 = sub_100055258();
    *(unsigned char *)(v111 + 16) = 32;
    uint64_t v112 = sub_100055258();
    *(unsigned char *)(v112 + 16) = 8;
    uint64_t v113 = sub_100055204();
    *(void *)(v113 + 16) = sub_100052DD0;
    *(void *)(v113 + 24) = v105;
    uint64_t v114 = sub_100055204();
    *(void *)(v114 + 16) = sub_1000545C8;
    *(void *)(v114 + 24) = v113;
    sub_10000772C((uint64_t *)&unk_100082390);
    uint64_t v115 = swift_initStackObject();
    *(_OWORD *)(v115 + 16) = xmmword_1000716D0;
    uint64_t v116 = v463;
    *(void *)(v115 + 32) = sub_100054620;
    *(void *)(v115 + 40) = v463;
    *(void *)(v115 + 48) = sub_100054620;
    *(void *)(v115 + 56) = v108;
    *(void *)(v115 + 64) = sub_1000545D4;
    *(void *)(v115 + 72) = v110;
    *(void *)(v115 + 80) = sub_100054620;
    *(void *)(v115 + 88) = v111;
    *(void *)(v115 + 96) = sub_100054620;
    *(void *)(v115 + 104) = v112;
    *(void *)(v115 + 112) = sub_1000545D4;
    *(void *)(v115 + 120) = v114;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v496 = v113;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (sub_100056824(v468))
    {
      uint64_t v451 = *((void *)v507 + 143);
      uint64_t v117 = (void *)*((void *)v507 + 72);
      id v118 = (uint8_t *)sub_10000E6E0();
      sub_10005703C();
      *(_WORD *)id v118 = 514;
      v118[2] = 32;
      swift_release();
      v118[3] = 8;
      swift_release();
      id v119 = [v117 identifier];
      LOBYTE(v120) = sub_10006F050();

      uint64_t v121 = sub_1000571A4();
      *((void *)v507 + 66) = sub_100046AE8(v121, v122, v123);
      sub_10006F4D0();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();

      v118[12] = 32;
      swift_release();
      v118[13] = 8;
      swift_release();
      sub_100055CE4();
      sub_100059B68();
      uint64_t v116 = v451;
      sub_1000114F0();
      v124();
      sub_100052038(&qword_100082448, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
      sub_100058AC4();
      uint64_t v126 = v125;
      sub_100055240();
      v127();
      *((void *)v507 + 68) = sub_100058378();
      sub_10006F4D0();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v506, (os_log_type_t)v111, "%s: Visibility flags: %s", v118, 0x16u);
      sub_100057D9C();
      sub_10001153C();
      sub_10001153C();

      sub_1000551DC();
      v128();
    }
    else
    {
      uint64_t v126 = (char *)*((void *)v507 + 135);
      uint64_t v120 = (void *)*((void *)v507 + 72);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release_n();

      uint64_t v129 = sub_100056A90();
      v130(v129);
    }
    unint64_t v131 = (void (*)(void))*((void *)v507 + 209);
    if (v131)
    {
      uint64_t v132 = sub_10006F180();
      sub_100058CD4(v132);
      *((void *)v507 + 236) = sub_10006F170();
      sub_1000553EC();
      sub_10005533C();
LABEL_229:
      sub_100058F4C();
      sub_100055194();
      _swift_task_switch(v379, v380, v381);
      return;
    }
    char v225 = v507 + 360;
    uint64_t v36 = v507 + 400;
    uint64_t v226 = *((void *)v507 + 156);
    if ([*((id *)v507 + 72) requiresUnlock])
    {
      uint64_t v126 = (char *)*((void *)v507 + 134);
      uint64_t v227 = *((void *)v507 + 132);
      sub_1000567F0();
      v228();
      sub_10006EB80();
      sub_1000551F4();
      sub_1000551E8();
      v229();
      uint64_t v116 = v227 + 104;
      sub_100058B28();
      v230();
      unint64_t v131 = (void (*)(void))(v507 + 400);
      sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
      sub_100058094(*((void *)v507 + 50));
      sub_1000469EC();
    }
    else
    {
      (*(void (**)(void, void, void))(v226 + 104))(*((void *)v507 + 157), enum case for ToolAuthenticationPolicy.none(_:), *((void *)v507 + 155));
    }
    if (sub_10005665C((uint64_t)&OBJC_PROTOCOL___WFLinkActionProtocol))
    {
      sub_1000563C0();
      sub_100055330();
    }
    else
    {
      sub_100058024();
      self;
      sub_100056938();
      sub_100056058();
      sub_100058018();
    }
    v232();
    if ([(id)sub_100058DF8() isDiscontinued])
    {
      uint64_t v126 = (char *)*((void *)v507 + 160);
      uint64_t v245 = *((void *)v507 + 159);
      uint64_t v120 = (void *)*((void *)v507 + 72);
      sub_10006E490();
      sub_100056378();
      uint64_t v246 = *(void (**)(void))(v245 + 8);
      uint64_t v116 = v245 + 8;
      unint64_t v131 = v246;
      sub_1000553C4();
      v246();
      sub_1000553C4();
      v246();
      self;
      uint64_t v247 = swift_dynamicCastObjCClass();
      *((void *)v507 + 248) = v247;
      if (v247)
      {
        sub_1000576B4();
        uint64_t v248 = v131;
        *((void *)v507 + 249) = sub_10006F170();
        sub_1000553EC();
        sub_10005533C();
        goto LABEL_229;
      }
    }
    *(void *)type = v507 + 360;
    if ([(id)sub_100057FB8() isResidentCompatible])
    {
      sub_100055404();
      sub_10006E4F0();
      sub_100056378();
      unint64_t v131 = *(void (**)(void))(v116 + 8);
      sub_1000553C4();
      v131();
      uint64_t v249 = sub_100056238();
      ((void (*)(uint64_t))v131)(v249);
    }
    sub_1000566F8();
    id v250 = [v131 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
    sub_1000588D4();
    sub_10001028C(v251, v252);
    sub_1000588D4();
    uint64_t v255 = sub_1000525E0(v253, v254);
    uint64_t v256 = sub_100057550(v255);

    sub_100016C7C(v256, (void (*)(void))&type metadata accessor for WFDeviceCapabilityResource);
    char v258 = v257;
    swift_bridgeObjectRelease();
    if (sub_10005817C())
    {
      sub_100057518();
      if (v160 != v140) {
        goto LABEL_280;
      }
      sub_100056A3C();
      sub_100057080();
      do
      {
        if (((_BYTE)v507 - 112)) {
          uint64_t v259 = (uint64_t)sub_100056774();
        }
        else {
          uint64_t v259 = sub_100058714();
        }
        uint64_t v120 = (void *)v259;
        ++v225;
        sub_10006DFC0();
        sub_10005658C();
        v260();
        char v258 = v506;
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
        uint64_t v261 = sub_100057804();
        sub_1000468F4(v261, v262);
        sub_100057DB4();
        sub_1000469EC();
      }
      while (v126 != v225);
    }
    id v263 = v507;
    sub_100058DE0();
    sub_10006DF90();
    id v264 = [v258 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
    uint64_t v265 = sub_100057C14();

    sub_100016C7C(v265, (void (*)(void))&type metadata accessor for WFFeatureFlagResource);
    uint64_t v267 = v266;
    *((void *)v507 + 251) = v126;
    swift_bridgeObjectRelease();
    if (sub_10005817C())
    {
      sub_100056FD8();
      if (v160 != v140) {
        goto LABEL_281;
      }
      char v491 = sub_1000574F8();
      uint64_t v268 = 0;
      sub_100057F08(enum case for RuntimeRequirement.featureFlag(_:));
      do
      {
        if (v491) {
          uint64_t v269 = (uint64_t)sub_100056758();
        }
        else {
          uint64_t v269 = sub_10005868C();
        }
        uint64_t v120 = (void *)v269;
        id v270 = (uint64_t *)v263[134];
        ++v268;
        uint64_t v271 = sub_10006DF70();
        uint64_t v273 = v272;
        uint64_t v274 = sub_10006DF80();
        uint64_t v276 = v275;
        char v277 = sub_10006DF60();
        *id v270 = v271;
        id v263 = v507;
        *(void *)(v496 + 8) = v273;
        *(void *)(v496 + 16) = v274;
        *(void *)(v496 + 24) = v276;
        *(unsigned char *)(v496 + 32) = v277 & 1;
        sub_1000551E8();
        v278();
        uint64_t v267 = v506;
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
        sub_100055C28(*((void *)v507 + 50));
        sub_100056610();
        sub_1000469EC();

        sub_100057F6C();
      }
      while (!v149);
    }
    sub_100058070();
    if (v267)
    {
      sub_100057054();
      uint64_t v279 = v267;
      v263[252] = sub_10006F170();
      sub_1000553EC();
      sub_10005533C();
      goto LABEL_229;
    }
    uint64_t v280 = sub_100046794(0);
    if (sub_10006A5EC(v280)) {
      sub_10004CDD8(v280);
    }
    else {
      swift_bridgeObjectRelease();
    }
    uint64_t v281 = (void *)sub_100046794(0);
    if (sub_10006A5EC(v281))
    {
      uint64_t v282 = (void *)sub_10004CDD8((uint64_t)v281);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v282 = &_swiftEmptySetSingleton;
    }
    sub_1000569EC((uint64_t)v282);
    id v283 = [v281 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
    uint64_t v284 = sub_100057C14();

    sub_100016C7C(v284, (void (*)(void))&type metadata accessor for WFDeviceIdiomResource);
    uint64_t v36 = v285;
    swift_bridgeObjectRelease();
    if (sub_100066FFC(v36))
    {
      uint64_t v286 = v263[116];
      BOOL v501 = sub_100068F0C((uint64_t)v36);
      int v464 = enum case for WFDeviceIdiomResource.Requirement.notEqualTo(_:);
      v469 = (void (**)(void))(v286 + 8);
      unsigned int v488 = enum case for RuntimePlatform.macintosh(_:);
      v483 = v36;
      do
      {
        if (v501) {
          id v287 = *((id *)v36 + 4);
        }
        else {
          id v287 = (id)sub_10006F620();
        }
        uint64_t v288 = v287;
        LOBYTE(v120) = 1;
        sub_10006DF40();
        uint64_t v289 = sub_1000584E4();
        v290(v289);
        sub_100056B60();
        if (v149)
        {
          uint64_t v292 = sub_100055288();
          v293(v292);
          sub_100055E64();
          uint64_t v295 = v488;
          switch(v296)
          {
            case 0:
            case 5:
              uint64_t v297 = v263[115];
              uint64_t v298 = v263[114];
LABEL_179:
              sub_100055CCC(v298, v295, v294, v297);

              sub_100053404(v298, &qword_1000823D0);
              goto LABEL_183;
            case 1:
            case 2:
            case 3:
            case 4:
            case 6:
              uint64_t v302 = *((void *)v507 + 115);
              uint64_t v303 = *((void *)v507 + 114);
              sub_1000551E8();
              v304();
              sub_100007770(v303, 0, 1, v302);
              sub_10005524C();
              v305();
              sub_100056610();
              sub_100055270();
              v306();
              sub_10005825C();

              uint64_t v307 = *v469;
              sub_100059560();
              sub_100055C1C();
              v307();
              sub_100057200();
              uint64_t v36 = v483;
              id v263 = v507;
              sub_100055C1C();
              v307();
              goto LABEL_183;
            default:
              goto LABEL_241;
          }
        }
        if (v291 == v464)
        {
          sub_100055574();
          v299();
          sub_100055E64();
          uint64_t v295 = v488;
          switch(v300)
          {
            case 0:
            case 5:
              uint64_t v297 = v263[115];
              uint64_t v298 = v263[113];
              goto LABEL_179;
            case 1:
            case 2:
            case 3:
            case 4:
            case 6:
              uint64_t v308 = v263[121];
              uint64_t v309 = (char *)v263[120];
              uint64_t v310 = *((void *)v507 + 119);
              uint64_t v311 = *((void *)v507 + 115);
              uint64_t v312 = *((void *)v507 + 113);
              sub_1000551E8();
              v313();
              sub_100007770(v312, 0, 1, v311);
              sub_10005524C();
              v314();
              sub_100057200();
              sub_100055270();
              v315();
              sub_10004D554(v308, v309);

              uint64_t v316 = *v469;
              sub_100059C78();
              sub_100055234();
              v316();
              uint64_t v317 = v310;
              uint64_t v36 = v483;
              id v263 = v507;
              ((void (*)(uint64_t, uint64_t))v316)(v317, v311);
              goto LABEL_183;
            default:
              goto LABEL_241;
          }
        }

        sub_1000551DC();
        v301();
LABEL_183:
        sub_100057FA8();
      }
      while (!v149);
    }
    v318 = (void *)v263[72];
    swift_bridgeObjectRelease();
    id v319 = [v318 disabledOnPlatforms];
    sub_1000574C4();
    uint64_t v320 = sub_1000574AC();

    uint64_t v321 = sub_10006A5EC(v320);
    if (v321)
    {
      uint64_t v322 = (char *)v321;
      if (v321 < 1) {
        goto LABEL_282;
      }
      sub_100056A58();
      sub_1000582C0();
      do
      {
        if (v120) {
          uint64_t v323 = (uint64_t)sub_100057E14();
        }
        else {
          uint64_t v323 = sub_10005875C();
        }
        v324 = (void *)v323;
        uint64_t v325 = *((void *)v507 + 121);
        uint64_t v326 = (char *)*((void *)v507 + 120);
        ++v36;
        sub_10004310C((uint64_t)v326);
        sub_10004D554(v325, v326);

        sub_100011784();
        v327();
      }
      while (v322 != v36);
    }
    swift_bridgeObjectRelease();
    sub_100057DD8();
    if (v328) {
      uint64_t v329 = swift_bridgeObjectRetain();
    }
    else {
      uint64_t v329 = sub_10006EA90();
    }
    Class isa = (void (**)(void))v507;
    uint64_t v330 = sub_1000583D0(v329);
    sub_100047F78(v330);
    swift_bridgeObjectRelease();
    sub_1000587EC();
    uint64_t v331 = sub_100043434();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v497 = sub_10006A5EC(v331);
    if (v497)
    {
      if (v497 < 1) {
        goto LABEL_283;
      }
      uint64_t v465 = *((void *)v507 + 117);
      char v492 = sub_100068F08(v331);
      unint64_t v332 = 0;
      do
      {
        if (v492)
        {
          sub_100055270();
          v333();
        }
        else
        {
          uint64_t v334 = sub_10005529C(v332, v331, (void (*)(void))&type metadata accessor for RuntimePlatform);
          if (v465 != 8) {
            goto LABEL_276;
          }
          isa[56] = (void (*)(void))v334;
          sub_100055270();
          v335();
          swift_unknownObjectRelease();
        }
        uint64_t v320 = (uint64_t)isa[134];
        uint64_t v36 = (char *)*((void *)v507 + 112);
        uint64_t v336 = *((void *)v507 + 111);
        uint64_t v337 = *((void *)v507 + 110);
        ++v332;
        sub_10005524C();
        v338();
        uint64_t v339 = sub_10006ED70();
        sub_100007770((uint64_t)v36, 1, 1, v339);
        sub_100007770(v336, 1, 1, v339);
        sub_100007770(v337, 1, 1, v339);
        sub_100057200();
        Class isa = (void (**)(void))v507;
        sub_10006EF00();
        sub_100055270();
        v340();
        sub_1000551E8();
        v341();
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
        sub_100055FCC();
        sub_1000469EC();
        sub_1000551DC();
        v342();
      }
      while (v497 != v332);
    }
    swift_bridgeObjectRelease();
    v343 = isa[72];
    uint64_t v344 = sub_10006F480();
    isa[57] = (void (*)(void))v344;
    isa[58] = (void (*)(void))sub_100046794(0);
    isa[59] = (void (*)(void))&OBJC_PROTOCOL___WFLinkActionProtocol;
    if (swift_dynamicCastObjCProtocolConditional())
    {
      v343 = (void (*)(void))sub_100058B44();
      id v345 = [isa + 59 backingActionIdentifiers];
      uint64_t v346 = sub_10006F0F0();

      uint64_t v36 = (char *)sub_100016FAC(v346);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v347 = sub_100026598((unint64_t)v36);

      swift_bridgeObjectRelease();
      Class isa = (void (**)(void))v507;
      swift_bridgeObjectRelease();
      *((void *)v507 + 58) = v347;
    }
    if (!sub_100057898())
    {
      uint64_t v348 = sub_10006A5EC(v344);
      if (v348)
      {
        uint64_t v320 = v348;
        if (v348 < 1) {
          goto LABEL_284;
        }
        v349 = isa[106];
        uint64_t v350 = isa[105];
        id v351 = isa[102];
        char v352 = sub_100068F08(v344);
        uint64_t v36 = (char *)v350 + 16;
        v466 = (void (**)(void (*)(void), void (*)(void)))((char *)v351 + 8);
        swift_bridgeObjectRetain();
        v343 = 0;
        v479 = v36;
        v458 = v349;
        char v484 = v352;
        do
        {
          if (v352)
          {
            sub_1000560F0();
            v353();
          }
          else
          {
            uint64_t v354 = sub_100056890((unint64_t)v343, v344, (void (*)(void))&type metadata accessor for SystemToolProtocol);
            if (v349 != (void (*)(void))8) {
              goto LABEL_278;
            }
            uint64_t v355 = sub_100055E18(v354);
            v356(v355);
            swift_unknownObjectRelease();
          }
          sub_10005524C();
          v357();
          sub_100057318();
          v358();
          sub_100056B60();
          if (v149)
          {
            uint64_t v359 = sub_100055288();
            v360(v359);
            sub_10005524C();
            v361();
            sub_10006EDA0();
            sub_10006ED90();
            uint64_t v362 = sub_10006ED80();
            swift_release();
            if (*(void *)(v362 + 16) && (sub_100068818(), (v363 & 1) != 0))
            {
              sub_1000114F0();
              v364();
              uint64_t v365 = 0;
            }
            else
            {
              uint64_t v365 = 1;
            }
            uint64_t v367 = (uint64_t)isa[98];
            uint64_t v368 = (uint64_t)isa[97];
            sub_100007770(v368, v365, 1, v367);
            swift_bridgeObjectRelease();
            int v369 = sub_100007800(v368, 1, v367);
            uint64_t v370 = isa[103];
            BOOL v371 = isa[101];
            if (v369 == 1)
            {
              uint64_t v372 = (uint64_t)isa[97];
              sub_1000551DC();
              v373();
              sub_100053404(v372, &qword_1000823C0);
            }
            else
            {
              sub_10005524C();
              v374();
              sub_10006E380();
              sub_10001A7C0();
              sub_1000584E4();
              v349 = v458;
              sub_1000551DC();
              v375();
              (*v466)(v370, v371);
            }
            char v352 = v484;
            uint64_t v36 = v479;
          }
          else
          {
            sub_1000551DC();
            v366();
          }
          v343 = (void (*)(void))((char *)v343 + 1);
        }
        while ((void (*)(void))v320 != v343);
        swift_bridgeObjectRelease();
      }
    }
    if (sub_10006A5EC(isa[58]))
    {
      sub_100057360();
      sub_100055330();
      v376();
      sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006745C);
      sub_1000560D4((uint64_t)isa[57]);
      sub_1000576CC();
    }
    v377 = isa[209];
    if (v377)
    {
      sub_10006F180();
      uint64_t v378 = v377;
      isa[255] = (void (*)(void))sub_10006F170();
      sub_1000553EC();
      sub_10005533C();
      goto LABEL_229;
    }
    sub_1000075E8(isa[72], (SEL *)&selRef_iconName);
    v503 = (isa + 57);
    if (v383)
    {
      sub_100056118();
      swift_bridgeObjectRelease();
      *(void *)v343 = v320;
      *((void *)v343 + 1) = 0;
      sub_10006E510();
      sub_1000551F4();
      sub_1000551E8();
      v384();
      sub_100056880();
      goto LABEL_268;
    }
    uint64_t v389 = sub_1000075E8(isa[72], (SEL *)&selRef_iconSymbolName);
    if (!v390) {
      goto LABEL_244;
    }
    uint64_t v391 = v389;
    uint64_t v392 = v390;
    uint64_t v393 = sub_1000075E8(isa[72], (SEL *)&selRef_iconBackgroundColorName);
    if (!v394) {
      goto LABEL_243;
    }
    uint64_t v395 = v393;
    uint64_t v396 = v394;
    uint64_t v498 = v391;
    id v397 = [isa[72] definition];
    if (v397)
    {
      uint64_t v398 = v397;
      id v399 = [v397 objectForKey:WFActionIconSymbolColorNameKey];

      if (v399)
      {
        sub_10006F4F0();
        swift_unknownObjectRelease();
      }
      else
      {
        *((_OWORD *)isa + 17) = 0u;
        *((_OWORD *)isa + 18) = 0u;
      }
      sub_100053348((uint64_t)(isa + 34), (uint64_t)(isa + 38), &qword_100082450);
      if (isa[41])
      {
        if (sub_1000560FC())
        {
          sub_100058858();
          goto LABEL_252;
        }
LABEL_251:
        sub_100055CCC((uint64_t)isa[90], v400, v401, (uint64_t)isa[79]);
LABEL_252:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL v402 = v395 == 1953392980 && v396 == 0xE400000000000000;
        if (v402 || (sub_100055554() & 1) != 0)
        {
          uint64_t v403 = (uint64_t)isa[89];
          uint64_t v404 = (uint64_t)isa[79];
          sub_1000532F0((uint64_t)isa[90], v403, &qword_1000823A8);
          sub_100055EE0(v403, 1, v404);
          if (!v149)
          {
            char v409 = isa[80];
            sub_100053404((uint64_t)isa[90], &qword_1000823A8);
            swift_bridgeObjectRelease();
            char v410 = (void (*)(void))*((void *)v409 + 4);
            sub_10005647C();
            v410();
            sub_100056610();
            sub_10005647C();
            v410();
LABEL_267:
            uint64_t v419 = isa[96];
            sub_100055330();
            v420();
            sub_10000772C(&qword_100082460);
            *(void *)uint64_t v419 = v498;
            *((void *)v419 + 1) = v392;
            sub_100058494();
            v421();
            sub_10006E510();
            sub_1000551F4();
            sub_1000551E8();
            v422();
            uint64_t v385 = sub_100059D7C();
            goto LABEL_268;
          }
          sub_100053404((uint64_t)isa[89], &qword_1000823A8);
        }
        uint64_t v405 = (uint64_t)isa[88];
        uint64_t v406 = (uint64_t)isa[79];
        sub_10006E400();
        sub_100007800(v405, 1, v406);
        uint64_t v407 = (uint64_t)isa[88];
        sub_100056168();
        if (v149)
        {
          sub_1000551E8();
          v408();
          sub_100053404(v407, &qword_1000823A8);
        }
        else
        {
          sub_10005749C();
          v411();
        }
        uint64_t v412 = sub_100057830();
        sub_100053348(v412, v405, &qword_1000823A8);
        int v413 = sub_100007800(v405, 1, v406);
        uint64_t v414 = (uint64_t)isa[87];
        char v415 = isa[80];
        if (v413 == 1)
        {
          sub_100055330();
          v416();
          sub_100053404(v414, &qword_1000823A8);
          uint64_t v417 = (void (*)(void))*((void *)v415 + 4);
        }
        else
        {
          uint64_t v417 = (void (*)(void))*((void *)v415 + 4);
          ((void (*)(void (*)(void), void (*)(void), void (*)(void)))v417)(isa[81], isa[87], isa[79]);
        }
        sub_10000772C(&qword_100082458);
        sub_100056840();
        v417();
        uint64_t v418 = sub_100056418();
        ((void (*)(uint64_t))v417)(v418);
        goto LABEL_267;
      }
    }
    else
    {
      sub_100058F10();
    }
    sub_100053404((uint64_t)(isa + 38), &qword_100082450);
    goto LABEL_251;
  }
  *(void *)type = v36 + 416;
  uint64_t v461 = *((void *)v36 + 145);
  uint64_t v78 = *((void *)v36 + 144);
  uint64_t v462 = *((void *)v36 + 139);
  char v474 = sub_100068F08(v487);
  unint64_t v79 = 0;
  uint64_t v80 = (v78 + 16);
  v500 = (void (**)(void))(v78 + 32);
  v495 = (void (**)(void))(v78 + 8);
  v506 = (v78 + 16);
  while (1)
  {
    if (v474)
    {
      sub_1000568AC();
      Class isa = *(void (***)(void))(v81 + 16);
      sub_100057B18();
      ((void (*)(void))isa)();
      goto LABEL_29;
    }
    uint64_t v82 = sub_100058628(v79, v487, (void (*)(void))&type metadata accessor for ToolVisibilityFlag);
    if (v461 != 8) {
      break;
    }
    *((void *)v36 + 52) = v82;
    Class isa = (void (**)(void))v80->isa;
    sub_100057B18();
    ((void (*)(void))isa)();
    swift_unknownObjectRelease();
LABEL_29:
    uint64_t v83 = (v79 + 1);
    if (__OFADD__(v79, 1))
    {
      __break(1u);
      goto LABEL_240;
    }
    v490 = *v500;
    sub_100055548();
    v84();
    sub_100057B18();
    ((void (*)(void))isa)();
    sub_10006E3E0();
    sub_100052038(&qword_100082440, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
    sub_1000571A4();
    char v85 = sub_10006F010();
    unint64_t v86 = *v495;
    sub_10005521C();
    v86();
    if (v85)
    {
      id v74 = (unsigned char *)*((void *)v36 + 72);
      sub_100055B70();
      v86();
      if ([v74 visibleForUse:0])
      {
        v503 = (v79 + 1);
        uint64_t v87 = *((void *)v36 + 149);
        sub_10006E3E0();
        sub_1000114F0();
        ((void (*)(void))isa)();
        sub_100059C84();
        sub_10006F510();
        sub_1000571A4();
        uint64_t v88 = sub_100057E44();
        sub_100057254(v88);
        if (v89)
        {
          sub_10005527C();
          v86();
          sub_1000566C4();
          ((void (*)(void))isa)();
          sub_1000566C4();
          ((void (*)(void))isa)();
          sub_100059CF0();
          Class isa = v500;
          uint64_t v90 = v490;
        }
        else
        {
          Class isa = v500;
          uint64_t v90 = v490;
          sub_100055B64();
          v490();
        }
        uint64_t v101 = (unsigned char *)*((void *)v36 + 141);
        id v74 = &v101[*(int *)(v462 + 48)];
        *uint64_t v101 = v87;
        sub_100055B64();
        v90();
        sub_10005527C();
        v86();
        uint64_t v100 = v36 + 1200;
LABEL_46:
        uint64_t v83 = v503;
        goto LABEL_47;
      }
    }
    else
    {
      v503 = (v79 + 1);
      sub_10006E3D0();
      char v91 = sub_100057E44();
      sub_10005527C();
      v86();
      if (v91)
      {
        id v74 = (unsigned char *)*((void *)v36 + 72);
        sub_10005527C();
        v86();
        uint64_t v83 = (v79 + 1);
        if ([v74 visibleForUse:1])
        {
          uint64_t v92 = *((void *)v36 + 143);
          sub_10006E3D0();
          sub_1000114F0();
          ((void (*)(void))isa)();
          sub_100058F40();
          sub_10006F510();
          uint64_t v93 = sub_10006F010();
          sub_100057254(v93);
          if (v94)
          {
            sub_10005527C();
            v86();
            sub_1000566C4();
            ((void (*)(void))isa)();
            sub_1000566C4();
            ((void (*)(void))isa)();
            sub_100059CF0();
            Class isa = v500;
            uint64_t v95 = v490;
          }
          else
          {
            Class isa = v500;
            uint64_t v95 = v490;
            sub_100055B64();
            v490();
          }
          char v102 = (unsigned char *)*((void *)v36 + 141);
          id v74 = &v102[*(int *)(v462 + 48)];
          unsigned char *v102 = v92;
          sub_100055B64();
          v95();
          sub_10005527C();
          v86();
          uint64_t v100 = v36 + 1184;
          goto LABEL_46;
        }
      }
      else
      {
        sub_10006E3C0();
        char v96 = sub_100057E44();
        sub_10005527C();
        v86();
        if ((v96 & 1) == 0)
        {

          sub_10004651C(27);
          swift_bridgeObjectRelease();
          sub_100056748();
          sub_100056790(v244);
          sub_100052038(&qword_100082448, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
          v508._countAndFlagsBits = sub_10006F750();
          sub_100058D34(v508);
          swift_bridgeObjectRelease();
          sub_10006F080();
          sub_100055C44();
          goto LABEL_137;
        }
        id v74 = (unsigned char *)*((void *)v36 + 146);
        sub_10005527C();
        v86();
        sub_1000114F0();
        ((void (*)(void))isa)();
        sub_10006E3E0();
        sub_100059C78();
        char v97 = sub_10006F500();
        sub_100059C78();
        sub_10005527C();
        v86();
        sub_10005527C();
        v86();
        uint64_t v83 = (v79 + 1);
        if ((v97 & 1) != 0 && [*((id *)v36 + 72) isApprovedForPublicShortcutsDrawer])
        {
          id v74 = (unsigned char *)*((void *)v36 + 146);
          sub_10006E3C0();
          uint64_t v98 = (char *)sub_100056A90();
          sub_100042A3C(v98, v99);
          sub_100055B70();
          v86();
          uint64_t v100 = v36 + 1208;
LABEL_47:
          ((void (*)(void, void))v86)(*v100, *((void *)v36 + 143));
        }
      }
    }
    sub_100055B70();
    v86();
    ++v79;
    uint64_t v75 = v481;
    uint64_t v80 = v506;
    if (v83 == v477) {
      goto LABEL_49;
    }
  }
  __break(1u);
LABEL_243:
  swift_bridgeObjectRelease();
LABEL_244:
  swift_bridgeObjectRelease();
  sub_100058FCC();
  sub_10006E510();
  uint64_t v385 = sub_100057780();
LABEL_268:
  sub_100007770(v385, v386, v387, v388);
  v489 = isa[234];
  uint64_t v493 = (uint64_t)isa[209];
  v471 = isa[194];
  uint64_t v423 = *((void *)v507 + 165);
  v476 = (void *)*((void *)v507 + 162);
  uint64_t v480 = *((void *)v507 + 157);
  uint64_t v424 = *((void *)v507 + 96);
  uint64_t v485 = *((void *)v507 + 77);
  char v425 = v507[2080];
  uint64_t v426 = *((void *)v507 + 76);
  uint64_t v427 = *((void *)v507 + 75);
  uint64_t v470 = *((void *)v507 + 74);
  uint64_t v428 = (void *)*((void *)v507 + 72);
  *((void *)v507 + 60) = *((void *)v507 + 73);
  id v429 = [v428 identifier];
  sub_10006F050();

  uint64_t v430 = swift_task_alloc();
  *(void *)(v430 + 16) = v428;
  *(void *)(v430 + 24) = v423;
  *(void *)(v430 + 32) = v427;
  *(void *)(v430 + 40) = v426;
  *(unsigned char *)(v430 + 48) = v425 & 1;
  *(void *)(v430 + 56) = v471;
  *(void *)(v430 + 64) = v424;
  *(void *)(v430 + 72) = *(void *)type;
  *(void *)(v430 + 80) = v476;
  *(void *)(v430 + 88) = v506;
  *(void *)(v430 + 96) = v480;
  *(void *)(v430 + 104) = v489;
  *(void *)(v430 + 112) = v470;
  *(void *)(v430 + 120) = v485;
  *(void *)(v430 + 128) = v503;
  sub_100056920(v430, v493);
  sub_10005746C();
  v499 = (void *)*((void *)v507 + 208);
  v502 = (void *)*((void *)v507 + 209);
  if (v424)
  {
    uint64_t v431 = *((void *)v507 + 96);
    sub_10005521C();
    v432();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_100053404(v431, &qword_1000823B8);
    sub_1000556D0();
    v433();
    sub_100055234();
    v434();
    swift_bridgeObjectRelease();
    sub_1000588E0();
    swift_bridgeObjectRelease();
    sub_100055240();
    v435();
    swift_bridgeObjectRelease();
    sub_100055228();
    v436();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100058F80();
  }
  else
  {
    sub_10005521C();
    v437();

    swift_bridgeObjectRelease();
    uint64_t v438 = swift_task_dealloc();
    sub_100057300(v438, &qword_1000823B8);
    sub_100055228();
    v439();
    sub_1000553C4();
    v440();
    swift_bridgeObjectRelease();
    sub_100058674();
    swift_bridgeObjectRelease();
    sub_100055234();
    v441();
    swift_bridgeObjectRelease();
    sub_100055C1C();
    v442();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001151C();
  }
  sub_100055194();
  v444(v443, v444, v445, v446, v447, v448, v449, v450, a9, a10, a11, a12);
}

uint64_t sub_10003400C()
{
  sub_1000114D4();
  uint64_t v1 = *(void **)(v0 + 1672);
  swift_release();
  *(void *)(v0 + 1896) = [v1 metadata];
  sub_1000115E8();
  return _swift_task_switch(v2, v3, v4);
}

void sub_10003408C()
{
  sub_100059790();
  uint64_t v2 = *(void **)(v1 + 1896);
  id v3 = [v2 authenticationPolicy];

  if (v3)
  {
    if (v3 == (id)2)
    {
      uint64_t v5 = *(void **)(v1 + 1672);
      uint64_t v6 = *(void *)(v1 + 1072);
      uint64_t v7 = *(void *)(v1 + 1056);
      uint64_t v8 = *(void *)(v1 + 1048);
      sub_100055330();
      v9();
      sub_10006EB80();
      sub_1000551F4();
      sub_1000551E8();
      v10();
      (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v6, enum case for RuntimeRequirement.deviceState(_:), v8);
      sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
      sub_1000560D4(*(void *)(v1 + 400));
      sub_1000576CC();

      goto LABEL_8;
    }
    if (v3 != (id)1)
    {

      sub_10006F6D0();
      sub_100058910();
      return;
    }
    sub_100059370();
    uint64_t v4 = (unsigned int *)&enum case for ToolAuthenticationPolicy.requiresAuthenticationOnOrigin(_:);
  }
  else
  {
    sub_100059370();
    uint64_t v4 = (unsigned int *)&enum case for ToolAuthenticationPolicy.none(_:);
  }
  (*(void (**)(id, void, void *))(v0 + 104))(v3, *v4, v2);
LABEL_8:
  uint64_t v11 = *(void **)(v1 + 1672);
  sub_1000563C0();
  sub_100055330();
  v12();
  id v13 = v11;
  *(void *)(v1 + 1904) = sub_10006F170();
  sub_1000553EC();
  sub_10005533C();
  sub_100057D4C();
  sub_100058910();
  _swift_task_switch(v14, v15, v16);
}

uint64_t sub_1000342D0()
{
  sub_1000114D4();
  uint64_t v1 = *(void **)(v0 + 1672);
  swift_release();
  *(void *)(v0 + 1912) = [v1 metadata];
  sub_1000115E8();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_100034350()
{
  sub_100056CA8();
  uint64_t v2 = *(void **)(v0 + 1912);
  unsigned int v3 = [v2 openAppWhenRun];

  if (v3)
  {
    sub_100055404();
    sub_10006E4A0();
    sub_100056378();
    uint64_t v4 = *(void (**)(void))(v1 + 8);
    sub_1000553C4();
    v4();
    uint64_t v5 = sub_100056238();
    ((void (*)(uint64_t))v4)(v5);
  }
  *(void *)(v0 + 1920) = sub_1000597EC();
  sub_1000553EC();
  sub_10005533C();
  sub_100057D4C();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_10003441C()
{
  sub_1000114D4();
  uint64_t v1 = *(void **)(v0 + 1672);
  swift_release();
  *(void *)(v0 + 1928) = [v1 metadata];
  sub_1000115E8();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_10003449C()
{
  sub_100056CA8();
  uint64_t v2 = *(void **)(v0 + 1928);
  unsigned __int8 v3 = [v2 outputFlags];

  if ((v3 & 8) != 0)
  {
    sub_100055404();
    sub_10006E4E0();
    sub_100056378();
    uint64_t v4 = *(void (**)(void))(v1 + 8);
    sub_1000553C4();
    v4();
    uint64_t v5 = sub_100056238();
    ((void (*)(uint64_t))v4)(v5);
  }
  *(void *)(v0 + 1936) = sub_1000597EC();
  sub_1000553EC();
  sub_10005533C();
  sub_100057D4C();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_100034568()
{
  sub_1000114D4();
  uint64_t v1 = *(void **)(v0 + 1672);
  swift_release();
  *(void *)(v0 + 1944) = [v1 metadata];
  sub_1000115E8();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_1000345E8()
{
  sub_100056CA8();
  uint64_t v2 = *(void **)(v0 + 1944);
  unsigned __int8 v3 = [v2 outputFlags];

  if (v3)
  {
    sub_100055404();
    sub_10006E4C0();
    sub_100056378();
    uint64_t v4 = *(void (**)(void))(v1 + 8);
    sub_1000553C4();
    v4();
    uint64_t v5 = sub_100056238();
    ((void (*)(uint64_t))v4)(v5);
  }
  *(void *)(v0 + 1952) = sub_1000597EC();
  sub_1000553EC();
  sub_10005533C();
  sub_100057D4C();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_1000346B4()
{
  sub_1000114D4();
  uint64_t v1 = *(void **)(v0 + 1672);
  swift_release();
  *(void *)(v0 + 1960) = [v1 metadata];
  sub_1000115E8();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_100034734()
{
  sub_100056CA8();
  uint64_t v2 = *(void **)(v0 + 1960);
  unsigned __int8 v3 = [v2 outputFlags];

  if ((v3 & 2) != 0)
  {
    sub_100055404();
    sub_10006E4B0();
    sub_100056378();
    uint64_t v4 = *(void (**)(void))(v1 + 8);
    sub_1000553C4();
    v4();
    uint64_t v5 = sub_100056238();
    ((void (*)(uint64_t))v4)(v5);
  }
  *(void *)(v0 + 1968) = sub_1000597EC();
  sub_1000553EC();
  sub_10005533C();
  sub_100057D4C();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_100034800()
{
  sub_1000114D4();
  uint64_t v1 = *(void **)(v0 + 1672);
  swift_release();
  *(void *)(v0 + 1976) = [v1 metadata];
  sub_1000115E8();
  return _swift_task_switch(v2, v3, v4);
}

void sub_100034880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1000553D0();
  sub_1000562A0();
  unint64_t v18 = v13 + 360;
  id v19 = *(void (**)(void))(v13 + 1976);
  id v20 = [v19 outputFlags];

  uint64_t v21 = *(void *)(v13 + 1672);
  if ((v20 & 4) != 0)
  {
    sub_100055404();
    sub_10006E4D0();
    sub_100056378();

    uint64_t v22 = *(void (**)(void))(v15 + 8);
    v15 += 8;
    id v19 = v22;
    sub_1000553C4();
    v22();
    uint64_t v23 = sub_100056238();
    ((void (*)(uint64_t))v22)(v23);
  }
  else
  {
  }
  uint64_t v24 = *(void **)(v13 + 576);
  *(void *)unint64_t v18 = 0;
  *(void *)(v13 + 368) = 0;
  if ([v24 isDiscontinued])
  {
    id v20 = *(void **)(v13 + 1288);
    uint64_t v12 = *(char **)(v13 + 1280);
    uint64_t v25 = *(void *)(v13 + 1272);
    uint64_t v14 = *(void *)(v13 + 1264);
    uint64_t v15 = *(void *)(v13 + 576);
    sub_10006E490();
    sub_100056378();
    uint64_t v26 = *(void (**)(void))(v25 + 8);
    uint64_t v21 = v25 + 8;
    id v19 = v26;
    sub_100055B70();
    v26();
    sub_100057804();
    sub_100055B70();
    v26();
    self;
    uint64_t v27 = swift_dynamicCastObjCClass();
    *(void *)(v13 + 1984) = v27;
    if (v27)
    {
      sub_1000576B4();
      uint64_t v28 = v19;
      *(void *)(v13 + 1992) = sub_10006F170();
      sub_1000553EC();
      sub_10005533C();
LABEL_93:
      sub_100055194();
      _swift_task_switch(v139, v140, v141);
      return;
    }
  }
  uint64_t v201 = v13 + 360;
  uint64_t v229 = v13 + 400;
  if ([*(id *)(v13 + 576) isResidentCompatible])
  {
    sub_100057938();
    sub_100042D34(v12, v14);
    id v19 = (void (*)(void))v20[1];
    sub_10005527C();
    v19();
    ((void (*)(char *, uint64_t))v19)(v12, v15);
  }
  sub_100059150();
  id v29 = [v19 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
  sub_100058CA8();
  uint64_t v30 = sub_1000525E0(&qword_100082408, &qword_100082400);
  BOOL v31 = (void *)sub_100059A24(v30);

  sub_100016C7C((uint64_t)v31, (void (*)(void))&type metadata accessor for WFDeviceCapabilityResource);
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v226 = v33;
  if (sub_100066FFC(v33))
  {
    sub_100057518();
    if (v34 != v35)
    {
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
      goto LABEL_141;
    }
    uint64_t v36 = v230[132];
    sub_10006A5F4(v226);
    sub_100057080();
    uint64_t v17 = (void *)enum case for RuntimeRequirement.deviceCapability(_:);
    BOOL v31 = (void *)(v36 + 104);
    do
    {
      if (v18) {
        id v37 = *(id *)(v226 + 8 * v16 + 32);
      }
      else {
        sub_10006F620();
      }
      sub_1000575BC();
      sub_1000567F0();
      v38();
      uint64_t v21 = (uint64_t)sub_1000674EC;
      sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
      sub_1000591D8();
      sub_1000469EC();
    }
    while (v12 != (char *)v16);
  }
  id v39 = v230;
  unint64_t v40 = (id *)v230[72];
  swift_bridgeObjectRelease();
  sub_10006DF90();
  id v41 = [v40 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
  uint64_t v42 = sub_100059868();

  sub_100016C7C(v42, (void (*)(void))&type metadata accessor for WFFeatureFlagResource);
  sub_100059848();
  uint64_t v222 = sub_100066FFC(v40);
  if (v222)
  {
    if (v222 >= 1)
    {
      char v215 = sub_100059920();
      while (1)
      {
        if (v215) {
          id v43 = v40[4];
        }
        else {
          id v43 = (id)sub_10006F620();
        }
        uint64_t v44 = v43;
        sub_1000565AC();
        sub_100059ABC();
        char v45 = sub_10005996C();
        *BOOL v31 = v21;
        *(void *)(v218 + 8) = v18;
        *(void *)(v218 + 16) = v12;
        *(void *)(v218 + 24) = v16;
        *(unsigned char *)(v218 + 32) = v45 & 1;
        sub_1000551E8();
        v46();
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
        sub_100055C28(v230[50]);
        sub_100057D34();
      }
    }
    goto LABEL_140;
  }
  uint64_t v47 = (void *)v230[209];
  swift_bridgeObjectRelease();
  if (v47)
  {
    sub_100057054();
    id v48 = v47;
    v230[252] = sub_10006F170();
    sub_1000553EC();
    sub_10005533C();
    goto LABEL_93;
  }
  uint64_t v49 = sub_100046794(0);
  if (sub_10006A5EC(v49))
  {
    uint64_t v50 = (void *)sub_10004CDD8(v49);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v50 = &_swiftEmptySetSingleton;
  }
  uint64_t v231 = v50;
  uint64_t v51 = sub_100046794(0);
  if (sub_10006A5EC(v51)) {
    sub_10004CDD8(v51);
  }
  else {
    swift_bridgeObjectRelease();
  }
  uint64_t v52 = (void *)v230[72];
  sub_10006DF50();
  id v53 = [v52 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
  uint64_t v54 = (char *)sub_100059868();

  sub_100016C7C((uint64_t)v54, (void (*)(void))&type metadata accessor for WFDeviceIdiomResource);
  uint64_t v56 = v55;
  swift_bridgeObjectRelease();
  uint64_t v227 = (_UNKNOWN **)sub_100066FFC(v56);
  if (v227)
  {
    uint64_t v54 = (char *)v230[116];
    BOOL v223 = sub_100068F0C(v56);
    sub_1000599D8();
    int v219 = enum case for WFDeviceIdiomResource.Requirement.equalTo(_:);
    sub_100057F54(enum case for WFDeviceIdiomResource.Requirement.notEqualTo(_:));
    id v204 = (void (**)(void))(v54 + 8);
    unsigned int v211 = enum case for RuntimePlatform.macintosh(_:);
    while (1)
    {
      if (v223) {
        sub_100057B24();
      }
      else {
        sub_1000595A8();
      }
      sub_1000596D8();
      if (v35) {
        break;
      }
      sub_100059744();
      uint64_t v57 = sub_100058128();
      if (v58(v57) == v219)
      {
        uint64_t v59 = sub_100055288();
        v60(v59);
        sub_100055E64();
        uint64_t v63 = v211;
        switch(v64)
        {
          case 0:
          case 5:
            uint64_t v65 = v39[115];
            uint64_t v66 = v39[114];
            goto LABEL_44;
          case 1:
          case 2:
          case 3:
          case 4:
          case 6:
            uint64_t v54 = (char *)v39[121];
            uint64_t v70 = v230[115];
            uint64_t v71 = v230[114];
            sub_1000551E8();
            v72();
            sub_100007770(v71, 0, 1, v70);
            sub_10005524C();
            v73();
            sub_100055270();
            v74();
            sub_100059704();

            unint64_t v16 = (unint64_t)v204;
            uint64_t v75 = *v204;
            sub_100055240();
            v75();
            sub_100055240();
            v75();
            goto LABEL_47;
          default:
            goto LABEL_104;
        }
      }
      unint64_t v16 = v39[123];
      sub_100056B60();
      if (v191)
      {
        sub_100055574();
        v67();
        sub_100055E64();
        id v39 = v230;
        uint64_t v63 = v211;
        switch(v68)
        {
          case 0:
          case 5:
            uint64_t v65 = v230[115];
            uint64_t v66 = v230[113];
LABEL_44:
            sub_100056EB8(v61, v63, v62, v65);
            sub_100053404(v66, &qword_1000823D0);
            goto LABEL_47;
          case 1:
          case 2:
          case 3:
          case 4:
          case 6:
            uint64_t v76 = v230[121];
            unint64_t v77 = (char *)v230[120];
            unint64_t v16 = v230[115];
            uint64_t v78 = v230[113];
            sub_1000551E8();
            v79();
            sub_100007770(v78, 0, 1, v16);
            sub_10005524C();
            v80();
            sub_100055270();
            v81();
            sub_10004D554(v76, v77);

            uint64_t v54 = (char *)v204;
            uint64_t v82 = *v204;
            sub_10005527C();
            v82();
            uint64_t v83 = sub_100059C90();
            ((void (*)(uint64_t))v82)(v83);
            goto LABEL_47;
          default:
LABEL_104:
            sub_100055348();
            sub_10005738C();
            sub_1000559C8();
            sub_100055194();
            return;
        }
      }

      sub_1000551DC();
      v69();
      id v39 = v230;
LABEL_47:
      ++v18;
      if (WFResource_ptr == v227) {
        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
    goto LABEL_139;
  }
LABEL_48:
  uint64_t v84 = (void *)v39[72];
  swift_bridgeObjectRelease();
  id v85 = [v84 disabledOnPlatforms];
  sub_1000574C4();
  uint64_t v86 = sub_1000574AC();

  if (sub_10006A5EC(v86))
  {
    sub_100057C60();
    if (v34 != v35)
    {
LABEL_141:
      __break(1u);
      goto LABEL_142;
    }
    sub_100068F08(v86);
    sub_100057170();
    do
    {
      if (v21) {
        sub_100057B24();
      }
      else {
        sub_100047358(v18, v86);
      }
      sub_1000573B8();
      sub_10004D554((uint64_t)v39, v54);

      sub_100055228();
      v87();
    }
    while (WFResource_ptr != (_UNKNOWN **)v18);
  }
  swift_bridgeObjectRelease();
  uint64_t v88 = v231;
  if (v231[2]) {
    swift_bridgeObjectRetain();
  }
  else {
    sub_10006EA90();
  }
  uint64_t v89 = swift_bridgeObjectRetain();
  sub_100047F78(v89);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v90 = sub_100043434();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v220 = sub_10006A5EC(v90);
  if (v220)
  {
    if (v220 < 1)
    {
LABEL_142:
      __break(1u);
      goto LABEL_143;
    }
    uint64_t v91 = sub_100056A9C();
    sub_100056DA4(v91);
    sub_10005969C(enum case for RuntimeRequirement.platform(_:));
    do
    {
      if (v214)
      {
        uint64_t v92 = v230;
        sub_100055270();
        v93();
      }
      else
      {
        uint64_t v94 = sub_10005529C(v16, v90, (void (*)(void))&type metadata accessor for RuntimePlatform);
        if (v202 != 8) {
          goto LABEL_137;
        }
        uint64_t v92 = v230;
        v230[56] = v94;
        sub_100055270();
        v95();
        swift_unknownObjectRelease();
      }
      uint64_t v88 = (void *)v92[134];
      uint64_t v21 = v92[129];
      ++v16;
      sub_10005524C();
      v96();
      uint64_t v97 = sub_10006ED70();
      sub_100055A08(v97);
      sub_100055270();
      v98();
      sub_1000551E8();
      v99();
      sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
      sub_10005965C();
      sub_1000469EC();
      sub_1000551DC();
      v100();
    }
    while (v220 != v16);
  }
  uint64_t v101 = v230;
  swift_bridgeObjectRelease();
  uint64_t v102 = sub_10006F480();
  v230[57] = v102;
  uint64_t v103 = (void *)sub_100046794(0);
  uint64_t v224 = v102;
  if (sub_100059004((uint64_t)v103, (uint64_t)&OBJC_PROTOCOL___WFLinkActionProtocol))
  {
    uint64_t v88 = sub_100058B44();
    id v104 = [v230 + 59 backingActionIdentifiers];
    uint64_t v21 = sub_10006F0F0();

    uint64_t v105 = v206;
    id v106 = sub_100016FAC(v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v107 = sub_100026598((unint64_t)v106);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v230[58] = v107;
    uint64_t v103 = (void *)v107;
    uint64_t v102 = v224;
  }
  else
  {
    uint64_t v105 = v206;
  }
  if (!sub_100057898())
  {
    uint64_t v108 = sub_10006A5EC(v102);
    if (v108)
    {
      uint64_t v109 = v108;
      if (v108 < 1)
      {
LABEL_143:
        __break(1u);
        JUMPOUT(0x100036528);
      }
      sub_100056E58();
      sub_10005931C();
      sub_100056D68(enum case for SystemToolProtocol.assistantSchema(_:));
      swift_bridgeObjectRetain();
      uint64_t v110 = 0;
      sub_100058810((uint64_t)"SystemToolProtocol");
      do
      {
        if (v21)
        {
          uint64_t v113 = sub_100055F94();
          v114(v113);
        }
        else
        {
          uint64_t v115 = sub_10005872C(v111, v112, (void (*)(void))&type metadata accessor for SystemToolProtocol);
          if (v220 != 8) {
            goto LABEL_138;
          }
          uint64_t v116 = sub_100056950(v115);
          v117(v116);
          swift_unknownObjectRelease();
        }
        uint64_t v103 = (void *)v88[108];
        uint64_t v118 = sub_10005606C();
        v119(v118);
        uint64_t v120 = sub_100056138();
        v121(v120);
        sub_100059600();
        if (v191)
        {
          uint64_t v122 = sub_100055288();
          v123(v122);
          sub_10005524C();
          v124();
          uint64_t v125 = sub_10006EDA0();
          sub_10006ED90();
          sub_10005905C();
          sub_100059880();
          if (*(void *)(v125 + 16) && (sub_100068818(), (v126 & 1) != 0))
          {
            sub_1000114F0();
            v127();
            uint64_t v128 = 0;
          }
          else
          {
            uint64_t v128 = 1;
          }
          uint64_t v130 = v230[98];
          uint64_t v109 = v230[97];
          sub_100056DC8(v109, v128);
          sub_100007800(v109, 1, v130);
          uint64_t v88 = (void *)v230[103];
          sub_1000599E4();
          if (v191)
          {
            uint64_t v103 = (void *)v230[97];
            sub_1000551DC();
            v131();
            sub_100053404((uint64_t)v103, &qword_1000823C0);
          }
          else
          {
            uint64_t v109 = v230[98];
            sub_10005524C();
            v132();
            sub_10006E380();
            uint64_t v103 = v230 + 58;
            sub_10001A7C0();
            sub_1000551DC();
            v133();
            uint64_t v134 = sub_100058EE0();
            v135(v134);
          }
          sub_100059628();
        }
        else
        {
          sub_1000551DC();
          uint64_t v111 = v129();
        }
        ++v110;
      }
      while (v109 != v110);
      swift_bridgeObjectRelease();
      uint64_t v101 = v230;
    }
  }
  if (sub_10006A5EC(v230[58]))
  {
    uint64_t v88 = (void *)v101[107];
    sub_100055330();
    v136();
    uint64_t v103 = v101 + 57;
    sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006745C);
    sub_100055C28(v101[57]);
    sub_100057D34();
  }
  uint64_t v137 = (void *)v101[209];
  if (v137)
  {
    sub_10006F180();
    id v138 = v137;
    v101[255] = sub_10006F170();
    sub_10006F150();
    sub_10005533C();
    goto LABEL_93;
  }
  id v143 = v101 + 60;
  uint64_t v144 = v101 + 61;
  sub_1000075E8((void *)v101[72], (SEL *)&selRef_iconName);
  uint64_t v228 = v101 + 57;
  if (!v145)
  {
    uint64_t v151 = sub_1000075E8((void *)v101[72], (SEL *)&selRef_iconSymbolName);
    if (v152)
    {
      uint64_t v153 = (_OWORD *)v151;
      uint64_t v154 = v152;
      uint64_t v155 = sub_1000075E8((void *)v101[72], (SEL *)&selRef_iconBackgroundColorName);
      uint64_t v157 = v101;
      if (v156)
      {
        uint64_t v158 = v155;
        uint64_t v159 = v156;
        uint64_t v212 = v154;
        uint64_t v216 = v153;
        uint64_t v160 = (uint64_t)(v101 + 67);
        uint64_t v161 = [(id)v157[72] definition];
        if (v161)
        {
          uint64_t v144 = v161;
          uint64_t v153 = v157 + 34;
          id v162 = [v161 objectForKey:WFActionIconSymbolColorNameKey];

          if (v162)
          {
            sub_10006F4F0();
            swift_unknownObjectRelease();
          }
          else
          {
            *uint64_t v153 = 0u;
            *((_OWORD *)v157 + 18) = 0u;
          }
          sub_100053348((uint64_t)(v157 + 34), (uint64_t)(v157 + 38), &qword_100082450);
          if (v230[41])
          {
            uint64_t v188 = v230;
            if (sub_1000560FC())
            {
              sub_10006E400();
              goto LABEL_120;
            }
LABEL_119:
            sub_100055CCC(v188[90], v189, v190, v188[79]);
LABEL_120:
            sub_100059540();
            swift_bridgeObjectRelease();
            BOOL v191 = (uint64_t *)v158 == v143 && v159 == (void (*)(void))0xE400000000000000;
            if (v191 || (sub_100055554() & 1) != 0)
            {
              uint64_t v192 = sub_10005952C();
              sub_1000532F0(v192, v160, &qword_1000823A8);
              sub_100055CAC(v160);
              if (!v191)
              {
                uint64_t v194 = sub_100057BF8();
                sub_100053404(v194, &qword_1000823A8);
                swift_bridgeObjectRelease();
                char v195 = (void (*)(void))v144[4];
                sub_100056D38();
                v195();
                sub_100056D38();
                v195();
                uint64_t v101 = v188;
LABEL_135:
                id v198 = (void *)v101[96];
                sub_100055330();
                v199();
                sub_10000772C(&qword_100082460);
                *id v198 = v216;
                v198[1] = v212;
                sub_100058278();
                v200();
                goto LABEL_98;
              }
              sub_100053404(v188[89], &qword_1000823A8);
            }
            sub_100057238();
            sub_1000577CC();
            if (v191)
            {
              sub_1000551E8();
              v193();
              sub_100053404((uint64_t)v153, &qword_1000823A8);
            }
            else
            {
              sub_10005749C();
              v196();
            }
            sub_100053348(v230[90], v230[87], &qword_1000823A8);
            sub_100057794();
            if (v191)
            {
              sub_100055330();
              v197();
              sub_100053404((uint64_t)v153, &qword_1000823A8);
              sub_10005748C();
            }
            else
            {
              sub_100058978();
              v159();
            }
            sub_100058644();
            sub_10000772C(&qword_100082458);
            sub_100058494();
            v159();
            sub_1000588D4();
            v159();
            uint64_t v101 = v230;
            goto LABEL_135;
          }
        }
        else
        {
          sub_100058F10();
        }
        sub_100053404((uint64_t)(v157 + 38), &qword_100082450);
        uint64_t v188 = v230;
        goto LABEL_119;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10006E510();
    uint64_t v147 = sub_100059D10();
    goto LABEL_107;
  }
  sub_100059984();
  swift_bridgeObjectRelease();
  *uint64_t v103 = v105;
  v103[1] = v88;
LABEL_98:
  sub_10006E510();
  sub_1000551F4();
  sub_1000551E8();
  v146();
  sub_100056880();
LABEL_107:
  sub_100007770(v147, v148, v149, v150);
  uint64_t v213 = v101[209];
  uint64_t v217 = v101[254];
  uint64_t v205 = v101[194];
  uint64_t v207 = v101[162];
  uint64_t v208 = v101[157];
  uint64_t v163 = v101[96];
  uint64_t v209 = v101[77];
  uint64_t v210 = v101[234];
  sub_100056F60();
  uint64_t v203 = v164;
  sub_100057D80();
  id v165 = [v101 identifier];
  sub_10006F050();

  uint64_t v166 = swift_task_alloc();
  uint64_t v167 = (void *)sub_100058D1C(v166);
  v167[7] = v205;
  v167[8] = v163;
  v167[9] = v201;
  v167[10] = v207;
  v167[11] = v229;
  v167[12] = v208;
  v167[13] = v210;
  v167[14] = v203;
  v167[15] = v209;
  v167[16] = v228;
  sub_100056920((uint64_t)v167, v213);
  sub_100058E28();
  sub_10006E5D0();
  id v221 = (void *)v230[208];
  char v225 = (void *)v230[209];
  sub_100055E3C();
  if (v217)
  {
    uint64_t v168 = v230[96];
    sub_10005521C();
    v169();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_100053404(v168, &qword_1000823B8);
    sub_1000556D0();
    v170();
    sub_100055234();
    v171();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100055240();
    v172();
    swift_bridgeObjectRelease();
    sub_10005527C();
    v173();
    swift_bridgeObjectRelease();
    sub_100054FD4();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  else
  {
    sub_100054A3C();
    v174();

    swift_bridgeObjectRelease();
    uint64_t v175 = swift_task_dealloc();
    sub_100057300(v175, &qword_1000823B8);
    sub_100055228();
    v176();
    sub_1000553C4();
    v177();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100055234();
    v178();
    swift_bridgeObjectRelease();
    sub_100055C1C();
    v179();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001151C();
  }
  sub_100055194();
  v181(v180, v181, v182, v183, v184, v185, v186, v187, a9, a10, a11, a12);
}

uint64_t sub_100036560()
{
  sub_1000114D4();
  uint64_t v1 = (void *)v0[248];
  uint64_t v2 = (void *)v0[72];
  swift_release();
  v0[250] = [v1 metadata];

  sub_1000115E8();
  return _swift_task_switch(v3, v4, v5);
}

void sub_1000365E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1000553D0();
  sub_1000562A0();
  id v20 = *(void **)(v13 + 2000);
  id v21 = [v20 deprecationMetadata];

  if (v21)
  {
    id v22 = [v21 replacedByIntentIdentifier];
    uint64_t v15 = *(void **)(v13 + 576);
    if (v22)
    {
      uint64_t v14 = v22;
      id v20 = (void *)sub_10006F050();
      uint64_t v12 = v23;
    }
    else
    {

      id v20 = 0;
      uint64_t v12 = 0;
    }
    swift_bridgeObjectRelease();
    *(void *)(v13 + 360) = v20;
    *(void *)(v13 + 368) = v12;
  }
  else
  {
  }
  uint64_t v222 = v13 + 400;
  if ([*(id *)(v13 + 576) isResidentCompatible])
  {
    sub_100057938();
    sub_100042D34(v12, (uint64_t)v14);
    id v21 = (id)v20[1];
    sub_10005527C();
    ((void (*)(void))v21)();
    ((void (*)(char *, void *))v21)(v12, v15);
  }
  sub_100059150();
  id v24 = [v21 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
  sub_100058CA8();
  uint64_t v25 = sub_1000525E0(&qword_100082408, &qword_100082400);
  uint64_t v26 = (void *)sub_100059A24(v25);

  sub_100016C7C((uint64_t)v26, (void (*)(void))&type metadata accessor for WFDeviceCapabilityResource);
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  uint64_t v219 = v28;
  if (sub_100066FFC(v28))
  {
    sub_100057518();
    if (v29 != v30)
    {
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
      goto LABEL_141;
    }
    uint64_t v31 = v223[132];
    sub_10006A5F4(v219);
    sub_100057080();
    id v19 = (void *)enum case for RuntimeRequirement.deviceCapability(_:);
    uint64_t v26 = (void *)(v31 + 104);
    do
    {
      if (v17) {
        id v32 = *(id *)(v219 + 8 * v18 + 32);
      }
      else {
        sub_10006F620();
      }
      sub_1000575BC();
      sub_1000567F0();
      v33();
      uint64_t v16 = (uint64_t)sub_1000674EC;
      sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
      sub_1000591D8();
      sub_1000469EC();
    }
    while (v12 != (char *)v18);
  }
  char v34 = v223;
  char v35 = (id *)v223[72];
  swift_bridgeObjectRelease();
  sub_10006DF90();
  id v36 = [v35 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
  uint64_t v37 = sub_100059868();

  sub_100016C7C(v37, (void (*)(void))&type metadata accessor for WFFeatureFlagResource);
  sub_100059848();
  uint64_t v215 = sub_100066FFC(v35);
  if (v215)
  {
    if (v215 >= 1)
    {
      char v209 = sub_100059920();
      while (1)
      {
        if (v209) {
          id v38 = v35[4];
        }
        else {
          id v38 = (id)sub_10006F620();
        }
        id v39 = v38;
        sub_1000565AC();
        sub_100059ABC();
        char v40 = sub_10005996C();
        *uint64_t v26 = v16;
        *(void *)(v211 + 8) = v17;
        *(void *)(v211 + 16) = v12;
        *(void *)(v211 + 24) = v18;
        *(unsigned char *)(v211 + 32) = v40 & 1;
        sub_1000551E8();
        v41();
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
        sub_100055C28(v223[50]);
        sub_100057D34();
      }
    }
    goto LABEL_140;
  }
  uint64_t v42 = (void *)v223[209];
  swift_bridgeObjectRelease();
  if (v42)
  {
    sub_100057054();
    id v43 = v42;
    v223[252] = sub_10006F170();
    sub_1000553EC();
    sub_10005533C();
LABEL_93:
    sub_100055194();
    _swift_task_switch(v134, v135, v136);
    return;
  }
  uint64_t v44 = sub_100046794(0);
  if (sub_10006A5EC(v44))
  {
    char v45 = (uint64_t *)sub_10004CDD8(v44);
  }
  else
  {
    swift_bridgeObjectRelease();
    char v45 = (uint64_t *)&_swiftEmptySetSingleton;
  }
  uint64_t v224 = v45;
  uint64_t v46 = sub_100046794(0);
  if (sub_10006A5EC(v46)) {
    sub_10004CDD8(v46);
  }
  else {
    swift_bridgeObjectRelease();
  }
  uint64_t v47 = (void *)v223[72];
  sub_10006DF50();
  id v48 = [v47 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
  uint64_t v49 = (char *)sub_100059868();

  sub_100016C7C((uint64_t)v49, (void (*)(void))&type metadata accessor for WFDeviceIdiomResource);
  uint64_t v51 = v50;
  swift_bridgeObjectRelease();
  uint64_t v220 = (_UNKNOWN **)sub_100066FFC(v51);
  if (v220)
  {
    uint64_t v49 = (char *)v223[116];
    BOOL v216 = sub_100068F0C(v51);
    sub_1000599D8();
    int v212 = enum case for WFDeviceIdiomResource.Requirement.equalTo(_:);
    sub_100057F54(enum case for WFDeviceIdiomResource.Requirement.notEqualTo(_:));
    id v197 = (void (**)(void))(v49 + 8);
    unsigned int v205 = enum case for RuntimePlatform.macintosh(_:);
    while (1)
    {
      if (v216) {
        sub_100057B24();
      }
      else {
        sub_1000595A8();
      }
      sub_1000596D8();
      if (v30) {
        break;
      }
      sub_100059744();
      uint64_t v52 = sub_100058128();
      if (v53(v52) == v212)
      {
        uint64_t v54 = sub_100055288();
        v55(v54);
        sub_100055E64();
        uint64_t v58 = v205;
        switch(v59)
        {
          case 0:
          case 5:
            uint64_t v60 = v34[115];
            uint64_t v61 = v34[114];
            goto LABEL_44;
          case 1:
          case 2:
          case 3:
          case 4:
          case 6:
            uint64_t v49 = (char *)v34[121];
            uint64_t v65 = v223[115];
            uint64_t v66 = v223[114];
            sub_1000551E8();
            v67();
            sub_100007770(v66, 0, 1, v65);
            sub_10005524C();
            v68();
            sub_100055270();
            v69();
            sub_100059704();

            unint64_t v18 = (unint64_t)v197;
            uint64_t v70 = *v197;
            sub_100055240();
            v70();
            sub_100055240();
            v70();
            goto LABEL_47;
          default:
            goto LABEL_104;
        }
      }
      unint64_t v18 = v34[123];
      sub_100056B60();
      if (v184)
      {
        sub_100055574();
        v62();
        sub_100055E64();
        char v34 = v223;
        uint64_t v58 = v205;
        switch(v63)
        {
          case 0:
          case 5:
            uint64_t v60 = v223[115];
            uint64_t v61 = v223[113];
LABEL_44:
            sub_100056EB8(v56, v58, v57, v60);
            sub_100053404(v61, &qword_1000823D0);
            goto LABEL_47;
          case 1:
          case 2:
          case 3:
          case 4:
          case 6:
            uint64_t v71 = v223[121];
            uint64_t v72 = (char *)v223[120];
            unint64_t v18 = v223[115];
            uint64_t v73 = v223[113];
            sub_1000551E8();
            v74();
            sub_100007770(v73, 0, 1, v18);
            sub_10005524C();
            v75();
            sub_100055270();
            v76();
            sub_10004D554(v71, v72);

            uint64_t v49 = (char *)v197;
            unint64_t v77 = *v197;
            sub_10005527C();
            v77();
            uint64_t v78 = sub_100059C90();
            ((void (*)(uint64_t))v77)(v78);
            goto LABEL_47;
          default:
LABEL_104:
            sub_100055348();
            sub_10005738C();
            sub_1000559C8();
            sub_100055194();
            return;
        }
      }

      sub_1000551DC();
      v64();
      char v34 = v223;
LABEL_47:
      ++v17;
      if (WFResource_ptr == v220) {
        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
    goto LABEL_139;
  }
LABEL_48:
  unint64_t v79 = (void *)v34[72];
  swift_bridgeObjectRelease();
  id v80 = [v79 disabledOnPlatforms];
  sub_1000574C4();
  uint64_t v81 = sub_1000574AC();

  if (sub_10006A5EC(v81))
  {
    sub_100057C60();
    if (v29 != v30)
    {
LABEL_141:
      __break(1u);
      goto LABEL_142;
    }
    sub_100068F08(v81);
    sub_100057170();
    do
    {
      if (v16) {
        sub_100057B24();
      }
      else {
        sub_100047358(v17, v81);
      }
      sub_1000573B8();
      sub_10004D554((uint64_t)v34, v49);

      sub_100055228();
      v82();
    }
    while (WFResource_ptr != (_UNKNOWN **)v17);
  }
  swift_bridgeObjectRelease();
  uint64_t v83 = v224;
  if (v224[2]) {
    swift_bridgeObjectRetain();
  }
  else {
    sub_10006EA90();
  }
  uint64_t v84 = swift_bridgeObjectRetain();
  sub_100047F78(v84);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v85 = sub_100043434();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v213 = sub_10006A5EC(v85);
  if (v213)
  {
    if (v213 < 1)
    {
LABEL_142:
      __break(1u);
      goto LABEL_143;
    }
    uint64_t v86 = sub_100056A9C();
    sub_100056DA4(v86);
    sub_10005969C(enum case for RuntimeRequirement.platform(_:));
    do
    {
      if (v208)
      {
        uint64_t v87 = v223;
        sub_100055270();
        v88();
      }
      else
      {
        uint64_t v89 = sub_10005529C(v18, v85, (void (*)(void))&type metadata accessor for RuntimePlatform);
        if (v195 != 8) {
          goto LABEL_137;
        }
        uint64_t v87 = v223;
        v223[56] = v89;
        sub_100055270();
        v90();
        swift_unknownObjectRelease();
      }
      uint64_t v83 = (uint64_t *)v87[134];
      uint64_t v16 = v87[129];
      ++v18;
      sub_10005524C();
      v91();
      uint64_t v92 = sub_10006ED70();
      sub_100055A08(v92);
      sub_100055270();
      v93();
      sub_1000551E8();
      v94();
      sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
      sub_10005965C();
      sub_1000469EC();
      sub_1000551DC();
      v95();
    }
    while (v213 != v18);
  }
  char v96 = v223;
  swift_bridgeObjectRelease();
  uint64_t v97 = sub_10006F480();
  v223[57] = v97;
  uint64_t v98 = (void *)sub_100046794(0);
  uint64_t v217 = v97;
  if (sub_100059004((uint64_t)v98, (uint64_t)&OBJC_PROTOCOL___WFLinkActionProtocol))
  {
    uint64_t v83 = (uint64_t *)sub_100058B44();
    id v99 = [v223 + 59 backingActionIdentifiers];
    uint64_t v16 = sub_10006F0F0();

    uint64_t v100 = v199;
    uint64_t v101 = sub_100016FAC(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v102 = sub_100026598((unint64_t)v101);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v223[58] = v102;
    uint64_t v98 = (void *)v102;
    uint64_t v97 = v217;
  }
  else
  {
    uint64_t v100 = v199;
  }
  if (!sub_100057898())
  {
    uint64_t v103 = sub_10006A5EC(v97);
    if (v103)
    {
      uint64_t v104 = v103;
      if (v103 < 1)
      {
LABEL_143:
        __break(1u);
        JUMPOUT(0x1000381F0);
      }
      sub_100056E58();
      sub_10005931C();
      sub_100056D68(enum case for SystemToolProtocol.assistantSchema(_:));
      swift_bridgeObjectRetain();
      uint64_t v105 = 0;
      sub_100058810((uint64_t)"SystemToolProtocol");
      do
      {
        if (v16)
        {
          uint64_t v108 = sub_100055F94();
          v109(v108);
        }
        else
        {
          uint64_t v110 = sub_10005872C(v106, v107, (void (*)(void))&type metadata accessor for SystemToolProtocol);
          if (v213 != 8) {
            goto LABEL_138;
          }
          uint64_t v111 = sub_100056950(v110);
          v112(v111);
          swift_unknownObjectRelease();
        }
        uint64_t v98 = (void *)v83[108];
        uint64_t v113 = sub_10005606C();
        v114(v113);
        uint64_t v115 = sub_100056138();
        v116(v115);
        sub_100059600();
        if (v184)
        {
          uint64_t v117 = sub_100055288();
          v118(v117);
          sub_10005524C();
          v119();
          uint64_t v120 = sub_10006EDA0();
          sub_10006ED90();
          sub_10005905C();
          sub_100059880();
          if (*(void *)(v120 + 16) && (sub_100068818(), (v121 & 1) != 0))
          {
            sub_1000599F0(v83[97]);
            sub_1000114F0();
            v122();
            uint64_t v123 = 0;
          }
          else
          {
            uint64_t v123 = 1;
          }
          uint64_t v125 = v223[98];
          uint64_t v104 = v223[97];
          sub_100056DC8(v104, v123);
          sub_100007800(v104, 1, v125);
          uint64_t v83 = (uint64_t *)v223[103];
          sub_1000599E4();
          if (v184)
          {
            uint64_t v98 = (void *)v223[97];
            sub_1000551DC();
            v126();
            sub_100053404((uint64_t)v98, &qword_1000823C0);
          }
          else
          {
            uint64_t v104 = v223[98];
            sub_10005524C();
            v127();
            sub_10006E380();
            uint64_t v98 = v223 + 58;
            sub_10001A7C0();
            sub_1000551DC();
            v128();
            uint64_t v129 = sub_100058EE0();
            v130(v129);
          }
          sub_100059628();
        }
        else
        {
          sub_1000551DC();
          uint64_t v106 = v124();
        }
        ++v105;
      }
      while (v104 != v105);
      swift_bridgeObjectRelease();
      char v96 = v223;
    }
  }
  if (sub_10006A5EC(v223[58]))
  {
    uint64_t v83 = (uint64_t *)v96[107];
    sub_100055330();
    v131();
    uint64_t v98 = v96 + 57;
    sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006745C);
    sub_100055C28(v96[57]);
    sub_100057D34();
  }
  uint64_t v132 = (void *)v96[209];
  if (v132)
  {
    sub_10006F180();
    id v133 = v132;
    v96[255] = sub_10006F170();
    sub_10006F150();
    sub_10005533C();
    goto LABEL_93;
  }
  id v138 = v96 + 60;
  uint64_t v139 = v96 + 61;
  sub_1000075E8((void *)v96[72], (SEL *)&selRef_iconName);
  id v221 = v96 + 57;
  uint64_t v210 = v96 + 45;
  if (!v140)
  {
    uint64_t v146 = sub_1000075E8((void *)v96[72], (SEL *)&selRef_iconSymbolName);
    if (v147)
    {
      uint64_t v203 = v146;
      uint64_t v206 = v147;
      uint64_t v148 = sub_1000075E8((void *)v96[72], (SEL *)&selRef_iconBackgroundColorName);
      uint64_t v150 = v96;
      if (v149)
      {
        uint64_t v151 = v148;
        uint64_t v152 = v149;
        uint64_t v153 = (uint64_t)(v96 + 67);
        uint64_t v154 = [(id)v150[72] definition];
        if (v154)
        {
          uint64_t v139 = v154;
          uint64_t v83 = v150 + 34;
          id v155 = [v154 objectForKey:WFActionIconSymbolColorNameKey];

          if (v155)
          {
            sub_10006F4F0();
            swift_unknownObjectRelease();
          }
          else
          {
            *(_OWORD *)uint64_t v83 = 0u;
            *((_OWORD *)v150 + 18) = 0u;
          }
          sub_100053348((uint64_t)(v150 + 34), (uint64_t)(v150 + 38), &qword_100082450);
          if (v223[41])
          {
            uint64_t v181 = v223;
            if (sub_1000560FC())
            {
              sub_10006E400();
              goto LABEL_120;
            }
LABEL_119:
            sub_100055CCC(v181[90], v182, v183, v181[79]);
LABEL_120:
            sub_100059540();
            swift_bridgeObjectRelease();
            BOOL v184 = (uint64_t *)v151 == v138 && v152 == (void (*)(void))0xE400000000000000;
            if (v184 || (sub_100055554() & 1) != 0)
            {
              uint64_t v185 = sub_10005952C();
              sub_1000532F0(v185, v153, &qword_1000823A8);
              sub_100055CAC(v153);
              if (!v184)
              {
                uint64_t v187 = sub_100057BF8();
                sub_100053404(v187, &qword_1000823A8);
                swift_bridgeObjectRelease();
                uint64_t v188 = (void (*)(void))v139[4];
                sub_100056D38();
                v188();
                sub_100056D38();
                v188();
                char v96 = v181;
LABEL_135:
                BOOL v191 = (uint64_t *)v96[96];
                sub_100055330();
                v192();
                sub_10000772C(&qword_100082460);
                uint64_t *v191 = v203;
                v191[1] = v206;
                sub_100058278();
                v193();
                goto LABEL_98;
              }
              sub_100053404(v181[89], &qword_1000823A8);
            }
            sub_100057238();
            sub_1000577CC();
            if (v184)
            {
              sub_1000551E8();
              v186();
              sub_100053404((uint64_t)v83, &qword_1000823A8);
            }
            else
            {
              sub_10005749C();
              v189();
            }
            sub_100053348(v223[90], v223[87], &qword_1000823A8);
            sub_100057794();
            if (v184)
            {
              sub_100055330();
              v190();
              sub_100053404((uint64_t)v83, &qword_1000823A8);
              sub_10005748C();
            }
            else
            {
              sub_100058978();
              v152();
            }
            sub_100058644();
            sub_10000772C(&qword_100082458);
            sub_100058494();
            v152();
            sub_1000588D4();
            v152();
            char v96 = v223;
            goto LABEL_135;
          }
        }
        else
        {
          sub_100058F10();
        }
        sub_100053404((uint64_t)(v150 + 38), &qword_100082450);
        uint64_t v181 = v223;
        goto LABEL_119;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10006E510();
    uint64_t v142 = sub_100059D10();
    goto LABEL_107;
  }
  sub_100059984();
  swift_bridgeObjectRelease();
  void *v98 = v100;
  v98[1] = v83;
LABEL_98:
  sub_10006E510();
  sub_1000551F4();
  sub_1000551E8();
  v141();
  sub_100056880();
LABEL_107:
  sub_100007770(v142, v143, v144, v145);
  uint64_t v204 = v96[209];
  uint64_t v207 = v96[254];
  uint64_t v196 = v96[194];
  uint64_t v198 = v96[162];
  uint64_t v200 = v96[157];
  uint64_t v156 = v96[96];
  uint64_t v201 = v96[77];
  uint64_t v202 = v96[234];
  sub_100056F60();
  uint64_t v194 = v157;
  sub_100057D80();
  id v158 = [v96 identifier];
  sub_10006F050();

  uint64_t v159 = swift_task_alloc();
  uint64_t v160 = (void *)sub_100058D1C(v159);
  v160[7] = v196;
  v160[8] = v156;
  v160[9] = v210;
  v160[10] = v198;
  v160[11] = v222;
  v160[12] = v200;
  v160[13] = v202;
  v160[14] = v194;
  v160[15] = v201;
  v160[16] = v221;
  sub_100056920((uint64_t)v160, v204);
  sub_100058E28();
  sub_10006E5D0();
  char v214 = (void *)v223[208];
  uint64_t v218 = (void *)v223[209];
  sub_100055E3C();
  if (v207)
  {
    uint64_t v161 = v223[96];
    sub_10005521C();
    v162();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_100053404(v161, &qword_1000823B8);
    sub_1000556D0();
    v163();
    sub_100055234();
    v164();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100055240();
    v165();
    swift_bridgeObjectRelease();
    sub_10005527C();
    v166();
    swift_bridgeObjectRelease();
    sub_100054FD4();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  else
  {
    sub_100054A3C();
    v167();

    swift_bridgeObjectRelease();
    uint64_t v168 = swift_task_dealloc();
    sub_100057300(v168, &qword_1000823B8);
    sub_100055228();
    v169();
    sub_1000553C4();
    v170();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100055234();
    v171();
    swift_bridgeObjectRelease();
    sub_100055C1C();
    v172();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001151C();
  }
  sub_100055194();
  v174(v173, v174, v175, v176, v177, v178, v179, v180, a9, a10, a11, a12);
}

uint64_t sub_100038228()
{
  sub_1000114D4();
  uint64_t v1 = *(void **)(v0 + 1672);
  swift_release();
  *(void *)(v0 + 2024) = [v1 metadata];
  sub_1000115E8();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_1000382A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1000553D0();
  sub_1000562A0();
  if (!sub_10005210C(*(void **)(v12 + 2024)))
  {

    goto LABEL_16;
  }
  uint64_t v13 = *(void *)(v12 + 2008);
  uint64_t v14 = sub_10006EEF0();
  if (v13)
  {
    uint64_t v15 = *(void **)(v12 + 1672);
    uint64_t v16 = *(void **)(v12 + 1664);
    uint64_t v17 = *(void *)(v12 + 1520);
    uint64_t v146 = *(void *)(v12 + 1512);
    uint64_t v149 = *(void *)(v12 + 1552);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100055228();
    v18();
    sub_1000553C4();
    v19();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v149, v146);
    swift_release();
    swift_bridgeObjectRelease();
    sub_100055C1C();
    v20();
    swift_bridgeObjectRelease();
    sub_10005527C();
    v21();
    goto LABEL_78;
  }
  uint64_t v22 = v14;
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_10006A5EC(v22);
  if (!v23)
  {
    sub_100046794(0);
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v42 = *(void **)(v12 + 1672);
    sub_10001A7C0();

LABEL_16:
    id v43 = (void *)(v12 + 472);
    uint64_t v44 = sub_10006F480();
    *(void *)(v12 + 456) = v44;
    *(void *)(v12 + 464) = sub_100046794(0);
    *(void *)(v12 + 472) = &OBJC_PROTOCOL___WFLinkActionProtocol;
    uint64_t v45 = swift_dynamicCastObjCProtocolConditional();
    uint64_t v144 = v44;
    if (v45)
    {
      uint64_t v46 = (void *)v45;
      id v43 = *(id *)(v12 + 576);
      id v47 = [v46 backingActionIdentifiers];
      uint64_t v48 = sub_10006F0F0();

      uint64_t v49 = sub_100016FAC(v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_100026598((unint64_t)v49);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v12 + 464) = v50;
      uint64_t v44 = v144;
    }
    if (!sub_100057898())
    {
      uint64_t v25 = sub_10006A5EC(v44);
      if (v25)
      {
        id v43 = (void *)v25;
        if (v25 < 1) {
          goto LABEL_86;
        }
        uint64_t v51 = *(void *)(v12 + 848);
        uint64_t v52 = *(void *)(v12 + 816);
        int v53 = sub_100068F08(v44);
        int v156 = enum case for SystemToolProtocol.assistantSchema(_:);
        uint64_t v145 = (void (**)(uint64_t, uint64_t))(v52 + 8);
        swift_bridgeObjectRetain();
        unint64_t v54 = 0;
        sub_100058804();
        uint64_t v151 = v55;
        LODWORD(v148) = v53;
        do
        {
          if (v53)
          {
            sub_100055270();
            v56();
          }
          else
          {
            uint64_t v25 = sub_1000474C4(v54, v44, (void (*)(void))&type metadata accessor for SystemToolProtocol);
            if (v51 != 8) {
              goto LABEL_84;
            }
            *(void *)(v12 + 512) = v25;
            sub_100055270();
            v57();
            swift_unknownObjectRelease();
          }
          sub_10005524C();
          v58();
          uint64_t v59 = sub_1000568BC();
          if (v60(v59) == v156)
          {
            uint64_t v61 = sub_100055288();
            v62(v61);
            sub_100059B68();
            sub_10005524C();
            v63();
            sub_10006EDA0();
            sub_10006ED90();
            uint64_t v64 = sub_10006ED80();
            swift_release();
            if (*(void *)(v64 + 16) && (sub_100068818(), (v65 & 1) != 0))
            {
              sub_1000599F0(*(void *)(v12 + 776));
              sub_1000114F0();
              v66();
              uint64_t v67 = 0;
            }
            else
            {
              uint64_t v67 = 1;
            }
            uint64_t v69 = *(void *)(v12 + 784);
            uint64_t v70 = *(void *)(v12 + 776);
            sub_1000589A8(v70, v67);
            int v71 = sub_100007800(v70, 1, v69);
            uint64_t v72 = *(void *)(v12 + 824);
            uint64_t v73 = *(void *)(v12 + 808);
            if (v71 == 1)
            {
              uint64_t v74 = *(void *)(v12 + 776);
              sub_1000551DC();
              v75();
              sub_100053404(v74, &qword_1000823C0);
            }
            else
            {
              sub_10005524C();
              v76();
              sub_10006E380();
              sub_10001A7C0();
              uint64_t v44 = v144;
              sub_1000551DC();
              v77();
              (*v145)(v72, v73);
            }
            LOBYTE(v53) = v148;
          }
          else
          {
            sub_1000551DC();
            v68();
          }
          ++v54;
        }
        while (v43 != (void *)v54);
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v78 = v12 + 456;
    if (sub_10006A5EC(*(void *)(v12 + 464)))
    {
      sub_100057360();
      sub_100055330();
      v79();
      sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006745C);
      sub_1000560D4(*(void *)(v12 + 456));
      sub_1000576CC();
    }
    id v80 = *(void **)(v12 + 1672);
    if (v80)
    {
      sub_10006F180();
      id v81 = v80;
      *(void *)(v12 + 2040) = sub_10006F170();
      sub_1000553EC();
      sub_10005533C();
      sub_100057D4C();
      sub_100055194();
      return _swift_task_switch(v25, v26, v27);
    }
    uint64_t v83 = (void *)(v12 + 480);
    sub_1000075E8(*(void **)(v12 + 576), (SEL *)&selRef_iconName);
    if (v84)
    {
      sub_100056118();
      swift_bridgeObjectRelease();
      *uint64_t v83 = v43;
      *(void *)(v12 + 488) = 0;
      id v43 = (void *)enum case for ToolIcon.workflowAsset(_:);
      sub_10006E510();
      sub_1000551F4();
      sub_1000551E8();
      v85();
      sub_100056880();
LABEL_76:
      sub_100007770(v86, v87, v88, v89);
      sub_100058E74();
      uint64_t v117 = *(void *)(v12 + 1320);
      sub_100056978();
      uint64_t v118 = *(void *)(v12 + 600);
      sub_100057FE8();
      id v119 = [v43 identifier];
      sub_10006F050();

      uint64_t v120 = (void *)swift_task_alloc();
      v120[2] = v43;
      v120[3] = v117;
      v120[4] = v118;
      v120[5] = v78;
      char v121 = (void *)sub_100058324((uint64_t)v120);
      v121[9] = v12 + 360;
      v121[10] = v145;
      uint64_t v122 = sub_100056D14(v121);
      sub_100056920((uint64_t)v122, v148);
      sub_10006E5D0();
      uint64_t v157 = *(void **)(v12 + 1672);
      uint64_t v154 = *(void **)(v12 + 1664);
      sub_100055E3C();
      if (!v151)
      {
        sub_100057B74();
        sub_10005521C();
        v138();

        swift_bridgeObjectRelease();
        uint64_t v139 = swift_task_dealloc();
        sub_100057300(v139, &qword_1000823B8);
        sub_100055228();
        v140();
        sub_1000553C4();
        v141();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_100055234();
        v142();
        swift_bridgeObjectRelease();
        sub_100055C1C();
        v143();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        sub_10001151C();
        goto LABEL_79;
      }
      uint64_t v123 = *(void *)(v12 + 1272);
      uint64_t v150 = *(void *)(v12 + 1264);
      uint64_t v152 = *(void *)(v12 + 1296);
      uint64_t v124 = *(void *)(v12 + 768);
      sub_10005521C();
      v125();

      swift_bridgeObjectRelease();
      swift_task_dealloc();
      sub_100053404(v124, &qword_1000823B8);
      sub_100055228();
      v126();
      sub_1000556D0();
      v127();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      sub_100055234();
      v128();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v152, v150);
LABEL_78:
      swift_bridgeObjectRelease();
      sub_100055420();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_1000115DC();
LABEL_79:
      sub_100055194();
      return v130(v129, v130, v131, v132, v133, v134, v135, v136, a9, a10, a11, a12);
    }
    uint64_t v90 = sub_1000075E8(*(void **)(v12 + 576), (SEL *)&selRef_iconSymbolName);
    if (v91)
    {
      uint64_t v92 = v91;
      uint64_t v151 = v90;
      uint64_t v93 = sub_1000075E8(*(void **)(v12 + 576), (SEL *)&selRef_iconBackgroundColorName);
      if (v94)
      {
        uint64_t v95 = v93;
        uint64_t v96 = v94;
        uint64_t v78 = v12 + 536;
        uint64_t v97 = [*(id *)(v12 + 576) definition];
        if (v97)
        {
          uint64_t v83 = v97;
          id v98 = [v97 objectForKey:WFActionIconSymbolColorNameKey];

          if (v98)
          {
            sub_10006F4F0();
            swift_unknownObjectRelease();
          }
          else
          {
            *(_OWORD *)(v12 + 272) = 0u;
            *(_OWORD *)(v12 + 288) = 0u;
          }
          sub_100053348(v12 + 272, v12 + 304, &qword_100082450);
          if (*(void *)(v12 + 328))
          {
            if (swift_dynamicCast())
            {
              sub_100058858();
              goto LABEL_60;
            }
LABEL_59:
            sub_100055CCC(*(void *)(v12 + 720), v99, v100, *(void *)(v12 + 632));
LABEL_60:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            BOOL v101 = v95 == 1953392980 && v96 == 0xE400000000000000;
            if (v101 || (sub_100055554() & 1) != 0)
            {
              uint64_t v102 = sub_100058FBC();
              sub_1000532F0(v102, 1953392980, &qword_1000823A8);
              sub_100055EE0(1953392980, 1, (uint64_t)v83);
              if (!v101)
              {
                uint64_t v105 = *(void *)(v12 + 640);
                sub_100053404(*(void *)(v12 + 720), &qword_1000823A8);
                swift_bridgeObjectRelease();
                uint64_t v106 = *(void (**)(void))(v105 + 32);
                sub_1000571A4();
                sub_100056E1C();
                v106();
                sub_100056E1C();
                v106();
LABEL_75:
                id v43 = *(void **)(v12 + 768);
                sub_100055330();
                v114();
                sub_10000772C(&qword_100082460);
                *id v43 = v151;
                v43[1] = v92;
                sub_1000568D4();
                v115();
                sub_10006E510();
                sub_1000551F4();
                sub_1000551E8();
                v116();
                uint64_t v86 = sub_100059D7C();
                goto LABEL_76;
              }
              sub_100053404(*(void *)(v12 + 712), &qword_1000823A8);
            }
            uint64_t v103 = *(void *)(v12 + 704);
            sub_10006E400();
            sub_100055D1C();
            if (v101)
            {
              sub_1000551E8();
              v104();
              sub_100053404(v96, &qword_1000823A8);
            }
            else
            {
              sub_1000589D8();
              v107();
            }
            uint64_t v108 = sub_100057830();
            sub_100053348(v108, v96, &qword_1000823A8);
            uint64_t v109 = sub_100055D54();
            if (v101)
            {
              sub_100055330();
              v110();
              sub_100053404(v96, &qword_1000823A8);
              uint64_t v111 = *(void (**)(uint64_t, uint64_t))(v103 + 32);
            }
            else
            {
              uint64_t v111 = *(void (**)(uint64_t, uint64_t))(v103 + 32);
              v111(v109, v96);
            }
            sub_10000772C(&qword_100082458);
            uint64_t v112 = sub_100057804();
            ((void (*)(uint64_t))v111)(v112);
            uint64_t v113 = sub_10005959C();
            ((void (*)(uint64_t))v111)(v113);
            goto LABEL_75;
          }
        }
        else
        {
          *(_OWORD *)(v12 + 304) = 0u;
          *(_OWORD *)(v12 + 320) = 0u;
        }
        sub_100053404(v12 + 304, &qword_100082450);
        goto LABEL_59;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_100058FCC();
    sub_10006E510();
    uint64_t v86 = sub_100057780();
    goto LABEL_76;
  }
  uint64_t v24 = v23;
  uint64_t v25 = sub_10004668C(v23, (uint64_t (*)(void))sub_10006906C);
  if (v24 < 0) {
    goto LABEL_85;
  }
  uint64_t v28 = *(void *)(v12 + 1056);
  uint64_t v147 = *(void *)(v12 + 1024);
  uint64_t v29 = *(void *)(v12 + 1016);
  char v158 = sub_100068F08(v22);
  uint64_t v30 = 0;
  LODWORD(v151) = enum case for RuntimeRequirement.platform(_:);
  uint64_t v153 = (void (**)(void))(v29 + 16);
  uint64_t v155 = v24;
  unint64_t v148 = (v29 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  sub_100058804();
  uint64_t v145 = v31;
  while ((v158 & 1) != 0)
  {
    sub_1000568AC();
    uint64_t v33 = *(void (**)(void))(v32 + 16);
    sub_1000114F0();
    v33();
LABEL_12:
    uint64_t v37 = *(void *)(v12 + 1064);
    uint64_t v38 = *(void *)(v12 + 1048);
    ++v30;
    sub_100056E1C();
    v39();
    uint64_t v40 = sub_100059B5C();
    ((void (*)(uint64_t))v33)(v40);
    (*(void (**)(uint64_t, void, uint64_t))(v28 + 104))(v37, v151, v38);
    sub_100059578();
    sub_10005527C();
    v41();
    sub_10004EFF8((uint64_t (*)(void, uint64_t, uint64_t))sub_10006906C);
    sub_10004F06C(_swiftEmptyArrayStorage[2], (uint64_t (*)(BOOL))sub_10006906C);
    sub_10004F09C();
    if (v155 == v30)
    {
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
  }
  unint64_t v34 = sub_1000593A8();
  uint64_t v25 = sub_1000474C4(v34, v35, v36);
  if (v147 == 8)
  {
    *(void *)(v12 + 520) = v25;
    uint64_t v33 = *v153;
    sub_1000114F0();
    v33();
    swift_unknownObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
  return _swift_task_switch(v25, v26, v27);
}

uint64_t sub_100039AEC()
{
  sub_1000114D4();
  uint64_t v1 = *(void **)(v0 + 1672);
  swift_release();
  *(void *)(v0 + 2048) = [v1 metadata];

  sub_1000115E8();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_100039B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1000553D0();
  sub_1000562A0();
  id v15 = *(id *)(v13 + 2048);
  id v16 = [v15 descriptionMetadata];

  if (v16)
  {
    id v15 = [v16 icon];

    if (v15)
    {
      self;
      uint64_t v17 = (void *)swift_dynamicCastObjCClass();
      if (v17)
      {
        unint64_t v18 = v17;
        id v19 = [v17 bundleURL];
        if (v19)
        {
          uint64_t v14 = v19;
          uint64_t v22 = *(void *)(v13 + 744);
          uint64_t v23 = *(void *)(v13 + 736);
          uint64_t v24 = *(void *)(v13 + 728);
          sub_10006DDF0();

          uint64_t v26 = *(void (**)(void))(v22 + 32);
          uint64_t v12 = v22 + 32;
          uint64_t v25 = v26;
          sub_10005647C();
          v26();
          sub_100007770(v24, 0, 1, v23);
          sub_100055EE0(v24, 1, v23);
          if (!v78)
          {
            uint64_t v27 = *(uint64_t **)(v13 + 768);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_100057200();
            sub_10005647C();
            v25();
            uint64_t v111 = (char *)v27 + *(int *)(sub_10000772C(&qword_100082468) + 48);
            id v28 = [v18 name];
            uint64_t v29 = sub_10006F050();
            uint64_t v30 = v25;
            uint64_t v32 = v31;

            *uint64_t v27 = v29;
            v27[1] = v32;
            sub_10005647C();
            v30();
            uint64_t v33 = (unsigned int *)&enum case for ToolIcon.externalAsset(_:);
LABEL_12:
            id v15 = (id)*v33;
            sub_10006E510();
            sub_1000551F4();
            sub_1000551E8();
            v35();
            sub_100056880();
            goto LABEL_20;
          }
        }
        else
        {
          sub_100055CCC(*(void *)(v13 + 728), v20, v21, *(void *)(v13 + 736));
        }
        id v16 = *(id *)(v13 + 728);

        sub_100053404((uint64_t)v16, &qword_1000823B0);
      }
      else
      {
      }
    }
  }
  sub_1000075E8(*(void **)(v13 + 576), (SEL *)&selRef_iconName);
  if (v34)
  {
    sub_100056118();
    swift_bridgeObjectRelease();
    *uint64_t v14 = v15;
    v14[1] = v16;
    uint64_t v33 = (unsigned int *)&enum case for ToolIcon.workflowAsset(_:);
    goto LABEL_12;
  }
  uint64_t v40 = sub_1000075E8(*(void **)(v13 + 576), (SEL *)&selRef_iconSymbolName);
  if (v41)
  {
    uint64_t v12 = v40;
    id v15 = v41;
    uint64_t v42 = sub_1000075E8(*(void **)(v13 + 576), (SEL *)&selRef_iconBackgroundColorName);
    if (v43)
    {
      uint64_t v44 = v42;
      uint64_t v45 = v43;
      uint64_t v111 = (char *)v12;
      id v46 = [*(id *)(v13 + 576) definition];
      if (v46)
      {
        id v47 = v46;
        id v48 = [v46 objectForKey:WFActionIconSymbolColorNameKey];

        if (v48)
        {
          sub_10006F4F0();
          swift_unknownObjectRelease();
        }
        else
        {
          *(_OWORD *)(v13 + 272) = 0u;
          *(_OWORD *)(v13 + 288) = 0u;
        }
        sub_100053348(v13 + 272, v13 + 304, &qword_100082450);
        if (*(void *)(v13 + 328))
        {
          if (swift_dynamicCast())
          {
            sub_100058858();
            goto LABEL_33;
          }
LABEL_32:
          sub_100055CCC(*(void *)(v13 + 720), v76, v77, *(void *)(v13 + 632));
LABEL_33:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          BOOL v78 = v44 == 1953392980 && v45 == 0xE400000000000000;
          if (v78 || (sub_1000584F0(), (sub_100055554() & 1) != 0))
          {
            uint64_t v79 = *(void *)(v13 + 712);
            uint64_t v80 = *(void *)(v13 + 632);
            sub_1000532F0(*(void *)(v13 + 720), v79, &qword_1000823A8);
            sub_100055EE0(v79, 1, v80);
            if (!v78)
            {
              uint64_t v85 = *(void *)(v13 + 712);
              uint64_t v86 = *(void *)(v13 + 688);
              uint64_t v87 = *(void *)(v13 + 664);
              uint64_t v88 = *(void *)(v13 + 640);
              uint64_t v89 = *(void *)(v13 + 632);
              sub_100053404(*(void *)(v13 + 720), &qword_1000823A8);
              swift_bridgeObjectRelease();
              uint64_t v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32);
              v90(v87, v85, v89);
              v90(v86, v87, v89);
              uint64_t v91 = v111;
LABEL_48:
              uint64_t v105 = *(void **)(v13 + 768);
              uint64_t v106 = *(void *)(v13 + 680);
              sub_100055330();
              v107();
              sub_10000772C(&qword_100082460);
              *uint64_t v105 = v91;
              v105[1] = v15;
              uint64_t v12 = v106 + 32;
              sub_10005647C();
              v108();
              uint64_t v33 = (unsigned int *)&enum case for ToolIcon.symbol(_:);
              goto LABEL_12;
            }
            sub_100053404(*(void *)(v13 + 712), &qword_1000823A8);
          }
          uint64_t v81 = *(void *)(v13 + 704);
          uint64_t v82 = *(void *)(v13 + 632);
          sub_1000584F0();
          sub_10006E400();
          sub_100007800(v81, 1, v82);
          uint64_t v83 = *(void *)(v13 + 704);
          sub_100056168();
          if (v78)
          {
            sub_1000551E8();
            v84();
            sub_100053404(v83, &qword_1000823A8);
          }
          else
          {
            sub_10005749C();
            v92();
          }
          uint64_t v93 = *(void *)(v13 + 696);
          uint64_t v94 = *(void *)(v13 + 632);
          sub_100053348(*(void *)(v13 + 720), v93, &qword_1000823A8);
          int v95 = sub_100007800(v93, 1, v94);
          uint64_t v96 = *(void *)(v13 + 696);
          uint64_t v97 = *(void *)(v13 + 640);
          if (v95 == 1)
          {
            sub_100055330();
            v98();
            sub_100053404(v96, &qword_1000823A8);
            uint64_t v99 = *(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 32);
          }
          else
          {
            uint64_t v99 = *(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 32);
            v99(*(void *)(v13 + 648), *(void *)(v13 + 696), *(void *)(v13 + 632));
          }
          uint64_t v91 = v111;
          uint64_t v100 = *(void *)(v13 + 688);
          uint64_t v101 = *(void *)(v13 + 656);
          uint64_t v102 = *(void *)(v13 + 648);
          uint64_t v103 = *(void *)(v13 + 632);
          uint64_t v104 = v100 + *(int *)(sub_10000772C(&qword_100082458) + 48);
          v99(v100, v102, v103);
          v99(v104, v101, v103);
          goto LABEL_48;
        }
      }
      else
      {
        *(_OWORD *)(v13 + 304) = 0u;
        *(_OWORD *)(v13 + 320) = 0u;
      }
      sub_100053404(v13 + 304, &qword_100082450);
      goto LABEL_32;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_100058FCC();
  sub_10006E510();
  uint64_t v36 = sub_100057780();
LABEL_20:
  sub_100007770(v36, v37, v38, v39);
  sub_100058E74();
  uint64_t v49 = *(void *)(v13 + 1320);
  sub_100056978();
  uint64_t v50 = *(void *)(v13 + 600);
  sub_100057FE8();
  id v51 = [v15 identifier];
  sub_10006F050();

  uint64_t v52 = (void *)swift_task_alloc();
  v52[2] = v15;
  v52[3] = v49;
  v52[4] = v50;
  v52[5] = v12;
  int v53 = (void *)sub_100058324((uint64_t)v52);
  v53[9] = v13 + 360;
  v53[10] = v109;
  unint64_t v54 = sub_100056D14(v53);
  sub_100056920((uint64_t)v54, v110);
  sub_10006E5D0();
  uint64_t v112 = *(void **)(v13 + 1664);
  uint64_t v113 = *(void **)(v13 + 1672);
  sub_100055E3C();
  if (v111)
  {
    uint64_t v55 = *(void *)(v13 + 768);
    sub_10005521C();
    v56();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_100053404(v55, &qword_1000823B8);
    sub_100055228();
    v57();
    sub_1000556D0();
    v58();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100055234();
    v59();
    swift_bridgeObjectRelease();
    sub_100055240();
    v60();
    swift_bridgeObjectRelease();
    sub_100059764();
    sub_100055420();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1000115DC();
  }
  else
  {
    sub_100057B74();
    sub_10005521C();
    v61();

    swift_bridgeObjectRelease();
    uint64_t v62 = swift_task_dealloc();
    sub_100057300(v62, &qword_1000823B8);
    sub_100055228();
    v63();
    sub_1000553C4();
    v64();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100055234();
    v65();
    swift_bridgeObjectRelease();
    sub_100055C1C();
    v66();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001151C();
  }
  sub_100055194();
  return v68(v67, v68, v69, v70, v71, v72, v73, v74, a9, a10, a11, a12);
}

void sub_10003AC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1000553D0();
  sub_1000562A0();
  uint64_t v14 = *(void (***)(void))(v13 + 1832);
  sub_1000584C0();
  uint64_t v15 = sub_100055E70();
  *(void *)(v15 + 16) = v12;
  uint64_t v16 = v15;
  v384 = (void (**)(void))v15;
  uint64_t v17 = sub_100055E70();
  *(void *)(v17 + 16) = v14;
  uint64_t v18 = v17;
  uint64_t v387 = (void (**)(void))v17;
  id v19 = v12;
  swift_errorRetain();
  id v20 = v19;
  uint64_t v391 = v14;
  swift_errorRetain();
  uint64_t v390 = sub_10006E350();
  sub_10006F310();
  uint64_t v380 = sub_100055258();
  *(unsigned char *)(v380 + 16) = 64;
  uint64_t v21 = sub_100055258();
  sub_100058410(v21);
  uint64_t v22 = sub_100055204();
  *(void *)(v22 + 16) = sub_100052CC8;
  *(void *)(v22 + 24) = v16;
  uint64_t v23 = sub_100055204();
  *(void *)(v23 + 16) = sub_1000545CC;
  *(void *)(v23 + 24) = v22;
  uint64_t v24 = sub_100055258();
  *(unsigned char *)(v24 + 16) = 64;
  uint64_t v25 = sub_100055258();
  *(unsigned char *)(v25 + 16) = v13;
  uint64_t v26 = sub_100055204();
  *(void *)(v26 + 16) = sub_100052D00;
  *(void *)(v26 + 24) = v18;
  uint64_t v27 = (void *)sub_100055204();
  v27[2] = sub_100052D44;
  v27[3] = v26;
  id v28 = (void *)sub_100055204();
  v28[2] = sub_100052D4C;
  v28[3] = v27;
  sub_10000772C((uint64_t *)&unk_100082390);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000716D0;
  *(void *)(inited + 32) = sub_100054620;
  *(void *)(inited + 40) = v380;
  *(void *)(inited + 48) = sub_100054620;
  *(void *)(inited + 56) = v21;
  *(void *)(inited + 64) = sub_100052D34;
  *(void *)(inited + 72) = v23;
  *(void *)(inited + 80) = sub_100054620;
  *(void *)(inited + 88) = v24;
  *(void *)(inited + 96) = sub_100054620;
  *(void *)(inited + 104) = v25;
  *(void *)(inited + 112) = sub_1000545D0;
  *(void *)(inited + 120) = v28;
  swift_retain();
  HIDWORD(v373) = HIDWORD(v22);
  swift_retain();
  unint64_t v30 = v21;
  swift_retain();
  swift_retain();
  char v377 = (char)v27;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  char v374 = v25;
  swift_retain();
  uint64_t v372 = v28;
  swift_retain();
  swift_bridgeObjectRelease();
  if (sub_1000590BC())
  {
    sub_10005709C();
    uint64_t v31 = (void *)sub_1000573E4();
    sub_1000571B0();
    swift_release();
    *(unsigned char *)(inited + 3) = 8;
    swift_release();
    *(void *)(v393 + 552) = v27;
    unint64_t v30 = v27;
    sub_10006F4D0();
    *uint64_t v31 = v27;
    swift_release();
    swift_release();
    swift_release();

    uint64_t v32 = v391;
    *(unsigned char *)(inited + 12) = 64;
    swift_release();
    *(unsigned char *)(inited + 13) = 8;
    swift_release();
    uint64_t v25 = inited + 14;
    swift_errorRetain();
    uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v393 + 560) = v33;
    sub_10006F4D0();
    v31[1] = v33;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_errorRelease();
    sub_1000583EC((void *)&_mh_execute_header, v34, v35, "Failed to index action parameter: %@ due to %@");
    sub_10000772C(&qword_100082350);
    swift_arrayDestroy();
    sub_10001153C();
    sub_10001153C();

    uint64_t v36 = *(void **)(v393 + 1800);
  }
  else
  {
    uint64_t v32 = *(void (***)(void))(v393 + 1800);

    swift_errorRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v36 = (void *)v390;
  }
  sub_10005924C();

  uint64_t v37 = (uint64_t)(v32 + 1);
  sub_100011784();
  v38();
  uint64_t v39 = (uint64_t *)&type metadata for Any;
  if (*(void *)(v393 + 1808) != *(void *)(v393 + 1712))
  {
    sub_100056D44();
    while (1)
    {
      uint64_t v40 = sub_100058774();
      if (v25 == 1) {
        uint64_t v41 = (uint64_t)sub_100056DF8(v40, *(void *)(v393 + 1704));
      }
      else {
        uint64_t v41 = sub_10006F620();
      }
      uint64_t v42 = v41;
      sub_1000595C0(v41);
      *(void *)(v393 + 1808) = v43;
      if (v44)
      {
LABEL_234:
        __break(1u);
LABEL_235:
        sub_100055348();
        sub_10005738C();
LABEL_130:
        sub_1000559C8();
        sub_100055194();
        return;
      }
      self;
      if (!swift_dynamicCastObjCClass()) {
        break;
      }

      sub_100057350();
      if (v114) {
        goto LABEL_13;
      }
    }
    *id v28 = sub_100046794(0);
    id v102 = [(id)v42 resourceManager];
    sub_10001028C(0, &qword_1000823F8);
    id v103 = [v102 resourceObjectsOfClass:swift_getObjCClassFromMetadata()];

    if (!v103) {
      goto LABEL_279;
    }
    sub_100058C8C();
    sub_1000525E0(&qword_100082408, &qword_100082400);
    uint64_t v104 = sub_100058BD8();

    sub_100016668(v104);
    uint64_t v106 = v105;
    swift_bridgeObjectRelease();
    uint64_t v368 = sub_100066FFC(v106);
    if (!v368)
    {
LABEL_124:
      swift_bridgeObjectRelease();
      unint64_t v187 = swift_bridgeObjectRetain();
      id v188 = sub_100017390(v187);
      swift_bridgeObjectRelease();
      if (!v188) {
        id v188 = [*(id *)(v393 + 1680) defaultContext];
      }
      *(void *)(v393 + 1816) = v188;
      uint64_t v189 = (void *)swift_task_alloc();
      *(void *)(v393 + 1824) = v189;
      void *v189 = v393;
      v189[1] = sub_10002F798;
      sub_100057854();
      sub_100055194();
      WFParameter.toolkitTypeDefinition(for:localizationContext:)(v190, v191, v192, v193, v194, v195, v196, v197, a9, a10, a11, a12);
      return;
    }
    uint64_t v107 = sub_10006A5F4(v106);
    sub_100056B78(v107);
    while (1)
    {
      sub_10005911C();
      if (v37) {
        id v108 = *(id *)(v365 + 8 * v25);
      }
      else {
        id v108 = (id)sub_10006F620();
      }
      BOOL v44 = __OFADD__(v25++, 1);
      if (v44) {
        goto LABEL_271;
      }
      uint64_t v370 = v25;
      uint64_t v37 = *(void *)(v393 + 1696);
      uint64_t v375 = v108;
      id v109 = [v108 parameterKey];
      sub_10006F050();
      uint64_t v111 = v110;

      if (!*(void *)(v37 + 16)) {
        break;
      }
      uint64_t v104 = *(void *)(v393 + 1696);
      sub_10006F820();
      sub_10006F090();
      sub_10006F840();
      sub_1000569A0();
      if ((v112 & 1) == 0) {
        break;
      }
      sub_100056FE4();
      BOOL v114 = v114 && v113 == v111;
      if (!v114 && (sub_100057154() & 1) == 0)
      {
        LOBYTE(v37) = ~(_BYTE)v37;
        do
        {
          sub_1000566D0();
          if ((v115 & 1) == 0) {
            goto LABEL_65;
          }
          sub_100056FE4();
          BOOL v117 = v114 && v116 == v111;
        }
        while (!v117 && (sub_100057154() & 1) == 0);
        swift_bridgeObjectRelease();

        goto LABEL_104;
      }
      swift_bridgeObjectRelease();

LABEL_103:
      uint64_t v25 = v370;
LABEL_104:
      if (v25 == v368) {
        goto LABEL_124;
      }
    }
LABEL_65:
    swift_bridgeObjectRelease();
    id v118 = [v375 comparedValues];
    uint64_t v119 = sub_10006F0F0();

    uint64_t v37 = (uint64_t)sub_1000169B4(v119, (id)v42);
    swift_bridgeObjectRelease();
    unint64_t v120 = sub_100059F54(v37);
    uint64_t v121 = sub_100052038(&qword_100082410, (void (*)(uint64_t))&type metadata accessor for TypedValue);
    uint64_t v122 = sub_10005759C(v121);
    if (sub_10006A5EC(v37))
    {
      sub_100058AFC();
      if (v123 != v44) {
        goto LABEL_273;
      }
      uint64_t v124 = sub_100068F08(v37);
      sub_10005926C(v124);
      while (1)
      {
        if (v377)
        {
          sub_1000114F0();
          v126();
        }
        else
        {
          uint64_t v37 = *(void *)(v119 + 1432);
          uint64_t v127 = sub_100055504(v120, v125, (void (*)(void))&type metadata accessor for TypedValue);
          if (v37 != 8) {
            goto LABEL_269;
          }
          *(void *)(v119 + 424) = v127;
          sub_1000114F0();
          v128();
          swift_unknownObjectRelease();
        }
        uint64_t v129 = *(void *)(v119 + 1456);
        unint64_t v120 = *(void *)(v119 + 1416);
        sub_100055548();
        v130();
        uint64_t v131 = v119;
        swift_bridgeObjectRetain();
        sub_10006EFF0();
        sub_1000564D0();
        if (v132)
        {
          uint64_t v122 = *(void *)(*(void *)(v119 + 1424) + 72);
          while (1)
          {
            unint64_t v120 = *(void *)(v131 + 1440);
            uint64_t v133 = *(void *)(v131 + 1424);
            uint64_t v119 = *(void *)(v131 + 1416);
            sub_1000114F0();
            v134();
            sub_100052038(&qword_100082418, (void (*)(uint64_t))&type metadata accessor for TypedValue);
            uint64_t v129 = sub_1000561CC();
            uint64_t v131 = *(void *)(v133 + 8);
            sub_100055240();
            ((void (*)(void))v131)();
            if (v129) {
              break;
            }
            sub_100057134();
            if ((v135 & 1) == 0) {
              goto LABEL_76;
            }
          }
          sub_100058DBC();
          sub_100055240();
          ((void (*)(void))v131)();
        }
        else
        {
LABEL_76:
          sub_100056690();
          uint64_t v104 = v129 + 16;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v119 = v393;
          sub_100056C6C();
          v137();
          *(void *)(v393 + 392) = v37;
          if (*(void *)(v37 + 24) <= *(void *)(v37 + 16))
          {
            if (isUniquelyReferenced_nonNull_native) {
              sub_1000496D0();
            }
            else {
              sub_10004B82C();
            }
            sub_100057F30();
            sub_1000567A0();
            if (v138)
            {
              do
              {
                uint64_t v139 = sub_100056390();
                v140(v139);
                sub_100052038(&qword_100082418, (void (*)(uint64_t))&type metadata accessor for TypedValue);
                char v141 = sub_1000561CC();
                v37 += 8;
                sub_100011784();
                v142();
                if (v141)
                {
                  sub_100055194();
                  sub_10006F7B0();
                  return;
                }
                sub_1000570F4();
              }
              while ((v143 & 1) != 0);
            }
          }
          else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_10004ACEC();
          }
          uint64_t v122 = *(void *)(v393 + 392);
          *(void *)(v122 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v30;
          sub_100055548();
          v144();
          uint64_t v145 = *(void *)(v122 + 16);
          BOOL v44 = __OFADD__(v145, 1);
          uint64_t v146 = v145 + 1;
          if (v44)
          {
            __break(1u);
LABEL_269:
            __break(1u);
LABEL_270:
            __break(1u);
LABEL_271:
            __break(1u);
LABEL_272:
            __break(1u);
LABEL_273:
            __break(1u);
LABEL_274:
            __break(1u);
LABEL_275:
            __break(1u);
LABEL_276:
            __break(1u);
LABEL_277:
            __break(1u);
LABEL_278:
            __break(1u);
LABEL_279:

            __break(1u);
            JUMPOUT(0x10003E228);
          }
          sub_100058214(v146);
          uint64_t v147 = sub_100059518();
          v148(v147);
        }
        sub_1000592BC();
        if (v114) {
          goto LABEL_92;
        }
      }
    }
    uint64_t v119 = v393;
LABEL_92:
    swift_bridgeObjectRelease();
    id v149 = [v375 relation];
    uint64_t v150 = sub_10006F050();
    uint64_t v152 = v151;
    if (v150 == sub_10006F050() && v152 == v153)
    {
      uint64_t v104 = v122;
      sub_100057758();
    }
    else
    {
      char v155 = sub_100057570();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v155 & 1) == 0)
      {
        uint64_t v37 = *(void *)(v393 + 1728);
        id v156 = v149;
        id v157 = (id)v37;
        char v158 = sub_100055F34();

        if (v158)
        {
          sub_100055DA8();
          swift_bridgeObjectRelease();
LABEL_101:
          sub_100059AE8();
LABEL_102:
          sub_10005658C();
          v159();
          sub_100057EA8();
          uint64_t v104 = (uint64_t)v375;
          id v160 = [v375 parameterKey];
          sub_10006F050();
          unint64_t v30 = v161;

          sub_1000114F0();
          v162();
          sub_1000586F8();
          sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006757C);
          sub_10005909C();
          sub_1000469EC();

          LOBYTE(v37) = v37 + 8;
          sub_100011784();
          v163();
          uint64_t v42 = 6;
          goto LABEL_103;
        }
        uint64_t v37 = *(void *)(v393 + 1736);
        id v164 = v156;
        id v165 = (id)v37;
        uint64_t v119 = sub_100055F34();

        if ((v119 & 1) == 0)
        {
          uint64_t v37 = *(void *)(v393 + 1744);
          id v166 = v164;
          id v167 = (id)v37;
          uint64_t v168 = sub_100055F34();

          if ((v168 & 1) == 0)
          {
            uint64_t v37 = *(void *)(v393 + 1752);
            id v169 = v166;
            id v170 = (id)v37;
            uint64_t v171 = sub_100055F34();

            if ((v171 & 1) == 0)
            {
              uint64_t v37 = *(void *)(v393 + 1760);
              id v172 = v169;
              id v173 = (id)v37;
              uint64_t v168 = sub_100055F34();

              if (v168) {
                goto LABEL_110;
              }
              uint64_t v37 = *(void *)(v393 + 1768);
              id v174 = v172;
              id v175 = (id)v37;
              uint64_t v171 = sub_100055F34();

              if ((v171 & 1) == 0)
              {
                id v176 = *(id *)(v393 + 1776);
                char v177 = sub_100055F34();

                uint64_t v37 = *(void *)(v393 + 1392);
                if (v177)
                {
                  sub_100058FF0();
                }
                else
                {
                  swift_bridgeObjectRelease();
                  LOBYTE(v37) = v37 + 104;
                }
                goto LABEL_102;
              }
            }
            sub_100055DA8();
            *(void *)uint64_t v171 = v104;
            *(unsigned char *)(v171 + 8) = 1;
            goto LABEL_101;
          }
LABEL_110:
          sub_100055DA8();
          *(void *)uint64_t v168 = v104;
          *(unsigned char *)(v168 + 8) = 0;
          goto LABEL_101;
        }
      }
    }
    sub_100055DA8();
    *(void *)uint64_t v119 = v104;
    goto LABEL_101;
  }
LABEL_13:
  sub_100056BF0();
  swift_bridgeObjectRelease();
  sub_100052038(&qword_100082420, (void (*)(uint64_t))&type metadata accessor for ToolFlag);
  sub_100059044();
  *(void *)(v393 + 400) = sub_100046794(0);
  unint64_t v45 = swift_allocBox();
  sub_100057988(v45, v46);
  *(void *)(v393 + 408) = sub_100046794(0);
  sub_100052038(&qword_100082428, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
  sub_10000772C(&qword_100082430);
  sub_100052D74();
  sub_100056E28();
  uint64_t v378 = sub_10006E3B0();
  uint64_t v381 = v25;
  uint64_t v376 = sub_10006A5EC(v378);
  if (!v376)
  {
LABEL_37:
    sub_1000571E4();
    sub_10006E280();
    uint64_t v69 = sub_100055E70();
    *(void *)(v69 + 16) = v37;
    uint64_t v70 = v69;
    uint64_t v71 = sub_100055204();
    *(void *)(v71 + 16) = sub_100052DC8;
    *(void *)(v71 + 24) = v366;
    id v72 = (id)v37;
    swift_retain_n();
    id v73 = v72;
    uint64_t v392 = (void *)sub_10006E350();
    LODWORD(v373) = sub_10006F300();
    uint64_t v74 = (unsigned char *)sub_100055258();
    v74[16] = 32;
    uint64_t v75 = sub_100055258();
    sub_100058410(v75);
    uint64_t v76 = sub_100055204();
    *(void *)(v76 + 16) = sub_10005461C;
    *(void *)(v76 + 24) = v70;
    uint64_t v77 = sub_100055204();
    *(void *)(v77 + 16) = sub_100052DE0;
    *(void *)(v77 + 24) = v76;
    uint64_t v78 = sub_100055258();
    *(unsigned char *)(v78 + 16) = 32;
    uint64_t v79 = sub_100055258();
    *(unsigned char *)(v79 + 16) = v37;
    uint64_t v80 = sub_100055204();
    *(void *)(v80 + 16) = sub_100052DD0;
    *(void *)(v80 + 24) = v71;
    uint64_t v81 = (void *)sub_100055204();
    v81[2] = sub_1000545C8;
    v81[3] = v80;
    sub_10000772C((uint64_t *)&unk_100082390);
    uint64_t v82 = swift_initStackObject();
    *(_OWORD *)(v82 + 16) = xmmword_1000716D0;
    *(void *)(v82 + 32) = sub_100054620;
    *(void *)(v82 + 40) = v74;
    *(void *)(v82 + 48) = sub_100054620;
    *(void *)(v82 + 56) = v75;
    *(void *)(v82 + 64) = sub_1000545D4;
    *(void *)(v82 + 72) = v77;
    *(void *)(v82 + 80) = sub_100054620;
    *(void *)(v82 + 88) = v78;
    *(void *)(v82 + 96) = sub_100054620;
    *(void *)(v82 + 104) = v79;
    *(void *)(v82 + 112) = sub_1000545D4;
    *(void *)(v82 + 120) = v81;
    swift_retain();
    LOBYTE(v379) = v76;
    swift_retain();
    swift_retain();
    uint64_t v383 = v80;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v83 = (char **)v79;
    swift_retain();
    swift_retain();
    uint64_t v385 = v81;
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v84 = &selRef_parameterKey;
    if (sub_100056824((os_log_type_t)v373))
    {
      uint64_t v82 = sub_100055968();
      unint64_t v85 = sub_10005703C();
      sub_1000570C8(v85);
      *(unsigned char *)(v82 + 3) = 8;
      swift_release();
      id v86 = sub_100059184();
      uint64_t v87 = sub_10006F050();
      unint64_t v89 = v88;

      uint64_t v90 = sub_100046AE8(v87, v89, v394);
      sub_1000580EC(v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();

      *(unsigned char *)(v82 + 12) = 32;
      swift_release();
      *(unsigned char *)(v82 + 13) = 8;
      swift_release();
      uint64_t v84 = (char **)(v82 + 14);
      sub_100055CE4();
      uint64_t v77 = v367;
      sub_1000114F0();
      v91();
      sub_100052038(&qword_100082448, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
      uint64_t v92 = (void *)sub_10006F750();
      uint64_t v75 = v93;
      sub_100055228();
      v94();
      uint64_t v95 = sub_100058378();
      sub_1000580C8(v95);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_10005979C();
      sub_100058A7C((void *)&_mh_execute_header, v96, v97, "%s: Visibility flags: %s");
      sub_100057D9C();
      sub_10001153C();
      sub_10001153C();

      sub_1000551DC();
      v98();
    }
    else
    {
      sub_1000578CC();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_10005979C();

      sub_100011784();
      v99();
      uint64_t v81 = (void *)v79;
    }
    uint64_t v100 = (char *)v81[209];
    if (v100)
    {
      uint64_t v101 = sub_10006F180();
      sub_100058CD4(v101);
      v81[236] = sub_10006F170();
      sub_1000553EC();
      sub_10005533C();
LABEL_223:
      sub_100055194();
      _swift_task_switch(v306, v307, v308);
      return;
    }
    [(id)sub_100055FEC() requiresUnlock];
    uint64_t v178 = sub_100056598();
    if (v180)
    {
      sub_10005708C();
      sub_100058B28();
      v181();
      sub_10006EB80();
      sub_1000551F4();
      sub_1000551E8();
      v182();
      uint64_t v183 = sub_100056004();
      v184(v183);
      uint64_t v100 = (char *)v82;
      sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
      sub_100057C88();
      sub_1000469EC();
    }
    else
    {
      v179(v178, enum case for ToolAuthenticationPolicy.none(_:));
    }
    if (sub_10005665C((uint64_t)&OBJC_PROTOCOL___WFLinkActionProtocol))
    {
      sub_1000563C0();
      sub_100055330();
    }
    else
    {
      sub_100058024();
      self;
      sub_100056938();
      sub_100056058();
      sub_100058018();
    }
    v186();
    if ([(id)sub_100058DF8() isDiscontinued])
    {
      sub_100056714();
      sub_100056378();
      uint64_t v199 = (void (*)(void))v84[1];
      ++v84;
      uint64_t v100 = (char *)v199;
      sub_100055234();
      v199();
      sub_100055234();
      v199();
      self;
      uint64_t v200 = swift_dynamicCastObjCClass();
      *(void *)(v393 + 1984) = v200;
      if (v200)
      {
        sub_1000576B4();
        uint64_t v201 = v100;
        *(void *)(v393 + 1992) = sub_10006F170();
        sub_1000553EC();
        sub_10005533C();
        goto LABEL_223;
      }
    }
    if ([(id)sub_100057FB8() isResidentCompatible])
    {
      sub_100056FF4();
      sub_100056378();
      uint64_t v100 = v84[1];
      sub_100055234();
      ((void (*)(void))v100)();
      uint64_t v202 = sub_100059DD4();
      ((void (*)(uint64_t))v100)(v202);
    }
    sub_1000566F8();
    id v203 = [v100 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
    sub_10001028C(0, &qword_100082400);
    uint64_t v204 = sub_1000525E0(&qword_100082408, &qword_100082400);
    uint64_t v205 = sub_100057550(v204);

    sub_100016C7C(v205, (void (*)(void))&type metadata accessor for WFDeviceCapabilityResource);
    uint64_t v207 = v206;
    swift_bridgeObjectRelease();
    if (sub_10005817C())
    {
      sub_100057518();
      if (v123 != v44) {
        goto LABEL_274;
      }
      sub_100056A3C();
      sub_100057080();
      do
      {
        if (v82) {
          sub_100056774();
        }
        else {
          sub_100058714();
        }
        sub_100057688();
        sub_10005658C();
        v208();
        uint64_t v207 = v392;
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
        sub_100059C4C();
        sub_1000469EC();
      }
      while ((char **)v75 != v83);
    }
    uint64_t v209 = v393;
    sub_100058DE0();
    sub_10006DF90();
    id v210 = [v207 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
    uint64_t v211 = (void *)sub_100057C14();

    sub_100016C7C((uint64_t)v211, (void (*)(void))&type metadata accessor for WFFeatureFlagResource);
    sub_1000598AC();
    if (sub_10005817C())
    {
      sub_100056FD8();
      if (v123 != v44) {
        goto LABEL_275;
      }
      LODWORD(v383) = sub_1000574F8();
      sub_100057F08(enum case for RuntimeRequirement.featureFlag(_:));
      do
      {
        if (v383) {
          uint64_t v212 = (uint64_t)sub_100056758();
        }
        else {
          uint64_t v212 = sub_10005868C();
        }
        uint64_t v77 = v212;
        uint64_t v213 = sub_1000565AC();
        uint64_t v215 = v214;
        uint64_t v83 = (char **)sub_10006DF80();
        uint64_t v205 = v216;
        char v217 = sub_10006DF60();
        *uint64_t v211 = v213;
        v385[1] = v215;
        v385[2] = v83;
        v385[3] = v205;
        uint64_t v209 = v393;
        *((unsigned char *)v385 + 32) = v217 & 1;
        sub_1000551E8();
        v218();
        uint64_t v207 = v392;
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
        sub_100055C28(*(void *)(v393 + 400));
        sub_100057D34();

        sub_100057F6C();
      }
      while (!v114);
    }
    sub_100058070();
    if (v207)
    {
      sub_100057054();
      id v219 = v207;
      *(void *)(v209 + 2016) = sub_10006F170();
      sub_1000553EC();
      sub_10005533C();
      goto LABEL_223;
    }
    uint64_t v220 = sub_100046794(0);
    if (sub_10006A5EC(v220))
    {
      id v221 = (void *)sub_10004CDD8(v220);
    }
    else
    {
      swift_bridgeObjectRelease();
      id v221 = &_swiftEmptySetSingleton;
    }
    uint64_t v222 = v373;
    v394[9] = (uint64_t)v221;
    BOOL v223 = (void *)sub_100046794(0);
    if (sub_10006A5EC(v223))
    {
      uint64_t v224 = (void *)sub_10004CDD8((uint64_t)v223);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v224 = &_swiftEmptySetSingleton;
    }
    sub_1000569EC((uint64_t)v224);
    id v225 = [v223 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
    uint64_t v226 = sub_100057C14();

    sub_100016C7C(v226, (void (*)(void))&type metadata accessor for WFDeviceIdiomResource);
    uint64_t v228 = v227;
    swift_bridgeObjectRelease();
    if (sub_100066FFC(v228))
    {
      BOOL v388 = sub_100059B94();
      uint64_t v83 = 0;
      sub_100057DFC(enum case for WFDeviceIdiomResource.Requirement.notEqualTo(_:));
      LODWORD(v369) = enum case for RuntimePlatform.watch(_:);
      LODWORD(v367) = enum case for RuntimePlatform.phone(_:);
      sub_100057DE4(enum case for RuntimePlatform.pad(_:));
      uint64_t v205 = v226 + 8;
      LODWORD(v381) = enum case for RuntimePlatform.macintosh(_:);
      uint64_t v379 = v228;
      do
      {
        if (v388) {
          id v229 = *(id *)(v228 + 32);
        }
        else {
          id v229 = (id)sub_10006F620();
        }
        long long v230 = v229;
        LOBYTE(v77) = 1;
        sub_100057E84();
        uint64_t v231 = sub_10005833C();
        v232(v231);
        sub_100056B60();
        if (v114)
        {
          BOOL v223 = *(void **)(v222 + 1000);
          uint64_t v233 = sub_100055288();
          v234(v233);
          sub_100055E64();
          switch(v235)
          {
            case 0:
            case 5:
              sub_1000576E4();
LABEL_173:
              sub_100007770((uint64_t)v223, 1, 1, v236);

              sub_100053404((uint64_t)v223, &qword_1000823D0);
              goto LABEL_176;
            case 1:
            case 2:
            case 3:
            case 4:
            case 6:
              uint64_t v211 = *(void **)(v393 + 976);
              uint64_t v222 = *(void *)(v393 + 960);
              uint64_t v241 = *(void *)(v393 + 920);
              uint64_t v242 = *(void *)(v393 + 912);
              sub_1000551E8();
              v243();
              sub_100007770(v242, 0, 1, v241);
              sub_10005524C();
              v244();
              sub_100055270();
              v245();
              sub_10005825C();

              BOOL v223 = *(void **)v205;
              sub_1000553C4();
              ((void (*)(void))v223)();
              uint64_t v246 = v241;
              uint64_t v228 = v379;
              ((void (*)(void *, uint64_t))v223)(v211, v246);
              goto LABEL_176;
            default:
              goto LABEL_235;
          }
        }
        sub_100059088();
        if (v237)
        {
          sub_100055574();
          v238();
          sub_100055E64();
          switch(v239)
          {
            case 0:
            case 5:
              sub_1000576F4();
              goto LABEL_173;
            case 1:
            case 2:
            case 3:
            case 4:
            case 6:
              uint64_t v222 = *(void *)(v393 + 968);
              uint64_t v211 = *(void **)(v393 + 960);
              uint64_t v247 = *(void *)(v393 + 952);
              uint64_t v248 = *(void *)(v393 + 920);
              uint64_t v249 = *(void *)(v393 + 904);
              sub_1000551E8();
              v250();
              sub_100007770(v249, 0, 1, v248);
              sub_10005524C();
              v251();
              sub_100055270();
              v252();
              sub_100056FBC();

              BOOL v223 = *(void **)v205;
              sub_1000553C4();
              ((void (*)(void))v223)();
              uint64_t v253 = v247;
              uint64_t v228 = v379;
              ((void (*)(uint64_t, uint64_t))v223)(v253, v248);
              goto LABEL_176;
            default:
              goto LABEL_235;
          }
        }

        sub_1000551DC();
        v240();
LABEL_176:
        sub_100057FA8();
      }
      while (!v114);
    }
    unint64_t v254 = *(void **)(v393 + 576);
    swift_bridgeObjectRelease();
    id v255 = [v254 disabledOnPlatforms];
    sub_1000574C4();
    uint64_t v256 = sub_1000574AC();

    if (sub_10006A5EC(v256))
    {
      sub_100057C60();
      if (v123 != v44) {
        goto LABEL_276;
      }
      sub_100056A58();
      sub_1000582C0();
      do
      {
        if (v77) {
          sub_100057E14();
        }
        else {
          sub_10005875C();
        }
        sub_10005742C();
        sub_100056FBC();

        sub_100011784();
        v257();
      }
      while (v205 != v228);
    }
    swift_bridgeObjectRelease();
    sub_100057DD8();
    if (v258) {
      uint64_t v259 = swift_bridgeObjectRetain();
    }
    else {
      uint64_t v259 = sub_10006EA90();
    }
    uint64_t v260 = sub_1000583D0(v259);
    sub_100047F78(v260);
    swift_bridgeObjectRelease();
    sub_1000587EC();
    uint64_t v261 = sub_100043434();
    sub_100056F84();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v389 = v261;
    uint64_t v386 = sub_10006A5EC(v261);
    if (v386)
    {
      if (v386 < 1) {
        goto LABEL_277;
      }
      uint64_t v262 = sub_100056A08();
      sub_100056B00(v262);
      sub_100057EC0(enum case for RuntimeRequirement.platform(_:));
      do
      {
        if (v383)
        {
          uint64_t v263 = v393;
          sub_100055270();
          v264();
        }
        else
        {
          uint64_t v265 = sub_10005529C((unint64_t)v83, v389, (void (*)(void))&type metadata accessor for RuntimePlatform);
          uint64_t v263 = v393;
          if (v371 != 8) {
            goto LABEL_270;
          }
          *(void *)(v393 + 448) = v265;
          sub_100055270();
          v266();
          swift_unknownObjectRelease();
        }
        uint64_t v205 = *(void *)(v263 + 888);
        uint64_t v83 = (char **)((char *)v83 + 1);
        sub_10005524C();
        v267();
        uint64_t v268 = sub_10006ED70();
        sub_100055A88(v268);
        sub_100055270();
        v269();
        sub_1000551E8();
        v270();
        uint64_t v211 = sub_1000674EC;
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
        sub_100055FCC();
        sub_1000469EC();
        sub_1000551DC();
        v271();
      }
      while ((char **)v386 != v83);
    }
    uint64_t v37 = v393;
    uint64_t v25 = v393 + 472;
    swift_bridgeObjectRelease();
    uint64_t v272 = (_OWORD *)sub_10006F480();
    *(void *)(v393 + 456) = v272;
    uint64_t v273 = sub_100046794(0);
    uint64_t v274 = sub_100059024(v273, (uint64_t)&OBJC_PROTOCOL___WFLinkActionProtocol);
    if (v274)
    {
      uint64_t v275 = (void *)v274;
      uint64_t v25 = (uint64_t)*(id *)(v393 + 576);
      id v276 = [v275 backingActionIdentifiers];
      uint64_t v205 = sub_10006F0F0();

      uint64_t v277 = v367;
      uint64_t v278 = sub_100016FAC(v205);
      uint64_t v37 = v393;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v211 = (void *)sub_100026598((unint64_t)v278);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v393 + 464) = v211;
    }
    else
    {
      uint64_t v277 = v367;
    }
    if (!sub_100057898())
    {
      uint64_t v279 = sub_10006A5EC(v272);
      if (v279)
      {
        uint64_t v280 = v279;
        if (v279 < 1) {
          goto LABEL_278;
        }
        sub_100057870();
        sub_100058A30();
        sub_100055B0C(enum case for SystemToolProtocol.assistantSchema(_:));
        uint64_t v25 = 0;
        sub_100057B58((uint64_t)"SystemToolProtocol");
        do
        {
          if (v205)
          {
            sub_1000560F0();
            v281();
          }
          else
          {
            uint64_t v282 = sub_100056890(v25, (uint64_t)v272, (void (*)(void))&type metadata accessor for SystemToolProtocol);
            if (v277 != 8) {
              goto LABEL_272;
            }
            uint64_t v283 = sub_100055E18(v282);
            v284(v283);
            swift_unknownObjectRelease();
          }
          uint64_t v211 = *(void **)(v37 + 832);
          sub_10005524C();
          v285();
          uint64_t v286 = sub_1000568BC();
          v287(v286);
          sub_100056B60();
          if (v114)
          {
            uint64_t v288 = sub_100055288();
            v289(v288);
            sub_10005524C();
            v290();
            sub_10006EDA0();
            sub_10006ED90();
            uint64_t v291 = sub_10006ED80();
            swift_release();
            if (*(void *)(v291 + 16) && (sub_100068818(), (v292 & 1) != 0))
            {
              sub_1000114F0();
              v293();
              uint64_t v294 = 0;
            }
            else
            {
              uint64_t v294 = 1;
            }
            uint64_t v211 = *(void **)(v37 + 784);
            sub_1000589A8(*(void *)(v37 + 776), v294);
            sub_100059444();
            if (v114)
            {
              uint64_t v296 = *(void *)(v37 + 776);
              sub_1000551DC();
              v297();
              sub_100053404(v296, &qword_1000823C0);
            }
            else
            {
              uint64_t v211 = *(void **)(v37 + 800);
              sub_10005524C();
              v298();
              sub_10006E380();
              sub_10001A7C0();
              uint64_t v277 = v369;
              sub_1000551DC();
              v299();
              uint64_t v300 = sub_100058880();
              v301(v300);
            }
            LOBYTE(v205) = v379;
          }
          else
          {
            sub_1000551DC();
            v295();
          }
          ++v25;
        }
        while (v280 != v25);
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v302 = v37 + 456;
    if (sub_10006A5EC(*(void *)(v37 + 464)))
    {
      sub_100057360();
      sub_100055330();
      v303();
      sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006745C);
      sub_1000560D4(*(void *)(v37 + 456));
      sub_1000576CC();
    }
    uint64_t v304 = *(void **)(v37 + 1672);
    if (v304)
    {
      sub_10006F180();
      id v305 = v304;
      *(void *)(v37 + 2040) = sub_10006F170();
      sub_1000553EC();
      sub_10005533C();
      goto LABEL_223;
    }
    uint64_t v310 = (void (*)(void))(v37 + 480);
    sub_1000075E8(*(void **)(v37 + 576), (SEL *)&selRef_iconName);
    uint64_t v387 = (void (**)(void))(v37 + 480);
    v384 = (void (**)(void))(v37 + 488);
    if (v311)
    {
      sub_100056118();
      swift_bridgeObjectRelease();
      *uint64_t v211 = v25;
      v211[1] = 0;
      uint64_t v312 = sub_10006E510();
      sub_1000551F4();
      sub_1000551E8();
      v313();
      sub_100007770((uint64_t)v211, 0, 1, v312);
      goto LABEL_262;
    }
    sub_1000075E8(*(void **)(v37 + 576), (SEL *)&selRef_iconSymbolName);
    if (!v314) {
      goto LABEL_238;
    }
    sub_1000075E8(*(void **)(v37 + 576), (SEL *)&selRef_iconBackgroundColorName);
    if (!v315) {
      goto LABEL_237;
    }
    id v316 = [(id)sub_1000588BC() definition];
    if (v316)
    {
      uint64_t v317 = v316;
      id v318 = [v316 objectForKey:WFActionIconSymbolColorNameKey];

      if (v318)
      {
        sub_10006F4F0();
        uint64_t v319 = swift_unknownObjectRelease();
      }
      else
      {
        sub_100059C6C();
      }
      uint64_t v324 = v393 + 536;
      sub_10005942C(v319, v320, &qword_100082450);
      uint64_t v37 = v393;
      if (*(void *)(v393 + 328))
      {
        if (sub_1000560FC())
        {
          sub_100058858();
          goto LABEL_246;
        }
LABEL_245:
        sub_100055CCC(*(void *)(v37 + 720), v325, v326, *(void *)(v37 + 632));
LABEL_246:
        sub_100059D50();
        swift_bridgeObjectRelease();
        BOOL v327 = v83 == &selRef_parameterKey && v25 == 0xE400000000000000;
        if (v327 || (sub_100055554() & 1) != 0)
        {
          uint64_t v328 = sub_100058FBC();
          sub_1000532F0(v328, v324, &qword_1000823A8);
          sub_100055EE0(v324, 1, (uint64_t)&selRef_parameterKey);
          if (!v114)
          {
            uint64_t v330 = sub_100057810();
            sub_100053404(v330, &qword_1000823A8);
            swift_bridgeObjectRelease();
            uint64_t v331 = *(void (**)(void))(v37 + 32);
            sub_100055B64();
            v331();
            sub_100055B64();
            v331();
LABEL_261:
            uint64_t v336 = *(uint64_t **)(v302 + 768);
            uint64_t v337 = *(void *)(v302 + 680);
            sub_100055330();
            v338();
            sub_10000772C(&qword_100082460);
            *uint64_t v336 = v381;
            v336[1] = v383;
            uint64_t v37 = v337 + 32;
            sub_100055B64();
            v339();
            sub_10006E510();
            sub_1000551F4();
            sub_1000551E8();
            v340();
            sub_100059D90();
            goto LABEL_262;
          }
          sub_100053404(*(void *)(v37 + 712), &qword_1000823A8);
        }
        sub_100058354();
        sub_100055D1C();
        if (v114)
        {
          sub_1000551E8();
          v329();
          sub_100053404(v25, &qword_1000823A8);
        }
        else
        {
          sub_1000589D8();
          v332();
        }
        uint64_t v333 = sub_100057830();
        sub_100053348(v333, v25, &qword_1000823A8);
        sub_100055D54();
        if (v114)
        {
          sub_100055330();
          v334();
          sub_100053404(v25, &qword_1000823A8);
          uint64_t v310 = *(void (**)(void))(v324 + 32);
        }
        else
        {
          sub_100058EF8();
          v310();
        }
        sub_100058E9C();
        sub_10000772C(&qword_100082458);
        sub_100056840();
        v310();
        uint64_t v335 = sub_100056418();
        ((void (*)(uint64_t))v310)(v335);
        goto LABEL_261;
      }
    }
    else
    {
      *uint64_t v272 = 0u;
      v272[1] = 0u;
      uint64_t v324 = v393 + 536;
    }
    sub_100053404((uint64_t)v272, &qword_100082450);
    goto LABEL_245;
  }
  uint64_t v47 = sub_100056CE4();
  sub_100055EA4(v47);
  sub_100058840((uint64_t)"ToolVisibilityFlag");
  while (1)
  {
    if (v374)
    {
      uint64_t v37 = *(void *)(v371 + 16);
      sub_100055580();
      ((void (*)(void))v37)();
      goto LABEL_19;
    }
    uint64_t v50 = sub_1000586A4(v48, v49, (void (*)(void))&type metadata accessor for ToolVisibilityFlag);
    if (v372 != (void *)8) {
      break;
    }
    *(void *)(v393 + 416) = v50;
    uint64_t v37 = *v39;
    sub_100055580();
    ((void (*)(void))v37)();
    swift_unknownObjectRelease();
LABEL_19:
    id v51 = (void (**)(void))(v30 + 1);
    if (__OFADD__(v30, 1))
    {
      __break(1u);
      goto LABEL_234;
    }
    uint64_t v382 = *v384;
    sub_100055548();
    v52();
    sub_100055580();
    ((void (*)(void))v37)();
    sub_10006E3E0();
    sub_100052038(&qword_100082440, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
    char v53 = sub_100058A48();
    unint64_t v54 = *v391;
    sub_10005521C();
    v54();
    if (v53)
    {
      uint64_t v55 = *(void **)(v393 + 576);
      sub_100055234();
      v54();
      if ([v55 visibleForUse:0])
      {
        sub_1000564FC();
        uint64_t v56 = sub_100057738();
        ((void (*)(uint64_t))v37)(v56);
        sub_100059330();
        uint64_t v57 = sub_100058E04();
        sub_1000557CC(v57);
        if (v58)
        {
          id v51 = v391;
          sub_100055240();
          v54();
          sub_1000566C4();
          ((void (*)(void))v37)();
          sub_1000566C4();
          ((void (*)(void))v37)();
          sub_100057370();
          char v65 = v382;
          uint64_t v37 = (uint64_t)v384;
        }
        else
        {
LABEL_27:
          char v65 = v382;
          uint64_t v37 = (uint64_t)v384;
          sub_100055B64();
          v382();
          id v51 = v391;
        }
        goto LABEL_34;
      }
    }
    else
    {
      sub_1000591B8();
      id v51 = v391;
      char v59 = sub_100056248();
      sub_100055240();
      v54();
      if (v59)
      {
        uint64_t v60 = *(void **)(v393 + 576);
        sub_100055240();
        v54();
        [v60 visibleForUse:1];
        uint64_t v25 = v381;
        sub_1000592D0();
        if (v61)
        {
          sub_100057288();
          uint64_t v62 = sub_100057D0C();
          ((void (*)(uint64_t))v37)(v62);
          sub_100059724();
          uint64_t v63 = sub_100058F1C();
          sub_1000557CC(v63);
          if ((v64 & 1) == 0) {
            goto LABEL_27;
          }
          id v51 = v391;
          sub_100055240();
          v54();
          sub_100057180();
          ((void (*)(void))v37)();
          sub_100057180();
          ((void (*)(void))v37)();
          sub_100057370();
          char v65 = v382;
          uint64_t v37 = (uint64_t)v384;
LABEL_34:
          uint64_t v68 = sub_100055394();
          ((void (*)(unsigned char *))v65)(v68);
          sub_100055240();
          v54();
          sub_1000592D0();
          goto LABEL_35;
        }
      }
      else
      {
        sub_10006E3C0();
        char v66 = sub_100056248();
        sub_100055240();
        v54();
        if ((v66 & 1) == 0)
        {

          sub_10004651C(27);
          swift_bridgeObjectRelease();
          sub_100056748();
          sub_100056790(v198);
          sub_100052038(&qword_100082448, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
          v395._countAndFlagsBits = sub_10006F750();
          sub_100058D34(v395);
          swift_bridgeObjectRelease();
          sub_10006F080();
          sub_100055C44();
          goto LABEL_130;
        }
        sub_100055240();
        v54();
        sub_1000114F0();
        ((void (*)(void))v37)();
        sub_10006E3E0();
        char v67 = sub_10006F500();
        uint64_t v25 = v381;
        sub_100055234();
        v54();
        sub_100055234();
        v54();
        id v51 = v387;
        if ((v67 & 1) != 0 && [*(id *)(v393 + 576) isApprovedForPublicShortcutsDrawer])
        {
          sub_100058544();
          sub_100042A3C((char *)v37, v381);
          sub_100055234();
          v54();
LABEL_35:
          sub_100055234();
          v54();
          uint64_t v25 = v381;
        }
      }
    }
    sub_100055234();
    uint64_t v48 = ((uint64_t (*)(void))v54)();
    ++v30;
    uint64_t v39 = (uint64_t *)v390;
    if (v51 == (void (**)(void))v376) {
      goto LABEL_37;
    }
  }
  __break(1u);
LABEL_237:
  swift_bridgeObjectRelease();
LABEL_238:
  swift_bridgeObjectRelease();
  sub_100058FCC();
  uint64_t v321 = sub_10006E510();
  sub_100055CCC(v25, v322, v323, v321);
LABEL_262:
  id v341 = sub_10005548C();
  sub_10006F050();
  uint64_t v343 = v342;

  uint64_t v344 = swift_task_alloc();
  sub_100055614(v344);
  sub_10005720C();
  sub_1000557F0();
  if (v343)
  {
    uint64_t v345 = *(void *)(v37 + 768);
    sub_10005521C();
    v346();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_100053404(v345, &qword_1000823B8);
    sub_1000556D0();
    v347();
    sub_100055234();
    v348();
    swift_bridgeObjectRelease();
    sub_1000588E0();
    swift_bridgeObjectRelease();
    sub_100055240();
    v349();
    swift_bridgeObjectRelease();
    sub_100055228();
    v350();
    swift_bridgeObjectRelease();
    sub_100054C30();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100058F80();
  }
  else
  {
    sub_100054630();
    v351();

    swift_bridgeObjectRelease();
    uint64_t v352 = swift_task_dealloc();
    sub_100057300(v352, &qword_1000823B8);
    sub_100055228();
    v353();
    sub_1000553C4();
    v354();
    swift_bridgeObjectRelease();
    sub_100058674();
    swift_bridgeObjectRelease();
    sub_100055234();
    v355();
    swift_bridgeObjectRelease();
    sub_100055C1C();
    v356();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001151C();
  }
  sub_100055194();
  v358(v357, v358, v359, v360, v361, v362, v363, v364, a9, a10, a11, a12);
}

void sub_10003E260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1000553D0();
  sub_1000562A0();
  sub_10005521C();
  v14();
  uint64_t v15 = *(void (***)(void))(v13 + 1848);
  sub_1000584C0();
  uint64_t v16 = sub_100055E70();
  *(void *)(v16 + 16) = v12;
  uint64_t v17 = v16;
  v384 = (void (**)(void))v16;
  uint64_t v18 = sub_100055E70();
  *(void *)(v18 + 16) = v15;
  uint64_t v19 = v18;
  uint64_t v387 = (void (**)(void))v18;
  id v20 = v12;
  swift_errorRetain();
  id v21 = v20;
  uint64_t v391 = v15;
  swift_errorRetain();
  uint64_t v390 = sub_10006E350();
  sub_10006F310();
  uint64_t v22 = sub_100055258();
  *(unsigned char *)(v22 + 16) = 64;
  uint64_t v380 = (unsigned char *)sub_100055258();
  v380[16] = 8;
  uint64_t v23 = sub_100055204();
  *(void *)(v23 + 16) = sub_100052CC8;
  *(void *)(v23 + 24) = v17;
  uint64_t v24 = (void *)sub_100055204();
  v24[2] = sub_1000545CC;
  v24[3] = v23;
  uint64_t v25 = sub_100055258();
  *(unsigned char *)(v25 + 16) = 64;
  uint64_t v26 = sub_100055258();
  *(unsigned char *)(v26 + 16) = 8;
  uint64_t v27 = sub_100055204();
  *(void *)(v27 + 16) = sub_100052D00;
  *(void *)(v27 + 24) = v19;
  uint64_t v28 = sub_100055204();
  *(void *)(v28 + 16) = sub_100052D44;
  *(void *)(v28 + 24) = v27;
  unint64_t v29 = sub_100055204();
  *(void *)(v29 + 16) = sub_100052D4C;
  *(void *)(v29 + 24) = v28;
  sub_10000772C((uint64_t *)&unk_100082390);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000716D0;
  *(void *)(inited + 32) = sub_100054620;
  *(void *)(inited + 40) = v22;
  *(void *)(inited + 48) = sub_100054620;
  *(void *)(inited + 56) = v380;
  *(void *)(inited + 64) = sub_100052D34;
  *(void *)(inited + 72) = v24;
  *(void *)(inited + 80) = sub_100054620;
  *(void *)(inited + 88) = v25;
  *(void *)(inited + 96) = sub_100054620;
  *(void *)(inited + 104) = v26;
  *(void *)(inited + 112) = sub_1000545D0;
  *(void *)(inited + 120) = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  char v377 = v27;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v372 = v25;
  swift_retain();
  char v374 = v26;
  swift_retain();
  HIDWORD(v373) = HIDWORD(v29);
  swift_retain();
  swift_bridgeObjectRelease();
  if (sub_1000590BC())
  {
    sub_10005709C();
    uint64_t v31 = (void *)sub_1000573E4();
    sub_1000571B0();
    swift_release();
    *(unsigned char *)(inited + 3) = 8;
    swift_release();
    *(void *)(v393 + 552) = v380;
    unint64_t v29 = v380;
    sub_10006F4D0();
    *uint64_t v31 = v380;
    swift_release();
    swift_release();
    swift_release();

    uint64_t v32 = v391;
    *(unsigned char *)(inited + 12) = 64;
    swift_release();
    *(unsigned char *)(inited + 13) = 8;
    swift_release();
    uint64_t v26 = inited + 14;
    swift_errorRetain();
    uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v393 + 560) = v33;
    sub_10006F4D0();
    v31[1] = v33;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_errorRelease();
    sub_1000583EC((void *)&_mh_execute_header, v34, v35, "Failed to index action parameter: %@ due to %@");
    sub_10000772C(&qword_100082350);
    swift_arrayDestroy();
    sub_10001153C();
    sub_10001153C();

    uint64_t v36 = *(void **)(v393 + 1800);
  }
  else
  {
    uint64_t v32 = *(void (***)(void))(v393 + 1800);

    swift_errorRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v36 = (void *)v390;
  }
  sub_10005924C();

  uint64_t v37 = (uint64_t)(v32 + 1);
  sub_100011784();
  v38();
  uint64_t v39 = (uint64_t *)&type metadata for Any;
  if (*(void *)(v393 + 1808) != *(void *)(v393 + 1712))
  {
    sub_100056D44();
    while (1)
    {
      uint64_t v40 = sub_100058774();
      if (v26 == 1) {
        uint64_t v41 = (uint64_t)sub_100056DF8(v40, *(void *)(v393 + 1704));
      }
      else {
        uint64_t v41 = sub_10006F620();
      }
      uint64_t v42 = v41;
      sub_1000595C0(v41);
      *(void *)(v393 + 1808) = v43;
      if (v44)
      {
LABEL_234:
        __break(1u);
LABEL_235:
        sub_100055348();
        sub_10005738C();
LABEL_130:
        sub_1000559C8();
        sub_100055194();
        return;
      }
      self;
      if (!swift_dynamicCastObjCClass()) {
        break;
      }

      sub_100057350();
      if (v114) {
        goto LABEL_13;
      }
    }
    *(void *)uint64_t v25 = sub_100046794(0);
    id v102 = [(id)v42 resourceManager];
    sub_10001028C(0, &qword_1000823F8);
    id v103 = [v102 resourceObjectsOfClass:swift_getObjCClassFromMetadata()];

    if (!v103) {
      goto LABEL_279;
    }
    sub_100058C8C();
    sub_1000525E0(&qword_100082408, &qword_100082400);
    uint64_t v104 = sub_100058BD8();

    sub_100016668(v104);
    uint64_t v106 = v105;
    swift_bridgeObjectRelease();
    uint64_t v368 = sub_100066FFC(v106);
    if (!v368)
    {
LABEL_124:
      swift_bridgeObjectRelease();
      unint64_t v187 = swift_bridgeObjectRetain();
      id v188 = sub_100017390(v187);
      swift_bridgeObjectRelease();
      if (!v188) {
        id v188 = [*(id *)(v393 + 1680) defaultContext];
      }
      *(void *)(v393 + 1816) = v188;
      uint64_t v189 = (void *)swift_task_alloc();
      *(void *)(v393 + 1824) = v189;
      void *v189 = v393;
      v189[1] = sub_10002F798;
      sub_100057854();
      sub_100055194();
      WFParameter.toolkitTypeDefinition(for:localizationContext:)(v190, v191, v192, v193, v194, v195, v196, v197, a9, a10, a11, a12);
      return;
    }
    uint64_t v107 = sub_10006A5F4(v106);
    sub_100056B78(v107);
    while (1)
    {
      sub_10005911C();
      if (v37) {
        id v108 = *(id *)(v365 + 8 * v26);
      }
      else {
        id v108 = (id)sub_10006F620();
      }
      BOOL v44 = __OFADD__(v26++, 1);
      if (v44) {
        goto LABEL_271;
      }
      uint64_t v370 = v26;
      uint64_t v37 = *(void *)(v393 + 1696);
      uint64_t v375 = v108;
      id v109 = [v108 parameterKey];
      sub_10006F050();
      uint64_t v111 = v110;

      if (!*(void *)(v37 + 16)) {
        break;
      }
      uint64_t v104 = *(void *)(v393 + 1696);
      sub_10006F820();
      sub_10006F090();
      sub_10006F840();
      sub_1000569A0();
      if ((v112 & 1) == 0) {
        break;
      }
      sub_100056FE4();
      BOOL v114 = v114 && v113 == v111;
      if (!v114 && (sub_100057154() & 1) == 0)
      {
        LOBYTE(v37) = ~(_BYTE)v37;
        do
        {
          sub_1000566D0();
          if ((v115 & 1) == 0) {
            goto LABEL_65;
          }
          sub_100056FE4();
          BOOL v117 = v114 && v116 == v111;
        }
        while (!v117 && (sub_100057154() & 1) == 0);
        swift_bridgeObjectRelease();

        goto LABEL_104;
      }
      swift_bridgeObjectRelease();

LABEL_103:
      uint64_t v26 = v370;
LABEL_104:
      if (v26 == v368) {
        goto LABEL_124;
      }
    }
LABEL_65:
    swift_bridgeObjectRelease();
    id v118 = [v375 comparedValues];
    uint64_t v119 = sub_10006F0F0();

    uint64_t v37 = (uint64_t)sub_1000169B4(v119, (id)v42);
    swift_bridgeObjectRelease();
    unint64_t v120 = sub_100059F54(v37);
    uint64_t v121 = sub_100052038(&qword_100082410, (void (*)(uint64_t))&type metadata accessor for TypedValue);
    uint64_t v122 = sub_10005759C(v121);
    if (sub_10006A5EC(v37))
    {
      sub_100058AFC();
      if (v123 != v44) {
        goto LABEL_273;
      }
      uint64_t v124 = sub_100068F08(v37);
      sub_10005926C(v124);
      while (1)
      {
        if (v377)
        {
          sub_1000114F0();
          v126();
        }
        else
        {
          uint64_t v37 = *(void *)(v119 + 1432);
          uint64_t v127 = sub_100055504(v120, v125, (void (*)(void))&type metadata accessor for TypedValue);
          if (v37 != 8) {
            goto LABEL_269;
          }
          *(void *)(v119 + 424) = v127;
          sub_1000114F0();
          v128();
          swift_unknownObjectRelease();
        }
        uint64_t v129 = *(void *)(v119 + 1456);
        unint64_t v120 = *(void *)(v119 + 1416);
        sub_100055548();
        v130();
        uint64_t v131 = v119;
        swift_bridgeObjectRetain();
        sub_10006EFF0();
        sub_1000564D0();
        if (v132)
        {
          uint64_t v122 = *(void *)(*(void *)(v119 + 1424) + 72);
          while (1)
          {
            unint64_t v120 = *(void *)(v131 + 1440);
            uint64_t v133 = *(void *)(v131 + 1424);
            uint64_t v119 = *(void *)(v131 + 1416);
            sub_1000114F0();
            v134();
            sub_100052038(&qword_100082418, (void (*)(uint64_t))&type metadata accessor for TypedValue);
            uint64_t v129 = sub_1000561CC();
            uint64_t v131 = *(void *)(v133 + 8);
            sub_100055240();
            ((void (*)(void))v131)();
            if (v129) {
              break;
            }
            sub_100057134();
            if ((v135 & 1) == 0) {
              goto LABEL_76;
            }
          }
          sub_100058DBC();
          sub_100055240();
          ((void (*)(void))v131)();
        }
        else
        {
LABEL_76:
          sub_100056690();
          uint64_t v104 = v129 + 16;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v119 = v393;
          sub_100056C6C();
          v137();
          *(void *)(v393 + 392) = v37;
          if (*(void *)(v37 + 24) <= *(void *)(v37 + 16))
          {
            if (isUniquelyReferenced_nonNull_native) {
              sub_1000496D0();
            }
            else {
              sub_10004B82C();
            }
            sub_100057F30();
            sub_1000567A0();
            if (v138)
            {
              do
              {
                uint64_t v139 = sub_100056390();
                v140(v139);
                sub_100052038(&qword_100082418, (void (*)(uint64_t))&type metadata accessor for TypedValue);
                char v141 = sub_1000561CC();
                v37 += 8;
                sub_100011784();
                v142();
                if (v141)
                {
                  sub_100055194();
                  sub_10006F7B0();
                  return;
                }
                sub_1000570F4();
              }
              while ((v143 & 1) != 0);
            }
          }
          else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_10004ACEC();
          }
          uint64_t v122 = *(void *)(v393 + 392);
          *(void *)(v122 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v29;
          sub_100055548();
          v144();
          uint64_t v145 = *(void *)(v122 + 16);
          BOOL v44 = __OFADD__(v145, 1);
          uint64_t v146 = v145 + 1;
          if (v44)
          {
            __break(1u);
LABEL_269:
            __break(1u);
LABEL_270:
            __break(1u);
LABEL_271:
            __break(1u);
LABEL_272:
            __break(1u);
LABEL_273:
            __break(1u);
LABEL_274:
            __break(1u);
LABEL_275:
            __break(1u);
LABEL_276:
            __break(1u);
LABEL_277:
            __break(1u);
LABEL_278:
            __break(1u);
LABEL_279:

            __break(1u);
            JUMPOUT(0x10004184CLL);
          }
          sub_100058214(v146);
          uint64_t v147 = sub_100059518();
          v148(v147);
        }
        sub_1000592BC();
        if (v114) {
          goto LABEL_92;
        }
      }
    }
    uint64_t v119 = v393;
LABEL_92:
    swift_bridgeObjectRelease();
    id v149 = [v375 relation];
    uint64_t v150 = sub_10006F050();
    uint64_t v152 = v151;
    if (v150 == sub_10006F050() && v152 == v153)
    {
      uint64_t v104 = v122;
      sub_100057758();
    }
    else
    {
      char v155 = sub_100057570();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v155 & 1) == 0)
      {
        uint64_t v37 = *(void *)(v393 + 1728);
        id v156 = v149;
        id v157 = (id)v37;
        char v158 = sub_100055F34();

        if (v158)
        {
          sub_100055DA8();
          swift_bridgeObjectRelease();
LABEL_101:
          sub_100059AE8();
LABEL_102:
          sub_10005658C();
          v159();
          sub_100057EA8();
          uint64_t v104 = (uint64_t)v375;
          id v160 = [v375 parameterKey];
          sub_10006F050();
          unint64_t v29 = v161;

          sub_1000114F0();
          v162();
          sub_1000586F8();
          sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006757C);
          sub_10005909C();
          sub_1000469EC();

          LOBYTE(v37) = v37 + 8;
          sub_100011784();
          v163();
          uint64_t v42 = 6;
          goto LABEL_103;
        }
        uint64_t v37 = *(void *)(v393 + 1736);
        id v164 = v156;
        id v165 = (id)v37;
        uint64_t v119 = sub_100055F34();

        if ((v119 & 1) == 0)
        {
          uint64_t v37 = *(void *)(v393 + 1744);
          id v166 = v164;
          id v167 = (id)v37;
          uint64_t v168 = sub_100055F34();

          if ((v168 & 1) == 0)
          {
            uint64_t v37 = *(void *)(v393 + 1752);
            id v169 = v166;
            id v170 = (id)v37;
            uint64_t v171 = sub_100055F34();

            if ((v171 & 1) == 0)
            {
              uint64_t v37 = *(void *)(v393 + 1760);
              id v172 = v169;
              id v173 = (id)v37;
              uint64_t v168 = sub_100055F34();

              if (v168) {
                goto LABEL_110;
              }
              uint64_t v37 = *(void *)(v393 + 1768);
              id v174 = v172;
              id v175 = (id)v37;
              uint64_t v171 = sub_100055F34();

              if ((v171 & 1) == 0)
              {
                id v176 = *(id *)(v393 + 1776);
                char v177 = sub_100055F34();

                uint64_t v37 = *(void *)(v393 + 1392);
                if (v177)
                {
                  sub_100058FF0();
                }
                else
                {
                  swift_bridgeObjectRelease();
                  LOBYTE(v37) = v37 + 104;
                }
                goto LABEL_102;
              }
            }
            sub_100055DA8();
            *(void *)uint64_t v171 = v104;
            *(unsigned char *)(v171 + 8) = 1;
            goto LABEL_101;
          }
LABEL_110:
          sub_100055DA8();
          *(void *)uint64_t v168 = v104;
          *(unsigned char *)(v168 + 8) = 0;
          goto LABEL_101;
        }
      }
    }
    sub_100055DA8();
    *(void *)uint64_t v119 = v104;
    goto LABEL_101;
  }
LABEL_13:
  sub_100056BF0();
  swift_bridgeObjectRelease();
  sub_100052038(&qword_100082420, (void (*)(uint64_t))&type metadata accessor for ToolFlag);
  sub_100059044();
  *(void *)(v393 + 400) = sub_100046794(0);
  unint64_t v45 = swift_allocBox();
  sub_100057988(v45, v46);
  *(void *)(v393 + 408) = sub_100046794(0);
  sub_100052038(&qword_100082428, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
  sub_10000772C(&qword_100082430);
  sub_100052D74();
  sub_100056E28();
  uint64_t v378 = sub_10006E3B0();
  uint64_t v381 = v26;
  uint64_t v376 = sub_10006A5EC(v378);
  if (!v376)
  {
LABEL_37:
    sub_1000571E4();
    sub_10006E280();
    uint64_t v69 = sub_100055E70();
    *(void *)(v69 + 16) = v37;
    uint64_t v70 = v69;
    uint64_t v71 = sub_100055204();
    *(void *)(v71 + 16) = sub_100052DC8;
    *(void *)(v71 + 24) = v366;
    id v72 = (id)v37;
    swift_retain_n();
    id v73 = v72;
    uint64_t v392 = (void *)sub_10006E350();
    LODWORD(v373) = sub_10006F300();
    uint64_t v74 = (unsigned char *)sub_100055258();
    v74[16] = 32;
    uint64_t v75 = sub_100055258();
    sub_100058410(v75);
    uint64_t v76 = sub_100055204();
    *(void *)(v76 + 16) = sub_10005461C;
    *(void *)(v76 + 24) = v70;
    uint64_t v77 = sub_100055204();
    *(void *)(v77 + 16) = sub_100052DE0;
    *(void *)(v77 + 24) = v76;
    uint64_t v78 = sub_100055258();
    *(unsigned char *)(v78 + 16) = 32;
    uint64_t v79 = sub_100055258();
    *(unsigned char *)(v79 + 16) = v37;
    uint64_t v80 = sub_100055204();
    *(void *)(v80 + 16) = sub_100052DD0;
    *(void *)(v80 + 24) = v71;
    uint64_t v81 = (void *)sub_100055204();
    v81[2] = sub_1000545C8;
    v81[3] = v80;
    sub_10000772C((uint64_t *)&unk_100082390);
    uint64_t v82 = swift_initStackObject();
    *(_OWORD *)(v82 + 16) = xmmword_1000716D0;
    *(void *)(v82 + 32) = sub_100054620;
    *(void *)(v82 + 40) = v74;
    *(void *)(v82 + 48) = sub_100054620;
    *(void *)(v82 + 56) = v75;
    *(void *)(v82 + 64) = sub_1000545D4;
    *(void *)(v82 + 72) = v77;
    *(void *)(v82 + 80) = sub_100054620;
    *(void *)(v82 + 88) = v78;
    *(void *)(v82 + 96) = sub_100054620;
    *(void *)(v82 + 104) = v79;
    *(void *)(v82 + 112) = sub_1000545D4;
    *(void *)(v82 + 120) = v81;
    swift_retain();
    LOBYTE(v379) = v76;
    swift_retain();
    swift_retain();
    uint64_t v383 = v80;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v83 = (char **)v79;
    swift_retain();
    swift_retain();
    uint64_t v385 = v81;
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v84 = &selRef_parameterKey;
    if (sub_100056824((os_log_type_t)v373))
    {
      uint64_t v82 = sub_100055968();
      unint64_t v85 = sub_10005703C();
      sub_1000570C8(v85);
      *(unsigned char *)(v82 + 3) = 8;
      swift_release();
      id v86 = sub_100059184();
      uint64_t v87 = sub_10006F050();
      unint64_t v89 = v88;

      uint64_t v90 = sub_100046AE8(v87, v89, v394);
      sub_1000580EC(v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();

      *(unsigned char *)(v82 + 12) = 32;
      swift_release();
      *(unsigned char *)(v82 + 13) = 8;
      swift_release();
      uint64_t v84 = (char **)(v82 + 14);
      sub_100055CE4();
      uint64_t v77 = v367;
      sub_1000114F0();
      v91();
      sub_100052038(&qword_100082448, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
      uint64_t v92 = (void *)sub_10006F750();
      uint64_t v75 = v93;
      sub_100055228();
      v94();
      uint64_t v95 = sub_100058378();
      sub_1000580C8(v95);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_10005979C();
      sub_100058A7C((void *)&_mh_execute_header, v96, v97, "%s: Visibility flags: %s");
      sub_100057D9C();
      sub_10001153C();
      sub_10001153C();

      sub_1000551DC();
      v98();
    }
    else
    {
      sub_1000578CC();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_10005979C();

      sub_100011784();
      v99();
      uint64_t v81 = (void *)v79;
    }
    uint64_t v100 = (char *)v81[209];
    if (v100)
    {
      uint64_t v101 = sub_10006F180();
      sub_100058CD4(v101);
      v81[236] = sub_10006F170();
      sub_1000553EC();
      sub_10005533C();
LABEL_223:
      sub_100055194();
      _swift_task_switch(v306, v307, v308);
      return;
    }
    [(id)sub_100055FEC() requiresUnlock];
    uint64_t v178 = sub_100056598();
    if (v180)
    {
      sub_10005708C();
      sub_100058B28();
      v181();
      sub_10006EB80();
      sub_1000551F4();
      sub_1000551E8();
      v182();
      uint64_t v183 = sub_100056004();
      v184(v183);
      uint64_t v100 = (char *)v82;
      sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
      sub_100057C88();
      sub_1000469EC();
    }
    else
    {
      v179(v178, enum case for ToolAuthenticationPolicy.none(_:));
    }
    if (sub_10005665C((uint64_t)&OBJC_PROTOCOL___WFLinkActionProtocol))
    {
      sub_1000563C0();
      sub_100055330();
    }
    else
    {
      sub_100058024();
      self;
      sub_100056938();
      sub_100056058();
      sub_100058018();
    }
    v186();
    if ([(id)sub_100058DF8() isDiscontinued])
    {
      sub_100056714();
      sub_100056378();
      uint64_t v199 = (void (*)(void))v84[1];
      ++v84;
      uint64_t v100 = (char *)v199;
      sub_100055234();
      v199();
      sub_100055234();
      v199();
      self;
      uint64_t v200 = swift_dynamicCastObjCClass();
      *(void *)(v393 + 1984) = v200;
      if (v200)
      {
        sub_1000576B4();
        uint64_t v201 = v100;
        *(void *)(v393 + 1992) = sub_10006F170();
        sub_1000553EC();
        sub_10005533C();
        goto LABEL_223;
      }
    }
    if ([(id)sub_100057FB8() isResidentCompatible])
    {
      sub_100056FF4();
      sub_100056378();
      uint64_t v100 = v84[1];
      sub_100055234();
      ((void (*)(void))v100)();
      uint64_t v202 = sub_100059DD4();
      ((void (*)(uint64_t))v100)(v202);
    }
    sub_1000566F8();
    id v203 = [v100 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
    sub_10001028C(0, &qword_100082400);
    uint64_t v204 = sub_1000525E0(&qword_100082408, &qword_100082400);
    uint64_t v205 = sub_100057550(v204);

    sub_100016C7C(v205, (void (*)(void))&type metadata accessor for WFDeviceCapabilityResource);
    uint64_t v207 = v206;
    swift_bridgeObjectRelease();
    if (sub_10005817C())
    {
      sub_100057518();
      if (v123 != v44) {
        goto LABEL_274;
      }
      sub_100056A3C();
      sub_100057080();
      do
      {
        if (v82) {
          sub_100056774();
        }
        else {
          sub_100058714();
        }
        sub_100057688();
        sub_10005658C();
        v208();
        uint64_t v207 = v392;
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
        sub_100059C4C();
        sub_1000469EC();
      }
      while ((char **)v75 != v83);
    }
    uint64_t v209 = v393;
    sub_100058DE0();
    sub_10006DF90();
    id v210 = [v207 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
    uint64_t v211 = (void *)sub_100057C14();

    sub_100016C7C((uint64_t)v211, (void (*)(void))&type metadata accessor for WFFeatureFlagResource);
    sub_1000598AC();
    if (sub_10005817C())
    {
      sub_100056FD8();
      if (v123 != v44) {
        goto LABEL_275;
      }
      LODWORD(v383) = sub_1000574F8();
      sub_100057F08(enum case for RuntimeRequirement.featureFlag(_:));
      do
      {
        if (v383) {
          uint64_t v212 = (uint64_t)sub_100056758();
        }
        else {
          uint64_t v212 = sub_10005868C();
        }
        uint64_t v77 = v212;
        uint64_t v213 = sub_1000565AC();
        uint64_t v215 = v214;
        uint64_t v83 = (char **)sub_10006DF80();
        uint64_t v205 = v216;
        char v217 = sub_10006DF60();
        *uint64_t v211 = v213;
        v385[1] = v215;
        v385[2] = v83;
        v385[3] = v205;
        uint64_t v209 = v393;
        *((unsigned char *)v385 + 32) = v217 & 1;
        sub_1000551E8();
        v218();
        uint64_t v207 = v392;
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
        sub_100055C28(*(void *)(v393 + 400));
        sub_100057D34();

        sub_100057F6C();
      }
      while (!v114);
    }
    sub_100058070();
    if (v207)
    {
      sub_100057054();
      id v219 = v207;
      *(void *)(v209 + 2016) = sub_10006F170();
      sub_1000553EC();
      sub_10005533C();
      goto LABEL_223;
    }
    uint64_t v220 = sub_100046794(0);
    if (sub_10006A5EC(v220))
    {
      id v221 = (void *)sub_10004CDD8(v220);
    }
    else
    {
      swift_bridgeObjectRelease();
      id v221 = &_swiftEmptySetSingleton;
    }
    uint64_t v222 = v373;
    v394[9] = (uint64_t)v221;
    BOOL v223 = (void *)sub_100046794(0);
    if (sub_10006A5EC(v223))
    {
      uint64_t v224 = (void *)sub_10004CDD8((uint64_t)v223);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v224 = &_swiftEmptySetSingleton;
    }
    sub_1000569EC((uint64_t)v224);
    id v225 = [v223 unevaluatedResourceObjectsOfClass:swift_getObjCClassFromMetadata()];
    uint64_t v226 = sub_100057C14();

    sub_100016C7C(v226, (void (*)(void))&type metadata accessor for WFDeviceIdiomResource);
    uint64_t v228 = v227;
    swift_bridgeObjectRelease();
    if (sub_100066FFC(v228))
    {
      BOOL v388 = sub_100059B94();
      uint64_t v83 = 0;
      sub_100057DFC(enum case for WFDeviceIdiomResource.Requirement.notEqualTo(_:));
      LODWORD(v369) = enum case for RuntimePlatform.watch(_:);
      LODWORD(v367) = enum case for RuntimePlatform.phone(_:);
      sub_100057DE4(enum case for RuntimePlatform.pad(_:));
      uint64_t v205 = v226 + 8;
      LODWORD(v381) = enum case for RuntimePlatform.macintosh(_:);
      uint64_t v379 = v228;
      do
      {
        if (v388) {
          id v229 = *(id *)(v228 + 32);
        }
        else {
          id v229 = (id)sub_10006F620();
        }
        long long v230 = v229;
        LOBYTE(v77) = 1;
        sub_100057E84();
        uint64_t v231 = sub_10005833C();
        v232(v231);
        sub_100056B60();
        if (v114)
        {
          BOOL v223 = *(void **)(v222 + 1000);
          uint64_t v233 = sub_100055288();
          v234(v233);
          sub_100055E64();
          switch(v235)
          {
            case 0:
            case 5:
              sub_1000576E4();
LABEL_173:
              sub_100007770((uint64_t)v223, 1, 1, v236);

              sub_100053404((uint64_t)v223, &qword_1000823D0);
              goto LABEL_176;
            case 1:
            case 2:
            case 3:
            case 4:
            case 6:
              uint64_t v211 = *(void **)(v393 + 976);
              uint64_t v222 = *(void *)(v393 + 960);
              uint64_t v241 = *(void *)(v393 + 920);
              uint64_t v242 = *(void *)(v393 + 912);
              sub_1000551E8();
              v243();
              sub_100007770(v242, 0, 1, v241);
              sub_10005524C();
              v244();
              sub_100055270();
              v245();
              sub_10005825C();

              BOOL v223 = *(void **)v205;
              sub_1000553C4();
              ((void (*)(void))v223)();
              uint64_t v246 = v241;
              uint64_t v228 = v379;
              ((void (*)(void *, uint64_t))v223)(v211, v246);
              goto LABEL_176;
            default:
              goto LABEL_235;
          }
        }
        sub_100059088();
        if (v237)
        {
          sub_100055574();
          v238();
          sub_100055E64();
          switch(v239)
          {
            case 0:
            case 5:
              sub_1000576F4();
              goto LABEL_173;
            case 1:
            case 2:
            case 3:
            case 4:
            case 6:
              uint64_t v222 = *(void *)(v393 + 968);
              uint64_t v211 = *(void **)(v393 + 960);
              uint64_t v247 = *(void *)(v393 + 952);
              uint64_t v248 = *(void *)(v393 + 920);
              uint64_t v249 = *(void *)(v393 + 904);
              sub_1000551E8();
              v250();
              sub_100007770(v249, 0, 1, v248);
              sub_10005524C();
              v251();
              sub_100055270();
              v252();
              sub_100056FBC();

              BOOL v223 = *(void **)v205;
              sub_1000553C4();
              ((void (*)(void))v223)();
              uint64_t v253 = v247;
              uint64_t v228 = v379;
              ((void (*)(uint64_t, uint64_t))v223)(v253, v248);
              goto LABEL_176;
            default:
              goto LABEL_235;
          }
        }

        sub_1000551DC();
        v240();
LABEL_176:
        sub_100057FA8();
      }
      while (!v114);
    }
    unint64_t v254 = *(void **)(v393 + 576);
    swift_bridgeObjectRelease();
    id v255 = [v254 disabledOnPlatforms];
    sub_1000574C4();
    uint64_t v256 = sub_1000574AC();

    if (sub_10006A5EC(v256))
    {
      sub_100057C60();
      if (v123 != v44) {
        goto LABEL_276;
      }
      sub_100056A58();
      sub_1000582C0();
      do
      {
        if (v77) {
          sub_100057E14();
        }
        else {
          sub_10005875C();
        }
        sub_10005742C();
        sub_100056FBC();

        sub_100011784();
        v257();
      }
      while (v205 != v228);
    }
    swift_bridgeObjectRelease();
    sub_100057DD8();
    if (v258) {
      uint64_t v259 = swift_bridgeObjectRetain();
    }
    else {
      uint64_t v259 = sub_10006EA90();
    }
    uint64_t v260 = sub_1000583D0(v259);
    sub_100047F78(v260);
    swift_bridgeObjectRelease();
    sub_1000587EC();
    uint64_t v261 = sub_100043434();
    sub_100056F84();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v389 = v261;
    uint64_t v386 = sub_10006A5EC(v261);
    if (v386)
    {
      if (v386 < 1) {
        goto LABEL_277;
      }
      uint64_t v262 = sub_100056A08();
      sub_100056B00(v262);
      sub_100057EC0(enum case for RuntimeRequirement.platform(_:));
      do
      {
        if (v383)
        {
          uint64_t v263 = v393;
          sub_100055270();
          v264();
        }
        else
        {
          uint64_t v265 = sub_10005529C((unint64_t)v83, v389, (void (*)(void))&type metadata accessor for RuntimePlatform);
          uint64_t v263 = v393;
          if (v371 != 8) {
            goto LABEL_270;
          }
          *(void *)(v393 + 448) = v265;
          sub_100055270();
          v266();
          swift_unknownObjectRelease();
        }
        uint64_t v205 = *(void *)(v263 + 888);
        uint64_t v83 = (char **)((char *)v83 + 1);
        sub_10005524C();
        v267();
        uint64_t v268 = sub_10006ED70();
        sub_100055A88(v268);
        sub_100055270();
        v269();
        sub_1000551E8();
        v270();
        uint64_t v211 = sub_1000674EC;
        sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000674EC);
        sub_100055FCC();
        sub_1000469EC();
        sub_1000551DC();
        v271();
      }
      while ((char **)v386 != v83);
    }
    uint64_t v37 = v393;
    uint64_t v26 = v393 + 472;
    swift_bridgeObjectRelease();
    uint64_t v272 = (_OWORD *)sub_10006F480();
    *(void *)(v393 + 456) = v272;
    uint64_t v273 = sub_100046794(0);
    uint64_t v274 = sub_100059024(v273, (uint64_t)&OBJC_PROTOCOL___WFLinkActionProtocol);
    if (v274)
    {
      uint64_t v275 = (void *)v274;
      uint64_t v26 = (uint64_t)*(id *)(v393 + 576);
      id v276 = [v275 backingActionIdentifiers];
      uint64_t v205 = sub_10006F0F0();

      uint64_t v277 = v367;
      uint64_t v278 = sub_100016FAC(v205);
      uint64_t v37 = v393;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v211 = (void *)sub_100026598((unint64_t)v278);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v393 + 464) = v211;
    }
    else
    {
      uint64_t v277 = v367;
    }
    if (!sub_100057898())
    {
      uint64_t v279 = sub_10006A5EC(v272);
      if (v279)
      {
        uint64_t v280 = v279;
        if (v279 < 1) {
          goto LABEL_278;
        }
        sub_100057870();
        sub_100058A30();
        sub_100055B0C(enum case for SystemToolProtocol.assistantSchema(_:));
        uint64_t v26 = 0;
        sub_100057B58((uint64_t)"SystemToolProtocol");
        do
        {
          if (v205)
          {
            sub_1000560F0();
            v281();
          }
          else
          {
            uint64_t v282 = sub_100056890(v26, (uint64_t)v272, (void (*)(void))&type metadata accessor for SystemToolProtocol);
            if (v277 != 8) {
              goto LABEL_272;
            }
            uint64_t v283 = sub_100055E18(v282);
            v284(v283);
            swift_unknownObjectRelease();
          }
          uint64_t v211 = *(void **)(v37 + 832);
          sub_10005524C();
          v285();
          uint64_t v286 = sub_1000568BC();
          v287(v286);
          sub_100056B60();
          if (v114)
          {
            uint64_t v288 = sub_100055288();
            v289(v288);
            sub_10005524C();
            v290();
            sub_10006EDA0();
            sub_10006ED90();
            uint64_t v291 = sub_10006ED80();
            swift_release();
            if (*(void *)(v291 + 16) && (sub_100068818(), (v292 & 1) != 0))
            {
              sub_1000114F0();
              v293();
              uint64_t v294 = 0;
            }
            else
            {
              uint64_t v294 = 1;
            }
            uint64_t v211 = *(void **)(v37 + 784);
            sub_1000589A8(*(void *)(v37 + 776), v294);
            sub_100059444();
            if (v114)
            {
              uint64_t v296 = *(void *)(v37 + 776);
              sub_1000551DC();
              v297();
              sub_100053404(v296, &qword_1000823C0);
            }
            else
            {
              uint64_t v211 = *(void **)(v37 + 800);
              sub_10005524C();
              v298();
              sub_10006E380();
              sub_10001A7C0();
              uint64_t v277 = v369;
              sub_1000551DC();
              v299();
              uint64_t v300 = sub_100058880();
              v301(v300);
            }
            LOBYTE(v205) = v379;
          }
          else
          {
            sub_1000551DC();
            v295();
          }
          ++v26;
        }
        while (v280 != v26);
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v302 = v37 + 456;
    if (sub_10006A5EC(*(void *)(v37 + 464)))
    {
      sub_100057360();
      sub_100055330();
      v303();
      sub_100046898((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10006745C);
      sub_1000560D4(*(void *)(v37 + 456));
      sub_1000576CC();
    }
    uint64_t v304 = *(void **)(v37 + 1672);
    if (v304)
    {
      sub_10006F180();
      id v305 = v304;
      *(void *)(v37 + 2040) = sub_10006F170();
      sub_1000553EC();
      sub_10005533C();
      goto LABEL_223;
    }
    uint64_t v310 = (void (*)(void))(v37 + 480);
    sub_1000075E8(*(void **)(v37 + 576), (SEL *)&selRef_iconName);
    uint64_t v387 = (void (**)(void))(v37 + 480);
    v384 = (void (**)(void))(v37 + 488);
    if (v311)
    {
      sub_100056118();
      swift_bridgeObjectRelease();
      *uint64_t v211 = v26;
      v211[1] = 0;
      uint64_t v312 = sub_10006E510();
      sub_1000551F4();
      sub_1000551E8();
      v313();
      sub_100007770((uint64_t)v211, 0, 1, v312);
      goto LABEL_262;
    }
    sub_1000075E8(*(void **)(v37 + 576), (SEL *)&selRef_iconSymbolName);
    if (!v314) {
      goto LABEL_238;
    }
    sub_1000075E8(*(void **)(v37 + 576), (SEL *)&selRef_iconBackgroundColorName);
    if (!v315) {
      goto LABEL_237;
    }
    id v316 = [(id)sub_1000588BC() definition];
    if (v316)
    {
      uint64_t v317 = v316;
      id v318 = [v316 objectForKey:WFActionIconSymbolColorNameKey];

      if (v318)
      {
        sub_10006F4F0();
        uint64_t v319 = swift_unknownObjectRelease();
      }
      else
      {
        sub_100059C6C();
      }
      uint64_t v324 = v393 + 536;
      sub_10005942C(v319, v320, &qword_100082450);
      uint64_t v37 = v393;
      if (*(void *)(v393 + 328))
      {
        if (sub_1000560FC())
        {
          sub_100058858();
          goto LABEL_246;
        }
LABEL_245:
        sub_100055CCC(*(void *)(v37 + 720), v325, v326, *(void *)(v37 + 632));
LABEL_246:
        sub_100059D50();
        swift_bridgeObjectRelease();
        BOOL v327 = v83 == &selRef_parameterKey && v26 == 0xE400000000000000;
        if (v327 || (sub_100055554() & 1) != 0)
        {
          uint64_t v328 = sub_100058FBC();
          sub_1000532F0(v328, v324, &qword_1000823A8);
          sub_100055EE0(v324, 1, (uint64_t)&selRef_parameterKey);
          if (!v114)
          {
            uint64_t v330 = sub_100057810();
            sub_100053404(v330, &qword_1000823A8);
            swift_bridgeObjectRelease();
            uint64_t v331 = *(void (**)(void))(v37 + 32);
            sub_100055B64();
            v331();
            sub_100055B64();
            v331();
LABEL_261:
            uint64_t v336 = *(uint64_t **)(v302 + 768);
            uint64_t v337 = *(void *)(v302 + 680);
            sub_100055330();
            v338();
            sub_10000772C(&qword_100082460);
            *uint64_t v336 = v381;
            v336[1] = v383;
            uint64_t v37 = v337 + 32;
            sub_100055B64();
            v339();
            sub_10006E510();
            sub_1000551F4();
            sub_1000551E8();
            v340();
            sub_100059D90();
            goto LABEL_262;
          }
          sub_100053404(*(void *)(v37 + 712), &qword_1000823A8);
        }
        sub_100058354();
        sub_100055D1C();
        if (v114)
        {
          sub_1000551E8();
          v329();
          sub_100053404(v26, &qword_1000823A8);
        }
        else
        {
          sub_1000589D8();
          v332();
        }
        uint64_t v333 = sub_100057830();
        sub_100053348(v333, v26, &qword_1000823A8);
        sub_100055D54();
        if (v114)
        {
          sub_100055330();
          v334();
          sub_100053404(v26, &qword_1000823A8);
          uint64_t v310 = *(void (**)(void))(v324 + 32);
        }
        else
        {
          sub_100058EF8();
          v310();
        }
        sub_100058E9C();
        sub_10000772C(&qword_100082458);
        sub_100056840();
        v310();
        uint64_t v335 = sub_100056418();
        ((void (*)(uint64_t))v310)(v335);
        goto LABEL_261;
      }
    }
    else
    {
      *uint64_t v272 = 0u;
      v272[1] = 0u;
      uint64_t v324 = v393 + 536;
    }
    sub_100053404((uint64_t)v272, &qword_100082450);
    goto LABEL_245;
  }
  uint64_t v47 = sub_100056CE4();
  sub_100055EA4(v47);
  sub_100058840((uint64_t)"ToolVisibilityFlag");
  while (1)
  {
    if (v374)
    {
      uint64_t v37 = *(void *)(v371 + 16);
      sub_100055580();
      ((void (*)(void))v37)();
      goto LABEL_19;
    }
    uint64_t v50 = sub_1000586A4(v48, v49, (void (*)(void))&type metadata accessor for ToolVisibilityFlag);
    if (v372 != 8) {
      break;
    }
    *(void *)(v393 + 416) = v50;
    uint64_t v37 = *v39;
    sub_100055580();
    ((void (*)(void))v37)();
    swift_unknownObjectRelease();
LABEL_19:
    id v51 = (void (**)(void))(v29 + 1);
    if (__OFADD__(v29, 1))
    {
      __break(1u);
      goto LABEL_234;
    }
    uint64_t v382 = *v384;
    sub_100055548();
    v52();
    sub_100055580();
    ((void (*)(void))v37)();
    sub_10006E3E0();
    sub_100052038(&qword_100082440, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
    char v53 = sub_100058A48();
    unint64_t v54 = *v391;
    sub_10005521C();
    v54();
    if (v53)
    {
      uint64_t v55 = *(void **)(v393 + 576);
      sub_100055234();
      v54();
      if ([v55 visibleForUse:0])
      {
        sub_1000564FC();
        uint64_t v56 = sub_100057738();
        ((void (*)(uint64_t))v37)(v56);
        sub_100059330();
        uint64_t v57 = sub_100058E04();
        sub_1000557CC(v57);
        if (v58)
        {
          id v51 = v391;
          sub_100055240();
          v54();
          sub_1000566C4();
          ((void (*)(void))v37)();
          sub_1000566C4();
          ((void (*)(void))v37)();
          sub_100057370();
          char v65 = v382;
          uint64_t v37 = (uint64_t)v384;
        }
        else
        {
LABEL_27:
          char v65 = v382;
          uint64_t v37 = (uint64_t)v384;
          sub_100055B64();
          v382();
          id v51 = v391;
        }
        goto LABEL_34;
      }
    }
    else
    {
      sub_1000591B8();
      id v51 = v391;
      char v59 = sub_100056248();
      sub_100055240();
      v54();
      if (v59)
      {
        uint64_t v60 = *(void **)(v393 + 576);
        sub_100055240();
        v54();
        [v60 visibleForUse:1];
        uint64_t v26 = v381;
        sub_1000592D0();
        if (v61)
        {
          sub_100057288();
          uint64_t v62 = sub_100057D0C();
          ((void (*)(uint64_t))v37)(v62);
          sub_100059724();
          uint64_t v63 = sub_100058F1C();
          sub_1000557CC(v63);
          if ((v64 & 1) == 0) {
            goto LABEL_27;
          }
          id v51 = v391;
          sub_100055240();
          v54();
          sub_100057180();
          ((void (*)(void))v37)();
          sub_100057180();
          ((void (*)(void))v37)();
          sub_100057370();
          char v65 = v382;
          uint64_t v37 = (uint64_t)v384;
LABEL_34:
          uint64_t v68 = sub_100055394();
          ((void (*)(unsigned char *))v65)(v68);
          sub_100055240();
          v54();
          sub_1000592D0();
          goto LABEL_35;
        }
      }
      else
      {
        sub_10006E3C0();
        char v66 = sub_100056248();
        sub_100055240();
        v54();
        if ((v66 & 1) == 0)
        {

          sub_10004651C(27);
          swift_bridgeObjectRelease();
          sub_100056748();
          sub_100056790(v198);
          sub_100052038(&qword_100082448, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
          v395._countAndFlagsBits = sub_10006F750();
          sub_100058D34(v395);
          swift_bridgeObjectRelease();
          sub_10006F080();
          sub_100055C44();
          goto LABEL_130;
        }
        sub_100055240();
        v54();
        sub_1000114F0();
        ((void (*)(void))v37)();
        sub_10006E3E0();
        char v67 = sub_10006F500();
        uint64_t v26 = v381;
        sub_100055234();
        v54();
        sub_100055234();
        v54();
        id v51 = v387;
        if ((v67 & 1) != 0 && [*(id *)(v393 + 576) isApprovedForPublicShortcutsDrawer])
        {
          sub_100058544();
          sub_100042A3C((char *)v37, v381);
          sub_100055234();
          v54();
LABEL_35:
          sub_100055234();
          v54();
          uint64_t v26 = v381;
        }
      }
    }
    sub_100055234();
    uint64_t v48 = ((uint64_t (*)(void))v54)();
    ++v29;
    uint64_t v39 = (uint64_t *)v390;
    if (v51 == (void (**)(void))v376) {
      goto LABEL_37;
    }
  }
  __break(1u);
LABEL_237:
  swift_bridgeObjectRelease();
LABEL_238:
  swift_bridgeObjectRelease();
  sub_100058FCC();
  uint64_t v321 = sub_10006E510();
  sub_100055CCC(v26, v322, v323, v321);
LABEL_262:
  id v341 = sub_10005548C();
  sub_10006F050();
  uint64_t v343 = v342;

  uint64_t v344 = swift_task_alloc();
  sub_100055614(v344);
  sub_10005720C();
  sub_1000557F0();
  if (v343)
  {
    uint64_t v345 = *(void *)(v37 + 768);
    sub_10005521C();
    v346();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_100053404(v345, &qword_1000823B8);
    sub_1000556D0();
    v347();
    sub_100055234();
    v348();
    swift_bridgeObjectRelease();
    sub_1000588E0();
    swift_bridgeObjectRelease();
    sub_100055240();
    v349();
    swift_bridgeObjectRelease();
    sub_100055228();
    v350();
    swift_bridgeObjectRelease();
    sub_100054C30();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100058F80();
  }
  else
  {
    sub_100054630();
    v351();

    swift_bridgeObjectRelease();
    uint64_t v352 = swift_task_dealloc();
    sub_100057300(v352, &qword_1000823B8);
    sub_100055228();
    v353();
    sub_1000553C4();
    v354();
    swift_bridgeObjectRelease();
    sub_100058674();
    swift_bridgeObjectRelease();
    sub_100055234();
    v355();
    swift_bridgeObjectRelease();
    sub_100055C1C();
    v356();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001151C();
  }
  sub_100055194();
  v358(v357, v358, v359, v360, v361, v362, v363, v364, a9, a10, a11, a12);
}

uint64_t sub_100041884()
{
  return sub_10006E5B0();
}

uint64_t sub_1000418D8()
{
  return sub_10006E5B0();
}

uint64_t sub_10004192C(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = a1;
  uint64_t v4 = sub_10006DE30();
  __chkstk_darwin(v4 - 8);
  unint64_t v45 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10006E540();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  __chkstk_darwin(v6);
  uint64_t v46 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10006E190();
  uint64_t v48 = *(void *)(v8 - 8);
  uint64_t v49 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  BOOL v44 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v43 = (char *)&v40 - v12;
  __chkstk_darwin(v11);
  uint64_t v47 = (char *)&v40 - v13;
  uint64_t v14 = sub_10006E1B0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v20 = (char *)&v40 - v19;
  uint64_t v50 = a2;
  uint64_t result = sub_10006E1A0();
  int64_t v22 = 0;
  uint64_t v23 = *(void *)(result + 64);
  uint64_t v51 = result + 64;
  uint64_t v56 = result;
  uint64_t v24 = 1 << *(unsigned char *)(result + 32);
  uint64_t v25 = -1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  unint64_t v26 = v25 & v23;
  uint64_t v54 = v15 + 16;
  int64_t v52 = (unint64_t)(v24 + 63) >> 6;
  uint64_t v53 = v15 + 32;
  uint64_t v27 = (void (**)(char *, uint64_t))(v15 + 8);
  if ((v25 & v23) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v28 = __clz(__rbit64(v26));
  v26 &= v26 - 1;
  for (unint64_t i = v28 | (v22 << 6); ; unint64_t i = __clz(__rbit64(v31)) + (v22 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v20, *(void *)(v56 + 56) + *(void *)(v15 + 72) * i, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    sub_10006E760();
    if (v2)
    {
      (*v27)(v18, v14);
      return swift_release();
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v27)(v18, v14);
    if (v26) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v22++, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      return result;
    }
    if (v22 >= v52) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v51 + 8 * v22);
    if (!v31) {
      break;
    }
LABEL_17:
    unint64_t v26 = (v31 - 1) & v31;
  }
  int64_t v32 = v22 + 1;
  if (v22 + 1 >= v52) {
    goto LABEL_26;
  }
  unint64_t v31 = *(void *)(v51 + 8 * v32);
  if (v31) {
    goto LABEL_16;
  }
  int64_t v32 = v22 + 2;
  if (v22 + 2 >= v52) {
    goto LABEL_26;
  }
  unint64_t v31 = *(void *)(v51 + 8 * v32);
  if (v31) {
    goto LABEL_16;
  }
  int64_t v32 = v22 + 3;
  if (v22 + 3 >= v52) {
    goto LABEL_26;
  }
  unint64_t v31 = *(void *)(v51 + 8 * v32);
  if (v31)
  {
LABEL_16:
    int64_t v22 = v32;
    goto LABEL_17;
  }
  int64_t v32 = v22 + 4;
  if (v22 + 4 < v52)
  {
    unint64_t v31 = *(void *)(v51 + 8 * v32);
    if (!v31)
    {
      while (1)
      {
        int64_t v22 = v32 + 1;
        if (__OFADD__(v32, 1)) {
          goto LABEL_30;
        }
        if (v22 >= v52) {
          goto LABEL_26;
        }
        unint64_t v31 = *(void *)(v51 + 8 * v22);
        ++v32;
        if (v31) {
          goto LABEL_17;
        }
      }
    }
    goto LABEL_16;
  }
LABEL_26:
  uint64_t v33 = v49;
  uint64_t v34 = v47;
  uint64_t v35 = v48;
  swift_release();
  sub_10006E1E0();
  sub_10006E550();
  sub_100052038(&qword_100082368, (void (*)(uint64_t))&type metadata accessor for ToolDatabase.LaunchServicesSnapshotDatabaseVersionKey);
  sub_10006E7D0();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v34, v33);
  }
  uint64_t v36 = *(void (**)(char *, uint64_t))(v35 + 8);
  v36(v34, v33);
  uint64_t v37 = v43;
  sub_10006E1E0();
  sub_10006E180();
  v36(v37, v33);
  uint64_t v38 = v44;
  sub_10006E1E0();
  sub_10006E170();
  v36(v38, v33);
  uint64_t v39 = v46;
  sub_10006E530();
  sub_10006E520();
  sub_100052038(&qword_100082370, (void (*)(uint64_t))&type metadata accessor for ToolDatabase.LaunchServicesDatabaseVersionKey);
  sub_10006E7D0();
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v39, v42);
}

uint64_t sub_100041F34(uint64_t a1)
{
  uint64_t v26 = a1;
  uint64_t v2 = sub_10006E060();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t result = sub_10006E050();
  int64_t v10 = 0;
  uint64_t v11 = *(void *)(result + 64);
  uint64_t v22 = result + 64;
  uint64_t v27 = result;
  uint64_t v12 = 1 << *(unsigned char *)(result + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  uint64_t v25 = v3 + 16;
  int64_t v23 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v24 = v3 + 32;
  uint64_t v15 = (void (**)(char *, uint64_t))(v3 + 8);
  if ((v13 & v11) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v16 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v10 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, *(void *)(v27 + 56) + *(void *)(v3 + 72) * i, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    sub_10006E6A0();
    if (v1)
    {
      (*v15)(v6, v2);
      return swift_release();
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v15)(v6, v2);
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v10 >= v23) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v22 + 8 * v10);
    if (!v19) {
      break;
    }
LABEL_17:
    unint64_t v14 = (v19 - 1) & v19;
  }
  int64_t v20 = v10 + 1;
  if (v10 + 1 >= v23) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v22 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v10 + 2;
  if (v10 + 2 >= v23) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v22 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v10 + 3;
  if (v10 + 3 >= v23) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v22 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v10 + 4;
  if (v10 + 4 >= v23) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v22 + 8 * v20);
  if (v19)
  {
LABEL_16:
    int64_t v10 = v20;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v23) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v22 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10004220C()
{
  uint64_t v0 = sub_10006E630();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006E620();
  sub_10006E580();
  sub_100052038(&qword_100082360, (void (*)(uint64_t))&type metadata accessor for ToolDatabase.VersionKey);
  sub_10006E7D0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_10004233C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_100058600();
  a19 = v22;
  a20 = v23;
  uint64_t v25 = v24;
  uint64_t v42 = v26;
  uint64_t v28 = v27;
  uint64_t v30 = v29(0);
  sub_10001148C();
  ((void (*)(void))__chkstk_darwin)();
  int64_t v32 = (char *)&v41 - v31;
  uint64_t v33 = sub_10000772C(v25);
  uint64_t v34 = sub_100055A7C(v33);
  __chkstk_darwin(v34);
  sub_1000585A8();
  uint64_t v35 = sub_100059560();
  sub_1000532F0(v35, v36, v25);
  uint64_t v37 = 1;
  if (sub_100007800(v21, 1, v30) == 1) {
    goto LABEL_5;
  }
  sub_100055548();
  v38();
  v42(v32, &a10);
  if (!v20)
  {
    sub_1000553C4();
    v40();
    uint64_t v37 = 0;
LABEL_5:
    sub_100007770(v28, v37, 1, v30);
    goto LABEL_6;
  }
  sub_1000553C4();
  v39();
LABEL_6:
  sub_100057F78();
}

unint64_t *sub_1000424BC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) <= *(void *)(a2 + 16) >> 3)
  {
    sub_100047DCC(a1);
    return (unint64_t *)a2;
  }
  else
  {
    return sub_100048470(a1, a2);
  }
}

void sub_100042520()
{
  sub_100058600();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  v7(0);
  sub_100052038(v4, v2);
  sub_10006E110();
  if (v0) {
    *uint64_t v6 = v0;
  }
  sub_100057F78();
}

uint64_t sub_1000425B4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_10006E360();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009038(a1, (uint64_t)v46);
  if (swift_dynamicCast())
  {
    uint64_t v10 = v45[0];
    uint64_t v11 = v45[1];
    uint64_t v12 = sub_10006E850();
    uint64_t v13 = swift_allocBox();
    uint64_t v15 = (double *)v14;
    *unint64_t v14 = v10;
    v14[1] = v11;
    unint64_t v16 = (unsigned int *)&enum case for TypedValue.PrimitiveValue.string(_:);
LABEL_5:
    (*(void (**)(double *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v15, *v16, v12);
    *a3 = v13;
    uint64_t v19 = enum case for TypedValue.primitive(_:);
    uint64_t v20 = sub_10006E880();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(a3, v19, v20);
    uint64_t v21 = (uint64_t)a3;
    uint64_t v22 = 0;
    uint64_t v23 = v20;
    return sub_100007770(v21, v22, 1, v23);
  }
  sub_100009038(a1, (uint64_t)v46);
  if (swift_dynamicCast())
  {
    uint64_t v17 = v45[0];
    uint64_t v12 = sub_10006E850();
    uint64_t v13 = swift_allocBox();
    uint64_t v15 = v18;
    *uint64_t v18 = (double)v17;
    unint64_t v16 = (unsigned int *)&enum case for TypedValue.PrimitiveValue.number(_:);
    goto LABEL_5;
  }
  sub_10006E280();
  sub_100009038(a1, (uint64_t)v46);
  id v24 = a2;
  uint64_t v25 = sub_10006E350();
  os_log_type_t v26 = sub_10006F310();
  int v27 = v26;
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v28 = swift_slowAlloc();
    int v41 = v27;
    unint64_t v29 = (uint8_t *)v28;
    uint64_t v39 = (void *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    uint64_t DynamicType = (uint64_t)v24;
    v45[0] = v42;
    uint64_t v38 = v29;
    *(_DWORD *)unint64_t v29 = 138412546;
    os_log_t v40 = v25;
    id v30 = v24;
    uint64_t v43 = v7;
    id v31 = v30;
    sub_10006F4D0();
    *uint64_t v39 = v24;

    int64_t v32 = v38;
    *((_WORD *)v38 + 6) = 2080;
    sub_1000530E4(v46, v46[3]);
    uint64_t DynamicType = swift_getDynamicType();
    sub_10000772C(&qword_1000824E8);
    uint64_t v33 = sub_10006F060();
    uint64_t DynamicType = sub_100046AE8(v33, v34, v45);
    sub_10006F4D0();
    swift_bridgeObjectRelease();
    sub_100052558((uint64_t)v46);
    os_log_t v35 = v40;
    _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v41, "Unhandled compared value in parameter: %@: %s", v32, 0x16u);
    sub_10000772C(&qword_100082350);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v6);
  }
  else
  {

    sub_100052558((uint64_t)v46);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v23 = sub_10006E880();
  uint64_t v21 = (uint64_t)a3;
  uint64_t v22 = 1;
  return sub_100007770(v21, v22, 1, v23);
}

uint64_t sub_100042A3C(char *a1, uint64_t a2)
{
  id v30 = a1;
  uint64_t v4 = sub_10000772C(&qword_1000823D8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v28 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v24 - v7;
  uint64_t v9 = sub_10006E3F0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v24 - v14;
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v27 = v2;
  uint64_t v25 = v16;
  v16(v13, v2, v9);
  v24[1] = sub_100052038(&qword_100082428, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
  sub_10006F510();
  sub_100052038(&qword_100082440, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
  uint64_t v26 = a2;
  char v17 = sub_10006F010() ^ 1;
  uint64_t v29 = v4;
  uint64_t v18 = &v8[*(int *)(v4 + 48)];
  *uint64_t v8 = v17 & 1;
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    uint64_t v21 = v25;
    uint64_t v20 = v26;
    v25(v18, v26, v9);
    v21(v13, v20, v9);
    sub_10006F520();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v19(v18, v15, v9);
  }
  uint64_t v22 = &v28[*(int *)(v29 + 48)];
  v19(v22, v18, v9);
  v19(v30, v22, v9);
  return v17 & 1;
}

uint64_t sub_100042D34(char *a1, uint64_t a2)
{
  id v30 = a1;
  uint64_t v4 = sub_10000772C(&qword_100082478);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v28 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v24 - v7;
  uint64_t v9 = sub_10006E500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v24 - v14;
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v27 = v2;
  uint64_t v25 = v16;
  v16(v13, v2, v9);
  v24[1] = sub_100052038(&qword_100082420, (void (*)(uint64_t))&type metadata accessor for ToolFlag);
  sub_10006F510();
  sub_100052038(&qword_100082480, (void (*)(uint64_t))&type metadata accessor for ToolFlag);
  uint64_t v26 = a2;
  char v17 = sub_10006F010() ^ 1;
  uint64_t v29 = v4;
  uint64_t v18 = &v8[*(int *)(v4 + 48)];
  *uint64_t v8 = v17 & 1;
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    uint64_t v21 = v25;
    uint64_t v20 = v26;
    v25(v18, v26, v9);
    v21(v13, v20, v9);
    sub_10006F520();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v19(v18, v15, v9);
  }
  uint64_t v22 = &v28[*(int *)(v29 + 48)];
  v19(v22, v18, v9);
  v19(v30, v22, v9);
  return v17 & 1;
}

uint64_t sub_10004302C(void *a1)
{
  id v1 = [a1 identifier];
  sub_10006F050();

  return sub_100056A90();
}

uint64_t sub_10004307C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10006E3F0();
  uint64_t v3 = swift_projectBox();
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_10004310C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10006F050();
  uint64_t v4 = v3;
  if (v2 == sub_10006F050() && v4 == v5) {
    goto LABEL_27;
  }
  char v7 = sub_10006F780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_28:
    int64_t v32 = (unsigned int *)&enum case for RuntimePlatform.phone(_:);
    goto LABEL_29;
  }
  uint64_t v8 = sub_10006F050();
  uint64_t v10 = v9;
  if (v8 == sub_10006F050() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_33;
  }
  char v13 = sub_10006F780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13)
  {
LABEL_33:
    int64_t v32 = (unsigned int *)&enum case for RuntimePlatform.pad(_:);
    goto LABEL_29;
  }
  uint64_t v14 = sub_10006F050();
  uint64_t v16 = v15;
  if (v14 == sub_10006F050() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_35;
  }
  char v19 = sub_10006F780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19)
  {
LABEL_35:
    int64_t v32 = (unsigned int *)&enum case for RuntimePlatform.watch(_:);
    goto LABEL_29;
  }
  uint64_t v20 = sub_10006F050();
  uint64_t v22 = v21;
  if (v20 == sub_10006F050() && v22 == v23)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_37;
  }
  char v25 = sub_10006F780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v25)
  {
LABEL_37:
    int64_t v32 = (unsigned int *)&enum case for RuntimePlatform.macintosh(_:);
    goto LABEL_29;
  }
  uint64_t v26 = sub_10006F050();
  uint64_t v28 = v27;
  if (v26 == sub_10006F050() && v28 == v29)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v31 = sub_10006F780();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v31 & 1) == 0)
    {
      sub_10006F6D0();
      __break(1u);
LABEL_27:
      swift_bridgeObjectRelease_n();
      goto LABEL_28;
    }
  }
  int64_t v32 = (unsigned int *)&enum case for RuntimePlatform.vision(_:);
LABEL_29:
  uint64_t v33 = *v32;
  uint64_t v34 = sub_10006EAA0();
  os_log_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104);
  return v35(a1, v33, v34);
}

uint64_t sub_100043434()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_10004F318(v1);
  swift_bridgeObjectRelease();
  uint64_t v5 = v2;
  sub_10004F18C((uint64_t *)&v5);
  uint64_t v3 = (uint64_t)v5;
  if (v0) {
    swift_release();
  }
  return v3;
}

uint64_t sub_1000434A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char *a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long a11, uint64_t *a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t a17)
{
  uint64_t v177 = a8;
  uint64_t v165 = a7;
  LODWORD(v181) = a6;
  uint64_t v179 = a5;
  uint64_t v176 = a4;
  uint64_t v166 = a1;
  int v180 = a12;
  long long v178 = a11;
  uint64_t v164 = a10;
  uint64_t v175 = a9;
  uint64_t v19 = sub_10000772C(&qword_1000823E0);
  __chkstk_darwin(v19 - 8);
  id v149 = (char *)&v142 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_10006EA40();
  uint64_t v147 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v151 = (char *)&v142 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = _s15ActionParameterVMa(0);
  uint64_t v146 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v153 = (char *)&v142 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_10000772C(&qword_100082498);
  __chkstk_darwin(v150);
  uint64_t v145 = (char *)&v142 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10000772C(&qword_1000824A0);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v27 = (char **)((char *)&v142 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v142 - v28;
  uint64_t v30 = sub_10006E500();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v142 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v142 - v35;
  BOOL v184 = a2;
  uint64_t v185 = a3;
  uint64_t v186 = v176;
  unint64_t v187 = v179;
  char v188 = v181 & 1;
  uint64_t v189 = v165;
  uint64_t v190 = v177;
  uint64_t v191 = v175;
  uint64_t v192 = v164;
  long long v193 = v178;
  uint64_t v194 = v180;
  uint64_t v37 = v182;
  uint64_t result = sub_10006E800();
  if (v37) {
    return result;
  }
  uint64_t v183 = v36;
  uint64_t v159 = v34;
  uint64_t v160 = v30;
  char v143 = (uint64_t *)v29;
  uint64_t v144 = v27;
  id v162 = a2;
  unint64_t v39 = a13;
  uint64_t v40 = v195[8];
  if (a13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_10006F6F0();
  }
  else
  {
    uint64_t v41 = *(void *)((a13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v42 = v165;
  uint64_t v43 = v164;
  uint64_t v163 = v40;
  uint64_t v182 = 0;
  unint64_t v161 = a13;
  if (v41)
  {
    unint64_t v158 = a13 & 0xC000000000000001;
    id v157 = (void (**)(char *, void *, uint64_t))(v31 + 16);
    id v156 = (uint64_t (**)(char *, uint64_t))(v31 + 8);
    uint64_t v44 = 4;
    char v155 = (char *)&type metadata for () + 8;
    uint64_t v154 = v41;
    do
    {
      unint64_t v45 = v162;
      if (v158) {
        id v46 = (id)sub_10006F620();
      }
      else {
        id v46 = *(id *)(v39 + 8 * v44);
      }
      id v47 = v46;
      if (__OFADD__(v44 - 4, 1))
      {
        __break(1u);
LABEL_69:
        uint64_t v136 = swift_bridgeObjectRelease();
        __chkstk_darwin(v136);
        uint64_t v137 = v163;
        uint64_t v140 = v176;
        uint64_t v141 = v163;
        uint64_t v138 = v182;
        uint64_t result = sub_10006E800();
        if (!v138)
        {
          __chkstk_darwin(result);
          *(&v142 - 4) = v139;
          *(&v142 - 3) = v43;
          uint64_t v140 = v137;
          return sub_10006E800();
        }
        return result;
      }
      id v48 = [v45 localizedNameWithContext:v46];
      int v180 = (uint64_t *)sub_10006F050();
      uint64_t v181 = v49;

      id v50 = [v45 localizedDescriptionSummaryWithContext:v47];
      if (v50)
      {
        uint64_t v51 = v50;
        *(void *)&long long v178 = sub_10006F050();
        uint64_t v53 = v52;
      }
      else
      {
        *(void *)&long long v178 = 0;
        uint64_t v53 = 0;
      }
      id v54 = [v45 localizedDescriptionAttributionMarkdownStringWithContext:v47];
      if (v54)
      {
        uint64_t v55 = v54;
        uint64_t v175 = sub_10006F050();
        uint64_t v57 = v56;
      }
      else
      {
        uint64_t v175 = 0;
        uint64_t v57 = 0;
      }
      id v58 = [v45 localizedDescriptionResultWithContext:v47];
      if (v58)
      {
        char v59 = v58;
        uint64_t v174 = sub_10006F050();
        uint64_t v177 = v60;
      }
      else
      {
        uint64_t v174 = 0;
        uint64_t v177 = 0;
      }
      id v61 = [v45 localizedDescriptionNoteWithContext:v47];
      uint64_t v168 = v44 - 3;
      if (v61)
      {
        uint64_t v62 = v61;
        uint64_t v173 = sub_10006F050();
        uint64_t v176 = v63;
      }
      else
      {
        uint64_t v173 = 0;
        uint64_t v176 = 0;
      }
      id v64 = [v45 localizedDescriptionRequiresWithContext:v47];
      if (v64)
      {
        char v65 = v64;
        uint64_t v171 = sub_10006F050();
        uint64_t v67 = v66;
      }
      else
      {
        uint64_t v171 = 0;
        uint64_t v67 = 0;
      }
      uint64_t v179 = v57;
      uint64_t v68 = v47;
      id v69 = [v45 localizedDefaultOutputNameWithContext:v47];
      uint64_t v167 = v44;
      uint64_t v172 = v67;
      if (v69)
      {
        uint64_t v70 = v69;
        uint64_t v71 = v53;
        uint64_t v170 = sub_10006F050();
        uint64_t v169 = v72;
      }
      else
      {
        uint64_t v71 = v53;
        uint64_t v170 = 0;
        uint64_t v169 = 0;
      }
      uint64_t v73 = v160;
      (*v157)(v183, (void *)v43, v160);
      uint64_t v74 = v159;
      sub_10006E490();
      sub_100052038(&qword_100082420, (void (*)(uint64_t))&type metadata accessor for ToolFlag);
      char v75 = sub_10006F500();
      uint64_t v76 = *v156;
      uint64_t v77 = v74;
      uint64_t v78 = v183;
      (*v156)(v77, v73);
      id v79 = (id)v76(v78, v73);
      if (v75)
      {
        id v79 = [v45 localizedDiscontinuedDescriptionWithContext:v47];
        uint64_t v80 = v71;
        uint64_t v81 = v180;
        uint64_t v82 = v175;
        uint64_t v83 = v174;
        if (v79)
        {
          uint64_t v84 = v79;
          sub_10006F050();
          uint64_t v86 = v85;
        }
        else
        {
          uint64_t v86 = 0;
        }
      }
      else
      {
        uint64_t v86 = 0;
        uint64_t v80 = v71;
        uint64_t v81 = v180;
        uint64_t v82 = v175;
        uint64_t v83 = v174;
      }
      int v180 = &v142;
      __chkstk_darwin(v79);
      *(&v142 - 18) = v163;
      *(&v142 - 17) = (uint64_t)v47;
      *(&v142 - 16) = (uint64_t)v81;
      *(&v142 - 15) = v87;
      uint64_t v88 = v169;
      *(&v142 - 14) = v170;
      *(&v142 - 13) = v88;
      *(&v142 - 12) = v178;
      *(&v142 - 11) = v80;
      unint64_t v89 = v179;
      *(&v142 - 10) = v82;
      *(&v142 - 9) = (uint64_t)v89;
      *(&v142 - 8) = v83;
      uint64_t v90 = v173;
      *(&v142 - 7) = v177;
      *(&v142 - 6) = v90;
      uint64_t v91 = v171;
      *(&v142 - 5) = v176;
      *(&v142 - 4) = v91;
      *(&v142 - 3) = v172;
      uint64_t v140 = v92;
      uint64_t v181 = v86;
      uint64_t v141 = v86;
      uint64_t v93 = v182;
      sub_10006E800();
      uint64_t v182 = v93;
      if (v93)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v44 = v167 + 1;
      unint64_t v39 = v161;
      uint64_t v42 = v165;
      uint64_t v43 = v164;
    }
    while (v168 != v154);
  }
  uint64_t v94 = swift_bridgeObjectRelease();
  __chkstk_darwin(v94);
  uint64_t v95 = v163;
  uint64_t v140 = a14;
  uint64_t v141 = v163;
  uint64_t v96 = v182;
  uint64_t result = sub_10006E800();
  uint64_t v43 = (uint64_t)v162;
  if (v96) {
    return result;
  }
  __chkstk_darwin(result);
  uint64_t v97 = sub_10006E800();
  __chkstk_darwin(v97);
  uint64_t v140 = v42;
  uint64_t v141 = v95;
  sub_10006E800();
  uint64_t v179 = (char *)&type metadata for () + 8;
  uint64_t v182 = 0;
  uint64_t v176 = a17;
  uint64_t v98 = *a16;
  uint64_t v177 = v147 + 16;
  *(void *)&long long v178 = v147 + 32;
  int v180 = (uint64_t *)(v147 + 8);
  swift_bridgeObjectRetain();
  uint64_t v99 = 0;
  uint64_t v100 = v148;
  uint64_t v101 = v151;
  uint64_t v102 = (uint64_t)v153;
  uint64_t v181 = v98;
  while (1)
  {
    id v103 = *(char **)(v98 + 16);
    uint64_t v104 = v150;
    uint64_t v105 = (uint64_t)v144;
    if (v99 == v103)
    {
      uint64_t v183 = v99;
      uint64_t v106 = 1;
      goto LABEL_43;
    }
    if (v99 >= v103) {
      break;
    }
    uint64_t v107 = v99 + 1;
    id v108 = v99;
    sub_1000531D0();
    id v109 = v144;
    *uint64_t v144 = v108;
    uint64_t v105 = (uint64_t)v109;
    sub_100053220();
    uint64_t v106 = 0;
    uint64_t v183 = v107;
LABEL_43:
    sub_100007770(v105, v106, 1, v104);
    uint64_t v110 = v105;
    uint64_t v111 = v143;
    sub_100053348(v110, (uint64_t)v143, &qword_1000824A0);
    if (sub_100007800((uint64_t)v111, 1, v104) == 1) {
      goto LABEL_69;
    }
    uint64_t v112 = *v111;
    sub_100053220();
    uint64_t v113 = sub_10006E940();
    char v114 = *(unsigned char *)(v113 + 32);
    uint64_t v115 = 1 << v114;
    unint64_t v116 = *(void *)(v113 + 56);
    if (v116)
    {
      uint64_t v117 = 0;
      uint64_t v102 = (uint64_t)v149;
      uint64_t v118 = v163;
    }
    else
    {
      uint64_t v102 = (uint64_t)v149;
      if ((v114 & 0x3Fu) < 7)
      {
        uint64_t v121 = 1;
        uint64_t v118 = v163;
        goto LABEL_56;
      }
      unint64_t v116 = *(void *)(v113 + 64);
      uint64_t v118 = v163;
      if (!v116)
      {
        uint64_t v135 = 9;
        while (v135 - 7 < (unint64_t)(v115 + 63) >> 6)
        {
          unint64_t v116 = *(void *)(v113 + 8 * v135++);
          if (v116)
          {
            uint64_t v117 = v135 - 8;
            goto LABEL_46;
          }
        }
LABEL_47:
        uint64_t v121 = 1;
        goto LABEL_56;
      }
      uint64_t v117 = 1;
    }
LABEL_46:
    unint64_t v119 = __clz(__rbit64(v116));
    uint64_t v120 = v119 + (v117 << 6);
    if (v120 == v115) {
      goto LABEL_47;
    }
    if (v120 < 0 || v120 >= v115) {
      goto LABEL_74;
    }
    if (((*(void *)(v113 + 56 + (((unint64_t)v120 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v119) & 1) == 0) {
      goto LABEL_75;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 16))(v102, *(void *)(v113 + 48) + *(void *)(v147 + 72) * v120, v100);
    uint64_t v121 = 0;
LABEL_56:
    sub_100007770(v102, v121, 1, v100);
    swift_bridgeObjectRelease();
    if (sub_100007800(v102, 1, v100) == 1) {
      goto LABEL_76;
    }
    uint64_t v122 = (*(uint64_t (**)(char *, uint64_t, uint64_t))v178)(v101, v102, v100);
    __chkstk_darwin(v122);
    uint64_t v123 = (uint64_t)v153;
    *(&v142 - 4) = v118;
    *(&v142 - 3) = v123;
    uint64_t v140 = (uint64_t)v101;
    uint64_t v141 = v112;
    uint64_t v124 = v182;
    sub_10006E800();
    if (v124)
    {
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))*v180)(v101, v100);
      return sub_100052E7C(v123, (void (*)(void))_s15ActionParameterVMa);
    }
    uint64_t v125 = *(void *)(v123 + *(int *)(v152 + 44));
    uint64_t v126 = *(void *)(v125 + 16);
    uint64_t v127 = v123;
    if (v126)
    {
      uint64_t v128 = swift_bridgeObjectRetain();
      uint64_t v182 = v128;
      uint64_t v129 = (uint64_t *)(v128 + 72);
      do
      {
        uint64_t v130 = *(v129 - 4);
        uint64_t v131 = *(v129 - 3);
        uint64_t v132 = *(v129 - 2);
        uint64_t v133 = *(v129 - 1);
        uint64_t v134 = *v129;
        v195[0] = *(v129 - 5);
        v195[1] = v130;
        v195[2] = v131;
        v195[3] = v132;
        v195[4] = v133;
        v195[5] = v134;
        __chkstk_darwin(v128);
        *(&v142 - 4) = v163;
        *(&v142 - 3) = v127;
        uint64_t v140 = (uint64_t)v195;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10006E800();
        v129 += 6;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v128 = swift_bridgeObjectRelease();
        --v126;
        uint64_t v127 = (uint64_t)v153;
      }
      while (v126);
      uint64_t v125 = swift_bridgeObjectRelease();
      uint64_t v43 = (uint64_t)v162;
      uint64_t v100 = v148;
    }
    __chkstk_darwin(v125);
    uint64_t v140 = v163;
    uint64_t v141 = v127;
    sub_10006E800();
    uint64_t v182 = 0;
    uint64_t v98 = v181;
    uint64_t v101 = v151;
    ((void (*)(char *, uint64_t))*v180)(v151, v100);
    sub_100052E7C(v127, (void (*)(void))_s15ActionParameterVMa);
    uint64_t v102 = v127;
    uint64_t v99 = v183;
  }
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  sub_100053404(v102, &qword_1000823E0);
  LODWORD(v141) = 0;
  uint64_t v140 = 997;
  uint64_t result = sub_10006F6D0();
  __break(1u);
  return result;
}

uint64_t sub_100044880@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, char *a14)
{
  uint64_t v60 = a8;
  uint64_t v43 = a7;
  uint64_t v55 = a4;
  uint64_t v56 = a5;
  uint64_t v54 = a3;
  uint64_t v57 = a1;
  uint64_t v41 = a9;
  uint64_t v51 = a13;
  uint64_t v52 = a14;
  uint64_t v45 = a12;
  uint64_t v44 = a11;
  uint64_t v42 = a10;
  int v53 = a6 & 1;
  uint64_t v64 = sub_10006E3F0();
  uint64_t v61 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_10006E480();
  uint64_t v18 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  id v50 = (void (**)(char *, uint64_t))((char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v62 = sub_10006E500();
  uint64_t v20 = *(void (***)(char *, uint64_t))(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10006E960();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  char v65 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = [a2 identifier];
  uint64_t v48 = sub_10006F050();
  uint64_t v49 = v27;

  unsigned int v28 = [a2 outputsMultipleItems];
  uint64_t v58 = v24;
  uint64_t v59 = v23;
  id v47 = v17;
  if (v28) {
    sub_10006E930();
  }
  else {
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v65, v43, v23);
  }
  uint64_t v29 = v63;
  uint64_t v30 = (char *)v50;
  uint64_t v46 = v18;
  uint64_t v45 = *v42;
  id v50 = v20;
  ((void (*)(char *, uint64_t, uint64_t))v20[2])(v22, v44, v62);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v30, v51, v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v31 = [a2 fillingProvider];
  sub_10006F050();
  uint64_t v33 = v32;

  uint64_t v34 = v52;
  swift_beginAccess();
  uint64_t v35 = v61;
  uint64_t v36 = v47;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v47, v34, v64);
  uint64_t v51 = v33;
  uint64_t v52 = v22;
  uint64_t v37 = sub_10006E640();
  if (v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v64);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v30, v63);
    v50[1](v52, v62);
    return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v65, v59);
  }
  else
  {
    uint64_t v39 = v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v64);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v30, v63);
    v50[1](v52, v62);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v65, v59);
    *uint64_t v41 = v39;
  }
  return result;
}

uint64_t sub_100044E04(uint64_t a1, Swift::Int64 a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7, uint64_t a8, Swift::String_optional a9, Swift::String_optional a10, Swift::String_optional a11, Swift::String_optional a12, Swift::String_optional a13, uint64_t a14)
{
  v34.value._object = a7;
  uint64_t v35 = a8;
  uint64_t v33 = a1;
  v34.value._countAndFlagsBits = a6;
  Swift::String_optional v31 = a10;
  Swift::String_optional v32 = a9;
  Swift::String_optional v29 = a12;
  Swift::String_optional v30 = a11;
  Swift::String_optional v28 = a13;
  uint64_t v18 = sub_10006DEB0();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = [a3 locale];
  sub_10006DEA0();

  uint64_t v23 = sub_10006DE50();
  uint64_t v25 = v24;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v27.value._countAndFlagsBits = a14;
  v36._countAndFlagsBits = v23;
  v36._object = v25;
  v37._countAndFlagsBits = a4;
  v37._object = a5;
  sub_10006E660(a2, v36, v37, v34, v32, v31, v30, v29, v28, v27);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100044FB8(uint64_t a1, uint64_t a2, Swift::Int64 a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    do
    {
      sub_10006E7B0(a3, *(void *)(a2 + 8 * v8 + 32));
      if (v4) {
        break;
      }
    }
    while (v5 - 1 != v8++);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100045044(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v18 = a3;
  uint64_t v5 = sub_10006E370();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *a2;
  uint64_t v10 = *(void *)(*a2 + 16);
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v11 = v6 + 16;
    uint64_t v16 = *a2;
    uint64_t v17 = v12;
    unint64_t v13 = result + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v15 = *(void *)(v11 + 56);
    swift_bridgeObjectRetain();
    while (1)
    {
      v17(v8, v13, v5);
      sub_10006E670();
      if (v3) {
        break;
      }
      (*v14)(v8, v5);
      v13 += v15;
      if (!--v10) {
        return swift_bridgeObjectRelease();
      }
    }
    (*v14)(v8, v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000451C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a1;
  uint64_t v28 = a3;
  uint64_t v4 = sub_10006EA40();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t result = sub_10006E940();
  int64_t v12 = 0;
  uint64_t v13 = *(void *)(result + 56);
  uint64_t v23 = result + 56;
  uint64_t v29 = result;
  uint64_t v14 = 1 << *(unsigned char *)(result + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v26 = v5 + 16;
  int64_t v24 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v25 = v5 + 32;
  uint64_t v17 = (void (**)(char *, uint64_t))(v5 + 8);
  if ((v15 & v13) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v18 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v12 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(void *)(v29 + 48) + *(void *)(v5 + 72) * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
    sub_10006E650();
    if (v3)
    {
      (*v17)(v8, v4);
      return swift_release();
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v17)(v8, v4);
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v24) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v23 + 8 * v12);
    if (!v21) {
      break;
    }
LABEL_15:
    unint64_t v16 = (v21 - 1) & v21;
  }
  int64_t v22 = v12 + 1;
  if (v12 + 1 >= v24) {
    return swift_release();
  }
  unint64_t v21 = *(void *)(v23 + 8 * v22);
  if (v21) {
    goto LABEL_14;
  }
  int64_t v22 = v12 + 2;
  if (v12 + 2 >= v24) {
    return swift_release();
  }
  unint64_t v21 = *(void *)(v23 + 8 * v22);
  if (v21) {
    goto LABEL_14;
  }
  int64_t v22 = v12 + 3;
  if (v12 + 3 >= v24) {
    return swift_release();
  }
  unint64_t v21 = *(void *)(v23 + 8 * v22);
  if (v21)
  {
LABEL_14:
    int64_t v12 = v22;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v24) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v23 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_15;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100045480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_10006EA40();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t))(v7 + 16))((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a4);
  sub_10006F0B0();
  _s15ActionParameterVMa(0);
  sub_10006E690();
  return swift_bridgeObjectRelease();
}

void sub_1000455D0(uint64_t a1, Swift::Int64 a2, Swift::String *a3, Swift::String *a4)
{
  v4.value._countAndFlagsBits = (uint64_t)a4[2]._object;
  sub_10006E750(a2, *a3, *a4, a4[1], v4);
}

void sub_10004561C(uint64_t a1, Swift::Int64 a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v5 = (void *)a3[1];
  v6._rawValue = *(void **)((char *)a3 + *(int *)(_s15ActionParameterVMa(0) + 40));
  v7.value._countAndFlagsBits = v4;
  v7.value._object = v5;
  sub_10006E710(a2, v7, v6);
}

void sub_100045684(int a1, id a2, Swift::Int64 a3)
{
  if (a2)
  {
    id v5 = [a2 backingActionIdentifiers];
    uint64_t v6 = sub_10006F0F0();

    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      uint64_t v8 = v6 + 40;
      do
      {
        swift_bridgeObjectRetain();
        NSString v9 = sub_10006F020();
        swift_bridgeObjectRelease();
        id v10 = (id)WFLinkActionIdentifierFromShortcutsActionIdentifier();

        if (v10)
        {
          id v11 = [v10 actionIdentifier];
          uint64_t v12 = sub_10006F050();
          uint64_t v14 = v13;

          v15._countAndFlagsBits = v12;
          v15._object = v14;
          sub_10006E740(a3, v15);
          if (v3)
          {

            swift_bridgeObjectRelease();
            break;
          }

          swift_bridgeObjectRelease();
        }
        v8 += 16;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000457D8(void *a1, unint64_t a2, void *a3, Swift::Int64 a4)
{
  Swift::Int64 v117 = a4;
  id v110 = a3;
  uint64_t v112 = a1;
  uint64_t v108 = sub_10006E360();
  unint64_t v5 = *(void *)(v108 - 8);
  uint64_t v6 = __chkstk_darwin(v108);
  uint64_t v8 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v90 - v9;
  uint64_t v116 = sub_10006DEB0();
  id v11 = *(void **)(v116 - 8);
  uint64_t v12 = __chkstk_darwin(v116);
  id v103 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v111 = (char *)&v90 - v15;
  __chkstk_darwin(v14);
  uint64_t v92 = (char *)&v90 - v16;
  if (a2 >> 62) {
    goto LABEL_28;
  }
  uint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v17; uint64_t v17 = sub_10006F6F0())
  {
    uint64_t v97 = v10;
    unint64_t v96 = a2 & 0xC000000000000001;
    uint64_t v93 = sub_10001028C(0, &qword_1000824A8);
    unint64_t v18 = 0;
    unint64_t v91 = a2 + 32;
    uint64_t v115 = (void (**)(char *, uint64_t))(v11 + 1);
    uint64_t v106 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v107 = WFLogCategoryToolKitIndexing;
    uint64_t v90 = &v120;
    *(void *)&long long v19 = 136315906;
    long long v102 = v19;
    uint64_t v101 = (char *)&type metadata for Any + 8;
    unint64_t v95 = a2;
    uint64_t v94 = v17;
    uint64_t v100 = v8;
    while (1)
    {
      unint64_t v5 = v96;
      sub_100068F18(v18, v96 == 0, a2);
      id v20 = v5 ? (id)sub_10006F620() : *(id *)(v91 + 8 * (void)v18);
      unint64_t v21 = v20;
      int64_t v22 = v97;
      BOOL v23 = __OFADD__(v18, 1);
      id v10 = v18 + 1;
      if (v23) {
        break;
      }
      uint64_t v99 = v10;
      id v24 = objc_msgSend(v110, "localizedCategoryWithContext:", v20, v90);
      id v109 = v21;
      if (v24)
      {
        uint64_t v25 = v24;
        uint64_t v26 = sub_10006F050();
        uint64_t v28 = v27;

        id v29 = [v21 locale];
        Swift::String_optional v30 = v92;
        sub_10006DEA0();

        uint64_t v31 = sub_10006DE50();
        uint64_t v33 = v32;
        Swift::String_optional v34 = *v115;
        (*v115)(v30, v116);
        uint64_t v35 = v118;
        v122._countAndFlagsBits = v31;
        v122._object = v33;
        v124._countAndFlagsBits = v26;
        v124._object = v28;
        sub_10006E680(v117, v122, v124);
        uint64_t v36 = v35;
        if (v35)
        {
          swift_bridgeObjectRelease();
          sub_10006E280();
          id v37 = v110;
          id v38 = v21;
          swift_bridgeObjectRetain();
          id v39 = v37;
          id v40 = v38;
          uint64_t v41 = sub_10006E350();
          os_log_type_t v42 = sub_10006F310();
          LODWORD(v114) = v42;
          if (os_log_type_enabled(v41, v42))
          {
            uint64_t v43 = swift_slowAlloc();
            uint64_t v44 = swift_slowAlloc();
            uint64_t v118 = v35;
            uint64_t v113 = v44;
            os_log_t v121 = (os_log_t)v44;
            *(_DWORD *)uint64_t v43 = v102;
            os_log_t v105 = v41;
            swift_bridgeObjectRetain();
            uint64_t v119 = sub_100046AE8(v26, (unint64_t)v28, (uint64_t *)&v121);
            sub_10006F4D0();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v43 + 12) = 2080;
            id v45 = [v39 identifier];
            uint64_t v46 = v8;
            uint64_t v47 = sub_10006F050();
            uint64_t v104 = v34;
            uint64_t v48 = v40;
            unint64_t v50 = v49;

            uint64_t v51 = v47;
            uint64_t v8 = v46;
            uint64_t v119 = sub_100046AE8(v51, v50, (uint64_t *)&v121);
            sub_10006F4D0();

            swift_bridgeObjectRelease();
            *(_WORD *)(v43 + 22) = 2048;
            uint64_t v119 = v117;
            sub_10006F4D0();
            *(_WORD *)(v43 + 32) = 2080;
            id v52 = [v48 locale];
            int v53 = v103;
            sub_10006DEA0();

            uint64_t v54 = sub_10006DE50();
            unint64_t v56 = v55;
            v104(v53, v116);
            uint64_t v119 = sub_100046AE8(v54, v56, (uint64_t *)&v121);
            sub_10006F4D0();

            swift_bridgeObjectRelease();
            os_log_t v57 = v105;
            _os_log_impl((void *)&_mh_execute_header, v105, (os_log_type_t)v114, "Failed to index category %s for action: %s (%lld) in locale: %s", (uint8_t *)v43, 0x2Au);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            swift_errorRelease();

            (*v106)(v97, v108);
          }
          else
          {
            swift_errorRelease();

            swift_bridgeObjectRelease_n();
            (*v106)(v22, v108);
          }
          uint64_t v36 = 0;
          unint64_t v21 = v109;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v36 = v118;
      }
      id v58 = [v110 localizedKeywordsWithContext:v21];
      uint64_t v59 = sub_10006F0F0();

      sub_100046280(v59);
      swift_bridgeObjectRelease();
      id v60 = sub_1000463A8();
      id v11 = sub_1000170B4(v60);
      uint64_t v118 = v36;

      uint64_t v113 = v11[2];
      uint64_t v98 = v11;
      if (v113)
      {
        Swift::Int v61 = 0;
        uint64_t v62 = (void **)(v11 + 5);
        do
        {
          uint64_t v63 = (uint64_t)*(v62 - 1);
          uint64_t v64 = *v62;
          swift_bridgeObjectRetain();
          id v65 = [v21 locale];
          uint64_t v66 = v111;
          sub_10006DEA0();

          uint64_t v67 = sub_10006DE50();
          id v69 = v68;
          char v114 = *v115;
          v114(v66, v116);
          uint64_t v70 = v118;
          v123._countAndFlagsBits = v67;
          v123._object = v69;
          v125._countAndFlagsBits = v63;
          v125._object = v64;
          id v11 = v112;
          sub_10006E6C0(v117, v123, v125, v61);
          uint64_t v118 = v70;
          if (v70)
          {
            swift_bridgeObjectRelease();
            sub_10006E280();
            id v71 = v110;
            id v72 = v21;
            swift_bridgeObjectRetain();
            id v73 = v71;
            id v11 = v8;
            id v74 = v73;
            id v75 = v72;
            uint64_t v76 = sub_10006E350();
            os_log_type_t v77 = sub_10006F310();
            int v78 = v77;
            if (os_log_type_enabled(v76, v77))
            {
              uint64_t v79 = swift_slowAlloc();
              LODWORD(v104) = v78;
              uint64_t v80 = v79;
              os_log_t v105 = (os_log_t)swift_slowAlloc();
              os_log_t v121 = v105;
              *(_DWORD *)uint64_t v80 = v102;
              swift_bridgeObjectRetain();
              *(void *)(v80 + 4) = sub_100046AE8(v63, (unint64_t)v64, (uint64_t *)&v121);
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v80 + 12) = 2080;
              id v81 = [v74 identifier];
              uint64_t v82 = sub_10006F050();
              unint64_t v84 = v83;

              *(void *)(v80 + 14) = sub_100046AE8(v82, v84, (uint64_t *)&v121);
              swift_bridgeObjectRelease();
              *(_WORD *)(v80 + 22) = 2048;
              *(void *)(v80 + 24) = v117;
              *(_WORD *)(v80 + 32) = 2080;
              id v85 = [v75 locale];
              uint64_t v86 = v103;
              sub_10006DEA0();

              uint64_t v87 = sub_10006DE50();
              id v11 = v88;
              v114(v86, v116);
              *(void *)(v80 + 34) = sub_100046AE8(v87, (unint64_t)v11, (uint64_t *)&v121);

              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v76, (os_log_type_t)v104, "Failed to index keyword %s for action: %s (%lld) in locale: %s", (uint8_t *)v80, 0x2Au);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
              swift_errorRelease();

              uint64_t v8 = v100;
              (*v106)(v100, v108);
              uint64_t v118 = 0;
            }
            else
            {
              swift_errorRelease();

              swift_bridgeObjectRelease_n();
              (*v106)((char *)v11, v108);
              uint64_t v118 = 0;
              uint64_t v8 = (char *)v11;
            }
            unint64_t v21 = v109;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          ++v61;
          v62 += 2;
        }
        while (v113 != v61);
      }

      swift_bridgeObjectRelease();
      unint64_t v18 = v99;
      a2 = v95;
      if (v99 == (char *)v94) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease();
}

void *sub_100046280(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = &_swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v9 = &_swiftEmptyArrayStorage;
    sub_100069174(0, v1, 0);
    uint64_t v2 = &_swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100069174(0, v2[2] + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_100069174((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      v2[2] = v6 + 1;
      sub_1000090F8(&v8, &v2[4 * v6 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

id sub_1000463A8()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  Class isa = sub_10006F0E0().super.isa;
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithArray:isa];

  return v2;
}

id sub_100046420(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v3 = sub_10006F020();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }
  id v4 = [v2 initWithLanguageCode:v3];

  return v4;
}

id sub_100046484(uint64_t a1, void *a2)
{
  NSString v3 = v2;
  Class isa = sub_10006DE70().super.isa;
  id v7 = [v3 initWithLocale:isa stringLocalizer:a2];

  uint64_t v8 = sub_10006DEB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
  return v7;
}

uint64_t sub_10004651C(Swift::Int a1)
{
  if (a1 < 16) {
    return 0;
  }
  sub_10006F600(a1);
  return 0;
}

uint64_t sub_100046564(void (*a1)(uint64_t))
{
  uint64_t v2 = sub_10006E3F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v4);
  sub_100052038(&qword_100082448, (void (*)(uint64_t))&type metadata accessor for ToolVisibilityFlag);
  uint64_t v7 = sub_10006F750();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v7;
}

uint64_t sub_10004668C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v4;
  if (!result || a1 > *(void *)(v4 + 24) >> 1)
  {
    return a2();
  }
  return result;
}

void *sub_10004671C(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_100058B88();
    uint64_t result = (void *)sub_100058030();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = (void *)sub_10006F130();
    result[2] = a1;
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100046794(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_100058B88();
    uint64_t result = sub_100058030();
    __break(1u);
  }
  else
  {
    sub_100058088();
    if (v3)
    {
      v1(0);
      uint64_t v4 = (void *)sub_10006F130();
      v4[2] = v2;
    }
    else
    {
      uint64_t v4 = &_swiftEmptyArrayStorage;
    }
    ((uint64_t (*)(void))v1)(0);
    return (uint64_t)v4;
  }
  return result;
}

uint64_t sub_100046860(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_100046898(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *int64_t v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    *int64_t v1 = result;
  }
  return result;
}

uint64_t sub_1000468F4(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    uint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }
  return result;
}

uint64_t sub_10004693C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 16) = a1 + 1;
  _s15ActionParameterVMa(0);
  return sub_100053220();
}

uint64_t sub_1000469EC()
{
  sub_100058088();
  uint64_t v2 = *v0;
  *(void *)(v2 + 16) = v1 + 1;
  v3(0);
  sub_1000551F4();
  uint64_t v5 = sub_100059940(v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
  return v6(v5);
}

uint64_t sub_100046A70(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_100046AE8(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_10006F4D0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_100046AE8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100046BBC(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100009038((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100009038((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100052558((uint64_t)v12);
  return v7;
}

uint64_t sub_100046BBC(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_100046D14((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_10006F4E0();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = (uint64_t)sub_100046DEC(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_10006F630();
    if (!v8)
    {
      uint64_t result = sub_10006F6C0();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_100046D14(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_10006F710();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

void *sub_100046DEC(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_100046E84(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100047060(0, v2[2] + 1, 1, (uint64_t)v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100047060((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  }
  v2[2] = v4 + 1;
  *((unsigned char *)v2 + v4 + 32) = 0;
  return v2;
}

void *sub_100046E84(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v2 = sub_10006F0C0();
    if (v2) {
      goto LABEL_6;
    }
    return &_swiftEmptyArrayStorage;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    Swift::Int v2 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
LABEL_6:
  unint64_t v3 = sub_100046FF8(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_10006F610();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return v4;
  }
  sub_10006F710();
  __break(1u);
LABEL_14:
  uint64_t result = (void *)sub_10006F6C0();
  __break(1u);
  return result;
}

void *sub_100046FF8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10000772C(&qword_100082358);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_100047060(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000772C(&qword_100082358);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_100047210(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100047138(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_100047138(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_10006F710();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_100047210(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_10006F710();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

void sub_1000472A0(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_10006F4D0();
  *a1 = v7;
  int64_t v8 = *a2;
  if (*a2)
  {
    *int64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_100047358(unint64_t a1, uint64_t a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(void *)(a2 + 16) <= a1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v2 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  type metadata accessor for WFExecutionPlatform(0);
  swift_unknownObjectRetain_n();
  if (swift_dynamicCast())
  {

    return v2;
  }
LABEL_7:
  sub_10006F600(82);
  v5._countAndFlagsBits = 0xD000000000000043;
  v5._object = (void *)0x8000000100072390;
  sub_10006F0A0(v5);
  v6._object = (void *)0x80000001000724B0;
  v6._countAndFlagsBits = 0xD000000000000013;
  sub_10006F0A0(v6);
  v7._countAndFlagsBits = 0x756F662074756220;
  v7._object = (void *)0xEB0000000020646ELL;
  sub_10006F0A0(v7);
  swift_getObjectType();
  swift_unknownObjectRelease();
  v8._countAndFlagsBits = sub_10006F850();
  sub_10006F0A0(v8);
  swift_bridgeObjectRelease();
  uint64_t result = sub_10006F6E0();
  __break(1u);
  return result;
}

uint64_t sub_1000474C4(unint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10001148C();
  __chkstk_darwin(v5);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(void *)(a2 + 16) <= a1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  swift_unknownObjectRetain_n();
  if (swift_dynamicCast())
  {
    sub_100059B68();
    sub_100055B70();
    v8(v7);
    return v6;
  }
LABEL_7:
  sub_10006F600(82);
  v10._object = (void *)0x8000000100072390;
  v10._countAndFlagsBits = 0xD000000000000043;
  sub_10006F0A0(v10);
  v11._countAndFlagsBits = sub_100059CE4();
  sub_10006F0A0(v11);
  v12._countAndFlagsBits = 0x756F662074756220;
  v12._object = (void *)0xEB0000000020646ELL;
  sub_10006F0A0(v12);
  swift_getObjectType();
  swift_unknownObjectRelease();
  v13._countAndFlagsBits = sub_10006F850();
  sub_10006F0A0(v13);
  swift_bridgeObjectRelease();
  uint64_t result = sub_10006F6E0();
  __break(1u);
  return result;
}

uint64_t sub_10004767C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_100068668(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v3;
  uint64_t v9 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  Swift::Int v10 = *(void *)(v9 + 24);
  sub_10000772C((uint64_t *)&unk_100082530);
  sub_10006F6A0(isUniquelyReferenced_nonNull_native, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(*(void *)(v13 + 56) + 8 * v6);
  sub_10006F6B0();
  *uint64_t v3 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_10004778C(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_100068704(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v7 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  Swift::Int v8 = *(void *)(v7 + 24);
  sub_10000772C(&qword_100082540);
  sub_10006F6A0(isUniquelyReferenced_nonNull_native, v8);
  uint64_t v9 = *(void *)(v13 + 48);
  uint64_t v10 = type metadata accessor for ToolKitIndexer.TypeRegistryKey(0);
  sub_100052E7C(v9 + *(void *)(*(void *)(v10 - 8) + 72) * v4, (void (*)(void))type metadata accessor for ToolKitIndexer.TypeRegistryKey);
  uint64_t v11 = *(void *)(*(void *)(v13 + 56) + 16 * v4);
  sub_100052038(&qword_100082548, (void (*)(uint64_t))type metadata accessor for ToolKitIndexer.TypeRegistryKey);
  sub_10006F6B0();
  *uint64_t v2 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1000478F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_100047A18(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v9;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100047988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_100047B38(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v9;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100047A18(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  uint64_t v11 = sub_100068668(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v16 = v11;
  char v17 = v12;
  sub_10000772C((uint64_t *)&unk_100082530);
  uint64_t result = sub_10006F6A0(a4 & 1, v15);
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t result = sub_100068668(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_11:
    uint64_t result = sub_10006F7C0();
    __break(1u);
    return result;
  }
  unint64_t v16 = result;
LABEL_5:
  id v20 = *v5;
  if (v17)
  {
    *(void *)(v20[7] + 8 * v16) = a1;
  }
  else
  {
    sub_100047CAC(v16, a2, a3, a1, v20);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100047B38(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = v4;
  uint64_t v10 = type metadata accessor for ToolKitIndexer.TypeRegistryKey(0);
  __chkstk_darwin(v10);
  char v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v4;
  unint64_t v14 = sub_100068704(a3);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v15 & 1) == 0;
  Swift::Int v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v19 = v14;
  char v20 = v15;
  sub_10000772C(&qword_100082540);
  if (!sub_10006F6A0(a4 & 1, v18)) {
    goto LABEL_5;
  }
  unint64_t v21 = sub_100068704(a3);
  if ((v20 & 1) != (v22 & 1))
  {
LABEL_10:
    uint64_t result = sub_10006F7C0();
    __break(1u);
    return result;
  }
  unint64_t v19 = v21;
LABEL_5:
  uint64_t v23 = *v5;
  if (v20)
  {
    id v24 = (uint64_t *)(*(void *)(v23 + 56) + 16 * v19);
    uint64_t result = swift_bridgeObjectRelease();
    *id v24 = a1;
    v24[1] = a2;
  }
  else
  {
    sub_1000531D0();
    return sub_100047CF4(v19, (uint64_t)v12, a1, a2, v23);
  }
  return result;
}

unint64_t sub_100047CAC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  char v5 = (void *)(a5[6] + 16 * result);
  *char v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_100047CF4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 8 * (a1 >> 6) + 64) |= 1 << a1;
  type metadata accessor for ToolKitIndexer.TypeRegistryKey(0);
  uint64_t result = sub_100053220();
  uint64_t v10 = (void *)(*(void *)(a5 + 56) + 16 * a1);
  *uint64_t v10 = a3;
  v10[1] = a4;
  uint64_t v11 = *(void *)(a5 + 16);
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    *(void *)(a5 + 16) = v13;
  }
  return result;
}

uint64_t sub_100047DB0(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_100047DCC(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    unint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_1000488E8(v15, v16);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v6 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 < v7)
  {
    unint64_t v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_21;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_21;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_100047F78(uint64_t a1)
{
  uint64_t v3 = sub_10000772C(&qword_1000823D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10006EAA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  int64_t v13 = (char *)&v25 - v12;
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v25 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v28 = v7 + 16;
  int64_t v26 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v27 = v7 + 32;
  uint64_t v18 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  if (!v17) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v20 | (v19 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v19 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v13, *(void *)(v18 + 48) + *(void *)(v7 + 72) * i, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v13, v6);
    sub_100048A78((uint64_t)v10, (uint64_t)v5);
    sub_100053404((uint64_t)v5, &qword_1000823D0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    if (v17) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v26) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v25 + 8 * v22);
    ++v19;
    if (!v23)
    {
      int64_t v19 = v22 + 1;
      if (v22 + 1 >= v26) {
        return swift_release();
      }
      unint64_t v23 = *(void *)(v25 + 8 * v19);
      if (!v23)
      {
        int64_t v19 = v22 + 2;
        if (v22 + 2 >= v26) {
          return swift_release();
        }
        unint64_t v23 = *(void *)(v25 + 8 * v19);
        if (!v23)
        {
          int64_t v19 = v22 + 3;
          if (v22 + 3 >= v26) {
            return swift_release();
          }
          unint64_t v23 = *(void *)(v25 + 8 * v19);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v17 = (v23 - 1) & v23;
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v26) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v25 + 8 * v24);
  if (v23)
  {
    int64_t v19 = v24;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v26) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v25 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

Swift::Int sub_100048288(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  sub_10000772C(&qword_100081E48);
  uint64_t v2 = sub_10006F5E0();
  uint64_t v14 = v2;
  sub_10006F570();
  if (!sub_10006F5A0())
  {
LABEL_16:
    swift_release();
    return v2;
  }
  sub_10001028C(0, &qword_100081E28);
  while (1)
  {
    swift_dynamicCast();
    uint64_t v2 = v14;
    if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
    {
      sub_10004904C();
      uint64_t v2 = v14;
    }
    Swift::Int result = sub_10006F450(*(void *)(v2 + 40));
    uint64_t v4 = v2 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = result & ~v5;
    unint64_t v7 = v6 >> 6;
    if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) == 0) {
      break;
    }
    unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
    ++*(void *)(v2 + 16);
    if (!sub_10006F5A0()) {
      goto LABEL_16;
    }
  }
  char v9 = 0;
  unint64_t v10 = (unint64_t)(63 - v5) >> 6;
  while (++v7 != v10 || (v9 & 1) == 0)
  {
    BOOL v11 = v7 == v10;
    if (v7 == v10) {
      unint64_t v7 = 0;
    }
    v9 |= v11;
    uint64_t v12 = *(void *)(v4 + 8 * v7);
    if (v12 != -1)
    {
      unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

unint64_t *sub_100048470(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v11 = v10 | (v9 << 6);
    while (1)
    {
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_10006F820();
      swift_bridgeObjectRetain();
      sub_10006F090();
      Swift::Int v19 = sub_10006F840();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_37:
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_50;
      }
      if (v12 >= v36) {
        goto LABEL_48;
      }
      unint64_t v13 = *(void *)(v37 + 8 * v12);
      int64_t v14 = v9 + 1;
      if (!v13)
      {
        int64_t v14 = v9 + 2;
        if (v9 + 2 >= v36) {
          goto LABEL_48;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v9 + 3;
          if (v9 + 3 >= v36) {
            goto LABEL_48;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 4;
            if (v9 + 4 >= v36) {
              goto LABEL_48;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v15 = v9 + 5;
              if (v9 + 5 >= v36)
              {
LABEL_48:
                sub_1000102C8();
                return (unint64_t *)v2;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v15);
              if (!v13)
              {
                while (1)
                {
                  int64_t v14 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    break;
                  }
                  if (v14 >= v36) {
                    goto LABEL_48;
                  }
                  unint64_t v13 = *(void *)(v37 + 8 * v14);
                  ++v15;
                  if (v13) {
                    goto LABEL_22;
                  }
                }
LABEL_50:
                __break(1u);
              }
              int64_t v14 = v9 + 5;
            }
          }
        }
      }
LABEL_22:
      unint64_t v7 = (v13 - 1) & v13;
      unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
      int64_t v9 = v14;
    }
    uint64_t v22 = *(void *)(v2 + 48);
    unint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_10006F780() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_37;
        }
        int64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_10006F780() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      Swift::String_optional v32 = sub_10004A6B0((unint64_t *)((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0)), v30, v2, v21, &v38);
      swift_release();
      sub_1000102C8();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      Swift::String_optional v32 = sub_10004A6B0((unint64_t *)v33, v30, v2, v21, &v38);
      swift_release();
      sub_1000102C8();
      swift_slowDealloc();
    }
    return v32;
  }
  else
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

uint64_t sub_1000488E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_10006F820();
  swift_bridgeObjectRetain();
  sub_10006F090();
  Swift::Int v6 = sub_10006F840();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  unint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_10006F780() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_10006F780() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10004A98C();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_10004C6DC(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_100048A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10006EAA0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100052038(&qword_1000824C8, (void (*)(uint64_t))&type metadata accessor for RuntimePlatform);
  swift_bridgeObjectRetain();
  uint64_t v30 = a1;
  uint64_t v10 = sub_10006EFF0();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v29 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    int64_t v26 = v2;
    uint64_t v27 = a2;
    uint64_t v28 = ~v11;
    uint64_t v25 = v6;
    uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v14 = v6 + 16;
    uint64_t v13 = v15;
    uint64_t v16 = *(void *)(v14 + 56);
    while (1)
    {
      v13(v8, *(void *)(v9 + 48) + v16 * v12, v5);
      sub_100052038(&qword_1000824D0, (void (*)(uint64_t))&type metadata accessor for RuntimePlatform);
      char v17 = sub_10006F010();
      (*(void (**)(char *, uint64_t))(v14 - 8))(v8, v5);
      if (v17) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v28;
      if (((*(void *)(v29 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 1;
        a2 = v27;
        return sub_100007770(a2, v18, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v19 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v19;
    uint64_t v31 = *v19;
    *uint64_t v19 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10004ACEC();
      uint64_t v21 = v31;
    }
    unint64_t v22 = *(void *)(v21 + 48) + v16 * v12;
    a2 = v27;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v25 + 32))(v27, v22, v5);
    sub_10004C898(v12);
    *uint64_t v19 = v31;
    swift_bridgeObjectRelease();
    uint64_t v18 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = 1;
  }
  return sub_100007770(a2, v18, 1, v5);
}

uint64_t sub_100048D70()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000772C(&qword_100082320);
  uint64_t v3 = sub_10006F5D0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      char v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_10006F820();
      sub_10006F090();
      uint64_t result = sub_10006F840();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *uint64_t v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_100047DB0(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                *uint64_t v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10004904C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000772C(&qword_100081E48);
  uint64_t v3 = sub_10006F5D0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = v17 + (v12 << 6))
    {
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * i);
      uint64_t result = sub_10006F450(*(void *)(v4 + 40));
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(void *)(*(void *)(v4 + 48) + 8 * v22) = v18;
      ++*(void *)(v4 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v9) {
        goto LABEL_32;
      }
      ++v12;
      if (!v6[v15])
      {
        int64_t v12 = v15 + 1;
        if (v15 + 1 >= v9) {
          goto LABEL_32;
        }
        if (!v6[v12])
        {
          int64_t v12 = v15 + 2;
          if (v15 + 2 >= v9) {
            goto LABEL_32;
          }
          if (!v6[v12])
          {
            int64_t v16 = v15 + 3;
            if (v16 >= v9)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v28;
              sub_100057C2C();
              if (v27 > 63) {
                sub_100047DB0(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *uint64_t v6 = -1 << v27;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            if (!v6[v16])
            {
              while (1)
              {
                int64_t v12 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v12 >= v9) {
                  goto LABEL_32;
                }
                ++v16;
                if (v6[v12]) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v16;
          }
        }
      }
LABEL_20:
      sub_1000598EC();
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000492D8()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_10006EAA0();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  int64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10000772C(&qword_1000824D8);
  uint64_t v5 = sub_10006F5D0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      BOOL v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_100052038(&qword_1000824C8, (void (*)(uint64_t))&type metadata accessor for RuntimePlatform);
      uint64_t result = sub_10006EFF0();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_100047DB0(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1000496D0()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_10006E880();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  int64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10000772C(&qword_100082470);
  uint64_t v5 = sub_10006F5D0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      BOOL v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_100052038(&qword_100082410, (void (*)(uint64_t))&type metadata accessor for TypedValue);
      uint64_t result = sub_10006EFF0();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_100047DB0(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_100049AC8()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_10006E960();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  int64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10000772C(&qword_100082500);
  uint64_t v5 = sub_10006F5D0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      BOOL v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_100052038(&qword_1000824F0, (void (*)(uint64_t))&type metadata accessor for TypeInstance);
      uint64_t result = sub_10006EFF0();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_100047DB0(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_100049EC0()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_10006EA40();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  int64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10000772C(&qword_100082510);
  uint64_t v5 = sub_10006F5D0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      BOOL v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_100052038(&qword_100082308, (void (*)(uint64_t))&type metadata accessor for TypeIdentifier);
      uint64_t result = sub_10006EFF0();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_100047DB0(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_10004A2B8()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_10006E9E0();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  int64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10000772C(&qword_100082528);
  uint64_t v5 = sub_10006F5D0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      BOOL v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_100052038(&qword_100082518, (void (*)(uint64_t))&type metadata accessor for TypeDefinition);
      uint64_t result = sub_10006EFF0();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_100047DB0(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

unint64_t *sub_10004A6B0(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v38 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v39 = a3 + 56;
  while (2)
  {
    uint64_t v37 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          int64_t v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_46;
          }
          int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
          int64_t v15 = a5[3];
          if (v13 >= v14) {
            goto LABEL_44;
          }
          uint64_t v16 = a5[1];
          unint64_t v17 = *(void *)(v16 + 8 * v13);
          if (!v17)
          {
            int64_t v15 = v9 + 1;
            if (v9 + 2 >= v14) {
              goto LABEL_44;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              int64_t v13 = v9 + 2;
            }
            else
            {
              int64_t v15 = v9 + 2;
              if (v9 + 3 >= v14) {
                goto LABEL_44;
              }
              unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                int64_t v13 = v9 + 3;
              }
              else
              {
                int64_t v13 = v9 + 4;
                int64_t v15 = v9 + 3;
                if (v9 + 4 >= v14) {
                  goto LABEL_44;
                }
                unint64_t v17 = *(void *)(v16 + 8 * v13);
                if (!v17)
                {
                  int64_t v18 = v9 + 5;
                  while (v18 < v14)
                  {
                    unint64_t v17 = *(void *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      int64_t v13 = v18 - 1;
                      goto LABEL_20;
                    }
                  }
                  int64_t v15 = v14 - 1;
LABEL_44:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return (unint64_t *)sub_10000EF48(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_20:
          uint64_t v11 = (v17 - 1) & v17;
          unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
          int64_t v9 = v13;
        }
        unint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_10006F820();
        swift_bridgeObjectRetain();
        sub_10006F090();
        Swift::Int v22 = sub_10006F840();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v39 + 8 * (v24 >> 6))) != 0) {
          break;
        }
LABEL_38:
        uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      }
      uint64_t v27 = *(void *)(a3 + 48);
      unint64_t v28 = (void *)(v27 + 16 * v24);
      BOOL v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_10006F780() & 1) == 0)
      {
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_10006F780() & 1) != 0)
          {
            uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_28;
          }
        }
        goto LABEL_38;
      }
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_28:
      unint64_t v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_46:
      __break(1u);
      return result;
    }
    if (v37 != 1) {
      continue;
    }
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

void *sub_10004A98C()
{
  uint64_t v1 = v0;
  sub_10000772C(&qword_100082320);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10006F5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    Swift::Int v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *Swift::Int v22 = *v20;
    v22[1] = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_10004AB40()
{
  uint64_t v1 = v0;
  sub_10000772C(&qword_100081E48);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10006F5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    *(void *)(*(void *)(v4 + 48) + 8 * i) = v20;
    id result = v20;
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_10004ACEC()
{
  sub_100058000();
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v5 = v4(0);
  sub_10001148C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - v9;
  sub_10000772C(v2);
  uint64_t v11 = *v0;
  uint64_t v12 = sub_10006F5C0();
  if (!*(void *)(v11 + 16))
  {
    swift_release();
LABEL_30:
    *uint64_t v3 = v12;
    sub_100057F90();
    return;
  }
  sub_100057C2C();
  unint64_t v15 = (unint64_t)(v14 + 63) >> 6;
  unint64_t v30 = v3;
  uint64_t v31 = (const void *)(v11 + 56);
  if (v12 != v11 || (unint64_t)v13 >= v11 + 56 + 8 * v15) {
    memmove(v13, v31, 8 * v15);
  }
  int64_t v17 = 0;
  *(void *)(v12 + 16) = *(void *)(v11 + 16);
  sub_100057C2C();
  uint64_t v19 = *(void *)(v11 + 56);
  uint64_t v20 = -1;
  if (v18 < 64) {
    uint64_t v20 = ~(-1 << v18);
  }
  unint64_t v21 = v20 & v19;
  int64_t v32 = (unint64_t)(v18 + 63) >> 6;
  if ((v20 & v19) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v22 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  for (unint64_t i = v22 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v17 << 6))
  {
    unint64_t v27 = *(void *)(v7 + 72) * i;
    sub_100057B18();
    v28();
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(void *)(v12 + 48) + v27, v10, v5);
    if (v21) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v24 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v32) {
      goto LABEL_28;
    }
    unint64_t v25 = *((void *)v31 + v24);
    ++v17;
    if (!v25)
    {
      int64_t v17 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_28;
      }
      unint64_t v25 = *((void *)v31 + v17);
      if (!v25)
      {
        int64_t v17 = v24 + 2;
        if (v24 + 2 >= v32) {
          goto LABEL_28;
        }
        unint64_t v25 = *((void *)v31 + v17);
        if (!v25) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v21 = (v25 - 1) & v25;
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v32)
  {
LABEL_28:
    swift_release();
    uint64_t v3 = v30;
    goto LABEL_30;
  }
  unint64_t v25 = *((void *)v31 + v26);
  if (v25)
  {
    int64_t v17 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v17 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v17 >= v32) {
      goto LABEL_28;
    }
    unint64_t v25 = *((void *)v31 + v17);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_10004AF5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000772C(&qword_100082320);
  uint64_t v3 = sub_10006F5D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_10006F820();
    swift_bridgeObjectRetain();
    sub_10006F090();
    uint64_t result = sub_10006F840();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    *unint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10004B208()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000772C(&qword_100081E48);
  uint64_t v3 = sub_10006F5D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    Swift::Int v18 = *(void *)(v4 + 40);
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    uint64_t result = sub_10006F450(v18);
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v10 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(*(void *)(v4 + 48) + 8 * v23) = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10004B480()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10006EAA0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10000772C(&qword_1000824D8);
  uint64_t v7 = sub_10006F5D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_100052038(&qword_1000824C8, (void (*)(uint64_t))&type metadata accessor for RuntimePlatform);
    uint64_t result = sub_10006EFF0();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10004B82C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10006E880();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10000772C(&qword_100082470);
  uint64_t v7 = sub_10006F5D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_100052038(&qword_100082410, (void (*)(uint64_t))&type metadata accessor for TypedValue);
    uint64_t result = sub_10006EFF0();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10004BBD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10006E960();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10000772C(&qword_100082500);
  uint64_t v7 = sub_10006F5D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_100052038(&qword_1000824F0, (void (*)(uint64_t))&type metadata accessor for TypeInstance);
    uint64_t result = sub_10006EFF0();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10004BF84()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10006EA40();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10000772C(&qword_100082510);
  uint64_t v7 = sub_10006F5D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_100052038(&qword_100082308, (void (*)(uint64_t))&type metadata accessor for TypeIdentifier);
    uint64_t result = sub_10006EFF0();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10004C330()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10006E9E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10000772C(&qword_100082528);
  uint64_t v7 = sub_10006F5D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_100052038(&qword_100082518, (void (*)(uint64_t))&type metadata accessor for TypeDefinition);
    uint64_t result = sub_10006EFF0();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_10004C6DC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_10006F550();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_10006F820();
        swift_bridgeObjectRetain();
        sub_10006F090();
        Swift::Int v10 = sub_10006F840();
        swift_bridgeObjectRelease();
        Swift::Int v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= v11)
          {
LABEL_15:
            uint64_t v14 = *(void *)(v3 + 48);
            int64_t v15 = (_OWORD *)(v14 + 16 * v2);
            int64_t v16 = (_OWORD *)(v14 + 16 * v6);
            BOOL v17 = v2 != v6 || v15 >= v16 + 1;
            int64_t v2 = v6;
            if (v17)
            {
              *int64_t v15 = *v16;
              int64_t v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= v11)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_10004C898(int64_t a1)
{
  uint64_t v3 = sub_10006EAA0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = *v1 + 56;
  uint64_t v10 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(v9 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v34 = v1;
    uint64_t v12 = ~v10;
    swift_retain();
    uint64_t v13 = sub_10006F550();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v36 = (v13 + 1) & v12;
      int64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v14 = v4 + 16;
      uint64_t v35 = v15;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v37 = v14;
      uint64_t v38 = v16;
      BOOL v17 = (void (**)(char *, uint64_t))(v14 - 8);
      do
      {
        uint64_t v18 = v9;
        int64_t v19 = v38 * v11;
        v35(v7, *(void *)(v8 + 48) + v38 * v11, v3);
        sub_100052038(&qword_1000824C8, (void (*)(uint64_t))&type metadata accessor for RuntimePlatform);
        uint64_t v20 = sub_10006EFF0();
        (*v17)(v7, v3);
        unint64_t v21 = v20 & v12;
        if (a1 >= (uint64_t)v36)
        {
          if (v21 < v36 || a1 < (uint64_t)v21)
          {
LABEL_20:
            uint64_t v9 = v18;
            goto LABEL_24;
          }
        }
        else if (v21 < v36 && a1 < (uint64_t)v21)
        {
          goto LABEL_20;
        }
        uint64_t v23 = *(void *)(v8 + 48);
        int64_t v24 = v38 * a1;
        unint64_t v25 = v23 + v38 * a1;
        unint64_t v26 = v23 + v19 + v38;
        BOOL v27 = v38 * a1 < v19 || v25 >= v26;
        uint64_t v9 = v18;
        if (v27)
        {
          swift_arrayInitWithTakeFrontToBack();
LABEL_23:
          a1 = v11;
          goto LABEL_24;
        }
        a1 = v11;
        if (v24 != v19)
        {
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_23;
        }
LABEL_24:
        unint64_t v11 = (v11 + 1) & v12;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v34;
  }
  else
  {
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v29 = *v1;
  uint64_t v30 = *(void *)(*v1 + 16);
  BOOL v31 = __OFSUB__(v30, 1);
  uint64_t v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v29 + 16) = v32;
    ++*(_DWORD *)(v29 + 36);
  }
  return result;
}

void sub_10004CB88(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_10006F6F0();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v3 = &_swiftEmptySetSingleton;
    goto LABEL_6;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_10000772C(&qword_100081E48);
  uint64_t v3 = (void *)sub_10006F5F0();
LABEL_6:
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_10006F6F0();
    swift_bridgeObjectRelease();
    if (!v5)
    {
LABEL_26:
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      goto LABEL_26;
    }
  }
  unint64_t v6 = 0;
  uint64_t v7 = (char *)(v3 + 7);
  unint64_t v27 = a1 & 0xC000000000000001;
  unint64_t v24 = a1 + 32;
  uint64_t v25 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v26 = v5;
  while (1)
  {
    if (v27)
    {
      sub_100059B5C();
      id v8 = (id)sub_10006F620();
    }
    else
    {
      if (v6 >= *(void *)(v25 + 16)) {
        goto LABEL_29;
      }
      id v8 = *(id *)(v24 + 8 * v6);
    }
    uint64_t v9 = v8;
    BOOL v10 = __OFADD__(v6++, 1);
    if (v10) {
      break;
    }
    Swift::Int v11 = sub_10006F450(v3[5]);
    uint64_t v12 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v13 = v11 & ~v12;
    unint64_t v14 = v13 >> 6;
    uint64_t v15 = *(void *)&v7[8 * (v13 >> 6)];
    uint64_t v16 = 1 << v13;
    if (((1 << v13) & v15) != 0)
    {
      sub_10001028C(0, &qword_100081E28);
      id v17 = *(id *)(v3[6] + 8 * v13);
      char v18 = sub_10006F460();

      if (v18)
      {
LABEL_21:

        uint64_t v5 = v26;
        goto LABEL_25;
      }
      uint64_t v19 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v19;
        unint64_t v14 = v13 >> 6;
        uint64_t v15 = *(void *)&v7[8 * (v13 >> 6)];
        uint64_t v16 = 1 << v13;
        if ((v15 & (1 << v13)) == 0) {
          break;
        }
        id v20 = *(id *)(v3[6] + 8 * v13);
        char v21 = sub_10006F460();

        if (v21) {
          goto LABEL_21;
        }
      }
      uint64_t v5 = v26;
    }
    *(void *)&v7[8 * v14] = v16 | v15;
    *(void *)(v3[6] + 8 * v13) = v9;
    uint64_t v22 = v3[2];
    BOOL v10 = __OFADD__(v22, 1);
    uint64_t v23 = v22 + 1;
    if (v10) {
      goto LABEL_28;
    }
    v3[2] = v23;
LABEL_25:
    if (v6 == v5) {
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

uint64_t sub_10004CDD8(uint64_t a1)
{
  uint64_t v2 = sub_10006EAA0();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v35 = (char *)&v26 - v6;
  if (!*(void *)(a1 + 16))
  {
    id v8 = &_swiftEmptySetSingleton;
    goto LABEL_16;
  }
  sub_10000772C(&qword_1000824D8);
  uint64_t result = sub_10006F5F0();
  id v8 = (unsigned char *)result;
  uint64_t v30 = *(void *)(a1 + 16);
  if (!v30)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v8;
  }
  unint64_t v9 = 0;
  uint64_t v29 = a1 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
  uint64_t v33 = v31 + 16;
  uint64_t v34 = result + 56;
  BOOL v10 = (void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v27 = a1;
  unint64_t v28 = (uint64_t (**)(unint64_t, char *, uint64_t))(v31 + 32);
  while (v9 < *(void *)(a1 + 16))
  {
    uint64_t v11 = *(void *)(v31 + 72);
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
    v12(v35, v29 + v11 * v9, v2);
    sub_100052038(&qword_1000824C8, (void (*)(uint64_t))&type metadata accessor for RuntimePlatform);
    uint64_t v13 = sub_10006EFF0();
    uint64_t v14 = -1 << v8[32];
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    uint64_t v17 = *(void *)(v34 + 8 * (v15 >> 6));
    uint64_t v18 = 1 << v15;
    if (((1 << v15) & v17) != 0)
    {
      unint64_t v32 = v9;
      uint64_t v19 = ~v14;
      while (1)
      {
        v12(v5, *((void *)v8 + 6) + v15 * v11, v2);
        sub_100052038(&qword_1000824D0, (void (*)(uint64_t))&type metadata accessor for RuntimePlatform);
        char v20 = sub_10006F010();
        char v21 = *v10;
        (*v10)(v5, v2);
        if (v20) {
          break;
        }
        unint64_t v15 = (v15 + 1) & v19;
        unint64_t v16 = v15 >> 6;
        uint64_t v17 = *(void *)(v34 + 8 * (v15 >> 6));
        uint64_t v18 = 1 << v15;
        if ((v17 & (1 << v15)) == 0)
        {
          a1 = v27;
          unint64_t v9 = v32;
          goto LABEL_10;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v21)(v35, v2);
      a1 = v27;
      unint64_t v9 = v32;
    }
    else
    {
LABEL_10:
      uint64_t v22 = v35;
      *(void *)(v34 + 8 * v16) = v18 | v17;
      uint64_t result = (*v28)(*((void *)v8 + 6) + v15 * v11, v22, v2);
      uint64_t v23 = *((void *)v8 + 2);
      BOOL v24 = __OFADD__(v23, 1);
      uint64_t v25 = v23 + 1;
      if (v24) {
        goto LABEL_18;
      }
      *((void *)v8 + 2) = v25;
    }
    if (++v9 == v30) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10004D124(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_10006F820();
  swift_bridgeObjectRetain();
  sub_10006F090();
  Swift::Int v8 = sub_10006F840();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_10006F780() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_10006F780() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_10004E1E4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_10004D2D4(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_10006F590();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_10001028C(0, &qword_100081E28);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v31;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_10006F580();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v24 = sub_100048288(v7, result + 1);
    Swift::Int v32 = v24;
    if (*(void *)(v24 + 24) <= *(void *)(v24 + 16))
    {
      id v28 = v8;
      sub_10004904C();
      Swift::Int v25 = v32;
    }
    else
    {
      Swift::Int v25 = v24;
      id v26 = v8;
    }
    uint64_t v29 = sub_100059B68();
    sub_10000EEC4(v29, v30);
    *uint64_t v3 = v25;
  }
  else
  {
    Swift::Int v10 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v11 = sub_10006F450(v10);
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    sub_100059210();
    if (v14)
    {
      sub_10001028C(0, &qword_100081E28);
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v16 = sub_10006F460();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v21 = *(void **)(*(void *)(*v3 + 48) + 8 * v13);
        *a1 = v21;
        id v22 = v21;
        return 0;
      }
      uint64_t v17 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v17;
        sub_100059210();
        if ((v18 & 1) == 0) {
          break;
        }
        id v19 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v20 = sub_10006F460();

        if (v20) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_10004E380((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v33;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_10004D554(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10006EAA0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100052038(&qword_1000824C8, (void (*)(uint64_t))&type metadata accessor for RuntimePlatform);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_10006EFF0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    id v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    char v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    char v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      char v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100052038(&qword_1000824D0, (void (*)(uint64_t))&type metadata accessor for RuntimePlatform);
      char v21 = sub_10006F010();
      id v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      char v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10004E508((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10004D878(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10006E960();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100052038(&qword_1000824F0, (void (*)(uint64_t))&type metadata accessor for TypeInstance);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_10006EFF0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    id v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    char v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    char v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      char v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100052038(&qword_1000824F8, (void (*)(uint64_t))&type metadata accessor for TypeInstance);
      char v21 = sub_10006F010();
      id v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      char v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10004E7C4((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10004DB9C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10006EA40();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100052038(&qword_100082308, (void (*)(uint64_t))&type metadata accessor for TypeIdentifier);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_10006EFF0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    id v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    char v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    char v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      char v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100052038(&qword_100082508, (void (*)(uint64_t))&type metadata accessor for TypeIdentifier);
      char v21 = sub_10006F010();
      id v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      char v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10004EA80((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10004DEC0(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10006E9E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100052038(&qword_100082518, (void (*)(uint64_t))&type metadata accessor for TypeDefinition);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_10006EFF0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    id v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    char v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    char v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      char v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100052038(&qword_100082520, (void (*)(uint64_t))&type metadata accessor for TypeDefinition);
      char v21 = sub_10006F010();
      id v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      char v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10004ED3C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

Swift::Int sub_10004E1E4(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_100048D70();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_10004A98C();
      goto LABEL_22;
    }
    sub_10004AF5C();
  }
  uint64_t v11 = *v4;
  sub_10006F820();
  sub_10006F090();
  uint64_t result = sub_10006F840();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_10006F780(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_10006F7B0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_10006F780();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void sub_10004E380(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10004904C();
  }
  else
  {
    if (v7 > v6)
    {
      sub_10004AB40();
      goto LABEL_14;
    }
    sub_10004B208();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = sub_10006F450(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_10001028C(0, &qword_100081E28);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_10006F460();

    if (v12)
    {
LABEL_13:
      sub_10006F7B0();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_10006F460();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_10004E508(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_10006EAA0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::Int v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  id v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1000492D8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_10004ACEC();
      goto LABEL_12;
    }
    sub_10004B480();
  }
  uint64_t v12 = *v3;
  sub_100052038(&qword_1000824C8, (void (*)(uint64_t))&type metadata accessor for RuntimePlatform);
  uint64_t v13 = sub_10006EFF0();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100052038(&qword_1000824D0, (void (*)(uint64_t))&type metadata accessor for RuntimePlatform);
      char v21 = sub_10006F010();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_10006F7B0();
  __break(1u);
  return result;
}

uint64_t sub_10004E7C4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_10006E960();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::Int v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  id v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_100049AC8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_10004ACEC();
      goto LABEL_12;
    }
    sub_10004BBD8();
  }
  uint64_t v12 = *v3;
  sub_100052038(&qword_1000824F0, (void (*)(uint64_t))&type metadata accessor for TypeInstance);
  uint64_t v13 = sub_10006EFF0();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100052038(&qword_1000824F8, (void (*)(uint64_t))&type metadata accessor for TypeInstance);
      char v21 = sub_10006F010();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_10006F7B0();
  __break(1u);
  return result;
}

uint64_t sub_10004EA80(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_10006EA40();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::Int v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  id v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_100049EC0();
  }
  else
  {
    if (v11 > v10)
    {
      sub_10004ACEC();
      goto LABEL_12;
    }
    sub_10004BF84();
  }
  uint64_t v12 = *v3;
  sub_100052038(&qword_100082308, (void (*)(uint64_t))&type metadata accessor for TypeIdentifier);
  uint64_t v13 = sub_10006EFF0();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100052038(&qword_100082508, (void (*)(uint64_t))&type metadata accessor for TypeIdentifier);
      char v21 = sub_10006F010();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_10006F7B0();
  __break(1u);
  return result;
}

uint64_t sub_10004ED3C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_10006E9E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::Int v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  id v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10004A2B8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_10004ACEC();
      goto LABEL_12;
    }
    sub_10004C330();
  }
  uint64_t v12 = *v3;
  sub_100052038(&qword_100082518, (void (*)(uint64_t))&type metadata accessor for TypeDefinition);
  uint64_t v13 = sub_10006EFF0();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100052038(&qword_100082520, (void (*)(uint64_t))&type metadata accessor for TypeDefinition);
      char v21 = sub_10006F010();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_10006F7B0();
  __break(1u);
  return result;
}

uint64_t sub_10004EFF8(uint64_t (*a1)(void, uint64_t, uint64_t))
{
  uint64_t v2 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v2;
  if ((result & 1) == 0)
  {
    uint64_t v4 = *(void *)(v2 + 16) + 1;
    return a1(0, v4, 1);
  }
  return result;
}

uint64_t sub_10004F06C(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1)) {
    return a2(v3 > 1);
  }
  return result;
}

uint64_t sub_10004F09C()
{
  sub_100058088();
  uint64_t v1 = *v0;
  *(void *)(v1 + 16) = v2 + 1;
  v3(0);
  sub_1000551F4();
  uint64_t v5 = sub_100059940(v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
  return v6(v5);
}

uint64_t sub_10004F120(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1000530BC();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_10004F46C(v6);
  *a1 = v2;
  return result;
}

void sub_10004F18C(uint64_t *a1)
{
  uint64_t v2 = *(void *)(sub_10006EAA0() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1000530D0(v3);
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_10004FAD4(v6);
  *a1 = v3;
}

void *sub_10004F234(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10000772C(&qword_100081AB8);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 16);
  uint64_t v5 = sub_10005225C((uint64_t)&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1000102C8();
  if (v5 != v1)
  {
    __break(1u);
    return &_swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_10004F318(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000772C(&qword_1000824B8);
  uint64_t v3 = *(void *)(sub_10006EAA0() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      uint64_t v9 = sub_100052778(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_1000102C8();
      if (v9 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10004F46C(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = sub_10006F740(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_100050788(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_144;
  }
  uint64_t v5 = result;
  uint64_t result = (uint64_t)sub_10004671C(v3 / 2);
  uint64_t v95 = result;
  uint64_t v96 = v3;
  __dst = v6;
  uint64_t v93 = a1;
  if (v3 <= 0)
  {
    uint64_t v98 = (char *)_swiftEmptyArrayStorage;
    unint64_t v31 = _swiftEmptyArrayStorage[2];
LABEL_110:
    if (v31 < 2)
    {
LABEL_121:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)(v95 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_149;
    }
    uint64_t v85 = *v93;
    while (1)
    {
      unint64_t v86 = v31 - 2;
      if (v31 < 2) {
        break;
      }
      if (!v85) {
        goto LABEL_153;
      }
      uint64_t v87 = v98;
      uint64_t v88 = *(void *)&v98[16 * v86 + 32];
      uint64_t v89 = *(void *)&v98[16 * v31 + 24];
      uint64_t result = sub_100050BC8((char *)(v85 + 16 * v88), (char *)(v85 + 16 * *(void *)&v98[16 * v31 + 16]), v85 + 16 * v89, __dst);
      if (v1) {
        goto LABEL_106;
      }
      if (v89 < v88) {
        goto LABEL_139;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100051458((uint64_t)v98);
        uint64_t v87 = (char *)result;
      }
      if (v86 >= *((void *)v87 + 2)) {
        goto LABEL_140;
      }
      uint64_t v90 = &v87[16 * v86 + 32];
      *(void *)uint64_t v90 = v88;
      *((void *)v90 + 1) = v89;
      unint64_t v91 = *((void *)v87 + 2);
      if (v31 > v91) {
        goto LABEL_141;
      }
      uint64_t result = (uint64_t)memmove(&v87[16 * v31 + 16], &v87[16 * v31 + 32], 16 * (v91 - v31));
      uint64_t v98 = v87;
      *((void *)v87 + 2) = v91 - 1;
      unint64_t v31 = v91 - 1;
      Swift::Int v3 = v96;
      if (v91 <= 2) {
        goto LABEL_121;
      }
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return result;
  }
  uint64_t v94 = v5;
  Swift::Int v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v92 = *a1 + 8;
  uint64_t v98 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v9 = v7++;
    if (v7 >= v3) {
      goto LABEL_32;
    }
    uint64_t v10 = (uint64_t *)(v8 + 16 * v7);
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(v8 + 16 * v9);
    if (result == *v12 && v11 == v12[1])
    {
      Swift::Int v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_31;
      }
      int v14 = 0;
LABEL_13:
      uint64_t v16 = (void *)(v92 + 16 * v15);
      do
      {
        uint64_t result = *(v16 - 1);
        uint64_t v17 = (void *)(v8 + 16 * v7);
        if (result == *v17 && *v16 == v17[1])
        {
          if (v14) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t result = sub_10006F780();
          if ((v14 ^ result)) {
            goto LABEL_23;
          }
        }
        v16 += 2;
        Swift::Int v19 = v15 + 1;
        Swift::Int v7 = v15;
        Swift::Int v15 = v19;
      }
      while (v19 < v3);
      Swift::Int v15 = v19;
      goto LABEL_23;
    }
    uint64_t result = sub_10006F780();
    int v14 = result;
    Swift::Int v15 = v9 + 2;
    if (v9 + 2 < v3) {
      goto LABEL_13;
    }
LABEL_23:
    Swift::Int v7 = v15;
    if ((v14 & 1) == 0) {
      goto LABEL_32;
    }
LABEL_24:
    if (v15 < v9) {
      goto LABEL_148;
    }
    if (v9 < v15)
    {
      uint64_t v20 = 16 * v15;
      uint64_t v21 = 16 * v9;
      Swift::Int v22 = v15;
      Swift::Int v23 = v9;
      do
      {
        if (v23 != --v22)
        {
          if (!v8) {
            goto LABEL_152;
          }
          uint64_t v24 = v8 + v20;
          uint64_t v25 = *(void *)(v8 + v21);
          uint64_t v26 = *(void *)(v8 + v21 + 8);
          *(_OWORD *)(v8 + v21) = *(_OWORD *)(v8 + v20 - 16);
          *(void *)(v24 - 16) = v25;
          *(void *)(v24 - 8) = v26;
        }
        ++v23;
        v20 -= 16;
        v21 += 16;
      }
      while (v23 < v22);
    }
LABEL_31:
    Swift::Int v7 = v15;
LABEL_32:
    if (v7 >= v3) {
      goto LABEL_41;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_143;
    }
    if (v7 - v9 >= v94) {
      goto LABEL_41;
    }
    if (__OFADD__(v9, v94)) {
      goto LABEL_146;
    }
    if (v9 + v94 >= v3) {
      Swift::Int v27 = v3;
    }
    else {
      Swift::Int v27 = v9 + v94;
    }
    if (v27 < v9) {
      goto LABEL_147;
    }
    if (v7 == v27)
    {
LABEL_41:
      id v28 = v98;
    }
    else
    {
      uint64_t v79 = (uint64_t *)(v8 + 16 * v7);
      id v28 = v98;
      do
      {
        uint64_t v80 = (uint64_t *)(v8 + 16 * v7);
        uint64_t result = *v80;
        uint64_t v81 = v80[1];
        Swift::Int v82 = v9;
        unint64_t v83 = v79;
        do
        {
          if (result == *(v83 - 2) && v81 == *(v83 - 1)) {
            break;
          }
          uint64_t result = sub_10006F780();
          if ((result & 1) == 0) {
            break;
          }
          if (!v8) {
            goto LABEL_150;
          }
          uint64_t result = *v83;
          uint64_t v81 = v83[1];
          *(_OWORD *)unint64_t v83 = *((_OWORD *)v83 - 1);
          *(v83 - 1) = v81;
          *(v83 - 2) = result;
          v83 -= 2;
          ++v82;
        }
        while (v7 != v82);
        ++v7;
        v79 += 2;
      }
      while (v7 != v27);
      Swift::Int v7 = v27;
    }
    if (v7 < v9) {
      goto LABEL_142;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100051360(0, *((void *)v28 + 2) + 1, 1, v28);
      id v28 = (char *)result;
    }
    unint64_t v30 = *((void *)v28 + 2);
    unint64_t v29 = *((void *)v28 + 3);
    unint64_t v31 = v30 + 1;
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)sub_100051360((char *)(v29 > 1), v30 + 1, 1, v28);
      id v28 = (char *)result;
    }
    *((void *)v28 + 2) = v31;
    uint64_t v32 = v28 + 32;
    uint64_t v33 = (Swift::Int *)&v28[16 * v30 + 32];
    Swift::Int *v33 = v9;
    v33[1] = v7;
    uint64_t v98 = v28;
    if (v30) {
      break;
    }
    unint64_t v31 = 1;
LABEL_90:
    Swift::Int v3 = v96;
    if (v7 >= v96) {
      goto LABEL_110;
    }
  }
  while (1)
  {
    unint64_t v34 = v31 - 1;
    if (v31 >= 4)
    {
      uint64_t v39 = &v32[2 * v31];
      uint64_t v40 = *(v39 - 8);
      uint64_t v41 = *(v39 - 7);
      BOOL v45 = __OFSUB__(v41, v40);
      uint64_t v42 = v41 - v40;
      if (v45) {
        goto LABEL_127;
      }
      uint64_t v44 = *(v39 - 6);
      uint64_t v43 = *(v39 - 5);
      BOOL v45 = __OFSUB__(v43, v44);
      uint64_t v37 = v43 - v44;
      char v38 = v45;
      if (v45) {
        goto LABEL_128;
      }
      unint64_t v46 = v31 - 2;
      uint64_t v47 = &v32[2 * v31 - 4];
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      BOOL v45 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      if (v45) {
        goto LABEL_129;
      }
      BOOL v45 = __OFADD__(v37, v50);
      uint64_t v51 = v37 + v50;
      if (v45) {
        goto LABEL_131;
      }
      if (v51 >= v42)
      {
        id v69 = &v32[2 * v34];
        uint64_t v71 = *v69;
        uint64_t v70 = v69[1];
        BOOL v45 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v45) {
          goto LABEL_137;
        }
        BOOL v62 = v37 < v72;
        goto LABEL_79;
      }
    }
    else
    {
      if (v31 != 3)
      {
        uint64_t v63 = *((void *)v28 + 4);
        uint64_t v64 = *((void *)v28 + 5);
        BOOL v45 = __OFSUB__(v64, v63);
        uint64_t v56 = v64 - v63;
        char v57 = v45;
        goto LABEL_73;
      }
      uint64_t v36 = *((void *)v28 + 4);
      uint64_t v35 = *((void *)v28 + 5);
      BOOL v45 = __OFSUB__(v35, v36);
      uint64_t v37 = v35 - v36;
      char v38 = v45;
    }
    if (v38) {
      goto LABEL_130;
    }
    unint64_t v46 = v31 - 2;
    id v52 = &v32[2 * v31 - 4];
    uint64_t v54 = *v52;
    uint64_t v53 = v52[1];
    BOOL v55 = __OFSUB__(v53, v54);
    uint64_t v56 = v53 - v54;
    char v57 = v55;
    if (v55) {
      goto LABEL_132;
    }
    id v58 = &v32[2 * v34];
    uint64_t v60 = *v58;
    uint64_t v59 = v58[1];
    BOOL v45 = __OFSUB__(v59, v60);
    uint64_t v61 = v59 - v60;
    if (v45) {
      goto LABEL_134;
    }
    if (__OFADD__(v56, v61)) {
      goto LABEL_136;
    }
    if (v56 + v61 >= v37)
    {
      BOOL v62 = v37 < v61;
LABEL_79:
      if (v62) {
        unint64_t v34 = v46;
      }
      goto LABEL_81;
    }
LABEL_73:
    if (v57) {
      goto LABEL_133;
    }
    id v65 = &v32[2 * v34];
    uint64_t v67 = *v65;
    uint64_t v66 = v65[1];
    BOOL v45 = __OFSUB__(v66, v67);
    uint64_t v68 = v66 - v67;
    if (v45) {
      goto LABEL_135;
    }
    if (v68 < v56) {
      goto LABEL_90;
    }
LABEL_81:
    unint64_t v73 = v34 - 1;
    if (v34 - 1 >= v31)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v8) {
      goto LABEL_151;
    }
    id v74 = &v32[2 * v73];
    uint64_t v75 = *v74;
    uint64_t v76 = &v32[2 * v34];
    uint64_t v77 = v76[1];
    uint64_t result = sub_100050BC8((char *)(v8 + 16 * *v74), (char *)(v8 + 16 * *v76), v8 + 16 * v77, __dst);
    if (v1) {
      break;
    }
    if (v77 < v75) {
      goto LABEL_124;
    }
    if (v34 > *((void *)v98 + 2)) {
      goto LABEL_125;
    }
    *id v74 = v75;
    v32[2 * v73 + 1] = v77;
    unint64_t v78 = *((void *)v98 + 2);
    if (v34 >= v78) {
      goto LABEL_126;
    }
    id v28 = v98;
    unint64_t v31 = v78 - 1;
    uint64_t result = (uint64_t)memmove(&v32[2 * v34], v76 + 2, 16 * (v78 - 1 - v34));
    *((void *)v98 + 2) = v78 - 1;
    if (v78 <= 2) {
      goto LABEL_90;
    }
  }
LABEL_106:
  uint64_t result = swift_bridgeObjectRelease();
  if (v96 < -1) {
    goto LABEL_145;
  }
  *(void *)(v95 + 16) = 0;
  return swift_bridgeObjectRelease();
}

void sub_10004FAD4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10006EAA0();
  uint64_t v156 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v151 = (char *)&v142 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v165 = (char *)&v142 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v142 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  int v14 = (char *)&v142 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v154 = (char *)&v142 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v153 = (char *)&v142 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  id v149 = (char *)&v142 - v20;
  __chkstk_darwin(v19);
  uint64_t v148 = (char *)&v142 - v21;
  uint64_t v169 = a1;
  Swift::Int v22 = a1[1];
  Swift::Int v23 = sub_10006F740(v22);
  if (v23 >= v22)
  {
    if (v22 < 0) {
      goto LABEL_155;
    }
    if (v22) {
      sub_100050850(0, v22, 1, v169);
    }
    return;
  }
  Swift::Int v24 = v23;
  uint64_t v144 = sub_100046794(v22 / 2);
  unint64_t v155 = v25;
  uint64_t v145 = v22;
  if (v22 <= 0) {
    goto LABEL_119;
  }
  Swift::Int v143 = v24;
  unint64_t v158 = v11;
  uint64_t v161 = v156 + 16;
  id v162 = (void (**)(char *, uint64_t))(v156 + 8);
  uint64_t v163 = v4;
  uint64_t v167 = (void (**)(char *, uint64_t, uint64_t))(v156 + 32);
  uint64_t v26 = (char *)_swiftEmptyArrayStorage;
  uint64_t v27 = v22;
  uint64_t v28 = 0;
  uint64_t v147 = v14;
  while (1)
  {
    uint64_t v29 = v28;
    uint64_t v30 = v28 + 1;
    if (v28 + 1 >= v27)
    {
      uint64_t v41 = v163;
      uint64_t v42 = v147;
    }
    else
    {
      uint64_t v166 = v27;
      uint64_t v31 = *v169;
      uint64_t v32 = *(void *)(v156 + 72);
      uint64_t v164 = v28 + 1;
      uint64_t v33 = v31 + v32 * v30;
      unint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v156 + 16);
      uint64_t v35 = v163;
      v34(v148, v33, v163);
      uint64_t v152 = v29;
      id v157 = (char *)v31;
      uint64_t v168 = v32;
      v34(v149, v31 + v32 * v29, v35);
      uint64_t v36 = sub_10006EA80();
      uint64_t v38 = v37;
      if (v36 == sub_10006EA80() && v38 == v39) {
        LODWORD(v160) = 0;
      }
      else {
        LODWORD(v160) = sub_10006F780();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v41 = v163;
      uint64_t v43 = *v162;
      (*v162)(v149, v163);
      v43(v148, v41);
      uint64_t v30 = v152 + 2;
      uint64_t v27 = v166;
      if (v152 + 2 < v166)
      {
        uint64_t v146 = v26;
        v164 *= v168;
        uint64_t v44 = v157;
        uint64_t v159 = v168 * v30;
        while (1)
        {
          uint64_t v45 = v30;
          v34(v153, (uint64_t)&v44[v159], v41);
          v34(v154, (uint64_t)&v44[v164], v41);
          uint64_t v46 = sub_10006EA80();
          uint64_t v48 = v47;
          BOOL v50 = v46 == sub_10006EA80() && v48 == v49;
          int v51 = v50 ? 0 : sub_10006F780();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v41 = v163;
          v43(v154, v163);
          v43(v153, v41);
          if ((v160 ^ v51)) {
            break;
          }
          uint64_t v30 = v45 + 1;
          v44 += v168;
          uint64_t v27 = v166;
          if (v45 + 1 >= v166)
          {
            uint64_t v30 = v166;
            uint64_t v26 = v146;
            goto LABEL_24;
          }
        }
        uint64_t v26 = v146;
        uint64_t v30 = v45;
        uint64_t v27 = v166;
      }
LABEL_24:
      uint64_t v42 = v147;
      uint64_t v29 = v152;
      if (v160)
      {
        if (v30 < v152) {
          goto LABEL_156;
        }
        if (v152 < v30)
        {
          uint64_t v146 = v26;
          uint64_t v52 = 0;
          uint64_t v53 = v168 * (v30 - 1);
          uint64_t v54 = v30 * v168;
          uint64_t v55 = v152;
          uint64_t v56 = v152 * v168;
          uint64_t v164 = v30;
          do
          {
            if (v55 != v30 + v52 - 1)
            {
              char v57 = v157;
              if (!v157) {
                goto LABEL_162;
              }
              id v58 = &v157[v56];
              uint64_t v159 = (uint64_t)&v157[v53];
              uint64_t v41 = v163;
              uint64_t v160 = (void (*)(char *, char *, uint64_t))*v167;
              v160(v151, &v157[v56], v163);
              if (v56 < v53 || v58 >= &v57[v54])
              {
                uint64_t v60 = v159;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v60 = v159;
                if (v56 != v53) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              v160((char *)v60, v151, v41);
              uint64_t v30 = v164;
            }
            ++v55;
            --v52;
            v53 -= v168;
            v54 -= v168;
            v56 += v168;
          }
          while (v55 < v30 + v52);
          uint64_t v26 = v146;
          uint64_t v42 = v147;
          uint64_t v29 = v152;
          uint64_t v27 = v166;
        }
      }
    }
    if (v30 < v27)
    {
      if (__OFSUB__(v30, v29)) {
        goto LABEL_154;
      }
      if (v30 - v29 < v143)
      {
        if (__OFADD__(v29, v143)) {
          goto LABEL_157;
        }
        if (v29 + v143 >= v27) {
          uint64_t v61 = v27;
        }
        else {
          uint64_t v61 = v29 + v143;
        }
        if (v61 < v29)
        {
LABEL_158:
          __break(1u);
          goto LABEL_159;
        }
        if (v30 != v61)
        {
          uint64_t v152 = v29;
          uint64_t v146 = v26;
          uint64_t v142 = v2;
          uint64_t v62 = *(void *)(v156 + 72);
          id v157 = *(char **)(v156 + 16);
          uint64_t v63 = v62 * (v30 - 1);
          uint64_t v159 = v62;
          uint64_t v168 = v30 * v62;
          uint64_t v150 = v61;
          do
          {
            uint64_t v64 = 0;
            uint64_t v65 = v152;
            uint64_t v164 = v30;
            uint64_t v160 = (void (*)(char *, char *, uint64_t))v63;
            while (1)
            {
              uint64_t v166 = v65;
              uint64_t v66 = *v169;
              uint64_t v67 = (void (*)(char *, uint64_t, uint64_t))v157;
              ((void (*)(char *, uint64_t, uint64_t))v157)(v42, v168 + v64 + *v169, v41);
              uint64_t v68 = v63 + v64 + v66;
              id v69 = v42;
              uint64_t v70 = v158;
              v67(v158, v68, v41);
              uint64_t v71 = sub_10006EA80();
              uint64_t v73 = v72;
              if (v71 == sub_10006EA80() && v73 == v74) {
                break;
              }
              char v76 = sub_10006F780();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v77 = *v162;
              (*v162)(v70, v41);
              v77(v69, v41);
              uint64_t v42 = v69;
              if ((v76 & 1) == 0) {
                goto LABEL_61;
              }
              uint64_t v78 = *v169;
              uint64_t v63 = (uint64_t)v160;
              if (!*v169) {
                goto LABEL_160;
              }
              uint64_t v79 = (char *)v160 + v78 + v64;
              uint64_t v80 = *v167;
              uint64_t v81 = v163;
              (*v167)(v165, v78 + v168 + v64, v163);
              swift_arrayInitWithTakeFrontToBack();
              v80(v79, (uint64_t)v165, v81);
              v64 -= v159;
              uint64_t v65 = v166 + 1;
              uint64_t v82 = v164;
              uint64_t v41 = v81;
              if (v164 == v166 + 1) {
                goto LABEL_62;
              }
            }
            swift_bridgeObjectRelease_n();
            unint64_t v83 = *v162;
            (*v162)(v70, v41);
            v83(v69, v41);
            uint64_t v42 = v69;
LABEL_61:
            uint64_t v82 = v164;
            uint64_t v63 = (uint64_t)v160;
LABEL_62:
            uint64_t v30 = v82 + 1;
            v63 += v159;
            v168 += v159;
          }
          while (v30 != v150);
          uint64_t v30 = v150;
          uint64_t v2 = v142;
          uint64_t v26 = v146;
          uint64_t v29 = v152;
        }
      }
    }
    if (v30 < v29) {
      goto LABEL_153;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v26 = sub_100051360(0, *((void *)v26 + 2) + 1, 1, v26);
    }
    unint64_t v85 = *((void *)v26 + 2);
    unint64_t v84 = *((void *)v26 + 3);
    unint64_t v86 = v85 + 1;
    uint64_t v164 = v30;
    if (v85 >= v84 >> 1) {
      uint64_t v26 = sub_100051360((char *)(v84 > 1), v85 + 1, 1, v26);
    }
    *((void *)v26 + 2) = v86;
    uint64_t v87 = v26 + 32;
    uint64_t v88 = &v26[16 * v85 + 32];
    uint64_t v89 = v164;
    *(void *)uint64_t v88 = v29;
    *((void *)v88 + 1) = v89;
    if (v85) {
      break;
    }
    unint64_t v86 = 1;
LABEL_112:
    uint64_t v27 = v169[1];
    uint64_t v28 = v164;
    if (v164 >= v27) {
      goto LABEL_120;
    }
  }
  while (1)
  {
    unint64_t v90 = v86 - 1;
    if (v86 >= 4)
    {
      uint64_t v95 = &v87[16 * v86];
      uint64_t v96 = *((void *)v95 - 8);
      uint64_t v97 = *((void *)v95 - 7);
      BOOL v101 = __OFSUB__(v97, v96);
      uint64_t v98 = v97 - v96;
      if (v101) {
        goto LABEL_138;
      }
      uint64_t v100 = *((void *)v95 - 6);
      uint64_t v99 = *((void *)v95 - 5);
      BOOL v101 = __OFSUB__(v99, v100);
      uint64_t v93 = v99 - v100;
      char v94 = v101;
      if (v101) {
        goto LABEL_139;
      }
      unint64_t v102 = v86 - 2;
      id v103 = &v87[16 * v86 - 32];
      uint64_t v105 = *(void *)v103;
      uint64_t v104 = *((void *)v103 + 1);
      BOOL v101 = __OFSUB__(v104, v105);
      uint64_t v106 = v104 - v105;
      if (v101) {
        goto LABEL_140;
      }
      BOOL v101 = __OFADD__(v93, v106);
      uint64_t v107 = v93 + v106;
      if (v101) {
        goto LABEL_142;
      }
      if (v107 >= v98)
      {
        Swift::String v125 = &v87[16 * v90];
        uint64_t v127 = *(void *)v125;
        uint64_t v126 = *((void *)v125 + 1);
        BOOL v101 = __OFSUB__(v126, v127);
        uint64_t v128 = v126 - v127;
        if (v101) {
          goto LABEL_148;
        }
        BOOL v118 = v93 < v128;
        goto LABEL_101;
      }
    }
    else
    {
      if (v86 != 3)
      {
        uint64_t v119 = *((void *)v26 + 4);
        uint64_t v120 = *((void *)v26 + 5);
        BOOL v101 = __OFSUB__(v120, v119);
        uint64_t v112 = v120 - v119;
        char v113 = v101;
        goto LABEL_95;
      }
      uint64_t v92 = *((void *)v26 + 4);
      uint64_t v91 = *((void *)v26 + 5);
      BOOL v101 = __OFSUB__(v91, v92);
      uint64_t v93 = v91 - v92;
      char v94 = v101;
    }
    if (v94) {
      goto LABEL_141;
    }
    unint64_t v102 = v86 - 2;
    uint64_t v108 = &v87[16 * v86 - 32];
    uint64_t v110 = *(void *)v108;
    uint64_t v109 = *((void *)v108 + 1);
    BOOL v111 = __OFSUB__(v109, v110);
    uint64_t v112 = v109 - v110;
    char v113 = v111;
    if (v111) {
      goto LABEL_143;
    }
    char v114 = &v87[16 * v90];
    uint64_t v116 = *(void *)v114;
    uint64_t v115 = *((void *)v114 + 1);
    BOOL v101 = __OFSUB__(v115, v116);
    uint64_t v117 = v115 - v116;
    if (v101) {
      goto LABEL_145;
    }
    if (__OFADD__(v112, v117)) {
      goto LABEL_147;
    }
    if (v112 + v117 >= v93)
    {
      BOOL v118 = v93 < v117;
LABEL_101:
      if (v118) {
        unint64_t v90 = v102;
      }
      goto LABEL_103;
    }
LABEL_95:
    if (v113) {
      goto LABEL_144;
    }
    os_log_t v121 = &v87[16 * v90];
    uint64_t v123 = *(void *)v121;
    uint64_t v122 = *((void *)v121 + 1);
    BOOL v101 = __OFSUB__(v122, v123);
    uint64_t v124 = v122 - v123;
    if (v101) {
      goto LABEL_146;
    }
    if (v124 < v112) {
      goto LABEL_112;
    }
LABEL_103:
    unint64_t v129 = v90 - 1;
    if (v90 - 1 >= v86)
    {
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
      goto LABEL_149;
    }
    if (!*v169) {
      goto LABEL_161;
    }
    uint64_t v130 = v26;
    uint64_t v131 = &v87[16 * v129];
    uint64_t v132 = *(void *)v131;
    uint64_t v133 = &v87[16 * v90];
    uint64_t v134 = *((void *)v133 + 1);
    sub_100050D70(*v169 + *(void *)(v156 + 72) * *(void *)v131, *v169 + *(void *)(v156 + 72) * *(void *)v133, *v169 + *(void *)(v156 + 72) * v134, v155);
    if (v2) {
      break;
    }
    if (v134 < v132) {
      goto LABEL_135;
    }
    if (v90 > *((void *)v130 + 2)) {
      goto LABEL_136;
    }
    *(void *)uint64_t v131 = v132;
    *(void *)&v87[16 * v129 + 8] = v134;
    unint64_t v135 = *((void *)v130 + 2);
    if (v90 >= v135) {
      goto LABEL_137;
    }
    uint64_t v26 = v130;
    unint64_t v86 = v135 - 1;
    memmove(&v87[16 * v90], v133 + 16, 16 * (v135 - 1 - v90));
    *((void *)v130 + 2) = v135 - 1;
    if (v135 <= 2) {
      goto LABEL_112;
    }
  }
LABEL_117:
  swift_bridgeObjectRelease();
  if (v145 >= -1) {
    goto LABEL_132;
  }
  __break(1u);
LABEL_119:
  uint64_t v26 = (char *)_swiftEmptyArrayStorage;
  unint64_t v86 = _swiftEmptyArrayStorage[2];
LABEL_120:
  if (v86 >= 2)
  {
    uint64_t v136 = *v169;
    while (1)
    {
      unint64_t v137 = v86 - 2;
      if (v86 < 2) {
        break;
      }
      if (!v136) {
        goto LABEL_163;
      }
      uint64_t v138 = *(void *)&v26[16 * v137 + 32];
      uint64_t v139 = *(void *)&v26[16 * v86 + 24];
      sub_100050D70(v136 + *(void *)(v156 + 72) * v138, v136 + *(void *)(v156 + 72) * *(void *)&v26[16 * v86 + 16], v136 + *(void *)(v156 + 72) * v139, v155);
      if (v2) {
        goto LABEL_117;
      }
      if (v139 < v138) {
        goto LABEL_150;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v26 = sub_100051458((uint64_t)v26);
      }
      if (v137 >= *((void *)v26 + 2)) {
        goto LABEL_151;
      }
      uint64_t v140 = &v26[16 * v137 + 32];
      *(void *)uint64_t v140 = v138;
      *((void *)v140 + 1) = v139;
      unint64_t v141 = *((void *)v26 + 2);
      if (v86 > v141) {
        goto LABEL_152;
      }
      memmove(&v26[16 * v86 + 16], &v26[16 * v86 + 32], 16 * (v141 - v86));
      *((void *)v26 + 2) = v141 - 1;
      unint64_t v86 = v141 - 1;
      if (v141 <= 2) {
        goto LABEL_131;
      }
    }
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
    goto LABEL_158;
  }
LABEL_131:
  swift_bridgeObjectRelease();
  if (v145 >= -1)
  {
LABEL_132:
    *(void *)(v144 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
}

uint64_t sub_100050788(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
    while (2)
    {
      uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
      uint64_t result = *v9;
      uint64_t v10 = v9[1];
      uint64_t v11 = v6;
      uint64_t v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1)) {
          break;
        }
        uint64_t result = sub_10006F780();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t result = *v12;
        uint64_t v10 = v12[1];
        *(_OWORD *)uint64_t v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_100050850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v46 = a4;
  uint64_t v36 = a1;
  uint64_t v41 = sub_10006EAA0();
  uint64_t v6 = __chkstk_darwin(v41);
  uint64_t v44 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t result = __chkstk_darwin(v8);
  int v14 = (char *)&v34 - v13;
  uint64_t v42 = a3;
  uint64_t v35 = a2;
  if (a3 != a2)
  {
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v38 = v12 + 16;
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v39 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v40 = v15;
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v48 = v15 * (v42 - 1);
    uint64_t v47 = v15 * v42;
    while (2)
    {
      uint64_t v16 = 0;
      uint64_t v17 = v36;
      uint64_t v18 = v41;
      while (1)
      {
        uint64_t v19 = *v46;
        uint64_t v45 = v47 + v16;
        uint64_t v20 = v37;
        v37(v14, v47 + v16 + v19, v18);
        v20(v10, v48 + v16 + v19, v18);
        uint64_t v21 = sub_10006EA80();
        Swift::Int v22 = v14;
        Swift::Int v23 = v10;
        uint64_t v25 = v24;
        if (v21 == sub_10006EA80() && v25 == v26) {
          break;
        }
        char v28 = sub_10006F780();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v29 = *v39;
        (*v39)(v23, v18);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v29)(v22, v18);
        uint64_t v10 = v23;
        int v14 = v22;
        if (v28)
        {
          uint64_t v30 = *v46;
          if (!*v46)
          {
            __break(1u);
            return result;
          }
          uint64_t v31 = v30 + v48 + v16;
          uint64_t v32 = *v43;
          uint64_t v18 = v41;
          (*v43)(v44, v30 + v47 + v16, v41);
          swift_arrayInitWithTakeFrontToBack();
          uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v32)(v31, v44, v18);
          v16 -= v40;
          ++v17;
          int v14 = v22;
          if (v42 != v17) {
            continue;
          }
        }
        goto LABEL_13;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v33 = *v39;
      (*v39)(v23, v18);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v22, v18);
      uint64_t v10 = v23;
      int v14 = v22;
LABEL_13:
      v48 += v40;
      v47 += v40;
      if (++v42 != v35) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_100050BC8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 16;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 16;
  if (v9 >= v11)
  {
    sub_100067DE8(a2, (uint64_t)(a3 - (void)a2) / 16, __dst);
    uint64_t v12 = &v4[16 * v11];
    if (v7 >= v6 || v10 < 16) {
      goto LABEL_47;
    }
    uint64_t v18 = (char *)(a3 - 16);
    while (1)
    {
      uint64_t v19 = v18 + 16;
      uint64_t v20 = v12 - 16;
      BOOL v21 = *((void *)v12 - 2) == *((void *)v6 - 2) && *((void *)v12 - 1) == *((void *)v6 - 1);
      if (v21 || (sub_10006F780() & 1) == 0)
      {
        BOOL v23 = v19 != v12 || v18 >= v12;
        v12 -= 16;
        if (!v23) {
          goto LABEL_43;
        }
      }
      else
      {
        BOOL v22 = v19 != v6 || v18 >= v6;
        uint64_t v20 = v6 - 16;
        v6 -= 16;
        if (!v22) {
          goto LABEL_43;
        }
      }
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_47;
      }
    }
  }
  sub_100067DE8(__src, (a2 - __src) / 16, __dst);
  uint64_t v12 = &v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v14 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v14 && (sub_10006F780() & 1) != 0) {
        break;
      }
      uint64_t v15 = v4;
      BOOL v14 = v7 == v4;
      v4 += 16;
      if (!v14) {
        goto LABEL_15;
      }
LABEL_16:
      v7 += 16;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_21;
      }
    }
    uint64_t v15 = v6;
    BOOL v14 = v7 == v6;
    v6 += 16;
    if (v14) {
      goto LABEL_16;
    }
LABEL_15:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  uint64_t v6 = v7;
LABEL_47:
  sub_100067DE8(v4, (v12 - v4) / 16, v6);
  return 1;
}

void sub_100050D70(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_10006EAA0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v77 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  char v76 = (char *)&v66 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  __chkstk_darwin(v14);
  uint64_t v18 = *(void *)(v17 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  int64_t v19 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v18 == -1) {
    goto LABEL_89;
  }
  int64_t v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v18 == -1) {
    goto LABEL_90;
  }
  uint64_t v72 = (char *)&v66 - v15;
  uint64_t v73 = v16;
  uint64_t v23 = v19 / v18;
  uint64_t v24 = v21 / v18;
  uint64_t v75 = v18;
  if (v19 / v18 >= v21 / v18)
  {
    sub_100067E68(a2, v21 / v18, a4);
    uint64_t v25 = (char *)(a4 + v24 * v18);
    if (v24 * v18 >= 1 && a1 < a2)
    {
      uint64_t v73 = -v18;
      char v28 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v74 = v9 + 16;
      id v69 = (void (**)(char *, uint64_t))(v9 + 8);
      uint64_t v70 = v28;
      unint64_t v67 = a4;
      unint64_t v71 = a1;
      do
      {
        unint64_t v29 = a3;
        unint64_t v78 = (unint64_t)v25;
        uint64_t v30 = v73;
        uint64_t v72 = &v25[v73];
        uint64_t v31 = v70;
        ((void (*)(char *))v70)(v76);
        v31(v77, a2 + v30, v8);
        uint64_t v32 = sub_10006EA80();
        uint64_t v34 = v33;
        if (v32 == sub_10006EA80() && v34 == v35) {
          char v37 = 0;
        }
        else {
          char v37 = sub_10006F780();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a3 = v29 + v73;
        uint64_t v38 = *v69;
        (*v69)(v77, v8);
        v38(v76, v8);
        unint64_t v39 = v71;
        if (v37)
        {
          if (v29 < a2 || a3 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v29 != a2)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          a2 += v30;
          a4 = v67;
          uint64_t v18 = v75;
          uint64_t v25 = (char *)v78;
        }
        else if (v29 < v78 || a3 >= v78)
        {
          uint64_t v42 = v72;
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v25 = v42;
          a4 = v67;
          uint64_t v18 = v75;
        }
        else
        {
          uint64_t v18 = v75;
          if (v29 == v78)
          {
            uint64_t v25 = v72;
          }
          else
          {
            uint64_t v43 = v72;
            swift_arrayInitWithTakeBackToFront();
            uint64_t v25 = v43;
          }
          a4 = v67;
        }
      }
      while ((unint64_t)v25 > a4 && a2 > v39);
    }
  }
  else
  {
    sub_100067E68(a1, v19 / v18, a4);
    uint64_t v25 = (char *)(a4 + v23 * v18);
    if (v23 * v18 >= 1 && a2 < a3)
    {
      uint64_t v47 = *(char **)(v9 + 16);
      uint64_t v74 = v9 + 16;
      char v76 = (char *)(v9 + 8);
      uint64_t v77 = v47;
      uint64_t v48 = v72;
      uint64_t v49 = v73;
      unint64_t v78 = a4 + v23 * v18;
      unint64_t v68 = a3;
      while (1)
      {
        BOOL v50 = v77;
        ((void (*)(char *, unint64_t, uint64_t))v77)(v48, a2, v8);
        ((void (*)(uint64_t, unint64_t, uint64_t))v50)(v49, a4, v8);
        uint64_t v51 = sub_10006EA80();
        uint64_t v52 = v8;
        uint64_t v54 = v53;
        if (v51 == sub_10006EA80() && v54 == v55) {
          break;
        }
        uint64_t v57 = v49;
        char v58 = sub_10006F780();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v59 = *(void (**)(char *, uint64_t))v76;
        (*(void (**)(uint64_t, uint64_t))v76)(v57, v52);
        v59(v48, v52);
        uint64_t v8 = v52;
        if ((v58 & 1) == 0) {
          goto LABEL_69;
        }
        uint64_t v18 = v75;
        unint64_t v60 = a2 + v75;
        BOOL v61 = a1 < a2 || a1 >= v60;
        unint64_t v62 = v68;
        if (!v61)
        {
          uint64_t v49 = v73;
          if (a1 != a2) {
            swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v25 = (char *)v78;
          goto LABEL_79;
        }
        swift_arrayInitWithTakeFrontToBack();
LABEL_78:
        uint64_t v25 = (char *)v78;
        uint64_t v49 = v73;
LABEL_79:
        a1 += v18;
        BOOL v65 = a4 >= (unint64_t)v25 || v60 >= v62;
        a2 = v60;
        if (v65) {
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease_n();
      uint64_t v63 = *(void (**)(char *, uint64_t))v76;
      (*(void (**)(uint64_t, uint64_t))v76)(v49, v52);
      v63(v48, v52);
      uint64_t v8 = v52;
LABEL_69:
      uint64_t v18 = v75;
      BOOL v64 = a1 < a4 || a1 >= a4 + v75;
      unint64_t v62 = v68;
      if (v64)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a1 != a4)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v60 = a2;
      a4 += v18;
      goto LABEL_78;
    }
LABEL_16:
    a2 = a1;
  }
  uint64_t v45 = &v25[-a4];
  if (v18 != -1 || v45 != (char *)0x8000000000000000)
  {
    sub_100067E68(a4, (uint64_t)v45 / v18, a2);
    return;
  }
LABEL_91:
  __break(1u);
}

char *sub_100051360(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000772C(&qword_1000824C0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_100051458(uint64_t a1)
{
  return sub_100051360(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_10005146C(uint64_t a1)
{
}

void sub_100051480(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  Class isa = sub_10006EFB0().super.isa;
  swift_bridgeObjectRelease();
  [a4 postNotificationName:a1 object:a2 userInfo:isa];
}

uint64_t sub_10005151C()
{
  sub_10006DE30();
  sub_10001148C();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80) | 7;

  sub_100055234();
  v3();
  uint64_t v4 = sub_100056A90();
  return _swift_deallocObject(v4, v5, v2);
}

uint64_t sub_1000515C0()
{
  sub_100056CA8();
  sub_100058088();
  uint64_t v2 = *(void *)(sub_10006DE30() - 8);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  swift_task_alloc();
  sub_100058568();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v6;
  v5[1] = sub_10000EA20;
  sub_1000588D4();
  return sub_10001BF6C(v7, v8, v9, v3, v4);
}

uint64_t sub_1000516AC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1000516C0(a1, a2);
  }
  return a1;
}

uint64_t sub_1000516C0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_100051718(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10005172C(a1, a2);
  }
  return a1;
}

uint64_t sub_10005172C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t type metadata accessor for ToolKitIndexer.SharedIndexingState()
{
  return self;
}

uint64_t *sub_1000517A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10006EA40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10006DEB0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1000518B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EA40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_10006DEB0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t sub_100051958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EA40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10006DEB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_100051A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EA40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10006DEB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_100051AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EA40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10006DEB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_100051B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EA40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10006DEB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100051C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100051C4C);
}

uint64_t sub_100051C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10006EA40();
  sub_1000114A8();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = sub_10006DEB0();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }
  return sub_100007800(v9, a2, v8);
}

uint64_t sub_100051CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100051CDC);
}

uint64_t sub_100051CDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10006EA40();
  sub_1000114A8();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = sub_10006DEB0();
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }
  return sub_100007770(v11, a2, a2, v10);
}

uint64_t type metadata accessor for ToolKitIndexer.TypeRegistryKey(uint64_t a1)
{
  return sub_10000E7D0(a1, qword_1000822C8);
}

uint64_t sub_100051D80()
{
  uint64_t result = sub_10006EA40();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_10006DEB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ToolKitIndexer.Error(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ToolKitIndexer.Error()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ToolKitIndexer.Error(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ToolKitIndexer.Error(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for ToolKitIndexer.Error(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitIndexer.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitIndexer.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_100051FA8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_100051FC0(void *result, int a2)
{
  if (a2 < 0)
  {
    *__n128 result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolKitIndexer.Error()
{
  return &type metadata for ToolKitIndexer.Error;
}

uint64_t sub_100051FF0()
{
  return sub_100052038(&qword_100082300, (void (*)(uint64_t))type metadata accessor for ToolKitIndexer.TypeRegistryKey);
}

uint64_t sub_100052038(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100052080(uint64_t a1)
{
  sub_100025EB4(a1, *(void *)(v1 + 16));
}

uint64_t sub_10005209C(void *a1)
{
  id v2 = [a1 languageCode];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_10006F050();

  return v3;
}

uint64_t sub_10005210C(void *a1)
{
  id v2 = [a1 availabilityAnnotations];

  if (!v2) {
    return 0;
  }
  type metadata accessor for LNPlatformName(0);
  sub_10001028C(0, &qword_100082488);
  sub_100052038(&qword_100082490, type metadata accessor for LNPlatformName);
  uint64_t v3 = sub_10006EFC0();

  return v3;
}

uint64_t sub_1000521D8()
{
  uint64_t v0 = sub_10006F050();
  uint64_t v2 = v1;
  if (v0 == sub_10006F050() && v2 == v3)
  {
    char v5 = 1;
  }
  else
  {
    sub_100059CE4();
    char v5 = sub_10006F780();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_10005225C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  char v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *char v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100052460()
{
  _Block_release(*(const void **)(v0 + 24));
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000524A8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10000EA20;
  uint64_t v2 = sub_100011758();
  return v3(v2);
}

uint64_t sub_100052558(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1000525A8(uint64_t a1)
{
  return sub_100041F34(a1);
}

uint64_t sub_1000525C4(uint64_t a1)
{
  return sub_10004192C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1000525E0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001028C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100052624(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10005263C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100052654(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_100052664()
{
  unint64_t result = qword_100082378;
  if (!qword_100082378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100082378);
  }
  return result;
}

uint64_t sub_1000526B0(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_errorRetain();
  }
  if (!a2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000526CC(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_errorRelease();
  }
  if (!a2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000526E8()
{
  uint64_t v1 = sub_100058ED0();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_100052718()
{
  return sub_10004302C(*(void **)(v0 + 16));
}

unsigned char **sub_100052738(unsigned char **result)
{
  uint64_t v2 = *result;
  *uint64_t v2 = *(unsigned char *)(v1 + 16);
  *uint64_t result = v2 + 1;
  return result;
}

uint64_t sub_100052750(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_100046A70(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t _s15ActionParameterVMa(uint64_t a1)
{
  return sub_10000E7D0(a1, qword_100082610);
}

uint64_t sub_100052778(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10006EAA0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v42 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v41 = (char *)&v32 - v13;
  uint64_t v43 = a4;
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v15 = a4 + 56;
  uint64_t v14 = v16;
  uint64_t v37 = v15;
  uint64_t v17 = -1 << *(unsigned char *)(v15 - 24);
  if (-v17 < 64) {
    uint64_t v18 = ~(-1 << -(char)v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v14;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_38:
    uint64_t v31 = v37;
    *a1 = v43;
    a1[1] = v31;
    a1[2] = ~v17;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v34 = -1 << *(unsigned char *)(v15 - 24);
  uint64_t v35 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v38 = v9 + 32;
  uint64_t v39 = v9 + 16;
  int64_t v36 = (unint64_t)(63 - v17) >> 6;
  int64_t v33 = v36 - 1;
  uint64_t v40 = a3;
  BOOL v22 = v41;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v24 = v23 | (v20 << 6);
  while (1)
  {
    ++v21;
    char v28 = v42;
    uint64_t v29 = *(void *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v42, *(void *)(v43 + 48) + v29 * v24, v8);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v22, v28, v8);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v8);
    a3 = v40;
    if (v21 == v40) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v25 >= v36) {
      goto LABEL_32;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v20 = v25;
  }
  v20 += 2;
  if (v25 + 1 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v36) {
    goto LABEL_32;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v20 = v25 + 3;
  if (v25 + 3 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25 + 2;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26)
  {
LABEL_14:
    int64_t v25 = v20;
    goto LABEL_18;
  }
  int64_t v27 = v25 + 4;
  if (v25 + 4 >= v36)
  {
LABEL_32:
    unint64_t v19 = 0;
LABEL_36:
    a3 = v21;
LABEL_37:
    uint64_t v17 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v36)
    {
      unint64_t v19 = 0;
      int64_t v20 = v33;
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100052AC0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

int64_t sub_100052AFC(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    unint64_t v10 = *(void *)(v6 + 8 * v9);
    if (v10) {
      return __clz(__rbit64(v10)) + (v9 << 6);
    }
    unint64_t v11 = (unint64_t)(result + 63) >> 6;
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      unint64_t v10 = *(void *)(v6 + 8 * v9);
      if (v10) {
        return __clz(__rbit64(v10)) + (v9 << 6);
      }
      while (v5 + 3 < v11)
      {
        unint64_t v10 = *(void *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_100052BE0(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if ((a1 & 0x8000000000000000) != 0 || (sub_100057C2C(), v7 <= v6))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(v5 + 8 * (a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(v5 + 36) != v4)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v8 = *(void *)(v5 + 48);
  sub_10006EA40();
  sub_1000551F4();
  unint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  uint64_t v12 = v8 + *(void *)(v10 + 72) * a1;
  v11(a2, v12, v9);
}

uint64_t sub_100052C98()
{
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_100058ED0();
  return _swift_deallocObject(v0, v1, v2);
}

id sub_100052CC8()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_100052CD0()
{
  swift_errorRelease();
  uint64_t v0 = sub_100058ED0();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100052D00()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_errorRetain();
  return v1;
}

void sub_100052D34(uint64_t *a1, void **a2, uint64_t a3)
{
  sub_1000472A0(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_100052D44()
{
  return sub_100046860(*(void (**)(void))(v0 + 16));
}

uint64_t sub_100052D4C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_100052D74()
{
  unint64_t result = qword_100082438;
  if (!qword_100082438)
  {
    sub_10000ED38(&qword_100082430);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100082438);
  }
  return result;
}

uint64_t sub_100052DC8@<X0>(uint64_t a1@<X8>)
{
  return sub_10004307C(a1);
}

uint64_t sub_100052DD0()
{
  return sub_100046564(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_100052DE0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100052E10()
{
  swift_release();
  uint64_t v0 = sub_100058EC0();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100052E40()
{
  __n128 v1 = sub_100057A68();
  return sub_1000434A0(v2, v3, v4, v5, v6, v7, v8, v9, v1.n128_i64[0], v1.n128_i64[1], v10, *(uint64_t **)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(uint64_t **)(v0 + 136), *(void *)(v0 + 144));
}

uint64_t sub_100052E7C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1000551F4();
  sub_1000551DC();
  v3();
  return a1;
}

uint64_t sub_100052ED0()
{
  __n128 v1 = sub_100057A68();
  return sub_100044880(v2, v3, v4, v5, v6, v7, v8, v9, v10, (uint64_t *)v1.n128_u64[0], v1.n128_i64[1], v11, v12, *(char **)(v0 + 104));
}

uint64_t sub_100052F00(uint64_t a1)
{
  return sub_100044E04(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56), *(void *)(v1 + 64), *(Swift::String_optional *)(v1 + 72), *(Swift::String_optional *)(v1 + 88), *(Swift::String_optional *)(v1 + 104), *(Swift::String_optional *)(v1 + 120), *(Swift::String_optional *)(v1 + 136), *(void *)(v1 + 152));
}

uint64_t sub_100052F58(uint64_t a1)
{
  return sub_100044FB8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100052F74(uint64_t a1)
{
  return sub_100045044(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100052F90(uint64_t a1)
{
  return sub_1000451C0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_100052FAC(int a1)
{
  sub_100045684(a1, *(id *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100052FC8()
{
  sub_10005949C();
  return sub_1000457D8(v0, v1, v2, v3);
}

uint64_t sub_100052FE4(uint64_t a1)
{
  return sub_100045480(a1, v1[2], v1[3], v1[4]);
}

void sub_100053004()
{
  sub_10005949C();
  sub_1000455D0(v0, v1, v2, v3);
}

void sub_100053020(uint64_t a1)
{
  sub_10004561C(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_10005303C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void sub_1000530BC()
{
}

void sub_1000530D0(uint64_t a1)
{
}

void *sub_1000530E4(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100053128()
{
  sub_10005949C();
  return sub_10001AA94(v1, v2, v3, v4, *(unsigned char *)(v0 + 40));
}

uint64_t sub_100053148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001A9FC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_100053164()
{
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_100058EC0();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10005319C()
{
  return sub_1000262A8(*(void *)(v0 + 16));
}

uint64_t sub_1000531B4()
{
  sub_10005949C();
  return sub_10001AB78(v0, v1, v2, v3);
}

uint64_t sub_1000531D0()
{
  uint64_t v1 = sub_100059238();
  v2(v1);
  sub_1000551F4();
  sub_100055270();
  v3();
  return v0;
}

uint64_t sub_100053220()
{
  uint64_t v1 = sub_100059238();
  v2(v1);
  sub_1000551F4();
  sub_10005524C();
  v3();
  return v0;
}

uint64_t sub_100053270@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10001AB10(a1, *(void *)(v2 + 16), a2);
}

void sub_10005328C()
{
}

uint64_t sub_1000532F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10000772C(a3);
  sub_1000551F4();
  sub_100055270();
  v4();
  return a2;
}

uint64_t sub_100053348(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10000772C(a3);
  sub_1000551F4();
  sub_10005524C();
  v4();
  return a2;
}

void sub_1000533A0()
{
}

uint64_t sub_100053404(uint64_t a1, uint64_t *a2)
{
  sub_10000772C(a2);
  sub_1000551F4();
  sub_1000551DC();
  v3();
  return a1;
}

uint64_t _s27ActionParameterLocalizationVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s27ActionParameterLocalizationVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s27ActionParameterLocalizationVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s27ActionParameterLocalizationVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *_s27ActionParameterLocalizationVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s27ActionParameterLocalizationVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s27ActionParameterLocalizationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s27ActionParameterLocalizationVMa()
{
  return &_s27ActionParameterLocalizationVN;
}

uint64_t *sub_100053688(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[7];
    long long v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_10006E9E0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[8];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_10006E960();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[9];
    unint64_t v19 = (char *)v4 + v18;
    int64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_10006EBF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)v4 + v22) = *(uint64_t *)((char *)a2 + v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100053840(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_10006E9E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[8];
  uint64_t v7 = sub_10006E960();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[9];
  uint64_t v9 = sub_10006EBF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_100053960(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[7];
  uint64_t v9 = (char *)a1 + v8;
  long long v10 = (char *)a2 + v8;
  uint64_t v11 = sub_10006E9E0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_10006E960();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[9];
  uint64_t v18 = (char *)a1 + v17;
  unint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_10006EBF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  uint64_t v21 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100053AC8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10006E9E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[8];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_10006E960();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[9];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_10006EBF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_100053C54(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10006E9E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_10006E960();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[9];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_10006EBF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  return a1;
}

void *sub_100053D84(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_10006E9E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_10006E960();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[9];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_10006EBF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100053EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100053EF4);
}

uint64_t sub_100053EF4(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_10006E9E0();
    sub_1000114A8();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[7];
    }
    else
    {
      sub_10006E960();
      sub_1000114A8();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[8];
      }
      else
      {
        uint64_t v10 = sub_10006EBF0();
        uint64_t v11 = a3[9];
      }
    }
    return sub_100007800(a1 + v11, a2, v10);
  }
}

uint64_t sub_100053FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100053FD8);
}

uint64_t sub_100053FD8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_10006E9E0();
    sub_1000114A8();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[7];
    }
    else
    {
      sub_10006E960();
      sub_1000114A8();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[8];
      }
      else
      {
        uint64_t v10 = sub_10006EBF0();
        uint64_t v11 = a4[9];
      }
    }
    return sub_100007770(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1000540A4()
{
  uint64_t result = sub_10006E9E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_10006E960();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_10006EBF0();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ToolKitIndexer.ActionIndexingReport(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1000526B0(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for ToolKitIndexer.ActionIndexingReport(uint64_t a1)
{
  return sub_1000526CC(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for ToolKitIndexer.ActionIndexingReport(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1000526B0(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1000526CC(v5, v6);
  return a1;
}

uint64_t initializeWithTake for ToolKitIndexer.ActionIndexingReport(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for ToolKitIndexer.ActionIndexingReport(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1000526CC(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitIndexer.ActionIndexingReport(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ToolKitIndexer.ActionIndexingReport(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10005435C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_100054374(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ToolKitIndexer.ActionIndexingReport()
{
  return &type metadata for ToolKitIndexer.ActionIndexingReport;
}

uint64_t destroy for ToolKitIndexer.IncompatibleActionReason(uint64_t a1)
{
  return sub_10005263C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s24BackgroundShortcutRunner14ToolKitIndexerC24IncompatibleActionReasonOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  unsigned __int8 v5 = *((unsigned char *)a2 + 16);
  uint64_t v6 = sub_100056A90();
  sub_100052624(v6, v7, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ToolKitIndexer.IncompatibleActionReason(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_100052624(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_10005263C(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for ToolKitIndexer.IncompatibleActionReason(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ToolKitIndexer.IncompatibleActionReason(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_10005263C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitIndexer.IncompatibleActionReason(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ToolKitIndexer.IncompatibleActionReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100054530(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_100054548(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ToolKitIndexer.IncompatibleActionReason()
{
  return &type metadata for ToolKitIndexer.IncompatibleActionReason;
}

unint64_t sub_100054574()
{
  unint64_t result = qword_100082660;
  if (!qword_100082660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100082660);
  }
  return result;
}

void sub_100054630()
{
  STACK[0x200] = v0[107];
  STACK[0x208] = v0[103];
  STACK[0x210] = v0[100];
  STACK[0x218] = v0[97];
  STACK[0x228] = v0[95];
  STACK[0x230] = v0[94];
  STACK[0x238] = v0[91];
  STACK[0x240] = v0[90];
  STACK[0x248] = v0[89];
  uint64_t v2 = v0[87];
  *(void *)(v1 - 256) = v0[88];
  *(void *)(v1 - 248) = v2;
  uint64_t v3 = v0[83];
  *(void *)(v1 - 240) = v0[86];
  *(void *)(v1 - 232) = v3;
  *(void *)(v1 - 224) = v0[82];
  STACK[0x220] = v0[81];
}

void sub_100054838()
{
  STACK[0x200] = v0[100];
  STACK[0x208] = v0[97];
  STACK[0x210] = v0[95];
  STACK[0x218] = v0[94];
  STACK[0x220] = v0[91];
  STACK[0x228] = v0[90];
  STACK[0x230] = v0[89];
  STACK[0x238] = v0[88];
  uint64_t v2 = v0[86];
  *(void *)(v1 - 256) = v0[87];
  *(void *)(v1 - 248) = v2;
  uint64_t v3 = v0[82];
  *(void *)(v1 - 240) = v0[83];
  *(void *)(v1 - 232) = v3;
  *(void *)(v1 - 224) = v0[81];
}

void sub_100054A3C()
{
  uint64_t v2 = v0[97];
  *(void *)(v1 - 256) = v0[100];
  *(void *)(v1 - 248) = v2;
  uint64_t v3 = v0[94];
  *(void *)(v1 - 232) = v0[95];
  *(void *)(v1 - 224) = v3;
  uint64_t v4 = v0[90];
  *(void *)(v1 - 216) = v0[91];
  *(void *)(v1 - 208) = v4;
  uint64_t v5 = v0[88];
  *(void *)(v1 - 200) = v0[89];
  *(void *)(v1 - 192) = v5;
  uint64_t v6 = v0[86];
  *(void *)(v1 - 184) = v0[87];
  *(void *)(v1 - 176) = v6;
  uint64_t v7 = v0[82];
  *(void *)(v1 - 168) = v0[83];
  *(void *)(v1 - 160) = v7;
  *(void *)(v1 - 240) = v0[81];
}

uint64_t sub_100054C30()
{
  STACK[0x200] = v0[109];
  STACK[0x208] = v0[108];
  STACK[0x210] = v0[107];
  STACK[0x218] = v0[103];
  STACK[0x220] = v0[100];
  STACK[0x228] = v0[97];
  STACK[0x230] = v0[96];
  STACK[0x238] = v0[95];
  STACK[0x240] = v0[94];
  STACK[0x248] = v0[91];
  uint64_t v3 = v0[89];
  *(void *)(v1 - 256) = v0[90];
  *(void *)(v1 - 248) = v3;
  uint64_t v4 = v0[87];
  *(void *)(v1 - 240) = v0[88];
  *(void *)(v1 - 232) = v4;
  uint64_t v5 = v0[83];
  *(void *)(v1 - 216) = v0[86];
  *(void *)(v1 - 208) = v5;
  uint64_t v6 = v0[81];
  *(void *)(v1 - 200) = v0[82];
  *(void *)(v1 - 192) = v6;
  return swift_task_dealloc();
}

uint64_t sub_100054E04()
{
  STACK[0x200] = v0[108];
  STACK[0x208] = v0[107];
  STACK[0x210] = v0[103];
  STACK[0x218] = v0[100];
  STACK[0x220] = v0[97];
  STACK[0x228] = v0[96];
  STACK[0x230] = v0[95];
  STACK[0x238] = v0[94];
  uint64_t v3 = v0[90];
  *(void *)(v1 - 256) = v0[91];
  *(void *)(v1 - 248) = v3;
  uint64_t v4 = v0[88];
  *(void *)(v1 - 240) = v0[89];
  *(void *)(v1 - 232) = v4;
  uint64_t v5 = v0[86];
  *(void *)(v1 - 224) = v0[87];
  *(void *)(v1 - 216) = v5;
  uint64_t v6 = v0[82];
  *(void *)(v1 - 208) = v0[83];
  *(void *)(v1 - 200) = v6;
  *(void *)(v1 - 192) = v0[81];
  return swift_task_dealloc();
}

uint64_t sub_100054FD4()
{
  uint64_t v3 = v0[103];
  *(void *)(v1 - 256) = v0[107];
  *(void *)(v1 - 248) = v3;
  uint64_t v4 = v0[97];
  *(void *)(v1 - 240) = v0[100];
  *(void *)(v1 - 232) = v4;
  uint64_t v5 = v0[95];
  *(void *)(v1 - 224) = v0[96];
  *(void *)(v1 - 216) = v5;
  uint64_t v6 = v0[91];
  *(void *)(v1 - 208) = v0[94];
  *(void *)(v1 - 200) = v6;
  uint64_t v7 = v0[89];
  *(void *)(v1 - 192) = v0[90];
  *(void *)(v1 - 184) = v7;
  uint64_t v8 = v0[87];
  *(void *)(v1 - 176) = v0[88];
  *(void *)(v1 - 168) = v8;
  uint64_t v9 = v0[83];
  *(void *)(v1 - 152) = v0[86];
  *(void *)(v1 - 144) = v9;
  uint64_t v10 = v0[81];
  *(void *)(v1 - 136) = v0[82];
  *(void *)(v1 - 128) = v10;
  return swift_task_dealloc();
}

uint64_t sub_1000551B0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000551C0()
{
  return swift_task_alloc();
}

uint64_t sub_100055204()
{
  return swift_allocObject();
}

uint64_t sub_100055258()
{
  return swift_allocObject();
}

uint64_t sub_100055288()
{
  return v0;
}

uint64_t sub_10005529C(unint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_1000474C4(a1, a2, a3);
}

uint64_t sub_1000552CC()
{
  return swift_task_dealloc();
}

unsigned char *sub_100055364()
{
  uint64_t v2 = *(unsigned char **)(v1 + 1128);
  uint64_t v3 = &v2[*(int *)(STACK[0x228] + 48)];
  *uint64_t v2 = v0;
  return v3;
}

unsigned char *sub_100055394()
{
  uint64_t v2 = *(unsigned char **)(v1 + 1128);
  uint64_t v3 = &v2[*(int *)(STACK[0x240] + 48)];
  *uint64_t v2 = v0;
  return v3;
}

uint64_t sub_1000553EC()
{
  return sub_10006F150();
}

void sub_100055420()
{
  uint64_t v2 = v0[110];
  *(void *)(v1 - 256) = v0[111];
  *(void *)(v1 - 248) = v2;
  uint64_t v3 = v0[108];
  *(void *)(v1 - 240) = v0[109];
  *(void *)(v1 - 232) = v3;
  uint64_t v4 = v0[103];
  *(void *)(v1 - 224) = v0[107];
  *(void *)(v1 - 216) = v4;
  uint64_t v5 = v0[97];
  *(void *)(v1 - 208) = v0[100];
  *(void *)(v1 - 200) = v5;
  uint64_t v6 = v0[95];
  *(void *)(v1 - 192) = v0[96];
  *(void *)(v1 - 184) = v6;
  uint64_t v7 = v0[91];
  *(void *)(v1 - 176) = v0[94];
  *(void *)(v1 - 168) = v7;
  uint64_t v8 = v0[89];
  *(void *)(v1 - 160) = v0[90];
  *(void *)(v1 - 152) = v8;
  uint64_t v9 = v0[87];
  *(void *)(v1 - 144) = v0[88];
  *(void *)(v1 - 136) = v9;
}

id sub_10005548C()
{
  uint64_t v4 = v0[254];
  *(void *)(v2 - 240) = v0[234];
  *(void *)(v2 - 232) = v0[209];
  *(void *)(v2 - 224) = v4;
  STACK[0x240] = v0[194];
  STACK[0x248] = v0[162];
  *(void *)(v2 - 256) = v0[157];
  STACK[0x230] = v0[96];
  *(void *)(v2 - 248) = v0[77];
  STACK[0x238] = v0[74];
  uint64_t v5 = (void *)v0[72];
  v0[60] = v0[73];
  uint64_t v6 = *(const char **)(v1 + 528);
  return [v5 v6];
}

uint64_t sub_100055504(unint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = *(void *)(v3 - 232);
  return sub_1000474C4(a1, v5, a3);
}

uint64_t sub_100055530()
{
  return swift_slowAlloc();
}

uint64_t sub_100055554()
{
  return sub_10006F780();
}

uint64_t sub_10005558C()
{
  return swift_task_alloc();
}

id sub_1000555A4()
{
  *(void *)(v2 - 216) = v1[254];
  uint64_t v4 = v1[209];
  *(void *)(v2 - 240) = v1[234];
  *(void *)(v2 - 232) = v4;
  STACK[0x230] = v1[194];
  STACK[0x238] = v1[162];
  uint64_t v5 = v1[77];
  *(void *)(v2 - 256) = v1[157];
  *(void *)(v2 - 248) = v5;
  STACK[0x228] = v1[74];
  uint64_t v6 = (void *)v1[72];
  v1[60] = v1[73];
  uint64_t v7 = *(const char **)(v0 + 528);
  return [v6 v7];
}

uint64_t sub_100055614(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v2;
  *(unsigned char *)(a1 + 48) = v4 & 1;
  unint64_t v8 = STACK[0x230];
  *(void *)(a1 + 56) = STACK[0x240];
  *(void *)(a1 + 64) = v8;
  unint64_t v9 = STACK[0x248];
  *(void *)(a1 + 72) = STACK[0x218];
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = *(void *)(v6 - 256);
  *(void *)(a1 + 88) = *(void *)(v6 - 192);
  *(void *)(a1 + 96) = v10;
  unint64_t v11 = STACK[0x238];
  *(void *)(a1 + 104) = *(void *)(v6 - 240);
  *(void *)(a1 + 112) = v11;
  uint64_t v12 = *(void *)(v6 - 200);
  *(void *)(a1 + 120) = *(void *)(v6 - 248);
  *(void *)(a1 + 128) = v12;
  uint64_t v13 = *(void *)(v6 - 232);
  *(void *)(a1 + 136) = *(void *)(v6 - 216);
  *(void *)(a1 + 144) = v13;
  return sub_10006E5C0();
}

uint64_t sub_100055684()
{
  return *(void *)(v0 + 976);
}

uint64_t sub_1000556B8()
{
  return swift_slowAlloc();
}

uint64_t sub_1000556DC(uint64_t a1)
{
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v2;
  *(unsigned char *)(a1 + 48) = v6 & 1;
  *(void *)(a1 + 56) = STACK[0x230];
  *(void *)(a1 + 64) = v3;
  unint64_t v9 = STACK[0x238];
  *(void *)(a1 + 72) = STACK[0x208];
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = *(void *)(v7 - 256);
  *(void *)(a1 + 88) = *(void *)(v7 - 192);
  *(void *)(a1 + 96) = v10;
  unint64_t v11 = STACK[0x228];
  *(void *)(a1 + 104) = *(void *)(v7 - 240);
  *(void *)(a1 + 112) = v11;
  uint64_t v12 = *(void *)(v7 - 200);
  *(void *)(a1 + 120) = *(void *)(v7 - 248);
  *(void *)(a1 + 128) = v12;
  uint64_t v13 = *(void *)(v7 - 232);
  *(void *)(a1 + 136) = *(void *)(v7 - 224);
  *(void *)(a1 + 144) = v13;
  return sub_10006E5C0();
}

uint64_t sub_100055764()
{
  return swift_task_dealloc();
}

uint64_t sub_1000557CC(uint64_t result)
{
  *(unsigned char *)STACK[0x218] = (result & 1) == 0;
  return result;
}

uint64_t sub_1000557F0()
{
  *(void *)(v1 - 192) = v0[233];
  uint64_t v2 = v0[209];
  *(void *)(v1 - 216) = v0[208];
  *(void *)(v1 - 208) = v2;
  return v0[204];
}

uint64_t sub_100055814()
{
  uint64_t v3 = v0[8];
  *(void *)(v1 - 112) = v0[9];
  *(void *)(v1 - 104) = v3;
  uint64_t v4 = v0[6];
  *(void *)(v1 - 96) = v0[7];
  *(void *)(v1 - 88) = v4;
  return swift_task_dealloc();
}

uint64_t sub_100055874()
{
  return swift_task_dealloc();
}

uint64_t sub_1000558F0(uint64_t a1)
{
  sub_100007770(v1, 1, 1, a1);
  sub_100007770(v3, 1, 1, a1);
  sub_100007770(v2, 1, 1, a1);
  return sub_10006EF00();
}

uint64_t sub_100055968()
{
  uint64_t v2 = *(void **)(v0 - 184);
  STACK[0x200] = (unint64_t)(v2 + 42);
  STACK[0x220] = (unint64_t)(v2 + 68);
  STACK[0x218] = v2[151];
  STACK[0x210] = v2[143];
  STACK[0x248] = v2[138];
  STACK[0x230] = v2[136];
  STACK[0x240] = v2[135];
  return sub_10000E6E0();
}

uint64_t sub_1000559C8()
{
  return sub_10006F6D0();
}

uint64_t sub_1000559E8(uint64_t result)
{
  *uint64_t v1 = (result & 1) == 0;
  return result;
}

uint64_t sub_100055A08(uint64_t a1)
{
  sub_100007770(v1, 1, 1, a1);
  sub_100007770(v3, 1, 1, a1);
  sub_100007770(v2, 1, 1, a1);
  return sub_10006EF00();
}

uint64_t sub_100055A7C(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_100055A88(uint64_t a1)
{
  sub_100007770(v2, 1, 1, a1);
  sub_100007770(v1, 1, 1, a1);
  sub_100007770(v3, 1, 1, a1);
  return sub_10006EF00();
}

uint64_t sub_100055AFC()
{
  return v0 + 8;
}

uint64_t sub_100055B0C@<X0>(int a1@<W8>)
{
  *(_DWORD *)(v4 - 216) = a1;
  *(void *)(v4 - 256) = v1 + 8;
  *(void *)(v4 - 224) = v1;
  STACK[0x248] = v1 + 96;
  STACK[0x240] = v2 + 32;
  STACK[0x210] = v3 + 32;
  STACK[0x200] = v3;
  STACK[0x208] = v3 + 8;
  STACK[0x230] = v2 + 8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100055B7C()
{
  uint64_t v2 = *(void **)(v0 - 184);
  STACK[0x210] = (unint64_t)(v2 + 68);
  STACK[0x230] = v2[138];
  STACK[0x208] = v2[136];
  STACK[0x228] = v2[135];
  return sub_10000E6E0();
}

uint64_t sub_100055BD4()
{
  *(void *)(v2 - 136) = v1[117];
  *(void *)(v2 - 128) = v0;
  uint64_t v3 = v1[104];
  *(void *)(v2 - 152) = v1[75];
  return v3;
}

uint64_t sub_100055C28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  return sub_1000468F4(v3, v1);
}

uint64_t sub_100055C5C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100055CAC(uint64_t a1)
{
  return sub_100007800(a1, 1, v1);
}

uint64_t sub_100055CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100007770(a1, 1, 1, a4);
}

uint64_t sub_100055CE4()
{
  return swift_beginAccess();
}

uint64_t sub_100055CFC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100055D1C()
{
  sub_100007800(v0, 1, v2);
  return *(void *)(v1 + 656);
}

uint64_t sub_100055D54()
{
  sub_100007800(v0, 1, v1);
  return *(void *)(v2 + 648);
}

uint64_t sub_100055D8C()
{
  return sub_10006E100();
}

void sub_100055DA8()
{
}

void sub_100055DC4()
{
}

uint64_t sub_100055DE0()
{
  return sub_10006F780();
}

BOOL sub_100055DFC(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_100055E18(uint64_t a1)
{
  uint64_t result = *(void *)(v1 + 872);
  *(void *)(v1 + 512) = a1;
  return result;
}

uint64_t sub_100055E3C()
{
  return *(void *)(v0 + 1632);
}

uint64_t sub_100055E4C()
{
  return sub_1000521D8();
}

uint64_t sub_100055E70()
{
  return swift_allocObject();
}

uint64_t sub_100055EA4(uint64_t result)
{
  *(_DWORD *)(v3 - 256) = result;
  *(void *)(v3 - 216) = v1 + 32;
  STACK[0x230] = v1;
  *(void *)(v3 - 192) = v1 + 8;
  STACK[0x200] = v2 + 1184;
  STACK[0x210] = v2 + 1200;
  return result;
}

uint64_t sub_100055EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100007800(a1, a2, a3);
}

void sub_100055EF8()
{
  *(void *)(v4 - 232) = v2 + 56;
  *(void *)(v4 - 256) = v1 + 32;
  *(void *)(v4 - 248) = v1 + 16;
  LODWORD(STACK[0x238]) = *v3;
  *(void *)(v4 - 224) = v0 + 104;
  *(void *)(v4 - 240) = v1;
  STACK[0x230] = v1 + 8;
}

uint64_t sub_100055F34()
{
  return sub_1000521D8();
}

uint64_t sub_100055F4C@<X0>(int a1@<W8>)
{
  *(_DWORD *)(v4 - 200) = a1;
  *(void *)(v4 - 248) = v3 + 96;
  *(void *)(v4 - 240) = v3 + 8;
  *(void *)(v4 - 256) = v1 + 32;
  STACK[0x200] = v2 + 32;
  STACK[0x220] = v1 + 8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100055F94()
{
  return *(void *)(*(void *)(v0 - 120) + 872);
}

uint64_t sub_100055FCC()
{
  uint64_t v3 = *(void *)(*(void *)(v0 + 400) + 16);
  return sub_1000468F4(v3, v1);
}

uint64_t sub_100055FEC()
{
  return *(void *)(v0 + 576);
}

uint64_t sub_100056004()
{
  return v0;
}

BOOL sub_10005603C(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_100056058()
{
  return *(void *)(v0 + 1320);
}

uint64_t sub_10005606C()
{
  return v0;
}

uint64_t sub_100056084()
{
  return v0;
}

uint64_t sub_10005609C()
{
  return *(void *)(v0 + 1232);
}

uint64_t sub_1000560D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  return sub_1000468F4(v3, v1);
}

uint64_t sub_1000560FC()
{
  return swift_dynamicCast();
}

uint64_t sub_100056118()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100056138()
{
  return v0;
}

uint64_t sub_100056150()
{
  return v0;
}

uint64_t sub_100056168()
{
  return *(void *)(v0 + 656);
}

uint64_t sub_10005617C()
{
  return sub_10006F010();
}

uint64_t sub_1000561A0()
{
  return sub_10006E8D0();
}

uint64_t sub_1000561CC()
{
  return sub_10006F010();
}

uint64_t sub_1000561F0()
{
  return sub_10006F010();
}

uint64_t sub_100056214()
{
  return sub_10006F010();
}

uint64_t sub_100056238()
{
  return v0;
}

uint64_t sub_100056248()
{
  return sub_10006F010();
}

uint64_t sub_10005626C(uint64_t result)
{
  *(_DWORD *)(v2 - 256) = result;
  *(void *)(v2 - 224) = v1 + 32;
  STACK[0x218] = v1;
  return result;
}

uint64_t sub_1000562AC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_100052624(*(void *)(*(void *)(a12 + 48) + 24 * a1), *(void *)(*(void *)(a12 + 48) + 24 * a1 + 8), *(unsigned char *)(*(void *)(a12 + 48) + 24 * a1 + 16));
  return sub_10006E280();
}

uint64_t sub_100056304()
{
  return v0;
}

uint64_t sub_100056310()
{
  return *(void *)(*(void *)(v0 - 184) + 1440);
}

void sub_100056344()
{
  *(void *)(v2 - 208) = *(void *)(*(void *)(v2 - 184) + 1512);
  *(void *)(v2 - 192) = v0;
  *(_DWORD *)(v2 - 200) = v1;
}

uint64_t sub_100056378()
{
  return sub_100042D34(v0, v1);
}

uint64_t sub_100056390()
{
  return *(void *)(v0 + 1440);
}

uint64_t sub_1000563C0()
{
  return *(void *)(v0 + 1320);
}

uint64_t sub_100056408()
{
  return *(void *)(v0 + 16 * v1);
}

uint64_t sub_100056418()
{
  return v0;
}

uint64_t sub_100056428()
{
  return *(void *)(v0 + 736);
}

uint64_t sub_1000564A8()
{
  return sub_10006F780();
}

uint64_t sub_1000564FC()
{
  *(void *)(v2 - 208) = v1;
  STACK[0x218] = *(void *)(v0 + 1136);
  return sub_10006E3E0();
}

uint64_t sub_100056534()
{
  return *(void *)(v0 + 728);
}

uint64_t sub_100056598()
{
  return *(void *)(v0 + 1256);
}

uint64_t sub_1000565AC()
{
  return sub_10006DF70();
}

void sub_1000565CC()
{
  *(void *)(v1 + 8 * (v0 >> 6) + 64) |= 1 << v0;
}

uint64_t sub_1000565F8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100056610()
{
  return v0;
}

uint64_t sub_10005661C()
{
  return sub_10006F520();
}

uint64_t sub_10005663C()
{
  return sub_10006F510();
}

uint64_t sub_10005665C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 432) = a1;
  return swift_dynamicCastObjCProtocolConditional();
}

uint64_t sub_100056678()
{
  return swift_slowAlloc();
}

uint64_t sub_100056690()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000566F8()
{
  return type metadata accessor for WFDeviceCapabilityResource(0);
}

uint64_t sub_100056714()
{
  return sub_10006E490();
}

id sub_100056758()
{
  uint64_t v3 = *(void **)(*(void *)(v1 - 200) + 8 * v0 + 32);
  return v3;
}

id sub_100056774()
{
  uint64_t v3 = *(void **)(*(void *)(v1 - 200) + 8 * v0 + 32);
  return v3;
}

void sub_100056790(uint64_t a1@<X8>)
{
  *(void *)(v2 - 176) = a1;
  *(void *)(v2 - 168) = (v1 - 32) | 0x8000000000000000;
}

BOOL sub_100056824@<W0>(os_log_type_t a1@<W8>)
{
  uint64_t v3 = *(NSObject **)(v1 - 192);
  return os_log_type_enabled(v3, a1);
}

uint64_t sub_10005684C()
{
  uint64_t v3 = v0[86];
  *(void *)(v1 - 152) = v0[87];
  *(void *)(v1 - 144) = v3;
  uint64_t v4 = v0[82];
  *(void *)(v1 - 136) = v0[83];
  *(void *)(v1 - 128) = v4;
  uint64_t v5 = v0[78];
  *(void *)(v1 - 120) = v0[81];
  *(void *)(v1 - 112) = v5;
  return swift_task_dealloc();
}

uint64_t sub_100056890(unint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_1000474C4(a1, a2, a3);
}

uint64_t sub_1000568BC()
{
  return v0;
}

uint64_t sub_1000568EC()
{
  return swift_allocObject();
}

uint64_t sub_100056904()
{
  return swift_task_dealloc();
}

uint64_t sub_100056920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 136) = v2;
  *(void *)(a1 + 144) = a2;
  return sub_10006E5C0();
}

uint64_t sub_100056938()
{
  return swift_dynamicCastObjCClass();
}

uint64_t sub_100056950(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 120);
  uint64_t result = *(void *)(v3 + 872);
  *(void *)(v3 + 512) = a1;
  return result;
}

void sub_100056978()
{
  uint64_t v4 = v2[162];
  *(void *)(v3 - 184) = v0;
  *(void *)(v3 - 176) = v4;
  *(void *)(v3 - 168) = v2[157];
  *(void *)(v3 - 160) = v2[77];
  *(void *)(v3 - 152) = v1;
}

void sub_1000569C8()
{
  *(void *)(v0 - 104) = 0;
  *(void *)(v0 - 96) = 0xE000000000000000;
  sub_10006F600(22);
}

uint64_t sub_1000569EC(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return sub_10006DF50();
}

uint64_t sub_100056A08()
{
  uint64_t v2 = *(void *)(v0 - 184);
  STACK[0x220] = v2 + 448;
  STACK[0x230] = *(void *)(v2 + 936);
  uint64_t v3 = *(void *)(v0 - 208);
  return sub_100068F08(v3);
}

uint64_t sub_100056A3C()
{
  uint64_t v2 = *(void *)(v0 - 200);
  return sub_10006A5F4(v2);
}

uint64_t sub_100056A58()
{
  return sub_100068F08(v0);
}

BOOL sub_100056A74(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_100056A90()
{
  return v0;
}

uint64_t sub_100056A9C()
{
  uint64_t v2 = *(void *)(v0 - 120);
  *(void *)(v0 - 232) = v2 + 448;
  *(void *)(v0 - 216) = *(void *)(v2 + 936);
  uint64_t v3 = *(void *)(v0 - 144);
  return sub_100068F08(v3);
}

uint64_t sub_100056AD0()
{
  STACK[0x218] = v0 + 448;
  STACK[0x228] = *(void *)(v0 + 936);
  uint64_t v3 = *(void *)(v1 - 200);
  return sub_100068F08(v3);
}

uint64_t sub_100056B00(uint64_t result)
{
  *(_DWORD *)(v3 - 224) = result;
  STACK[0x240] = v1 + 16;
  STACK[0x228] = v1;
  *(void *)(v3 - 240) = v2 + 16;
  *(void *)(v3 - 232) = v1 + 32;
  return result;
}

uint64_t sub_100056B24(uint64_t result)
{
  *(_DWORD *)(v3 - 224) = result;
  *(void *)(v3 - 232) = v1 + 16;
  STACK[0x220] = v1;
  *(void *)(v3 - 248) = v2 + 16;
  *(void *)(v3 - 240) = v1 + 32;
  return result;
}

void sub_100056B48(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, v6, 2u);
}

uint64_t sub_100056B6C(uint64_t result)
{
  *(unsigned char *)(result + 16) = 32;
  return result;
}

uint64_t sub_100056B78(uint64_t result)
{
  LODWORD(STACK[0x220]) = result;
  STACK[0x200] = v1 + 32;
  STACK[0x208] = v2 + 8;
  STACK[0x210] = v1;
  return result;
}

uint64_t sub_100056B9C()
{
  return sub_10006E490();
}

uint64_t sub_100056BCC()
{
  return *(void *)(v0 + 720);
}

uint64_t sub_100056BF0()
{
  *(void *)(v0 + 1856) = 0;
  return swift_bridgeObjectRelease();
}

void sub_100056C20(void *a1@<X8>)
{
}

uint64_t sub_100056C78(unint64_t a1)
{
  STACK[0x220] = a1;
  *(void *)(v3 - 176) = a1;
  *(_WORD *)uint64_t v2 = 514;
  LODWORD(STACK[0x218]) = v1;
  *(unsigned char *)(v2 + 2) = 32;
  return swift_release();
}

uint64_t sub_100056CB4()
{
  STACK[0x208] = v0 + 416;
  STACK[0x220] = *(void *)(v0 + 1160);
  STACK[0x228] = *(void *)(v0 + 1112);
  uint64_t v3 = *(void *)(v1 - 240);
  return sub_100068F08(v3);
}

uint64_t sub_100056CE4()
{
  STACK[0x220] = v0 + 416;
  STACK[0x238] = *(void *)(v0 + 1160);
  STACK[0x240] = *(void *)(v0 + 1112);
  uint64_t v3 = *(void *)(v1 - 240);
  return sub_100068F08(v3);
}

void *sub_100056D14(void *result)
{
  uint64_t v3 = *(void *)(v2 - 168);
  result[11] = v1;
  result[12] = v3;
  uint64_t v4 = *(void *)(v2 - 192);
  result[13] = *(void *)(v2 - 152);
  result[14] = v4;
  uint64_t v5 = *(void *)(v2 - 104);
  result[15] = *(void *)(v2 - 160);
  result[16] = v5;
  return result;
}

void sub_100056D44()
{
  STACK[0x240] = v0 + 392;
  STACK[0x248] = v0 + 424;
  STACK[0x238] = v0 + 440;
}

void sub_100056D68(int a1@<W8>)
{
  *(_DWORD *)(v3 - 136) = a1;
  *(void *)(v3 - 160) = v2;
  *(void *)(v3 - 200) = v2 + 96;
  *(void *)(v3 - 192) = v2 + 8;
  *(void *)(v3 - 208) = v1 + 32;
}

uint64_t sub_100056D8C(_WORD *a1)
{
  *a1 = 0;
  return sub_10006E2C0();
}

uint64_t sub_100056DA4(uint64_t result)
{
  *(_DWORD *)(v3 - 160) = result;
  *(void *)(v3 - 224) = v1;
  *(void *)(v3 - 176) = v1 + 32;
  *(void *)(v3 - 168) = v1 + 16;
  *(void *)(v3 - 184) = v2 + 16;
  return result;
}

uint64_t sub_100056DC8(uint64_t a1, uint64_t a2)
{
  sub_100007770(a1, a2, 1, v2);
  return swift_bridgeObjectRelease();
}

id sub_100056DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a2 + 8 * v2 + 32);
  return v4;
}

uint64_t sub_100056E28()
{
  return sub_10006F540();
}

uint64_t sub_100056E58()
{
  *(void *)(v2 - 224) = v0 + 512;
  *(void *)(v2 - 152) = *(void *)(v0 + 848);
  return sub_100068F08(v1);
}

uint64_t sub_100056E88()
{
  STACK[0x218] = v1 + 512;
  *(void *)(v2 - 224) = *(void *)(v1 + 848);
  return sub_100068F08(v0);
}

void sub_100056EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100007770(v4, 1, 1, a4);
}

uint64_t sub_100056EE8()
{
  sub_100007800(v1, 1, v0);
  return *(void *)(v2 + 656);
}

uint64_t sub_100056F24()
{
  sub_100007800(v2, 1, v1);
  return *(void *)(v0 + 648);
}

uint64_t sub_100056F84()
{
  STACK[0x210] = v0;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_100056FA0()
{
  return sub_10004D554(v1, v0);
}

uint64_t sub_100056FBC()
{
  return sub_10004D554(v0, v1);
}

uint64_t sub_100056FE4()
{
  return *(void *)(v1 + 16 * v0);
}

uint64_t sub_100056FF4()
{
  return sub_10006E4F0();
}

void sub_100057020()
{
}

uint64_t sub_10005703C()
{
  return swift_slowAlloc();
}

uint64_t sub_100057054()
{
  return sub_10006F180();
}

uint64_t sub_10005709C()
{
  STACK[0x228] = v1 + 552;
  *(_DWORD *)(v2 - 224) = v0;
  STACK[0x230] = v1 + 568;
  return sub_10000E6E0();
}

uint64_t sub_1000570C8(unint64_t a1)
{
  STACK[0x228] = a1;
  *(void *)(v2 - 176) = a1;
  *(_WORD *)uint64_t v1 = 514;
  *(unsigned char *)(v1 + 2) = 32;
  return swift_release();
}

uint64_t sub_100057154()
{
  return sub_10006F780();
}

uint64_t sub_100057190(uint64_t a1)
{
  *(void *)(v1 - 152) = a1;
  return v1 - 152;
}

uint64_t sub_1000571A4()
{
  return v0;
}

void sub_1000571B0()
{
  *(_WORD *)uint64_t v0 = 514;
  *(unsigned char *)(v0 + 2) = 64;
}

uint64_t sub_1000571C4()
{
  return *(void *)(v0 + 232);
}

uint64_t sub_1000571E4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100057200()
{
  return v0;
}

uint64_t sub_10005720C()
{
  *(void *)(v1 - 200) = v0;
  return sub_10006E5D0();
}

uint64_t sub_100057238()
{
  return sub_10006E400();
}

uint64_t sub_100057254(uint64_t result)
{
  *uint64_t v1 = (result & 1) == 0;
  return result;
}

uint64_t sub_100057288()
{
  STACK[0x218] = *(void *)(v0 + 1120);
  return sub_10006E3D0();
}

uint64_t sub_1000572B4()
{
  return sub_100007770(*(void *)(v1 + 168), v0, 1, *(void *)(v1 + 32));
}

uint64_t sub_1000572EC()
{
  return v0;
}

uint64_t sub_100057300(uint64_t a1, uint64_t *a2)
{
  return sub_100053404(v2, a2);
}

uint64_t sub_100057324()
{
  *(void *)(v1 + 1856) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100057370()
{
  return sub_10006F520();
}

uint64_t sub_1000573B8()
{
  uint64_t v2 = *(void *)(*(void *)(v0 - 120) + 960);
  return sub_10004310C(v2);
}

uint64_t sub_1000573E4()
{
  return swift_slowAlloc();
}

uint64_t sub_100057400()
{
  uint64_t v2 = *(void *)(*(void *)(v0 - 184) + 960);
  return sub_10004310C(v2);
}

uint64_t sub_10005742C()
{
  uint64_t v2 = *(void *)(*(void *)(v0 - 184) + 960);
  return sub_10004310C(v2);
}

uint64_t sub_10005746C()
{
  *(void *)(v1 - 200) = v0;
  return sub_10006E5D0();
}

uint64_t sub_1000574AC()
{
  return sub_10006F0F0();
}

void sub_1000574C4()
{
  type metadata accessor for WFExecutionPlatform(0);
}

uint64_t sub_1000574DC()
{
  return sub_10006F1C0();
}

uint64_t sub_1000574F8()
{
  *(void *)(v1 - 216) = *(void *)(v0 + 1072);
  uint64_t v3 = *(void *)(v1 - 200);
  return sub_10006A5F4(v3);
}

uint64_t sub_100057524()
{
  return sub_10006F540();
}

uint64_t sub_100057550(uint64_t a1)
{
  *(void *)(v2 - 256) = a1;
  *(void *)(v2 - 248) = v1;
  return sub_10006F1C0();
}

uint64_t sub_100057570()
{
  return sub_10006F780();
}

uint64_t sub_10005759C(uint64_t a1)
{
  *(void *)(v1 - 224) = a1;
  return sub_10006F1E0();
}

uint64_t sub_1000575BC()
{
  return sub_10006DFC0();
}

uint64_t sub_1000575E8()
{
  return sub_10006DFC0();
}

void sub_100057614(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

void sub_100057634(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t sub_100057654()
{
  return sub_10001028C(0, v0);
}

uint64_t sub_100057670()
{
  return sub_1000521D8();
}

uint64_t sub_100057688()
{
  return sub_10006DFC0();
}

uint64_t sub_1000576B4()
{
  return sub_10006F180();
}

uint64_t sub_1000576CC()
{
  return sub_1000469EC();
}

uint64_t sub_100057704()
{
  sub_1000526CC(v0, 0);
  return sub_1000526CC(v0, 0);
}

uint64_t sub_100057738()
{
  return v0;
}

uint64_t sub_100057758()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_100057770()
{
  return v0;
}

uint64_t sub_100057780()
{
  return v0;
}

uint64_t sub_100057794()
{
  sub_100007800(v2, 1, v0);
  return *(void *)(v1 + 648);
}

uint64_t sub_1000577CC()
{
  sub_100007800(v2, 1, v0);
  return *(void *)(v1 + 656);
}

uint64_t sub_100057804()
{
  return v0;
}

uint64_t sub_100057810()
{
  return *(void *)(v0 + 720);
}

uint64_t sub_100057830()
{
  return *(void *)(v0 + 720);
}

uint64_t sub_100057840()
{
  return v0;
}

uint64_t sub_100057854()
{
  return *(void *)(v0 + 1576);
}

uint64_t sub_100057870()
{
  return sub_100068F08(v0);
}

uint64_t sub_100057898()
{
  *(void *)(v2 + 2032) = v1;
  return sub_10006A5EC(v0);
}

uint64_t sub_1000578B0()
{
  return *(void *)(v0 + 832);
}

uint64_t sub_1000578CC()
{
  return swift_release();
}

uint64_t sub_1000578F4()
{
  return swift_release();
}

uint64_t sub_10005791C()
{
  return v0;
}

uint64_t sub_100057938()
{
  return sub_10006E4F0();
}

uint64_t sub_100057960()
{
  return sub_10006E4F0();
}

unint64_t sub_100057988(unint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 - 184);
  STACK[0x208] = result;
  *(void *)(v3 + 1864) = result;
  *(void *)(*(void *)(v2 - 184) + 1872) = a2;
  return result;
}

uint64_t sub_1000579A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000579D8()
{
  sub_10005263C(v1, v0, v2);
  return sub_10005263C(v1, v0, v2);
}

void sub_100057A0C()
{
  sub_10005263C(v2, v1, v3);
  sub_10005263C(v2, v1, v3);
}

uint64_t sub_100057A4C()
{
  return *(void *)(v0 + 72);
}

__n128 sub_100057A68()
{
  return *(__n128 *)(v0 + 72);
}

uint64_t sub_100057A84()
{
  return 0;
}

uint64_t sub_100057AA0()
{
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 184);
  return sub_100053348(v3, v4, v1);
}

uint64_t sub_100057AC8()
{
  return sub_10006E3D0();
}

uint64_t sub_100057AF0()
{
  return sub_10006E3E0();
}

id sub_100057B24()
{
  uint64_t v3 = *(void **)(v0 + 8 * v1 + 32);
  return v3;
}

void sub_100057B3C(uint64_t a1@<X8>)
{
  *(void *)(v4 - 232) = (a1 - 32) | 0x8000000000000000;
  STACK[0x238] = v1;
  STACK[0x230] = v2;
  LODWORD(STACK[0x228]) = v3;
}

void sub_100057B58(uint64_t a1@<X8>)
{
  *(void *)(v4 - 232) = (a1 - 32) | 0x8000000000000000;
  *(void *)(v4 - 248) = v3;
  STACK[0x220] = v1;
  *(_DWORD *)(v4 - 240) = v2;
}

uint64_t sub_100057B90()
{
  return swift_slowAlloc();
}

uint64_t sub_100057BA8()
{
  *(void *)(v2 - 232) = v1;
  return *(void *)(v0 + 576);
}

uint64_t sub_100057BC4()
{
  return swift_release();
}

uint64_t sub_100057BF8()
{
  return *(void *)(v0 + 720);
}

uint64_t sub_100057C14()
{
  return sub_10006F1C0();
}

uint64_t sub_100057C38()
{
  return sub_10006E110();
}

uint64_t sub_100057C88()
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(v1 - 184) + 400) + 16);
  return sub_1000468F4(v3, v0);
}

uint64_t sub_100057CB0()
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(v1 - 184) + 440) + 16);
  return sub_1000468F4(v3, v0);
}

uint64_t sub_100057CD8()
{
  return sub_100007800(v0, 1, v1);
}

uint64_t sub_100057D0C()
{
  return v0;
}

uint64_t sub_100057D28()
{
  return v0;
}

uint64_t sub_100057D34()
{
  return sub_1000469EC();
}

uint64_t sub_100057D58(float *a1, float a2)
{
  *a1 = a2;
  *uint64_t v2 = v3;
  return sub_10006F4D0();
}

void sub_100057D80()
{
  *(void *)(*(void *)(v0 - 120) + 480) = *(void *)(*(void *)(v0 - 120) + 584);
}

uint64_t sub_100057D9C()
{
  return swift_arrayDestroy();
}

uint64_t sub_100057DB4()
{
  return v0;
}

void sub_100057DC0(int a1@<W8>)
{
  *(_DWORD *)(v3 - 256) = a1;
  STACK[0x238] = v1 + 104;
  STACK[0x230] = v2 + 8;
}

void sub_100057DE4(int a1@<W8>)
{
  LODWORD(STACK[0x208]) = a1;
  *(void *)(v2 - 256) = v1 + 32;
  STACK[0x248] = v1 + 16;
}

void sub_100057DFC(int a1@<W8>)
{
  LODWORD(STACK[0x240]) = a1;
  STACK[0x230] = v1 + 8;
  *(void *)(v2 - 224) = v1 + 96;
}

id sub_100057E14()
{
  uint64_t v3 = *(void **)(v0 + 8 * v1 + 32);
  return v3;
}

uint64_t sub_100057E2C()
{
  return v0;
}

uint64_t sub_100057E44()
{
  return sub_10006F010();
}

uint64_t sub_100057E60()
{
  return sub_10006DF40();
}

uint64_t sub_100057E84()
{
  return sub_10006DF40();
}

void sub_100057EC0(int a1@<W8>)
{
  *(_DWORD *)(v3 - 248) = a1;
  *(void *)(v3 - 256) = v1 + 104;
  STACK[0x248] = v2 + 8;
}

void sub_100057ED8()
{
  STACK[0x238] = v0 + 32;
  STACK[0x230] = v0 + 16;
}

void sub_100057EF0(int a1@<W8>)
{
  LODWORD(STACK[0x228]) = a1;
  STACK[0x220] = v1 + 8;
  *(void *)(v2 - 240) = v1 + 96;
}

void sub_100057F08(int a1@<W8>)
{
  *(_DWORD *)(v2 - 232) = a1;
  *(void *)(v2 - 240) = v1 + 104;
}

uint64_t sub_100057F30()
{
  return sub_10006EFF0();
}

void sub_100057F54(int a1@<W8>)
{
  *(_DWORD *)(v2 - 216) = a1;
  *(void *)(v2 - 224) = v1 + 8;
  *(void *)(v2 - 160) = v1 + 96;
}

uint64_t sub_100057FB8()
{
  *(void *)(v2 - 192) = v1;
  return *(void *)(v0 + 576);
}

void sub_100057FC4()
{
  sub_10002785C();
}

void sub_100057FE8()
{
  uint64_t v3 = v1[74];
  *(void *)(v2 - 200) = v0;
  *(void *)(v2 - 192) = v3;
  v1[60] = v1[73];
}

uint64_t sub_100058030()
{
  return sub_10006F6C0();
}

void sub_100058054()
{
  sub_10006760C();
}

uint64_t sub_100058070()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100058094@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  return sub_1000468F4(v3, v1);
}

uint64_t sub_1000580C8(uint64_t a1)
{
  *(void *)(v1 + 544) = a1;
  return sub_10006F4D0();
}

uint64_t sub_1000580EC(uint64_t a1)
{
  *(void *)(v1 + 528) = a1;
  return sub_10006F4D0();
}

uint64_t sub_100058110()
{
  return v0;
}

uint64_t sub_100058128()
{
  return v0;
}

uint64_t sub_100058158()
{
  return sub_10006EFF0();
}

uint64_t sub_10005817C()
{
  *(void *)(v1 - 200) = v0;
  return sub_100066FFC(v0);
}

uint64_t sub_100058194()
{
  return sub_10006F090();
}

void sub_1000581B0()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  sub_1000676D0(0, v2, 1, v0);
}

uint64_t sub_1000581D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100052654(a9);
  return swift_task_dealloc();
}

uint64_t sub_100058214@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100058238@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005825C()
{
  return sub_10004D554(v1, v0);
}

uint64_t sub_100058290()
{
  return v0;
}

uint64_t sub_1000582A8()
{
  return v0;
}

void sub_1000582D0()
{
  *(void *)(v1 - 208) = v0 + 16;
}

uint64_t sub_100058300()
{
  return swift_task_alloc();
}

uint64_t sub_100058324(uint64_t result)
{
  *(unsigned char *)(result + 48) = v1 & 1;
  uint64_t v3 = *(void *)(v2 - 200);
  *(void *)(result + 56) = *(void *)(v2 - 184);
  *(void *)(result + 64) = v3;
  return result;
}

uint64_t sub_10005833C()
{
  return v0;
}

uint64_t sub_100058354()
{
  return sub_10006E400();
}

uint64_t sub_100058378()
{
  return sub_100046AE8(v0, v1, (uint64_t *)(v2 - 176));
}

unint64_t sub_100058394()
{
  sub_100052624(v1, v0, v2);
  return sub_10002684C(v1, v0, v2);
}

uint64_t sub_1000583D0(uint64_t a1)
{
  *(void *)(v1 - 176) = a1;
  return swift_bridgeObjectRetain();
}

void sub_1000583EC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v7 = *(NSObject **)(v5 - 200);
  int v8 = *(_DWORD *)(v5 - 224);
  _os_log_impl(a1, v7, (os_log_type_t)v8, a4, v4, 0x16u);
}

uint64_t sub_100058410(uint64_t result)
{
  *(unsigned char *)(result + 16) = 8;
  return result;
}

uint64_t sub_10005841C(uint64_t a1)
{
  sub_10005263C(a1, v2, v4);
  return sub_100046AE8(v1, v3, (uint64_t *)(v5 - 80));
}

uint64_t sub_100058458(uint64_t a1)
{
  sub_100052624(a1, v1, v2);
  return sub_10006E350();
}

uint64_t sub_1000584A0(uint64_t result)
{
  *(void *)(result + 16) = v1;
  *(void *)(v2 - 200) = result;
  return result;
}

uint64_t sub_1000584C0()
{
  *(void *)(v1 - 184) = v0;
  return sub_10006E280();
}

uint64_t sub_1000584E4()
{
  return v0;
}

uint64_t sub_1000584F0()
{
  return v0;
}

uint64_t sub_1000584FC()
{
  sub_10005263C(v1, v0, v2);
  return sub_10005263C(v1, v0, v2);
}

uint64_t sub_100058538()
{
  return v0;
}

uint64_t sub_100058544()
{
  return sub_10006E3C0();
}

uint64_t sub_100058574(uint64_t result)
{
  *(void *)(v1 + 1152) = result;
  return result;
}

uint64_t sub_100058584(uint64_t a1)
{
  *(void *)(v1 + 544) = a1;
  return sub_10006F4D0();
}

uint64_t sub_1000585C0(uint64_t a1)
{
  *(void *)(v1 + 528) = a1;
  return sub_10006F4D0();
}

uint64_t sub_1000585E4(uint64_t a1)
{
  return sub_100007770(a1, 0, 1, v1);
}

void sub_100058618()
{
  *(void *)(v0 - 104) = 0xD000000000000014;
}

uint64_t sub_100058628(unint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_1000474C4(a1, a2, a3);
}

uint64_t sub_10005865C()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_100058674()
{
  return swift_release();
}

uint64_t sub_10005868C()
{
  return sub_10006F620();
}

uint64_t sub_1000586A4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v6 = *(void *)(v4 - 240);
  return sub_1000474C4(v3, v6, a3);
}

uint64_t sub_1000586C8()
{
  return v0;
}

uint64_t sub_1000586E0()
{
  return v0;
}

uint64_t sub_1000586F8()
{
  return ParameterRelationshipDefinition.init(key:relation:)(v1, v2, v0);
}

uint64_t sub_100058714()
{
  return sub_10006F620();
}

uint64_t sub_10005872C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_1000474C4(v4, v3, a3);
}

uint64_t sub_100058750()
{
  return v0;
}

uint64_t sub_10005875C()
{
  return sub_100047358(v1, v0);
}

uint64_t sub_100058774()
{
  *(void *)(v2 + 1792) = v0;
  uint64_t v4 = *(void *)(v2 + 1704);
  uint64_t v5 = *v1;
  return sub_100068F18(v0, v5, v4);
}

uint64_t sub_1000587BC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000587EC()
{
  return swift_bridgeObjectRetain();
}

void sub_100058810(uint64_t a1@<X8>)
{
  *(void *)(v3 - 168) = (a1 - 32) | 0x8000000000000000;
  *(_DWORD *)(v3 - 176) = v1;
  *(void *)(v3 - 184) = v2;
}

void sub_100058828(uint64_t a1@<X8>)
{
  STACK[0x210] = (a1 - 32) | 0x8000000000000000;
  STACK[0x230] = v1;
  *(void *)(v3 - 200) = v2;
}

void sub_100058840(uint64_t a1@<X8>)
{
  STACK[0x228] = (a1 - 32) | 0x8000000000000000;
  STACK[0x248] = v1;
  *(void *)(v3 - 200) = v2;
}

uint64_t sub_100058858()
{
  return sub_10006E400();
}

uint64_t sub_100058880()
{
  return v0;
}

uint64_t sub_100058898()
{
  return sub_10006F010();
}

uint64_t sub_1000588BC()
{
  *(void *)(v3 - 232) = v2;
  *(void *)(v3 - 224) = v0;
  return *(void *)(v1 + 576);
}

uint64_t sub_1000588E0()
{
  return swift_release();
}

uint64_t sub_1000588F8()
{
  return v0;
}

__n128 sub_100058928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __n128 a11)
{
  *(void *)(v12 - 80) = a1;
  __n128 result = a11;
  *unint64_t v11 = a11.n128_u32[0];
  return result;
}

uint64_t sub_1000589A8(uint64_t a1, uint64_t a2)
{
  sub_100007770(a1, a2, 1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000589E8()
{
  return sub_10006F4D0();
}

void sub_100058A0C(unint64_t a1@<X8>)
{
  sub_1000676D0(a1 > 1, v1, 1, v2);
}

void sub_100058A30()
{
  *(void *)(v1 - 208) = v0 + 88;
  *(void *)(v1 - 200) = v0 + 32;
}

uint64_t sub_100058A48()
{
  return sub_10006F010();
}

uint64_t sub_100058A6C(uint64_t result)
{
  *(unsigned char *)(result + 16) = 8;
  return result;
}

void sub_100058A7C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  int v8 = *(NSObject **)(v6 - 192);
  _os_log_impl(a1, v8, v4, a4, v5, 0x16u);
}

void sub_100058AA0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v7 = *(NSObject **)(v5 - 192);
  int v8 = STACK[0x218];
  _os_log_impl(a1, v7, (os_log_type_t)v8, a4, v4, 0x16u);
}

uint64_t sub_100058AC4()
{
  return sub_10006F750();
}

BOOL sub_100058AE0(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_100058B34()
{
  v3[130] = v2;
  v3[129] = v1;
  v3[128] = v0;
}

id sub_100058B44()
{
  uint64_t v2 = *(void **)(v0 + 576);
  return v2;
}

uint64_t sub_100058B60()
{
  return *(void *)(v0 + 984);
}

uint64_t sub_100058BA0()
{
  return swift_arrayDestroy();
}

uint64_t sub_100058BBC()
{
  return sub_10006F000();
}

uint64_t sub_100058BD8()
{
  return sub_10006F1C0();
}

uint64_t sub_100058BF4(unint64_t a1)
{
  *(void *)(v2 - 256) = v1;
  STACK[0x238] = a1;
  return sub_10006F1C0();
}

uint64_t sub_100058C18()
{
  return sub_10006DF70();
}

uint64_t sub_100058C3C()
{
  return sub_10006F050();
}

uint64_t sub_100058C70()
{
  return swift_arrayDestroy();
}

uint64_t sub_100058C8C()
{
  return sub_10001028C(0, v0);
}

uint64_t sub_100058CA8()
{
  return sub_10001028C(0, v0);
}

uint64_t sub_100058CC4(uint64_t result)
{
  *(void *)(v1 + 1072) = result;
  return result;
}

id sub_100058CD4(uint64_t a1)
{
  *(void *)(v2 + 1880) = a1;
  return v1;
}

uint64_t sub_100058D04(uint64_t result, unint64_t a2)
{
  STACK[0x238] = a2;
  *(void *)(v2 + 1864) = result;
  *(void *)(v2 + 1872) = a2;
  return result;
}

uint64_t sub_100058D1C(uint64_t result)
{
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v3;
  *(void *)(result + 32) = v4;
  *(void *)(result + 40) = v1;
  *(unsigned char *)(result + 48) = v5 & 1;
  return result;
}

void sub_100058D34(Swift::String a1)
{
  sub_10006F0A0(a1);
}

uint64_t sub_100058D4C()
{
  return v0;
}

void sub_100058D98()
{
  sub_10001A240(v0);
}

uint64_t sub_100058DBC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100058DE0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100058DF8()
{
  uint64_t result = *(void *)(v0 + 576);
  *uint64_t v1 = 0;
  v1[1] = 0;
  return result;
}

uint64_t sub_100058E04()
{
  return sub_10006F010();
}

uint64_t sub_100058E28()
{
  uint64_t result = v0;
  *(void *)(v2 - 136) = v1;
  return result;
}

uint64_t sub_100058E40()
{
  return *(void *)(*(void *)(v0 - 184) + 1416);
}

uint64_t sub_100058E50()
{
  *(void *)(v0 - 224) = *(void *)(*(void *)(v0 - 184) + 1072);
  uint64_t v2 = *(void *)(v0 - 200);
  return sub_10006A5F4(v2);
}

void sub_100058E74()
{
  uint64_t v2 = *(void *)(v0 + 2032);
  *(void *)(v1 - 144) = *(void *)(v0 + 1672);
  *(void *)(v1 - 136) = v2;
}

uint64_t sub_100058EB4()
{
  return v0;
}

uint64_t sub_100058EC0()
{
  return v0;
}

uint64_t sub_100058ED0()
{
  return v0;
}

uint64_t sub_100058EE0()
{
  return v0;
}

double sub_100058F10()
{
  double result = 0.0;
  _OWORD *v0 = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t sub_100058F1C()
{
  return sub_10006F010();
}

uint64_t sub_100058F40()
{
  return v0;
}

uint64_t sub_100058F5C()
{
  return sub_10006F010();
}

uint64_t sub_100058F80()
{
  return v0 + 8;
}

uint64_t sub_100058F90()
{
  return v0 + 8;
}

uint64_t sub_100058FA0()
{
  return swift_arrayDestroy();
}

uint64_t sub_100058FBC()
{
  return *(void *)(v0 + 720);
}

uint64_t sub_100058FCC()
{
  return swift_bridgeObjectRelease();
}

void *sub_100058FF0()
{
  void *v0 = v1;
  return v0;
}

uint64_t sub_100059004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 464) = a1;
  *(void *)(v2 + 472) = a2;
  return swift_dynamicCastObjCProtocolConditional();
}

uint64_t sub_100059024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 464) = a1;
  *(void *)(v2 + 472) = a2;
  return swift_dynamicCastObjCProtocolConditional();
}

uint64_t sub_100059044()
{
  return sub_10006F530();
}

uint64_t sub_10005905C()
{
  return sub_10006ED80();
}

uint64_t sub_10005909C()
{
  uint64_t v3 = *(void *)(*(void *)(v0 + 440) + 16);
  return sub_1000468F4(v3, v1);
}

BOOL sub_1000590BC()
{
  uint64_t v2 = *(NSObject **)(v0 - 200);
  os_log_type_t v3 = *(_DWORD *)(v0 - 224);
  return os_log_type_enabled(v2, v3);
}

uint64_t sub_1000590DC()
{
  return *(void *)(*(void *)(v0 - 184) + 720);
}

void sub_1000590F0(int a1@<W8>)
{
  *(_DWORD *)(v2 - 240) = a1;
  *(void *)(v2 - 248) = v1 + 104;
}

uint64_t sub_100059104(unint64_t *a1)
{
  return sub_1000525E0(a1, v1);
}

uint64_t sub_10005911C()
{
  uint64_t v3 = STACK[0x220] & 1;
  return sub_100068F18(v0, v3, v1);
}

void sub_10005913C()
{
  *(void *)(v0 - 96) = 0xEA00000000002065;
}

uint64_t sub_100059150()
{
  *(void *)(v1 - 120) = v0;
  return type metadata accessor for WFDeviceCapabilityResource(0);
}

id sub_100059184()
{
  uint64_t v3 = *(const char **)(v0 + 528);
  return [v1 v3];
}

uint64_t sub_1000591B8()
{
  *(void *)(v1 - 208) = v0;
  return sub_10006E3D0();
}

uint64_t sub_1000591D8()
{
  uint64_t v3 = *(void *)(*(void *)(v0 + 400) + 16);
  return sub_1000468F4(v3, v1);
}

uint64_t sub_1000591F8()
{
  return swift_dynamicCast();
}

void *sub_100059224()
{
  void *v0 = v1;
  return v0;
}

uint64_t sub_100059238()
{
  return 0;
}

uint64_t sub_10005924C()
{
  return swift_errorRelease();
}

uint64_t sub_10005926C(uint64_t result)
{
  *(_DWORD *)(v2 - 240) = result;
  *(void *)(v2 - 248) = v1;
  return result;
}

uint64_t sub_100059280()
{
  return v0;
}

__n128 sub_1000592F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, long long a17)
{
  return (__n128)a17;
}

uint64_t sub_1000592FC()
{
  return swift_task_dealloc();
}

uint64_t sub_100059330()
{
  return sub_10006F510();
}

id sub_100059350()
{
  uint64_t v3 = *(const char **)(v1 + 528);
  return [v0 v3];
}

void sub_100059370()
{
  uint64_t v2 = *(void **)(v0 + 1672);
}

uint64_t sub_100059390()
{
  return sub_1000469EC();
}

uint64_t sub_1000593A8()
{
  return v0;
}

uint64_t sub_1000593B4()
{
  return v0;
}

uint64_t sub_1000593C0()
{
  return sub_10006E280();
}

uint64_t sub_1000593D8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000593F8()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_10005940C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10005942C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_100053348(v3, v4, a3);
}

uint64_t sub_100059444()
{
  return sub_100007800(v1, 1, v0);
}

uint64_t sub_100059484()
{
  return sub_10006E3C0();
}

uint64_t sub_1000594A8()
{
  return 0;
}

uint64_t sub_1000594BC()
{
  return ParameterRelationshipDefinition.init(key:relation:)(v1, v2, v0);
}

uint64_t sub_1000594DC()
{
  return *(void *)(v0 + 88);
}

uint64_t sub_100059504()
{
  return v0;
}

uint64_t sub_100059518()
{
  return v0;
}

uint64_t sub_10005952C()
{
  return *(void *)(*(void *)(v0 - 120) + 720);
}

uint64_t sub_100059540()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100059560()
{
  return v0;
}

uint64_t sub_100059578()
{
  return v0;
}

uint64_t sub_100059584()
{
  return sub_10006F850();
}

uint64_t sub_10005959C()
{
  return v0;
}

uint64_t sub_1000595A8()
{
  return sub_10006F620();
}

uint64_t sub_1000595C0(uint64_t result)
{
  *(void *)(v1 + 1800) = result;
  return result;
}

void sub_1000595CC()
{
  STACK[0x230] = v0 + 392;
  STACK[0x238] = v0 + 424;
}

id sub_1000595E0(uint64_t a1)
{
  *(void *)(v2 + 1696) = a1;
  *(void *)(v2 + 488) = v3;
  uint64_t v6 = *(const char **)(v4 + 8);
  return [v1 v6];
}

uint64_t sub_10005963C()
{
  return TypeInstance.collectionIfMultiple(isCollection:)(v0);
}

uint64_t sub_10005965C()
{
  uint64_t v3 = *(void *)(*(void *)(v0 + 400) + 16);
  return sub_1000468F4(v3, v1);
}

uint64_t sub_10005967C()
{
  uint64_t v3 = *(void *)(*(void *)(v1 - 176) + 16);
  return sub_10004F06C(v3, v0);
}

void sub_10005969C(int a1@<W8>)
{
  *(_DWORD *)(v3 - 192) = a1;
  *(void *)(v3 - 208) = v2 + 8;
  *(void *)(v3 - 200) = v1 + 104;
}

uint64_t sub_1000596B0()
{
  return v0;
}

uint64_t sub_1000596E4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100059704()
{
  return sub_10004D554(v0, v1);
}

uint64_t sub_100059724()
{
  return sub_10006F510();
}

uint64_t sub_100059744()
{
  return sub_10006DF40();
}

unint64_t sub_100059770()
{
  uint64_t v3 = *(void *)(v1 + 1504);
  return sub_1000172F8(v0, v3);
}

uint64_t sub_10005979C()
{
  return swift_release_n();
}

uint64_t sub_1000597B4()
{
  return swift_release_n();
}

uint64_t sub_1000597CC()
{
  return v0;
}

uint64_t sub_1000597EC()
{
  return sub_10006F170();
}

uint64_t sub_100059810()
{
  return sub_100046AE8(v0, v1, (uint64_t *)(v2 - 80));
}

uint64_t sub_100059830(uint64_t result)
{
  *(unsigned char *)(result + 16) = 8;
  return result;
}

uint64_t sub_10005983C()
{
  return v0;
}

uint64_t sub_100059848()
{
  *(void *)(v2 - 200) = v0;
  *(void *)(v1 + 2008) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100059868()
{
  return sub_10006F1C0();
}

uint64_t sub_100059880()
{
  return swift_release();
}

uint64_t sub_100059898(uint64_t a1)
{
  **(void **)(v1 - 112) = a1;
  return 0;
}

uint64_t sub_1000598AC()
{
  STACK[0x248] = v0;
  *(void *)(v1 + 2008) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000598CC()
{
  STACK[0x230] = v1;
  *(void *)(v0 + 2008) = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100059900()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100059920()
{
  *(void *)(v1 - 152) = *(void *)(v0 + 1072);
  uint64_t v3 = *(void *)(v1 - 136);
  return sub_10006A5F4(v3);
}

uint64_t sub_100059940@<X0>(uint64_t a1@<X8>)
{
  return a1 + v1 * v2;
}

id sub_100059954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(*(void *)(a1 + 48) + 8 * a2);
  return v3;
}

uint64_t sub_10005996C()
{
  return sub_10006DF60();
}

uint64_t sub_100059984()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000599A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000599F0@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_100059A04(uint64_t a1)
{
  *(void *)(v1 - 224) = a1;
  return sub_10006F1E0();
}

uint64_t sub_100059A24(uint64_t a1)
{
  *(void *)(v2 - 192) = a1;
  *(void *)(v2 - 184) = v1;
  return sub_10006F1C0();
}

void sub_100059A44(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void sub_100059A64(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 0xCu);
}

uint64_t sub_100059A84()
{
  return sub_10001028C(0, v0);
}

uint64_t sub_100059AA4()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_100059ABC()
{
  return sub_10006DF80();
}

uint64_t sub_100059AE8()
{
  return v0;
}

uint64_t sub_100059AFC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100059B1C(uint64_t a1)
{
  *(void *)(v1 - 176) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100059B3C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100059B5C()
{
  return v0;
}

uint64_t sub_100059B68()
{
  return v0;
}

uint64_t sub_100059B74()
{
  return sub_10006F820();
}

BOOL sub_100059B94()
{
  return sub_100068F0C(v0);
}

uint64_t sub_100059BB4()
{
  STACK[0x210] = v2 + 464;
  *(void *)(v2 + 2032) = v1;
  return sub_10006A5EC(v0);
}

uint64_t sub_100059BD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 464) = a1;
  *(void *)(v2 + 472) = a2;
  return swift_dynamicCastObjCProtocolConditional();
}

uint64_t sub_100059BF4()
{
  return v0;
}

uint64_t sub_100059C08()
{
  return sub_100053404(v0, v1);
}

uint64_t sub_100059C20()
{
  return v0;
}

uint64_t sub_100059C2C()
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 400) + 16);
  return sub_1000468F4(v3, v0);
}

uint64_t sub_100059C4C()
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 400) + 16);
  return sub_1000468F4(v3, v0);
}

double sub_100059C6C()
{
  double result = 0.0;
  _OWORD *v0 = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t sub_100059C78()
{
  return v0;
}

uint64_t sub_100059C84()
{
  return v0;
}

uint64_t sub_100059C90()
{
  return v0;
}

uint64_t sub_100059CA4()
{
  return v0;
}

uint64_t sub_100059CB8()
{
  return sub_100007800(v0, 1, v1);
}

uint64_t sub_100059CE4()
{
  return v0;
}

uint64_t sub_100059CF0()
{
  return sub_10006F520();
}

uint64_t sub_100059D10()
{
  return v0;
}

uint64_t sub_100059D24()
{
  return sub_100007770(v0, 0, 1, v1);
}

uint64_t sub_100059D50()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100059D70()
{
  return v0;
}

uint64_t sub_100059D7C()
{
  return v0;
}

uint64_t sub_100059D90()
{
  return sub_100007770(v0, 0, 1, v1);
}

void sub_100059DBC()
{
  v3._countAndFlagsBits = v0;
  v3._object = v1;
  sub_10006F0A0(v3);
}

uint64_t sub_100059DD4()
{
  return v0;
}

uint64_t sub_100059DE8()
{
  sub_100007800(v0, 1, v2);
  return *(void *)(v1 + 176);
}

void *sub_100059E14(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    sub_10006F660();
    uint64_t v5 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      id v6 = [a2 entityType];
      sub_10006F050();

      id v7 = objc_allocWithZone((Class)LNEntityIdentifier);
      sub_1000667F0();
      sub_10006F640();
      sub_10006F670();
      sub_10006F680();
      sub_10006F650();
      v5 += 16;
      --v3;
    }
    while (v3);
  }
  else
  {
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100059F54(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_100059F5C()
{
  sub_10006B168();
  uint64_t v2 = sub_10000772C(&qword_100081DA8);
  uint64_t v3 = sub_100055A7C(v2);
  __chkstk_darwin(v3);
  sub_100016530();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_10006F1A0();
  sub_100007770(v6, 1, 1, v7);
  int v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v1;
  v8[5] = v0;
  unint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = &unk_100082900;
  v9[5] = v8;
  sub_100066A10(v6, (uint64_t)&unk_100082910, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_10005A050(uint64_t a1)
{
  return sub_10005A0B8(a1, (void (*)(void))&type metadata accessor for PropertyListDecoder, (uint64_t (*)(void))&PropertyListDecoder.init(), &qword_100082670);
}

uint64_t sub_10005A084(uint64_t a1)
{
  return sub_10005A0B8(a1, (void (*)(void))&type metadata accessor for PropertyListEncoder, (uint64_t (*)(void))&PropertyListEncoder.init(), &qword_100082678);
}

uint64_t sub_10005A0B8(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  a2(0);
  swift_allocObject();
  uint64_t result = a3();
  *a4 = result;
  return result;
}

uint64_t WFToolKitTypedValueContent.resolve(with:)()
{
  sub_1000114D4();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = sub_10000772C(&qword_100082688);
  sub_100055A7C(v3);
  v1[4] = sub_10005558C();
  uint64_t v4 = sub_10006E010();
  v1[5] = v4;
  sub_100016518(v4);
  v1[6] = v5;
  v1[7] = sub_10005558C();
  uint64_t v6 = sub_10006E880();
  v1[8] = v6;
  sub_100016518(v6);
  v1[9] = v7;
  v1[10] = sub_10005558C();
  sub_1000115E8();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_10005A1EC()
{
  sub_100059790();
  if (qword_1000819E0 != -1) {
    swift_once();
  }
  id v1 = [*(id *)(v0 + 24) encodedTypedValue];
  uint64_t v2 = sub_10006DE20();
  unint64_t v4 = v3;

  sub_10006A578(&qword_100082690, (void (*)(uint64_t))&type metadata accessor for TypedValue);
  sub_10006B0D0();
  sub_10006DD80();
  sub_10005172C(v2, v4);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = sub_10006EC00();
  sub_100007770(v5, 1, 1, v6);
  swift_unknownObjectRetain();
  sub_10006E000();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_10005A3E4;
  sub_100058910();
  return TypedValue.resolve(in:)();
}

uint64_t sub_10005A3E4()
{
  sub_1000116F8();
  uint64_t v3 = v2;
  sub_100011474();
  uint64_t v5 = v4;
  sub_1000114FC();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1000114E0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 96) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 104) = v3;
  }
  sub_1000115E8();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_10005A4D4()
{
  sub_10006A9F8();
  sub_100056CA8();
  sub_10005521C();
  v0();
  sub_100011764();
  sub_1000553C4();
  v1();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10006A77C();
  return v4(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_10005A580()
{
  sub_1000116F8();
  sub_10001162C();
  v0();
  uint64_t v1 = sub_10006A9BC();
  v2(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000115DC();
  return v3();
}

BOOL sub_10005A6A4(char a1, char a2)
{
  return a1 == a2;
}

void sub_10005A6B4(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int sub_10005A6DC(unsigned __int8 a1)
{
  return sub_10006F840();
}

uint64_t sub_10005A724(uint64_t a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  a3;
  uint64_t v5 = (void *)swift_task_alloc();
  v3[5] = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_10005A7E8;
  return WFToolKitTypedValueContent.resolve(with:)();
}

uint64_t sub_10005A7E8()
{
  sub_100056CA8();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  sub_10006A960();
  uint64_t v6 = *(void **)(v1 + 24);
  uint64_t v7 = *v2;
  sub_1000114E0();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  swift_unknownObjectRelease();

  uint64_t v9 = *(void (***)(void, void, void))(v1 + 32);
  if (v3)
  {
    uint64_t v10 = (void *)sub_10006DDB0();
    swift_errorRelease();
    ((void (**)(void, void, void *))v9)[2](v9, 0, v10);

    _Block_release(v9);
  }
  else
  {
    uint64_t v11 = sub_10006B128();
    v12(v11);
    _Block_release(v9);
  }
  uint64_t v13 = *(uint64_t (**)(void))(v7 + 8);
  return v13();
}

BOOL sub_10005A970(char *a1, char *a2)
{
  return sub_10005A6A4(*a1, *a2);
}

Swift::Int sub_10005A97C()
{
  return sub_10005A6DC(*v0);
}

void sub_10005A984(uint64_t a1)
{
  sub_10005A6B4(a1, *v1);
}

id ToolKitHelper.DynamicEnumerationDefinition.actionIdentifier.getter()
{
  sub_10006A7FC();
  uint64_t v1 = *v0;
  return v1;
}

void ToolKitHelper.DynamicEnumerationDefinition.actionIdentifier.setter(void *a1)
{
}

uint64_t (*ToolKitHelper.DynamicEnumerationDefinition.actionIdentifier.modify())()
{
  return j_j__swift_endAccess;
}

id ToolKitHelper.DynamicEnumerationDefinition.parameterKey.getter()
{
  sub_10006A7FC();
  uint64_t v1 = *v0;
  return v1;
}

void ToolKitHelper.DynamicEnumerationDefinition.parameterKey.setter(void *a1)
{
}

void sub_10005AB94(void *a1)
{
  sub_10006A998();
  uint64_t v3 = *v1;
  *uint64_t v1 = a1;
}

uint64_t (*ToolKitHelper.DynamicEnumerationDefinition.parameterKey.modify())()
{
  return j__swift_endAccess;
}

id sub_10005AC1C()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = v0;
  NSString v3 = sub_10006F020();
  swift_bridgeObjectRelease();
  *(void *)&v2[OBJC_IVAR___WFToolKitDynamicEnumerationDefinition_actionIdentifier] = v3;
  NSString v4 = sub_10006F020();
  swift_bridgeObjectRelease();
  *(void *)&v2[OBJC_IVAR___WFToolKitDynamicEnumerationDefinition_parameterKey] = v4;

  v6.receiver = v2;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, "init");
}

void ToolKitHelper.DynamicEnumerationDefinition.init()()
{
}

uint64_t ToolKitHelper.ContentPropertyPossibleValuesDefinition.contentItemClass.getter()
{
  sub_10006A7FC();
  return *(void *)v0;
}

uint64_t ToolKitHelper.ContentPropertyPossibleValuesDefinition.contentItemClass.setter(uint64_t a1)
{
  uint64_t result = sub_10006A998();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*ToolKitHelper.ContentPropertyPossibleValuesDefinition.contentItemClass.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t ToolKitHelper.ContentPropertyPossibleValuesDefinition.propertyName.getter()
{
  return sub_100011764();
}

uint64_t ToolKitHelper.ContentPropertyPossibleValuesDefinition.propertyName.setter(uint64_t a1, uint64_t a2)
{
  sub_10006A998();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*ToolKitHelper.ContentPropertyPossibleValuesDefinition.propertyName.modify())()
{
  return j_j__swift_endAccess;
}

id sub_10005B024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = (uint64_t *)&v4[OBJC_IVAR___WFToolKitContentPropertyPossibleValuesDefinition_contentItemClass];
  *(void *)&v4[OBJC_IVAR___WFToolKitContentPropertyPossibleValuesDefinition_contentItemClass] = 0;
  uint64_t v10 = v4;
  uint64_t v11 = sub_10006EEA0();
  swift_beginAccess();
  *uint64_t v9 = v11;
  uint64_t v12 = &v10[OBJC_IVAR___WFToolKitContentPropertyPossibleValuesDefinition_propertyName];
  *(void *)uint64_t v12 = a2;
  *((void *)v12 + 1) = a3;

  v16.receiver = v10;
  v16.super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v16, "init");
  uint64_t v14 = sub_10006EEB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
  return v13;
}

void ToolKitHelper.ContentPropertyPossibleValuesDefinition.init()()
{
}

unint64_t ToolKitHelper.ValueSetType.init(rawValue:)(unint64_t result)
{
  if (result > 3) {
    return 0;
  }
  return result;
}

BOOL sub_10005B180(uint64_t *a1, uint64_t *a2)
{
  return sub_10005B18C(*a1, *a2);
}

BOOL sub_10005B18C(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

Swift::Int sub_10005B198()
{
  return sub_10005B1A0(*v0);
}

Swift::Int sub_10005B1A0(Swift::UInt a1)
{
  return sub_10006F840();
}

void sub_10005B1E8(uint64_t a1)
{
  sub_10005B1F0(a1, *v1);
}

void sub_10005B1F0(uint64_t a1, Swift::UInt a2)
{
}

Swift::Int sub_10005B218(uint64_t a1)
{
  return sub_10005B220(a1, *v1);
}

Swift::Int sub_10005B220(uint64_t a1, Swift::UInt a2)
{
  return sub_10006F840();
}

unint64_t sub_10005B264@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = ToolKitHelper.ValueSetType.init(rawValue:)(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_10005B298(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t static ToolKitHelper.createAction(encodedToolInvocation:)(uint64_t a1, unint64_t a2)
{
  sub_10006DF10();
  sub_1000516C0(a1, a2);
  uint64_t v5 = sub_10006DEE0();
  if (!v2)
  {
    objc_super v6 = (void *)v5;
    id v7 = [self sharedRegistry];
    a1 = sub_10006DEF0();
  }
  return a1;
}

uint64_t static ToolKitHelper.produceVariable(encodedReference:)()
{
  sub_10006E870();
  sub_10001148C();
  __chkstk_darwin(v1);
  sub_100016530();
  if (qword_1000819E0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_100082670;
  sub_10006A578(&qword_1000826B8, (void (*)(uint64_t))&type metadata accessor for TypedValue.ID);
  sub_10006B0D0();
  sub_10006DD80();
  if (!v0)
  {
    uint64_t v2 = sub_10006E860();
    sub_1000556D0();
    v4();
  }
  return v2;
}

uint64_t static ToolKitHelper.decodeValueSetType(encodedDefinition:)()
{
  sub_10006EB50();
  sub_10001148C();
  __chkstk_darwin(v0);
  sub_100057A84();
  sub_10006EB70();
  sub_10001148C();
  __chkstk_darwin(v1);
  sub_10006AF48();
  if (qword_1000819E0 != -1) {
    swift_once();
  }
  sub_10006A578(&qword_1000826C0, (void (*)(uint64_t))&type metadata accessor for RestrictionContext.ValueSetDefinition);
  sub_10006DD80();
  sub_10006EB60();
  sub_10006ACF4();
  int v3 = v2();
  if (v3 == enum case for RestrictionContext.ValueSetDefinition.Inner.dynamicEnumeration(_:))
  {
    sub_100055240();
    v4();
    uint64_t v5 = sub_10006A85C();
    v6(v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v3 == enum case for RestrictionContext.ValueSetDefinition.Inner.contentPropertyPossibleValues(_:))
  {
    sub_100055240();
    v8();
    uint64_t v9 = sub_10006A85C();
    v10(v9);
    sub_10000772C(&qword_1000826C8);
    swift_bridgeObjectRelease();
    sub_10006EEB0();
    sub_1000551F4();
    sub_1000551DC();
    v11();
    return 2;
  }
  if (v3 == enum case for RestrictionContext.ValueSetDefinition.Inner.linkQuery(_:))
  {
    sub_100055240();
    v12();
    uint64_t v13 = sub_10006A85C();
    v14(v13);
LABEL_11:
    swift_bridgeObjectRelease();
    return 3;
  }
  if (v3 == enum case for RestrictionContext.ValueSetDefinition.Inner.linkQueryOnParameter(_:))
  {
    sub_100055240();
    v15();
    uint64_t v16 = sub_10006A85C();
    v17(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t result = sub_10006F770();
  __break(1u);
  return result;
}

id static ToolKitHelper.decodeDynamicEnumerationDefinition(encodedDefinition:)()
{
  sub_10006DD70();
  sub_10001148C();
  v21[1] = v3;
  void v21[2] = v2;
  __chkstk_darwin(v2);
  v21[0] = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10006EB50();
  sub_10001148C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10006AC5C();
  sub_10006EB70();
  sub_10001148C();
  v21[3] = v9;
  __chkstk_darwin(v10);
  sub_1000116E0();
  if (qword_1000819E0 != -1) {
    swift_once();
  }
  id v11 = (id)qword_100082670;
  sub_10006A578(&qword_1000826C0, (void (*)(uint64_t))&type metadata accessor for RestrictionContext.ValueSetDefinition);
  sub_10006DD80();
  if (!v0)
  {
    sub_10006EB60();
    sub_10006ACF4();
    if (v12() == enum case for RestrictionContext.ValueSetDefinition.Inner.dynamicEnumeration(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 96))(v1, v5);
      id v13 = objc_allocWithZone((Class)type metadata accessor for ToolKitHelper.DynamicEnumerationDefinition());
      id v11 = sub_10005AC1C();
      sub_1000551DC();
      v14();
    }
    else
    {
      sub_1000553C4();
      v15();
      int v22 = 22;
      sub_100066D20((uint64_t)_swiftEmptyArrayStorage);
      sub_10006A578(&qword_1000826D0, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      uint64_t v16 = (void *)v21[0];
      sub_10006DDA0();
      id v11 = v16;
      sub_10006DD60();
      sub_1000551DC();
      v17();
      swift_willThrow();
      uint64_t v18 = sub_10006AFBC();
      v19(v18);
    }
  }
  return v11;
}

id static ToolKitHelper.decodeContentPropertyPossibleValuesDefinition(encodedDefinition:)(uint64_t a1, uint64_t a2)
{
  v33[6] = a2;
  sub_10006DD70();
  sub_10001148C();
  v33[3] = v4;
  v33[4] = v3;
  __chkstk_darwin(v3);
  sub_10006ABA0(v5, v33[0]);
  uint64_t v6 = sub_10006EB50();
  sub_10001148C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10006AC5C();
  sub_10006EEB0();
  sub_10001148C();
  v33[0] = v11;
  v33[1] = v10;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  sub_10006EB70();
  sub_10001148C();
  v33[5] = v15;
  __chkstk_darwin(v16);
  sub_1000116E0();
  if (qword_1000819E0 != -1) {
    swift_once();
  }
  id v17 = (id)qword_100082670;
  sub_10006A578(&qword_1000826C0, (void (*)(uint64_t))&type metadata accessor for RestrictionContext.ValueSetDefinition);
  uint64_t v18 = v33[7];
  sub_10006DD80();
  if (!v18)
  {
    sub_10006EB60();
    sub_10006ACF4();
    if (v19() == enum case for RestrictionContext.ValueSetDefinition.Inner.contentPropertyPossibleValues(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 96))(v2, v6);
      uint64_t v20 = (uint64_t *)(v2 + *(int *)(sub_10000772C(&qword_1000826C8) + 48));
      uint64_t v21 = *v20;
      uint64_t v22 = v20[1];
      sub_100055548();
      v23();
      sub_1000114F0();
      v24();
      id v25 = objc_allocWithZone((Class)type metadata accessor for ToolKitHelper.ContentPropertyPossibleValuesDefinition());
      id v17 = sub_10005B024((uint64_t)v14, v21, v22);
      sub_100055240();
      v26();
      sub_1000551DC();
      v27();
    }
    else
    {
      sub_100055B70();
      v28();
      int v34 = 22;
      sub_100066D20((uint64_t)_swiftEmptyArrayStorage);
      sub_10006A578(&qword_1000826D0, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      sub_10006B154();
      sub_10006DDA0();
      id v17 = (id)(v8 + 8);
      sub_10006DD60();
      sub_1000551DC();
      v29();
      swift_willThrow();
      uint64_t v30 = sub_10006AFBC();
      v31(v30);
    }
  }
  return v17;
}

id sub_10005BF38(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  id v6 = a3;
  sub_10006DE20();

  uint64_t v7 = sub_100056304();
  uint64_t v8 = (void *)a5(v7);
  sub_10006AFD0();
  return v8;
}

uint64_t static ToolKitHelper.runLinkQuery(_:encodedValueSet:)()
{
  sub_1000114D4();
  v0[31] = v1;
  v0[32] = v2;
  v0[29] = v3;
  v0[30] = v4;
  uint64_t v5 = sub_10000772C(&qword_1000826E0);
  sub_100055A7C(v5);
  v0[33] = sub_10005558C();
  uint64_t v6 = sub_10006E880();
  v0[34] = v6;
  sub_100016518(v6);
  v0[35] = v7;
  v0[36] = sub_1000551C0();
  v0[37] = swift_task_alloc();
  uint64_t v8 = sub_10000772C(&qword_1000826E8);
  v0[38] = v8;
  sub_100016518(v8);
  v0[39] = v9;
  v0[40] = sub_10005558C();
  uint64_t v10 = sub_10006EDC0();
  v0[41] = v10;
  sub_100016518(v10);
  v0[42] = v11;
  v0[43] = sub_10005558C();
  uint64_t v12 = sub_10006EAE0();
  v0[44] = v12;
  sub_100016518(v12);
  v0[45] = v13;
  v0[46] = sub_10005558C();
  uint64_t v14 = sub_10006ED60();
  v0[47] = v14;
  sub_100016518(v14);
  v0[48] = v15;
  v0[49] = sub_10005558C();
  uint64_t v16 = sub_10006E920();
  v0[50] = v16;
  sub_100016518(v16);
  v0[51] = v17;
  v0[52] = sub_10005558C();
  uint64_t v18 = sub_10006DD70();
  v0[53] = v18;
  sub_100016518(v18);
  v0[54] = v19;
  v0[55] = sub_10005558C();
  uint64_t v20 = sub_10006EF90();
  v0[56] = v20;
  sub_100016518(v20);
  v0[57] = v21;
  v0[58] = sub_1000551C0();
  v0[59] = swift_task_alloc();
  uint64_t v22 = sub_10006EB50();
  v0[60] = v22;
  sub_100016518(v22);
  v0[61] = v23;
  v0[62] = sub_1000551C0();
  v0[63] = swift_task_alloc();
  uint64_t v24 = sub_10006EB70();
  v0[64] = v24;
  sub_100016518(v24);
  v0[65] = v25;
  v0[66] = sub_10005558C();
  sub_1000115E8();
  return _swift_task_switch(v26, v27, v28);
}

uint64_t sub_10005C2B4()
{
  uint64_t v1 = (_DWORD *)v0;
  id v2 = [self sharedProvider];
  *(void *)(v0 + 536) = v2;
  if (qword_1000819E0 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 512);
  sub_10006A578(&qword_1000826C0, (void (*)(uint64_t))&type metadata accessor for RestrictionContext.ValueSetDefinition);
  sub_10006AEE0();
  unint64_t v155 = (_DWORD *)v0;
  if (v3)
  {

    goto LABEL_23;
  }
  *(void *)(v0 + 544) = sub_10006EB40();
  *(void *)(v0 + 552) = v4;
  if (!v4)
  {
    sub_10006AE38();
    *(_DWORD *)(v0 + 756) = v10;
LABEL_22:
    sub_100066D20((uint64_t)_swiftEmptyArrayStorage);
    sub_10006A578(&qword_1000826D0, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    sub_10006DDA0();
    sub_10006DD60();
    sub_100055240();
    v27();
    sub_10006AD78();

    uint64_t v28 = sub_100056304();
    v30(v28, v29);
    goto LABEL_23;
  }
  sub_10006EB60();
  uint64_t v5 = sub_100056610();
  int v7 = v6(v5);
  int v8 = enum case for RestrictionContext.ValueSetDefinition.Inner.linkQuery(_:);
  *(_DWORD *)(v0 + 760) = enum case for RestrictionContext.ValueSetDefinition.Inner.linkQuery(_:);
  if (v7 == v8)
  {
    int v148 = v8;
    sub_10006A8AC();
    v9();
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 504);
    uint64_t v12 = *(void *)(v0 + 480);
    uint64_t v13 = *(void *)(v0 + 488);
    if (v7 != enum case for RestrictionContext.ValueSetDefinition.Inner.linkQueryOnParameter(_:))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
      goto LABEL_21;
    }
    int v148 = v8;
    uint64_t v14 = sub_100056A90();
    v15(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  NSString v16 = sub_10006B000();
  sub_10006B128();
  NSString v17 = sub_10006F020();
  swift_bridgeObjectRelease();
  id v18 = [v2 queryMetadataByAppBundleIdentifier:v16 queryIdentifier:v17];
  *(void *)(v0 + 560) = v18;

  if (!v18)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    sub_10006AE38();
    *(_DWORD *)(v0 + 744) = v26;
    goto LABEL_22;
  }
  NSString v19 = sub_10006B000();
  NSString v20 = [v18 entityType];
  if (!v20)
  {
    sub_10006F050();
    NSString v20 = sub_10006F020();
    swift_bridgeObjectRelease();
  }
  id v21 = [v2 entityMetadataByAppBundleIdentifier:v19 entityIdentifier:v20];
  *(void *)(v0 + 568) = v21;

  if (!v21)
  {
    uint64_t v151 = *(void *)(v0 + 528);
    uint64_t v33 = *(void *)(v0 + 520);
    uint64_t v34 = *((void *)v1 + 64);
    swift_bridgeObjectRelease();
    v1[185] = 22;
    sub_100066D20((uint64_t)_swiftEmptyArrayStorage);
    sub_10006A578(&qword_1000826D0, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    sub_10006DDA0();
    sub_10006DD60();
    sub_100055240();
    v35();
    sub_10006AD78();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v151, v34);
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v0 + 240);
  uint64_t v146 = v21;
  if (v22 >> 60 == 15)
  {
    if ([v18 capabilities])
    {
      *(void *)(v0 + 104) = sub_10006E910();
      *(void *)(v0 + 112) = sub_10006A578(&qword_100082728, (void (*)(uint64_t))&type metadata accessor for AllPredicate);
      sub_100069690((uint64_t *)(v0 + 80));
      sub_10006E900();
    }
    else
    {
      if (([v18 capabilities] & 2) == 0)
      {
        uint64_t v150 = *(void *)(v0 + 528);
        uint64_t v23 = *(void *)(v0 + 520);
        uint64_t v24 = *((void *)v1 + 64);
        sub_10006ADAC();
        v155[184] = 22;
        sub_100066D20((uint64_t)_swiftEmptyArrayStorage);
        sub_10006A578(&qword_1000826D0, (void (*)(uint64_t))&type metadata accessor for POSIXError);
        sub_10006A91C();
        sub_10006DD60();
        sub_100055240();
        v25();
        sub_10006AD78();

        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v150, v24);
        goto LABEL_23;
      }
      *(void *)(v0 + 184) = sub_10006EBB0();
      *(void *)(v0 + 192) = sub_10006A578(&qword_1000826F0, (void (*)(uint64_t))&type metadata accessor for SuggestedPredicate);
      sub_100069690((uint64_t *)(v0 + 160));
      sub_10006EBA0();
    }
    sub_10006EF70();
  }
  else
  {
    sub_1000516C0(*(void *)(v0 + 232), v22);
    sub_10006A578(&qword_100082730, (void (*)(uint64_t))&type metadata accessor for Query);
    sub_10006DD80();
    sub_100051718(*(void *)(v0 + 232), *(void *)(v0 + 240));
    uint64_t v36 = sub_100056A90();
    v37(v36);
  }
  sub_10006EF80();
  uint64_t v38 = sub_100059C84();
  int v40 = v39(v38);
  if (v40 == enum case for AnyPredicate.comparison(_:) || v40 == enum case for AnyPredicate.compound(_:))
  {
    sub_10001162C();
    v42();
    unint64_t v60 = (void *)sub_10006EF50();
    sub_1000115E8();
    uint64_t v61 = sub_10006DF20();
    uint64_t v62 = sub_10006EF60();
    char v64 = v63;

    uint64_t v65 = v64 & 1;
    uint64_t v66 = (void *)v62;
    uint64_t v67 = v65 | 0x4000000000000000;
    goto LABEL_48;
  }
  if (v40 == enum case for AnyPredicate.stringSearch(_:))
  {
    uint64_t v43 = sub_1000596B0();
    v44(v43);
    sub_100055548();
    v45();
    sub_10006ED50();
    uint64_t v66 = v46;
    uint64_t v47 = sub_100059C84();
    uint64_t v61 = v48;
    v49(v47);
    uint64_t v67 = 0x2000000000000000;
    goto LABEL_48;
  }
  if (v40 == enum case for AnyPredicate.idSearch(_:))
  {
    uint64_t v50 = *(void *)(v0 + 360);
    uint64_t v51 = *((void *)v1 + 46);
    uint64_t v52 = *((void *)v1 + 44);
    uint64_t v53 = sub_1000596B0();
    v54(v53);
    sub_10006B0E4();
    sub_100055548();
    v55();
    sub_10006EAD0();
    id v56 = v18;
    uint64_t v57 = sub_10006B0B8();
    uint64_t v61 = (uint64_t)sub_100059E14(v57, v58);
    swift_bridgeObjectRelease();
    uint64_t v59 = v52;
    uint64_t v1 = v155;
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v51, v59);
    uint64_t v66 = 0;
    uint64_t v67 = 0;
    goto LABEL_48;
  }
  if (v40 == enum case for AnyPredicate.searchableItem(_:))
  {
    uint64_t v68 = *(void *)(v0 + 336);
    uint64_t v69 = *((void *)v1 + 43);
    uint64_t v153 = *((void *)v1 + 41);
    uint64_t v70 = sub_1000596B0();
    v71(v70);
    sub_10006B0E4();
    sub_100055548();
    v72();
    sub_10000772C(&qword_100082720);
    uint64_t v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = xmmword_100071940;
    sub_10006EDB0();
    uint64_t v74 = sub_10006E970();
    sub_100056304();
    sub_1000551DC();
    v75();
    *(void *)(v73 + 32) = v74;
    uint64_t v156 = v73;
    uint64_t v1 = v155;
    sub_10006F110();
    uint64_t v61 = v156;
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v153);
    uint64_t v66 = 0;
    uint64_t v67 = 0x6000000000000000;
    goto LABEL_48;
  }
  if (v40 == enum case for AnyPredicate.all(_:))
  {
    sub_10001162C();
    v76();
    uint64_t v66 = 0;
    uint64_t v67 = 0x8000000000000000;
    uint64_t v61 = 1;
    goto LABEL_48;
  }
  if (v40 == enum case for AnyPredicate.valid(_:) || v40 == enum case for AnyPredicate.suggested(_:))
  {
    sub_10001162C();
    v77();
    uint64_t v66 = 0;
    uint64_t v67 = 0x8000000000000000;
    uint64_t v61 = 2;
LABEL_48:
    *((void *)v1 + 75) = v67;
    Swift::Int v143 = v66;
    uint64_t v144 = (void *)v61;
    *((void *)v1 + 74) = v66;
    *((void *)v1 + 73) = v61;
    *((void *)v1 + 72) = 0;
    sub_10006EB60();
    sub_100059C84();
    sub_10006ACF4();
    int v79 = v78();
    v1[191] = v79;
    int v154 = v79;
    uint64_t v145 = v18;
    unint64_t v142 = v67;
    if (v79 != v148)
    {
      if (v79 == enum case for RestrictionContext.ValueSetDefinition.Inner.linkQueryOnParameter(_:))
      {
        uint64_t v80 = *((void *)v1 + 62);
        sub_10006A8AC();
        v81();
        uint64_t v82 = *(void *)(v80 + 24);
        id v139 = *(id *)(v80 + 16);
        swift_bridgeObjectRelease();
        NSString v83 = sub_10006B000();
        sub_100056304();
        NSString v84 = sub_10006F020();
        swift_bridgeObjectRelease();
        id v85 = [v2 actionMetadataByAppBundleIdentifier:v83 actionIdentifier:v84];

        if (v85)
        {
          id v86 = v18;
          uint64_t v87 = v82;
          uint64_t v88 = (uint64_t)v139;
LABEL_53:
          *((void *)v1 + 78) = v87;
          *((void *)v1 + 77) = v88;
          *((void *)v1 + 76) = v85;
          id v147 = [self policyWithEntityQueryMetadata:v86];
          *((void *)v1 + 79) = v147;
          sub_10001028C(0, &qword_1000826F8);
          id v140 = objc_allocWithZone((Class)LNQueryRequestOptions);
          unint64_t v90 = (void *)sub_10006B128();
          sub_100069790(v90, v91, v142);
          sub_100069830(v85, v88, v87, v154 != v148);
          id v134 = [v140 init];
          uint64_t v92 = (void *)sub_10006F420();
          *((void *)v1 + 80) = v92;
          *((void *)v1 + 25) = 0;
          id v93 = [v147 connectionWithError:v1 + 50];
          *((void *)v1 + 81) = v93;
          char v94 = (void *)*((void *)v1 + 25);
          if (v93)
          {
            uint64_t v95 = v93;
            *((void *)v1 + 2) = v1;
            *((void *)v1 + 7) = v1 + 56;
            *((void *)v1 + 3) = sub_10005D4AC;
            uint64_t v96 = swift_continuation_init();
            *((void *)v1 + 15) = _NSConcreteStackBlock;
            *((void *)v1 + 16) = 0x40000000;
            *((void *)v1 + 17) = sub_10005E798;
            *((void *)v1 + 18) = &unk_10007ECA0;
            *((void *)v1 + 19) = v96;
            id v97 = v94;
            objc_msgSend(v95, "performConfigurableQuery:completionHandler:", v92, v1 + 30, v134);
            sub_10006AD00();
            return _swift_continuation_await();
          }
          HIDWORD(v135) = v154 != v148;
          id v110 = v94;
          swift_bridgeObjectRelease();
          sub_10006DDC0();

          swift_willThrow();
          sub_10006987C(v85, v88, v87, SBYTE4(v135));
          sub_10006AD90(v111, v112, v113, v114, v115, v116, v117, v118, (uint64_t)v134, v135, (uint64_t)v85, v87, v88, v142, v143, v144);
          sub_1000553C4();
          v119();
          sub_100055234();
          v120();
LABEL_23:
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          sub_10006ADC8();
          sub_10006AD00();
          __asm { BRAA            X1, X16 }
        }
        uint64_t v99 = *((void *)v1 + 65);
        uint64_t v149 = *((void *)v1 + 64);
        uint64_t v152 = *((void *)v1 + 66);
        sub_10006ADAC();
        swift_bridgeObjectRelease();
        v155[187] = 22;
        sub_100066D20((uint64_t)_swiftEmptyArrayStorage);
        sub_10006A578(&qword_1000826D0, (void (*)(uint64_t))&type metadata accessor for POSIXError);
        sub_10006A91C();
        sub_10006DD60();
        sub_1000556D0();
        v121();
        sub_10006AD78();

        sub_10006AD90(v122, v123, v124, v125, v126, v127, v128, v129, v133, v135, v136, v137, (uint64_t)v139, v142, v143, v144);
      }
      else
      {
        uint64_t v99 = *((void *)v1 + 61);
        uint64_t v149 = *((void *)v1 + 60);
        uint64_t v152 = *((void *)v1 + 62);
        uint64_t v138 = *((void *)v1 + 56);
        id v141 = (id)*((void *)v1 + 59);
        sub_10006ADAC();
        v155[188] = 22;
        sub_100066D20((uint64_t)_swiftEmptyArrayStorage);
        sub_10006A578(&qword_1000826D0, (void (*)(uint64_t))&type metadata accessor for POSIXError);
        sub_10006A91C();
        sub_10006DD60();
        sub_100055228();
        v100();
        sub_10006AD78();

        sub_10006AD90(v101, v102, v103, v104, v105, v106, v107, v108, v133, v135, v136, v138, (uint64_t)v141, v142, v66, (void *)v61);
        sub_1000556D0();
        v109();
      }
      sub_100055240();
      v130();
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v152, v149);
      goto LABEL_23;
    }
    id v86 = v18;
    sub_10006A8AC();
    v89();
    swift_bridgeObjectRelease();
    id v85 = v146;
    uint64_t v88 = 0;
    uint64_t v87 = 0;
    goto LABEL_53;
  }
  sub_10006AD00();
  return sub_10006F770();
}

uint64_t sub_10005D4AC()
{
  sub_1000114D4();
  sub_1000114FC();
  *id v2 = v1;
  *id v2 = *v0;
  uint64_t v4 = *(void *)(v3 + 48);
  *(void *)(v1 + 656) = v4;
  if (v4) {
    swift_bridgeObjectRelease();
  }
  sub_1000115E8();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_10005D5E4()
{
  uint64_t v1 = *(void **)(v0 + 224);
  *(void *)(v0 + 664) = v1;
  id v2 = [v1 value];
  id v3 = [v2 valueType];

  id v4 = [v1 value];
  sub_100059CE4();
  NSString v5 = sub_10006F020();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, "wf_contentCollectionFromLinkValue:appBundleIdentifier:displayedBundleIdentifier:", v4, v5, 0);
  *(void *)(v0 + 672) = v6;

  id v7 = [v6 items];
  sub_10001028C(0, &qword_100082700);
  unint64_t v8 = sub_10006F0F0();
  *(void *)(v0 + 680) = v8;

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10006F6F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v0 + 688) = v9;
  if (!v9)
  {
    uint64_t v12 = *(void *)(v0 + 576);
    swift_bridgeObjectRelease();
    if (qword_1000819E8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 216) = _swiftEmptyArrayStorage;
    sub_10000772C(&qword_100082708);
    sub_1000698C8();
    sub_100057804();
    sub_10006DD90();
    uint64_t v13 = *(void **)(v0 + 672);
    uint64_t v14 = *(void **)(v0 + 664);
    uint64_t v15 = *(void **)(v0 + 648);
    NSString v16 = *(void **)(v0 + 640);
    uint64_t v41 = *(void **)(v0 + 632);
    sub_10006ABCC();
    int v39 = v17;
    uint64_t v42 = *(void **)(v0 + 592);
    unint64_t v43 = *(void *)(v0 + 600);
    int v40 = *(void **)(v0 + 584);
    uint64_t v44 = *(void **)(v0 + 568);
    id v18 = *(void **)(v0 + 560);
    int v19 = *(_DWORD *)(v0 + 760);
    NSString v20 = *(void **)(v0 + 536);
    if (v12)
    {

      sub_1000696F4(v40, v42, v43);
      id v21 = (void *)sub_10006AF84();
      sub_10006987C(v21, v22, v23, v39 != v19);
      swift_bridgeObjectRelease();
      sub_10005527C();
      v24();
      sub_1000556D0();
      v25();
      sub_10006A790();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_10006AEC4();
      __asm { BRAA            X1, X16 }
    }

    sub_1000696F4(v40, v42, v43);
    uint64_t v31 = (void *)sub_10006AF84();
    sub_10006987C(v31, v32, v33, v39 != v19);
    swift_bridgeObjectRelease();
    sub_10005527C();
    v34();
    sub_1000556D0();
    v35();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10006AEC4();
    __asm { BRAA            X3, X16 }
  }
  *(void *)(v0 + 696) = _swiftEmptyArrayStorage;
  uint64_t v10 = *(void *)(v0 + 680);
  if ((v10 & 0xC000000000000001) != 0) {
    id v11 = (id)sub_10006F620();
  }
  else {
    id v11 = *(id *)(v10 + 32);
  }
  *(void *)(v0 + 704) = v11;
  *(void *)(v0 + 712) = 1;
  uint64_t v28 = sub_10006F2B0();
  sub_10006A978(v28);
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 720) = v29;
  *uint64_t v29 = v0;
  v29[1] = sub_10005DC00;
  sub_10006AEC4();
  return WFContentItem.resolve(with:)();
}

uint64_t sub_10005DC00()
{
  sub_1000116F8();
  sub_100011474();
  uint64_t v3 = v2;
  sub_1000114FC();
  *id v4 = v3;
  uint64_t v5 = *v1;
  sub_1000114E0();
  *id v6 = v5;
  *(void *)(v3 + 728) = v0;
  swift_task_dealloc();
  sub_100053404(*(void *)(v3 + 264), &qword_1000826E0);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000115E8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10005DD48()
{
  sub_1000114F0();
  v1();
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v5 = *(void *)(v0 + 696);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v5 = sub_10006ACD8(isUniquelyReferenced_nonNull_native, *(void *)(v5 + 16) + 1, v3, v4, &qword_1000829A0, (uint64_t (*)(void))&type metadata accessor for TypedValue, (uint64_t (*)(void))&type metadata accessor for TypedValue, (void (*)(void))&type metadata accessor for TypedValue);
  }
  unint64_t v7 = *(void *)(v5 + 16);
  unint64_t v6 = *(void *)(v5 + 24);
  if (v7 >= v6 >> 1) {
    uint64_t v5 = sub_1000671C8(v6 > 1, v7 + 1, 1, v5, &qword_1000829A0, (uint64_t (*)(void))&type metadata accessor for TypedValue, (uint64_t (*)(void))&type metadata accessor for TypedValue, (void (*)(void))&type metadata accessor for TypedValue);
  }
  uint64_t v8 = *(void *)(v0 + 712);
  uint64_t v9 = *(void **)(v0 + 704);
  uint64_t v10 = *(void *)(v0 + 688);
  *(void *)(v5 + 16) = v7 + 1;
  sub_100055548();
  v11();

  sub_100055228();
  v12();
  if (v8 == v10)
  {
    uint64_t v13 = *(void *)(v0 + 728);
    swift_bridgeObjectRelease();
    if (qword_1000819E8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 216) = v5;
    sub_10000772C(&qword_100082708);
    sub_1000698C8();
    sub_10006AE8C();
    uint64_t v14 = *(void **)(v0 + 672);
    uint64_t v15 = *(void **)(v0 + 664);
    NSString v16 = *(void **)(v0 + 648);
    uint64_t v92 = *(void **)(v0 + 640);
    uint64_t v95 = *(void **)(v0 + 632);
    sub_10006ABCC();
    HIDWORD(v93) = v19;
    id v96 = *(id *)(v0 + 592);
    char v94 = *(void **)(v0 + 584);
    id v97 = *(void **)(v0 + 568);
    NSString v20 = *(void **)(v0 + 560);
    int v21 = *(_DWORD *)(v0 + 760);
    uint64_t v22 = *(void **)(v0 + 536);
    if (v13)
    {
      uint64_t v90 = *(void *)(v0 + 448);

      char v23 = HIDWORD(v93) != v21;
      sub_10006B058(v24, v25, v26, v27, v28, v29, v30, v31, v62, v63, v65, v67, v69, v71, v73, v75, v77, v79, v81,
        v83,
        v85,
        v87,
        v13,
        v90,
        (uint64_t)v92,
        v93,
        v94,
        (uint64_t)v95,
        v96);

      uint64_t v32 = (void *)sub_10006AF84();
      sub_10006987C(v32, v33, v34, v23);
      swift_bridgeObjectRelease();
      sub_100055B70();
      v35();
      sub_100055228();
      v36();
      sub_10006A790();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_10006AD34();
      __asm { BRAA            X1, X16 }
    }
    uint64_t v64 = v17;
    uint64_t v66 = v18;
    uint64_t v70 = *(void *)(v0 + 504);
    uint64_t v72 = *(void *)(v0 + 496);
    uint64_t v68 = *(void *)(v0 + 448);
    uint64_t v76 = *(void *)(v0 + 464);
    uint64_t v78 = *(void *)(v0 + 440);
    uint64_t v80 = *(void *)(v0 + 416);
    uint64_t v82 = *(void *)(v0 + 392);
    uint64_t v84 = *(void *)(v0 + 368);
    uint64_t v86 = *(void *)(v0 + 344);
    uint64_t v88 = *(void *)(v0 + 320);
    uint64_t v89 = *(void *)(v0 + 296);
    uint64_t v91 = *(void *)(v0 + 288);
    uint64_t v74 = *(void *)(v0 + 264);

    char v42 = HIDWORD(v93) != v21;
    sub_10006B058(v43, v44, v45, v46, v47, v48, v49, v50, v62, v64, v66, v68, v70, v72, v74, v76, v78, v80, v82,
      v84,
      v86,
      v88,
      v89,
      v91,
      (uint64_t)v92,
      v93,
      v94,
      (uint64_t)v95,
      v96);

    uint64_t v51 = (void *)sub_10006AF84();
    sub_10006987C(v51, v52, v53, v42);
    swift_bridgeObjectRelease();
    sub_100055B70();
    v54();
    sub_100055228();
    v55();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10006AD34();
    __asm { BRAA            X3, X16 }
  }
  uint64_t v39 = *(void *)(v0 + 712);
  *(void *)(v0 + 696) = v5;
  uint64_t v40 = *(void *)(v0 + 680);
  if ((v40 & 0xC000000000000001) != 0) {
    id v41 = (id)sub_10006F620();
  }
  else {
    id v41 = *(id *)(v40 + 8 * v39 + 32);
  }
  *(void *)(v0 + 704) = v41;
  *(void *)(v0 + 712) = v39 + 1;
  if (__OFADD__(v39, 1)) {
    __break(1u);
  }
  uint64_t v58 = sub_10006F2B0();
  sub_10006A978(v58);
  uint64_t v59 = (void *)swift_task_alloc();
  *(void *)(v0 + 720) = v59;
  *uint64_t v59 = v0;
  v59[1] = sub_10005DC00;
  sub_10006AD34();
  return WFContentItem.resolve(with:)();
}

uint64_t sub_10005E36C()
{
  uint64_t v1 = *(void **)(v0 + 648);
  uint64_t v2 = *(void **)(v0 + 640);
  uint64_t v13 = *(void *)(v0 + 616);
  uint64_t v11 = *(void **)(v0 + 632);
  uint64_t v12 = *(void **)(v0 + 608);
  NSString v16 = *(void **)(v0 + 592);
  unint64_t v17 = *(void *)(v0 + 600);
  uint64_t v14 = *(void **)(v0 + 584);
  uint64_t v15 = *(void *)(v0 + 624);
  uint64_t v3 = *(void **)(v0 + 568);
  uint64_t v4 = *(void **)(v0 + 560);
  uint64_t v5 = *(void **)(v0 + 536);
  char v6 = *(_DWORD *)(v0 + 764) != *(_DWORD *)(v0 + 760);
  swift_willThrow();

  sub_10006987C(v12, v13, v15, v6);
  sub_1000696F4(v14, v16, v17);
  sub_10006AAA8();
  v7();
  sub_100055240();
  v8();
  sub_10006AA34();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10006ADC8();
  return v9();
}

uint64_t sub_10005E570()
{
  uint64_t v1 = *(void **)(v0 + 704);
  uint64_t v2 = *(void **)(v0 + 672);
  uint64_t v3 = *(void **)(v0 + 664);
  uint64_t v4 = *(void **)(v0 + 648);
  uint64_t v12 = *(void **)(v0 + 640);
  uint64_t v13 = *(void **)(v0 + 632);
  uint64_t v15 = *(void **)(v0 + 608);
  uint64_t v16 = *(void *)(v0 + 616);
  int v14 = *(_DWORD *)(v0 + 764);
  int v21 = *(void **)(v0 + 592);
  unint64_t v22 = *(void *)(v0 + 600);
  uint64_t v18 = *(void **)(v0 + 584);
  uint64_t v19 = *(void *)(v0 + 624);
  uint64_t v5 = *(void **)(v0 + 568);
  int v6 = *(_DWORD *)(v0 + 760);
  unint64_t v7 = *(void **)(v0 + 536);
  uint64_t v20 = *(void *)(v0 + 472);
  uint64_t v8 = *(void *)(v0 + 456);
  uint64_t v17 = *(void *)(v0 + 448);

  sub_10006987C(v15, v16, v19, v14 != v6);
  sub_1000696F4(v18, v21, v22);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v20, v17);
  sub_10005527C();
  v9();
  sub_10006AA34();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10006ADC8();
  return v10();
}

uint64_t sub_10005E79C()
{
  sub_10006B168();
  sub_10000772C(&qword_100081AA8);
  uint64_t v2 = sub_10006AE5C();
  *uint64_t v3 = v0;
  return _swift_continuation_throwingResumeWithError(v1, v2);
}

uint64_t sub_10005E888(void *a1, void *a2, void *aBlock)
{
  v3[2] = _Block_copy(aBlock);
  if (a1)
  {
    id v6 = a1;
    id v7 = a2;
    a1 = (void *)sub_10006DE20();
    unint64_t v9 = v8;
  }
  else
  {
    id v10 = a2;
    unint64_t v9 = 0xF000000000000000;
  }
  v3[3] = a1;
  v3[4] = v9;
  uint64_t v11 = sub_10006DE20();
  uint64_t v13 = v12;

  v3[5] = v11;
  v3[6] = v13;
  int v14 = (void *)swift_task_alloc();
  v3[7] = v14;
  *int v14 = v3;
  v14[1] = sub_10005E994;
  return static ToolKitHelper.runLinkQuery(_:encodedValueSet:)();
}

uint64_t sub_10005E994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10006AB60();
  sub_100059790();
  sub_10006A654();
  uint64_t v14 = v13;
  sub_1000114E0();
  *uint64_t v15 = v14;
  *uint64_t v15 = *v11;
  swift_task_dealloc();
  sub_10006AE80();
  unint64_t v17 = v12[4];
  uint64_t v18 = (void *)v12[3];
  sub_10005172C(v12[5], *(void *)(v16 + 48));
  sub_100051718((uint64_t)v18, v17);
  if (v10)
  {
    sub_10006DDB0();
    sub_10006AA5C();
    sub_10006AE20();
  }
  else
  {
    sub_10006AAB4();
    sub_10006A820();
    sub_10006AE74();
  }
  uint64_t v19 = *(const void **)(v14 + 16);
  uint64_t v20 = sub_10006A6C8();
  v21(v20);

  _Block_release(v19);
  sub_10006A9E8();
  sub_10006AB0C();
  return v23(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

uint64_t static ToolKitHelper.decodeSearchString(in:)()
{
  sub_10006DD70();
  sub_10001148C();
  __chkstk_darwin(v1);
  sub_10006ABA0(v2, v22);
  uint64_t v3 = sub_10006E920();
  sub_10001148C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100016530();
  uint64_t v9 = v8 - v7;
  sub_10006ED60();
  sub_10001148C();
  __chkstk_darwin(v10);
  sub_100057A84();
  uint64_t v11 = sub_10006EF90();
  sub_10001148C();
  uint64_t v23 = v12;
  __chkstk_darwin(v13);
  sub_10006AF48();
  if (qword_1000819E0 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_100082670;
  sub_10006A578(&qword_100082730, (void (*)(uint64_t))&type metadata accessor for Query);
  sub_10006DD80();
  if (!v24)
  {
    sub_10006EF80();
    sub_10006ACF4();
    if (v15() == enum case for AnyPredicate.stringSearch(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 96))(v9, v3);
      sub_100055548();
      v16();
      uint64_t v14 = sub_10006ED50();
      sub_100055228();
      v17();
      sub_1000551DC();
      v18();
    }
    else
    {
      sub_100055228();
      v19();
      sub_100066D20((uint64_t)_swiftEmptyArrayStorage);
      sub_10006A578(&qword_1000826D0, (void (*)(uint64_t))&type metadata accessor for POSIXError);
      sub_10006B154();
      sub_10006DDA0();
      uint64_t v14 = v3;
      sub_10006DD60();
      sub_1000551DC();
      v20();
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v0, v11);
    }
  }
  return v14;
}

uint64_t static ToolKitHelper.produceEncodedTypedValue(collection:for:)()
{
  sub_1000114D4();
  v0[3] = v1;
  v0[4] = v2;
  v0[2] = v3;
  uint64_t v4 = sub_10006E040();
  sub_100055A7C(v4);
  v0[5] = sub_10005558C();
  uint64_t v5 = sub_10000772C(&qword_100082740);
  sub_100055A7C(v5);
  v0[6] = sub_10005558C();
  uint64_t v6 = sub_10006E880();
  v0[7] = v6;
  sub_100016518(v6);
  v0[8] = v7;
  v0[9] = sub_10005558C();
  uint64_t v8 = sub_10006E960();
  v0[10] = v8;
  sub_100016518(v8);
  v0[11] = v9;
  v0[12] = sub_1000551C0();
  v0[13] = swift_task_alloc();
  sub_1000115E8();
  return _swift_task_switch(v10, v11, v12);
}

uint64_t sub_10005F048()
{
  sub_10006A9F8();
  sub_100056CA8();
  if (qword_1000819E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 32);
  sub_10006A578(&qword_100082748, (void (*)(uint64_t))&type metadata accessor for TypeInstance);
  sub_10006AB34();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100055AFC();
    sub_10006A77C();
    return v3(v2, v3, v4, v5, v6, v7, v8, v9);
  }
  else
  {
    sub_1000114F0();
    v11();
    sub_10006E030();
    sub_100056A90();
    sub_10006F3E0();
    uint64_t v12 = sub_10006F3F0();
    sub_10006B134(v12);
    swift_task_alloc();
    sub_100058568();
    *(void *)(v0 + 112) = v13;
    void *v13 = v14;
    v13[1] = sub_10005F204;
    sub_10006A77C();
    return WFContentCollection.resolve(with:)(v15, v16, v17, v18, v19, v20, v21, v22);
  }
}

uint64_t sub_10005F204()
{
  sub_1000114D4();
  sub_100011474();
  sub_1000114FC();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 48);
  uint64_t v6 = *v1;
  sub_1000114E0();
  *uint64_t v7 = v6;
  *(void *)(v8 + 120) = v0;
  swift_task_dealloc();
  sub_100053404(v5, &qword_100082740);
  sub_1000115E8();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_10005F304()
{
  if (qword_1000819E8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 120);
  sub_10006A578(&qword_100082718, (void (*)(uint64_t))&type metadata accessor for TypedValue);
  sub_10006A760();
  if (v1)
  {
    sub_10001162C();
    v2();
    sub_10001162C();
    v3();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100055AFC();
    return v4();
  }
  else
  {
    sub_10005521C();
    v6();
    sub_100056610();
    sub_100055228();
    v7();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = sub_10006A710();
    return v9(v8);
  }
}

uint64_t sub_10005F4E8()
{
  sub_10006A9F8();
  sub_100056CA8();
  sub_10001162C();
  v0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000115DC();
  sub_10006A77C();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_10005F5A4(void *a1, void *a2, void *aBlock)
{
  v3[2] = a1;
  v3[3] = _Block_copy(aBlock);
  id v6 = a1;
  id v7 = a2;
  uint64_t v8 = sub_10006DE20();
  uint64_t v10 = v9;

  v3[4] = v8;
  v3[5] = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  v3[6] = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_10005F684;
  return static ToolKitHelper.produceEncodedTypedValue(collection:for:)();
}

uint64_t sub_10005F684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10006AB60();
  sub_100059790();
  sub_10006A654();
  uint64_t v14 = v13;
  sub_1000114E0();
  *uint64_t v15 = v14;
  uint64_t v16 = *(void **)(v12 + 16);
  *uint64_t v15 = *v11;
  swift_task_dealloc();

  sub_10006AE80();
  sub_10005172C(*(void *)(v12 + 32), *(void *)(v17 + 40));
  if (v10)
  {
    sub_10006DDB0();
    sub_10006AA5C();
    sub_10006AE20();
  }
  else
  {
    sub_10006AAB4();
    sub_10006A820();
    sub_10006AE74();
  }
  uint64_t v18 = *(const void **)(v14 + 24);
  uint64_t v19 = sub_10006A6C8();
  v20(v19);

  _Block_release(v18);
  sub_10006A9E8();
  sub_10006AB0C();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10);
}

uint64_t static ToolKitHelper.produceEncodedTypedPossibleValues(contentProperty:)()
{
  sub_1000114D4();
  v0[21] = v1;
  uint64_t v2 = sub_10006DD70();
  v0[22] = v2;
  sub_100016518(v2);
  v0[23] = v3;
  v0[24] = sub_10005558C();
  uint64_t v4 = sub_10000772C(&qword_1000826E0);
  sub_100055A7C(v4);
  v0[25] = sub_10005558C();
  uint64_t v5 = sub_10006E880();
  v0[26] = v5;
  sub_100016518(v5);
  v0[27] = v6;
  v0[28] = sub_10005558C();
  sub_1000115E8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10005F8A4()
{
  sub_1000116F8();
  id v1 = [*(id *)(v0 + 168) possibleValues];
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 152;
  *(void *)(v0 + 24) = sub_10005F9C0;
  uint64_t v2 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1000602EC;
  *(void *)(v0 + 104) = &unk_10007ECB8;
  *(void *)(v0 + 112) = v2;
  [v1 getValuesWithCompletionBlock:v0 + 80];
  swift_unknownObjectRelease();
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_10005F9C0()
{
  sub_1000114D4();
  sub_10006A9D4();
  uint64_t v1 = *v0;
  sub_1000114E0();
  *uint64_t v2 = v1;
  sub_1000115E8();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10005FA70()
{
  sub_10006A9F8();
  sub_100056CA8();
  uint64_t v1 = *(void *)(v0 + 152);
  *(void *)(v0 + 232) = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 240) = v2;
  if (v2)
  {
    uint64_t v3 = sub_10001028C(0, &qword_100082700);
    *(void *)(v0 + 256) = 0;
    *(void *)(v0 + 264) = _swiftEmptyArrayStorage;
    *(void *)(v0 + 248) = v3;
    sub_100009038(v1 + 32, v0 + 120);
    id v4 = sub_1000603C0((void *)(v0 + 120));
    *(void *)(v0 + 272) = v4;
    if (v4)
    {
      uint64_t v5 = sub_10006F2B0();
      sub_10006A978(v5);
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 280) = v6;
      *uint64_t v6 = v0;
      v6[1] = sub_10005FD60;
      sub_10006A77C();
      return WFContentItem.resolve(with:)(v7, v8, v9, v10, v11, v12, v13, v14);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_DWORD *)(v0 + 296) = 22;
    sub_100066D20((uint64_t)_swiftEmptyArrayStorage);
    sub_10006A578(&qword_1000826D0, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    sub_10006ADE8();
    sub_10006DDA0();
    sub_10006DD60();
    sub_100011758();
    sub_1000553C4();
    v15();
    swift_willThrow();
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  if (qword_1000819E8 != -1) {
    swift_once();
  }
  *(void *)(v0 + 160) = _swiftEmptyArrayStorage;
  sub_10000772C(&qword_100082708);
  sub_1000698C8();
  sub_10006AB80();
  if (v0 != -160)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1000115DC();
    sub_10006A77C();
    return v17(v16, v17, v18, v19, v20, v21, v22, v23);
  }
  sub_10006ABC0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10006B018();
  sub_100057804();
  sub_10006A77C();
  return v27(v24, v25, v26, v27, v28, v29, v30, v31);
}

uint64_t sub_10005FD60()
{
  sub_1000116F8();
  sub_100011474();
  uint64_t v3 = v2;
  sub_1000114FC();
  *id v4 = v3;
  uint64_t v5 = *v1;
  sub_1000114E0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 288) = v0;
  swift_task_dealloc();
  sub_100053404(*(void *)(v3 + 200), &qword_1000826E0);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000115E8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10005FE7C()
{
  sub_100059790();
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = *(void *)(v0 + 264);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v4 = sub_10006ACD8(isUniquelyReferenced_nonNull_native, *(void *)(v4 + 16) + 1, v2, v3, &qword_1000829A0, (uint64_t (*)(void))&type metadata accessor for TypedValue, (uint64_t (*)(void))&type metadata accessor for TypedValue, (void (*)(void))&type metadata accessor for TypedValue);
  }
  unint64_t v6 = *(void *)(v4 + 16);
  unint64_t v5 = *(void *)(v4 + 24);
  if (v6 >= v5 >> 1) {
    uint64_t v4 = sub_1000671C8(v5 > 1, v6 + 1, 1, v4, &qword_1000829A0, (uint64_t (*)(void))&type metadata accessor for TypedValue, (uint64_t (*)(void))&type metadata accessor for TypedValue, (void (*)(void))&type metadata accessor for TypedValue);
  }
  uint64_t v7 = *(void **)(v0 + 272);
  uint64_t v8 = *(void *)(v0 + 240);
  uint64_t v10 = *(void *)(v0 + 216);
  uint64_t v9 = *(void *)(v0 + 224);
  uint64_t v11 = *(void *)(v0 + 208);
  uint64_t v12 = *(void *)(v0 + 256) + 1;
  *(void *)(v4 + 16) = v6 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 32))(v4+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v6, v9, v11);

  if (v12 == v8)
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v0 + 288);
    if (qword_1000819E8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 160) = v4;
    sub_10000772C(&qword_100082708);
    sub_1000698C8();
    sub_10006AE8C();
    if (!v13)
    {
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_10006B018();
      sub_100056304();
      sub_100058910();
      __asm { BRAA            X3, X16 }
    }
    swift_bridgeObjectRelease();
LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1000115DC();
    sub_100058910();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v14 = *(void *)(v0 + 256) + 1;
  *(void *)(v0 + 256) = v14;
  *(void *)(v0 + 264) = v4;
  sub_100009038(*(void *)(v0 + 232) + 32 * v14 + 32, v0 + 120);
  id v15 = sub_1000603C0((void *)(v0 + 120));
  *(void *)(v0 + 272) = v15;
  if (!v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_DWORD *)(v0 + 296) = 22;
    sub_100066D20((uint64_t)_swiftEmptyArrayStorage);
    sub_10006A578(&qword_1000826D0, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    sub_100011764();
    sub_10006DDA0();
    sub_10006DD60();
    sub_1000553C4();
    v21();
    swift_willThrow();
    goto LABEL_18;
  }
  uint64_t v16 = sub_10006F2B0();
  sub_10006A978(v16);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_10005FD60;
  sub_100058910();
  return WFContentItem.resolve(with:)();
}

uint64_t sub_10006026C()
{
  sub_1000116F8();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000115DC();
  return v1();
}

uint64_t sub_1000602EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = sub_10006F0F0();
  return sub_100060344(v1, v2, (uint64_t (*)(void))&_swift_continuation_resume);
}

uint64_t sub_100060344(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  **(void **)(*(void *)(a1 + 64) + 40) = a2;
  return a3();
}

uint64_t sub_100060368(uint64_t a1, uint64_t a2)
{
  sub_1000699B8(a2, *(void *)(*(void *)(a1 + 64) + 40));
  return _swift_continuation_resume(a1);
}

id sub_1000603C0(void *a1)
{
  sub_1000530E4(a1, a1[3]);
  uint64_t v2 = sub_10006F760();
  id v3 = [(id)swift_getObjCClassFromMetadata() itemWithObject:v2];
  swift_unknownObjectRelease();
  sub_100052558((uint64_t)a1);
  return v3;
}

uint64_t sub_100060458(void *a1, void *aBlock)
{
  v2[2] = a1;
  v2[3] = _Block_copy(aBlock);
  a1;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100060508;
  return static ToolKitHelper.produceEncodedTypedPossibleValues(contentProperty:)();
}

uint64_t sub_100060508()
{
  sub_10006A9F8();
  sub_100056CA8();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  sub_100011474();
  uint64_t v6 = v5;
  sub_1000114FC();
  *uint64_t v7 = v6;
  uint64_t v9 = *(void **)(v8 + 16);
  uint64_t v10 = *v1;
  sub_1000114E0();
  *uint64_t v11 = v10;
  swift_task_dealloc();

  if (v2)
  {
    sub_10006DDB0();
    sub_10006AA5C();
    uint64_t v12 = v4;
  }
  else
  {
    sub_10006AAB4();
    sub_10006A820();
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(const void **)(v6 + 24);
  uint64_t v14 = sub_10006A6C8();
  v15(v14);

  _Block_release(v13);
  sub_1000115DC();
  sub_10006A77C();
  return v17(v16, v17, v18, v19, v20, v21, v22, v23);
}

uint64_t static ToolKitHelper.produceEncodedTypedValues(states:of:in:)()
{
  sub_1000114D4();
  v0[4] = v1;
  v0[5] = v2;
  v0[3] = v3;
  uint64_t v4 = sub_10006E880();
  v0[6] = v4;
  sub_100016518(v4);
  v0[7] = v5;
  v0[8] = sub_1000551C0();
  v0[9] = swift_task_alloc();
  uint64_t v6 = sub_10006E9E0();
  v0[10] = v6;
  sub_100016518(v6);
  v0[11] = v7;
  v0[12] = sub_10005558C();
  sub_1000115E8();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_100060700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10006A9F8();
  sub_100056CA8();
  unint64_t v13 = v12[3];
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_10006F6F0();
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v12[13] = v14;
  if (v14)
  {
    uint64_t v15 = self;
    v12[14] = v15;
    v12[15] = _swiftEmptyArrayStorage;
    uint64_t v16 = v12[3];
    if ((v16 & 0xC000000000000001) != 0)
    {
      id v17 = (id)sub_10006F620();
      uint64_t v18 = (void *)v12[14];
    }
    else
    {
      uint64_t v18 = (void *)v15;
      id v17 = *(id *)(v16 + 32);
    }
    v12[16] = v17;
    v12[17] = 1;
    v12[18] = [v18 defaultContext];
    uint64_t v19 = (void *)swift_task_alloc();
    v12[19] = v19;
    *uint64_t v19 = v12;
    v19[1] = sub_100060974;
    sub_10006AF90();
    sub_10006A77C();
    return WFParameter.toolkitTypeDefinition(for:localizationContext:)(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10, a11, a12);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1000819E8 != -1) {
      swift_once();
    }
    void v12[2] = _swiftEmptyArrayStorage;
    sub_10000772C(&qword_100082708);
    sub_1000698C8();
    sub_100011758();
    sub_10006DD90();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10006A710();
    sub_10006A77C();
    return v31(v28, v29, v30, v31, v32, v33, v34, v35);
  }
}

uint64_t sub_100060974()
{
  sub_1000116F8();
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  sub_1000114E0();
  *uint64_t v4 = v3;
  uint64_t v5 = (void *)*v1;
  *uint64_t v4 = *v1;
  v3[20] = v0;
  swift_task_dealloc();
  uint64_t v6 = (void *)v2[18];
  if (v0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000115E8();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {

    uint64_t v10 = (void *)swift_task_alloc();
    v3[21] = v10;
    uint64_t v11 = sub_10000772C(&qword_100082760);
    *uint64_t v10 = v5;
    v10[1] = sub_100060B30;
    uint64_t v12 = v3[12];
    uint64_t v13 = v3[9];
    uint64_t v14 = v3[4];
    uint64_t v15 = v3[5];
    return WFParameterState.toolkitTypedValue(in:of:with:)(v13, v14, v15, v12, v11);
  }
}

uint64_t sub_100060B30()
{
  sub_1000114D4();
  sub_100011474();
  uint64_t v3 = v2;
  sub_1000114FC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1000114E0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000115E8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_100060C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_100011704();
  sub_10006B104();
  sub_1000114F0();
  v15();
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *(void *)(v14 + 120);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v19 = sub_10006ACD8(isUniquelyReferenced_nonNull_native, *(void *)(v19 + 16) + 1, v17, v18, &qword_1000829A0, (uint64_t (*)(void))&type metadata accessor for TypedValue, (uint64_t (*)(void))&type metadata accessor for TypedValue, (void (*)(void))&type metadata accessor for TypedValue);
  }
  unint64_t v21 = *(void *)(v19 + 16);
  unint64_t v20 = *(void *)(v19 + 24);
  unint64_t v22 = v21 + 1;
  if (v21 >= v20 >> 1)
  {
    uint64_t v56 = sub_1000671C8(v20 > 1, v21 + 1, 1, v19, &qword_1000829A0, (uint64_t (*)(void))&type metadata accessor for TypedValue, (uint64_t (*)(void))&type metadata accessor for TypedValue, (void (*)(void))&type metadata accessor for TypedValue);
    unint64_t v22 = v21 + 1;
    uint64_t v19 = v56;
  }
  uint64_t v23 = *(void **)(v14 + 128);
  uint64_t v57 = *(void *)(v14 + 104);
  uint64_t v58 = *(void *)(v14 + 136);
  *(void *)(v19 + 16) = v22;
  sub_100055548();
  v24();

  sub_100055240();
  v25();
  sub_100059C84();
  sub_10006AAA8();
  v26();
  if (v58 == v57)
  {
    uint64_t v27 = *(void *)(v14 + 176);
    swift_bridgeObjectRelease();
    if (qword_1000819E8 != -1) {
      swift_once();
    }
    *(void *)(v14 + 16) = v19;
    sub_10000772C(&qword_100082708);
    sub_1000698C8();
    sub_10006AE8C();
    if (v27)
    {
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_100055AFC();
      sub_100011590();
      return v29(v28, v29, v30, v31, v32, v33, v34, v35, v57, v58, a11, a12, a13, a14);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_10006B0C4();
      sub_100011590();
      return v50(v47, v48, v49, v50, v51, v52, v53, v54, v57, v58, a11, a12, a13, a14);
    }
  }
  else
  {
    uint64_t v37 = *(void *)(v14 + 136);
    *(void *)(v14 + 120) = v19;
    uint64_t v38 = *(void *)(v14 + 24);
    if ((v38 & 0xC000000000000001) != 0) {
      id v39 = (id)sub_10006F620();
    }
    else {
      id v39 = *(id *)(v38 + 8 * v37 + 32);
    }
    *(void *)(v14 + 128) = v39;
    *(void *)(v14 + 136) = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
    }
    else
    {
      *(void *)(v14 + 144) = [*(id *)(v14 + 112) defaultContext];
      uint64_t v55 = (void *)swift_task_alloc();
      *(void *)(v14 + 152) = v55;
      *uint64_t v55 = v14;
      v55[1] = sub_100060974;
      sub_10006AF90();
      sub_100011590();
    }
    return WFParameter.toolkitTypeDefinition(for:localizationContext:)(v39, v40, v41, v42, v43, v44, v45, v46, v57, v58, a11, a12);
  }
}

uint64_t sub_100060FB4()
{
  sub_1000116F8();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000115DC();
  return v1();
}

uint64_t sub_100061034()
{
  sub_1000116F8();

  uint64_t v1 = sub_10006A9BC();
  v2(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000115DC();
  return v3();
}

uint64_t sub_100061164(int a1, void *a2, void *a3, void *aBlock)
{
  v4[2] = a2;
  v4[3] = a3;
  v4[4] = _Block_copy(aBlock);
  sub_10000772C(&qword_100082760);
  v4[5] = sub_10006F0F0();
  id v7 = a2;
  a3;
  uint64_t v8 = (void *)swift_task_alloc();
  v4[6] = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_100061254;
  return static ToolKitHelper.produceEncodedTypedValues(states:of:in:)();
}

uint64_t sub_100061254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10006AB60();
  sub_100059790();
  uint64_t v12 = v10;
  uint64_t v14 = v13;
  sub_100011474();
  uint64_t v16 = v15;
  sub_1000114FC();
  *uint64_t v17 = v16;
  uint64_t v19 = *(void **)(v18 + 24);
  unint64_t v20 = *(void **)(v18 + 16);
  uint64_t v21 = *v11;
  sub_1000114E0();
  *unint64_t v22 = v21;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v12)
  {
    sub_10006DDB0();
    sub_10006AA5C();
    uint64_t v23 = v14;
  }
  else
  {
    sub_10006AAB4();
    sub_10006A820();
    uint64_t v23 = 0;
  }
  uint64_t v24 = *(const void **)(v16 + 32);
  uint64_t v25 = sub_10006A6C8();
  v26(v25);

  _Block_release(v24);
  sub_1000115DC();
  sub_10006AB0C();
  return v28(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10);
}

uint64_t static ToolKitHelper.produceEncodedDisplayRepresentation(for:)()
{
  sub_1000114D4();
  v0[2] = v1;
  v0[3] = v2;
  uint64_t v3 = sub_10000772C(&qword_100082770);
  sub_100055A7C(v3);
  v0[4] = sub_10005558C();
  uint64_t v4 = sub_10006EC90();
  v0[5] = v4;
  sub_100016518(v4);
  v0[6] = v5;
  v0[7] = sub_10005558C();
  uint64_t v6 = sub_10000772C(&qword_100082778);
  sub_100055A7C(v6);
  v0[8] = sub_10005558C();
  uint64_t v7 = sub_10006ECD0();
  v0[9] = v7;
  sub_100016518(v7);
  v0[10] = v8;
  v0[11] = sub_10005558C();
  uint64_t v9 = sub_10006DD70();
  v0[12] = v9;
  sub_100016518(v9);
  v0[13] = v10;
  v0[14] = sub_10005558C();
  uint64_t v11 = sub_10006E040();
  v0[15] = v11;
  sub_100016518(v11);
  v0[16] = v12;
  v0[17] = sub_10005558C();
  uint64_t v13 = sub_10000772C(&qword_100082148);
  sub_100055A7C(v13);
  v0[18] = sub_10005558C();
  uint64_t v14 = sub_10006EC50();
  v0[19] = v14;
  sub_100016518(v14);
  v0[20] = v15;
  v0[21] = sub_10005558C();
  uint64_t v16 = sub_10006E990();
  v0[22] = v16;
  sub_100016518(v16);
  v0[23] = v17;
  v0[24] = sub_10005558C();
  uint64_t v18 = sub_10006ECB0();
  v0[25] = v18;
  sub_100016518(v18);
  v0[26] = v19;
  v0[27] = sub_10005558C();
  uint64_t v20 = sub_10006EC30();
  v0[28] = v20;
  sub_100016518(v20);
  v0[29] = v21;
  v0[30] = sub_1000551C0();
  v0[31] = swift_task_alloc();
  sub_1000115E8();
  return _swift_task_switch(v22, v23, v24);
}

uint64_t sub_100061608()
{
  if (qword_1000819E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 24);
  sub_10006A578(&qword_100082780, (void (*)(uint64_t))&type metadata accessor for DisplayRepresentation.ResolvingRequest);
  sub_10006AB34();
  if (v1)
  {
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1000115DC();
    sub_10006A8C4();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v2 = *(void *)(v0 + 208);
  sub_10001028C(0, &qword_100082788);
  sub_10001028C(0, &qword_100082700);
  sub_10006EC20();
  uint64_t v3 = sub_10006ECA0();
  unint64_t v5 = v4;
  *(void *)(v0 + 256) = *(void *)(v2 + 8);
  *(void *)(v0 + 264) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  sub_100055234();
  v6();
  uint64_t v7 = sub_10006F360();
  *(void *)(v0 + 272) = v7;
  *(void *)(v0 + 280) = 0;
  uint64_t v10 = (void *)v7;
  sub_10005172C(v3, v5);
  if (!v10)
  {
    *(_DWORD *)(v0 + 312) = 22;
    sub_100066D20((uint64_t)_swiftEmptyArrayStorage);
    sub_10006A578(&qword_1000826D0, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    sub_10006B0C4();
    sub_10006DDA0();
    sub_10006DD60();
    sub_100055240();
    v20();
    swift_willThrow();
    sub_1000556D0();
    v21();
    goto LABEL_5;
  }
  uint64_t v12 = *(void *)(v0 + 232);
  uint64_t v11 = *(void *)(v0 + 240);
  uint64_t v13 = *(void *)(v0 + 224);
  sub_1000114F0();
  v14();
  int v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 88))(v11, v13);
  if (v15 == enum case for DisplayRepresentation.ResolvingRequest.subtitle(_:))
  {
    sub_10006A8AC();
    v16();
    swift_task_alloc();
    sub_100058568();
    *(void *)(v0 + 296) = v17;
    *uint64_t v17 = v18;
    v17[1] = sub_100062140;
    sub_10006A8C4();
    return WFContentItem.asyncDisplaySubtitle()();
  }
  if (v15 == enum case for DisplayRepresentation.ResolvingRequest.altText(_:))
  {
    sub_10006A8AC();
    v22();
    swift_task_alloc();
    sub_100058568();
    *(void *)(v0 + 304) = v23;
    *uint64_t v23 = v24;
    v23[1] = sub_100062560;
    sub_10006A8C4();
    return WFContentItem.asyncDisplayAltText()();
  }
  if (v15 != enum case for DisplayRepresentation.ResolvingRequest.image(_:))
  {
    uint64_t v36 = *(void *)(v0 + 232);
    *(_DWORD *)(v0 + 316) = 22;
    sub_100066D20((uint64_t)_swiftEmptyArrayStorage);
    sub_10006A578(&qword_1000826D0, (void (*)(uint64_t))&type metadata accessor for POSIXError);
    sub_10006B0C4();
    sub_10006DDA0();
    sub_10006DD60();
    sub_1000553C4();
    v37();
    swift_willThrow();

    uint64_t v38 = *(void (**)(void))(v36 + 8);
    sub_100055228();
    v38();
    sub_100055228();
    v38();
    goto LABEL_5;
  }
  uint64_t v26 = *(void *)(v0 + 240);
  uint64_t v28 = *(void *)(v0 + 184);
  uint64_t v27 = *(void *)(v0 + 192);
  uint64_t v29 = *(void *)(v0 + 176);
  uint64_t v30 = sub_1000596B0();
  v31(v30);
  uint64_t v32 = sub_10000772C(&qword_1000827A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v27, v26 + *(int *)(v32 + 48), v29);
  sub_10006E980();
  sub_10006E030();
  swift_task_alloc();
  sub_100058568();
  *(void *)(v0 + 288) = v33;
  void *v33 = v34;
  v33[1] = sub_100061C48;
  sub_10006A8C4();
  return WFContentItem.asyncDisplayImage(with:displayRepresentationConfig:)();
}

uint64_t sub_100061C48()
{
  sub_1000116F8();
  sub_100011474();
  uint64_t v1 = *v0;
  sub_1000114E0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = sub_10006A9BC();
  v4(v3);
  sub_1000115E8();
  return _swift_task_switch(v5, v6, v7);
}

#error "1000620F0: call analysis failed (funcsize=244)"

uint64_t sub_100062140()
{
  sub_1000114D4();
  sub_100011474();
  uint64_t v1 = *v0;
  sub_1000114E0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1000115E8();
  return _swift_task_switch(v3, v4, v5);
}

#error "100062510: call analysis failed (funcsize=209)"

uint64_t sub_100062560()
{
  sub_1000114D4();
  sub_100011474();
  uint64_t v1 = *v0;
  sub_1000114E0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1000115E8();
  return _swift_task_switch(v3, v4, v5);
}

#error "100062928: call analysis failed (funcsize=207)"

uint64_t sub_100062998(uint64_t a1, int a2, void *a3, void *aBlock)
{
  uint64_t v6 = _Block_copy(aBlock);
  sub_10006ADF8();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a3;
  v7[3] = v6;
  v7[4] = a1;
  id v8 = a3;
  sub_10006AE2C();
  return sub_100059F5C();
}

uint64_t sub_100062A0C(void *a1, void *aBlock)
{
  v2[2] = _Block_copy(aBlock);
  id v4 = a1;
  uint64_t v5 = sub_10006DE20();
  uint64_t v7 = v6;

  v2[3] = v5;
  v2[4] = v7;
  id v8 = (void *)swift_task_alloc();
  v2[5] = v8;
  *id v8 = v2;
  v8[1] = sub_100062AD8;
  return static ToolKitHelper.produceEncodedDisplayRepresentation(for:)();
}

uint64_t sub_100062AD8()
{
  sub_100056CA8();
  sub_10006A654();
  uint64_t v4 = v3;
  sub_1000114E0();
  *uint64_t v5 = v4;
  *uint64_t v5 = *v1;
  swift_task_dealloc();
  sub_10006AE80();
  sub_10005172C(*(void *)(v2 + 24), *(void *)(v6 + 32));
  if (v0)
  {
    sub_10006DDB0();
    sub_10006AA5C();
    sub_10006AE20();
  }
  else
  {
    sub_10006AAB4();
    sub_10006A820();
    sub_10006AE74();
  }
  uint64_t v7 = *(const void **)(v4 + 16);
  uint64_t v8 = sub_10006A6C8();
  v9(v8);

  _Block_release(v7);
  sub_10006A9E8();
  return v10();
}

uint64_t static ToolKitHelper.resolveDeferredValue(for:encodedExpectedType:)()
{
  sub_1000114D4();
  v0[43] = v1;
  v0[44] = v2;
  v0[41] = v3;
  v0[42] = v4;
  uint64_t v5 = sub_10000772C(&qword_1000827B8);
  v0[45] = v5;
  sub_100055A7C(v5);
  v0[46] = sub_10005558C();
  uint64_t v6 = sub_10006E040();
  sub_100055A7C(v6);
  v0[47] = sub_10005558C();
  uint64_t v7 = sub_10000772C(&qword_100082740);
  sub_100055A7C(v7);
  v0[48] = sub_10005558C();
  uint64_t v8 = sub_10006E880();
  v0[49] = v8;
  sub_100016518(v8);
  v0[50] = v9;
  v0[51] = sub_1000551C0();
  v0[52] = swift_task_alloc();
  v0[53] = swift_task_alloc();
  uint64_t v10 = sub_10006E960();
  v0[54] = v10;
  sub_100016518(v10);
  v0[55] = v11;
  v0[56] = sub_1000551C0();
  v0[57] = swift_task_alloc();
  v0[58] = swift_task_alloc();
  uint64_t v12 = sub_10006E830();
  v0[59] = v12;
  sub_100016518(v12);
  v0[60] = v13;
  v0[61] = sub_1000551C0();
  v0[62] = swift_task_alloc();
  sub_1000115E8();
  return _swift_task_switch(v14, v15, v16);
}

uint64_t sub_100062DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_100011704();
  sub_10006B104();
  if (qword_1000819E0 != -1) {
    swift_once();
  }
  uint64_t v15 = v14[59];
  sub_10006A578(&qword_1000827C0, (void (*)(uint64_t))&type metadata accessor for TypedValue.DeferredValue.Storage);
  sub_10006AEE0();
  if (v15)
  {
LABEL_6:
    sub_10006AE08();
    uint64_t v48 = v14[46];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1000115DC();
    sub_100011590();
    return v23(v22, v23, v24, v25, v26, v27, v28, v29, v48, v15, a11, a12, a13, a14);
  }
  sub_10006A578(&qword_100082748, (void (*)(uint64_t))&type metadata accessor for TypeInstance);
  sub_10006DD80();
  (*(void (**)(void, void, void))(v14[60] + 16))(v14[61], v14[62], v14[59]);
  uint64_t v16 = sub_10006B0C4();
  if (v17(v16) == enum case for TypedValue.DeferredValue.Storage.encodedContentItemProperty(_:))
  {
    uint64_t v18 = (void *)v14[61];
    uint64_t v19 = sub_1000596B0();
    v20(v19);
    v14[63] = *v18;
    v14[64] = v18[1];
    sub_10001028C(0, &qword_100082788);
    v14[65] = sub_10001028C(0, &qword_100082700);
    uint64_t v21 = sub_10006F360();
    v14[66] = v21;
    v14[67] = 0;
    uint64_t v32 = (void *)v21;
    if (v21)
    {
      ObjCClassFromObject = (void *)swift_getObjCClassFromObject();
      NSString v34 = sub_10006B000();
      swift_bridgeObjectRelease();
      id v35 = [ObjCClassFromObject propertyForName:v34];
      v14[68] = v35;

      if (v35)
      {
        v14[2] = v14;
        v14[7] = v14 + 15;
        v14[3] = sub_10006329C;
        uint64_t v36 = swift_continuation_init();
        v14[10] = _NSConcreteStackBlock;
        v14[11] = 0x40000000;
        v14[12] = sub_100064034;
        v14[13] = &unk_10007ECD0;
        v14[14] = v36;
        [v35 getValueForObject:v32 completionHandler:v14 + 10];
        sub_100011590();
        return _swift_continuation_await(v37);
      }
      uint64_t v44 = v14[60];
      uint64_t v49 = v14[59];
      uint64_t v51 = v14[62];
      sub_10006996C();
      uint64_t v45 = sub_10006AE5C();
      *uint64_t v46 = 1;
      swift_willThrow();
      sub_10006AFD0();

      uint64_t v15 = v45;
      sub_100055B70();
      v47();
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v51, v49);
    }
    else
    {
      uint64_t v50 = v14[62];
      uint64_t v40 = v14[59];
      uint64_t v39 = v14[60];
      swift_bridgeObjectRelease();
      sub_10006996C();
      uint64_t v41 = sub_10006AE5C();
      *uint64_t v42 = 0;
      swift_willThrow();
      sub_10006AFD0();
      uint64_t v15 = v41;
      sub_10006AAA8();
      v43();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v50, v40);
    }
    goto LABEL_6;
  }
  sub_100011590();
  return sub_10006F770();
}

uint64_t sub_10006329C()
{
  sub_1000114D4();
  sub_10006A9D4();
  uint64_t v1 = *v0;
  sub_1000114E0();
  *uint64_t v2 = v1;
  sub_1000115E8();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10006334C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_100056444();
  sub_1000579CC();
  sub_1000699B8((uint64_t)(v22 + 15), (uint64_t)(v22 + 23));
  uint64_t v23 = (void *)v22[66];
  if (v22[26])
  {
    uint64_t v24 = (_OWORD *)sub_100059CE4();
    sub_1000090F8(v24, v25);

    sub_100009038((uint64_t)(v22 + 19), (uint64_t)(v22 + 27));
    sub_10001028C(0, &qword_1000827D0);
    sub_10006ADE8();
    if (swift_dynamicCast())
    {
      uint64_t v26 = (void *)v22[40];
      id v27 = [self itemWithFile:v26];

      if (!v27) {
        goto LABEL_17;
      }
    }
    else
    {
      sub_100009038((uint64_t)(v22 + 19), (uint64_t)(v22 + 35));
      sub_10006ADE8();
      if (swift_dynamicCast())
      {
        id v27 = (id)v22[39];
      }
      else
      {
        uint64_t v65 = sub_100011758();
        sub_100009038(v65, v66);
        id v27 = sub_1000603C0(v22 + 31);
        if (!v27)
        {
LABEL_17:
          uint64_t v83 = (void *)v22[68];
          uint64_t v84 = (void *)v22[66];
          uint64_t v86 = v22[63];
          unint64_t v85 = v22[64];
          uint64_t v61 = v22[60];
          uint64_t v118 = v22[59];
          uint64_t v119 = v22[62];
          uint64_t v116 = (void *)v22[58];
          uint64_t v88 = v22[54];
          uint64_t v87 = v22[55];
          sub_10006996C();
          uint64_t v89 = sub_10006AE5C();
          *uint64_t v90 = 3;
          uint64_t v121 = v89;
          swift_willThrow();

          sub_10005172C(v86, v85);
          sub_100052558((uint64_t)(v22 + 19));
          (*(void (**)(void *, uint64_t))(v87 + 8))(v116, v88);
          goto LABEL_18;
        }
      }
    }
    id v67 = v27;
    v22[70] = v27;
    v22[69] = v67;
    sub_10001028C(0, &qword_1000827D8);
    sub_10000772C(&qword_100082720);
    uint64_t v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = xmmword_100071940;
    *(void *)(v68 + 32) = v67;
    sub_10006F110();
    id v69 = v67;
    v22[71] = sub_1000640A0();
    uint64_t v70 = sub_100056610();
    v71(v70);
    sub_10006E030();
    sub_100059C84();
    sub_10006F3E0();
    uint64_t v72 = sub_10006F3F0();
    sub_10006B134(v72);
    swift_task_alloc();
    sub_100058568();
    v22[72] = v73;
    *uint64_t v73 = v74;
    v73[1] = sub_100063AE4;
    sub_100055E88();
    return WFContentCollection.resolve(with:)(v75, v76, v77, v78, v79, v80, v81, v82);
  }
  else
  {
    uint64_t v28 = v22[55];
    sub_100053404((uint64_t)(v22 + 23), &qword_100082450);

    uint64_t v29 = *(void (**)(uint64_t))(v28 + 16);
    uint64_t v30 = sub_10006AE2C();
    v29(v30);
    uint64_t v31 = sub_100057804();
    if (v32(v31) != enum case for TypeInstance.optional(_:))
    {
      uint64_t v58 = (void *)v22[68];
      uint64_t v60 = v22[63];
      unint64_t v59 = v22[64];
      uint64_t v119 = v22[62];
      uint64_t v61 = v22[60];
      uint64_t v116 = (void *)v22[66];
      uint64_t v118 = v22[59];
      uint64_t v62 = *(void (**)(void))(v22[55] + 8);
      sub_100055B70();
      v62();
      sub_10006996C();
      uint64_t v63 = sub_10006AE5C();
      *uint64_t v64 = 2;
      uint64_t v121 = v63;
      swift_willThrow();

      sub_10005172C(v60, v59);
      sub_100055B70();
      v62();
LABEL_18:
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v119, v118);
      goto LABEL_19;
    }
    uint64_t v33 = v22[55];
    uint64_t v34 = v22[54];
    uint64_t v36 = v22[45];
    uint64_t v35 = v22[46];
    sub_100011764();
    sub_10006A8AC();
    v37();
    uint64_t v38 = swift_projectBox();
    uint64_t v39 = v35 + *(int *)(v36 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v29)(v35, v38, v34);
    sub_10006A524();
    sub_100053404(v39, &qword_1000824E0);
    sub_100059CE4();
    uint64_t v118 = v40;
    sub_100055240();
    v41();
    swift_release();
    if (qword_1000819E8 != -1) {
      swift_once();
    }
    uint64_t v42 = v22[67];
    uint64_t v44 = v22[50];
    uint64_t v43 = (uint64_t *)v22[51];
    uint64_t v45 = v22[49];
    uint64_t v46 = sub_10006E850();
    uint64_t v47 = swift_allocBox();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v46 - 8) + 104))(v48, enum case for TypedValue.PrimitiveValue.none(_:), v46);
    *uint64_t v43 = v47;
    (*(void (**)(uint64_t *, void, uint64_t))(v44 + 104))(v43, enum case for TypedValue.primitive(_:), v45);
    sub_10006A578(&qword_100082718, (void (*)(uint64_t))&type metadata accessor for TypedValue);
    uint64_t v49 = sub_10006A760();
    uint64_t v51 = (void *)v22[68];
    uint64_t v52 = (void *)v22[66];
    uint64_t v53 = v22[63];
    unint64_t v54 = v22[64];
    if (v42)
    {
      a13 = v22[59];
      uint64_t v116 = (void *)v22[62];
      a12 = v22[58];
      uint64_t v121 = v42;

      sub_10005172C(v53, v54);
      sub_100055234();
      v55();
      sub_10005521C();
      v56();
      sub_10005527C();
      v57();
LABEL_19:
      sub_10006AA74();
      uint64_t v120 = v91;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_1000115DC();
      sub_100055E88();
      return v93(v92, v93, v94, v95, v96, v97, v98, v99, a9, a10, a11, a12, a13, v116, v118, v120, v121, a18, a19,
               a20,
               a21,
               a22);
    }
    uint64_t v117 = v49;
    uint64_t v122 = v50;

    sub_10005172C(v53, v54);
    sub_100055234();
    v100();
    uint64_t v112 = v22[51];
    uint64_t v113 = v22[48];
    uint64_t v114 = v22[47];
    uint64_t v115 = v22[46];
    sub_10005521C();
    v101();
    sub_100055234();
    v102();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10006B018();
    sub_100055E88();
    return v106(v103, v104, v105, v106, v107, v108, v109, v110, a9, v112, v113, v114, v115, v117, v118, v33 + 8, v122, a18, a19,
             a20,
             a21,
             a22);
  }
}

uint64_t sub_100063AE4()
{
  sub_1000116F8();
  sub_10006A960();
  sub_1000114FC();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 584) = v0;
  swift_task_dealloc();
  sub_100053404(*(void *)(v1 + 384), &qword_100082740);
  sub_1000115E8();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_100063BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10006A900();
  sub_10006AF3C();
  uint64_t v21 = *(void **)(v20 + 568);
  uint64_t v22 = *(void **)(v20 + 560);
  uint64_t v23 = *(void **)(v20 + 552);
  uint64_t v24 = *(void **)(v20 + 528);
  uint64_t v26 = *(void *)(v20 + 504);
  unint64_t v25 = *(void *)(v20 + 512);
  uint64_t v27 = *(void *)(v20 + 416);
  uint64_t v61 = *(void *)(v20 + 424);
  uint64_t v29 = *(void *)(v20 + 392);
  uint64_t v28 = *(void *)(v20 + 400);

  sub_10005172C(v26, v25);
  sub_100052558(v20 + 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v61, v27, v29);
  if (qword_1000819E8 != -1) {
    swift_once();
  }
  uint64_t v30 = *(void *)(v20 + 584);
  sub_10006A578(&qword_100082718, (void (*)(uint64_t))&type metadata accessor for TypedValue);
  uint64_t v31 = sub_10006A760();
  if (v30)
  {
    sub_10001162C();
    v33();
    sub_1000556D0();
    v34();
    sub_100011764();
    sub_100055B70();
    v35();
    sub_10006AE08();
    uint64_t v62 = *(void *)(v20 + 376);
    uint64_t v64 = *(void *)(v20 + 368);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100055AFC();
    sub_10006A678();
    return v37(v36, v37, v38, v39, v40, v41, v42, v43, a9, a10, a11, a12, a13, a14, v62, v64, a17, a18, a19, a20);
  }
  else
  {
    uint64_t v63 = v32;
    uint64_t v65 = v31;
    sub_10001162C();
    v45();
    uint64_t v56 = *(void *)(v20 + 416);
    uint64_t v57 = *(void *)(v20 + 408);
    uint64_t v58 = *(void *)(v20 + 384);
    uint64_t v59 = *(void *)(v20 + 376);
    uint64_t v60 = *(void *)(v20 + 368);
    sub_10006AAA8();
    v46();
    sub_100056610();
    sub_10005527C();
    v47();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10006B018();
    sub_10006A678();
    return v51(v48, v49, v50, v51, v52, v53, v54, v55, a9, v56, v57, v58, v59, v60, v63, v65, a17, a18, a19, a20);
  }
}

uint64_t sub_100063ED8()
{
  uint64_t v1 = *(void **)(v0 + 568);
  uint64_t v10 = *(void **)(v0 + 560);
  uint64_t v2 = *(void **)(v0 + 552);
  uint64_t v3 = *(void **)(v0 + 528);
  uint64_t v5 = *(void *)(v0 + 504);
  unint64_t v4 = *(void *)(v0 + 512);

  sub_10005172C(v5, v4);
  sub_100052558(v0 + 152);
  sub_100055228();
  v6();
  sub_10006AAA8();
  v7();
  sub_10006AA74();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000115DC();
  return v8();
}

uint64_t sub_100064034(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2)
  {
    *((void *)&v6 + 1) = swift_getObjectType();
    *(void *)&long long v5 = a2;
  }
  else
  {
    long long v5 = 0u;
    long long v6 = 0u;
  }
  sub_1000699B8((uint64_t)&v5, (uint64_t)v7);
  swift_unknownObjectRetain();
  return sub_100060368(v3, (uint64_t)v7);
}

id sub_1000640A0()
{
  sub_10001028C(0, &qword_100082700);
  Class isa = sub_10006F0E0().super.isa;
  swift_bridgeObjectRelease();
  id v1 = [(id)swift_getObjCClassFromMetadata() collectionWithItems:isa];

  return v1;
}

uint64_t sub_100064144(uint64_t a1, int a2, void *a3, void *a4, void *aBlock)
{
  uint64_t v8 = _Block_copy(aBlock);
  sub_10006AB24();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = v8;
  v9[5] = a1;
  id v10 = a3;
  id v11 = a4;
  sub_10006AE2C();
  return sub_100059F5C();
}

uint64_t sub_1000641C0(void *a1, void *a2, void *aBlock)
{
  v3[2] = _Block_copy(aBlock);
  id v6 = a1;
  id v7 = a2;
  uint64_t v8 = sub_10006DE20();
  uint64_t v10 = v9;

  v3[3] = v8;
  v3[4] = v10;
  uint64_t v11 = sub_10006DE20();
  uint64_t v13 = v12;

  v3[5] = v11;
  v3[6] = v13;
  uint64_t v14 = (void *)swift_task_alloc();
  v3[7] = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_1000642C0;
  return static ToolKitHelper.resolveDeferredValue(for:encodedExpectedType:)();
}

uint64_t sub_1000642C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10006AB60();
  sub_100059790();
  sub_10006A654();
  uint64_t v14 = v13;
  sub_1000114E0();
  *uint64_t v15 = v14;
  *uint64_t v15 = *v11;
  swift_task_dealloc();
  sub_10006AE80();
  unint64_t v17 = v12[4];
  uint64_t v18 = (void *)v12[3];
  sub_10005172C(v12[5], *(void *)(v16 + 48));
  sub_10005172C((uint64_t)v18, v17);
  if (v10)
  {
    sub_10006DDB0();
    sub_10006AA5C();
    sub_10006AE20();
  }
  else
  {
    sub_10006AAB4();
    sub_10006A820();
    sub_10006AE74();
  }
  uint64_t v19 = *(const void **)(v14 + 16);
  uint64_t v20 = sub_10006A6C8();
  v21(v20);

  _Block_release(v19);
  sub_10006A9E8();
  sub_10006AB0C();
  return v23(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

uint64_t static ToolKitHelper.fetchToolInvocationSummary(for:with:)()
{
  sub_1000114D4();
  v1[22] = v2;
  v1[23] = v0;
  v1[20] = v3;
  v1[21] = v4;
  uint64_t v5 = sub_10006E470();
  v1[24] = v5;
  sub_100016518(v5);
  v1[25] = v6;
  v1[26] = sub_10005558C();
  uint64_t v7 = sub_10006E440();
  v1[27] = v7;
  sub_100016518(v7);
  v1[28] = v8;
  v1[29] = sub_1000551C0();
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  uint64_t v9 = sub_10006E450();
  v1[32] = v9;
  sub_100016518(v9);
  v1[33] = v10;
  v1[34] = sub_1000551C0();
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  uint64_t v11 = sub_10006EFA0();
  v1[40] = v11;
  sub_100016518(v11);
  v1[41] = v12;
  v1[42] = sub_10005558C();
  sub_1000115E8();
  return _swift_task_switch(v13, v14, v15);
}

uint64_t sub_100064590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_100011704();
  sub_10006B104();
  v14[43] = static ToolKitHelper.createAction(encodedToolInvocation:)(v14[20], v14[21]);
  uint64_t v16 = v14[20];
  unint64_t v15 = v14[21];
  sub_10006DF10();
  sub_1000516C0(v16, v15);
  v14[44] = sub_10006DEE0();
  sub_10001028C(0, &qword_1000827E8);
  sub_100055330();
  v17();
  v14[45] = sub_10006F370();
  sub_1000553C4();
  v18();
  uint64_t v19 = (void *)swift_task_alloc();
  v14[46] = v19;
  *uint64_t v19 = v14;
  v19[1] = sub_100064790;
  sub_100011590();
  return WFAction.processParametersWithoutAskingForValues(withInput:workQueue:)(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_100064790()
{
  sub_1000116F8();
  uint64_t v3 = v2;
  sub_100011474();
  uint64_t v5 = v4;
  sub_1000114FC();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1000114E0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 376) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v9 = *(void **)(v5 + 360);
    swift_bridgeObjectRelease();
  }
  sub_1000115E8();
  return _swift_task_switch(v10, v11, v12);
}

uint64_t sub_100064890()
{
  sub_1000116F8();
  id v1 = (void *)v0[43];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_100064988;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10005E798;
  v0[13] = &unk_10007ECE8;
  v0[14] = v2;
  [v1 updateParameterSummaryIfNeeded:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100064988()
{
  sub_1000114D4();
  sub_100011474();
  sub_1000114FC();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 384) = *(void *)(v3 + 48);
  sub_1000115E8();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_100064A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10006A900();
  sub_10006AF3C();
  uint64_t v23 = *(void **)(v21 + 120);
  if (v23)
  {
    id v24 = [*(id *)(v21 + 120) localizedFormatStringWithAction:*(void *)(v21 + 344)];
    if (v24)
    {
      uint64_t v25 = v24;
      sub_10006F050();
      sub_10006ABC0();

LABEL_6:
      uint64_t v27 = *(void *)(v21 + 376);
      goto LABEL_8;
    }
    sub_100069634(v23, (SEL *)&selRef_localizedTitle);
    if (v26)
    {
      sub_10006ABC0();
      goto LABEL_6;
    }
  }
  uint64_t v27 = *(void *)(v21 + 376);
  id v28 = [*(id *)(v21 + 344) localizedName];
  sub_10006F050();
  sub_10006ABC0();

  swift_bridgeObjectRelease_n();
LABEL_8:
  *(void *)(v21 + 400) = v22;
  *(void *)(v21 + 408) = v23;
  *(void *)(v21 + 392) = v20;
  uint64_t v29 = *(void **)(v21 + 344);
  sub_10006EFE0();
  id v30 = [v29 parameters];
  sub_10001028C(0, &qword_1000823F0);
  unint64_t v31 = sub_10006F0F0();
  *(void *)(v21 + 416) = v31;

  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_10006F6F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v21 + 424) = v32;
  if (v32)
  {
    *(_DWORD *)(v21 + 480) = enum case for ToolInvocationSummary.ParameterSummary.placeholder(_:);
    *(_DWORD *)(v21 + 484) = enum case for ToolInvocationSummary.ParameterSummary.value(_:);
    *(_DWORD *)(v21 + 488) = enum case for ToolInvocationSummary.ParameterSummary.values(_:);
    sub_10006AAE0();
    if (v41)
    {
      if (!*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return ToolInvocationBox.contentCollection(for:variableSource:)(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                 a20);
      }
      id v42 = *(id *)(v34 + 32);
    }
    else
    {
      id v42 = (id)sub_10006F620();
    }
    *(void *)(v21 + 440) = v42;
    *(void *)(v21 + 448) = 1;
    uint64_t v57 = swift_task_alloc();
    uint64_t v58 = (void *)sub_10006B078(v57);
    *uint64_t v58 = v59;
    v58[1] = sub_100064E90;
    sub_10006B030();
    sub_10006A678();
    return ToolInvocationBox.contentCollection(for:variableSource:)(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20);
  }
  uint64_t v43 = *(void *)(v21 + 392);
  swift_bridgeObjectRelease();
  sub_10006AFE8(v43);
  if (qword_1000819E8 != -1) {
    swift_once();
  }
  sub_10006A578(&qword_1000827F8, (void (*)(uint64_t))&type metadata accessor for ToolInvocationSummary);
  sub_10006A760();
  uint64_t v44 = *(void **)(v21 + 408);
  uint64_t v45 = *(void **)(v21 + 344);
  uint64_t v46 = *(void **)(v21 + 352);
  if (v27)
  {
    sub_10001162C();
    v47();

    sub_10006A6E0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100055AFC();
    sub_10006A678();
    return v49(v48, v49, v50, v51, v52, v53, v54, v55, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
  }
  else
  {
    uint64_t v60 = sub_10006A5FC();
    v61(v60);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10006A710();
    sub_10006A678();
    return v65(v62, v63, v64, v65, v66, v67, v68, v69, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
  }
}

uint64_t sub_100064E90()
{
  sub_1000114D4();
  sub_100011474();
  sub_1000114FC();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 464) = v4;
  *(void *)(v2 + 472) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_errorRelease();
  }
  sub_1000115E8();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_100064F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10006A900();
  sub_10006AF3C();
  uint64_t v21 = (uint64_t)[*(id *)(v20 + 464) numberOfItems];
  uint64_t v22 = *(void **)(v20 + 464);
  if (v21 >= 1)
  {
    uint64_t v23 = (uint64_t)[*(id *)(v20 + 464) numberOfItems];
    id v24 = [v22 items];
    sub_10001028C(0, &qword_100082700);
    sub_10006B0B8();
    unint64_t v150 = sub_10006F0F0();

    if (v23 <= 1)
    {
      if ((v150 & 0xC000000000000001) != 0) {
        goto LABEL_73;
      }
      if (*(void *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v44 = *(id *)(v150 + 32);
        goto LABEL_19;
      }
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    if (!(v150 >> 62))
    {
      uint64_t v33 = *(void *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v33)
      {
LABEL_5:
        *(void *)(v20 + 144) = _swiftEmptyArrayStorage;
        sub_100069194(0, v33 & ~(v33 >> 63), 0);
        if (v33 < 0)
        {
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
          goto LABEL_81;
        }
        uint64_t v34 = 0;
        uint64_t v35 = *(void **)(v20 + 144);
        a15 = v150 & 0xC000000000000001;
        do
        {
          if (a15) {
            id v36 = (id)sub_10006F620();
          }
          else {
            id v36 = *(id *)(v150 + 8 * v34 + 32);
          }
          uint64_t v37 = v36;
          id v38 = [v36 richListTitle];
          sub_10006F050();

          sub_10006E430();
          *(void *)(v20 + 144) = v35;
          unint64_t v40 = v35[2];
          unint64_t v39 = v35[3];
          if (v40 >= v39 >> 1)
          {
            sub_100069194(v39 > 1, v40 + 1, 1);
            uint64_t v35 = *(void **)(v20 + 144);
          }
          ++v34;
          v35[2] = v40 + 1;
          sub_100055548();
          v41();
        }
        while (v33 != v34);
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
LABEL_40:
      swift_bridgeObjectRelease();
      uint64_t v35 = _swiftEmptyArrayStorage;
LABEL_41:
      uint64_t v101 = *(void *)(v20 + 432);
      uint64_t v102 = *(void **)(v20 + 312);
      unint64_t v150 = *(void *)(v20 + 304);
      uint64_t v103 = *(void *)(v20 + 264);
      id v104 = [*(id *)(v20 + 440) key];
      uint64_t v105 = sub_10006F050();
      uint64_t v107 = v106;

      void *v102 = v35;
      sub_100055330();
      v108();
      uint64_t v109 = *(void (**)(void))(v103 + 32);
      sub_10006AFB0();
      v109();
      swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v20 + 152) = v101;
      sub_100068680(v105, v107, (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100068938);
      sub_10006AA94();
      if (!v58)
      {
        unint64_t v110 = v25;
        char v111 = v26;
        sub_10000772C(&qword_1000827F0);
        if (sub_10006AEA8())
        {
          sub_100068680(v105, v107, (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100068938);
          sub_10006AC90();
          if (!v62) {
            goto LABEL_44;
          }
          unint64_t v110 = v112;
        }
        uint64_t v115 = *(void *)(v20 + 152);
        if (v111)
        {
          uint64_t v116 = sub_10006A944(*(void *)(v20 + 264));
          v117(v116);
          goto LABEL_52;
        }
        *(void *)(v115 + 8 * (v110 >> 6) + 64) |= 1 << v110;
        uint64_t v118 = (uint64_t *)(*(void *)(v115 + 48) + 16 * v110);
        *uint64_t v118 = v105;
        v118[1] = v107;
        sub_10006AFB0();
        v109();
        sub_10006AFA4();
        if (!v58)
        {
          *(void *)(v115 + 16) = v119;
          swift_bridgeObjectRetain();
LABEL_52:
          uint64_t v120 = *(void **)(v20 + 464);
          uint64_t v121 = *(void **)(v20 + 440);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          while (1)
          {
            uint64_t v95 = *(void *)(v20 + 472);
LABEL_54:
            unint64_t v122 = *(void *)(v20 + 448);
            if (v122 == *(void *)(v20 + 424))
            {
              uint64_t v123 = *(void *)(v20 + 392);
              swift_bridgeObjectRelease();
              sub_10006AFE8(v123);
              if (qword_1000819E8 != -1) {
                swift_once();
              }
              sub_10006A578(&qword_1000827F8, (void (*)(uint64_t))&type metadata accessor for ToolInvocationSummary);
              sub_10006A760();
              uint64_t v124 = *(void **)(v20 + 408);
              uint64_t v125 = *(void **)(v20 + 344);
              uint64_t v126 = *(void **)(v20 + 352);
              if (v95)
              {
                sub_10001162C();
                v127();

                sub_10006A6E0();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                sub_100055AFC();
                sub_10006A678();
                return v129(v128, v129, v130, v131, v132, v133, v134, v135, a9, a10, a11, a12, a13, a14, a15, v150, a17, a18, a19,
                         a20);
              }
              else
              {
                uint64_t v137 = sub_10006A5FC();
                v138(v137);

                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                sub_10006A710();
                sub_10006A678();
                return v142(v139, v140, v141, v142, v143, v144, v145, v146, a9, a10, a11, a12, a13, a14, a15, v150, a17, a18, a19,
                         a20);
              }
            }
            sub_10006AAE0();
            if (v62)
            {
              if (v122 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_79;
              }
              id v136 = *(id *)(v26 + 8 * v122 + 32);
            }
            else
            {
              id v136 = (id)sub_10006F620();
            }
            *(void *)(v20 + 440) = v136;
            *(void *)(v20 + 448) = v122 + 1;
            if (!__OFADD__(v122, 1)) {
              break;
            }
            __break(1u);
LABEL_73:
            id v44 = (id)sub_10006F620();
LABEL_19:
            uint64_t v45 = v44;
            uint64_t v46 = *(void *)(v20 + 432);
            uint64_t v47 = *(void **)(v20 + 440);
            LODWORD(a14) = *(_DWORD *)(v20 + 484);
            uint64_t v48 = *(void *)(v20 + 296);
            a15 = *(void *)(v20 + 288);
            uint64_t v49 = *(void *)(v20 + 256);
            uint64_t v50 = *(void *)(v20 + 240);
            uint64_t v51 = *(void *)(v20 + 224);
            a12 = *(void *)(v20 + 216);
            a13 = *(void *)(v20 + 264);
            swift_bridgeObjectRelease();
            id v52 = [v45 richListTitle];

            sub_10006F050();
            sub_10006E430();
            id v53 = [v47 key];
            sub_10006F050();

            (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v48, v50, a12);
            sub_100055330();
            v54();
            uint64_t v55 = *(void (**)(unint64_t, uint64_t, uint64_t))(a13 + 32);
            v55(a15, v48, v49);
            uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v20 + 136) = v46;
            sub_10006B110(isUniquelyReferenced_nonNull_native, v57, (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100068938);
            sub_10006AA94();
            if (v58) {
              goto LABEL_75;
            }
            char v59 = v26;
            sub_10000772C(&qword_1000827F0);
            BOOL v60 = sub_10006AEA8();
            if (v60)
            {
              sub_10006B110(v60, v61, (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100068938);
              sub_10006AC90();
              if (!v62) {
                goto LABEL_44;
              }
            }
            uint64_t v63 = *(void *)(v20 + 136);
            uint64_t v64 = *(void *)(v20 + 264);
            if (v59)
            {
              uint64_t v65 = sub_10006A944(v64);
              v66(v65);
            }
            else
            {
              uint64_t v96 = sub_10006A874(v64);
              ((void (*)(uint64_t))v55)(v96);
              sub_10006AFA4();
              if (v58) {
                goto LABEL_80;
              }
              *(void *)(v63 + 16) = v97;
              swift_bridgeObjectRetain();
            }
            uint64_t v98 = *(void **)(v20 + 464);
            uint64_t v99 = *(void **)(v20 + 440);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            sub_1000556D0();
            v100();
          }
          uint64_t v147 = swift_task_alloc();
          int v148 = (void *)sub_10006B078(v147);
          *int v148 = v149;
          v148[1] = sub_100064E90;
          sub_10006B044();
          sub_10006A678();
          return ToolInvocationBox.contentCollection(for:variableSource:)(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14, a15, v150, a17, a18, a19,
                   a20);
        }
LABEL_81:
        __break(1u);
        return ToolInvocationBox.contentCollection(for:variableSource:)(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14, a15, v150, a17, a18, a19,
                 a20);
      }
      goto LABEL_76;
    }
LABEL_39:
    sub_10006B098();
    uint64_t v33 = sub_10006F6F0();
    swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_5;
    }
    goto LABEL_40;
  }

  uint64_t v42 = *(void *)(v20 + 472);
  sub_100069634(*(void **)(v20 + 440), (SEL *)&selRef_localizedPlaceholder);
  a13 = v42;
  if (v43)
  {
    sub_10006ABC0();
  }
  else
  {
    id v67 = [*(id *)(v20 + 440) localizedLabel];
    sub_10006F050();
    sub_10006ABC0();
  }
  uint64_t v68 = *(void *)(v20 + 432);
  uint64_t v69 = *(void **)(v20 + 440);
  LODWORD(a15) = *(_DWORD *)(v20 + 480);
  uint64_t v70 = *(void *)(v20 + 280);
  unint64_t v150 = *(void *)(v20 + 272);
  uint64_t v71 = *(void *)(v20 + 264);
  uint64_t v72 = *(void *)(v20 + 224);
  uint64_t v73 = *(void *)(v20 + 232);
  a14 = *(void *)(v20 + 216);
  sub_100057804();
  sub_10006E430();
  id v74 = [v69 key];
  uint64_t v75 = sub_10006F050();
  uint64_t v77 = v76;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 16))(v70, v73, a14);
  sub_100055330();
  v78();
  uint64_t v79 = *(void (**)(void))(v71 + 32);
  sub_10006AFB0();
  v80();
  char v81 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v20 + 128) = v68;
  uint64_t v82 = sub_100068680(v75, v77, (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100068938);
  uint64_t v84 = *(void *)(v68 + 16);
  BOOL v85 = (v83 & 1) == 0;
  Swift::Int v86 = v84 + v85;
  if (__OFADD__(v84, v85))
  {
    __break(1u);
    goto LABEL_39;
  }
  unint64_t v87 = v82;
  char v88 = v83;
  sub_10000772C(&qword_1000827F0);
  if (!sub_10006F6A0(v81, v86))
  {
LABEL_30:
    uint64_t v91 = *(void **)(v20 + 128);
    if (v88)
    {
      (*(void (**)(unint64_t, void, void))(*(void *)(v20 + 264) + 40))(v91[7] + *(void *)(*(void *)(v20 + 264) + 72) * v87, *(void *)(v20 + 272), *(void *)(v20 + 256));
    }
    else
    {
      v91[(v87 >> 6) + 8] |= 1 << v87;
      uint64_t v92 = (uint64_t *)(v91[6] + 16 * v87);
      *uint64_t v92 = v75;
      v92[1] = v77;
      sub_10006AFB0();
      v79();
      sub_10006AFA4();
      if (v58) {
        goto LABEL_78;
      }
      v91[2] = v93;
      swift_bridgeObjectRetain();
    }
    sub_10006AF60();
    swift_bridgeObjectRelease();

    sub_100055B70();
    v94();
    uint64_t v95 = a13;
    goto LABEL_54;
  }
  uint64_t v89 = sub_100068680(v75, v77, (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100068938);
  if ((v88 & 1) == (v90 & 1))
  {
    unint64_t v87 = v89;
    goto LABEL_30;
  }
LABEL_44:
  sub_10006A678();
  return sub_10006F7C0();
}

uint64_t sub_100065A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_100011704();
  sub_10006B104();
  unint64_t v15 = *(void **)(v14 + 352);
  uint64_t v16 = *(void **)(v14 + 344);

  uint64_t v26 = *(void *)(v14 + 208);
  uint64_t v27 = *(void *)(v14 + 376);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000115DC();
  sub_100011590();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, v26, v27, a12, a13, a14);
}

uint64_t sub_100065B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10006A900();
  sub_10006AF3C();
  swift_willThrow();
  swift_errorRelease();
  id v21 = [*(id *)(v20 + 344) localizedName];
  uint64_t v22 = sub_10006F050();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease_n();

  *(void *)(v20 + 400) = v24;
  *(void *)(v20 + 408) = 0;
  *(void *)(v20 + 392) = v22;
  unint64_t v25 = *(void **)(v20 + 344);
  sub_10006EFE0();
  id v26 = [v25 parameters];
  sub_10001028C(0, &qword_1000823F0);
  unint64_t v27 = sub_10006F0F0();
  *(void *)(v20 + 416) = v27;

  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_10006F6F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v20 + 424) = v28;
  if (v28)
  {
    *(_DWORD *)(v20 + 480) = enum case for ToolInvocationSummary.ParameterSummary.placeholder(_:);
    *(_DWORD *)(v20 + 484) = enum case for ToolInvocationSummary.ParameterSummary.value(_:);
    *(_DWORD *)(v20 + 488) = enum case for ToolInvocationSummary.ParameterSummary.values(_:);
    sub_10006AAE0();
    if (v37)
    {
      if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return ToolInvocationBox.contentCollection(for:variableSource:)(v29, v30, v31, v32, v33, v34, v35, v36, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                 a20);
      }
      id v38 = *(id *)(v30 + 32);
    }
    else
    {
      id v38 = (id)sub_10006F620();
    }
    *(void *)(v20 + 440) = v38;
    *(void *)(v20 + 448) = 1;
    uint64_t v54 = swift_task_alloc();
    uint64_t v55 = (void *)sub_10006B078(v54);
    *uint64_t v55 = v56;
    v55[1] = sub_100064E90;
    sub_10006B030();
    sub_10006A678();
    return ToolInvocationBox.contentCollection(for:variableSource:)(v29, v30, v31, v32, v33, v34, v35, v36, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20);
  }
  uint64_t v39 = *(void *)(v20 + 392);
  swift_bridgeObjectRelease();
  sub_10006AFE8(v39);
  if (qword_1000819E8 != -1) {
    swift_once();
  }
  uint64_t v40 = *(void *)(v20 + 208);
  sub_10006A578(&qword_1000827F8, (void (*)(uint64_t))&type metadata accessor for ToolInvocationSummary);
  sub_10006AB80();
  char v41 = *(void **)(v20 + 408);
  uint64_t v43 = *(void **)(v20 + 344);
  uint64_t v42 = *(void **)(v20 + 352);
  if (v40)
  {
    sub_10001162C();
    v44();

    sub_10006A6E0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100055AFC();
    sub_10006A678();
    return v46(v45, v46, v47, v48, v49, v50, v51, v52, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
  }
  else
  {
    uint64_t v57 = sub_10006A5FC();
    v58(v57);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10006A710();
    sub_10006A678();
    return v62(v59, v60, v61, v62, v63, v64, v65, v66, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
  }
}

uint64_t sub_100065F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10006A900();
  sub_10006AF3C();
  sub_100069634(*(void **)(v20 + 440), (SEL *)&selRef_localizedPlaceholder);
  if (!v21)
  {
    id v22 = [*(id *)(v20 + 440) localizedLabel];
    sub_10006F050();
  }
  uint64_t v23 = *(void *)(v20 + 432);
  uint64_t v24 = *(void **)(v20 + 440);
  LODWORD(a15) = *(_DWORD *)(v20 + 480);
  uint64_t v25 = *(void *)(v20 + 280);
  uint64_t v87 = *(void *)(v20 + 272);
  uint64_t v27 = *(void *)(v20 + 256);
  uint64_t v26 = *(void *)(v20 + 264);
  uint64_t v28 = *(void *)(v20 + 224);
  uint64_t v29 = *(void *)(v20 + 232);
  uint64_t v86 = *(void *)(v20 + 216);
  sub_100011758();
  sub_10006E430();
  id v30 = [v24 key];
  sub_10006F050();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v25, v29, v86);
  sub_100055330();
  v31();
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32);
  v32(v87, v25, v27);
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v20 + 128) = v23;
  sub_10006B110(isUniquelyReferenced_nonNull_native, v34, (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100068938);
  sub_10006AA94();
  if (v36)
  {
    __break(1u);
  }
  else
  {
    char v37 = v35;
    sub_10000772C(&qword_1000827F0);
    BOOL v38 = sub_10006AEA8();
    if (v38)
    {
      sub_10006B110(v38, v39, (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100068938);
      sub_10006AC90();
      if (!v40)
      {
        sub_10006A678();
        return sub_10006F7C0();
      }
    }
    uint64_t v43 = *(void *)(v20 + 128);
    uint64_t v44 = *(void *)(v20 + 264);
    if (v37)
    {
      uint64_t v45 = sub_10006A944(v44);
      v46(v45);
      goto LABEL_13;
    }
    uint64_t v47 = sub_10006A874(v44);
    ((void (*)(uint64_t))v32)(v47);
    sub_10006AFA4();
    if (!v36)
    {
      *(void *)(v43 + 16) = v48;
      swift_bridgeObjectRetain();
LABEL_13:
      sub_10006AF60();
      swift_bridgeObjectRelease();

      sub_100055B70();
      v49();
      unint64_t v50 = *(void *)(v20 + 448);
      if (v50 == *(void *)(v20 + 424))
      {
        uint64_t v51 = *(void *)(v20 + 392);
        swift_bridgeObjectRelease();
        sub_10006AFE8(v51);
        if (qword_1000819E8 == -1) {
          goto LABEL_15;
        }
        goto LABEL_32;
      }
      sub_10006AAE0();
      if (v40)
      {
        if (v50 >= *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_34;
        }
        id v65 = *(id *)(v66 + 8 * v50 + 32);
      }
      else
      {
        id v65 = (id)sub_10006F620();
      }
      *(void *)(v20 + 440) = v65;
      *(void *)(v20 + 448) = v50 + 1;
      if (!__OFADD__(v50, 1))
      {
        uint64_t v83 = swift_task_alloc();
        uint64_t v84 = (void *)sub_10006B078(v83);
        *uint64_t v84 = v85;
        v84[1] = sub_100064E90;
        sub_10006B044();
        sub_10006A678();
        return ToolInvocationBox.contentCollection(for:variableSource:)(v65, v66, v67, v68, v69, v70, v71, v72, a9, a10, a11, a12, a13, v86, a15, v87, a17, a18, a19,
                 a20);
      }
      __break(1u);
LABEL_34:
      __break(1u);
      return ToolInvocationBox.contentCollection(for:variableSource:)(v65, v66, v67, v68, v69, v70, v71, v72, a9, a10, a11, a12, a13, v86, a15, v87, a17, a18, a19,
               a20);
    }
  }
  __break(1u);
LABEL_32:
  swift_once();
LABEL_15:
  uint64_t v52 = *(void *)(v20 + 208);
  sub_10006A578(&qword_1000827F8, (void (*)(uint64_t))&type metadata accessor for ToolInvocationSummary);
  sub_10006AB80();
  id v53 = *(void **)(v20 + 408);
  uint64_t v54 = *(void **)(v20 + 344);
  uint64_t v55 = *(void **)(v20 + 352);
  if (v52)
  {
    sub_10001162C();
    v56();

    sub_10006A6E0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100055AFC();
    sub_10006A678();
    return v58(v57, v58, v59, v60, v61, v62, v63, v64, a9, a10, a11, a12, a13, v86, a15, v87, a17, a18, a19, a20);
  }
  else
  {
    uint64_t v73 = sub_10006A5FC();
    v74(v73);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10006A710();
    sub_10006A678();
    return v78(v75, v76, v77, v78, v79, v80, v81, v82, a9, a10, a11, a12, a13, v86, a15, v87, a17, a18, a19, a20);
  }
}

uint64_t sub_100066420(uint64_t result, void *a2, void *a3)
{
  if (a3)
  {
    id v3 = a3;
    return sub_10005E79C();
  }
  else if (a2)
  {
    return sub_100060344(*(void *)(result + 32), (uint64_t)a2, (uint64_t (*)(void))&swift_continuation_throwingResume);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10006651C(void *a1, uint64_t a2, void *aBlock)
{
  v3[2] = a2;
  v3[3] = _Block_copy(aBlock);
  id v5 = a1;
  swift_unknownObjectRetain();
  uint64_t v6 = sub_10006DE20();
  uint64_t v8 = v7;

  v3[4] = v6;
  v3[5] = v8;
  swift_getObjCClassMetadata();
  uint64_t v9 = (void *)swift_task_alloc();
  v3[6] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_100066618;
  return static ToolKitHelper.fetchToolInvocationSummary(for:with:)();
}

uint64_t sub_100066618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10006AB60();
  sub_100059790();
  sub_10006A654();
  uint64_t v14 = v13;
  sub_1000114E0();
  *unint64_t v15 = v14;
  *unint64_t v15 = *v11;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  sub_10006AE80();
  sub_10005172C(*(void *)(v12 + 32), *(void *)(v16 + 40));
  if (v10)
  {
    sub_10006DDB0();
    sub_10006AA5C();
    sub_10006AE20();
  }
  else
  {
    sub_10006AAB4();
    sub_10006A820();
    sub_10006AE74();
  }
  uint64_t v17 = *(const void **)(v14 + 24);
  uint64_t v18 = sub_10006A6C8();
  v19(v18);

  _Block_release(v17);
  sub_10006A9E8();
  sub_10006AB0C();
  return v21(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10);
}

id ToolKitHelper.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "init");
}

id _s24BackgroundShortcutRunner13ToolKitHelperCfD_0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1000667F0()
{
  NSString v1 = sub_10006F020();
  swift_bridgeObjectRelease();
  NSString v2 = sub_10006F020();
  swift_bridgeObjectRelease();
  id v3 = [v0 initWithTypeIdentifier:v1 instanceIdentifier:v2];

  return v3;
}

uint64_t sub_100066878(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_100011470;
  return v6();
}

uint64_t sub_100066944(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *id v5 = v4;
  v5[1] = sub_100011470;
  return v7();
}

uint64_t sub_100066A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006F1A0();
  if (sub_100007800(a1, 1, v6) == 1)
  {
    sub_100053404(a1, &qword_100081DA8);
  }
  else
  {
    sub_10006F190();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10006F150();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_100066B80(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100066C5C;
  return v6(a1);
}

uint64_t sub_100066C5C()
{
  sub_1000114D4();
  sub_100011474();
  uint64_t v1 = *v0;
  sub_1000114E0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1000115DC();
  return v3();
}

unint64_t sub_100066D20(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000772C(&qword_1000829A8);
  uint64_t v2 = sub_10006F700();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10006A524();
    unint64_t result = sub_100068680(v13, v14, (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100066EB4);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v9 = v13;
    v9[1] = v14;
    unint64_t result = (unint64_t)sub_1000090F8(&v15, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ToolKitHelper.DynamicEnumerationDefinition()
{
  return self;
}

uint64_t type metadata accessor for ToolKitHelper.ContentPropertyPossibleValuesDefinition()
{
  return self;
}

unint64_t sub_100066EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_10006F780() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        uint64_t v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_10006F780() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            long long v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_10006F780()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_100067000(unint64_t a1)
{
  if (!(a1 >> 62)) {
    return *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_10006B098();
  uint64_t v2 = sub_10006F6F0();
  swift_bridgeObjectRelease();
  return v2;
}

void sub_100067050()
{
  sub_10006B0F8();
  if (v2)
  {
    sub_10006A84C();
    if (v3 != v4)
    {
      sub_10006AB00();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_10006A83C();
    }
  }
  sub_10006AAF0();
  if (v1)
  {
    sub_10000772C(&qword_100082A20);
    uint64_t v5 = (const void *)swift_allocObject();
    size_t v6 = j__malloc_size(v5);
    sub_10006AD68(v6 - 32);
  }
  if (v0)
  {
    uint64_t v7 = (char *)sub_10006B024();
    sub_100067D54(v7, v8, v9);
    sub_10006AD50();
  }
  else
  {
    uint64_t v10 = sub_10006AF14();
    sub_10006783C(v10, v11, v12, v13);
  }
}

void sub_100067104(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

uint64_t sub_100067138(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1000671C8(a1, a2, a3, a4, &qword_100082A30, (uint64_t (*)(void))&type metadata accessor for TypeDefinition, (uint64_t (*)(void))&type metadata accessor for TypeDefinition, (void (*)(void))&type metadata accessor for TypeDefinition);
}

uint64_t sub_100067180(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1000671C8(a1, a2, a3, a4, &qword_100082A18, (uint64_t (*)(void))&type metadata accessor for TypeIdentifier, (uint64_t (*)(void))&type metadata accessor for TypeIdentifier, (void (*)(void))&type metadata accessor for TypeIdentifier);
}

uint64_t sub_1000671C8(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void), void (*a8)(void))
{
  if (a3)
  {
    sub_10006A84C();
    if (v15 != v16)
    {
      sub_10006AB00();
      if (v15)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_10006A83C();
    }
  }
  else
  {
    uint64_t v14 = a2;
  }
  uint64_t v17 = *(void *)(a4 + 16);
  if (v14 <= v17) {
    uint64_t v18 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v18 = v14;
  }
  if (!v18)
  {
    uint64_t v22 = &_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_10000772C(a5);
  uint64_t v19 = a6(0);
  sub_100016518(v19);
  uint64_t v21 = *(void *)(v20 + 72);
  uint64_t v22 = (void *)sub_10006ABE8();
  size_t v23 = j__malloc_size(v22);
  if (!v21 || (v23 - v8 == 0x8000000000000000 ? (BOOL v24 = v21 == -1) : (BOOL v24 = 0), v24))
  {
LABEL_23:
    sub_10006A694();
    uint64_t result = sub_10006F6C0();
    __break(1u);
    return result;
  }
  v22[2] = v17;
  v22[3] = 2 * ((uint64_t)(v23 - v8) / v21);
LABEL_18:
  uint64_t v25 = *(void *)(a6(0) - 8);
  unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v27 = (unint64_t)v22 + v26;
  if (a1)
  {
    sub_1000680DC(a4 + v26, v17, v27, a8);
    sub_10006AD50();
  }
  else
  {
    sub_100067A28(0, v17, v27, a4, a7);
  }
  return (uint64_t)v22;
}

void sub_1000673A4()
{
  sub_10006B0F8();
  if (v2)
  {
    sub_10006A84C();
    if (v3 != v4)
    {
      sub_10006AB00();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_10006A83C();
    }
  }
  sub_10006AAF0();
  if (v1)
  {
    sub_1000677EC();
    uint64_t v5 = (const void *)swift_allocObject();
    size_t v6 = j__malloc_size(v5);
    sub_10006AD68(v6 - 32);
  }
  if (v0)
  {
    uint64_t v7 = (char *)sub_10006B024();
    sub_100067D54(v7, v8, v9);
    sub_10006AD50();
  }
  else
  {
    uint64_t v10 = sub_10006AF14();
    sub_10006783C(v10, v11, v12, v13);
  }
}

uint64_t sub_10006745C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1000671C8(a1, a2, a3, a4, &qword_100082A00, (uint64_t (*)(void))&type metadata accessor for SystemToolProtocol, (uint64_t (*)(void))&type metadata accessor for SystemToolProtocol, (void (*)(void))&type metadata accessor for SystemToolProtocol);
}

uint64_t sub_1000674A4(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1000671C8(a1, a2, a3, a4, &qword_1000829E0, (uint64_t (*)(void))&type metadata accessor for SampleInvocationDefinition, (uint64_t (*)(void))&type metadata accessor for SampleInvocationDefinition, (void (*)(void))&type metadata accessor for SampleInvocationDefinition);
}

uint64_t sub_1000674EC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1000671C8(a1, a2, a3, a4, &qword_1000829D8, (uint64_t (*)(void))&type metadata accessor for RuntimeRequirement, (uint64_t (*)(void))&type metadata accessor for RuntimeRequirement, (void (*)(void))&type metadata accessor for RuntimeRequirement);
}

uint64_t sub_100067534(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1000671C8(a1, a2, a3, a4, &qword_1000829C8, _s15ActionParameterVMa, _s15ActionParameterVMa, (void (*)(void))_s15ActionParameterVMa);
}

uint64_t sub_10006757C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1000671C8(a1, a2, a3, a4, &qword_100082A08, (uint64_t (*)(void))&type metadata accessor for ParameterRelationshipDefinition, (uint64_t (*)(void))&type metadata accessor for ParameterRelationshipDefinition, (void (*)(void))&type metadata accessor for ParameterRelationshipDefinition);
}

uint64_t sub_1000675C4(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1000671C8(a1, a2, a3, a4, &qword_1000829A0, (uint64_t (*)(void))&type metadata accessor for TypedValue, (uint64_t (*)(void))&type metadata accessor for TypedValue, (void (*)(void))&type metadata accessor for TypedValue);
}

void sub_10006760C()
{
  sub_10006B0F8();
  if (v3)
  {
    sub_10006A84C();
    if (v4 != v5)
    {
      sub_10006AB00();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_10006A83C();
    }
  }
  sub_10006AAF0();
  if (v2)
  {
    sub_10000772C(&qword_1000829C0);
    size_t v6 = (void *)swift_allocObject();
    size_t v7 = j__malloc_size(v6);
    uint64_t v6[2] = v1;
    v6[3] = 2 * ((uint64_t)(v7 - 32) / 24);
  }
  if (v0)
  {
    uint64_t v8 = (char *)sub_10006B024();
    sub_100067F1C(v8, v9, v10);
    sub_10006AD50();
  }
  else
  {
    uint64_t v11 = sub_10006AF14();
    sub_100067B5C(v11, v12, v13, v14);
  }
}

void sub_1000676D0(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_100067704(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(void, uint64_t, void *, uint64_t), void (*a7)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    sub_10006A84C();
    if (v12 != v13)
    {
      sub_10006AB00();
      if (v12)
      {
        __break(1u);
        return;
      }
      sub_10006A83C();
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (v15)
  {
    sub_10000772C(a5);
    char v16 = (void *)swift_allocObject();
    size_t v17 = j__malloc_size(v16);
    v16[2] = v14;
    v16[3] = 2 * ((uint64_t)(v17 - 32) / 16);
  }
  else
  {
    char v16 = &_swiftEmptyArrayStorage;
  }
  uint64_t v18 = v16 + 4;
  if (a1)
  {
    a7(a4 + 32, v14, v18);
    sub_10006AD50();
  }
  else
  {
    a6(0, v14, v18, a4);
  }
}

uint64_t sub_1000677EC()
{
  uint64_t v0 = sub_10000772C(&qword_100082138);
  if (sub_10006A5BC(v0)) {
    uint64_t v1 = (uint64_t *)&unk_100082720;
  }
  else {
    uint64_t v1 = (uint64_t *)&unk_100082A28;
  }
  return sub_10000772C(v1);
}

char *sub_10006783C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_10006F710();
  __break(1u);
  return result;
}

uint64_t sub_100067930(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_10006F710();
  __break(1u);
  return result;
}

uint64_t sub_100067A28(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_10006A694();
    sub_10006ACC8();
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(a5(0) - 8);
  uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v11 = *(void *)(v9 + 72);
  unint64_t v12 = v10 + v11 * a1;
  unint64_t v13 = a3 + v11 * v5;
  if (v12 >= v13 || v12 + v11 * v5 <= a3)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v13;
  }
  sub_10006A694();
  sub_10006ACB8();
LABEL_11:
  uint64_t result = sub_10006ACA0();
  __break(1u);
  return result;
}

uint64_t sub_100067B5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_10006F710();
  __break(1u);
  return result;
}

uint64_t sub_100067C5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_10006F710();
  __break(1u);
  return result;
}

char *sub_100067D54(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_10006F710();
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

char *sub_100067DE8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    sub_10006A694();
    __src = (char *)sub_10006ACA0();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

void sub_100067E68(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

char *sub_100067E80(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_10006F710();
    __break(1u);
  }
  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }
  return __src;
}

char *sub_100067F1C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_10006F710();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_100067FB4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_10006F710();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_100068048(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_10006F710();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

void sub_1000680DC(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (a2 < 0)
  {
    sub_10006A694();
    sub_10006ACA0();
    __break(1u);
  }
  else
  {
    sub_10006B168();
    if (v9 < v8 || (a4(0), sub_1000551F4(), v5 + *(void *)(v10 + 72) * v4 <= a3))
    {
      a4(0);
      sub_10006AF04();
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a3 != v5)
    {
      sub_10006AF04();
      swift_arrayInitWithTakeBackToFront();
    }
  }
}

uint64_t sub_1000681E8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_10006F710();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1000682C8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100068584(a1, a2, a3, (void (*)(void))&type metadata accessor for TypeDefinition);
}

void *sub_1000682E0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    sub_10006A694();
    sub_10006ACC8();
LABEL_11:
    uint64_t result = (void *)sub_10006ACA0();
    __break(1u);
    return result;
  }
  if (&__dst[8 * a2] > __src && &__src[8 * a2] > __dst)
  {
    sub_10006A694();
    sub_10006ACB8();
    goto LABEL_11;
  }
  return memcpy(__dst, __src, 8 * a2);
}

uint64_t sub_10006838C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100068584(a1, a2, a3, (void (*)(void))&type metadata accessor for SampleInvocationDefinition);
}

uint64_t sub_1000683A4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100068584(a1, a2, a3, (void (*)(void))&type metadata accessor for RuntimeRequirement);
}

uint64_t sub_1000683BC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 48 * a2 > a1 ? (BOOL v3 = a1 + 48 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_10006F710();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1000684A0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 32 * a2 > a1 ? (BOOL v3 = a1 + 32 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_10006F710();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_100068584(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (a2 < 0)
  {
    sub_10006A694();
    sub_10006ACC8();
LABEL_11:
    uint64_t result = sub_10006ACA0();
    __break(1u);
    return result;
  }
  a4(0);
  sub_1000551F4();
  uint64_t v8 = *(void *)(v7 + 72) * a2;
  unint64_t v9 = a3 + v8;
  unint64_t v10 = a1 + v8;
  if (v9 > a1 && v10 > a3)
  {
    sub_10006A694();
    sub_10006ACB8();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_100068668(uint64_t a1, uint64_t a2)
{
  return sub_100068680(a1, a2, (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100068938);
}

uint64_t sub_100068680(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, Swift::Int))
{
  sub_10006F820();
  sub_10006F090();
  Swift::Int v5 = sub_10006F840();
  return a3(a1, a2, v5);
}

unint64_t sub_100068704(uint64_t a1)
{
  sub_10006F820();
  sub_10006EA40();
  sub_10006A578(&qword_100082308, (void (*)(uint64_t))&type metadata accessor for TypeIdentifier);
  sub_10006F000();
  type metadata accessor for ToolKitIndexer.TypeRegistryKey(0);
  sub_10006DEB0();
  sub_10006A578((unint64_t *)&unk_100082310, (void (*)(uint64_t))&type metadata accessor for Locale);
  sub_10006F000();
  Swift::Int v2 = sub_10006F840();
  return sub_100068A1C(a1, v2);
}

unint64_t sub_100068818()
{
  sub_10006EE10();
  sub_10006A578(&qword_1000829E8, (void (*)(uint64_t))&type metadata accessor for AssistantSchemaIdentifier);
  sub_10006EFF0();
  uint64_t v0 = sub_10006B0B8();
  return sub_100068B74(v0, v1);
}

unint64_t sub_1000688AC(uint64_t a1, uint64_t a2, char a3)
{
  sub_10006F820();
  sub_1000269C4((uint64_t)v8, a1, a2, a3);
  Swift::Int v6 = sub_10006F840();
  return sub_100068D34(a1, a2, a3, v6);
}

unint64_t sub_100068938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_10006F780() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_10006F780() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_100068A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitIndexer.TypeRegistryKey(0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v11 = *(void *)(v5 + 72);
    while (1)
    {
      sub_100016464(*(void *)(v2 + 48) + v11 * v9, (uint64_t)v7);
      if (sub_10006EA30() & 1) != 0 && (sub_10006DE90()) {
        break;
      }
      sub_1000163A8((uint64_t)v7);
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        return v9;
      }
    }
    sub_1000163A8((uint64_t)v7);
  }
  return v9;
}

unint64_t sub_100068B74(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_10006EE10();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_10006A578(&qword_1000829F0, (void (*)(uint64_t))&type metadata accessor for AssistantSchemaIdentifier);
      char v15 = sub_10006F010();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_100068D34(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if (((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return v7;
  }
  uint64_t v11 = ~v6;
  uint64_t v12 = *(void *)(v4 + 48);
  BOOL v13 = a1 != 4;
  BOOL v14 = a1 != 3;
  BOOL v15 = a1 != 2;
  BOOL v16 = a1 != 1;
  if (a2)
  {
    BOOL v13 = 1;
    BOOL v14 = 1;
    BOOL v15 = 1;
    BOOL v16 = 1;
  }
  if (a3 != 2) {
    BOOL v13 = 1;
  }
  BOOL v29 = v13;
  char v17 = a3 != 2 || v14;
  char v28 = v17;
  char v18 = a3 != 2 || v15;
  char v27 = v18;
  char v19 = a3 != 2 || v16;
  if (a2 | a1) {
    BOOL v20 = 0;
  }
  else {
    BOOL v20 = a3 == 2;
  }
  while (1)
  {
    uint64_t v21 = (uint64_t *)(v12 + 24 * v7);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    int v24 = *((unsigned __int8 *)v21 + 16);
    if (!v24)
    {
      if (a3) {
        goto LABEL_28;
      }
      goto LABEL_23;
    }
    if (v24 != 1) {
      break;
    }
    if (a3 != 1) {
      goto LABEL_28;
    }
LABEL_23:
    BOOL v25 = v23 == a1 && v22 == a2;
    if (v25 || (sub_10006F780() & 1) != 0) {
      return v7;
    }
LABEL_28:
    unint64_t v7 = (v7 + 1) & v11;
    if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
      return v7;
    }
  }
  switch(v23)
  {
    case 1:
      if (v19) {
        goto LABEL_28;
      }
      break;
    case 2:
      if (v27) {
        goto LABEL_28;
      }
      break;
    case 3:
      if (v28) {
        goto LABEL_28;
      }
      break;
    case 4:
      if (v29) {
        goto LABEL_28;
      }
      break;
    default:
      if (!v20) {
        goto LABEL_28;
      }
      break;
  }
  return v7;
}

BOOL sub_100068F0C(uint64_t a1)
{
  return (a1 & 0xC000000000000001) == 0;
}

unint64_t sub_100068F1C(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

void sub_100068F40(char a1, uint64_t a2, char a3)
{
  sub_1000691F8(a1, a2, a3, *v3, &qword_100082A30, (uint64_t (*)(void))&type metadata accessor for TypeDefinition, (void (*)(void))&type metadata accessor for TypeDefinition, (void (*)(void))&type metadata accessor for TypeDefinition);
  *uint64_t v3 = v4;
}

void sub_100068FA4(char a1, uint64_t a2, char a3)
{
  sub_1000691F8(a1, a2, a3, *v3, &qword_100082A18, (uint64_t (*)(void))&type metadata accessor for TypeIdentifier, (void (*)(void))&type metadata accessor for TypeIdentifier, (void (*)(void))&type metadata accessor for TypeIdentifier);
  *uint64_t v3 = v4;
}

void sub_100069008(char a1, uint64_t a2, char a3)
{
  sub_1000691F8(a1, a2, a3, *v3, &qword_100082A38, (uint64_t (*)(void))&type metadata accessor for EnumerationCaseDefinition, (void (*)(void))&type metadata accessor for EnumerationCaseDefinition, (void (*)(void))&type metadata accessor for EnumerationCaseDefinition);
  *uint64_t v3 = v4;
}

void sub_10006906C(char a1, uint64_t a2, char a3)
{
  sub_1000691F8(a1, a2, a3, *v3, &qword_1000829D8, (uint64_t (*)(void))&type metadata accessor for RuntimeRequirement, (void (*)(void))&type metadata accessor for RuntimeRequirement, (void (*)(void))&type metadata accessor for RuntimeRequirement);
  *uint64_t v3 = v4;
}

char *sub_1000690D0(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_100069464(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void sub_1000690F0()
{
  sub_100069364();
  void *v0 = v1;
}

void sub_100069110(char a1, uint64_t a2, char a3)
{
  sub_1000691F8(a1, a2, a3, *v3, &qword_100082A10, (uint64_t (*)(void))&type metadata accessor for TypeInstance, (void (*)(void))&type metadata accessor for TypeInstance, (void (*)(void))&type metadata accessor for TypeInstance);
  *uint64_t v3 = v4;
}

char *sub_100069174(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_100069550(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void sub_100069194(char a1, uint64_t a2, char a3)
{
  sub_1000691F8(a1, a2, a3, *v3, &qword_100082998, (uint64_t (*)(void))&type metadata accessor for ToolInvocationSummary.ParameterSummary.Value, (void (*)(void))&type metadata accessor for ToolInvocationSummary.ParameterSummary.Value, (void (*)(void))&type metadata accessor for ToolInvocationSummary.ParameterSummary.Value);
  *uint64_t v3 = v4;
}

void sub_1000691F8(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), void (*a7)(void), void (*a8)(void))
{
  if (a3)
  {
    sub_10006A84C();
    if (v15 != v16)
    {
      sub_10006AB00();
      if (v15)
      {
LABEL_24:
        __break(1u);
        return;
      }
      sub_10006A83C();
    }
  }
  else
  {
    uint64_t v14 = a2;
  }
  uint64_t v17 = *(void *)(a4 + 16);
  if (v14 <= v17) {
    uint64_t v18 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v18 = v14;
  }
  if (!v18)
  {
    uint64_t v22 = &_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_10000772C(a5);
  uint64_t v19 = a6(0);
  sub_100016518(v19);
  uint64_t v21 = *(void *)(v20 + 72);
  uint64_t v22 = (void *)sub_10006ABE8();
  size_t v23 = j__malloc_size(v22);
  if (!v21)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v23 - v8 == 0x8000000000000000 && v21 == -1) {
    goto LABEL_23;
  }
  v22[2] = v17;
  v22[3] = 2 * ((uint64_t)(v23 - v8) / v21);
LABEL_18:
  uint64_t v25 = *(void *)(a6(0) - 8);
  unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v27 = (unint64_t)v22 + v26;
  unint64_t v28 = a4 + v26;
  if (a1)
  {
    sub_1000680DC(v28, v17, v27, a7);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100068584(v28, v17, v27, a8);
  }
  swift_release();
}

void sub_100069364()
{
  sub_10006B0F8();
  if (v3)
  {
    sub_10006A84C();
    if (v4 != v5)
    {
      sub_10006AB00();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_10006A83C();
    }
  }
  sub_10006AAF0();
  if (v2)
  {
    sub_10000772C(&qword_100081AB8);
    uint64_t v6 = (const void *)swift_allocObject();
    size_t v7 = j__malloc_size(v6);
    sub_10006AD68(v7 - 32);
  }
  uint64_t v8 = (char *)sub_10006B024();
  if (v1)
  {
    sub_100067DE8(v8, v9, v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_1000681E8((unint64_t)v8, v9, (unint64_t)v10);
  }
  swift_release();
}

void sub_10006941C(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

char *sub_100069464(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000772C(&qword_1000829D0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  BOOL v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_100067E80(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000683BC((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_100069550(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000772C(&qword_1000829F8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 32);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  BOOL v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_100068048(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000684A0((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

uint64_t sub_100069634(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (v2)
  {
    char v3 = v2;
    sub_10006F050();
  }
  return sub_10006AE2C();
}

uint64_t *sub_100069690(uint64_t *a1)
{
  char v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void *sub_1000696F4(void *result, id a2, unint64_t a3)
{
  switch(a3 >> 61)
  {
    case 0uLL:
    case 3uLL:
      goto LABEL_4;
    case 1uLL:
      goto LABEL_4;
    case 2uLL:

LABEL_4:
      uint64_t result = (void *)swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

id sub_100069790(id result, uint64_t a2, unint64_t a3)
{
  switch(a3 >> 61)
  {
    case 0uLL:
    case 3uLL:
      goto LABEL_4;
    case 1uLL:
LABEL_4:
      uint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 2uLL:
      id v4 = result;
      swift_bridgeObjectRetain();
      uint64_t result = v4;
      break;
    default:
      return result;
  }
  return result;
}

id sub_100069830(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    id v5 = a1;
    return (id)swift_bridgeObjectRetain();
  }
  else
  {
    return a1;
  }
}

void sub_10006987C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1000698C8()
{
  unint64_t result = qword_100082710;
  if (!qword_100082710)
  {
    sub_10000ED38(&qword_100082708);
    sub_10006A578(&qword_100082718, (void (*)(uint64_t))&type metadata accessor for TypedValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100082710);
  }
  return result;
}

unint64_t sub_10006996C()
{
  unint64_t result = qword_1000827C8;
  if (!qword_1000827C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000827C8);
  }
  return result;
}

uint64_t sub_1000699B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000772C(&qword_100082450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100069A24()
{
  unint64_t result = qword_100082800;
  if (!qword_100082800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100082800);
  }
  return result;
}

uint64_t type metadata accessor for ToolKitHelper()
{
  return self;
}

ValueMetadata *type metadata accessor for ToolKitHelper.ValueSetType()
{
  return &type metadata for ToolKitHelper.ValueSetType;
}

uint64_t getEnumTagSinglePayload for ToolKitDeferredValueResolutionError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ToolKitDeferredValueResolutionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100069BF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_100069C20(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ToolKitDeferredValueResolutionError()
{
  return &type metadata for ToolKitDeferredValueResolutionError;
}

unint64_t sub_100069C3C()
{
  unint64_t result = qword_100082880;
  if (!qword_100082880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100082880);
  }
  return result;
}

uint64_t sub_100069C88()
{
  swift_unknownObjectRelease();
  _Block_release(*(const void **)(v0 + 32));
  uint64_t v1 = sub_10006AB24();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_100069CC8()
{
  sub_10006A9F8();
  sub_100056CA8();
  sub_10006AE50();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10006A8B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_10000EA20;
  sub_10006A6A8();
  sub_10006A77C();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100069D60()
{
  sub_10006A9F8();
  sub_100056CA8();
  sub_10006AE50();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10006A8B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100011470;
  sub_10006A6A8();
  sub_10006A77C();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100069DF8()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v0 = sub_10006AB24();
  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100069E30()
{
  sub_100056CA8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10006A8B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100011470;
  sub_10006B084();
  return v3();
}

uint64_t sub_100069EE8()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100069F20()
{
  sub_1000116F8();
  uint64_t v2 = v1;
  uint64_t v3 = *(int **)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10006A8B8(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_10000EA20;
  BOOL v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100082918 + dword_100082918);
  return v7(v2, v3);
}

uint64_t sub_100069FD4()
{
  sub_10006A9F8();
  sub_100056CA8();
  sub_10006AE50();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10006A8B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100011470;
  sub_10006A6A8();
  sub_10006A77C();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10006A06C()
{
  sub_1000116F8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10006A8B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100011470;
  uint64_t v3 = sub_10006A8E4();
  return v4(v3);
}

uint64_t sub_10006A104()
{
  _Block_release(*(const void **)(v0 + 40));
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10006A154()
{
  sub_100056CA8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10006A8B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100011470;
  sub_10006B084();
  return v3();
}

uint64_t sub_10006A20C()
{
  _Block_release(*(const void **)(v0 + 24));
  uint64_t v1 = sub_10006ADF8();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10006A244()
{
  sub_1000116F8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10006A8B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100011470;
  uint64_t v3 = sub_10006A8E4();
  return v4(v3);
}

uint64_t sub_10006A2E0()
{
  sub_10006A9F8();
  sub_100056CA8();
  sub_10006AE50();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10006A8B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100011470;
  sub_10006A6A8();
  sub_10006A77C();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10006A378()
{
  _Block_release(*(const void **)(v0 + 32));
  uint64_t v1 = sub_10006AB24();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10006A3B8()
{
  sub_10006A9F8();
  sub_100056CA8();
  sub_10006AE50();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10006A8B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100011470;
  sub_10006A6A8();
  sub_10006A77C();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10006A44C()
{
  swift_unknownObjectRelease();
  _Block_release(*(const void **)(v0 + 24));

  uint64_t v1 = sub_10006ADF8();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10006A48C()
{
  sub_1000116F8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10006A8B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100011470;
  uint64_t v3 = sub_10006A8E4();
  return v4(v3);
}

uint64_t sub_10006A524()
{
  sub_10006B168();
  sub_10000772C(v1);
  sub_1000551F4();
  uint64_t v2 = sub_10006AE2C();
  v3(v2);
  return v0;
}

uint64_t sub_10006A578(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    sub_10006B0B8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10006A5BC(uint64_t a1)
{
  if (swift_isClassType()) {
    return a1;
  }
  else {
    return 0;
  }
}

uint64_t sub_10006A5FC()
{
  return *(void *)(v0 + 208);
}

uint64_t sub_10006A6A8()
{
  return v0;
}

uint64_t sub_10006A6C8()
{
  return v0;
}

uint64_t sub_10006A6E0()
{
  return swift_task_dealloc();
}

uint64_t sub_10006A710()
{
  return v0;
}

uint64_t sub_10006A728()
{
  return swift_task_dealloc();
}

uint64_t sub_10006A760()
{
  return sub_10006DD90();
}

uint64_t sub_10006A790()
{
  uint64_t v3 = v0[37];
  *(void *)(v1 - 128) = v0[40];
  *(void *)(v1 - 120) = v3;
  uint64_t v4 = v0[33];
  *(void *)(v1 - 112) = v0[36];
  *(void *)(v1 - 104) = v4;
  return swift_task_dealloc();
}

uint64_t sub_10006A7D8()
{
  return swift_beginAccess();
}

uint64_t sub_10006A7FC()
{
  return swift_beginAccess();
}

uint64_t sub_10006A820()
{
  return sub_10005172C(v1, v0);
}

uint64_t sub_10006A85C()
{
  return v0;
}

uint64_t sub_10006A874@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 + 8 * (v4 >> 6) + 64) |= 1 << v4;
  uint64_t v5 = (void *)(*(void *)(v2 + 48) + 16 * v4);
  *uint64_t v5 = v3;
  v5[1] = v1;
  return *(void *)(v2 + 56) + *(void *)(a1 + 72) * v4;
}

uint64_t sub_10006A8B8(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_10006A8E4()
{
  return v0;
}

uint64_t sub_10006A91C()
{
  return sub_10006DDA0();
}

uint64_t sub_10006A944@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + 56) + *(void *)(a1 + 72) * v2;
}

uint64_t sub_10006A978(uint64_t a1)
{
  return sub_100007770(v1, 1, 1, a1);
}

uint64_t sub_10006A998()
{
  return swift_beginAccess();
}

uint64_t sub_10006A9BC()
{
  return v0;
}

uint64_t sub_10006A9E8()
{
  return v0 + 8;
}

uint64_t sub_10006AA34()
{
  return *(void *)(v0 + 528);
}

uint64_t sub_10006AA5C()
{
  return swift_errorRelease();
}

uint64_t sub_10006AA74()
{
  return *(void *)(v0 + 496);
}

NSData sub_10006AAB4()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_10006AACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return a17;
}

void sub_10006AAE0()
{
  *(void *)(v1 + 432) = v0;
}

uint64_t sub_10006AB24()
{
  return v0;
}

uint64_t sub_10006AB34()
{
  return sub_10006DD80();
}

uint64_t sub_10006AB78()
{
  return 1;
}

uint64_t sub_10006AB80()
{
  return sub_10006DD90();
}

uint64_t sub_10006ABA0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

void sub_10006ABCC()
{
  uint64_t v2 = v0[78];
  *(void *)(v1 - 128) = v0[77];
  *(void *)(v1 - 120) = v2;
  *(void *)(v1 - 136) = v0[76];
}

uint64_t sub_10006ABE8()
{
  return swift_allocObject();
}

uint64_t sub_10006AC10()
{
  return sub_100007800(v1, 1, v0);
}

uint64_t sub_10006AC34()
{
  return sub_10006DDA0();
}

uint64_t sub_10006AC5C()
{
  return 0;
}

uint64_t sub_10006ACA0()
{
  return sub_10006F710();
}

uint64_t sub_10006ACD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void), void (*a8)(void))
{
  return sub_1000671C8(0, a2, 1, v8, a5, a6, a7, a8);
}

uint64_t sub_10006AD50()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

void sub_10006AD68(uint64_t a1@<X8>)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_10006AD78()
{
  return swift_willThrow();
}

void *sub_10006AD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, void *a15, void *a16)
{
  return sub_1000696F4(a16, a15, a14);
}

uint64_t sub_10006ADAC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10006ADC8()
{
  return v0 + 8;
}

uint64_t sub_10006ADD8()
{
  return v0 + 8;
}

uint64_t sub_10006ADE8()
{
  return v0;
}

uint64_t sub_10006ADF8()
{
  return v0;
}

uint64_t sub_10006AE08()
{
  return *(void *)(v0 + 496);
}

uint64_t sub_10006AE2C()
{
  return v0;
}

uint64_t sub_10006AE5C()
{
  return swift_allocError();
}

uint64_t sub_10006AE8C()
{
  return sub_10006DD90();
}

BOOL sub_10006AEA8()
{
  return sub_10006F6A0(v0, v1);
}

uint64_t sub_10006AEE0()
{
  return sub_10006DD80();
}

uint64_t sub_10006AF04()
{
  return v0;
}

uint64_t sub_10006AF14()
{
  return 0;
}

uint64_t sub_10006AF60()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10006AF84()
{
  return *(void *)(v0 - 136);
}

uint64_t sub_10006AF90()
{
  return *(void *)(v0 + 96);
}

uint64_t sub_10006AFBC()
{
  return v0;
}

uint64_t sub_10006AFD0()
{
  return sub_10005172C(v0, v1);
}

uint64_t sub_10006AFE8(uint64_t a1)
{
  return ToolInvocationSummary.init(formatString:parameterSummaries:)(a1, v1, v2);
}

NSString sub_10006B000()
{
  return sub_10006F020();
}

uint64_t sub_10006B024()
{
  return v0 + 32;
}

uint64_t sub_10006B030()
{
  return v0;
}

uint64_t sub_10006B044()
{
  return v0;
}

void *sub_10006B058(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,id a29)
{
  unint64_t v31 = *(void *)(v29 - 152);
  return sub_1000696F4(a27, a29, v31);
}

uint64_t sub_10006B078(uint64_t result)
{
  *(void *)(v1 + 456) = result;
  return result;
}

uint64_t sub_10006B098()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10006B0B8()
{
  return v0;
}

uint64_t sub_10006B0C4()
{
  return v0;
}

uint64_t sub_10006B0D0()
{
  return v0;
}

uint64_t sub_10006B0E4()
{
  return v0;
}

uint64_t sub_10006B110(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, Swift::Int))
{
  return sub_100068680(v4, v3, a3);
}

uint64_t sub_10006B128()
{
  return v0;
}

uint64_t sub_10006B134(uint64_t a1)
{
  return sub_100007770(v1, 0, 1, a1);
}

uint64_t sub_10006B154()
{
  return v0 - 68;
}

uint64_t sub_10006B3CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, uint64_t, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), a2, *(void *)(a1 + 32));
}

void sub_10006B3E0(uint64_t a1, void *a2)
{
  uint64_t v3 = WFHandoffSourceKey;
  id v4 = a2;
  uint64_t v5 = [v4 objectForKey:v3];
  uint64_t v6 = (void *)v5;
  BOOL v7 = (void *)WFWorkflowRunSourceHandoff;
  if (v5) {
    BOOL v7 = (void *)v5;
  }
  id v8 = v7;

  id v9 = [v4 objectForKey:WFHandoffWorkflowControllerStateKey];

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10006BE30(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 parameters];
  id v4 = [v3 objectForKey:@"type"];
  uint64_t v5 = [v3 objectForKey:@"webpageURL"];
  uint64_t v6 = [v3 objectForKey:@"userInfoURL"];
  BOOL v7 = +[NSURL URLWithString:v6];

  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  void v12[2] = sub_10006BF78;
  void v12[3] = &unk_10007EF70;
  id v8 = *(void **)(a1 + 40);
  id v9 = *(id *)(a1 + 32);
  id v14 = v5;
  id v15 = v9;
  id v13 = v4;
  id v10 = v5;
  id v11 = v4;
  [v8 deserializeUserInfoAtURL:v7 completionHandler:v12];
}

uint64_t sub_10006BF78(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void, void, uint64_t))(a1[6] + 16))(a1[6], a1[4], a1[5], a2);
}

int main(int argc, const char **argv, const char **envp)
{
  uint64_t v3 = getWFRunningLifecycleLogObject();
  if (os_signpost_enabled(v3))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_INTERVAL_BEGIN, 0xFFFFFFFFuLL, "UntilFirstAction", " enableTelemetry=YES ", buf, 2u);
  }

  id v4 = getWFGeneralLogObject();
  os_signpost_id_t v5 = os_signpost_id_generate(v4);

  uint64_t v6 = getWFGeneralLogObject();
  BOOL v7 = v6;
  if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
  {
    *(_WORD *)id v13 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_INTERVAL_BEGIN, v5, "BackgroundRunnerMain", "", v13, 2u);
  }

  unsetenv("TMPDIR");
  unsetenv("HOME");
  unsetenv("CFFIXED_USER_HOME");
  [VCBundleIdentifierRunner UTF8String];
  _set_user_dir_suffix();
  id v8 = objc_alloc_init(WFIsolatedShortcutRunner);
  id v9 = +[NSXPCListener serviceListener];
  [v9 setDelegate:v8];
  id v10 = getWFGeneralLogObject();
  id v11 = v10;
  if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v10))
  {
    *(_WORD *)uint64_t v12 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, v5, "BackgroundRunnerMain", "", v12, 2u);
  }

  [v9 resume];
  exit(1);
}

void sub_10006C23C(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  void v26[2] = sub_10006C4A0;
  v26[3] = &unk_10007F100;
  id v13 = v11;
  id v29 = v13;
  id v14 = v10;
  uint64_t v15 = *(void *)(a1 + 32);
  id v27 = v14;
  uint64_t v28 = v15;
  uint64_t v16 = objc_retainBlock(v26);
  if ([v9 count])
  {
    uint64_t v17 = [v14 url];
    [v17 startAccessingSecurityScopedResource];

    id v25 = 0;
    uint64_t v18 = [[WFToolKitIndexer alloc] initWithClientIdentifier:@"BackgroundShortcutRunner" error:&v25];
    id v19 = v25;
    if (v19)
    {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
      ((void (*)(void *, const __CFString *))v16[2])(v16, @"ToolKit indexing failed because database failed to initialize");
    }
    else
    {
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472;
      void v21[2] = sub_10006C53C;
      v21[3] = &unk_10007F128;
      uint64_t v20 = *(void *)(a1 + 40);
      id v23 = *(id *)(a1 + 48);
      int v24 = v16;
      uint64_t v22 = v18;
      [(WFToolKitIndexer *)v22 reindexWithRequest:v20 completionHandler:v21];
    }
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    id v19 = +[NSString stringWithFormat:@"ToolKit indexing failed with result: %@", v9];
    ((void (*)(void *, id))v16[2])(v16, v19);
  }
}

void sub_10006C4A0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 48);
  id v4 = *(void (**)(uint64_t))(v3 + 16);
  id v5 = a2;
  v4(v3);
  uint64_t v6 = [*(id *)(a1 + 32) url];
  [v6 stopAccessingSecurityScopedResource];

  id v7 = [*(id *)(a1 + 40) stateMachine];
  [v7 exitWithReason:v5];
}

uint64_t sub_10006C53C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[WFShortcutRunnerSandboxExtensionManager sharedManager];
  [v4 resignIssuedExtensionsWithReason:@"done with ToolKit indexing"];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v5 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);
  return v5();
}

void sub_10006C70C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2 | a3)
  {
    id v4 = *(void (**)(uint64_t))(v3 + 16);
    uint64_t v5 = *(void *)(a1 + 32);
    v4(v5);
  }
  else
  {
    id v6 = +[NSError errorWithDomain:NSPOSIXErrorDomain code:22 userInfo:0];
    (*(void (**)(uint64_t, void, id))(v3 + 16))(v3, 0, v6);
  }
}

void sub_10006C868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2 | a3)
  {
    id v4 = *(void (**)(uint64_t))(v3 + 16);
    uint64_t v5 = *(void *)(a1 + 32);
    v4(v5);
  }
  else
  {
    id v6 = +[NSError errorWithDomain:NSPOSIXErrorDomain code:22 userInfo:0];
    (*(void (**)(uint64_t, void, id))(v3 + 16))(v3, 0, v6);
  }
}

void sub_10006D270(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v5 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
    v5();
  }
  else
  {
    id v6 = [a2 allItems];
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 40);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_10006D54C;
    v9[3] = &unk_10007F060;
    id v10 = *(id *)(a1 + 48);
    +[WFToolKitHelper produceEncodedTypedValuesFromPossibleStates:v6 ofParameter:v7 inAction:v8 completionBlock:v9];
  }
}

id sub_10006D378(void *a1, uint64_t a2)
{
  id v3 = a1;
  if (v3 && (objc_opt_isKindOfClass() & 1) == 0)
  {
    uint64_t v5 = getWFGeneralLogObject();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT))
    {
      int v8 = 136315906;
      id v9 = "WFEnforceClass";
      __int16 v10 = 2114;
      id v11 = v3;
      __int16 v12 = 2114;
      id v13 = (id)objc_opt_class();
      __int16 v14 = 2114;
      uint64_t v15 = a2;
      id v6 = v13;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "%s Warning: %{public}@ is of type %{public}@, not %{public}@! Falling back to nil.", (uint8_t *)&v8, 0x2Au);
    }
    id v4 = 0;
  }
  else
  {
    id v4 = v3;
  }

  return v4;
}

id sub_10006D4A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = sub_10006D378(v3, v4);

  id v6 = [v5 name];
  uint64_t v7 = [*(id *)(a1 + 32) propertyName];
  id v8 = [v6 isEqualToString:v7];

  return v8;
}

id sub_10006D538(uint64_t a1)
{
  return +[WFToolKitHelper produceEncodedTypedPossibleValuesForContentProperty:*(void *)(a1 + 32) completionBlock:*(void *)(a1 + 40)];
}

uint64_t sub_10006D54C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_10006D768(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return +[WFToolKitHelper produceEncodedTypedValueFromCollection:a2 forEncodedExpectedType:*(void *)(a1 + 32) completionBlock:*(void *)(a1 + 40)];
  }
  else {
    return (id)(*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_10006DBD0(uint64_t a1, void *a2)
{
  id v5 = a2;
  if (v5)
  {
    id v3 = *(void **)(a1 + 32);
    uint64_t v4 = [*(id *)(a1 + 40) name];
    [v3 injectResolvedContent:v5 asVariableWithName:v4 completionHandler:*(void *)(a1 + 48)];
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

uint64_t sub_10006DD60()
{
  return POSIXError._nsError.getter();
}

uint64_t sub_10006DD70()
{
  return type metadata accessor for POSIXError();
}

uint64_t sub_10006DD80()
{
  return dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
}

uint64_t sub_10006DD90()
{
  return dispatch thunk of PropertyListEncoder.encode<A>(_:)();
}

uint64_t sub_10006DDA0()
{
  return _BridgedStoredNSError.init(_:userInfo:)();
}

uint64_t sub_10006DDB0()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_10006DDC0()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_10006DDD0()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

void sub_10006DDE0(NSURL *retstr@<X8>)
{
}

uint64_t sub_10006DDF0()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10006DE00()
{
  return type metadata accessor for URL();
}

uint64_t sub_10006DE20()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10006DE30()
{
  return type metadata accessor for UUID();
}

uint64_t sub_10006DE40()
{
  return Locale.init(identifier:)();
}

uint64_t sub_10006DE50()
{
  return Locale.identifier.getter();
}

uint64_t sub_10006DE60()
{
  return static Locale.preferredLanguages.getter();
}

NSLocale sub_10006DE70()
{
  return Locale._bridgeToObjectiveC()();
}

uint64_t sub_10006DE80()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t sub_10006DE90()
{
  return static Locale.== infix(_:_:)();
}

uint64_t sub_10006DEA0()
{
  return static Locale._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10006DEB0()
{
  return type metadata accessor for Locale();
}

uint64_t sub_10006DEC0()
{
  return ToolKitIndexingPolicy.init(from:)();
}

uint64_t sub_10006DED0()
{
  return type metadata accessor for ToolKitIndexingPolicy();
}

uint64_t sub_10006DEE0()
{
  return ToolInvocationBox.__allocating_init(encodedToolInvocation:)();
}

uint64_t sub_10006DEF0()
{
  return ToolInvocationBox.createAction(given:)();
}

uint64_t sub_10006DF10()
{
  return type metadata accessor for ToolInvocationBox();
}

uint64_t sub_10006DF20()
{
  return TableTemplateValue<>.propertyQuery(metadata:actionIdentifier:)();
}

uint64_t sub_10006DF30()
{
  return type metadata accessor for WFDeviceIdiomResource.Requirement();
}

uint64_t sub_10006DF40()
{
  return WFDeviceIdiomResource.requirement.getter();
}

uint64_t sub_10006DF50()
{
  return type metadata accessor for WFDeviceIdiomResource();
}

uint64_t sub_10006DF60()
{
  return WFFeatureFlagResource.value.getter();
}

uint64_t sub_10006DF70()
{
  return WFFeatureFlagResource.domain.getter();
}

uint64_t sub_10006DF80()
{
  return WFFeatureFlagResource.feature.getter();
}

uint64_t sub_10006DF90()
{
  return type metadata accessor for WFFeatureFlagResource();
}

uint64_t sub_10006DFA0()
{
  return WFGetAppSettingAction.fullyQualifiedActionIdentifier.getter();
}

uint64_t sub_10006DFB0()
{
  return type metadata accessor for WFGetAppSettingAction();
}

uint64_t sub_10006DFC0()
{
  return WFDeviceCapabilityResource.capability.getter();
}

uint64_t sub_10006DFE0()
{
  return ContentPropertyPossibleValue.label.getter();
}

uint64_t sub_10006DFF0()
{
  return type metadata accessor for ContentPropertyPossibleValue();
}

uint64_t sub_10006E000()
{
  return ContentGraphRepresentationContext.init(shortcutsParameter:shortcutsVariableSource:toolkitParameter:)();
}

uint64_t sub_10006E010()
{
  return type metadata accessor for ContentGraphRepresentationContext();
}

uint64_t sub_10006E020()
{
  return static DisplayRepresentationConfiguration.inMemoryImages.getter();
}

uint64_t sub_10006E030()
{
  return static DisplayRepresentationConfiguration.fileBackedImages.getter();
}

uint64_t sub_10006E040()
{
  return type metadata accessor for DisplayRepresentationConfiguration();
}

uint64_t sub_10006E050()
{
  return LinkSnapshot.stateByContainerId.getter();
}

uint64_t sub_10006E060()
{
  return type metadata accessor for LinkSnapshot.State();
}

uint64_t sub_10006E070()
{
  return static LinkSnapshot.empty.getter();
}

uint64_t sub_10006E0A0()
{
  return type metadata accessor for LinkSnapshot();
}

uint64_t sub_10006E0B0()
{
  return WFLogSignpost.signposter.getter();
}

uint64_t sub_10006E0C0()
{
  return static WFLogSignpost.signposter(for:)();
}

uint64_t sub_10006E0D0()
{
  return WFLogSignpost.name.getter();
}

uint64_t sub_10006E0E0()
{
  return WFLogSignpost.state.getter();
}

uint64_t sub_10006E0F0()
{
  return type metadata accessor for WFLogSignpost();
}

uint64_t sub_10006E100()
{
  return WFLogSignpost.init(_:_:_:)();
}

uint64_t sub_10006E110()
{
  return ToolKitSeedSnapshot.adding(other:)();
}

uint64_t sub_10006E120()
{
  return type metadata accessor for ToolKitIndexingReason.Changeset.Provenance();
}

uint64_t sub_10006E130()
{
  return ToolKitIndexingReason.Changeset.debugDescription.getter();
}

uint64_t sub_10006E140()
{
  return static ToolKitIndexingReason.Changeset.== infix(_:_:)();
}

uint64_t sub_10006E150()
{
  return ToolKitIndexingReason.Changeset.encoded()();
}

uint64_t sub_10006E160()
{
  return type metadata accessor for ToolKitIndexingReason.Changeset();
}

uint64_t sub_10006E170()
{
  return LaunchServicesSnapshot.DatabaseVersion.sequenceNumber.getter();
}

uint64_t sub_10006E180()
{
  return LaunchServicesSnapshot.DatabaseVersion.uuid.getter();
}

uint64_t sub_10006E190()
{
  return type metadata accessor for LaunchServicesSnapshot.DatabaseVersion();
}

uint64_t sub_10006E1A0()
{
  return LaunchServicesSnapshot.stateByBundleId.getter();
}

uint64_t sub_10006E1B0()
{
  return type metadata accessor for LaunchServicesSnapshot.State();
}

uint64_t sub_10006E1C0()
{
  return static LaunchServicesSnapshot.empty.getter();
}

uint64_t sub_10006E1E0()
{
  return LaunchServicesSnapshot.version.getter();
}

uint64_t sub_10006E200()
{
  return type metadata accessor for LaunchServicesSnapshot();
}

uint64_t sub_10006E210()
{
  return ToolKitIndexingRequest.retryCount.getter();
}

uint64_t sub_10006E220()
{
  return type metadata accessor for ToolKitIndexingRequest.TestingConfig.Failure();
}

uint64_t sub_10006E230()
{
  return ToolKitIndexingRequest.TestingConfig.failure.getter();
}

uint64_t sub_10006E240()
{
  return type metadata accessor for ToolKitIndexingRequest.TestingConfig();
}

uint64_t sub_10006E250()
{
  return ToolKitIndexingRequest.testingConfig.getter();
}

uint64_t sub_10006E260()
{
  return ToolKitIndexingRequest.id.getter();
}

uint64_t sub_10006E270()
{
  return type metadata accessor for ToolKitTestingRetryingError();
}

uint64_t sub_10006E280()
{
  return static WFLog.subscript.getter();
}

uint64_t sub_10006E290()
{
  return UTType.identifier.getter();
}

uint64_t sub_10006E2A0()
{
  return type metadata accessor for UTType();
}

uint64_t sub_10006E2B0()
{
  return OSSignpostID.init(log:)();
}

uint64_t sub_10006E2C0()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t sub_10006E2D0()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t sub_10006E2E0()
{
  return OSSignposter.logHandle.getter();
}

uint64_t sub_10006E2F0()
{
  return type metadata accessor for OSSignposter();
}

uint64_t sub_10006E300()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t sub_10006E310()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t sub_10006E320()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t sub_10006E330()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t sub_10006E340()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t sub_10006E350()
{
  return Logger.logObject.getter();
}

uint64_t sub_10006E360()
{
  return type metadata accessor for Logger();
}

uint64_t sub_10006E370()
{
  return type metadata accessor for SystemToolProtocol();
}

uint64_t sub_10006E380()
{
  return AssistantToolSchemaDefinition.sampleInvocations.getter();
}

uint64_t sub_10006E390()
{
  return type metadata accessor for AssistantToolSchemaDefinition();
}

uint64_t sub_10006E3A0()
{
  return type metadata accessor for ToolTypeDefinition();
}

uint64_t sub_10006E3B0()
{
  return static ToolVisibilityFlag.allCases.getter();
}

uint64_t sub_10006E3C0()
{
  return static ToolVisibilityFlag.approved.getter();
}

uint64_t sub_10006E3D0()
{
  return static ToolVisibilityFlag.assistant.getter();
}

uint64_t sub_10006E3E0()
{
  return static ToolVisibilityFlag.shortcuts.getter();
}

uint64_t sub_10006E3F0()
{
  return type metadata accessor for ToolVisibilityFlag();
}

uint64_t sub_10006E400()
{
  return ToolSymbolIconColor.init(rawValue:)();
}

uint64_t sub_10006E410()
{
  return type metadata accessor for ToolSymbolIconColor();
}

uint64_t sub_10006E420()
{
  return type metadata accessor for ToolSymbolIconStyle();
}

uint64_t sub_10006E430()
{
  return ToolInvocationSummary.ParameterSummary.Value.init(localizedLabel:)();
}

uint64_t sub_10006E440()
{
  return type metadata accessor for ToolInvocationSummary.ParameterSummary.Value();
}

uint64_t sub_10006E450()
{
  return type metadata accessor for ToolInvocationSummary.ParameterSummary();
}

uint64_t sub_10006E470()
{
  return type metadata accessor for ToolInvocationSummary();
}

uint64_t sub_10006E480()
{
  return type metadata accessor for ToolAuthenticationPolicy();
}

uint64_t sub_10006E490()
{
  return static ToolFlag.isDiscontinued.getter();
}

uint64_t sub_10006E4A0()
{
  return static ToolFlag.opensAppWhenRun.getter();
}

uint64_t sub_10006E4B0()
{
  return static ToolFlag.outputHasSnippet.getter();
}

uint64_t sub_10006E4C0()
{
  return static ToolFlag.showsOpenWhenRun.getter();
}

uint64_t sub_10006E4D0()
{
  return static ToolFlag.outputProvidesDialog.getter();
}

uint64_t sub_10006E4E0()
{
  return static ToolFlag.doesNotImplementPerform.getter();
}

uint64_t sub_10006E4F0()
{
  return static ToolFlag.isHomeResidentCompatible.getter();
}

uint64_t sub_10006E500()
{
  return type metadata accessor for ToolFlag();
}

uint64_t sub_10006E510()
{
  return type metadata accessor for ToolIcon();
}

uint64_t sub_10006E520()
{
  return type metadata accessor for ToolDatabase.LaunchServicesDatabaseVersionKey();
}

uint64_t sub_10006E530()
{
  return ToolDatabase.LaunchServicesDatabaseVersion.init(uuid:sequenceNumber:)();
}

uint64_t sub_10006E540()
{
  return type metadata accessor for ToolDatabase.LaunchServicesDatabaseVersion();
}

uint64_t sub_10006E550()
{
  return type metadata accessor for ToolDatabase.LaunchServicesSnapshotDatabaseVersionKey();
}

uint64_t sub_10006E560()
{
  return ToolDatabase.DatabaseFile.environment.getter();
}

uint64_t sub_10006E570()
{
  return type metadata accessor for ToolDatabase.DatabaseFile();
}

uint64_t sub_10006E580()
{
  return type metadata accessor for ToolDatabase.VersionKey();
}

uint64_t sub_10006E590()
{
  return type metadata accessor for ToolDatabase.Environment();
}

uint64_t sub_10006E5A0()
{
  return type metadata accessor for ToolDatabase.Transaction.Mode();
}

uint64_t sub_10006E5B0()
{
  return ToolDatabase.Transaction.perform<A>(work:)();
}

uint64_t sub_10006E5C0()
{
  return type metadata accessor for ToolDatabase.Transaction();
}

uint64_t sub_10006E5D0()
{
  return ToolDatabase.Rollbackable.inSavepoint<A>(name:work:)();
}

uint64_t sub_10006E5F0()
{
  return ToolDatabase.DidChangeNotificationSource.rawValue.getter();
}

uint64_t sub_10006E600()
{
  return type metadata accessor for ToolDatabase.DidChangeNotificationSource();
}

uint64_t sub_10006E610()
{
  return ToolDatabase.file.getter();
}

uint64_t sub_10006E620()
{
  return ToolDatabase.Version.init()();
}

uint64_t sub_10006E630()
{
  return type metadata accessor for ToolDatabase.Version();
}

uint64_t sub_10006E640()
{
  return ToolDatabase.Accessor.addTool(localId:toolType:sourceContainerId:attributionContainerId:outputTypeInstance:customIcon:deprecationReplacementId:flags:requirements:authenticationPolicy:sourceActionProvider:visibilityFlags:)();
}

uint64_t sub_10006E650()
{
  return ToolDatabase.Accessor.addToolOutputType(toolId:typeIdentifier:)();
}

void sub_10006E660(Swift::Int64 toolId, Swift::String locale, Swift::String name, Swift::String_optional outputResultName, Swift::String_optional descriptionSummary, Swift::String_optional descriptionAttribution, Swift::String_optional descriptionResult, Swift::String_optional descriptionNote, Swift::String_optional descriptionRequires, Swift::String_optional deprecationMessage)
{
}

uint64_t sub_10006E670()
{
  return ToolDatabase.Accessor.addSystemToolProtocol(toolId:systemToolProtocol:)();
}

void sub_10006E680(Swift::Int64 toolId, Swift::String locale, Swift::String category)
{
}

uint64_t sub_10006E690()
{
  return ToolDatabase.Accessor.addParameter(toolId:key:typeId:typeInstance:sortOrder:relationships:flags:)();
}

uint64_t sub_10006E6A0()
{
  return ToolDatabase.Accessor.indexLinkState(_:)();
}

uint64_t sub_10006E6B0()
{
  return ToolDatabase.Accessor.addTypeCoercion(typeId:coercionDefinition:)();
}

void sub_10006E6C0(Swift::Int64 toolId, Swift::String locale, Swift::String keyword, Swift::Int order)
{
}

uint64_t sub_10006E6D0()
{
  return ToolDatabase.Accessor.addEntityProperty(typeId:id:typeInstance:)();
}

void sub_10006E6E0(Swift::String typeId, Swift::String coercionIdentifier)
{
}

uint64_t sub_10006E6F0()
{
  return ToolDatabase.Accessor.addEnumerationCase(typeId:locale:id:title:subtitle:altText:image:snippetPluginModel:synonyms:)();
}

uint64_t sub_10006E700()
{
  return ToolDatabase.Accessor.addContainerMetadata(containerId:bundleVersion:containerType:deviceId:teamId:origin:)();
}

void sub_10006E710(Swift::Int64 toolId, Swift::String_optional parameterKey, Swift::OpaquePointer sampleInvocations)
{
}

uint64_t sub_10006E720()
{
  return ToolDatabase.Accessor.addPredicateTemplates(_:typeId:)();
}

uint64_t sub_10006E730()
{
  return ToolDatabase.Accessor.addSystemTypeProtocol(typeId:systemTypeProtocol:)();
}

void sub_10006E740(Swift::Int64 toolId, Swift::String identifier)
{
}

void sub_10006E750(Swift::Int64 toolId, Swift::String key, Swift::String locale, Swift::String name, Swift::String_optional description)
{
}

uint64_t sub_10006E760()
{
  return ToolDatabase.Accessor.indexLaunchServicesState(_:)();
}

void sub_10006E770(Swift::Int64 containerId, Swift::String locale, Swift::String synonym, Swift::Int order)
{
}

void sub_10006E780(Swift::String typeId, Swift::String name, Swift::String_optional numericFormat, Swift::OpaquePointer synonyms, Swift::String locale)
{
}

void sub_10006E790(Swift::String typeId, Swift::String propertyId, Swift::String locale, Swift::String displayName)
{
}

void sub_10006E7A0(Swift::Int64 containerId, Swift::String locale, Swift::String name)
{
}

void sub_10006E7B0(Swift::Int64 toolId, Swift::Int64 containerId)
{
}

void sub_10006E7C0(Swift::OpaquePointer bundleIdentifiers)
{
}

uint64_t sub_10006E7D0()
{
  return ToolDatabase.Accessor.store<A>(_:for:)();
}

uint64_t sub_10006E7E0()
{
  return ToolDatabase.Accessor.addType(_:sourceContainerId:)();
}

void sub_10006E7F0()
{
}

uint64_t sub_10006E800()
{
  return ToolDatabase.Savepoint.perform<A>(work:)();
}

uint64_t sub_10006E810()
{
  return ToolDatabase.__allocating_init()();
}

uint64_t sub_10006E820()
{
  return type metadata accessor for ToolDatabase();
}

uint64_t sub_10006E830()
{
  return type metadata accessor for TypedValue.DeferredValue.Storage();
}

uint64_t sub_10006E850()
{
  return type metadata accessor for TypedValue.PrimitiveValue();
}

uint64_t sub_10006E860()
{
  return TypedValue.ID.variable.getter();
}

uint64_t sub_10006E870()
{
  return type metadata accessor for TypedValue.ID();
}

uint64_t sub_10006E880()
{
  return type metadata accessor for TypedValue();
}

uint64_t sub_10006E890()
{
  return IndexingLog.log(failedIndexOfToolWithDescription:in:metadata:)();
}

uint64_t sub_10006E8A0()
{
  return IndexingLog.log(successfulIndexOfTool:in:)();
}

uint64_t sub_10006E8B0()
{
  return IndexingLog.log(resolvedChangeset:decisionMetadata:for:)();
}

uint64_t sub_10006E8C0()
{
  return IndexingLog.log(successfulIndexOfType:in:)();
}

uint64_t sub_10006E8D0()
{
  return IndexingLog.log(failedIndexOfTypeWithDescription:in:metadata:)();
}

uint64_t sub_10006E8E0()
{
  return static IndexingLog.shared.getter();
}

uint64_t sub_10006E8F0()
{
  return type metadata accessor for IndexingLog();
}

uint64_t sub_10006E900()
{
  return AllPredicate.init()();
}

uint64_t sub_10006E910()
{
  return type metadata accessor for AllPredicate();
}

uint64_t sub_10006E920()
{
  return type metadata accessor for AnyPredicate();
}

uint64_t sub_10006E930()
{
  return TypeInstance.asCollection()();
}

uint64_t sub_10006E940()
{
  return TypeInstance.typeIdentifiers.getter();
}

uint64_t sub_10006E960()
{
  return type metadata accessor for TypeInstance();
}

uint64_t sub_10006E970()
{
  return SecureCodable.wrappedValue.getter();
}

uint64_t sub_10006E980()
{
  return HashableCGSize.size.getter();
}

uint64_t sub_10006E990()
{
  return type metadata accessor for HashableCGSize();
}

uint64_t sub_10006E9A0()
{
  return TypeDefinition.typeIdentifier.getter();
}

uint64_t sub_10006E9B0()
{
  return TypeDefinition.systemProtocols.getter();
}

uint64_t sub_10006E9C0()
{
  return TypeDefinition.displayRepresentation.getter();
}

uint64_t sub_10006E9D0()
{
  return TypeDefinition.coercions.getter();
}

uint64_t sub_10006E9E0()
{
  return type metadata accessor for TypeDefinition();
}

uint64_t sub_10006E9F0()
{
  return TypeIdentifier.bundleIdentifier.getter();
}

uint64_t sub_10006EA00()
{
  return TypeIdentifier.PrimitiveTypeIdentifier.debugDescription.getter();
}

uint64_t sub_10006EA10()
{
  return static TypeIdentifier.PrimitiveTypeIdentifier.allCases.getter();
}

uint64_t sub_10006EA20()
{
  return type metadata accessor for TypeIdentifier.PrimitiveTypeIdentifier();
}

uint64_t sub_10006EA30()
{
  return static TypeIdentifier.== infix(_:_:)();
}

uint64_t sub_10006EA40()
{
  return type metadata accessor for TypeIdentifier();
}

uint64_t sub_10006EA50()
{
  return type metadata accessor for QueryDefinition.PredicateTemplates();
}

uint64_t sub_10006EA60()
{
  return QueryDefinition.templates.getter();
}

uint64_t sub_10006EA70()
{
  return type metadata accessor for QueryDefinition();
}

uint64_t sub_10006EA80()
{
  return RuntimePlatform.description.getter();
}

uint64_t sub_10006EA90()
{
  return static RuntimePlatform.all.getter();
}

uint64_t sub_10006EAA0()
{
  return type metadata accessor for RuntimePlatform();
}

uint64_t sub_10006EAB0()
{
  return EntityDefinition.properties.getter();
}

uint64_t sub_10006EAC0()
{
  return type metadata accessor for EntityDefinition();
}

uint64_t sub_10006EAD0()
{
  return IdSearchPredicate.identifiers.getter();
}

uint64_t sub_10006EAE0()
{
  return type metadata accessor for IdSearchPredicate();
}

uint64_t sub_10006EAF0()
{
  return CoercionDefinition.wrappedUTTypes.getter();
}

uint64_t sub_10006EB00()
{
  return static CoercionDefinition.Direction.== infix(_:_:)();
}

uint64_t sub_10006EB10()
{
  return type metadata accessor for CoercionDefinition.Direction();
}

uint64_t sub_10006EB20()
{
  return CoercionDefinition.direction.getter();
}

uint64_t sub_10006EB30()
{
  return type metadata accessor for CoercionDefinition();
}

uint64_t sub_10006EB40()
{
  return RestrictionContext.ValueSetDefinition.bundleIdentifier.getter();
}

uint64_t sub_10006EB50()
{
  return type metadata accessor for RestrictionContext.ValueSetDefinition.Inner();
}

uint64_t sub_10006EB60()
{
  return RestrictionContext.ValueSetDefinition.inner.getter();
}

uint64_t sub_10006EB70()
{
  return type metadata accessor for RestrictionContext.ValueSetDefinition();
}

uint64_t sub_10006EB80()
{
  return type metadata accessor for RuntimeDeviceState();
}

uint64_t sub_10006EB90()
{
  return type metadata accessor for RuntimeRequirement();
}

uint64_t sub_10006EBA0()
{
  return SuggestedPredicate.init()();
}

uint64_t sub_10006EBB0()
{
  return type metadata accessor for SuggestedPredicate();
}

uint64_t sub_10006EBC0()
{
  return type metadata accessor for SystemTypeProtocol();
}

uint64_t sub_10006EBD0()
{
  return type metadata accessor for ContainerDefinition.ContainerType();
}

uint64_t sub_10006EBE0()
{
  return type metadata accessor for ContainerDefinition.Origin();
}

uint64_t sub_10006EBF0()
{
  return type metadata accessor for ParameterDefinition.ParameterFlags();
}

uint64_t sub_10006EC00()
{
  return type metadata accessor for ParameterDefinition();
}

uint64_t sub_10006EC10()
{
  return type metadata accessor for DisplayRepresentation.PluginModelData();
}

uint64_t sub_10006EC20()
{
  return DisplayRepresentation.ResolvingRequest.storage.getter();
}

uint64_t sub_10006EC30()
{
  return type metadata accessor for DisplayRepresentation.ResolvingRequest();
}

uint64_t sub_10006EC40()
{
  return DisplayRepresentation.snippetPluginModel.getter();
}

uint64_t sub_10006EC50()
{
  return type metadata accessor for DisplayRepresentation.Image();
}

uint64_t sub_10006EC60()
{
  return DisplayRepresentation.image.getter();
}

uint64_t sub_10006EC70()
{
  return DisplayRepresentation.init(title:subtitle:altText:image:snippetPluginModel:synonyms:)();
}

uint64_t sub_10006EC80()
{
  return DisplayRepresentation.title.getter();
}

uint64_t sub_10006EC90()
{
  return type metadata accessor for DisplayRepresentation.AltText();
}

uint64_t sub_10006ECA0()
{
  return DisplayRepresentation.Storage.data.getter();
}

uint64_t sub_10006ECB0()
{
  return type metadata accessor for DisplayRepresentation.Storage();
}

uint64_t sub_10006ECC0()
{
  return DisplayRepresentation.altText.getter();
}

uint64_t sub_10006ECD0()
{
  return type metadata accessor for DisplayRepresentation.Subtitle();
}

uint64_t sub_10006ECE0()
{
  return DisplayRepresentation.subtitle.getter();
}

uint64_t sub_10006ECF0()
{
  return DisplayRepresentation.synonyms.getter();
}

uint64_t sub_10006ED00()
{
  return type metadata accessor for DisplayRepresentation();
}

uint64_t sub_10006ED10()
{
  return EnumerationDefinition.init(identifier:cases:kind:systemProtocols:runtimeRequirements:displayRepresentation:)();
}

uint64_t sub_10006ED20()
{
  return type metadata accessor for EnumerationDefinition.Kind();
}

uint64_t sub_10006ED30()
{
  return EnumerationDefinition.cases.getter();
}

uint64_t sub_10006ED40()
{
  return type metadata accessor for EnumerationDefinition();
}

uint64_t sub_10006ED50()
{
  return StringSearchPredicate.searchString.getter();
}

uint64_t sub_10006ED60()
{
  return type metadata accessor for StringSearchPredicate();
}

uint64_t sub_10006ED70()
{
  return type metadata accessor for RuntimePlatformVersion();
}

uint64_t sub_10006ED80()
{
  return AssistantSchemaProvider.tools.getter();
}

uint64_t sub_10006ED90()
{
  return static AssistantSchemaProvider.shared.getter();
}

uint64_t sub_10006EDA0()
{
  return type metadata accessor for AssistantSchemaProvider();
}

uint64_t sub_10006EDB0()
{
  return SearchableItemPredicate.searchableItem.getter();
}

uint64_t sub_10006EDC0()
{
  return type metadata accessor for SearchableItemPredicate();
}

uint64_t sub_10006EDD0()
{
  return EntityPropertyDefinition.displayName.getter();
}

uint64_t sub_10006EDE0()
{
  return EntityPropertyDefinition.id.getter();
}

uint64_t sub_10006EDF0()
{
  return EntityPropertyDefinition.type.getter();
}

uint64_t sub_10006EE00()
{
  return type metadata accessor for EntityPropertyDefinition();
}

uint64_t sub_10006EE10()
{
  return type metadata accessor for AssistantSchemaIdentifier();
}

uint64_t sub_10006EE20()
{
  return EnumerationCaseDefinition.displayRepresentation.getter();
}

uint64_t sub_10006EE30()
{
  return EnumerationCaseDefinition.init(id:displayRepresentation:)();
}

uint64_t sub_10006EE40()
{
  return EnumerationCaseDefinition.id.getter();
}

uint64_t sub_10006EE50()
{
  return type metadata accessor for EnumerationCaseDefinition();
}

uint64_t sub_10006EE60()
{
  return TypeDisplayRepresentation.numericFormat.getter();
}

uint64_t sub_10006EE70()
{
  return TypeDisplayRepresentation.name.getter();
}

uint64_t sub_10006EE80()
{
  return TypeDisplayRepresentation.synonyms.getter();
}

uint64_t sub_10006EE90()
{
  return type metadata accessor for TypeDisplayRepresentation();
}

uint64_t sub_10006EEA0()
{
  return ContentItemClassDescriptor.load()();
}

uint64_t sub_10006EEB0()
{
  return type metadata accessor for ContentItemClassDescriptor();
}

uint64_t sub_10006EEC0()
{
  return static SampleInvocationDefinition.definitions(from:typeName:parameterKey:)();
}

uint64_t sub_10006EED0()
{
  return type metadata accessor for SampleInvocationDefinition();
}

uint64_t sub_10006EEE0()
{
  return type metadata accessor for TypedValueResolutionCoercion();
}

uint64_t sub_10006EEF0()
{
  return static RuntimeAvailabilityAnnotation.expand(from:)();
}

uint64_t sub_10006EF00()
{
  return RuntimeAvailabilityAnnotation.init(platform:introducingVersion:deprecatingVersion:obsoletingVersion:)();
}

uint64_t sub_10006EF10()
{
  return type metadata accessor for RuntimeAvailabilityAnnotation();
}

uint64_t sub_10006EF30()
{
  return type metadata accessor for ParameterRelationshipDefinition.Relation();
}

uint64_t sub_10006EF40()
{
  return type metadata accessor for ParameterRelationshipDefinition();
}

uint64_t sub_10006EF50()
{
  return Query.toTableTemplateValue()();
}

uint64_t sub_10006EF60()
{
  return Query.limit.getter();
}

uint64_t sub_10006EF70()
{
  return Query.init(predicate:sort:limit:)();
}

uint64_t sub_10006EF80()
{
  return Query.predicate.getter();
}

uint64_t sub_10006EF90()
{
  return type metadata accessor for Query();
}

uint64_t sub_10006EFA0()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

NSDictionary sub_10006EFB0()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_10006EFC0()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10006EFD0()
{
  return Dictionary.description.getter();
}

uint64_t sub_10006EFE0()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_10006EFF0()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_10006F000()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_10006F010()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_10006F020()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10006F030()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10006F040()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10006F050()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10006F060()
{
  return String.init<A>(describing:)();
}

uint64_t sub_10006F070()
{
  return static String._fromUTF8Repairing(_:)();
}

uint64_t sub_10006F080()
{
  return String.init(stringInterpolation:)();
}

uint64_t sub_10006F090()
{
  return String.hash(into:)();
}

void sub_10006F0A0(Swift::String a1)
{
}

uint64_t sub_10006F0B0()
{
  return String.init(typeIdentifier:)();
}

Swift::Int sub_10006F0C0()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_10006F0D0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_10006F0E0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_10006F0F0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10006F100()
{
  return Array.description.getter();
}

uint64_t sub_10006F110()
{
  return specialized Array._endMutation()();
}

uint64_t sub_10006F120()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_10006F130()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_10006F140()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_10006F150()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_10006F170()
{
  return static MainActor.shared.getter();
}

uint64_t sub_10006F180()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_10006F190()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_10006F1A0()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_10006F1B0()
{
  return ThrowingTaskGroup.makeAsyncIterator()();
}

uint64_t sub_10006F1C0()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10006F1D0()
{
  return Set.description.getter();
}

uint64_t sub_10006F1E0()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_10006F1F0()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t sub_10006F210()
{
  return WFParameter.toolkitParameterFlags(for:)();
}

uint64_t sub_10006F230()
{
  return NSOrderedSet.makeIterator()();
}

uint64_t sub_10006F240()
{
  return WFContentItem.ToolKitTypeResolutionContext.init(measurementUnitTypeProvider:outputValueType:displayRepresentationConfig:localizationContext:)();
}

uint64_t sub_10006F250()
{
  return WFContentItem.ToolKitTypeResolutionContext.init(measurementUnitTypeProvider:requiredCoercion:displayRepresentationConfig:localizationContext:)();
}

uint64_t sub_10006F260()
{
  return type metadata accessor for WFContentItem.ToolKitTypeResolutionContext();
}

uint64_t sub_10006F270()
{
  return static WFContentItem.classDescriptor.getter();
}

uint64_t sub_10006F2B0()
{
  return type metadata accessor for WFContentItem.TypedValueResolutionContext();
}

uint64_t sub_10006F2D0()
{
  return static WFContentItem.toolkitTypeDefinition(context:)();
}

uint64_t sub_10006F2E0()
{
  return static WFContentItem.toolkitTypeDisplayRepresentation(localizationContext:)();
}

uint64_t sub_10006F2F0()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_10006F300()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_10006F310()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_10006F320()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_10006F330()
{
  return LNEnumMetadata.toolkitDefinition(for:displayRepresentationConfig:localizationContext:)();
}

uint64_t sub_10006F360()
{
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

uint64_t sub_10006F370()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t sub_10006F380()
{
  return WFContentProperty.toolkitTypeInstance(classDescriptor:seen:isDeferrable:)();
}

uint64_t sub_10006F390()
{
  return WFContentProperty.associatedEnumMetadataIfAvailable()();
}

uint64_t sub_10006F3A0()
{
  return static NSNotificationName.toolKitIndexingBegan.getter();
}

uint64_t sub_10006F3B0()
{
  return static NSNotificationName.toolkitDatabaseChanged.getter();
}

uint64_t sub_10006F3C0()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t sub_10006F3D0()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t sub_10006F3E0()
{
  return WFContentCollection.TypedValueResolutionContext.init(expectedType:displayRepresentationConfig:)();
}

uint64_t sub_10006F3F0()
{
  return type metadata accessor for WFContentCollection.TypedValueResolutionContext();
}

uint64_t sub_10006F410()
{
  return WFContentItemRegistry.contentItemClasses.getter();
}

uint64_t sub_10006F420()
{
  return LNConfigurableQueryRequest.init(query:target:options:)();
}

uint64_t sub_10006F430()
{
  return LNEffectiveBundleIdentifierGrouping.isLinkSystemFrameworkIntent.getter();
}

uint64_t sub_10006F440()
{
  return WFContentPropertyPossibleValuesGetter.unsafeTypedValues.getter();
}

Swift::Int sub_10006F450(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t sub_10006F460()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_10006F470()
{
  return WFAction.outputContentClasses.getter();
}

uint64_t sub_10006F480()
{
  return WFAction.toolkitSystemProtocols.getter();
}

uint64_t sub_10006F490()
{
  return WFAction.isLinkSystemFrameworkIntent.getter();
}

uint64_t sub_10006F4B0()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t sub_10006F4C0()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t sub_10006F4D0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10006F4E0()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_10006F4F0()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_10006F500()
{
  return dispatch thunk of SetAlgebra.isSuperset(of:)();
}

uint64_t sub_10006F510()
{
  return dispatch thunk of SetAlgebra.intersection(_:)();
}

uint64_t sub_10006F520()
{
  return dispatch thunk of SetAlgebra.formUnion(_:)();
}

uint64_t sub_10006F530()
{
  return dispatch thunk of SetAlgebra.init()();
}

uint64_t sub_10006F540()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_10006F550()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_10006F560()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t sub_10006F570()
{
  return __CocoaSet.makeIterator()();
}

uint64_t sub_10006F580()
{
  return __CocoaSet.count.getter();
}

uint64_t sub_10006F590()
{
  return __CocoaSet.member(for:)();
}

uint64_t sub_10006F5A0()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t sub_10006F5B0()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_10006F5C0()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_10006F5D0()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_10006F5E0()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t sub_10006F5F0()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_10006F600(Swift::Int a1)
{
}

uint64_t sub_10006F610()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_10006F620()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_10006F630()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_10006F640()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_10006F650()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_10006F660()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_10006F670()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_10006F680()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_10006F690()
{
  return _print_unlocked<A, B>(_:_:)();
}

BOOL sub_10006F6A0(Swift::Bool isUnique, Swift::Int capacity)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(isUnique, capacity);
}

uint64_t sub_10006F6B0()
{
  return _NativeDictionary._delete(at:)();
}

uint64_t sub_10006F6C0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10006F6D0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10006F6E0()
{
  return _assertionFailure(_:_:flags:)();
}

uint64_t sub_10006F6F0()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_10006F700()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_10006F710()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_10006F740(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_10006F750()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_10006F760()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_10006F770()
{
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t sub_10006F780()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10006F7A0()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t sub_10006F7B0()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10006F7C0()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10006F7D0()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_10006F7E0()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_10006F7F0()
{
  return Error._code.getter();
}

uint64_t sub_10006F800()
{
  return Error._domain.getter();
}

uint64_t sub_10006F810()
{
  return Error._userInfo.getter();
}

uint64_t sub_10006F820()
{
  return Hasher.init(_seed:)();
}

void sub_10006F830(Swift::UInt a1)
{
}

Swift::Int sub_10006F840()
{
  return Hasher._finalize()();
}

uint64_t sub_10006F850()
{
  return _typeName(_:qualified:)();
}

uint64_t BSPthreadGetCurrentPriority()
{
  return _BSPthreadGetCurrentPriority();
}

CFTimeInterval CACurrentMediaTime(void)
{
  return _CACurrentMediaTime();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

uint64_t WFLinkActionIdentifierFromShortcutsActionIdentifier()
{
  return _WFLinkActionIdentifierFromShortcutsActionIdentifier();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _set_user_dir_suffix()
{
  return __set_user_dir_suffix();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void exit(int a1)
{
}

uint64_t getWFGeneralLogObject()
{
  return _getWFGeneralLogObject();
}

uint64_t getWFRunningLifecycleLogObject()
{
  return _getWFRunningLifecycleLogObject();
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return _os_signpost_enabled(log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return _os_signpost_id_generate(log);
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastMetatype()
{
  return _swift_dynamicCastMetatype();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return _swift_dynamicCastObjCProtocolConditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassFromObject()
{
  return _swift_getObjCClassFromObject();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isClassType()
{
  return _swift_isClassType();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

int unsetenv(const char *a1)
{
  return _unsetenv(a1);
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 URLByDeletingLastPathComponent];
}

id objc_msgSend_URLForSimulatingHandoffWithActivityType_userInfo_webpageURL_fromSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForSimulatingHandoffWithActivityType:userInfo:webpageURL:fromSource:");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_accessSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 accessSpecifier];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_allItems(void *a1, const char *a2, ...)
{
  return _[a1 allItems];
}

id objc_msgSend_allProperties(void *a1, const char *a2, ...)
{
  return _[a1 allProperties];
}

id objc_msgSend_allowVariableInjection(void *a1, const char *a2, ...)
{
  return _[a1 allowVariableInjection];
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_contentItemClass(void *a1, const char *a2, ...)
{
  return _[a1 contentItemClass];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_createActionFromEncodedToolInvocation_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createActionFromEncodedToolInvocation:error:");
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_decodeContentPropertyPossibleValuesDefinition_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeContentPropertyPossibleValuesDefinition:error:");
}

id objc_msgSend_decodeDynamicEnumerationDefinition_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeDynamicEnumerationDefinition:error:");
}

id objc_msgSend_decodeSearchStringInEncodedQuery_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeSearchStringInEncodedQuery:error:");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_deserializeUserInfoAtURL_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deserializeUserInfoAtURL:completionHandler:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_exitWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exitWithReason:");
}

id objc_msgSend_fetchToolInvocationSummaryForInvocation_variableSource_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchToolInvocationSummaryForInvocation:variableSource:completionBlock:");
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileWithURL_options_ofType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileWithURL:options:ofType:");
}

id objc_msgSend_getValuesWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getValuesWithCompletionBlock:");
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInMethod:object:file:lineNumber:description:");
}

id objc_msgSend_handlingRequestStateWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlingRequestStateWithReason:");
}

id objc_msgSend_if_firstObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "if_firstObjectPassingTest:");
}

id objc_msgSend_initWithActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityType:");
}

id objc_msgSend_initWithClientIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientIdentifier:error:");
}

id objc_msgSend_initWithName_variableProvider_aggrandizements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:variableProvider:aggrandizements:");
}

id objc_msgSend_injectResolvedContent_asVariableWithName_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "injectResolvedContent:asVariableWithName:completionHandler:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isFileURL(void *a1, const char *a2, ...)
{
  return _[a1 isFileURL];
}

id objc_msgSend_mappedData(void *a1, const char *a2, ...)
{
  return _[a1 mappedData];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectWithPropertyListObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectWithPropertyListObject:");
}

id objc_msgSend_parameterForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parameterForKey:");
}

id objc_msgSend_parameterKey(void *a1, const char *a2, ...)
{
  return _[a1 parameterKey];
}

id objc_msgSend_parameters(void *a1, const char *a2, ...)
{
  return _[a1 parameters];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_possibleValues(void *a1, const char *a2, ...)
{
  return _[a1 possibleValues];
}

id objc_msgSend_produceEncodedDisplayRepresentationForRequest_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "produceEncodedDisplayRepresentationForRequest:completionBlock:");
}

id objc_msgSend_produceEncodedTypedValuesFromPossibleStates_ofParameter_inAction_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "produceEncodedTypedValuesFromPossibleStates:ofParameter:inAction:completionBlock:");
}

id objc_msgSend_produceVariableFromEncodedReference_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "produceVariableFromEncodedReference:error:");
}

id objc_msgSend_propertyName(void *a1, const char *a2, ...)
{
  return _[a1 propertyName];
}

id objc_msgSend_proposedSharedTemporaryFileURLForFilename_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proposedSharedTemporaryFileURLForFilename:");
}

id objc_msgSend_queryItemWithName_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryItemWithName:value:");
}

id objc_msgSend_registerHandler_forIncomingRequestsWithAction_scheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerHandler:forIncomingRequestsWithAction:scheme:");
}

id objc_msgSend_reindexWithRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reindexWithRequest:completionHandler:");
}

id objc_msgSend_requestSandboxExtensionForToolKitIndexingWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestSandboxExtensionForToolKitIndexingWithCompletionHandler:");
}

id objc_msgSend_resignIssuedExtensionsWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resignIssuedExtensionsWithReason:");
}

id objc_msgSend_resolveDeferredValueForEncodedStorage_encodedExpectedType_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolveDeferredValueForEncodedStorage:encodedExpectedType:completionBlock:");
}

id objc_msgSend_resolveWithVariableSource_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolveWithVariableSource:completionHandler:");
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_retrieveContentCollectionWithVariableSource_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveContentCollectionWithVariableSource:completionHandler:");
}

id objc_msgSend_runLinkQuery_valueSet_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runLinkQuery:valueSet:completionBlock:");
}

id objc_msgSend_serializedRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 serializedRepresentation];
}

id objc_msgSend_serviceListener(void *a1, const char *a2, ...)
{
  return _[a1 serviceListener];
}

id objc_msgSend_setContent_forVariableWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContent:forVariableWithName:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHost:");
}

id objc_msgSend_setQueryItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueryItems:");
}

id objc_msgSend_setScheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScheme:");
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInfo:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_sharedAppGroupDirectoryURL(void *a1, const char *a2, ...)
{
  return _[a1 sharedAppGroupDirectoryURL];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_startAccessingSecurityScopedResource(void *a1, const char *a2, ...)
{
  return _[a1 startAccessingSecurityScopedResource];
}

id objc_msgSend_stateMachine(void *a1, const char *a2, ...)
{
  return _[a1 stateMachine];
}

id objc_msgSend_stepWithAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stepWithAction:");
}

id objc_msgSend_stopAccessingSecurityScopedResource(void *a1, const char *a2, ...)
{
  return _[a1 stopAccessingSecurityScopedResource];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_temporaryFileURLBySerializingUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "temporaryFileURLBySerializingUserInfo:");
}

id objc_msgSend_typeWithUTType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "typeWithUTType:");
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _[a1 url];
}

id objc_msgSend_valueSetTypeForDefinition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueSetTypeForDefinition:");
}

id objc_msgSend_variableContent(void *a1, const char *a2, ...)
{
  return _[a1 variableContent];
}

id objc_msgSend_wf_isContainedByDirectoryAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wf_isContainedByDirectoryAtURL:");
}

id objc_msgSend_wf_loadStatesWithSearchTerm_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wf_loadStatesWithSearchTerm:completionHandler:");
}

id objc_msgSend_wf_securelyArchivedDataWithRootObject_deletionResponsibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wf_securelyArchivedDataWithRootObject:deletionResponsibility:");
}

id objc_msgSend_wf_securelyUnarchiveObjectWithData_allowedClasses_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wf_securelyUnarchiveObjectWithData:allowedClasses:completionHandler:");
}

id objc_msgSend_workflowController(void *a1, const char *a2, ...)
{
  return _[a1 workflowController];
}

id objc_msgSend_writeToURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:options:error:");
}