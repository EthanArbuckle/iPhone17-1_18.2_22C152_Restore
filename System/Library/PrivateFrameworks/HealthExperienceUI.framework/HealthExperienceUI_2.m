uint64_t RuntimeItemDataSource.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + qword_1E9A486F0;
  sub_1AD20E2C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RuntimeItemDataSource.__deallocating_deinit()
{
  RuntimeItemDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD30CF24()
{
  uint64_t v1 = v0 + qword_1E9A486F8;
  swift_beginAccess();
  return *(void *)v1;
}

void *sub_1AD30CF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4 = v3;
  sub_1AD1FF534();
  v8 = (void *)sub_1AD740310();
  id v9 = objc_allocWithZone(MEMORY[0x1E4F2B5F0]);
  v10 = (void *)sub_1AD73F180();
  id v11 = objc_msgSend(v9, sel_initWithName_loggingCategory_, v10, v8);

  v4[2] = v11;
  sub_1AD73D2C0();
  v4[3] = a1;
  v4[4] = a2;
  *(void *)((char *)v4 + qword_1E9A486F8) = a3;
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_1AD30BE28(v12);
  return v4;
}

uint64_t sub_1AD30D068(uint64_t a1)
{
  sub_1AD2C96F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for RuntimeItemDataSource.Section()
{
  return __swift_instantiateGenericMetadata();
}

id sub_1AD30D0DC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1AD1F437C();
  *a1 = v2;
  return v2;
}

void sub_1AD30D118(id *a1)
{
}

uint64_t sub_1AD30D144()
{
  return 24;
}

__n128 sub_1AD30D150(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1AD30D164@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD30BBA4(a1);
}

uint64_t sub_1AD30D18C()
{
  return 24;
}

__n128 sub_1AD30D198(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1AD30D1AC@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1AD30CF24();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD30D1E8()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_1AD30BD38(v0);
}

uint64_t sub_1AD30D214()
{
  return 24;
}

__n128 sub_1AD30D220(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

void sub_1AD30D234()
{
  sub_1AD20E2C8();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t type metadata accessor for RuntimeItemDataSource()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for RuntimeItemDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RuntimeItemDataSource);
}

uint64_t dispatch thunk of RuntimeItemDataSource.changeObservers.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of RuntimeItemDataSource.changeObservers.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of RuntimeItemDataSource.changeObservers.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of RuntimeItemDataSource.snapshot.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of RuntimeItemDataSource.snapshot.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of RuntimeItemDataSource.snapshot.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of RuntimeItemDataSource.sections.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of RuntimeItemDataSource.__allocating_init(identifier:sections:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of RuntimeItemDataSource.updateSections(newSections:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of RuntimeItemDataSource.castedItem(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of RuntimeItemDataSource.item(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t _s18HealthExperienceUI27DataTypeDetailConfigurationV24HorizontalGroupComponentVwxx_0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s18HealthExperienceUI27DataTypeDetailConfigurationV24HorizontalGroupComponentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s18HealthExperienceUI27DataTypeDetailConfigurationV24HorizontalGroupComponentVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18HealthExperienceUI27DataTypeDetailConfigurationV24HorizontalGroupComponentVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionViewLayoutContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CollectionViewLayoutContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1AD30D64C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1AD73BBD0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1AD30D690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *v3;
  uint64_t v8 = sub_1AD73A670();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1AD73D120();
  MEMORY[0x1F4188790](v12 - 8);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (_sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0() == a1 && v15 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v41 = v9;
  char v17 = sub_1AD740BC0();
  swift_bridgeObjectRelease();
  if (v17)
  {
LABEL_13:
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v27 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v28 = sub_1AD73A1D0();
    uint64_t v30 = v29;

    _s18HealthExperienceUI29CollectionViewHeaderProvidingPAAE24makeDefaultConfiguration5UIKit013UIListContentJ0VyFZ_0();
    uint64_t v31 = type metadata accessor for HeaderItem(0);
    swift_allocObject();
    HeaderItem.init(title:buttonText:buttonWasTapped:configuration:automationIdentifier:)(v28, v30, 0, 0, 0, 0, (uint64_t)v14, 0, 0);
    uint64_t v33 = v32;
    a3[3] = v31;
    uint64_t result = sub_1AD30EB0C((unint64_t *)&qword_1EB739890, (void (*)(uint64_t))type metadata accessor for HeaderItem);
    a3[4] = result;
    *a3 = v33;
    return result;
  }
  if (_sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0() == a1 && v18 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v20 = sub_1AD740BC0();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      a3[3] = (uint64_t)&type metadata for EmptyHeaderItem;
      a3[4] = sub_1AD2D1244();
      v21 = (void *)swift_allocObject();
      *a3 = (uint64_t)v21;
      swift_beginAccess();
      uint64_t v23 = qword_1E9A2E210;
      v22 = off_1E9A2E218;
      unint64_t v42 = 0xD000000000000010;
      unint64_t v43 = 0x80000001AD772080;
      swift_bridgeObjectRetain();
      sub_1AD73A660();
      sub_1AD30EB0C((unint64_t *)&qword_1EB7392C0, MEMORY[0x1E4F27990]);
      sub_1AD740B50();
      sub_1AD73F300();
      swift_bridgeObjectRelease();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v11, v8);
      unint64_t v25 = v43;
      v21[2] = v42;
      v21[3] = v25;
      v21[4] = v23;
      v21[5] = v22;
      return result;
    }
  }
  uint64_t v34 = swift_getObjCClassFromMetadata();
  id v35 = objc_msgSend(self, sel_bundleForClass_, v34);
  sub_1AD73A1D0();

  uint64_t v44 = sub_1AD30DE64();
  uint64_t v45 = v36;
  sub_1AD73F300();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  sub_1AD73F300();
  sub_1AD73F290();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  sub_1AD73F300();
  uint64_t v37 = v44;
  uint64_t v38 = v45;
  uint64_t v44 = 0;
  LOBYTE(v45) = -1;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v7;
  LOBYTE(v42) = 0;
  a3[3] = (uint64_t)&type metadata for TextViewItem;
  a3[4] = sub_1AD301270();
  uint64_t v40 = swift_allocObject();
  *a3 = v40;
  return TextViewItem.init(leadingSymbolName:symbolScale:symbolPaletteColors:symbolAlignment:markdown:container:automationIdentifier:linkAction:)(0, 0, -1, 0, &v44, v37, v38, (unsigned __int8 *)&v42, v40 + 16, 0, 0, (uint64_t)sub_1AD30E3B0, v39);
}

void sub_1AD30DC08(uint64_t a1)
{
  uint64_t v2 = sub_1AD73CBA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73CAD0();
  v6 = sub_1AD73CB80();
  os_log_type_t v7 = sub_1AD73F940();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = a1;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v19 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_1AD740E30();
    uint64_t v18 = sub_1AD1F62D4(v11, v12, &v19);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v6, v7, "%{public}s: presenting privacy splash", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v10, -1, -1);
    uint64_t v13 = v9;
    a1 = v17;
    MEMORY[0x1B3E68450](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14 = (void *)sub_1AD73F180();
  id v15 = objc_msgSend(self, sel_presenterForPrivacySplashWithIdentifier_, v14);

  if (v15) {
    objc_msgSend(v15, sel_setPresentingViewController_, a1);
  }
  objc_msgSend(v15, sel_present);
}

uint64_t sub_1AD30DE64()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI17PrivacyDataSource_healthStore), sel_profileIdentifier);
  objc_msgSend(v1, sel_type);

  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = sub_1AD73A1D0();

  return v4;
}

void sub_1AD30DFA4()
{
}

uint64_t sub_1AD30DFD4()
{
  swift_release();
  return swift_release();
}

uint64_t sub_1AD30E024()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  sub_1AD20E2C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1AD30E100()
{
  sub_1AD30E024();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD30E158()
{
  return type metadata accessor for PrivacyDataSource();
}

uint64_t type metadata accessor for PrivacyDataSource()
{
  uint64_t result = qword_1E9A2C168;
  if (!qword_1E9A2C168) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AD30E1AC()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1AD30E200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1AD30D690(a1, a2, a3);
}

void *sub_1AD30E224(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ListLayoutConfiguration();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 8);
  if (qword_1EB7400D8 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB73EE30);
  ListLayoutConfiguration.withFooter.getter((uint64_t)v4);
  v6 = ListLayoutConfiguration.layout(for:)(v5);
  sub_1AD225778((uint64_t)v4);
  return v6;
}

uint64_t sub_1AD30E310()
{
  sub_1AD273D70();
  uint64_t v0 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  sub_1AD406E30(v0, v1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD30E360()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD30E3A0()
{
  return swift_deallocObject();
}

void sub_1AD30E3B0(uint64_t a1)
{
}

uint64_t sub_1AD30E3D4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD30E434(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1AD73A670();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  os_log_type_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC18HealthExperienceUI17PrivacyDataSource_researchStudiesItem;
  *(void *)(v2 + OBJC_IVAR____TtC18HealthExperienceUI17PrivacyDataSource_researchStudiesItem) = 0;
  uint64_t v9 = OBJC_IVAR____TtC18HealthExperienceUI17PrivacyDataSource_appSourcesItem;
  *(void *)(v2 + OBJC_IVAR____TtC18HealthExperienceUI17PrivacyDataSource_appSourcesItem) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC18HealthExperienceUI17PrivacyDataSource_healthStore) = a1;
  uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  v59 = (void *)MEMORY[0x1E4FBC860];
  swift_retain();
  id v11 = a1;
  id v12 = objc_msgSend(v11, sel_profileIdentifier);
  id v13 = objc_msgSend(v12, sel_type);

  if (v13 != (id)4)
  {
    uint64_t v55 = v5;
    uint64_t v14 = type metadata accessor for AppSourcesDataSourceItem();
    swift_allocObject();
    *(void *)(v2 + v9) = sub_1AD4448A4((uint64_t)v11);
    uint64_t result = swift_release();
    uint64_t v16 = *(void *)(v2 + v9);
    if (!v16)
    {
      __break(1u);
      goto LABEL_22;
    }
    uint64_t v57 = v14;
    uint64_t v17 = sub_1AD30EB0C(&qword_1EB73A4E0, (void (*)(uint64_t))type metadata accessor for AppSourcesDataSourceItem);
    uint64_t v58 = v17;
    *(void *)&long long v56 = v16;
    swift_retain();
    uint64_t v18 = sub_1AD1FE01C(0, 1, 1, MEMORY[0x1E4FBC860]);
    v59 = v18;
    unint64_t v20 = v18[2];
    unint64_t v19 = v18[3];
    if (v20 >= v19 >> 1) {
      v59 = sub_1AD1FE01C((void *)(v19 > 1), v20 + 1, 1, v18);
    }
    uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v56, v14);
    __n128 v22 = MEMORY[0x1F4188790](v21);
    v24 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v25 + 16))(v24, v22);
    sub_1AD1FAE5C(v20, (uint64_t)v24, (uint64_t *)&v59, v14, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
    uint64_t v10 = v59;
    uint64_t v5 = v55;
  }
  v26 = &selRef__setupEntryItems;
  id v27 = objc_msgSend(v11, sel_profileIdentifier);
  id v28 = objc_msgSend(v27, sel_type);

  if (v28 == (id)1)
  {
    uint64_t v29 = type metadata accessor for ResearchStudySourcesDataSourceItem();
    swift_allocObject();
    *(void *)(v2 + v8) = sub_1AD633730((uint64_t)v11);
    uint64_t result = swift_release();
    uint64_t v30 = *(void *)(v2 + v8);
    if (v30)
    {
      uint64_t v57 = v29;
      uint64_t v31 = sub_1AD30EB0C(&qword_1EB73B538, (void (*)(uint64_t))type metadata accessor for ResearchStudySourcesDataSourceItem);
      uint64_t v58 = v31;
      *(void *)&long long v56 = v30;
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v59 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v10 = sub_1AD1FE01C(0, v10[2] + 1, 1, v10);
        v59 = v10;
      }
      unint64_t v34 = v10[2];
      unint64_t v33 = v10[3];
      if (v34 >= v33 >> 1)
      {
        v59 = sub_1AD1FE01C((void *)(v33 > 1), v34 + 1, 1, v10);
        uint64_t v29 = v57;
        uint64_t v31 = v58;
      }
      uint64_t v35 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v56, v29);
      __n128 v36 = MEMORY[0x1F4188790](v35);
      uint64_t v38 = (char *)&v54 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v39 + 16))(v38, v36);
      sub_1AD1FAE5C(v34, (uint64_t)v38, (uint64_t *)&v59, v29, v31);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
      uint64_t v10 = v59;
      swift_release();
      v26 = &selRef__setupEntryItems;
      goto LABEL_14;
    }
LABEL_22:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_14:
  id v40 = [v11 v26[361]];
  id v41 = objc_msgSend(v40, sel_type);

  if (v41 != (id)4)
  {
    uint64_t v42 = type metadata accessor for DeviceSourcesDataSourceItem();
    swift_allocObject();
    unint64_t v43 = sub_1AD5A8FFC((uint64_t)v11);
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_1AD1FE01C(0, v10[2] + 1, 1, v10);
    }
    unint64_t v45 = v10[2];
    unint64_t v44 = v10[3];
    if (v45 >= v44 >> 1) {
      uint64_t v10 = sub_1AD1FE01C((void *)(v44 > 1), v45 + 1, 1, v10);
    }
    uint64_t v57 = v42;
    uint64_t v58 = sub_1AD30EB0C(&qword_1E9A2C178, (void (*)(uint64_t))type metadata accessor for DeviceSourcesDataSourceItem);
    *(void *)&long long v56 = v43;
    v10[2] = v45 + 1;
    sub_1AD20FE90(&v56, (uint64_t)&v10[5 * v45 + 4]);
    swift_release();
    v59 = v10;
  }
  sub_1AD73A660();
  uint64_t v46 = sub_1AD73A620();
  uint64_t v48 = v47;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1AD1FBD54(MEMORY[0x1E4FBC860]);
  uint64_t v49 = swift_bridgeObjectRetain();
  uint64_t v50 = Array<A>.identifierToIndexDict()(v49);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1AD275004();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD74C370;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = 0;
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = v50;
  *(void *)(inited + 64) = v46;
  *(void *)(inited + 72) = v48;
  uint64_t v52 = sub_1AD1FBF24();
  return MutableArrayDataSource.init(arrangedSections:identifier:)(inited, v52, v53);
}

uint64_t sub_1AD30EB0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t EmergencyAccessUserStatus.onboardingStatus.getter()
{
  sub_1AD30EB88();
  sub_1AD73BB10();
  return v1;
}

void sub_1AD30EB88()
{
  if (!qword_1EB740810)
  {
    type metadata accessor for HKEmergencyOnboardingStatus(255);
    sub_1AD30F4E8(&qword_1EB7412F8, type metadata accessor for HKEmergencyOnboardingStatus);
    unint64_t v0 = sub_1AD73BB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB740810);
    }
  }
}

uint64_t EmergencyAccessUserStatus.onboardingStatus.setter()
{
  return sub_1AD73BB20();
}

void (*EmergencyAccessUserStatus.onboardingStatus.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1AD30EB88();
  v2[4] = sub_1AD73BB00();
  return sub_1AD30ECDC;
}

void sub_1AD30ECDC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t EmergencyAccessUserStatus.isStewieSupported.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EmergencyAccessUserStatus() + 20));
}

uint64_t type metadata accessor for EmergencyAccessUserStatus()
{
  uint64_t result = qword_1EB740F50;
  if (!qword_1EB740F50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t EmergencyAccessUserStatus.init(onboardingStatus:isStewieSupported:)@<X0>(char a1@<W2>, uint64_t a2@<X8>)
{
  type metadata accessor for HKEmergencyOnboardingStatus(0);
  sub_1AD30F4E8(&qword_1EB7412F8, type metadata accessor for HKEmergencyOnboardingStatus);
  sub_1AD73BB30();
  uint64_t result = type metadata accessor for EmergencyAccessUserStatus();
  *(unsigned char *)(a2 + *(int *)(result + 20)) = a1;
  return result;
}

unint64_t sub_1AD30EE4C()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_1AD30EE8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AD30FD6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD30EEB4(uint64_t a1)
{
  unint64_t v2 = sub_1AD30F0F4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AD30EEF0(uint64_t a1)
{
  unint64_t v2 = sub_1AD30F0F4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EmergencyAccessUserStatus.encode(to:)(void *a1)
{
  sub_1AD30F484(0, &qword_1EB73D258, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  os_log_type_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD30F0F4();
  sub_1AD740D90();
  v9[15] = 0;
  sub_1AD30EB88();
  sub_1AD30F4E8(&qword_1EB73CAF8, (void (*)(uint64_t))sub_1AD30EB88);
  sub_1AD740B00();
  if (!v1)
  {
    type metadata accessor for EmergencyAccessUserStatus();
    v9[14] = 1;
    sub_1AD740AD0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1AD30F0F4()
{
  unint64_t result = qword_1EB740F38;
  if (!qword_1EB740F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB740F38);
  }
  return result;
}

uint64_t EmergencyAccessUserStatus.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  sub_1AD30EB88();
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD30F484(0, &qword_1EB73C318, MEMORY[0x1E4FBBDC0]);
  uint64_t v26 = v7;
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = type metadata accessor for EmergencyAccessUserStatus();
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD30F0F4();
  sub_1AD740D80();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v21 = v12;
  uint64_t v13 = v23;
  uint64_t v14 = v24;
  char v28 = 0;
  sub_1AD30F4E8(&qword_1EB739368, (void (*)(uint64_t))sub_1AD30EB88);
  uint64_t v15 = v25;
  sub_1AD740A40();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v21, v6, v15);
  char v27 = 1;
  char v16 = sub_1AD740A10();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v26);
  char v17 = v16 & 1;
  uint64_t v19 = (uint64_t)v21;
  uint64_t v18 = v22;
  v21[*(int *)(v10 + 20)] = v17;
  sub_1AD2A29F0(v19, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1AD2A4294(v19);
}

void sub_1AD30F484(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AD30F0F4();
    unint64_t v7 = a3(a1, &type metadata for EmergencyAccessUserStatus.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AD30F4E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD30F530@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EmergencyAccessUserStatus.init(from:)(a1, a2);
}

uint64_t sub_1AD30F548(void *a1)
{
  return EmergencyAccessUserStatus.encode(to:)(a1);
}

uint64_t sub_1AD30F560@<X0>(uint64_t a1@<X8>)
{
  sub_1AD30EB88();
  uint64_t result = sub_1AD73BB10();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_1AD30F5AC()
{
  return sub_1AD73BB20();
}

void *initializeBufferWithCopyOfBuffer for EmergencyAccessUserStatus(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1AD30EB88();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for EmergencyAccessUserStatus(uint64_t a1)
{
  sub_1AD30EB88();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for EmergencyAccessUserStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AD30EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for EmergencyAccessUserStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AD30EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for EmergencyAccessUserStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AD30EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for EmergencyAccessUserStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AD30EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyAccessUserStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AD30F92C);
}

uint64_t sub_1AD30F92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AD30EB88();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for EmergencyAccessUserStatus(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AD30FA10);
}

void sub_1AD30FA10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1AD30EB88();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
}

void sub_1AD30FACC()
{
  sub_1AD30EB88();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for EmergencyAccessUserStatus.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AD30FC2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmergencyAccessUserStatus.CodingKeys()
{
  return &type metadata for EmergencyAccessUserStatus.CodingKeys;
}

unint64_t sub_1AD30FC68()
{
  unint64_t result = qword_1E9A2C180;
  if (!qword_1E9A2C180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C180);
  }
  return result;
}

unint64_t sub_1AD30FCC0()
{
  unint64_t result = qword_1EB740F48;
  if (!qword_1EB740F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB740F48);
  }
  return result;
}

unint64_t sub_1AD30FD18()
{
  unint64_t result = qword_1EB740F40;
  if (!qword_1EB740F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB740F40);
  }
  return result;
}

uint64_t sub_1AD30FD6C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001AD776FC0 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD776FE0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1AD740BC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void HKCodableDateInterval.dateInterval.getter()
{
  id v1 = objc_msgSend(self, sel_hk_dateIntervalWithCodableDateInterval_sourceTimeZone_, v0, 0);
  sub_1AD739DB0();
}

id static HKCodableDateInterval.make(from:)()
{
  uint64_t v0 = (void *)sub_1AD739D90();
  id v1 = objc_msgSend(v0, sel_hk_codableDateInterval);

  return v1;
}

id HKCodableQuantity.init(_:)(void *a1)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v3 = result;
    objc_msgSend(a1, sel__value);
    objc_msgSend(v3, sel_setValue_);
    id v4 = objc_msgSend(a1, sel__unit);
    id v5 = objc_msgSend(v4, sel_unitString);

    if (!v5)
    {
      _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
      id v5 = (id)sub_1AD73F180();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v3, sel_setUnitString_, v5);

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableQuantity.quantity.getter()
{
  id result = objc_msgSend(v0, sel_unitString);
  if (result)
  {
    uint64_t v2 = result;
    _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

    id v3 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(self, sel_unitFromString_, v3);

    objc_msgSend(v0, sel_value);
    id v6 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v4, v5);

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableMetadataKeyValuePair.init(pair:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1AD73CBA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v11 = result;
    swift_bridgeObjectRetain();
    id v12 = v11;
    uint64_t v13 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setKey_, v13);

    if (a3)
    {
      self;
      uint64_t v14 = swift_dynamicCastObjCClass();
      if (v14)
      {
        uint64_t v15 = (void *)v14;
        sub_1AD2147D4(0, &qword_1EB732EF8);
        id v16 = a3;
        id v17 = HKCodableQuantity.init(_:)(v15);
        objc_msgSend(v12, sel_setQuantityValue_, v17);

LABEL_10:
        swift_bridgeObjectRelease();
        return v12;
      }
      self;
      uint64_t v18 = swift_dynamicCastObjCClass();
      if (v18)
      {
        uint64_t v19 = v18;
        id v20 = a3;
        objc_msgSend(v12, sel_setStringValue_, v19);

LABEL_9:
        goto LABEL_10;
      }
      self;
      uint64_t v21 = swift_dynamicCastObjCClass();
      if (v21)
      {
        uint64_t v22 = (void *)v21;
        id v20 = a3;
        objc_msgSend(v12, sel_setNumberIntValue_, objc_msgSend(v22, sel_longLongValue));

        goto LABEL_9;
      }
    }

    sub_1AD73CA80();
    swift_bridgeObjectRetain_n();
    id v23 = a3;
    uint64_t v24 = sub_1AD73CB80();
    os_log_type_t v25 = sub_1AD73F920();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v36 = v7;
      char v27 = (uint8_t *)v26;
      uint64_t v28 = swift_slowAlloc();
      uint64_t v34 = v28;
      uint64_t v35 = v6;
      *(_DWORD *)char v27 = 136315138;
      uint64_t v39 = a3;
      uint64_t v40 = v28;
      unint64_t v33 = v27 + 4;
      uint64_t v37 = a1;
      uint64_t v38 = a2;
      sub_1AD311F8C();
      swift_bridgeObjectRetain();
      id v29 = v23;
      uint64_t v30 = sub_1AD73F220();
      uint64_t v37 = sub_1AD1F62D4(v30, v31, &v40);
      sub_1AD7403B0();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AD1A4000, v24, v25, "Unexpected metadata value type %s", v27, 0xCu);
      uint64_t v32 = v34;
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v32, -1, -1);
      MEMORY[0x1B3E68450](v27, -1, -1);

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v35);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return v12;
  }
  __break(1u);
  return result;
}

id HKCodableMetadataKeyValuePair.keyValue.getter()
{
  id v1 = v0;
  uint64_t v2 = sub_1AD73CBA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  double v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(v1, sel_hasQuantityValue))
  {
    if (objc_msgSend(v1, sel_hasStringValue))
    {
      id v12 = objc_msgSend(v1, sel_stringValue);
      if (v12)
      {
        uint64_t v13 = v12;
        _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
      }
      sub_1AD73F180();
      swift_bridgeObjectRelease();
    }
    else if (objc_msgSend(v1, sel_hasNumberIntValue))
    {
      id v14 = objc_msgSend(v1, sel_numberIntValue);
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithLongLong_, v14);
    }
    else
    {
      sub_1AD73CA80();
      id v15 = v1;
      id v16 = sub_1AD73CB80();
      os_log_type_t v17 = sub_1AD73F920();
      int v18 = v17;
      if (os_log_type_enabled(v16, v17))
      {
        int v33 = v18;
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        uint64_t v35 = v32;
        *(_DWORD *)uint64_t v19 = 136315138;
        uint64_t v30 = v19 + 4;
        unint64_t v31 = v19;
        id v20 = v15;
        id v21 = objc_msgSend(v20, sel_description);
        uint64_t v22 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
        unint64_t v24 = v23;

        uint64_t v34 = sub_1AD1F62D4(v22, v24, &v35);
        sub_1AD7403B0();

        swift_bridgeObjectRelease();
        os_log_type_t v25 = v31;
        _os_log_impl(&dword_1AD1A4000, v16, (os_log_type_t)v33, "Unexpected metadata value type %s", v31, 0xCu);
        uint64_t v26 = v32;
        swift_arrayDestroy();
        MEMORY[0x1B3E68450](v26, -1, -1);
        MEMORY[0x1B3E68450](v25, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    goto LABEL_15;
  }
  id result = objc_msgSend(v1, sel_quantityValue);
  if (!result)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v7 = result;
  id result = objc_msgSend(result, sel_unitString);
  if (!result)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v8 = result;
  _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

  uint64_t v9 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(self, sel_unitFromString_, v9);

  objc_msgSend(v7, sel_value);
  objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v10, v11);

LABEL_15:
  id v27 = objc_msgSend(v1, sel_key);
  if (!v27) {
    return 0;
  }
  uint64_t v28 = v27;
  uint64_t v29 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

  return (id)v29;
}

uint64_t static HKCodableNotificationDataSourceQueryData.currentCodeVersion.getter()
{
  return sub_1AD73B150();
}

id HKCodableNotificationDataSourceQueryData.init(codableSamples:sampleType:version:)(unint64_t a1, void *a2, uint64_t a3)
{
  id v4 = sub_1AD3127FC(a1, a2, a3);

  return v4;
}

id sub_1AD310980()
{
  return objc_msgSend(v0, sel_hasLatestSupportedVersion);
}

id sub_1AD3109A4(char a1)
{
  return objc_msgSend(v1, sel_setHasLatestSupportedVersion_, a1 & 1);
}

id (*sub_1AD3109B8(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasLatestSupportedVersion);
  return sub_1AD310A0C;
}

id sub_1AD310A0C(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasLatestSupportedVersion_, *(unsigned __int8 *)(a1 + 8));
}

id sub_1AD310A24()
{
  return objc_msgSend(v0, sel_latestSupportedVersion);
}

id sub_1AD310A34(uint64_t a1)
{
  return objc_msgSend(v1, sel_setLatestSupportedVersion_, a1);
}

id (*sub_1AD310A48(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_latestSupportedVersion);
  return sub_1AD310A9C;
}

id sub_1AD310A9C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setLatestSupportedVersion_, *(void *)a1);
}

id sub_1AD310AB0()
{
  return objc_msgSend(v0, sel_hasMinimumSupportedVersion);
}

id sub_1AD310AD4(char a1)
{
  return objc_msgSend(v1, sel_setHasMinimumSupportedVersion_, a1 & 1);
}

id (*sub_1AD310AE8(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasMinimumSupportedVersion);
  return sub_1AD310B3C;
}

id sub_1AD310B3C(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasMinimumSupportedVersion_, *(unsigned __int8 *)(a1 + 8));
}

id sub_1AD310B54()
{
  return objc_msgSend(v0, sel_minimumSupportedVersion);
}

id sub_1AD310B64(uint64_t a1)
{
  return objc_msgSend(v1, sel_setMinimumSupportedVersion_, a1);
}

id (*sub_1AD310B78(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_minimumSupportedVersion);
  return sub_1AD310BCC;
}

id sub_1AD310BCC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setMinimumSupportedVersion_, *(void *)a1);
}

id HKCodableNotificationSample.init(sample:sampleType:version:)(void *a1, void *a2, uint64_t a3)
{
  id v5 = sub_1AD3123AC(a1, a2, a3);

  return v5;
}

id HKCodableNotificationSample.init(sample:sampleType:startDate:endDate:version:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v7 = sub_1AD311FF4(a1, a2, a3, a4, a5);

  return v7;
}

id (*sub_1AD310C60(uint64_t a1))(uint64_t)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasLatestSupportedVersion);
  return sub_1AD312AC8;
}

id (*sub_1AD310CB4(void *a1))(uint64_t)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_latestSupportedVersion);
  return sub_1AD312ACC;
}

id (*sub_1AD310D08(uint64_t a1))(uint64_t)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasMinimumSupportedVersion);
  return sub_1AD312AD0;
}

id (*sub_1AD310D5C(void *a1))(uint64_t)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_minimumSupportedVersion);
  return sub_1AD312AD4;
}

id _sSo22HKCodableDayIndexRangeC18HealthExperienceUIE03dayC08durationABSi_SitcfC_0(uint64_t a1, uint64_t a2)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v5 = result;
    objc_msgSend(v5, sel_setDayIndex_, a1);
    objc_msgSend(v5, sel_setDuration_, a2);

    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableDayIndexRange.dayIndexRange.getter()
{
  if (!objc_msgSend(v0, sel_hasDayIndex) || !objc_msgSend(v0, sel_hasDuration)) {
    return 0;
  }
  id v1 = objc_msgSend(v0, sel_dayIndex);
  objc_msgSend(v0, sel_duration);
  return v1;
}

uint64_t HKCodableChartFeedItemData.trendsArray.getter()
{
  id v1 = objc_msgSend(v0, sel_trends);
  if (v1)
  {
    uint64_t v2 = v1;
    sub_1AD2147D4(0, &qword_1EB741360);
    sub_1AD73F4A0();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

void sub_1AD310F4C(id *a1@<X0>, void *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_trends);
  if (v3)
  {
    id v4 = v3;
    sub_1AD2147D4(0, &qword_1EB741360);
    sub_1AD73F4A0();
  }
  swift_bridgeObjectRelease();
  *a2 = MEMORY[0x1E4FBC860];
}

void sub_1AD310FE0(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  unint64_t v3 = swift_bridgeObjectRetain();
  sub_1AD264A8C(v3);
  swift_bridgeObjectRelease();
  id v4 = objc_allocWithZone(MEMORY[0x1E4F1CA48]);
  id v5 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithArray_, v5);

  objc_msgSend(v2, sel_setTrends_, v6);
}

void HKCodableChartFeedItemData.trendsArray.setter(unint64_t a1)
{
  sub_1AD264A8C(a1);
  swift_bridgeObjectRelease();
  id v2 = objc_allocWithZone(MEMORY[0x1E4F1CA48]);
  unint64_t v3 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithArray_, v3);

  objc_msgSend(v1, sel_setTrends_, v4);
}

void (*HKCodableChartFeedItemData.trendsArray.modify(void *a1))(unint64_t *a1, char a2)
{
  a1[1] = v1;
  id v3 = objc_msgSend(v1, sel_trends);
  if (v3)
  {
    id v4 = v3;
    sub_1AD2147D4(0, &qword_1EB741360);
    sub_1AD73F4A0();
  }
  swift_bridgeObjectRelease();
  *a1 = MEMORY[0x1E4FBC860];
  return sub_1AD311208;
}

void sub_1AD311208(unint64_t *a1, char a2)
{
  id v2 = (void *)a1[1];
  unint64_t v3 = *a1;
  if (a2)
  {
    unint64_t v4 = swift_bridgeObjectRetain();
    sub_1AD264A8C(v4);
    swift_bridgeObjectRelease();
    id v5 = objc_allocWithZone(MEMORY[0x1E4F1CA48]);
    id v6 = (void *)sub_1AD73F490();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v5, sel_initWithArray_, v6);

    objc_msgSend(v2, sel_setTrends_, v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AD264A8C(v3);
    swift_bridgeObjectRelease();
    id v7 = objc_allocWithZone(MEMORY[0x1E4F1CA48]);
    uint64_t v8 = (void *)sub_1AD73F490();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v7, sel_initWithArray_, v8);

    objc_msgSend(v2, sel_setTrends_, v9);
  }
}

id HKCodableChartFeedItemData.chartTrendModel.getter()
{
  id v1 = objc_msgSend(v0, sel_trends);
  if (v1)
  {
    id v2 = v1;
    sub_1AD2147D4(0, &qword_1EB741360);
    sub_1AD73F4A0();
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  unint64_t v17 = MEMORY[0x1E4FBC860];
  if (MEMORY[0x1E4FBC860] >> 62) {
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1AD7408D0())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (v3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1B3E669F0](v5 - 4, v3) : *(id *)(v3 + 8 * v5);
      id v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v16 = v6;
      sub_1AD3115F4(&v16, &v15);

      if (v15)
      {
        MEMORY[0x1B3E657B0]();
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1AD73F510();
        }
        sub_1AD73F560();
        sub_1AD73F4D0();
      }
      ++v5;
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        unint64_t v9 = v17;
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  unint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1AD7408D0();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_22;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_24;
  }
LABEL_22:
  id v10 = objc_allocWithZone(MEMORY[0x1E4F679D0]);
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73DE50);
  double v11 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v10, sel_initWithTimeScopeTrends_selectTrendInitially_, v11, 1);

  return v12;
}

void sub_1AD3115F4(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1AD739E10();
  uint64_t v5 = *(void (***)(char *, uint64_t))(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v49 - v9;
  double v11 = *a1;
  id v12 = HKCodableSummaryTrendChartViewModel.coveredTimeScope.getter();
  id v13 = 0;
  if (v14) {
    goto LABEL_20;
  }
  id v15 = v12;
  if (!objc_msgSend(v11, sel_hasBaselineDateInterval)
    || !objc_msgSend(v11, sel_hasBaselineQuantity))
  {
    goto LABEL_19;
  }
  id v13 = objc_msgSend(v11, sel_baselineDateInterval);
  if (!v13)
  {
LABEL_20:
    *a2 = v13;
    return;
  }
  id v16 = objc_msgSend(v11, sel_baselineQuantity);
  if (!v16)
  {

LABEL_19:
    id v13 = 0;
    goto LABEL_20;
  }
  id v55 = v16;
  id v52 = v15;
  unsigned __int8 v17 = objc_msgSend(v11, sel_hasChangeDateInterval);
  id v54 = v13;
  if ((v17 & 1) != 0
    && objc_msgSend(v11, sel_hasChangeQuantity)
    && (id v18 = objc_msgSend(v11, sel_changeDateInterval)) != 0)
  {
    uint64_t v19 = v18;
    id v51 = objc_msgSend(v11, sel_changeQuantity);
    if (v51)
    {
      id v20 = self;
      id v50 = v19;
      id v21 = objc_msgSend(v20, sel_hk_dateIntervalWithCodableDateInterval_sourceTimeZone_, v19, 0);
      sub_1AD739DB0();

      id v22 = objc_msgSend(v51, sel_unitString);
      if (!v22) {
        goto LABEL_29;
      }
      unint64_t v23 = v22;
      uint64_t v53 = (void (**)(char *, uint64_t))_sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

      unint64_t v24 = (void *)sub_1AD73F180();
      swift_bridgeObjectRelease();
      id v25 = objc_msgSend(self, sel_unitFromString_, v24);

      objc_msgSend(v51, sel_value);
      id v49 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v25, v26);

      id v27 = objc_allocWithZone(MEMORY[0x1E4F679D8]);
      uint64_t v28 = (void *)sub_1AD739D90();
      uint64_t v29 = v27;
      uint64_t v30 = v49;
      uint64_t v53 = (void (**)(char *, uint64_t))objc_msgSend(v29, sel_initWithTrendDateInterval_trendAverage_, v28, v49);

      v5[1](v10, v4);
      id v13 = v54;
    }
    else
    {

      uint64_t v53 = 0;
    }
  }
  else
  {
    uint64_t v53 = 0;
  }
  id v31 = objc_msgSend(self, sel_hk_dateIntervalWithCodableDateInterval_sourceTimeZone_, v13, 0);
  sub_1AD739DB0();

  id v32 = objc_msgSend(v55, sel_unitString);
  if (v32)
  {
    int v33 = v32;
    _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

    uint64_t v34 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    id v35 = objc_msgSend(self, sel_unitFromString_, v34);

    objc_msgSend(v55, sel_value);
    id v37 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v35, v36);

    id v38 = objc_allocWithZone(MEMORY[0x1E4F679D8]);
    uint64_t v39 = (void *)sub_1AD739D90();
    id v40 = objc_msgSend(v38, sel_initWithTrendDateInterval_trendAverage_, v39, v37);

    v5[1](v7, v4);
    uint64_t v56 = MEMORY[0x1E4FBC860];
    uint64_t v5 = v53;
    if (v53)
    {
      id v41 = v53;
      MEMORY[0x1B3E657B0](v40);
      if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1AD73F510();
      }
      sub_1AD73F560();
      sub_1AD73F4D0();
    }
    else
    {
      id v42 = v40;
    }
    id v43 = v40;
    MEMORY[0x1B3E657B0]();
    if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1AD73F510();
    }
    sub_1AD73F560();
    sub_1AD73F4D0();

    id v44 = objc_msgSend(v11, sel_chartString);
    if (v44)
    {
      unint64_t v45 = v44;
      _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

      id v46 = objc_allocWithZone(MEMORY[0x1E4F679C8]);
      sub_1AD2147D4(0, qword_1EB73DC18);
      uint64_t v47 = (void *)sub_1AD73F490();
      swift_bridgeObjectRelease();
      uint64_t v48 = (void *)sub_1AD73F180();
      swift_bridgeObjectRelease();
      id v13 = objc_msgSend(v46, sel_initForTimeScope_trendSpans_localizableTrendDescription_, v52, v47, v48);

      goto LABEL_20;
    }
  }
  else
  {
    __break(1u);
  }

  __break(1u);
LABEL_29:
  __break(1u);
}

id HKCodableSummaryTrendChartViewModel.coveredTimeScope.getter()
{
  swift_getObjectType();
  uint64_t v1 = sub_1AD73CBA0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v0, sel_hasCoveredTimeScopeRawValue))
  {
    if (((unint64_t)objc_msgSend(v0, sel_coveredTimeScopeRawValue) & 0x8000000000000000) == 0) {
      return objc_msgSend(v0, sel_coveredTimeScopeRawValue);
    }
  }
  else
  {
    _s18HealthExperienceUI0A44ChecklistStagedFeatureStatusFeedItemProviderPAAE6logger2os6LoggerVvg_0();
    id v6 = v0;
    id v7 = sub_1AD73CB80();
    os_log_type_t v8 = sub_1AD73F920();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v16 = v10;
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v11 = sub_1AD740E30();
      id v15 = (id)sub_1AD1F62D4(v11, v12, &v16);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2080;
      id v15 = objc_msgSend(v6, sel_coveredTimeScopeRawValue);
      uint64_t v13 = sub_1AD740B50();
      id v15 = (id)sub_1AD1F62D4(v13, v14, &v16);
      sub_1AD7403B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AD1A4000, v7, v8, "%s View model has time scope that can't be decoded: %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v10, -1, -1);
      MEMORY[0x1B3E68450](v9, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return 0;
}

id HKCodableSummaryTrendChartViewModel.coveredTimeScope.setter(uint64_t a1, char a2)
{
  if (a2) {
    a1 = -1;
  }
  return objc_msgSend(v2, sel_setCoveredTimeScopeRawValue_, a1);
}

id (*HKCodableSummaryTrendChartViewModel.coveredTimeScope.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  *(void *)a1 = HKCodableSummaryTrendChartViewModel.coveredTimeScope.getter();
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return sub_1AD311F68;
}

id sub_1AD311F68(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    uint64_t v1 = -1;
  }
  else {
    uint64_t v1 = *(void *)a1;
  }
  return objc_msgSend(*(id *)(a1 + 16), sel_setCoveredTimeScopeRawValue_, v1);
}

void sub_1AD311F8C()
{
  if (!qword_1E9A2C188)
  {
    sub_1AD21EDB8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9A2C188);
    }
  }
}

id sub_1AD311FF4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v37 = a5;
  uint64_t v11 = sub_1AD73A670();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD1C09F8();
  MEMORY[0x1F4188790](v15 - 8);
  unsigned __int8 v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v34 = v11;
    id v19 = result;
    uint64_t v36 = a3;
    id v20 = (void *)sub_1AD73A590();
    double v21 = MEMORY[0x1B3E675C0]();

    objc_msgSend(v19, sel_setStartDate_, v21);
    uint64_t v35 = a4;
    id v22 = (void *)sub_1AD73A590();
    double v23 = MEMORY[0x1B3E675C0]();

    objc_msgSend(v19, sel_setEndDate_, v23);
    objc_msgSend(v19, sel_setDataType_, objc_msgSend(a2, sel_code));
    self;
    uint64_t v24 = swift_dynamicCastObjCClass();
    if (v24)
    {
      id v25 = (void *)v24;
      id v26 = a1;
      objc_msgSend(v19, sel_setCategoryValue_, objc_msgSend(v25, sel_value));
    }
    uint64_t v27 = sub_1AD73B180();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v17, v37, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v17, 0, 1, v27);
    SharableModelVersionCoding.modelVersion.setter((uint64_t)v17, v6, (void (**)(void, void, void))&protocol witness table for HKCodableNotificationSample);
    id v30 = objc_msgSend(a1, sel_UUID);
    sub_1AD73A650();

    sub_1AD73A620();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v34);
    id v31 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setSampleUUID_, v31);

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v27);
    uint64_t v32 = sub_1AD73A600();
    int v33 = *(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8);
    v33(v35, v32);
    v33(v36, v32);
    return v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1AD3123AC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v36 = a3;
  id v33 = a2;
  uint64_t v35 = sub_1AD73A670();
  uint64_t v6 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  os_log_type_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD1C09F8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1AD73A600();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v4;
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v17 = result;
    id v18 = objc_msgSend(a1, sel_startDate);
    sub_1AD73A5D0();

    id v19 = (void *)sub_1AD73A590();
    id v20 = *(void (**)(char *, uint64_t))(v13 + 8);
    v20(v15, v12);
    double v21 = MEMORY[0x1B3E675C0](v19);

    objc_msgSend(v17, sel_setStartDate_, v21);
    id v22 = objc_msgSend(a1, sel_endDate);
    sub_1AD73A5D0();

    double v23 = (void *)sub_1AD73A590();
    v20(v15, v12);
    double v24 = MEMORY[0x1B3E675C0](v23);

    objc_msgSend(v17, sel_setEndDate_, v24);
    objc_msgSend(v17, sel_setDataType_, objc_msgSend(v33, sel_code));
    self;
    uint64_t v25 = swift_dynamicCastObjCClass();
    if (v25)
    {
      id v26 = (void *)v25;
      id v27 = a1;
      objc_msgSend(v17, sel_setCategoryValue_, objc_msgSend(v26, sel_value));
    }
    uint64_t v28 = sub_1AD73B180();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v11, v36, v28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v11, 0, 1, v28);
    SharableModelVersionCoding.modelVersion.setter((uint64_t)v11, v34, (void (**)(void, void, void))&protocol witness table for HKCodableNotificationSample);
    id v31 = objc_msgSend(a1, sel_UUID);
    sub_1AD73A650();

    sub_1AD73A620();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v35);
    uint64_t v32 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_setSampleUUID_, v32);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v28);
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1AD3127FC(unint64_t a1, void *a2, uint64_t a3)
{
  sub_1AD1C09F8();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v11 = result;
    sub_1AD264A78(a1);
    id v12 = objc_allocWithZone(MEMORY[0x1E4F1CA48]);
    uint64_t v13 = (void *)sub_1AD73F490();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v12, sel_initWithArray_, v13);

    objc_msgSend(v11, sel_setSamples_, v14);
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1AD7408D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setCount_, v15);
    objc_msgSend(v11, sel_setDataType_, objc_msgSend(a2, sel_code));
    uint64_t v16 = sub_1AD73B180();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v9, a3, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v9, 0, 1, v16);
    SharableModelVersionCoding.modelVersion.setter((uint64_t)v9, v3, (void (**)(void, void, void))&protocol witness table for HKCodableNotificationDataSourceQueryData);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a3, v16);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1AD312A5C@<X0>(uint64_t a1@<X8>)
{
  id result = HKCodableSummaryTrendChartViewModel.coveredTimeScope.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

id sub_1AD312A90(uint64_t a1, id *a2)
{
  if (*(unsigned char *)(a1 + 8)) {
    uint64_t v2 = -1;
  }
  else {
    uint64_t v2 = *(void *)a1;
  }
  return objc_msgSend(*a2, sel_setCoveredTimeScopeRawValue_, v2);
}

unint64_t static SidebarDataSourceItem.sharingSidebarItemIdentifier.getter()
{
  return 0xD000000000000019;
}

void sub_1AD312B08(void **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
  id v5 = v2;
}

id sub_1AD312B60()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 40);
  return v1;
}

void sub_1AD312BA4(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 40);
  *(void *)(v1 + 40) = a1;
}

uint64_t sub_1AD312BEC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 48) = v3;
  *(void *)(v4 + 56) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD312C4C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD312C98(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1AD312CEC())()
{
  return j__swift_endAccess;
}

uint64_t sub_1AD312D40(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 64) = v3;
  *(void *)(v4 + 72) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD312DA0()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD312DEC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1AD312E40())()
{
  return j_j__swift_endAccess;
}

void *SidebarDataSourceItem.__allocating_init(uniqueIdentifier:detailViewController:text:image:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = (void *)swift_allocObject();
  v12[4] = 0;
  type metadata accessor for SidebarListCell();
  sub_1AD313008();
  v12[6] = sub_1AD73F220();
  v12[7] = v13;
  v12[5] = a3;
  v12[2] = a4;
  v12[3] = a5;
  swift_beginAccess();
  id v14 = (void *)v12[4];
  v12[4] = a6;

  v12[8] = a1;
  v12[9] = a2;
  return v12;
}

void *SidebarDataSourceItem.init(uniqueIdentifier:detailViewController:text:image:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = 0;
  type metadata accessor for SidebarListCell();
  sub_1AD313008();
  v6[6] = sub_1AD73F220();
  v6[7] = v13;
  v6[5] = a3;
  v6[2] = a4;
  v6[3] = a5;
  swift_beginAccess();
  id v14 = (void *)v6[4];
  v6[4] = a6;

  v6[8] = a1;
  v6[9] = a2;
  return v6;
}

unint64_t sub_1AD313008()
{
  unint64_t result = qword_1E9A2C190;
  if (!qword_1E9A2C190)
  {
    type metadata accessor for SidebarListCell();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9A2C190);
  }
  return result;
}

id sub_1AD313044(uint64_t a1, void *a2)
{
  swift_beginAccess();
  return objc_msgSend(a2, sel_showDetailViewController_sender_, *(void *)(v2 + 40), a2);
}

uint64_t SidebarDataSourceItem.deinit()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SidebarDataSourceItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD313130(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_beginAccess();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1AD313188())()
{
  return j_j__swift_endAccess;
}

void *sub_1AD3131E0()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 32);
  id v3 = v2;
  return v2;
}

void sub_1AD313228(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 32);
  *(void *)(v3 + 32) = a1;
}

uint64_t (*sub_1AD313274())()
{
  return j_j__swift_endAccess;
}

id sub_1AD3132CC()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 40);
  return v2;
}

void sub_1AD31331C(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = a1;
}

uint64_t (*sub_1AD313368())()
{
  return j_j__swift_endAccess;
}

id sub_1AD3133C0(uint64_t a1, void *a2)
{
  uint64_t v4 = *v2;
  swift_beginAccess();
  return objc_msgSend(a2, sel_showDetailViewController_sender_, *(void *)(v4 + 40), a2);
}

uint64_t sub_1AD313418()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1AD313468()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 64);
  swift_bridgeObjectRetain();
  return v2;
}

unint64_t sub_1AD3134B8(uint64_t a1)
{
  unint64_t result = sub_1AD3134E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AD3134E0()
{
  unint64_t result = qword_1E9A2C198;
  if (!qword_1E9A2C198)
  {
    type metadata accessor for SidebarDataSourceItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C198);
  }
  return result;
}

uint64_t sub_1AD313534@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

id sub_1AD313584@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 32);
  *a2 = v4;
  return v4;
}

id sub_1AD3135E0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 40);
  *a2 = v4;
  return v4;
}

uint64_t sub_1AD31363C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 56);
  *a2 = *(void *)(v3 + 48);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD31368C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 72);
  *a2 = *(void *)(v3 + 64);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of SidebarSectionedDataSourceItem.text.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SidebarSectionedDataSourceItem.text.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of SidebarSectionedDataSourceItem.text.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of SidebarSectionedDataSourceItem.image.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SidebarSectionedDataSourceItem.image.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SidebarSectionedDataSourceItem.image.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of SidebarSectionedDataSourceItem.detailViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of SidebarSectionedDataSourceItem.detailViewController.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of SidebarSectionedDataSourceItem.detailViewController.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t method lookup function for SidebarDataSourceItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SidebarDataSourceItem);
}

uint64_t dispatch thunk of SidebarDataSourceItem.text.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of SidebarDataSourceItem.text.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of SidebarDataSourceItem.text.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of SidebarDataSourceItem.image.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of SidebarDataSourceItem.image.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of SidebarDataSourceItem.image.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of SidebarDataSourceItem.detailViewController.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of SidebarDataSourceItem.detailViewController.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of SidebarDataSourceItem.detailViewController.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of SidebarDataSourceItem.reuseIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of SidebarDataSourceItem.reuseIdentifier.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of SidebarDataSourceItem.reuseIdentifier.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of SidebarDataSourceItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of SidebarDataSourceItem.uniqueIdentifier.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of SidebarDataSourceItem.uniqueIdentifier.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of SidebarDataSourceItem.__allocating_init(uniqueIdentifier:detailViewController:text:image:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of SidebarDataSourceItem.didSelectCell(_:in:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t sub_1AD3139FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v90 = a3;
  uint64_t v72 = a2;
  uint64_t v3 = type metadata accessor for SummarySharingSelectionFlow(0);
  uint64_t v89 = *(void *)(v3 - 8);
  uint64_t v88 = *(void *)(v89 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v87 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD21CEC8();
  MEMORY[0x1F4188790](v5 - 8);
  v86 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD321134();
  uint64_t v61 = v7;
  uint64_t v64 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD3214F8();
  uint64_t v62 = v10;
  uint64_t v63 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD321C6C(0, &qword_1E9A2C308, (void (*)(uint64_t))sub_1AD3214F8, (void (*)(void))sub_1AD3215B4);
  uint64_t v67 = v13;
  uint64_t v68 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v59 - v14;
  sub_1AD3215E8();
  uint64_t v70 = v16;
  uint64_t v71 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  v60 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD32174C();
  uint64_t v73 = v18;
  uint64_t v76 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  v66 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD321A5C(0, &qword_1E9A2C358, (void (*)(uint64_t))sub_1AD32174C, (void (*)(void))sub_1AD321B04);
  uint64_t v78 = v20;
  uint64_t v81 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  v69 = (char *)&v59 - v21;
  sub_1AD321B38();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v79 = v22;
  uint64_t v80 = v23;
  MEMORY[0x1F4188790](v22);
  v75 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD321C6C(0, &qword_1E9A2C378, (void (*)(uint64_t))sub_1AD321B38, (void (*)(void))sub_1AD321CDC);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v82 = v25;
  uint64_t v83 = v26;
  MEMORY[0x1F4188790](v25);
  v74 = (char *)&v59 - v27;
  sub_1AD321D10();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v84 = v28;
  uint64_t v85 = v29;
  MEMORY[0x1F4188790](v28);
  v77 = (char *)&v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73C950();
  uint64_t v31 = sub_1AD73C940();
  *(void *)&long long v91 = sub_1AD73FF80();
  sub_1AD73D9E0();
  sub_1AD3213C0();
  sub_1AD3212C8(0);
  sub_1AD3222F0(&qword_1E9A2C2F0, (void (*)(uint64_t))sub_1AD3213C0);
  sub_1AD32138C();
  sub_1AD73DD50();
  swift_release();
  uint64_t v32 = swift_allocObject();
  id v33 = v65;
  *(void *)(v32 + 16) = v31;
  *(void *)(v32 + 24) = v33;
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F790);
  sub_1AD3222F0(&qword_1E9A2C300, (void (*)(uint64_t))sub_1AD321134);
  id v34 = v33;
  swift_retain();
  uint64_t v35 = v61;
  sub_1AD73DCB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v9, v35);
  sub_1AD3215B4();
  uint64_t v36 = v62;
  sub_1AD73DD40();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v12, v36);
  sub_1AD1FFE38(v72, (uint64_t)&v91);
  uint64_t v37 = swift_allocObject();
  sub_1AD20FE90(&v91, v37 + 16);
  sub_1AD1C6948(0, &qword_1E9A2AB80, MEMORY[0x1E4F674F8], MEMORY[0x1E4FBB320]);
  sub_1AD3216C4();
  id v38 = v60;
  uint64_t v39 = v67;
  sub_1AD73DD30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v15, v39);
  sub_1AD73D9E0();
  sub_1AD321838(0);
  sub_1AD3222F0(&qword_1E9A2C350, (void (*)(uint64_t))sub_1AD3215E8);
  sub_1AD3219A0();
  id v40 = v66;
  uint64_t v41 = v70;
  sub_1AD73DD50();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v38, v41);
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F7F0);
  *(void *)&long long v91 = sub_1AD73FC50();
  uint64_t v42 = sub_1AD73FBF0();
  uint64_t v43 = (uint64_t)v86;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v86, 1, 1, v42);
  sub_1AD321B04();
  sub_1AD21F35C();
  id v44 = v69;
  uint64_t v45 = v73;
  sub_1AD73DD80();
  sub_1AD31BD28(v43, (uint64_t (*)(void))sub_1AD21CEC8);

  (*(void (**)(char *, uint64_t))(v76 + 8))(v40, v45);
  uint64_t v46 = v87;
  sub_1AD322338(v90, v87, type metadata accessor for SummarySharingSelectionFlow);
  unint64_t v47 = (*(unsigned __int8 *)(v89 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = v34;
  sub_1AD322198(v46, v48 + v47, type metadata accessor for SummarySharingSelectionFlow);
  type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  sub_1AD321BE4();
  id v49 = v34;
  id v50 = v75;
  uint64_t v51 = v78;
  sub_1AD73DC80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v44, v51);
  sub_1AD321CDC();
  id v52 = v74;
  uint64_t v53 = v79;
  sub_1AD73DD40();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v50, v53);
  sub_1AD32104C();
  sub_1AD321DFC();
  sub_1AD3222F0(&qword_1E9A2C2B8, (void (*)(uint64_t))sub_1AD32104C);
  id v54 = v77;
  uint64_t v55 = v82;
  sub_1AD73DCF0();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v52, v55);
  sub_1AD3222F0(&qword_1E9A2C398, (void (*)(uint64_t))sub_1AD321D10);
  uint64_t v56 = v84;
  uint64_t v57 = sub_1AD73DC70();
  swift_release();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v54, v56);
  return v57;
}

uint64_t sub_1AD3146B8@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_1AD322164(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD28A010(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v34 - v17;
  if (!FeedItem.pluginInfo.getter()) {
    goto LABEL_6;
  }
  uint64_t v37 = v16;
  id v38 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = (void *)sub_1AD73C7E0();
  swift_release();
  if (!sub_1AD458B48(v20))
  {

    goto LABEL_6;
  }
  uint64_t v22 = v21;
  id v35 = v20;
  uint64_t v36 = a3;
  uint64_t ObjectType = swift_getObjectType();
  sub_1AD322338(v19, (uint64_t)v8, type metadata accessor for SummarySharingSelectionFlow);
  uint64_t v24 = type metadata accessor for SummarySharingSelectionFlow(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 0, 1, v24);
  uint64_t v25 = v38;
  (*(void (**)(void *, char *, uint64_t, uint64_t))(v22 + 40))(v38, v8, ObjectType, v22);
  sub_1AD31BD28((uint64_t)v8, (uint64_t (*)(void))sub_1AD322164);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    swift_unknownObjectRelease();

    sub_1AD31BD28((uint64_t)v11, (uint64_t (*)(void))sub_1AD28A010);
    a3 = v36;
LABEL_6:
    uint64_t v26 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a3, 1, 1, v26);
  }
  sub_1AD322198((uint64_t)v11, (uint64_t)v18, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
  uint64_t v28 = (uint64_t)v37;
  sub_1AD322338((uint64_t)v18, (uint64_t)v37, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
  uint64_t v39 = type metadata accessor for SummarySharingSelectableDataTypeCell();
  sub_1AD322200();
  id v29 = v25;
  uint64_t v30 = sub_1AD73F220();
  uint64_t v31 = v36;
  SummarySharingSelectableDataTypeItem.init(feedItem:pluginViewModelContent:selectedDataTypesDelegate:isSelectable:isSelected:reuseIdentifier:)(v29, v28, 0, 1, 1, v30, v32, v36);
  swift_unknownObjectRelease();

  sub_1AD31BD28((uint64_t)v18, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
  uint64_t v33 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v31, 0, 1, v33);
}

uint64_t sub_1AD314AB0(void *a1)
{
  sub_1AD1C6948(0, &qword_1E9A2C3A0, (uint64_t (*)(uint64_t))sub_1AD3210B4, MEMORY[0x1E4F1AC08]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v24 - v5;
  uint64_t v7 = sub_1AD73CBA0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73CAD0();
  id v11 = a1;
  id v12 = a1;
  uint64_t v13 = sub_1AD73CB80();
  os_log_type_t v14 = sub_1AD73F920();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v27 = v4;
    uint64_t v16 = v15;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v29 = v26;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v28 = sub_1AD1F62D4(0xD00000000000002FLL, 0x80000001AD751D00, &v29);
    sub_1AD7403B0();
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v28 = (uint64_t)a1;
    id v17 = a1;
    sub_1AD2196B8(0, (unint64_t *)&qword_1EB7414A0);
    uint64_t v18 = sub_1AD73F220();
    uint64_t v25 = v7;
    uint64_t v28 = sub_1AD1F62D4(v18, v19, &v29);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AD1A4000, v13, v14, "[%s] Encountered an error: %s", (uint8_t *)v16, 0x16u);
    uint64_t v20 = v26;
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v20, -1, -1);
    uint64_t v21 = v16;
    uint64_t v4 = v27;
    MEMORY[0x1B3E68450](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v29 = MEMORY[0x1E4FBC860];
  sub_1AD3210B4(0);
  sub_1AD73DB50();
  sub_1AD3220DC();
  uint64_t v22 = sub_1AD73DC70();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v22;
}

uint64_t sub_1AD314E44()
{
  sub_1AD320CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v23 = v1;
  uint64_t v24 = v2;
  MEMORY[0x1F4188790](v1);
  uint64_t v22 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD320E18();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1AD73A670();
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SharedProfileHeaderDataSource();
  __swift_project_boxed_opaque_existential_1((void *)(v0+ OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_healthExperienceStore), *(void *)(v0+ OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_healthExperienceStore+ 24));
  id v12 = (void *)sub_1AD73A990();
  sub_1AD73C0C0();
  uint64_t v25 = *(void *)(sub_1AD363D94(v12, v11) + qword_1EB731FF0);
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66148];
  os_log_type_t v14 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1ABB0];
  sub_1AD320F94(0, (unint64_t *)&unk_1E9A2F430, (unint64_t *)&unk_1E9A2BBC0, MEMORY[0x1E4F66148], MEMORY[0x1E4F1ABB0]);
  sub_1AD320F30(&qword_1E9A2C2A0, (unint64_t *)&unk_1E9A2F430, v14);
  uint64_t v25 = sub_1AD73DC70();
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
  sub_1AD320F94(0, (unint64_t *)&unk_1E9A2F410, (unint64_t *)&unk_1E9A2BBC0, v13, MEMORY[0x1E4F1AAE0]);
  uint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66020];
  sub_1AD1C6948(0, &qword_1E9A2C290, MEMORY[0x1E4F66020], MEMORY[0x1E4FBB718]);
  sub_1AD320F30(&qword_1E9A2F420, (unint64_t *)&unk_1E9A2F410, v15);
  sub_1AD73DCC0();
  swift_release();
  sub_1AD3222F0((unint64_t *)&unk_1E9A2F440, (void (*)(uint64_t))sub_1AD320E18);
  uint64_t v17 = sub_1AD73DC70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  uint64_t v25 = v17;
  sub_1AD320F94(0, (unint64_t *)&unk_1E9A2F3F0, &qword_1E9A2C290, v16, v15);
  sub_1AD2082E8(0, (unint64_t *)&qword_1EB73E850, (unint64_t *)&qword_1EB73E840, MEMORY[0x1E4F65F00], MEMORY[0x1E4FBB718]);
  sub_1AD320D88();
  uint64_t v18 = v22;
  sub_1AD73DCC0();
  sub_1AD3222F0(&qword_1E9A2C2A8, (void (*)(uint64_t))sub_1AD320CA8);
  uint64_t v19 = v23;
  uint64_t v20 = sub_1AD73DC70();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v18, v19);
  swift_release();
  return v20;
}

id sub_1AD315304()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController____lazy_storage___doneButtonItem;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController____lazy_storage___doneButtonItem);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController____lazy_storage___doneButtonItem);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_doneButtonTapped);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1AD31538C()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController____lazy_storage___activitySpinnerItem;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController____lazy_storage___activitySpinnerItem);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController____lazy_storage___activitySpinnerItem);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
    uint64_t v5 = self;
    id v6 = v4;
    id v7 = objc_msgSend(v5, sel_systemGrayColor);
    objc_msgSend(v6, sel_setTintColor_, v7);

    objc_msgSend(v6, sel_startAnimating);
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithCustomView_, v6);

    uint64_t v9 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

size_t sub_1AD315494()
{
  sub_1AD28A010(0);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_currentAuthorizations;
  uint64_t v34 = v0;
  uint64_t v8 = *(void *)(v0
                 + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_currentAuthorizations);
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v32 = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v9 = swift_bridgeObjectRetain();
  size_t v10 = sub_1AD2A5D44(v9);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v13 = v10 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v14 = *(void *)(v5 + 72);
    v31[1] = v10;
    swift_retain();
    uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1AD322338(v13, (uint64_t)v7, type metadata accessor for SummarySharingSelectableDataTypeItem);
      sub_1AD322338((uint64_t)&v7[*(int *)(v4 + 40)], (uint64_t)v3, (uint64_t (*)(void))sub_1AD28A010);
      uint64_t v16 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent(0);
      int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v3, 1, v16);
      uint64_t v18 = (uint64_t (*)(void))sub_1AD28A010;
      if (v17 == 1)
      {
        uint64_t v19 = MEMORY[0x1E4FBC860];
      }
      else
      {
        uint64_t v19 = *(void *)&v3[*(int *)(v16 + 44)];
        swift_bridgeObjectRetain();
        uint64_t v18 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent;
      }
      sub_1AD31BD28((uint64_t)v3, v18);
      sub_1AD31BD28((uint64_t)v7, type metadata accessor for SummarySharingSelectableDataTypeItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = sub_1AD51C940(0, v15[2] + 1, 1, v15);
      }
      unint64_t v21 = v15[2];
      unint64_t v20 = v15[3];
      if (v21 >= v20 >> 1) {
        uint64_t v15 = sub_1AD51C940((void *)(v20 > 1), v21 + 1, 1, v15);
      }
      v15[2] = v21 + 1;
      v15[v21 + 4] = v19;
      v13 += v14;
      --v11;
    }
    while (v11);
    swift_release_n();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_release();
    uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v35 = v12;
  uint64_t v22 = v15[2];
  if (v22)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v22; ++i)
    {
      uint64_t v24 = swift_bridgeObjectRetain();
      sub_1AD2603F4(v24);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_1AD320100(v35, v32);
  swift_bridgeObjectRelease();
  if (*(void *)(*(void *)(v34 + v33) + 16) <= *(void *)(v25 + 16) >> 3)
  {
    uint64_t v35 = v25;
    uint64_t v28 = swift_bridgeObjectRetain();
    sub_1AD31BDDC(v28, (uint64_t (*)(void))sub_1AD289A0C, MEMORY[0x1E4F66840], (void (*)(char *))sub_1AD2A6958, (void (*)(char *))sub_1AD320C90);
    swift_bridgeObjectRelease();
    uint64_t v27 = v35;
  }
  else
  {
    uint64_t v26 = swift_bridgeObjectRetain();
    uint64_t v27 = sub_1AD31C0F8(v26, v25);
    swift_bridgeObjectRelease();
  }
  size_t v29 = sub_1AD2A6140(v27);
  swift_bridgeObjectRelease();
  return v29;
}

size_t sub_1AD315904()
{
  sub_1AD28A010(0);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v0;
  swift_beginAccess();
  swift_beginAccess();
  swift_retain();
  uint64_t v8 = swift_bridgeObjectRetain();
  size_t v9 = sub_1AD2A5D44(v8);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v12 = v9 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v13 = *(void *)(v5 + 72);
    v31[1] = v9;
    swift_retain();
    uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1AD322338(v12, (uint64_t)v7, type metadata accessor for SummarySharingSelectableDataTypeItem);
      sub_1AD322338((uint64_t)&v7[*(int *)(v4 + 40)], (uint64_t)v3, (uint64_t (*)(void))sub_1AD28A010);
      uint64_t v15 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent(0);
      int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v3, 1, v15);
      int v17 = (uint64_t (*)(void))sub_1AD28A010;
      if (v16 == 1)
      {
        uint64_t v18 = MEMORY[0x1E4FBC860];
      }
      else
      {
        uint64_t v18 = *(void *)&v3[*(int *)(v15 + 44)];
        swift_bridgeObjectRetain();
        int v17 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent;
      }
      sub_1AD31BD28((uint64_t)v3, v17);
      sub_1AD31BD28((uint64_t)v7, type metadata accessor for SummarySharingSelectableDataTypeItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = sub_1AD51C940(0, v14[2] + 1, 1, v14);
      }
      unint64_t v20 = v14[2];
      unint64_t v19 = v14[3];
      if (v20 >= v19 >> 1) {
        uint64_t v14 = sub_1AD51C940((void *)(v19 > 1), v20 + 1, 1, v14);
      }
      v14[2] = v20 + 1;
      v14[v20 + 4] = v18;
      v12 += v13;
      --v10;
    }
    while (v10);
    swift_release_n();
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_release();
    uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v33 = v11;
  uint64_t v21 = v14[2];
  if (v21)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v21; ++i)
    {
      uint64_t v23 = swift_bridgeObjectRetain();
      sub_1AD2603F4(v23);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = v33;
  uint64_t v25 = *(void *)(v32
                  + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_currentAuthorizations);
  swift_bridgeObjectRetain();
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_1AD320100(v26, v25);
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_1AD31D404(v24, v27, MEMORY[0x1E4F66840], (void (*)(void))sub_1AD320C28, (void (*)(uint64_t))sub_1AD320C5C, (uint64_t (*)(char *, unint64_t, uint64_t, unint64_t, uint64_t *))sub_1AD31DD68);
  swift_bridgeObjectRelease();
  size_t v29 = sub_1AD2A6140(v28);
  swift_release();
  return v29;
}

void sub_1AD315D34(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1B3E68580](v1);
  if (v2)
  {
    id v3 = (char *)v2;
    swift_retain();
    sub_1AD591540();
    swift_release();
    swift_retain();
    sub_1AD4114F4();
    swift_release();
    uint64_t v4 = &v3[OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController_dataSourceAdaptor];
    swift_beginAccess();
    if (*(void *)v4)
    {
      swift_retain();
      sub_1AD3AC784(1u);
      swift_release();
    }
    id v5 = sub_1AD315304();
    objc_msgSend(v5, sel_setEnabled_, sub_1AD316A70() & 1);
  }
}

id sub_1AD315E74()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1AD73A670();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (objc_class *)type metadata accessor for SummarySharingRelationshipDetailsViewController();
  v19.receiver = v0;
  v19.super_class = v7;
  objc_msgSendSuper2(&v19, sel_viewDidLoad);
  sub_1AD3161F4();
  id result = objc_msgSend(v0, sel_collectionView);
  if (result)
  {
    size_t v9 = result;
    id v10 = objc_msgSend(self, sel_systemBackgroundColor);
    objc_msgSend(v9, sel_setBackgroundColor_, v10);

    id result = objc_msgSend(v1, sel_collectionView);
    if (result)
    {
      uint64_t v11 = result;
      objc_msgSend(result, sel_setPreservesSuperviewLayoutMargins_, 1);

      sub_1AD73C0C0();
      id v12 = objc_allocWithZone(MEMORY[0x1E4F2B500]);
      uint64_t v13 = (void *)sub_1AD73A630();
      id v14 = objc_msgSend(v12, sel_initForInvitationUUID_, v13);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B4F0]), sel_initWithHealthStore_recipientIdentifier_, *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_healthStore], v14);
      v18[1] = sub_1AD3139FC((uint64_t)v15, (uint64_t)&v1[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_healthExperienceStore], (uint64_t)&v1[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_flow]);
      *(void *)(swift_allocObject() + 16) = ObjectType;
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v16;
      *(void *)(v17 + 24) = ObjectType;
      sub_1AD32104C();
      sub_1AD3222F0(&qword_1E9A2C2B8, (void (*)(uint64_t))sub_1AD32104C);
      sub_1AD73DC60();
      swift_release();
      swift_release();
      swift_release();

      return (id)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1AD3161F4()
{
  id v1 = sub_1AD315304();
  objc_msgSend(v1, sel_setEnabled_, 0);

  id v2 = objc_msgSend(v0, sel_navigationItem);
  id v3 = sub_1AD315304();
  objc_msgSend(v2, sel_setRightBarButtonItem_, v3);

  id v4 = objc_msgSend(v0, sel_navigationItem);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_didTapCancel);
  objc_msgSend(v4, sel_setLeftBarButtonItem_, v5);

  sub_1AD41E020();
}

void sub_1AD3162E8(uint64_t a1)
{
  v24.receiver = v1;
  v24.super_class = (Class)type metadata accessor for SummarySharingRelationshipDetailsViewController();
  objc_msgSendSuper2(&v24, sel_traitCollectionDidChange_, a1);
  sub_1AD42150C(1);
  id v3 = (void **)&v1[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_navigationBarTitleView];
  swift_beginAccess();
  id v4 = *v3;
  if (v4)
  {
    type metadata accessor for ProfileNavigationBarView();
    uint64_t v5 = swift_dynamicCastClass();
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = v1;
      id v8 = v4;
      id v9 = objc_msgSend(v7, sel_collectionView);
      if (v9)
      {
        id v10 = v9;
        sub_1AD41EAC8();
        double v12 = v11;
        objc_msgSend(v10, sel_contentOffset);
        double v14 = v13;
        objc_msgSend(v10, sel_adjustedContentInset);
        double v16 = v15;

        if (v12 >= v14 + v16) {
          double v17 = 0.0;
        }
        else {
          double v17 = 1.0;
        }
        objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC18HealthExperienceUI24ProfileNavigationBarView_contentView), sel_alpha);
        if (v17 != v18)
        {
          uint64_t v19 = swift_allocObject();
          *(void *)(v19 + 16) = v6;
          *(double *)(v19 + 24) = v17;
          unint64_t v20 = self;
          aBlock[4] = sub_1AD3225B8;
          aBlock[5] = v19;
          aBlock[0] = MEMORY[0x1E4F143A8];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1AD1CAB10;
          aBlock[3] = &block_descriptor_92;
          uint64_t v21 = _Block_copy(aBlock);
          id v22 = v8;
          swift_retain();
          swift_release();
          objc_msgSend(v20, sel_animateWithDuration_animations_, v21, 0.2);
          swift_release();
          _Block_release(v21);
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_1AD316588(uint64_t a1)
{
  v24.receiver = v1;
  v24.super_class = (Class)type metadata accessor for SummarySharingRelationshipDetailsViewController();
  objc_msgSendSuper2(&v24, sel_scrollViewDidScroll_, a1);
  sub_1AD42150C(1);
  id v3 = (void **)&v1[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_navigationBarTitleView];
  swift_beginAccess();
  id v4 = *v3;
  if (v4)
  {
    type metadata accessor for ProfileNavigationBarView();
    uint64_t v5 = swift_dynamicCastClass();
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = v1;
      id v8 = v4;
      id v9 = objc_msgSend(v7, sel_collectionView);
      if (v9)
      {
        id v10 = v9;
        sub_1AD41EAC8();
        double v12 = v11;
        objc_msgSend(v10, sel_contentOffset);
        double v14 = v13;
        objc_msgSend(v10, sel_adjustedContentInset);
        double v16 = v15;

        if (v12 >= v14 + v16) {
          double v17 = 0.0;
        }
        else {
          double v17 = 1.0;
        }
        objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC18HealthExperienceUI24ProfileNavigationBarView_contentView), sel_alpha);
        if (v17 != v18)
        {
          uint64_t v19 = swift_allocObject();
          *(void *)(v19 + 16) = v6;
          *(double *)(v19 + 24) = v17;
          unint64_t v20 = self;
          aBlock[4] = sub_1AD321020;
          aBlock[5] = v19;
          aBlock[0] = MEMORY[0x1E4F143A8];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1AD1CAB10;
          aBlock[3] = &block_descriptor_85;
          uint64_t v21 = _Block_copy(aBlock);
          id v22 = v8;
          swift_retain();
          swift_release();
          objc_msgSend(v20, sel_animateWithDuration_animations_, v21, 0.2);
          swift_release();
          _Block_release(v21);
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_1AD316838()
{
  id v1 = v0;
  uint64_t v2 = sub_1AD73C490();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AD73A670();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1AD73C4D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  double v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  double v13 = (char *)&v16 - v12;
  sub_1AD73C0C0();
  sub_1AD73C4C0();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  sub_1AD73C470();
  double v14 = (void *)sub_1AD73C440();
  objc_msgSend(v1, sel_setUserActivity_, v14);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_1AD316A70()
{
  sub_1AD28A010(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v0
                 + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_currentAuthorizations);
  uint64_t v30 = v0;
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v31 = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v9 = swift_bridgeObjectRetain();
  size_t v10 = sub_1AD2A5D44(v9);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v13 = v10 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    size_t v14 = v10;
    uint64_t v15 = *(void *)(v5 + 72);
    size_t v29 = v14;
    swift_retain();
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1AD322338(v13, (uint64_t)v7, type metadata accessor for SummarySharingSelectableDataTypeItem);
      sub_1AD322338((uint64_t)&v7[*(int *)(v4 + 40)], (uint64_t)v3, (uint64_t (*)(void))sub_1AD28A010);
      uint64_t v17 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent(0);
      int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v3, 1, v17);
      uint64_t v19 = (uint64_t (*)(void))sub_1AD28A010;
      if (v18 == 1)
      {
        uint64_t v20 = MEMORY[0x1E4FBC860];
      }
      else
      {
        uint64_t v20 = *(void *)&v3[*(int *)(v17 + 44)];
        swift_bridgeObjectRetain();
        uint64_t v19 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent;
      }
      sub_1AD31BD28((uint64_t)v3, v19);
      sub_1AD31BD28((uint64_t)v7, type metadata accessor for SummarySharingSelectableDataTypeItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v16 = sub_1AD51C940(0, v16[2] + 1, 1, v16);
      }
      unint64_t v22 = v16[2];
      unint64_t v21 = v16[3];
      if (v22 >= v21 >> 1) {
        uint64_t v16 = sub_1AD51C940((void *)(v21 > 1), v22 + 1, 1, v16);
      }
      v16[2] = v22 + 1;
      v16[v22 + 4] = v20;
      v13 += v15;
      --v11;
    }
    while (v11);
    swift_release_n();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_release();
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v32 = v12;
  uint64_t v23 = v16[2];
  if (v23)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v23; ++i)
    {
      uint64_t v25 = swift_bridgeObjectRetain();
      sub_1AD2603F4(v25);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1AD39A400(v32);
  swift_bridgeObjectRelease();
  char v27 = sub_1AD31B358(v31, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27) {
    return *(unsigned __int8 *)(v30
  }
                              + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_pausedStateChanged);
  else {
    return 1;
  }
}

void sub_1AD316E5C()
{
}

uint64_t sub_1AD316EC0()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_navigationBarTitleView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_healthStore));
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_healthExperienceStore);
  swift_release();
  swift_release();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_sharingEntryStore));
  uint64_t v1 = v0
     + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_sharingProfileInformation;
  uint64_t v2 = sub_1AD73C130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1AD31BD28(v0 + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_flow, type metadata accessor for SummarySharingSelectionFlow);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController____lazy_storage___doneButtonItem));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController____lazy_storage___activitySpinnerItem));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_1AD317000()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SummarySharingRelationshipDetailsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1AD31717C()
{
  return type metadata accessor for SummarySharingRelationshipDetailsViewController();
}

uint64_t type metadata accessor for SummarySharingRelationshipDetailsViewController()
{
  uint64_t result = qword_1E9A2C210;
  if (!qword_1E9A2C210) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AD3171D0()
{
  uint64_t result = sub_1AD73C130();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SummarySharingSelectionFlow(319);
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

void *sub_1AD3172EC()
{
  unint64_t v1 = (void **)(v0
               + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_navigationBarTitleView);
  swift_beginAccess();
  unint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1AD31733C(void *a1)
{
  id v3 = (void **)(v1
               + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_navigationBarTitleView);
  swift_beginAccess();
  uint64_t v4 = *v3;
  char *v3 = a1;
}

uint64_t (*sub_1AD317390())()
{
  return j__swift_endAccess;
}

double sub_1AD3173F0()
{
  if (qword_1E9A29B38 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_1E9A48CD8;
  if (qword_1E9A29B30 != -1) {
    swift_once();
  }
  return v0 + *(double *)&qword_1E9A48CD0;
}

void sub_1AD317480()
{
  *(unsigned char *)(v0
           + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_pausedStateChanged) = 1;
  id v1 = sub_1AD315304();
  objc_msgSend(v1, sel_setEnabled_, sub_1AD316A70() & 1);
}

uint64_t sub_1AD3174E0()
{
  return swift_retain();
}

uint64_t sub_1AD31752C(uint64_t a1)
{
  id v3 = (void *)(v1
                + OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_selectedDataTypesContext);
  swift_beginAccess();
  void *v3 = a1;
  return swift_release();
}

uint64_t (*sub_1AD317580())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1AD3175DC()
{
  uint64_t v0 = sub_1AD73CBA0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73CAD0();
  uint64_t v4 = sub_1AD73CB80();
  os_log_type_t v5 = sub_1AD73F940();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = sub_1AD740E30();
    uint64_t v11 = sub_1AD1F62D4(v8, v9, &v12);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v4, v5, "[%s] Fetch identifiers stream completed", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v7, -1, -1);
    MEMORY[0x1B3E68450](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_1AD3177B4(uint64_t *a1, uint64_t a2)
{
  sub_1AD28A010(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v7 = *(void *)(v69 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v69);
  size_t v10 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v57 - v11;
  uint64_t v13 = sub_1AD73CBA0();
  uint64_t v66 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  swift_beginAccess();
  uint64_t v17 = MEMORY[0x1B3E68580](a2 + 16);
  if (v17)
  {
    uint64_t v18 = v17;
    sub_1AD73CAD0();
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_1AD73CB80();
    int v63 = sub_1AD73F940();
    BOOL v20 = os_log_type_enabled(v19, (os_log_type_t)v63);
    uint64_t v64 = v16;
    v65 = (char *)v18;
    if (v20)
    {
      os_log_t v60 = v19;
      uint64_t v61 = v13;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      v71[0] = v58;
      *(_DWORD *)uint64_t v21 = 136315394;
      uint64_t v22 = sub_1AD740E30();
      uint64_t v70 = sub_1AD1F62D4(v22, v23, v71);
      v57[1] = v71;
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      uint64_t v59 = (uint8_t *)v21;
      *(_WORD *)(v21 + 12) = 2080;
      int64_t v24 = *(void *)(v16 + 16);
      uint64_t v25 = MEMORY[0x1E4FBC860];
      uint64_t v62 = v7;
      if (v24)
      {
        uint64_t v70 = MEMORY[0x1E4FBC860];
        sub_1AD2F57F0(0, v24, 0);
        uint64_t v26 = v16 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
        uint64_t v67 = *(void *)(v7 + 72);
        uint64_t v68 = v15;
        uint64_t v25 = v70;
        do
        {
          sub_1AD322338(v26, (uint64_t)v12, type metadata accessor for SummarySharingSelectableDataTypeItem);
          uint64_t v27 = *((void *)v12 + 7);
          uint64_t v28 = *((void *)v12 + 8);
          swift_bridgeObjectRetain();
          sub_1AD31BD28((uint64_t)v12, type metadata accessor for SummarySharingSelectableDataTypeItem);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1AD2F57F0(0, *(void *)(v25 + 16) + 1, 1);
            uint64_t v25 = v70;
          }
          unint64_t v30 = *(void *)(v25 + 16);
          unint64_t v29 = *(void *)(v25 + 24);
          if (v30 >= v29 >> 1)
          {
            sub_1AD2F57F0(v29 > 1, v30 + 1, 1);
            uint64_t v25 = v70;
          }
          *(void *)(v25 + 16) = v30 + 1;
          uint64_t v31 = v25 + 16 * v30;
          *(void *)(v31 + 32) = v27;
          *(void *)(v31 + 40) = v28;
          uint64_t v15 = v68;
          v26 += v67;
          --v24;
        }
        while (v24);
      }
      uint64_t v32 = v59;
      sub_1AD3210E8(0, (unint64_t *)&qword_1EB7413B8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
      uint64_t v34 = MEMORY[0x1B3E657F0](v25, v33);
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
      uint64_t v70 = sub_1AD1F62D4(v34, v36, v71);
      sub_1AD7403B0();
      uint64_t v16 = v64;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v37 = v60;
      _os_log_impl(&dword_1AD1A4000, v60, (os_log_type_t)v63, "[%s] Fetched selectedTopics with identifiers: %s", v32, 0x16u);
      uint64_t v38 = v58;
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v38, -1, -1);
      MEMORY[0x1B3E68450](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v66 + 8))(v15, v61);
      uint64_t v7 = v62;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v15, v13);
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1AD383B68(v16);
    swift_release();
    uint64_t v39 = *(void *)(v16 + 16);
    uint64_t v40 = MEMORY[0x1E4FBC860];
    if (v39)
    {
      uint64_t v41 = v16 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      uint64_t v42 = *(void *)(v7 + 72);
      swift_bridgeObjectRetain();
      uint64_t v43 = MEMORY[0x1E4FBC860];
      id v44 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        sub_1AD322338(v41, (uint64_t)v10, type metadata accessor for SummarySharingSelectableDataTypeItem);
        sub_1AD322338((uint64_t)&v10[*(int *)(v69 + 40)], (uint64_t)v6, (uint64_t (*)(void))sub_1AD28A010);
        uint64_t v45 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent(0);
        int v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48))(v6, 1, v45);
        unint64_t v47 = (uint64_t (*)(void))sub_1AD28A010;
        if (v46 == 1)
        {
          uint64_t v48 = v43;
        }
        else
        {
          uint64_t v48 = *(void *)&v6[*(int *)(v45 + 44)];
          swift_bridgeObjectRetain();
          unint64_t v47 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent;
        }
        sub_1AD31BD28((uint64_t)v6, v47);
        sub_1AD31BD28((uint64_t)v10, type metadata accessor for SummarySharingSelectableDataTypeItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v44 = sub_1AD51C940(0, v44[2] + 1, 1, v44);
        }
        unint64_t v50 = v44[2];
        unint64_t v49 = v44[3];
        if (v50 >= v49 >> 1) {
          id v44 = sub_1AD51C940((void *)(v49 > 1), v50 + 1, 1, v44);
        }
        v44[2] = v50 + 1;
        v44[v50 + 4] = v48;
        v41 += v42;
        --v39;
      }
      while (v39);
      swift_bridgeObjectRelease();
      uint64_t v40 = MEMORY[0x1E4FBC860];
    }
    else
    {
      id v44 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v70 = v40;
    uint64_t v51 = v44[2];
    if (v51)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v51; ++i)
      {
        uint64_t v53 = swift_bridgeObjectRetain();
        sub_1AD2603F4(v53);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v54 = sub_1AD39A400(v70);
    swift_bridgeObjectRelease();
    uint64_t v55 = v65;
    *(void *)&v65[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_currentAuthorizations] = v54;
    swift_bridgeObjectRelease();
    id v56 = sub_1AD315304();
    objc_msgSend(v56, sel_setEnabled_, sub_1AD316A70() & 1);
  }
}

id sub_1AD317F38()
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1AD21CEC8();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v82 = (char *)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1AD73A670();
  uint64_t v77 = *(void *)(v3 - 8);
  uint64_t v78 = v3;
  uint64_t v4 = *(void *)(v77 + 64);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v76 - v7;
  sub_1AD31B73C();
  uint64_t v80 = *(void *)(v9 - 8);
  uint64_t v81 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v79 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD321A5C(0, &qword_1E9A2C238, (void (*)(uint64_t))sub_1AD31B73C, (void (*)(void))sub_1AD31B96C);
  uint64_t v84 = *(void *)(v11 - 8);
  uint64_t v85 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v83 = (char *)&v76 - v12;
  uint64_t v13 = sub_1AD73CBA0();
  uint64_t v87 = *(uint64_t (***)(void, void))(v13 - 8);
  uint64_t v88 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v76 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v76 - v20;
  swift_beginAccess();
  swift_beginAccess();
  swift_retain();
  uint64_t v22 = swift_bridgeObjectRetain();
  size_t v23 = sub_1AD2A5D44(v22);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v23 + 16);
  swift_release();
  if (v24)
  {
    uint64_t v25 = OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_updateAuthorizationsCancellable;
    if (*(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_updateAuthorizationsCancellable])
    {
      sub_1AD73CAD0();
      uint64_t v26 = sub_1AD73CB80();
      os_log_type_t v27 = sub_1AD73F920();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        unint64_t v29 = (void *)swift_slowAlloc();
        id v90 = v29;
        *(_DWORD *)uint64_t v28 = 136315138;
        uint64_t v30 = sub_1AD740E30();
        uint64_t v89 = sub_1AD1F62D4(v30, v31, (uint64_t *)&v90);
        sub_1AD7403B0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AD1A4000, v26, v27, "[%s] updateAuthorizationsCancellable is in progress; not starting a new stream",
          v28,
          0xCu);
        swift_arrayDestroy();
        MEMORY[0x1B3E68450](v29, -1, -1);
        MEMORY[0x1B3E68450](v28, -1, -1);
      }

      return (id)((uint64_t (**)(char *, uint64_t))v87)[1](v19, v88);
    }
    else
    {
      uint64_t v39 = v0;
      uint64_t v40 = *(void *)(sub_1AD315494() + 16);
      swift_bridgeObjectRelease();
      if (v40
        || (uint64_t v41 = *(void *)(sub_1AD315904() + 16), swift_bridgeObjectRelease(), v41)
        || (v0[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_pausedStateChanged] & 1) != 0)
      {
        sub_1AD3190CC();
        uint64_t v76 = v0;
        uint64_t v87 = *(uint64_t (***)(void, void))&v0[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_sharingEntryStore];
        uint64_t v42 = v87;
        sub_1AD73C0C0();
        size_t v43 = sub_1AD315494();
        size_t v44 = sub_1AD315904();
        uint64_t v88 = v25;
        size_t v45 = v44;
        uint64_t v46 = v77;
        uint64_t v47 = v78;
        (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v6, v8, v78);
        unint64_t v48 = (*(unsigned __int8 *)(v46 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
        unint64_t v49 = (char *)swift_allocObject();
        *((void *)v49 + 2) = v43;
        *((void *)v49 + 3) = v45;
        *((void *)v49 + 4) = v42;
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v49[v48], v6, v47);
        unint64_t v50 = (uint64_t (*)(uint64_t, void, uint64_t, void))MEMORY[0x1E4F1AC28];
        sub_1AD31BB04(0, &qword_1E9A2C248, MEMORY[0x1E4F1AC28]);
        swift_allocObject();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v51 = v87;
        id v90 = (id)sub_1AD73DB80();
        sub_1AD31B928((unint64_t *)&qword_1E9A2C250, &qword_1E9A2C248, v50);
        id v52 = (void *)sub_1AD73DC70();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v47);
        id v90 = v52;
        uint64_t v53 = swift_allocObject();
        uint64_t v54 = v76;
        uint64_t v55 = ObjectType;
        *(void *)(v53 + 16) = v76;
        *(void *)(v53 + 24) = v55;
        id v56 = v54;
        sub_1AD73D9E0();
        uint64_t v57 = (uint64_t (*)(uint64_t, void, uint64_t, void))MEMORY[0x1E4F1AAE0];
        sub_1AD31BB04(0, (unint64_t *)&qword_1EB73D150, MEMORY[0x1E4F1AAE0]);
        uint64_t v58 = MEMORY[0x1E4FBB390];
        sub_1AD322468(0, (unint64_t *)&qword_1EB731FB8, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AAE0]);
        sub_1AD31B928((unint64_t *)&qword_1EB73D148, (unint64_t *)&qword_1EB73D150, v57);
        sub_1AD3224CC((unint64_t *)&unk_1EB732DE0, (unint64_t *)&qword_1EB731FB8, v58);
        uint64_t v59 = v79;
        sub_1AD73DD50();
        swift_release();
        swift_release();
        sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F7F0);
        id v90 = (id)sub_1AD73FC50();
        uint64_t v60 = sub_1AD73FBF0();
        uint64_t v61 = (uint64_t)v82;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v82, 1, 1, v60);
        sub_1AD31B96C();
        sub_1AD21F35C();
        uint64_t v62 = v83;
        uint64_t v63 = v81;
        sub_1AD73DD80();
        sub_1AD31BD28(v61, (uint64_t (*)(void))sub_1AD21CEC8);

        (*(void (**)(char *, uint64_t))(v80 + 8))(v59, v63);
        uint64_t v64 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v65 = swift_allocObject();
        *(void *)(v65 + 16) = v64;
        *(void *)(v65 + 24) = v55;
        swift_allocObject();
        swift_unknownObjectWeakInit();
        sub_1AD31BC44();
        uint64_t v66 = v85;
        uint64_t v67 = sub_1AD73DCE0();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v62, v66);
        *(void *)&v76[v88] = v67;
        return (id)swift_release();
      }
      else
      {
        sub_1AD73CAD0();
        uint64_t v68 = sub_1AD73CB80();
        os_log_type_t v69 = sub_1AD73F920();
        BOOL v70 = os_log_type_enabled(v68, v69);
        uint64_t v71 = v87;
        if (v70)
        {
          uint64_t v72 = (uint8_t *)swift_slowAlloc();
          uint64_t v73 = (void *)swift_slowAlloc();
          id v90 = v73;
          *(_DWORD *)uint64_t v72 = 136315138;
          uint64_t v74 = sub_1AD740E30();
          uint64_t v89 = sub_1AD1F62D4(v74, v75, (uint64_t *)&v90);
          sub_1AD7403B0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1AD1A4000, v68, v69, "[%s] User didn't change topics and didn't update their pause state. This should not have been possible so will just dismiss and not commit any transactions.", v72, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1B3E68450](v73, -1, -1);
          MEMORY[0x1B3E68450](v72, -1, -1);
        }

        ((uint64_t (**)(char *, uint64_t))v71)[1](v21, v88);
        return objc_msgSend(v39, sel_dismissViewControllerAnimated_completion_, 1, 0);
      }
    }
  }
  else
  {
    sub_1AD73CAD0();
    uint64_t v33 = sub_1AD73CB80();
    os_log_type_t v34 = sub_1AD73F940();
    if (os_log_type_enabled(v33, v34))
    {
      unint64_t v35 = (uint8_t *)swift_slowAlloc();
      unint64_t v36 = (void *)swift_slowAlloc();
      id v90 = v36;
      *(_DWORD *)unint64_t v35 = 136315138;
      uint64_t v37 = sub_1AD740E30();
      uint64_t v89 = sub_1AD1F62D4(v37, v38, (uint64_t *)&v90);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AD1A4000, v33, v34, "[%s] User selected no topics to share; displaying error message",
        v35,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v36, -1, -1);
      MEMORY[0x1B3E68450](v35, -1, -1);
    }

    ((uint64_t (**)(char *, uint64_t))v87)[1](v16, v88);
    return (id)sub_1AD318B14();
  }
}

uint64_t sub_1AD318B14()
{
  uint64_t v1 = type metadata accessor for SummarySharingOnboardingError();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1AD73C020();
  if ((v5 & 1) == 0)
  {
    if (result)
    {
      if (result != 1) {
        return result;
      }
      int v6 = 4;
    }
    else
    {
      int v6 = 3;
    }
    int v34 = v6;
    if (qword_1EB732818 != -1) {
      swift_once();
    }
    sub_1AD73A1D0();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v0;
    id v8 = v0;
    uint64_t v9 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_1AD320BE4;
    uint64_t v40 = v7;
    unint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v36 = 1107296256;
    uint64_t v37 = sub_1AD35CE78;
    unint64_t v38 = &block_descriptor_61;
    uint64_t v10 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v11 = self;
    id v33 = objc_msgSend(v11, sel_actionWithTitle_style_handler_, v9, 2, v10);
    _Block_release(v10);

    sub_1AD73A1D0();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v8;
    id v32 = v8;
    uint64_t v13 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_1AD31BD04;
    uint64_t v40 = v12;
    unint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v36 = 1107296256;
    uint64_t v37 = sub_1AD35CE78;
    unint64_t v38 = &block_descriptor_67;
    uint64_t v14 = _Block_copy(&aBlock);
    swift_release();
    id v15 = objc_msgSend(v11, sel_actionWithTitle_style_handler_, v13, 0, v14);
    _Block_release(v14);

    sub_1AD73A1D0();
    sub_1AD2082E8(0, (unint64_t *)&qword_1EB73F8F0, (unint64_t *)&qword_1EB73F910, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1AD74C370;
    uint64_t v17 = sub_1AD73C110();
    uint64_t v19 = v18;
    *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v16 + 64) = sub_1AD21FDC0();
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 40) = v19;
    uint64_t v20 = sub_1AD73F190();
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_1AD73A1D0();
    uint64_t v25 = v24;
    unsigned char *v3 = v34;
    swift_storeEnumTagMultiPayload();
    sub_1AD3210E8(0, (unint64_t *)&qword_1EB741320, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AD74DE20;
    os_log_type_t v27 = v33;
    *(void *)(inited + 32) = v33;
    *(void *)(inited + 40) = v15;
    unint64_t aBlock = inited;
    sub_1AD73F4D0();
    unint64_t v28 = aBlock;
    id v29 = v27;
    id v30 = v15;
    sub_1AD35B95C(v32, v20, v22, v23, v25, v28, 0, 0);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1AD31BD28((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SummarySharingOnboardingError);
  }
  return result;
}

void sub_1AD3190CC()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  id v2 = sub_1AD31538C();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v2);

  id v3 = objc_msgSend(v0, sel_navigationItem);
  id v4 = objc_msgSend(v3, sel_leftBarButtonItem);

  if (v4)
  {
    objc_msgSend(v4, sel_setEnabled_, 0);
  }
  uint64_t v5 = *(void *)(*(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_relationshipDetailsDataSource]
                 + OBJC_IVAR____TtC18HealthExperienceUI43SummarySharingRelationshipDetailsDataSource_stopSharingDataSource);
  if (v5)
  {
    uint64_t v6 = *(void *)(v5
                   + OBJC_IVAR____TtC18HealthExperienceUI32EndSharingRelationshipDataSource_endSharingRelationshipItem);
    *(unsigned char *)(v6 + 96) = 1;
    sub_1AD2082E8(0, (unint64_t *)&qword_1EB73F8D0, (unint64_t *)&qword_1EB73E870, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1AD74C370;
    *(void *)(v7 + 56) = type metadata accessor for EndSharingRelationshipItem();
    *(void *)(v7 + 64) = sub_1AD3222F0(&qword_1E9A2BFA0, (void (*)(uint64_t))type metadata accessor for EndSharingRelationshipItem);
    *(void *)(v7 + 32) = v6;
    swift_retain();
    swift_retain();
    sub_1AD1BBA28(0, v7, 1);
    swift_release();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1AD319298@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1AD73CBA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *a1;
  sub_1AD73CAD0();
  uint64_t v9 = sub_1AD73CB80();
  os_log_type_t v10 = sub_1AD73F940();
  if (os_log_type_enabled(v9, v10))
  {
    int v18 = v8;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = v4;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v20 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v14 = sub_1AD740E30();
    uint64_t v19 = sub_1AD1F62D4(v14, v15, &v20);
    LOBYTE(v8) = v18;
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v9, v10, "[%s] Completed authorization update!", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v13, -1, -1);
    MEMORY[0x1B3E68450](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t result = sub_1AD320324(v8);
  *a2 = result;
  return result;
}

uint64_t sub_1AD3194B0(void **a1, uint64_t a2)
{
  uint64_t v4 = sub_1AD73CBA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *a1;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1B3E68580](a2 + 16);
  if (result)
  {
    os_log_type_t v10 = (char *)result;
    if (v8)
    {
      id v11 = v8;
      sub_1AD73CAD0();
      id v12 = v8;
      id v13 = v8;
      uint64_t v14 = sub_1AD73CB80();
      os_log_type_t v15 = sub_1AD73F920();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        uint64_t v26 = v24;
        *(_DWORD *)uint64_t v16 = 136446466;
        uint64_t v17 = sub_1AD740E30();
        uint64_t v25 = sub_1AD1F62D4(v17, v18, &v26);
        sub_1AD7403B0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 12) = 2080;
        uint64_t v25 = (uint64_t)v8;
        id v19 = v8;
        sub_1AD2196B8(0, (unint64_t *)&qword_1EB7414A0);
        uint64_t v20 = sub_1AD73F240();
        uint64_t v25 = sub_1AD1F62D4(v20, v21, &v26);
        sub_1AD7403B0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1AD1A4000, v14, v15, "[%{public}s] Failed to send invite: %s", (uint8_t *)v16, 0x16u);
        uint64_t v22 = v24;
        swift_arrayDestroy();
        MEMORY[0x1B3E68450](v22, -1, -1);
        MEMORY[0x1B3E68450](v16, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      id v23 = v8;
      sub_1AD3197A4(v8);
    }
    *(void *)&v10[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_updateAuthorizationsCancellable] = 0;

    return swift_release();
  }
  return result;
}

uint64_t sub_1AD3197A4(void *a1)
{
  uint64_t v3 = type metadata accessor for SummarySharingOnboardingError();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1AD73A1D0();
  uint64_t v8 = v7;
  id v9 = a1;
  SummarySharingOnboardingError.init(error:)(a1, v5);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  id v11 = v1;
  sub_1AD35B95C(v11, v6, v8, 0, 0, MEMORY[0x1E4FBC860], (uint64_t)sub_1AD31BD04, v10);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1AD31BD28((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SummarySharingOnboardingError);
}

void sub_1AD319944(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x1B3E68580](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    if (v2) {
      objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, 1, 0);
    }
    else {
      sub_1AD3197A4(0);
    }
  }
}

void sub_1AD319A10()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  id v2 = sub_1AD315304();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v2);

  id v3 = objc_msgSend(v0, sel_navigationItem);
  id v4 = objc_msgSend(v3, sel_leftBarButtonItem);

  if (v4)
  {
    objc_msgSend(v4, sel_setEnabled_, 1);
  }
  uint64_t v5 = *(void *)(*(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_relationshipDetailsDataSource]
                 + OBJC_IVAR____TtC18HealthExperienceUI43SummarySharingRelationshipDetailsDataSource_stopSharingDataSource);
  if (v5)
  {
    uint64_t v6 = *(void *)(v5
                   + OBJC_IVAR____TtC18HealthExperienceUI32EndSharingRelationshipDataSource_endSharingRelationshipItem);
    *(unsigned char *)(v6 + 96) = 0;
    sub_1AD2082E8(0, (unint64_t *)&qword_1EB73F8D0, (unint64_t *)&qword_1EB73E870, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1AD74C370;
    *(void *)(v7 + 56) = type metadata accessor for EndSharingRelationshipItem();
    *(void *)(v7 + 64) = sub_1AD3222F0(&qword_1E9A2BFA0, (void (*)(uint64_t))type metadata accessor for EndSharingRelationshipItem);
    *(void *)(v7 + 32) = v6;
    swift_retain();
    swift_retain();
    sub_1AD1BBA28(0, v7, 1);
    swift_release();
    swift_bridgeObjectRelease();
  }
}

void sub_1AD319BD8()
{
  id v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1AD73A670();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AD73CBA0();
  uint64_t v38 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(v0, sel_navigationItem);
  id v11 = sub_1AD31538C();
  objc_msgSend(v10, sel_setRightBarButtonItem_, v11);

  uint64_t v12 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_relationshipDetailsDataSource]
                  + OBJC_IVAR____TtC18HealthExperienceUI43SummarySharingRelationshipDetailsDataSource_stopSharingDataSource);
  if (v12)
  {
    uint64_t v13 = *(void *)(v12
                    + OBJC_IVAR____TtC18HealthExperienceUI32EndSharingRelationshipDataSource_endSharingRelationshipItem);
    *(unsigned char *)(v13 + 96) = 1;
    sub_1AD2082E8(0, (unint64_t *)&qword_1EB73F8D0, (unint64_t *)&qword_1EB73E870, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1AD74C370;
    *(void *)(v14 + 56) = type metadata accessor for EndSharingRelationshipItem();
    *(void *)(v14 + 64) = sub_1AD3222F0(&qword_1E9A2BFA0, (void (*)(uint64_t))type metadata accessor for EndSharingRelationshipItem);
    *(void *)(v14 + 32) = v13;
    swift_retain();
    swift_retain();
    sub_1AD1BBA28(0, v14, 1);
    swift_release();
    swift_bridgeObjectRelease();
  }
  sub_1AD73CAD0();
  os_log_type_t v15 = v1;
  uint64_t v16 = v9;
  uint64_t v17 = sub_1AD73CB80();
  os_log_type_t v18 = sub_1AD73F940();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v36 = v6;
    uint64_t v20 = v19;
    uint64_t v33 = swift_slowAlloc();
    aBlock[0] = v33;
    *(_DWORD *)uint64_t v20 = 136315395;
    unint64_t v35 = v16;
    uint64_t v21 = sub_1AD740E30();
    uint64_t v37 = ObjectType;
    uint64_t v39 = sub_1AD1F62D4(v21, v22, aBlock);
    uint64_t v34 = v7;
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2081;
    sub_1AD73C130();
    sub_1AD3222F0(&qword_1E9A2A968, MEMORY[0x1E4F66148]);
    uint64_t v23 = sub_1AD740B50();
    uint64_t v39 = sub_1AD1F62D4(v23, v24, aBlock);
    uint64_t ObjectType = v37;
    sub_1AD7403B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v17, v18, "%s Attempting to revoke invitation for %{private}s", (uint8_t *)v20, 0x16u);
    uint64_t v25 = v33;
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v25, -1, -1);
    uint64_t v26 = v20;
    uint64_t v6 = v36;
    MEMORY[0x1B3E68450](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v7);
  }
  os_log_type_t v27 = *(void **)&v15[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_sharingEntryStore];
  sub_1AD73C0C0();
  unint64_t v28 = (void *)sub_1AD73A630();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v15;
  *(void *)(v29 + 24) = ObjectType;
  aBlock[4] = (uint64_t)sub_1AD320C08;
  aBlock[5] = v29;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1AD6F3484;
  aBlock[3] = (uint64_t)&block_descriptor_73;
  id v30 = _Block_copy(aBlock);
  uint64_t v31 = v15;
  swift_release();
  objc_msgSend(v27, sel_revokeInvitationWithUUID_completion_, v28, v30);
  _Block_release(v30);
}

uint64_t sub_1AD31A154(int a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v59 = a4;
  uint64_t v7 = sub_1AD73EEA0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1AD73EEF0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v62 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1AD73CBA0();
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v21 = (char *)&v56 - v20;
  uint64_t v64 = v11;
  uint64_t v65 = v10;
  uint64_t v63 = v12;
  uint64_t v61 = v18;
  if (a2)
  {
    uint64_t v22 = v19;
    uint64_t v60 = v8;
    id v23 = a2;
    sub_1AD73CAD0();
    id v24 = a2;
    id v25 = a2;
    uint64_t v26 = sub_1AD73CB80();
    os_log_type_t v27 = sub_1AD73F920();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v58 = v7;
      uint64_t v30 = v29;
      aBlock[0] = v29;
      *(_DWORD *)uint64_t v28 = 136315395;
      uint64_t v31 = sub_1AD740E30();
      uint64_t v66 = sub_1AD1F62D4(v31, v32, aBlock);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2081;
      uint64_t v66 = (uint64_t)a2;
      id v33 = a2;
      sub_1AD2196B8(0, (unint64_t *)&qword_1EB7414A0);
      uint64_t v34 = sub_1AD73F240();
      uint64_t v66 = sub_1AD1F62D4(v34, v35, aBlock);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AD1A4000, v26, v27, "%s Could not revoke invitation: %{private}s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      uint64_t v36 = v30;
      uint64_t v7 = v58;
      MEMORY[0x1B3E68450](v36, -1, -1);
      MEMORY[0x1B3E68450](v28, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v61);
    uint64_t v8 = v60;
  }
  else
  {
    uint64_t v58 = v19;
    int v57 = a1;
    sub_1AD73CAD0();
    id v37 = a3;
    uint64_t v38 = sub_1AD73CB80();
    os_log_type_t v39 = sub_1AD73F940();
    int v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v60 = v8;
      uint64_t v42 = v41;
      uint64_t v43 = swift_slowAlloc();
      aBlock[0] = v43;
      *(_DWORD *)uint64_t v42 = 136315651;
      int v56 = v40;
      uint64_t v44 = sub_1AD740E30();
      uint64_t v66 = sub_1AD1F62D4(v44, v45, aBlock);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2081;
      uint64_t v59 = v42 + 14;
      sub_1AD73C130();
      sub_1AD3222F0(&qword_1E9A2A968, MEMORY[0x1E4F66148]);
      uint64_t v46 = sub_1AD740B50();
      uint64_t v66 = sub_1AD1F62D4(v46, v47, aBlock);
      sub_1AD7403B0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 22) = 1024;
      LODWORD(v66) = v57 & 1;
      sub_1AD7403B0();
      _os_log_impl(&dword_1AD1A4000, v38, (os_log_type_t)v56, "%s Successfully revoked invitation for %{private}s. Success: %{BOOL}d", (uint8_t *)v42, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v43, -1, -1);
      uint64_t v48 = v42;
      uint64_t v8 = v60;
      MEMORY[0x1B3E68450](v48, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v21, v61);
  }
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F7F0);
  unint64_t v49 = (void *)sub_1AD73FC50();
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = a3;
  aBlock[4] = (uint64_t)sub_1AD320C10;
  aBlock[5] = v50;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1AD1CAB10;
  aBlock[3] = (uint64_t)&block_descriptor_79;
  uint64_t v51 = _Block_copy(aBlock);
  id v52 = a3;
  swift_release();
  uint64_t v53 = v62;
  sub_1AD73EED0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1AD3222F0((unint64_t *)&qword_1EB731CD0, MEMORY[0x1E4FBCB00]);
  sub_1AD1C6948(0, (unint64_t *)&qword_1EB731CE0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1AD1D5F84();
  uint64_t v54 = v65;
  sub_1AD7404F0();
  MEMORY[0x1B3E65F90](0, v53, v54, v51);
  _Block_release(v51);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v54, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v53, v64);
}

size_t sub_1AD31A8F8()
{
  swift_beginAccess();
  swift_beginAccess();
  swift_retain();
  uint64_t v0 = swift_bridgeObjectRetain();
  size_t v1 = sub_1AD2A5D44(v0);
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1AD31A98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v34 = a6;
  id v36 = a5;
  uint64_t v10 = sub_1AD73C730();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  uint64_t v35 = v14;
  uint64_t v15 = *(void *)(a3 + 16);
  if (v15)
  {
    uint64_t v32 = a4;
    aBlock[0] = MEMORY[0x1E4FBC860];
    swift_retain();
    sub_1AD740780();
    uint64_t v33 = v11;
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v16 = v11 + 16;
    id v37 = v17;
    uint64_t v18 = a3 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
    uint64_t v19 = *(void *)(v16 + 56);
    do
    {
      v37(v13, v18, v10);
      sub_1AD73C720();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v13, v10);
      sub_1AD740750();
      sub_1AD740790();
      sub_1AD7407A0();
      sub_1AD740760();
      v18 += v19;
      --v15;
    }
    while (v15);
    uint64_t v20 = aBlock[0];
    a4 = v32;
    uint64_t v11 = v33;
  }
  else
  {
    swift_retain();
    uint64_t v20 = MEMORY[0x1E4FBC860];
  }
  uint64_t v21 = *(void *)(a4 + 16);
  if (v21)
  {
    uint64_t v33 = v20;
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1AD740780();
    id v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v22 = v11 + 16;
    id v37 = v23;
    uint64_t v24 = a4 + ((*(unsigned __int8 *)(v22 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 64));
    uint64_t v25 = *(void *)(v22 + 56);
    do
    {
      v37(v13, v24, v10);
      sub_1AD73C720();
      (*(void (**)(char *, uint64_t))(v22 - 8))(v13, v10);
      sub_1AD740750();
      sub_1AD740790();
      sub_1AD7407A0();
      sub_1AD740760();
      v24 += v25;
      --v21;
    }
    while (v21);
  }
  uint64_t v26 = (void *)sub_1AD73A630();
  sub_1AD2147D4(0, &qword_1E9A2C280);
  os_log_type_t v27 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  uint64_t v28 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = v35;
  *(void *)(v29 + 16) = sub_1AD320BD0;
  *(void *)(v29 + 24) = v30;
  aBlock[4] = sub_1AD320BDC;
  aBlock[5] = v29;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AD6F3484;
  aBlock[3] = &block_descriptor_14;
  uint64_t v31 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v36, sel_updateSharingAuthorizationsForInvitationUUID_sharingAuthorizationsToAdd_sharingAuthorizationsToDelete_completion_, v26, v27, v28, v31);
  _Block_release(v31);
}

void sub_1AD31AD40(char a1, id a2, void (*a3)(id, uint64_t))
{
  if (a2)
  {
    id v5 = a2;
    a3(a2, 1);
  }
  else
  {
    ((void (*)(void))a3)(a1 & 1);
  }
}

uint64_t sub_1AD31ADBC(char a1, char a2)
{
  uint64_t v4 = sub_1AD73CBA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73CAD0();
  uint64_t v8 = sub_1AD73CB80();
  os_log_type_t v9 = sub_1AD73F940();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = v11;
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v12 = sub_1AD1F62D4(0xD00000000000002FLL, 0x80000001AD751D00, &v17);
    uint64_t v15 = v4;
    uint64_t v16 = v12;
    sub_1AD7403B0();
    *(_WORD *)(v10 + 12) = 1024;
    LODWORD(v16) = a1 & 1;
    sub_1AD7403B0();
    _os_log_impl(&dword_1AD1A4000, v8, v9, "[%{public}s] Completed commit transaction operation with status: %{BOOL}d", (uint8_t *)v10, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v11, -1, -1);
    MEMORY[0x1B3E68450](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return a2 & 1;
}

uint64_t sub_1AD31AFCC(void *a1, int a2)
{
  LODWORD(v2) = a2;
  sub_1AD3210E8(0, &qword_1EB732E08, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC08]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = sub_1AD73CBA0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73CAD0();
  id v13 = a1;
  id v14 = a1;
  uint64_t v15 = sub_1AD73CB80();
  os_log_type_t v16 = sub_1AD73F920();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    int v27 = v2;
    uint64_t v2 = v17;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v30 = v26;
    *(_DWORD *)uint64_t v2 = 136446466;
    uint64_t v28 = v5;
    uint64_t v29 = sub_1AD1F62D4(0xD00000000000002FLL, 0x80000001AD751D00, &v30);
    sub_1AD7403B0();
    *(_WORD *)(v2 + 12) = 2080;
    uint64_t v29 = (uint64_t)a1;
    id v18 = a1;
    sub_1AD2196B8(0, (unint64_t *)&qword_1EB7414A0);
    uint64_t v19 = sub_1AD73F240();
    uint64_t v25 = v9;
    uint64_t v29 = sub_1AD1F62D4(v19, v20, &v30);
    uint64_t v5 = v28;
    sub_1AD7403B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1AD1A4000, v15, v16, "[%{public}s] Received an error when attempting to commit a transaction: %s", (uint8_t *)v2, 0x16u);
    uint64_t v21 = v26;
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v21, -1, -1);
    uint64_t v22 = v2;
    LOBYTE(v2) = v27;
    MEMORY[0x1B3E68450](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  LOBYTE(v30) = v2 & 1;
  sub_1AD73DB50();
  sub_1AD320AD0();
  uint64_t v23 = sub_1AD73DC70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v23;
}

uint64_t sub_1AD31B358(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AD73C730();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  unint64_t v45 = (char *)&v34 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1AD320C28();
    uint64_t v27 = sub_1AD73F0A0();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1AD320C5C();
      char v32 = sub_1AD73F150();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    id v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

void sub_1AD31B73C()
{
  if (!qword_1E9A2C220)
  {
    sub_1AD31B848();
    uint64_t v0 = (uint64_t (*)(uint64_t, void, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1AD31BB04(255, (unint64_t *)&qword_1EB73D150, MEMORY[0x1E4F1AAE0]);
    sub_1AD3222F0(&qword_1E9A2C230, (void (*)(uint64_t))sub_1AD31B848);
    sub_1AD31B928((unint64_t *)&qword_1EB73D148, (unint64_t *)&qword_1EB73D150, v0);
    unint64_t v1 = sub_1AD73D900();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1E9A2C220);
    }
  }
}

void sub_1AD31B848()
{
  if (!qword_1E9A2C228)
  {
    uint64_t v0 = MEMORY[0x1E4FBB390];
    sub_1AD322468(255, (unint64_t *)&qword_1EB731FB8, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AAE0]);
    sub_1AD2196B8(255, (unint64_t *)&qword_1EB7414A0);
    sub_1AD3224CC((unint64_t *)&unk_1EB732DE0, (unint64_t *)&qword_1EB731FB8, v0);
    unint64_t v1 = sub_1AD73D810();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1E9A2C228);
    }
  }
}

uint64_t sub_1AD31B928(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AD31BB04(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD31B96C()
{
  return sub_1AD3222F0(&qword_1E9A2C240, (void (*)(uint64_t))sub_1AD31B73C);
}

uint64_t sub_1AD31B9A0()
{
  uint64_t v1 = sub_1AD73A670();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1AD31BA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1AD73A670() - 8);
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = (void *)v2[4];
  uint64_t v9 = (uint64_t)v2 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  sub_1AD31A98C(a1, a2, v6, v7, v8, v9);
}

void sub_1AD31BB04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1AD2196B8(255, (unint64_t *)&qword_1EB7414A0);
    unint64_t v7 = a3(a1, MEMORY[0x1E4FBB390], v6, MEMORY[0x1E4FBC0F0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AD31BB84()
{
  return swift_deallocObject();
}

uint64_t sub_1AD31BBBC@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AD319298(a1, a2);
}

uint64_t sub_1AD31BBC4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1AD31BBFC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD31BC34(void **a1)
{
  return sub_1AD3194B0(a1, *(void *)(v1 + 16));
}

void sub_1AD31BC3C(unsigned __int8 *a1)
{
  sub_1AD319944(a1, v1);
}

unint64_t sub_1AD31BC44()
{
  unint64_t result = qword_1E9A2C258;
  if (!qword_1E9A2C258)
  {
    sub_1AD321A5C(255, &qword_1E9A2C238, (void (*)(uint64_t))sub_1AD31B73C, (void (*)(void))sub_1AD31B96C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C258);
  }
  return result;
}

uint64_t sub_1AD31BCCC()
{
  return swift_deallocObject();
}

void sub_1AD31BD04()
{
}

uint64_t sub_1AD31BD28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AD31BD88(uint64_t a1)
{
  return sub_1AD31BDDC(a1, (uint64_t (*)(void))sub_1AD3222A4, MEMORY[0x1E4F670F8], (void (*)(char *))sub_1AD2A6EE0, (void (*)(char *))sub_1AD3222D8);
}

uint64_t sub_1AD31BDDC(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), void (*a4)(char *), void (*a5)(char *))
{
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v8 = a2(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = a3(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v13);
  unint64_t v18 = (char *)&v30 - v17;
  if (!*(void *)(*(void *)v5 + 16)) {
    return result;
  }
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v30 = a1 + 56;
  uint64_t v20 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  uint64_t v33 = v12 + 16;
  int64_t v31 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v32 = v12 + 32;
  uint64_t v23 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v24 = 0;
  while (1)
  {
    if (v22)
    {
      unint64_t v25 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v26 = v25 | (v24 << 6);
      goto LABEL_6;
    }
    int64_t v27 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v31) {
      return swift_release();
    }
    unint64_t v28 = *(void *)(v30 + 8 * v27);
    ++v24;
    if (!v28)
    {
      int64_t v24 = v27 + 1;
      if (v27 + 1 >= v31) {
        return swift_release();
      }
      unint64_t v28 = *(void *)(v30 + 8 * v24);
      if (!v28)
      {
        int64_t v24 = v27 + 2;
        if (v27 + 2 >= v31) {
          return swift_release();
        }
        unint64_t v28 = *(void *)(v30 + 8 * v24);
        if (!v28)
        {
          int64_t v24 = v27 + 3;
          if (v27 + 3 >= v31) {
            return swift_release();
          }
          unint64_t v28 = *(void *)(v30 + 8 * v24);
          if (!v28) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v22 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v24 << 6);
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v18, *(void *)(v23 + 48) + *(void *)(v12 + 72) * v26, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v18, v11);
    v34(v15);
    v35(v10);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
  int64_t v29 = v27 + 4;
  if (v29 >= v31) {
    return swift_release();
  }
  unint64_t v28 = *(void *)(v30 + 8 * v29);
  if (v28)
  {
    int64_t v24 = v29;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v24 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v24 >= v31) {
      return swift_release();
    }
    unint64_t v28 = *(void *)(v30 + 8 * v24);
    ++v29;
    if (v28) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1AD31C0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = *MEMORY[0x1E4F143B8];
  sub_1AD289A0C(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AD73C730();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v58 = (char *)&v48 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = ~v13;
  uint64_t v15 = a1 + 56;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & *(void *)(a1 + 56);
  uint64_t v59 = a1;
  uint64_t v60 = a1 + 56;
  uint64_t v55 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v56 = v8 + 16;
  uint64_t v61 = v14;
  uint64_t v62 = 0;
  unint64_t v63 = v18;
  uint64_t v54 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  id v52 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  int v57 = (char *)(a2 + 56);
  uint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v48 = v8;
  unint64_t v49 = v6;
  uint64_t v53 = a2;
  unint64_t v50 = v18;
  uint64_t v51 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = a1;
  uint64_t v22 = v14;
  uint64_t v23 = (v18 - 1) & v18;
  unint64_t v24 = __clz(__rbit64(v18)) | (v20 << 6);
  int64_t v25 = v20;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(void *)(v21 + 48) + *(void *)(v8 + 72) * v24, v7);
  uint64_t v26 = 0;
  while (1)
  {
    (*v55)(v6, v26, 1, v7);
    uint64_t v59 = v21;
    uint64_t v60 = v15;
    uint64_t v61 = v22;
    uint64_t v62 = v25;
    unint64_t v63 = v23;
    if ((*v54)(v6, 1, v7) == 1)
    {
      sub_1AD1ECA9C();
      sub_1AD320C90((uint64_t)v6);
      return v53;
    }
    (*v52)(v58, v6, v7);
    uint64_t v30 = v53;
    sub_1AD320C28();
    uint64_t v31 = sub_1AD73F0A0();
    uint64_t v32 = -1 << *(unsigned char *)(v30 + 32);
    unint64_t v33 = v31 & ~v32;
    if ((*(void *)&v57[(v33 >> 3) & 0xFFFFFFFFFFFFFF8] >> v33)) {
      break;
    }
    uint64_t v39 = *v19;
LABEL_34:
    v39(v58, v7);
    int64_t v20 = v62;
    unint64_t v18 = v63;
    a1 = v59;
    uint64_t v15 = v60;
    uint64_t v14 = v61;
    unint64_t v50 = v63;
    uint64_t v51 = v62;
    if (v63) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      __break(1u);
    }
    int64_t v27 = (unint64_t)(v14 + 64) >> 6;
    if (v25 >= v27) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v15 + 8 * v25);
    if (v28) {
      goto LABEL_11;
    }
    v20 += 2;
    if (v25 + 1 >= v27) {
      goto LABEL_36;
    }
    unint64_t v28 = *(void *)(v15 + 8 * v20);
    if (v28) {
      goto LABEL_14;
    }
    if (v25 + 2 >= v27)
    {
LABEL_26:
      uint64_t v21 = a1;
      uint64_t v22 = v14;
      uint64_t v23 = 0;
      uint64_t v26 = 1;
      int64_t v25 = v20;
    }
    else
    {
      unint64_t v28 = *(void *)(v15 + 8 * (v25 + 2));
      if (v28)
      {
        v25 += 2;
        goto LABEL_11;
      }
      int64_t v20 = v25 + 3;
      if (v25 + 3 >= v27)
      {
        uint64_t v21 = a1;
        uint64_t v22 = v14;
        uint64_t v23 = 0;
        uint64_t v26 = 1;
        v25 += 2;
      }
      else
      {
        unint64_t v28 = *(void *)(v15 + 8 * v20);
        if (v28)
        {
LABEL_14:
          int64_t v25 = v20;
LABEL_11:
          uint64_t v21 = a1;
          uint64_t v22 = v14;
          uint64_t v23 = (v28 - 1) & v28;
          unint64_t v24 = __clz(__rbit64(v28)) + (v25 << 6);
          goto LABEL_7;
        }
        v25 += 4;
        if (v25 >= v27) {
          goto LABEL_26;
        }
        unint64_t v28 = *(void *)(v15 + 8 * v25);
        if (v28) {
          goto LABEL_11;
        }
        int64_t v25 = v27 - 1;
        uint64_t v29 = v51 + 6;
        while (v27 != v29)
        {
          unint64_t v28 = *(void *)(v15 + 8 * v29++);
          if (v28)
          {
            int64_t v25 = v29 - 1;
            goto LABEL_11;
          }
        }
LABEL_36:
        uint64_t v21 = a1;
        uint64_t v22 = v14;
        uint64_t v23 = 0;
        uint64_t v26 = 1;
      }
    }
  }
  uint64_t v51 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v34 = v30;
  uint64_t v35 = ~v32;
  uint64_t v36 = *(void *)(v8 + 72);
  uint64_t v37 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v37(v11, *(void *)(v34 + 48) + v36 * v33, v7);
    sub_1AD320C5C();
    char v38 = sub_1AD73F150();
    uint64_t v39 = *v19;
    (*v19)(v11, v7);
    if (v38) {
      break;
    }
    unint64_t v33 = (v33 + 1) & v35;
    if (((*(void *)&v57[(v33 >> 3) & 0xFFFFFFFFFFFFFF8] >> v33) & 1) == 0)
    {
      uint64_t v8 = v48;
      uint64_t v6 = v49;
      goto LABEL_34;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v39)(v58, v7);
  char v41 = *(unsigned char *)(v34 + 32);
  unint64_t v42 = (unint64_t)((1 << v41) + 63) >> 6;
  size_t v43 = 8 * v42;
  if ((v41 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v48 - ((v43 + 15) & 0x3FFFFFFFFFFFFFF0), v57, v43);
    uint64_t v44 = sub_1AD31D850((unint64_t *)((char *)&v48 - ((v43 + 15) & 0x3FFFFFFFFFFFFFF0)), v42, v34, v33, &v59);
    swift_release();
    sub_1AD1ECA9C();
    return v44;
  }
  else
  {
    uint64_t v46 = (void *)swift_slowAlloc();
    memcpy(v46, v57, v43);
    uint64_t v47 = sub_1AD31D850((unint64_t *)v46, v42, v34, v33, &v59);
    swift_release();
    sub_1AD1ECA9C();
    MEMORY[0x1B3E68450](v46, -1, -1);
    return v47;
  }
}

uint64_t sub_1AD31C764(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  sub_1AD3222A4(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AD73ACC0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (char *)&v49 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = ~v13;
  uint64_t v15 = a1 + 56;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & *(void *)(a1 + 56);
  uint64_t v60 = a1;
  uint64_t v61 = a1 + 56;
  uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v55 = v6;
  uint64_t v62 = v14;
  uint64_t v63 = 0;
  unint64_t v64 = v18;
  uint64_t v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v57 = v8 + 16;
  uint64_t v58 = (char *)(a2 + 56);
  uint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v56 = v8;
  uint64_t v52 = a2;
  uint64_t v50 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = (v18 - 1) & v18;
  unint64_t v22 = __clz(__rbit64(v18)) | (v20 << 6);
  int64_t v23 = v20;
LABEL_7:
  unint64_t v24 = *(void *)(a1 + 48) + *(void *)(v8 + 72) * v22;
  int64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v26 = (uint64_t)v55;
  v25(v55, v24, v7);
  uint64_t v27 = 0;
  while (1)
  {
    (*v54)(v26, v27, 1, v7);
    uint64_t v60 = a1;
    uint64_t v61 = v15;
    uint64_t v62 = v14;
    uint64_t v63 = v23;
    unint64_t v64 = v21;
    if ((*v53)(v26, 1, v7) == 1)
    {
      sub_1AD1ECA9C();
      sub_1AD3222D8(v26);
      return v52;
    }
    (*v51)(v59, v26, v7);
    uint64_t v31 = v52;
    sub_1AD3222F0((unint64_t *)&unk_1E9A2F270, MEMORY[0x1E4F670F8]);
    uint64_t v32 = sub_1AD73F0A0();
    uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v34 = v32 & ~v33;
    if ((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34)) {
      break;
    }
    uint64_t v40 = *v19;
    uint64_t v8 = v56;
LABEL_35:
    v40(v59, v7);
    int64_t v20 = v63;
    unint64_t v18 = v64;
    a1 = v60;
    uint64_t v15 = v61;
    uint64_t v14 = v62;
    uint64_t v50 = v63;
    if (v64) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      __break(1u);
    }
    int64_t v28 = (unint64_t)(v14 + 64) >> 6;
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v23);
    if (v29) {
      goto LABEL_11;
    }
    v20 += 2;
    if (v23 + 1 >= v28) {
      goto LABEL_37;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v20);
    if (v29) {
      goto LABEL_14;
    }
    if (v23 + 2 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * (v23 + 2));
    if (v29)
    {
      v23 += 2;
      goto LABEL_11;
    }
    int64_t v20 = v23 + 3;
    if (v23 + 3 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v20);
      if (v29)
      {
LABEL_14:
        int64_t v23 = v20;
LABEL_11:
        uint64_t v21 = (v29 - 1) & v29;
        unint64_t v22 = __clz(__rbit64(v29)) + (v23 << 6);
        goto LABEL_7;
      }
      v23 += 4;
      if (v23 >= v28)
      {
LABEL_26:
        uint64_t v21 = 0;
        uint64_t v27 = 1;
        int64_t v23 = v20;
        goto LABEL_27;
      }
      unint64_t v29 = *(void *)(v15 + 8 * v23);
      if (v29) {
        goto LABEL_11;
      }
      int64_t v23 = v28 - 1;
      uint64_t v30 = v50 + 6;
      while (v28 != v30)
      {
        unint64_t v29 = *(void *)(v15 + 8 * v30++);
        if (v29)
        {
          int64_t v23 = v30 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v21 = 0;
      uint64_t v27 = 1;
      goto LABEL_27;
    }
    uint64_t v21 = 0;
    uint64_t v27 = 1;
    v23 += 2;
LABEL_27:
    uint64_t v26 = (uint64_t)v55;
  }
  uint64_t v50 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v35 = v31;
  uint64_t v36 = ~v33;
  uint64_t v37 = *(void *)(v56 + 72);
  char v38 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
  while (1)
  {
    v38(v11, *(void *)(v35 + 48) + v37 * v34, v7);
    sub_1AD3222F0(&qword_1E9A2B730, MEMORY[0x1E4F670F8]);
    char v39 = sub_1AD73F150();
    uint64_t v40 = *v19;
    (*v19)(v11, v7);
    if (v39) {
      break;
    }
    unint64_t v34 = (v34 + 1) & v36;
    if (((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34) & 1) == 0)
    {
      uint64_t v8 = v56;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v40)(v59, v7);
  char v42 = *(unsigned char *)(v35 + 32);
  unint64_t v43 = (unint64_t)((1 << v42) + 63) >> 6;
  size_t v44 = 8 * v43;
  if ((v42 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0), v58, v44);
    uint64_t v45 = sub_1AD31DDD8((unint64_t *)((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0)), v43, v35, v34, &v60);
    swift_release();
    sub_1AD1ECA9C();
    return v45;
  }
  else
  {
    uint64_t v47 = (void *)swift_slowAlloc();
    memcpy(v47, v58, v44);
    uint64_t v48 = sub_1AD31DDD8((unint64_t *)v47, v43, v35, v34, &v60);
    swift_release();
    sub_1AD1ECA9C();
    MEMORY[0x1B3E68450](v47, -1, -1);
    return v48;
  }
}

uint64_t sub_1AD31CE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1AD740530();
    sub_1AD73B520();
    sub_1AD3222F0(&qword_1EB738430, MEMORY[0x1E4F674F8]);
    sub_1AD73F750();
    uint64_t v3 = v46;
    uint64_t v4 = v47;
    uint64_t v6 = v48;
    int64_t v5 = v49;
    unint64_t v7 = v50;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v4 = a1 + 56;
    uint64_t v6 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  uint64_t v43 = v6;
  int64_t v44 = v5;
  unint64_t v45 = v7;
  uint64_t v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        uint64_t v12 = (v7 - 1) & v7;
        unint64_t v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        uint64_t v14 = *(void **)(*(void *)(v3 + 48) + 8 * v13);
        id v15 = v14;
        goto LABEL_15;
      }
      int64_t v25 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        __break(1u);
      }
      int64_t v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        uint64_t v14 = 0;
        uint64_t v12 = 0;
        goto LABEL_15;
      }
      unint64_t v27 = *(void *)(v42 + 8 * v25);
      if (v27)
      {
LABEL_28:
        uint64_t v12 = (v27 - 1) & v27;
        unint64_t v13 = __clz(__rbit64(v27)) + (v25 << 6);
        int64_t v5 = v25;
        goto LABEL_14;
      }
      int64_t v28 = v5 + 2;
      if (v5 + 2 >= v26) {
        goto LABEL_44;
      }
      unint64_t v27 = *(void *)(v42 + 8 * v28);
      if (v27)
      {
LABEL_32:
        int64_t v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        unint64_t v27 = *(void *)(v42 + 8 * (v5 + 3));
        if (v27)
        {
          int64_t v25 = v5 + 3;
          goto LABEL_28;
        }
        int64_t v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          uint64_t v14 = 0;
          uint64_t v12 = 0;
          v5 += 3;
LABEL_15:
          int64_t v44 = v5;
          unint64_t v45 = v12;
          if (!v14) {
            goto LABEL_53;
          }
          goto LABEL_19;
        }
        unint64_t v27 = *(void *)(v42 + 8 * v28);
        if (v27) {
          goto LABEL_32;
        }
        int64_t v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          unint64_t v27 = *(void *)(v42 + 8 * v25);
          if (v27) {
            goto LABEL_28;
          }
          int64_t v25 = v26 - 1;
          int64_t v29 = v5 + 6;
          while (v26 != v29)
          {
            unint64_t v27 = *(void *)(v42 + 8 * v29++);
            if (v27)
            {
              int64_t v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          uint64_t v14 = 0;
          uint64_t v12 = 0;
          int64_t v5 = v25;
          goto LABEL_15;
        }
      }
      uint64_t v14 = 0;
      uint64_t v12 = 0;
      int64_t v5 = v28;
      goto LABEL_15;
    }
    uint64_t v16 = sub_1AD7405A0();
    if (!v16
      || (uint64_t v39 = v16,
          sub_1AD73B520(),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          uint64_t v14 = v40,
          swift_unknownObjectRelease(),
          !v40))
    {
LABEL_53:
      sub_1AD1ECA9C();
      return v2;
    }
LABEL_19:
    uint64_t v17 = sub_1AD740040();
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_10;
    }
    sub_1AD73B520();
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
    char v21 = sub_1AD740050();

    if (v21) {
      break;
    }
    uint64_t v22 = ~v18;
    while (1)
    {
      unint64_t v19 = (v19 + 1) & v22;
      if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        break;
      }
      id v23 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
      char v24 = sub_1AD740050();

      if (v24) {
        goto LABEL_47;
      }
    }
LABEL_10:

    uint64_t v3 = v41;
    uint64_t v6 = v43;
    int64_t v5 = v44;
    unint64_t v7 = v45;
  }
LABEL_47:

  char v31 = *(unsigned char *)(v2 + 32);
  unint64_t v32 = (unint64_t)((1 << v31) + 63) >> 6;
  size_t v33 = 8 * v32;
  if ((v31 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v33);
    sub_1AD31E350((unint64_t *)((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0)), v32, v2, v19, &v41);
    uint64_t v35 = v34;
    swift_release();
    sub_1AD1ECA9C();
  }
  else
  {
    uint64_t v36 = (void *)swift_slowAlloc();
    memcpy(v36, (const void *)(v2 + 56), v33);
    sub_1AD31E350((unint64_t *)v36, v32, v2, v19, &v41);
    uint64_t v35 = v37;
    swift_release();
    sub_1AD1ECA9C();
    MEMORY[0x1B3E68450](v36, -1, -1);
  }
  return v35;
}

uint64_t sub_1AD31D35C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (uint64_t (*)(void))MEMORY[0x1E4F675C8];
  return sub_1AD31D404(a1, a2, v2, (void (*)(void))sub_1AD32223C, (void (*)(uint64_t))sub_1AD322270, (uint64_t (*)(char *, unint64_t, uint64_t, unint64_t, uint64_t *))sub_1AD31E6AC);
}

uint64_t sub_1AD31D404(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void), void (*a5)(uint64_t), uint64_t (*a6)(char *, unint64_t, uint64_t, unint64_t, uint64_t *))
{
  uint64_t v42 = a5;
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = a3(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v45 = (char *)&v38 - v15;
  if (*(void *)(a2 + 16))
  {
    uint64_t v46 = a1;
    unint64_t v16 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    if (v16)
    {
      unint64_t v17 = 0;
      uint64_t v43 = v11 + 16;
      int64_t v44 = (char *)(a2 + 56);
      uint64_t v18 = (void (**)(char *, uint64_t))(v11 + 8);
      uint64_t v39 = a6;
      uint64_t v40 = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      char v38 = a4;
      uint64_t v41 = v11;
      while (1)
      {
        if (v17 >= v16) {
          __break(1u);
        }
        uint64_t v19 = *(void *)(v11 + 72);
        unint64_t v20 = a1
            + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
            + v19 * v17;
        unint64_t v47 = v17 + 1;
        char v21 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v11 + 16);
        uint64_t v22 = v21(v45, v20, v10);
        a4(v22);
        uint64_t v23 = sub_1AD73F0A0();
        uint64_t v24 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v25 = v23 & ~v24;
        if ((*(void *)&v44[(v25 >> 3) & 0xFFFFFFFFFFFFFF8] >> v25)) {
          break;
        }
        uint64_t v30 = *v18;
LABEL_11:
        v30(v45, v10);
        a1 = v46;
        unint64_t v17 = v47;
        unint64_t v16 = *(void *)(v46 + 16);
        uint64_t v11 = v41;
        if (v47 == v16) {
          goto LABEL_12;
        }
      }
      uint64_t v26 = a2;
      uint64_t v27 = ~v24;
      while (1)
      {
        uint64_t v28 = v21(v14, *(void *)(v26 + 48) + v25 * v19, v10);
        v42(v28);
        char v29 = sub_1AD73F150();
        uint64_t v30 = *v18;
        (*v18)(v14, v10);
        if (v29) {
          break;
        }
        unint64_t v25 = (v25 + 1) & v27;
        if (((*(void *)&v44[(v25 >> 3) & 0xFFFFFFFFFFFFFF8] >> v25) & 1) == 0)
        {
          a2 = v26;
          a4 = v38;
          goto LABEL_11;
        }
      }
      uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v30)(v45, v10);
      char v32 = *(unsigned char *)(v26 + 32);
      unint64_t v33 = (unint64_t)((1 << v32) + 63) >> 6;
      size_t v34 = 8 * v33;
      if ((v32 & 0x3Fu) <= 0xD
        || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
      {
        MEMORY[0x1F4188790](isStackAllocationSafe);
        memcpy((char *)&v38 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0), v44, v34);
        uint64_t v35 = v39((char *)&v38 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0), v33, v26, v25, &v46);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v36 = (void *)swift_slowAlloc();
        memcpy(v36, v44, v34);
        uint64_t v35 = v39((char *)v36, v33, v26, v25, &v46);
        swift_release();
        swift_bridgeObjectRelease();
        MEMORY[0x1B3E68450](v36, -1, -1);
      }
      return v35;
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  return a2;
}

uint64_t sub_1AD31D850(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v52 = a2;
  sub_1AD289A0C(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1AD73C730();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v13);
  uint64_t v65 = (char *)&v52 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v20 = *(unint64_t *)((char *)a1 + v19);
  uint64_t v54 = a1;
  uint64_t v55 = v11;
  *(unint64_t *)((char *)a1 + v19) = v20 & ((-1 << a4) - 1);
  uint64_t v22 = v21;
  uint64_t v23 = v18 - 1;
  uint64_t v63 = v21 + 16;
  uint64_t v64 = a3;
  uint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v56 = a5;
  uint64_t v57 = (void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v62 = a3 + 56;
  uint64_t v24 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v60 = v21;
  while (2)
  {
    uint64_t v53 = v23;
    do
    {
      while (1)
      {
        uint64_t v26 = *a5;
        uint64_t v27 = a5[1];
        uint64_t v29 = a5[2];
        int64_t v28 = a5[3];
        unint64_t v30 = a5[4];
        if (v30)
        {
          uint64_t v61 = (v30 - 1) & v30;
          unint64_t v31 = __clz(__rbit64(v30)) | (v28 << 6);
LABEL_7:
          unint64_t v32 = *(void *)(v26 + 48) + *(void *)(v22 + 72) * v31;
          unint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
          uint64_t v34 = v26;
          v33(v11, v32, v12);
          uint64_t v35 = 0;
          goto LABEL_8;
        }
        int64_t v44 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        int64_t v45 = (unint64_t)(v29 + 64) >> 6;
        if (v44 >= v45)
        {
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v44);
        if (v46) {
          goto LABEL_17;
        }
        int64_t v49 = v28 + 2;
        if (v28 + 2 >= v45) {
          goto LABEL_35;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v49);
        if (v46) {
          goto LABEL_23;
        }
        if (v28 + 3 >= v45) {
          goto LABEL_36;
        }
        unint64_t v46 = *(void *)(v27 + 8 * (v28 + 3));
        if (v46)
        {
          int64_t v44 = v28 + 3;
          goto LABEL_17;
        }
        int64_t v49 = v28 + 4;
        if (v28 + 4 < v45)
        {
          unint64_t v46 = *(void *)(v27 + 8 * v49);
          if (v46)
          {
LABEL_23:
            int64_t v44 = v49;
LABEL_17:
            uint64_t v61 = (v46 - 1) & v46;
            unint64_t v31 = __clz(__rbit64(v46)) + (v44 << 6);
            int64_t v28 = v44;
            goto LABEL_7;
          }
          int64_t v44 = v28 + 5;
          if (v28 + 5 < v45)
          {
            unint64_t v46 = *(void *)(v27 + 8 * v44);
            if (v46) {
              goto LABEL_17;
            }
            int64_t v44 = v45 - 1;
            int64_t v50 = v28 + 6;
            while (v45 != v50)
            {
              unint64_t v46 = *(void *)(v27 + 8 * v50++);
              if (v46)
              {
                int64_t v44 = v50 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            uint64_t v61 = 0;
            uint64_t v35 = 1;
            int64_t v28 = v44;
            uint64_t v34 = v26;
            goto LABEL_8;
          }
LABEL_36:
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          int64_t v28 = v49;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        uint64_t v61 = 0;
        uint64_t v35 = 1;
        v28 += 3;
        uint64_t v34 = v26;
LABEL_8:
        (*v59)(v11, v35, 1, v12);
        *a5 = v34;
        a5[1] = v27;
        a5[2] = v29;
        a5[3] = v28;
        a5[4] = v61;
        if ((*v58)(v11, 1, v12) == 1)
        {
          sub_1AD320C90((uint64_t)v11);
          uint64_t v51 = v64;
          swift_retain();
          return sub_1AD598228(v54, v52, v53, v51);
        }
        (*v57)(v65, v11, v12);
        uint64_t v36 = v64;
        sub_1AD320C28();
        uint64_t v37 = sub_1AD73F0A0();
        uint64_t v38 = -1 << *(unsigned char *)(v36 + 32);
        unint64_t v39 = v37 & ~v38;
        if ((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39)) {
          break;
        }
        unint64_t v25 = *v24;
        uint64_t v22 = v60;
LABEL_4:
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      }
      uint64_t v61 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v40 = ~v38;
      uint64_t v41 = *(void *)(v60 + 72);
      uint64_t v42 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
      while (1)
      {
        v42(v15, *(void *)(v64 + 48) + v41 * v39, v12);
        sub_1AD320C5C();
        char v43 = sub_1AD73F150();
        unint64_t v25 = *v24;
        (*v24)(v15, v12);
        if (v43) {
          break;
        }
        unint64_t v39 = (v39 + 1) & v40;
        if (((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
        {
          uint64_t v11 = v55;
          a5 = v56;
          uint64_t v22 = v60;
          goto LABEL_4;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      uint64_t v47 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v11 = v55;
      uint64_t v48 = *(unint64_t *)((char *)v54 + v47);
      *(unint64_t *)((char *)v54 + v47) = v48 & ~(1 << v39);
      a5 = v56;
      uint64_t v22 = v60;
    }
    while ((v48 & (1 << v39)) == 0);
    uint64_t v23 = v53 - 1;
    if (__OFSUB__(v53, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v53 != 1) {
      continue;
    }
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_1AD31DD68(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  return sub_1AD31E71C(a1, a2, a3, a4, a5, MEMORY[0x1E4F66840], (void (*)(uint64_t))sub_1AD320C28, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD598228, (void (*)(uint64_t))sub_1AD320C5C);
}

uint64_t sub_1AD31DDD8(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v52 = a2;
  sub_1AD3222A4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1AD73ACC0();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v13);
  uint64_t v65 = (char *)&v52 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v20 = *(unint64_t *)((char *)a1 + v19);
  uint64_t v54 = a1;
  uint64_t v55 = v11;
  *(unint64_t *)((char *)a1 + v19) = v20 & ((-1 << a4) - 1);
  uint64_t v22 = v21;
  uint64_t v23 = v18 - 1;
  uint64_t v63 = v21 + 16;
  uint64_t v64 = a3;
  uint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v56 = a5;
  uint64_t v57 = (void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v62 = a3 + 56;
  uint64_t v24 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v60 = v21;
  while (2)
  {
    uint64_t v53 = v23;
    do
    {
      while (1)
      {
        uint64_t v26 = *a5;
        uint64_t v27 = a5[1];
        uint64_t v29 = a5[2];
        int64_t v28 = a5[3];
        unint64_t v30 = a5[4];
        if (v30)
        {
          uint64_t v61 = (v30 - 1) & v30;
          unint64_t v31 = __clz(__rbit64(v30)) | (v28 << 6);
LABEL_7:
          unint64_t v32 = *(void *)(v26 + 48) + *(void *)(v22 + 72) * v31;
          unint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
          uint64_t v34 = v26;
          v33(v11, v32, v12);
          uint64_t v35 = 0;
          goto LABEL_8;
        }
        int64_t v44 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        int64_t v45 = (unint64_t)(v29 + 64) >> 6;
        if (v44 >= v45)
        {
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v44);
        if (v46) {
          goto LABEL_17;
        }
        int64_t v49 = v28 + 2;
        if (v28 + 2 >= v45) {
          goto LABEL_35;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v49);
        if (v46) {
          goto LABEL_23;
        }
        if (v28 + 3 >= v45) {
          goto LABEL_36;
        }
        unint64_t v46 = *(void *)(v27 + 8 * (v28 + 3));
        if (v46)
        {
          int64_t v44 = v28 + 3;
          goto LABEL_17;
        }
        int64_t v49 = v28 + 4;
        if (v28 + 4 < v45)
        {
          unint64_t v46 = *(void *)(v27 + 8 * v49);
          if (v46)
          {
LABEL_23:
            int64_t v44 = v49;
LABEL_17:
            uint64_t v61 = (v46 - 1) & v46;
            unint64_t v31 = __clz(__rbit64(v46)) + (v44 << 6);
            int64_t v28 = v44;
            goto LABEL_7;
          }
          int64_t v44 = v28 + 5;
          if (v28 + 5 < v45)
          {
            unint64_t v46 = *(void *)(v27 + 8 * v44);
            if (v46) {
              goto LABEL_17;
            }
            int64_t v44 = v45 - 1;
            int64_t v50 = v28 + 6;
            while (v45 != v50)
            {
              unint64_t v46 = *(void *)(v27 + 8 * v50++);
              if (v46)
              {
                int64_t v44 = v50 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            uint64_t v61 = 0;
            uint64_t v35 = 1;
            int64_t v28 = v44;
            uint64_t v34 = v26;
            goto LABEL_8;
          }
LABEL_36:
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          int64_t v28 = v49;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        uint64_t v61 = 0;
        uint64_t v35 = 1;
        v28 += 3;
        uint64_t v34 = v26;
LABEL_8:
        (*v59)(v11, v35, 1, v12);
        *a5 = v34;
        a5[1] = v27;
        a5[2] = v29;
        a5[3] = v28;
        a5[4] = v61;
        if ((*v58)(v11, 1, v12) == 1)
        {
          sub_1AD3222D8((uint64_t)v11);
          uint64_t v51 = v64;
          swift_retain();
          return sub_1AD5985B0(v54, v52, v53, v51);
        }
        (*v57)(v65, v11, v12);
        uint64_t v36 = v64;
        sub_1AD3222F0((unint64_t *)&unk_1E9A2F270, MEMORY[0x1E4F670F8]);
        uint64_t v37 = sub_1AD73F0A0();
        uint64_t v38 = -1 << *(unsigned char *)(v36 + 32);
        unint64_t v39 = v37 & ~v38;
        if ((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39)) {
          break;
        }
        unint64_t v25 = *v24;
        uint64_t v22 = v60;
LABEL_4:
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      }
      uint64_t v61 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v40 = ~v38;
      uint64_t v41 = *(void *)(v60 + 72);
      uint64_t v42 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
      while (1)
      {
        v42(v15, *(void *)(v64 + 48) + v41 * v39, v12);
        sub_1AD3222F0(&qword_1E9A2B730, MEMORY[0x1E4F670F8]);
        char v43 = sub_1AD73F150();
        unint64_t v25 = *v24;
        (*v24)(v15, v12);
        if (v43) {
          break;
        }
        unint64_t v39 = (v39 + 1) & v40;
        if (((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
        {
          uint64_t v11 = v55;
          a5 = v56;
          uint64_t v22 = v60;
          goto LABEL_4;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      uint64_t v47 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v11 = v55;
      uint64_t v48 = *(unint64_t *)((char *)v54 + v47);
      *(unint64_t *)((char *)v54 + v47) = v48 & ~(1 << v39);
      a5 = v56;
      uint64_t v22 = v60;
    }
    while ((v48 & (1 << v39)) == 0);
    uint64_t v23 = v53 - 1;
    if (__OFSUB__(v53, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v53 != 1) {
      continue;
    }
    return MEMORY[0x1E4FBC870];
  }
}

void sub_1AD31E350(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  int64_t v5 = a5;
  uint64_t v7 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v38 = a3 + 56;
  while (2)
  {
    uint64_t v35 = v8;
    do
    {
      while (1)
      {
        if ((*v5 & 0x8000000000000000) == 0)
        {
          int64_t v10 = v5[3];
          unint64_t v9 = v5[4];
          if (v9)
          {
            uint64_t v11 = (v9 - 1) & v9;
            unint64_t v12 = __clz(__rbit64(v9)) | (v10 << 6);
LABEL_7:
            uint64_t v13 = *(void **)(*(void *)(*v5 + 48) + 8 * v12);
            id v14 = v13;
            goto LABEL_8;
          }
          int64_t v27 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
            __break(1u);
            goto LABEL_47;
          }
          int64_t v28 = (unint64_t)(v5[2] + 64) >> 6;
          if (v27 >= v28)
          {
            uint64_t v13 = 0;
            uint64_t v11 = 0;
            goto LABEL_8;
          }
          uint64_t v29 = v5[1];
          unint64_t v30 = *(void *)(v29 + 8 * v27);
          if (v30)
          {
LABEL_22:
            uint64_t v11 = (v30 - 1) & v30;
            unint64_t v12 = __clz(__rbit64(v30)) + (v27 << 6);
            int64_t v10 = v27;
            goto LABEL_7;
          }
          if (v10 + 2 < v28)
          {
            unint64_t v30 = *(void *)(v29 + 8 * (v10 + 2));
            if (v30)
            {
              int64_t v27 = v10 + 2;
              goto LABEL_22;
            }
            if (v10 + 3 >= v28)
            {
              uint64_t v13 = 0;
              uint64_t v11 = 0;
              v10 += 2;
              goto LABEL_8;
            }
            unint64_t v30 = *(void *)(v29 + 8 * (v10 + 3));
            if (v30)
            {
              int64_t v27 = v10 + 3;
              goto LABEL_22;
            }
            int64_t v27 = v10 + 4;
            if (v10 + 4 >= v28)
            {
              uint64_t v13 = 0;
              uint64_t v11 = 0;
              v10 += 3;
LABEL_8:
              v5[3] = v10;
              v5[4] = v11;
              if (!v13) {
                goto LABEL_45;
              }
              goto LABEL_12;
            }
            unint64_t v30 = *(void *)(v29 + 8 * v27);
            if (v30) {
              goto LABEL_22;
            }
            int64_t v27 = v28 - 1;
            int64_t v33 = v10 + 5;
            while (v28 != v33)
            {
              unint64_t v30 = *(void *)(v29 + 8 * v33++);
              if (v30)
              {
                int64_t v27 = v33 - 1;
                goto LABEL_22;
              }
            }
          }
          uint64_t v13 = 0;
          uint64_t v11 = 0;
          int64_t v10 = v27;
          goto LABEL_8;
        }
        if (!sub_1AD7405A0()
          || (sub_1AD73B520(),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              uint64_t v13 = v39,
              swift_unknownObjectRelease(),
              !v39))
        {
LABEL_45:
          swift_retain();
          sub_1AD598B94(a1, a2, v35, a3);
          return;
        }
LABEL_12:
        uint64_t v15 = sub_1AD740040();
        uint64_t v16 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v17 = v15 & ~v16;
        unint64_t v18 = v17 >> 6;
        uint64_t v19 = 1 << v17;
        if (((1 << v17) & *(void *)(v38 + 8 * (v17 >> 6))) == 0) {
          goto LABEL_3;
        }
        sub_1AD73B520();
        id v20 = *(id *)(*(void *)(a3 + 48) + 8 * v17);
        char v21 = sub_1AD740050();

        if (v21) {
          break;
        }
        uint64_t v22 = ~v16;
        for (unint64_t i = v17 + 1; ; unint64_t i = v24 + 1)
        {
          unint64_t v24 = i & v22;
          if (((*(void *)(v38 + (((i & v22) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v22)) & 1) == 0) {
            break;
          }
          id v25 = *(id *)(*(void *)(a3 + 48) + 8 * v24);
          char v26 = sub_1AD740050();

          if (v26)
          {

            unint64_t v18 = v24 >> 6;
            uint64_t v19 = 1 << v24;
            goto LABEL_25;
          }
        }
LABEL_3:

        int64_t v5 = a5;
      }

LABEL_25:
      unint64_t v31 = a1[v18];
      a1[v18] = v31 & ~v19;
      BOOL v32 = (v19 & v31) == 0;
      int64_t v5 = a5;
    }
    while (v32);
    uint64_t v8 = v35 - 1;
    if (__OFSUB__(v35, 1))
    {
LABEL_47:
      __break(1u);
      return;
    }
    if (v35 != 1) {
      continue;
    }
    break;
  }
}

uint64_t sub_1AD31E6AC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  return sub_1AD31E71C(a1, a2, a3, a4, a5, MEMORY[0x1E4F675C8], (void (*)(uint64_t))sub_1AD32223C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD598E28, (void (*)(uint64_t))sub_1AD322270);
}

uint64_t sub_1AD31E71C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t (*a6)(void), void (*a7)(uint64_t), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a9)(uint64_t))
{
  uint64_t v49 = a2;
  int64_t v50 = a8;
  uint64_t v53 = a7;
  uint64_t v13 = a6(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  id v20 = (char *)&v49 - v19;
  uint64_t result = MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v49 - v22;
  uint64_t v24 = *(void *)(a3 + 16);
  uint64_t v25 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v26 = *(void *)(a1 + v25);
  uint64_t v51 = a1;
  *(void *)(a1 + v25) = v26 & ((-1 << a4) - 1);
  uint64_t v27 = v24 - 1;
  uint64_t v28 = *a5;
  unint64_t v29 = a5[1];
  unint64_t v30 = *(void *)(*a5 + 16);
  uint64_t v52 = v27;
  uint64_t v59 = a3;
  if (v29 == v30)
  {
LABEL_2:
    uint64_t v31 = v59;
    swift_retain();
    return v50(v51, v49, v52, v31);
  }
  uint64_t v64 = v23;
  uint64_t v63 = v14 + 16;
  uint64_t v57 = a5;
  uint64_t v58 = v14 + 32;
  uint64_t v60 = a9;
  uint64_t v61 = a3 + 56;
  BOOL v32 = (void (**)(char *, uint64_t))(v14 + 8);
  int64_t v33 = v53;
  uint64_t v55 = v20;
  uint64_t v56 = v14;
  while (v29 < v30)
  {
    uint64_t v35 = *(unsigned __int8 *)(v14 + 80);
    uint64_t v62 = *(void *)(v14 + 72);
    uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
    v36(v20, v28 + ((v35 + 32) & ~v35) + v62 * v29, v13);
    a5[1] = v29 + 1;
    uint64_t v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v64, v20, v13);
    uint64_t v38 = v59;
    v33(v37);
    uint64_t v39 = sub_1AD73F0A0();
    uint64_t v40 = -1 << *(unsigned char *)(v38 + 32);
    unint64_t v41 = v39 & ~v40;
    if (((*(void *)(v61 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41) & 1) == 0)
    {
      uint64_t v34 = *v32;
LABEL_6:
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v34)(v64, v13);
      goto LABEL_7;
    }
    uint64_t v54 = (unint64_t)v32 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v42 = v38;
    uint64_t v43 = ~v40;
    while (1)
    {
      uint64_t v44 = ((uint64_t (*)(char *, unint64_t, uint64_t))v36)(v17, *(void *)(v42 + 48) + v41 * v62, v13);
      v60(v44);
      char v45 = sub_1AD73F150();
      uint64_t v34 = *v32;
      (*v32)(v17, v13);
      if (v45) {
        break;
      }
      unint64_t v41 = (v41 + 1) & v43;
      if (((*(void *)(v61 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41) & 1) == 0)
      {
        int64_t v33 = v53;
        goto LABEL_6;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v34)(v64, v13);
    uint64_t v46 = (v41 >> 3) & 0x1FFFFFFFFFFFFFF8;
    uint64_t v47 = *(void *)(v51 + v46);
    *(void *)(v51 + v46) = v47 & ~(1 << v41);
    if ((v47 & (1 << v41)) == 0)
    {
      int64_t v33 = v53;
LABEL_7:
      uint64_t v14 = v56;
      a5 = v57;
      id v20 = v55;
      goto LABEL_8;
    }
    uint64_t v48 = v52 - 1;
    uint64_t v14 = v56;
    a5 = v57;
    id v20 = v55;
    if (__OFSUB__(v52, 1)) {
      goto LABEL_21;
    }
    int64_t v33 = v53;
    --v52;
    if (!v48) {
      return MEMORY[0x1E4FBC870];
    }
LABEL_8:
    uint64_t v28 = *a5;
    unint64_t v29 = a5[1];
    unint64_t v30 = *(void *)(*a5 + 16);
    if (v29 == v30) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1AD31EAD0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AD314AB0(*a1);
  *a2 = result;
  return result;
}

char *sub_1AD31EAFC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v123 = a2;
  sub_1AD20E2C8();
  uint64_t v120 = v7;
  v127 = *(char **)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  v113 = (char *)v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  *(void *)&long long v128 = (char *)v112 - v10;
  uint64_t v11 = sub_1AD73C130();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  v126 = (char *)v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD322164(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v119 = (uint64_t)v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SummarySharingRelationshipManagementContext(0);
  uint64_t v17 = v16 - 8;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v125 = (uint64_t)v112 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  v121 = (char *)v112 - v20;
  *(void *)&v3[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_navigationBarTitleView] = 0;
  v3[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_pausedStateChanged] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController____lazy_storage___doneButtonItem] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController____lazy_storage___activitySpinnerItem] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_updateAuthorizationsCancellable] = 0;
  char v21 = (void *)MEMORY[0x1E4FBC860];
  *(void *)&v3[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_cancellables] = MEMORY[0x1E4FBC860];
  *(void *)&v3[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_currentAuthorizations] = MEMORY[0x1E4FBC870];
  *(void *)&v3[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_healthStore] = a3;
  sub_1AD1FFE38(a2, (uint64_t)&v3[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_healthExperienceStore]);
  uint64_t v114 = v12;
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v124 = a1;
  uint64_t v122 = v11;
  v22(&v3[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_sharingProfileInformation], a1, v11);
  id v23 = objc_allocWithZone(MEMORY[0x1E4F2B5E0]);
  uint64_t v24 = v3;
  v118 = a3;
  id v25 = objc_msgSend(v23, sel_initWithHealthStore_, v118);
  *(void *)&v24[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_sharingEntryStore] = v25;
  uint64_t v26 = (uint64_t)v121;
  v22(v121, a1, v11);
  *(void *)(v26 + *(int *)(v17 + 28)) = v25;
  uint64_t v27 = (uint64_t)&v24[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_flow];
  sub_1AD322338(v26, (uint64_t)&v24[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_flow], type metadata accessor for SummarySharingRelationshipManagementContext);
  uint64_t v28 = type metadata accessor for SummarySharingSelectionFlow(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = v119;
  sub_1AD322338(v27, v119, type metadata accessor for SummarySharingSelectionFlow);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v29, 0, 1, v28);
  type metadata accessor for SummarySharingSelectedDataTypesContext();
  swift_allocObject();
  id v30 = v25;
  *(void *)&v24[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_selectedDataTypesContext] = SummarySharingSelectedDataTypesContext.init(selectedItems:selectionFlow:)((uint64_t)v21, v29);
  uint64_t v31 = (uint64_t)v126;
  v22(v126, v124, v122);
  uint64_t v32 = v125;
  sub_1AD322338(v26, v125, type metadata accessor for SummarySharingRelationshipManagementContext);
  sub_1AD1FFE38(v123, (uint64_t)&v131);
  type metadata accessor for SummarySharingRelationshipDetailsDataSource();
  swift_allocObject();
  int64_t v33 = v118;
  uint64_t v34 = sub_1AD6B2644(v31, v32, &v131, v33);

  uint64_t v35 = OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_relationshipDetailsDataSource;
  *(void *)&v24[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_relationshipDetailsDataSource] = v34;

  uint64_t v36 = *(void *)&v24[v35];
  uint64_t v37 = &v24[OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController_dataSourceProvider];
  *((void *)v37 + 4) = 0;
  *(_OWORD *)uint64_t v37 = 0u;
  *((_OWORD *)v37 + 1) = 0u;
  v24[OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController_usesAdaptiveMargins] = 1;
  *(void *)&v24[OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController____lazy_storage___dataSource] = 0;
  *(void *)&v24[OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController_dataSourceAdaptor] = 0;
  id v38 = objc_allocWithZone(MEMORY[0x1E4FB15C0]);
  swift_retain();
  id v39 = objc_msgSend(v38, sel_init);
  uint64_t v40 = (objc_class *)type metadata accessor for CompoundDataSourceCollectionViewController();
  v130.receiver = v24;
  v130.super_class = v40;
  unint64_t v41 = (char *)objc_msgSendSuper2(&v130, sel_initWithCollectionViewLayout_, v39);

  *(void *)&v41[OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController____lazy_storage___dataSource] = v36;
  swift_release();
  uint64_t v42 = &v41[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_selectedDataTypesContext];
  swift_beginAccess();
  uint64_t v129 = *(void *)(*(void *)v42 + 48);
  uint64_t v43 = MEMORY[0x1E4FBC848] + 8;
  sub_1AD322468(0, (unint64_t *)&qword_1E9A2C3C0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AB88]);
  sub_1AD3223A0();
  uint64_t v44 = v41;
  uint64_t v129 = sub_1AD73DC70();
  uint64_t v45 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = sub_1AD322420;
  *(void *)(v46 + 24) = v45;
  sub_1AD322468(0, &qword_1E9A2C3D0, v43, MEMORY[0x1E4F1AAE0]);
  sub_1AD3224CC(&qword_1E9A2C3D8, &qword_1E9A2C3D0, v43);
  sub_1AD73DE20();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1AD1C6948(0, (unint64_t *)&qword_1EB732EA0, MEMORY[0x1E4F1AB18], MEMORY[0x1E4FBB320]);
  sub_1AD322530();
  sub_1AD73DA10();
  swift_endAccess();
  swift_release();
  uint64_t v125 = OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_relationshipDetailsDataSource;
  uint64_t v47 = *(void *)(*(void *)&v44[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_relationshipDetailsDataSource]
                  + OBJC_IVAR____TtC18HealthExperienceUI43SummarySharingRelationshipDetailsDataSource_alertsDataSource);
  *(void *)(*(void *)(v47 + qword_1E9A2E150)
            + OBJC_IVAR____TtCC18HealthExperienceUI39SummarySharingAlertsSelectionDataSourceP33_DBCA476D2670707FCCF6662511BF365A13Configuration_selectedDataTypesDelegate
            + 8) = &off_1F0424970;
  swift_unknownObjectWeakAssign();
  uint64_t v48 = *(void *)(v47 + qword_1EB751E80);
  uint64_t v49 = type metadata accessor for SummarySharingSelectionContextDelegate();
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v50 + 24) = &off_1F0424970;
  swift_unknownObjectWeakAssign();
  uint64_t v51 = (uint64_t *)(v48 + *(void *)(*(void *)v48 + 520));
  swift_beginAccess();
  *uint64_t v51 = v50;
  v126 = v44;
  v117 = v44;
  uint64_t v115 = v47;
  swift_retain();
  v112[4] = v50;
  swift_retain();
  swift_release();
  uint64_t v52 = v48 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  uint64_t v53 = v127;
  uint64_t v54 = v127 + 16;
  uint64_t v55 = v128;
  uint64_t v56 = v52;
  uint64_t v57 = v120;
  v118 = (uint64_t *)*((void *)v127 + 2);
  ((void (*)(void, uint64_t, uint64_t))v118)(v128, v56, v120);
  uint64_t v58 = sub_1AD73D260();
  uint64_t v59 = (void (*)(uint64_t, uint64_t))*((void *)v53 + 1);
  v127 = v53 + 8;
  v59(v55, v57);
  uint64_t v60 = *(void *)(v58 + 16);
  uint64_t v119 = v49;
  v116 = (void (*)(char *, uint64_t))v59;
  if (v60)
  {
    v112[3] = v54;
    uint64_t v61 = (uint64_t *)(v48 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_sections);
    v112[2] = v48;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v112[1] = v58;
    uint64_t v62 = (uint64_t *)(v58 + 40);
    do
    {
      uint64_t v63 = *v61;
      if (*(void *)(*v61 + 16))
      {
        uint64_t v65 = *(v62 - 1);
        uint64_t v64 = *v62;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        unint64_t v66 = sub_1AD20F694(v65, v64);
        if (v67)
        {
          uint64_t v68 = *(void *)(v63 + 56) + 48 * v66;
          uint64_t v69 = *(void *)v68;
          uint64_t v70 = *(void *)(v68 + 8);
          long long v128 = *(_OWORD *)(v68 + 16);
          uint64_t v71 = *(void *)(v68 + 32);
          uint64_t v72 = *(void *)(v68 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v21 = sub_1AD1FDAC8(0, v21[2] + 1, 1, v21);
          }
          unint64_t v74 = v21[2];
          unint64_t v73 = v21[3];
          if (v74 >= v73 >> 1) {
            char v21 = sub_1AD1FDAC8((void *)(v73 > 1), v74 + 1, 1, v21);
          }
          v21[2] = v74 + 1;
          unint64_t v75 = &v21[6 * v74];
          v75[4] = v69;
          v75[5] = v70;
          *((_OWORD *)v75 + 3) = v128;
          v75[8] = v71;
          v75[9] = v72;
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
      }
      v62 += 2;
      --v60;
    }
    while (v60);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v76 = v120;
    uint64_t v77 = v113;
  }
  else
  {
    uint64_t v76 = v120;
    uint64_t v77 = v113;
  }
  swift_bridgeObjectRelease();
  sub_1AD387158((uint64_t)v21, 1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1AD4114F4();
  swift_release();
  uint64_t v78 = v117;

  uint64_t v79 = *(void *)(*(void *)&v126[v125]
                  + OBJC_IVAR____TtC18HealthExperienceUI43SummarySharingRelationshipDetailsDataSource_topicsDataSource);
  *(void *)(*(void *)(v79 + qword_1E9A314F8)
            + OBJC_IVAR____TtCC18HealthExperienceUI41SummarySharingDataTypeSelectionDataSourceP33_90A4BE97C9AD775CAB10EB5F12011C5813Configuration_selectedDataTypesDelegate
            + 8) = &off_1F0424970;
  swift_unknownObjectWeakAssign();
  uint64_t v80 = *(void *)(v79 + qword_1EB751E80);
  uint64_t v81 = (char *)swift_allocObject();
  *((void *)v81 + 3) = 0;
  swift_unknownObjectWeakInit();
  *((void *)v81 + 3) = &off_1F0424970;
  swift_unknownObjectWeakAssign();
  uint64_t v82 = (char **)(v80 + *(void *)(*(void *)v80 + 520));
  swift_beginAccess();
  *uint64_t v82 = v81;
  uint64_t v83 = v78;
  uint64_t v84 = v80;
  uint64_t v85 = v83;
  uint64_t v119 = v79;
  swift_retain();
  v117 = v81;
  swift_retain();
  swift_release();
  uint64_t v86 = v84 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  ((void (*)(char *, uint64_t, uint64_t))v118)(v77, v86, v76);
  uint64_t v87 = (uint64_t *)sub_1AD73D260();
  v116(v77, v76);
  uint64_t v88 = v87[2];
  if (v88)
  {
    v127 = v85;
    uint64_t v89 = v84;
    id v90 = (uint64_t *)(v84 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_sections);
    uint64_t v120 = v89;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v118 = v87;
    long long v91 = v87 + 5;
    v92 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v93 = *v90;
      if (*(void *)(*v90 + 16))
      {
        uint64_t v95 = *(v91 - 1);
        uint64_t v94 = *v91;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        unint64_t v96 = sub_1AD20F694(v95, v94);
        if (v97)
        {
          uint64_t v98 = *(void *)(v93 + 56) + 48 * v96;
          uint64_t v100 = *(void *)v98;
          uint64_t v99 = *(void *)(v98 + 8);
          long long v128 = *(_OWORD *)(v98 + 16);
          uint64_t v101 = *(void *)(v98 + 32);
          uint64_t v102 = *(void *)(v98 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v92 = sub_1AD1FDAC8(0, v92[2] + 1, 1, v92);
          }
          unint64_t v104 = v92[2];
          unint64_t v103 = v92[3];
          if (v104 >= v103 >> 1) {
            v92 = sub_1AD1FDAC8((void *)(v103 > 1), v104 + 1, 1, v92);
          }
          v92[2] = v104 + 1;
          v105 = &v92[6 * v104];
          v105[4] = v100;
          v105[5] = v99;
          *((_OWORD *)v105 + 3) = v128;
          v105[8] = v101;
          v105[9] = v102;
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
      }
      v91 += 2;
      --v88;
    }
    while (v88);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v106 = v124;
    uint64_t v107 = v123;
    uint64_t v108 = v122;
    uint64_t v109 = v114;
    uint64_t v110 = (uint64_t)v121;
    uint64_t v85 = v127;
  }
  else
  {
    v92 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v106 = v124;
    uint64_t v107 = v123;
    uint64_t v108 = v122;
    uint64_t v109 = v114;
    uint64_t v110 = (uint64_t)v121;
  }
  swift_bridgeObjectRelease();
  sub_1AD387158((uint64_t)v92, 1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1AD591540();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v107);
  (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v106, v108);
  sub_1AD31BD28(v110, type metadata accessor for SummarySharingRelationshipManagementContext);
  *(void *)(*(void *)(*(void *)(*(void *)&v126[v125]
                                    + OBJC_IVAR____TtC18HealthExperienceUI43SummarySharingRelationshipDetailsDataSource_previewDataSource)
                        + OBJC_IVAR____TtC18HealthExperienceUI37SummarySharingPreviewButtonDataSource_previewItem)
            + 152) = &off_1F0424940;
  swift_unknownObjectWeakAssign();
  return v85;
}

uint64_t sub_1AD31FAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v61 = a2;
  uint64_t v3 = sub_1AD73C730();
  uint64_t v59 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v50 - v7;
  uint64_t v9 = sub_1AD73CBA0();
  uint64_t v60 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v50 - v13;
  sub_1AD6B12A8();
  uint64_t v15 = v61;
  uint64_t v16 = v62;
  uint64_t v17 = sub_1AD73C860();
  uint64_t v62 = v16;
  if (v16)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = (void *)v17;
    uint64_t v56 = (uint64_t)v6;
    uint64_t v58 = (void (*)(void, void, void))v14;
    uint64_t v61 = v9;
    swift_bridgeObjectRelease();
    if (sub_1AD458B48(v19))
    {
      uint64_t v21 = v20;
      id v57 = v19;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(a1, ObjectType, v21);
      if (v24)
      {
        uint64_t v25 = v23;
        unint64_t v26 = v24;
        uint64_t v27 = v58;
        sub_1AD73CA80();
        swift_bridgeObjectRetain_n();
        uint64_t v28 = sub_1AD73CB80();
        os_log_type_t v29 = sub_1AD73F940();
        if (os_log_type_enabled(v28, v29))
        {
          uint64_t v30 = swift_slowAlloc();
          uint64_t v59 = v25;
          uint64_t v31 = v30;
          uint64_t v56 = swift_slowAlloc();
          uint64_t v64 = v56;
          *(_DWORD *)uint64_t v31 = 136315394;
          uint64_t v63 = sub_1AD1F62D4(0xD00000000000002FLL, 0x80000001AD751D00, &v64);
          sub_1AD7403B0();
          *(_WORD *)(v31 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v63 = sub_1AD1F62D4(v59, v26, &v64);
          sub_1AD7403B0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1AD1A4000, v28, v29, "[%s] Fetched feed item identifier: %s", (uint8_t *)v31, 0x16u);
          uint64_t v32 = v56;
          swift_arrayDestroy();
          MEMORY[0x1B3E68450](v32, -1, -1);
          MEMORY[0x1B3E68450](v31, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        (*(void (**)(void (*)(void, void, void), uint64_t))(v60 + 8))(v27, v61);
        sub_1AD73B520();
        uint64_t v15 = sub_1AD73B420();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v33 = a1;
        uint64_t v34 = v12;
        sub_1AD73CA80();
        uint64_t v35 = v59;
        uint64_t v36 = v8;
        uint64_t v37 = v3;
        uint64_t v58 = *(void (**)(void, void, void))(v59 + 16);
        v58(v8, v33, v3);
        id v38 = sub_1AD73CB80();
        os_log_type_t v39 = sub_1AD73F920();
        int v40 = v39;
        BOOL v41 = os_log_type_enabled(v38, v39);
        uint64_t v42 = v60;
        if (v41)
        {
          uint64_t v43 = swift_slowAlloc();
          uint64_t v52 = v36;
          uint64_t v44 = v43;
          uint64_t v54 = swift_slowAlloc();
          uint64_t v64 = v54;
          *(_DWORD *)uint64_t v44 = 136315394;
          uint64_t v55 = v34;
          uint64_t v63 = sub_1AD1F62D4(0xD00000000000002FLL, 0x80000001AD751D00, &v64);
          int v53 = v40;
          sub_1AD7403B0();
          *(_WORD *)(v44 + 12) = 2080;
          uint64_t v50 = v44 + 14;
          os_log_t v51 = v38;
          uint64_t v45 = v52;
          v58(v56, v52, v37);
          uint64_t v46 = sub_1AD73F220();
          uint64_t v63 = sub_1AD1F62D4(v46, v47, &v64);
          sub_1AD7403B0();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v35 + 8))(v45, v37);
          os_log_t v48 = v51;
          _os_log_impl(&dword_1AD1A4000, v51, (os_log_type_t)v53, "[%s] Did not receive a feed item identifier for auth identifier: %s", (uint8_t *)v44, 0x16u);
          uint64_t v49 = v54;
          swift_arrayDestroy();
          MEMORY[0x1B3E68450](v49, -1, -1);
          MEMORY[0x1B3E68450](v44, -1, -1);
          swift_unknownObjectRelease();

          (*(void (**)(char *, uint64_t))(v42 + 8))(v55, v61);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v61);
        }
        return 0;
      }
    }
    else
    {

      return 0;
    }
  }
  return v15;
}

uint64_t sub_1AD320100(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AD73C730();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v19 = a2;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v13 = v14;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v16 = *(void *)(v12 + 56);
    do
    {
      v13(v8, v15, v4);
      sub_1AD379FC4((uint64_t)v10, v8);
      (*(void (**)(char *, uint64_t))(v12 - 8))(v10, v4);
      v15 += v16;
      --v11;
    }
    while (v11);
    return v19;
  }
  return a2;
}

void sub_1AD320260()
{
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_navigationBarTitleView] = 0;
  v0[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_pausedStateChanged] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController____lazy_storage___doneButtonItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController____lazy_storage___activitySpinnerItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_updateAuthorizationsCancellable] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_cancellables] = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI47SummarySharingRelationshipDetailsViewController_currentAuthorizations] = MEMORY[0x1E4FBC870];

  sub_1AD7408B0();
  __break(1u);
}

uint64_t sub_1AD320324(char a1)
{
  sub_1AD3210E8(0, &qword_1EB732E08, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC08]);
  id v29 = *(id *)(v2 - 8);
  uint64_t v30 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v29 - v3;
  uint64_t v5 = sub_1AD73CBA0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD320914();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD3209D0();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v30 = v16;
    id v19 = objc_allocWithZone((Class)sub_1AD73C210());
    id v29 = (id)sub_1AD73C200();
    uint64_t v32 = sub_1AD73C1F0();
    *(unsigned char *)(swift_allocObject() + 16) = 1;
    uint64_t v20 = (uint64_t (*)(uint64_t, void, uint64_t, void))MEMORY[0x1E4F1AC28];
    sub_1AD31BB04(0, &qword_1E9A2C248, MEMORY[0x1E4F1AC28]);
    sub_1AD31B928((unint64_t *)&qword_1E9A2C250, &qword_1E9A2C248, v20);
    uint64_t v21 = MEMORY[0x1E4FBB390];
    sub_1AD73DCC0();
    swift_release();
    swift_release();
    *(unsigned char *)(swift_allocObject() + 16) = 1;
    sub_1AD322468(0, (unint64_t *)&qword_1EB731FB8, v21, MEMORY[0x1E4F1AAE0]);
    sub_1AD3222F0(&qword_1E9A2C270, (void (*)(uint64_t))sub_1AD320914);
    sub_1AD3224CC((unint64_t *)&unk_1EB732DE0, (unint64_t *)&qword_1EB731FB8, v21);
    sub_1AD73DCF0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_1AD3222F0(&qword_1E9A2C278, (void (*)(uint64_t))sub_1AD3209D0);
    uint64_t v22 = sub_1AD73DC70();

    (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v15);
  }
  else
  {
    sub_1AD73CAD0();
    uint64_t v23 = sub_1AD73CB80();
    os_log_type_t v24 = sub_1AD73F920();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v32 = v26;
      *(_DWORD *)uint64_t v25 = 136446210;
      uint64_t v31 = sub_1AD1F62D4(0xD00000000000002FLL, 0x80000001AD751D00, &v32);
      sub_1AD7403B0();
      _os_log_impl(&dword_1AD1A4000, v23, v24, "[%{public}s] Invite failed to send; not creating a commit transaction",
        v25,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v26, -1, -1);
      MEMORY[0x1B3E68450](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    LOBYTE(v32) = 0;
    sub_1AD73DB50();
    sub_1AD320AD0();
    uint64_t v27 = v30;
    uint64_t v22 = sub_1AD73DC70();
    (*((void (**)(char *, uint64_t))v29 + 1))(v4, v27);
  }
  return v22;
}

void sub_1AD320914()
{
  if (!qword_1E9A2C260)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, void, uint64_t, void))MEMORY[0x1E4F1AC28];
    sub_1AD31BB04(255, &qword_1E9A2C248, MEMORY[0x1E4F1AC28]);
    sub_1AD31B928((unint64_t *)&qword_1E9A2C250, &qword_1E9A2C248, v0);
    unint64_t v1 = sub_1AD73D850();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1E9A2C260);
    }
  }
}

void sub_1AD3209D0()
{
  if (!qword_1E9A2C268)
  {
    sub_1AD320914();
    uint64_t v0 = MEMORY[0x1E4FBB390];
    sub_1AD322468(255, (unint64_t *)&qword_1EB731FB8, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AAE0]);
    sub_1AD3222F0(&qword_1E9A2C270, (void (*)(uint64_t))sub_1AD320914);
    sub_1AD3224CC((unint64_t *)&unk_1EB732DE0, (unint64_t *)&qword_1EB731FB8, v0);
    unint64_t v1 = sub_1AD73D890();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1E9A2C268);
    }
  }
}

unint64_t sub_1AD320AD0()
{
  unint64_t result = qword_1EB732E00;
  if (!qword_1EB732E00)
  {
    sub_1AD3210E8(255, &qword_1EB732E08, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB732E00);
  }
  return result;
}

uint64_t sub_1AD320B4C()
{
  return swift_deallocObject();
}

uint64_t sub_1AD320B5C@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1AD31ADBC(*a1, *(unsigned char *)(v2 + 16));
  *a2 = result & 1;
  return result;
}

uint64_t sub_1AD320B90()
{
  return swift_deallocObject();
}

uint64_t sub_1AD320BA0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AD31AFCC(*a1, *(unsigned __int8 *)(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_1AD320BD0(uint64_t a1, char a2)
{
  return sub_1AD3BDD34(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

void sub_1AD320BDC(char a1, void *a2)
{
  sub_1AD31AD40(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

void sub_1AD320BE4()
{
}

uint64_t sub_1AD320C08(int a1, void *a2)
{
  return sub_1AD31A154(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

id sub_1AD320C10()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_1AD320C28()
{
  return sub_1AD3222F0(&qword_1E9A2B6E8, MEMORY[0x1E4F66840]);
}

uint64_t sub_1AD320C5C()
{
  return sub_1AD3222F0((unint64_t *)&unk_1E9A2B6F0, MEMORY[0x1E4F66840]);
}

uint64_t sub_1AD320C90(uint64_t a1)
{
  return sub_1AD31BD28(a1, (uint64_t (*)(void))sub_1AD289A0C);
}

void sub_1AD320CA8()
{
  if (!qword_1E9A2C288)
  {
    sub_1AD320F94(255, (unint64_t *)&unk_1E9A2F3F0, &qword_1E9A2C290, MEMORY[0x1E4F66020], MEMORY[0x1E4F1AAE0]);
    sub_1AD2082E8(255, (unint64_t *)&qword_1EB73E850, (unint64_t *)&qword_1EB73E840, MEMORY[0x1E4F65F00], MEMORY[0x1E4FBB718]);
    sub_1AD320D88();
    unint64_t v0 = sub_1AD73D850();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C288);
    }
  }
}

unint64_t sub_1AD320D88()
{
  unint64_t result = qword_1E9A2F400;
  if (!qword_1E9A2F400)
  {
    sub_1AD320F94(255, (unint64_t *)&unk_1E9A2F3F0, &qword_1E9A2C290, MEMORY[0x1E4F66020], MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2F400);
  }
  return result;
}

void sub_1AD320E18()
{
  if (!qword_1E9A2C298)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
    sub_1AD320F94(255, (unint64_t *)&unk_1E9A2F410, (unint64_t *)&unk_1E9A2BBC0, MEMORY[0x1E4F66148], MEMORY[0x1E4F1AAE0]);
    sub_1AD1C6948(255, &qword_1E9A2C290, MEMORY[0x1E4F66020], MEMORY[0x1E4FBB718]);
    sub_1AD320F30(&qword_1E9A2F420, (unint64_t *)&unk_1E9A2F410, v0);
    unint64_t v1 = sub_1AD73D850();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1E9A2C298);
    }
  }
}

uint64_t sub_1AD320F30(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AD320F94(255, a2, (unint64_t *)&unk_1E9A2BBC0, MEMORY[0x1E4F66148], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AD320F94(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_1AD1C6948(255, a3, a4, MEMORY[0x1E4FBB718]);
    unint64_t v9 = a5(a1, v8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

id sub_1AD321020()
{
  return sub_1AD4F92F4(*(void *)(v0 + 16));
}

uint64_t sub_1AD32102C()
{
  return swift_deallocObject();
}

uint64_t sub_1AD32103C()
{
  return sub_1AD3175DC();
}

void sub_1AD321044(uint64_t *a1)
{
  sub_1AD3177B4(a1, *(void *)(v1 + 16));
}

void sub_1AD32104C()
{
  if (!qword_1E9A2C2B0)
  {
    sub_1AD3210B4(255);
    unint64_t v0 = sub_1AD73D9F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C2B0);
    }
  }
}

void sub_1AD3210B4(uint64_t a1)
{
}

void sub_1AD3210E8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1AD321134()
{
  if (!qword_1E9A2C2C0)
  {
    sub_1AD321220(255, &qword_1E9A2C2C8, sub_1AD3212C8, (void (*)(void))sub_1AD32138C);
    sub_1AD3213C0();
    sub_1AD321470();
    sub_1AD3222F0(&qword_1E9A2C2F0, (void (*)(uint64_t))sub_1AD3213C0);
    unint64_t v0 = sub_1AD73D900();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C2C0);
    }
  }
}

void sub_1AD321220(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_1AD2196B8(255, (unint64_t *)&qword_1EB7414A0);
    a4();
    unint64_t v6 = sub_1AD73D810();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1AD3212C8(uint64_t a1)
{
}

unint64_t sub_1AD321304()
{
  unint64_t result = qword_1E9A2BA78;
  if (!qword_1E9A2BA78)
  {
    sub_1AD1C6948(255, &qword_1E9A2BA70, MEMORY[0x1E4F66840], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2BA78);
  }
  return result;
}

uint64_t sub_1AD32138C()
{
  return sub_1AD3222F0(&qword_1E9A2C2D8, sub_1AD3212C8);
}

void sub_1AD3213C0()
{
  if (!qword_1E9A2C2E0)
  {
    sub_1AD1C6948(255, &qword_1E9A2BA70, MEMORY[0x1E4F66840], MEMORY[0x1E4FBB320]);
    sub_1AD2196B8(255, (unint64_t *)&qword_1EB7414A0);
    unint64_t v0 = sub_1AD73DB70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C2E0);
    }
  }
}

unint64_t sub_1AD321470()
{
  unint64_t result = qword_1E9A2C2E8;
  if (!qword_1E9A2C2E8)
  {
    sub_1AD321220(255, &qword_1E9A2C2C8, sub_1AD3212C8, (void (*)(void))sub_1AD32138C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C2E8);
  }
  return result;
}

void sub_1AD3214F8()
{
  if (!qword_1E9A2C2F8)
  {
    sub_1AD321134();
    sub_1AD2147D4(255, (unint64_t *)&qword_1EB73F790);
    sub_1AD3222F0(&qword_1E9A2C300, (void (*)(uint64_t))sub_1AD321134);
    unint64_t v0 = sub_1AD73D7F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C2F8);
    }
  }
}

uint64_t sub_1AD3215B4()
{
  return sub_1AD3222F0(&qword_1E9A2C310, (void (*)(uint64_t))sub_1AD3214F8);
}

void sub_1AD3215E8()
{
  if (!qword_1E9A2C318)
  {
    sub_1AD321C6C(255, &qword_1E9A2C308, (void (*)(uint64_t))sub_1AD3214F8, (void (*)(void))sub_1AD3215B4);
    sub_1AD1C6948(255, &qword_1E9A2AB80, MEMORY[0x1E4F674F8], MEMORY[0x1E4FBB320]);
    sub_1AD3216C4();
    unint64_t v0 = sub_1AD73D8E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C318);
    }
  }
}

unint64_t sub_1AD3216C4()
{
  unint64_t result = qword_1E9A2C320;
  if (!qword_1E9A2C320)
  {
    sub_1AD321C6C(255, &qword_1E9A2C308, (void (*)(uint64_t))sub_1AD3214F8, (void (*)(void))sub_1AD3215B4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C320);
  }
  return result;
}

void sub_1AD32174C()
{
  if (!qword_1E9A2C328)
  {
    sub_1AD321220(255, &qword_1E9A2C330, sub_1AD321838, (void (*)(void))sub_1AD3219A0);
    sub_1AD3215E8();
    sub_1AD3219D4();
    sub_1AD3222F0(&qword_1E9A2C350, (void (*)(uint64_t))sub_1AD3215E8);
    unint64_t v0 = sub_1AD73D900();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C328);
    }
  }
}

void sub_1AD321838(uint64_t a1)
{
}

void sub_1AD321874(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    sub_1AD1C6948(255, a3, a4, MEMORY[0x1E4FBB320]);
    a5();
    unint64_t v7 = sub_1AD73D970();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1AD321918()
{
  unint64_t result = qword_1E9A2BA68;
  if (!qword_1E9A2BA68)
  {
    sub_1AD1C6948(255, &qword_1E9A2AB80, MEMORY[0x1E4F674F8], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2BA68);
  }
  return result;
}

uint64_t sub_1AD3219A0()
{
  return sub_1AD3222F0(&qword_1E9A2C340, sub_1AD321838);
}

unint64_t sub_1AD3219D4()
{
  unint64_t result = qword_1E9A2C348;
  if (!qword_1E9A2C348)
  {
    sub_1AD321220(255, &qword_1E9A2C330, sub_1AD321838, (void (*)(void))sub_1AD3219A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C348);
  }
  return result;
}

void sub_1AD321A5C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_1AD2147D4(255, (unint64_t *)&qword_1EB73F7F0);
    a4();
    sub_1AD21F35C();
    unint64_t v6 = sub_1AD73D9A0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1AD321B04()
{
  return sub_1AD3222F0(&qword_1E9A2C360, (void (*)(uint64_t))sub_1AD32174C);
}

void sub_1AD321B38()
{
  if (!qword_1E9A2C368)
  {
    sub_1AD321A5C(255, &qword_1E9A2C358, (void (*)(uint64_t))sub_1AD32174C, (void (*)(void))sub_1AD321B04);
    type metadata accessor for SummarySharingSelectableDataTypeItem(255);
    sub_1AD321BE4();
    unint64_t v0 = sub_1AD73D7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C368);
    }
  }
}

unint64_t sub_1AD321BE4()
{
  unint64_t result = qword_1E9A2C370;
  if (!qword_1E9A2C370)
  {
    sub_1AD321A5C(255, &qword_1E9A2C358, (void (*)(uint64_t))sub_1AD32174C, (void (*)(void))sub_1AD321B04);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C370);
  }
  return result;
}

void sub_1AD321C6C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_1AD73D8F0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1AD321CDC()
{
  return sub_1AD3222F0(&qword_1E9A2C380, (void (*)(uint64_t))sub_1AD321B38);
}

void sub_1AD321D10()
{
  if (!qword_1E9A2C388)
  {
    sub_1AD321C6C(255, &qword_1E9A2C378, (void (*)(uint64_t))sub_1AD321B38, (void (*)(void))sub_1AD321CDC);
    sub_1AD32104C();
    sub_1AD321DFC();
    sub_1AD3222F0(&qword_1E9A2C2B8, (void (*)(uint64_t))sub_1AD32104C);
    unint64_t v0 = sub_1AD73D890();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C388);
    }
  }
}

unint64_t sub_1AD321DFC()
{
  unint64_t result = qword_1E9A2C390;
  if (!qword_1E9A2C390)
  {
    sub_1AD321C6C(255, &qword_1E9A2C378, (void (*)(uint64_t))sub_1AD321B38, (void (*)(void))sub_1AD321CDC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C390);
  }
  return result;
}

uint64_t sub_1AD321E84()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1AD321EC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1AD31FAE4(a1, *(void *)(v2 + 16));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1AD321EF4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void sub_1AD321F2C(uint64_t a1)
{
  sub_1AD2CD604(a1, (void *)(v1 + 16));
}

uint64_t sub_1AD321F48()
{
  uint64_t v1 = *(void *)(type metadata accessor for SummarySharingSelectionFlow(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_1AD73C130();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
    objc_release(*(id *)(v0
                       + v2
                       + *(int *)(type metadata accessor for SummarySharingRelationshipManagementContext(0) + 20)));
  }
  return swift_deallocObject();
}

uint64_t sub_1AD322058@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SummarySharingSelectionFlow(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v7 = *a1;
  return sub_1AD3146B8(v7, v6, a2);
}

unint64_t sub_1AD3220DC()
{
  unint64_t result = qword_1E9A2C3A8;
  if (!qword_1E9A2C3A8)
  {
    sub_1AD1C6948(255, &qword_1E9A2C3A0, (uint64_t (*)(uint64_t))sub_1AD3210B4, MEMORY[0x1E4F1AC08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C3A8);
  }
  return result;
}

void sub_1AD322164(uint64_t a1)
{
}

uint64_t sub_1AD322198(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1AD322200()
{
  unint64_t result = qword_1E9A2AF70;
  if (!qword_1E9A2AF70)
  {
    type metadata accessor for SummarySharingSelectableDataTypeCell();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9A2AF70);
  }
  return result;
}

uint64_t sub_1AD32223C()
{
  return sub_1AD3222F0(&qword_1EB73F6D8, MEMORY[0x1E4F675C8]);
}

uint64_t sub_1AD322270()
{
  return sub_1AD3222F0(&qword_1EB73F6E0, MEMORY[0x1E4F675C8]);
}

void sub_1AD3222A4(uint64_t a1)
{
}

uint64_t sub_1AD3222D8(uint64_t a1)
{
  return sub_1AD31BD28(a1, (uint64_t (*)(void))sub_1AD3222A4);
}

uint64_t sub_1AD3222F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD322338(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1AD3223A0()
{
  unint64_t result = qword_1E9A2C3C8;
  if (!qword_1E9A2C3C8)
  {
    sub_1AD322468(255, (unint64_t *)&qword_1E9A2C3C0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AB88]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C3C8);
  }
  return result;
}

void sub_1AD322420()
{
  sub_1AD315D34(v0);
}

uint64_t sub_1AD322428()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD322460(uint64_t a1)
{
  return sub_1AD3FA540(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_1AD322468(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t, void, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AD3224CC(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AD322468(255, a2, a3, MEMORY[0x1E4F1AAE0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AD322530()
{
  unint64_t result = qword_1EB732EA8;
  if (!qword_1EB732EA8)
  {
    sub_1AD1C6948(255, (unint64_t *)&qword_1EB732EA0, MEMORY[0x1E4F1AB18], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB732EA8);
  }
  return result;
}

double static NSDirectionalEdgeInsets.+= infix(_:_:)(double *a1, double a2, double a3, double a4, double a5)
{
  double result = *a1 + a2;
  double v6 = a1[1] + a3;
  double v7 = a1[2] + a4;
  double v8 = a1[3] + a5;
  *a1 = result;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  return result;
}

double static NSDirectionalEdgeInsets.+ infix(_:_:)(double a1, double a2, double a3, double a4, double a5)
{
  return a1 + a5;
}

void UIViewController.presentPDF(provider:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  unint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B70]), sel_initWithRootViewController_, v5);
  objc_msgSend(v2, sel_hk_presentModalCardViewController_fullScreen_animated_completion_, v6, 1, 1, 0);
}

uint64_t dispatch thunk of PDFViewControllerProviding.pdfController()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1AD322714()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1AD73B620();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = *(void (**)(char *, void, uint64_t, __n128))(v3 + 104);
  v7(v6, *MEMORY[0x1E4F65E38], v2, v4);
  char v8 = sub_1AD73B600();
  unint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v6, v2);
  ((void (*)(char *, void, uint64_t))v7)(v6, *MEMORY[0x1E4F65E40], v2);
  char v10 = sub_1AD73B600();
  v9(v6, v2);
  char v11 = sub_1AD322EF4();
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v43 = MEMORY[0x1E4FBC860];
  if (v8 & 1) != 0 && (v11 & 1) != 0 && (v10)
  {
    sub_1AD3242F4();
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1AD74C370;
    sub_1AD1C88C0(0, (unint64_t *)&qword_1EB741320);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1AD74DE20;
    uint64_t v15 = (void *)sub_1AD73F180();
    uint64_t v16 = self;
    id v17 = objc_msgSend(v16, sel_systemImageNamed_, v15);

    sub_1AD2147D4(0, (unint64_t *)&unk_1E9A2D9F0);
    (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x290))();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v18 = v17;
    id v19 = (void *)sub_1AD7400A0();
    uint64_t v41 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    uint64_t v42 = v20;
    swift_bridgeObjectRetain();
    sub_1AD73F300();
    id v21 = v19;
    swift_bridgeObjectRelease();
    uint64_t v22 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setAccessibilityIdentifier_, v22);

    *(void *)(v14 + 32) = v21;
    if (qword_1E9A29028 != -1) {
      swift_once();
    }
    uint64_t v23 = qword_1E9A29030;
    swift_bridgeObjectRetain();
    if (v23 != -1) {
      swift_once();
    }
    os_log_type_t v24 = (void *)qword_1E9A48710;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v25 = v24;
    *(void *)(v14 + 40) = sub_1AD7400A0();
    uint64_t v41 = v14;
    sub_1AD73F4D0();
    uint64_t v26 = (void *)sub_1AD73F180();
    id v27 = objc_msgSend(v16, sel_systemImageNamed_, v26);

    sub_1AD2147D4(0, (unint64_t *)&unk_1E9A2C440);
    swift_bridgeObjectRetain();
    sub_1AD73FFB0();
    sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F7B0);
    swift_unknownObjectRetain();
    uint64_t v28 = sub_1AD73FAB0();
    swift_bridgeObjectRelease();
    *(void *)(v13 + 32) = v28;
    uint64_t v41 = v13;
    sub_1AD73F4D0();
    uint64_t v43 = v41;
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  else
  {
    if (sub_1AD322EF4())
    {
      id v29 = sub_1AD5B6868();
      MEMORY[0x1B3E657B0]();
      if (*(void *)(v43 + 16) >= *(void *)(v43 + 24) >> 1) {
        sub_1AD73F510();
      }
      sub_1AD73F560();
      sub_1AD73F4D0();
    }
    if (v10)
    {
      sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F7B0);
      if (qword_1E9A29030 != -1) {
        swift_once();
      }
      id v30 = (id)qword_1E9A48710;
      uint64_t v31 = v1;
      sub_1AD73FAB0();
      MEMORY[0x1B3E657B0]();
      if (*(void *)(v43 + 16) >= *(void *)(v43 + 24) >> 1) {
        sub_1AD73F510();
      }
      sub_1AD73F560();
      sub_1AD73F4D0();
    }
  }
  sub_1AD5B66E0();
  sub_1AD512C64();
  uint64_t v32 = swift_release();
  MEMORY[0x1B3E657B0](v32);
  if (*(void *)(v43 + 16) >= *(void *)(v43 + 24) >> 1) {
    sub_1AD73F510();
  }
  sub_1AD73F560();
  sub_1AD73F4D0();
  uint64_t v33 = v43;
  uint64_t v41 = v12;
  uint64_t v34 = *(void *)(v43 + 16);
  if (v34)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v34; ++i)
    {
      uint64_t v36 = *(void **)(v33 + 8 * i + 32);
      if (v36)
      {
        id v37 = v36;
        MEMORY[0x1B3E657B0]();
        if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1AD73F510();
        }
        sub_1AD73F560();
        sub_1AD73F4D0();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v38 = v41;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v38;
}

uint64_t sub_1AD322EF4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthExperienceUI28DataTypeDetailViewController_context;
  swift_beginAccess();
  id v2 = objc_msgSend(*(id *)(v1 + 40), sel_displayTypeController);
  if (!v2)
  {
    __break(1u);
    JUMPOUT(0x1AD3230B8);
  }
  uint64_t v3 = v2;
  __n128 v4 = (void *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI28DataTypeDetailViewController_hkType);
  swift_beginAccess();
  id v5 = objc_msgSend(v3, sel_displayTypeForObjectType_, *v4);

  if (!v5) {
    goto LABEL_7;
  }
  if (!objc_msgSend(v5, sel_allowsManualEntry))
  {

LABEL_7:
    char v6 = 0;
    return v6 & 1;
  }
  switch(*(unsigned char *)(v1 + 48))
  {
    case 1:

      swift_bridgeObjectRelease();
      char v6 = 1;
      break;
    default:
      char v6 = sub_1AD740BC0();

      swift_bridgeObjectRelease();
      break;
  }
  return v6 & 1;
}

void sub_1AD3230C8(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  char v6 = (void *)MEMORY[0x1B3E68580](v5);
  if (v6)
  {
    double v7 = v6;
    objc_msgSend(v6, *a3, a1);
  }
}

id sub_1AD323134()
{
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x290))();
  uint64_t v1 = type metadata accessor for DataTypeDetailViewController();
  uint64_t v19 = v1;
  id v17 = v0;
  id v2 = v0;
  uint64_t v3 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  if (v1)
  {
    __n128 v4 = __swift_project_boxed_opaque_existential_1(&v17, v1);
    uint64_t v5 = *(void *)(v1 - 8);
    MEMORY[0x1F4188790](v4);
    double v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v5 + 16))(v7);
    uint64_t v8 = sub_1AD740BA0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  }
  else
  {
    uint64_t v8 = 0;
  }
  id v9 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  id v10 = objc_msgSend(v9, sel_initWithTitle_style_target_action_, v3, 0, v8, sel_addDataTapped_, v17);

  swift_unknownObjectRelease();
  id v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  id v11 = v10;
  sub_1AD740680();
  uint64_t v12 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  id v17 = (void *)v12;
  unint64_t v18 = v14;
  sub_1AD73F300();
  uint64_t v15 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setAccessibilityIdentifier_, v15);

  return v11;
}

id sub_1AD323394()
{
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F7B0);
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x290))();
  uint64_t v1 = (void *)sub_1AD73F180();
  id v2 = objc_msgSend(self, sel_systemImageNamed_, v1);

  swift_unknownObjectRetain();
  id v3 = (id)sub_1AD73FAB0();
  sub_1AD740680();
  uint64_t v4 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v9 = v4;
  sub_1AD73F300();
  double v7 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v7, v9, v6);

  return v3;
}

uint64_t sub_1AD3236DC()
{
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t result = sub_1AD73A1D0();
  qword_1E9A48700 = result;
  *(void *)algn_1E9A48708 = v1;
  return result;
}

void sub_1AD323790()
{
  uint64_t v0 = (void *)sub_1AD73F180();
  id v1 = objc_msgSend(self, sel_systemImageNamed_, v0);

  qword_1E9A48710 = (uint64_t)v1;
}

void sub_1AD323800()
{
  id v1 = v0;
  uint64_t v69 = *MEMORY[0x1E4F143B8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1AD73CBA0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v59 - v7;
  uint64_t v9 = (uint64_t)&v0[OBJC_IVAR____TtC18HealthExperienceUI28DataTypeDetailViewController_chartImageProvider];
  swift_beginAccess();
  sub_1AD290E84(v9, (uint64_t)v66);
  uint64_t v10 = v67;
  if (v67)
  {
    uint64_t v11 = v68;
    uint64_t v12 = __swift_project_boxed_opaque_existential_1(v66, v67);
    uint64_t v13 = *(void *)(v10 - 8);
    MEMORY[0x1F4188790](v12);
    uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v13 + 16))(v15);
    sub_1AD324088((uint64_t)v66);
    uint64_t v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v10);
    if (v16)
    {
      id v17 = (id *)&v1[OBJC_IVAR____TtC18HealthExperienceUI28DataTypeDetailViewController_context];
      swift_beginAccess();
      id v18 = objc_msgSend(v17[5], sel_displayTypeController);
      if (v18)
      {
        uint64_t v19 = v18;
        id v20 = DataTypeDetailViewController.objectType.getter();
        id v21 = objc_msgSend(v19, sel_displayTypeForObjectType_, v20);

        if (v21)
        {
          id v22 = v16;
          id v23 = objc_msgSend(v21, sel_listIcon);
          uint64_t v24 = sub_1AD324110(v21);
          uint64_t v26 = v25;
          if (qword_1E9A29960 != -1) {
            swift_once();
          }
          uint64_t v27 = qword_1E9A32440;
          uint64_t v28 = *(void *)algn_1E9A32448;
          id v29 = (objc_class *)type metadata accessor for HealthImageActivityItemProvider();
          objc_allocWithZone(v29);
          swift_bridgeObjectRetain();
          id v30 = (void *)HealthImageActivityItemProvider.init(image:thumbnailImage:title:subtitle:)(v22, v23, v24, v26, v27, v28);
          sub_1AD1C88C0(0, qword_1EB7402B0);
          uint64_t v31 = swift_allocObject();
          *(_OWORD *)(v31 + 16) = xmmword_1AD74C370;
          *(void *)(v31 + 56) = v29;
          *(void *)(v31 + 32) = v30;
          id v32 = objc_allocWithZone(MEMORY[0x1E4F9F2E8]);
          id v33 = v30;
          uint64_t v34 = (void *)sub_1AD73F490();
          swift_bridgeObjectRelease();
          id v35 = objc_msgSend(v32, sel_initWithActivityItems_applicationActivities_, v34, 0);

          id v36 = objc_msgSend(v35, sel_popoverPresentationController);
          if (v36)
          {
            id v37 = v36;
            sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F7B0);
            if (qword_1E9A29030 != -1) {
              swift_once();
            }
            id v38 = (id)qword_1E9A48710;
            os_log_type_t v39 = v1;
            uint64_t v40 = (void *)sub_1AD73FAB0();
            objc_msgSend(v37, sel_setSourceItem_, v40);
          }
          sub_1AD4F8420();
          type metadata accessor for ActivityType(0);
          uint64_t v41 = (void *)sub_1AD73F490();
          swift_bridgeObjectRelease();
          objc_msgSend(v35, sel_setExcludedActivityTypes_, v41);

          objc_msgSend(v1, sel_presentViewController_animated_completion_, v35, 1, 0);
        }
        else
        {
          sub_1AD73CAD0();
          os_log_t v48 = v1;
          uint64_t v49 = sub_1AD73CB80();
          os_log_type_t v50 = sub_1AD73F920();
          if (os_log_type_enabled(v49, v50))
          {
            os_log_t v62 = v49;
            uint64_t v51 = swift_slowAlloc();
            uint64_t v60 = (void *)swift_slowAlloc();
            uint64_t v61 = swift_slowAlloc();
            uint64_t v65 = v61;
            *(_DWORD *)uint64_t v51 = 136315394;
            uint64_t v52 = sub_1AD740E30();
            uint64_t v64 = sub_1AD1F62D4(v52, v53, &v65);
            sub_1AD7403B0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v51 + 12) = 2112;
            id v54 = DataTypeDetailViewController.objectType.getter();
            id v55 = v54;
            if (v54) {
              uint64_t v64 = (uint64_t)v54;
            }
            else {
              uint64_t v64 = 0;
            }
            sub_1AD7403B0();
            uint64_t v56 = v60;
            void *v60 = v55;

            os_log_t v57 = v62;
            _os_log_impl(&dword_1AD1A4000, v62, v50, "%s Cannot create displayType for %@", (uint8_t *)v51, 0x16u);
            sub_1AD290CFC(0, (unint64_t *)&qword_1EB741310, (unint64_t *)&qword_1EB741540);
            swift_arrayDestroy();
            MEMORY[0x1B3E68450](v56, -1, -1);
            uint64_t v58 = v61;
            swift_arrayDestroy();
            MEMORY[0x1B3E68450](v58, -1, -1);
            MEMORY[0x1B3E68450](v51, -1, -1);
          }
          else
          {
          }
          (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
        }
      }
      else
      {
        __break(1u);
      }
      return;
    }
  }
  else
  {
    sub_1AD324088((uint64_t)v66);
  }
  sub_1AD73CAD0();
  uint64_t v42 = sub_1AD73CB80();
  os_log_type_t v43 = sub_1AD73F920();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    v66[0] = v45;
    *(_DWORD *)uint64_t v44 = 136315138;
    uint64_t v46 = sub_1AD740E30();
    uint64_t v65 = sub_1AD1F62D4(v46, v47, v66);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v42, v43, "%s Chart image not available, we have nothing to share!", v44, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v45, -1, -1);
    MEMORY[0x1B3E68450](v44, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1AD324088(uint64_t a1)
{
  sub_1AD208280(0, (unint64_t *)&qword_1EB732130, &qword_1EB731E70, (uint64_t)&protocol descriptor for ChartImageProviding, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD324110(void *a1)
{
  id v1 = objc_msgSend(a1, sel_localization);
  id v2 = objc_msgSend(v1, sel_titleEmbeddedDisplayName);

  uint64_t v3 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  uint64_t v5 = v4;

  if (qword_1EB732818 != -1) {
    swift_once();
  }
  sub_1AD73A1D0();
  sub_1AD208280(0, (unint64_t *)&qword_1EB73F8F0, (unint64_t *)&qword_1EB73F910, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1AD74C370;
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 64) = sub_1AD21FDC0();
  *(void *)(v6 + 32) = v3;
  *(void *)(v6 + 40) = v5;
  uint64_t v7 = sub_1AD73F190();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_1AD32429C()
{
  unint64_t result = qword_1E9A2FBD0;
  if (!qword_1E9A2FBD0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9A2FBD0);
  }
  return result;
}

void sub_1AD3242F4()
{
  if (!qword_1EB73C380)
  {
    sub_1AD290CFC(255, (unint64_t *)&unk_1EB73C118, (unint64_t *)&qword_1EB73F7B0);
    unint64_t v0 = sub_1AD740B60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB73C380);
    }
  }
}

uint64_t sub_1AD324364()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1AD32439C(uint64_t a1)
{
  sub_1AD3230C8(a1, v1, (SEL *)&selRef_addDataTapped_);
}

void sub_1AD3243C0(uint64_t a1)
{
  sub_1AD3230C8(a1, v1, (SEL *)&selRef_shareButtonTapped_);
}

uint64_t sub_1AD3243E4(uint64_t a1, void *a2)
{
  sub_1AD1EF2DC(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC18HealthExperienceUI19PickerTableViewCell_item;
  swift_beginAccess();
  sub_1AD205C2C((uint64_t)v5, v3);
  swift_endAccess();
  sub_1AD324458();
  return sub_1AD1E1AA8((uint64_t)v5);
}

uint64_t sub_1AD324458()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1AD73CBA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t)&v1[OBJC_IVAR____TtC18HealthExperienceUI19PickerTableViewCell_item];
  swift_beginAccess();
  sub_1AD1EF2DC(v6, (uint64_t)v30);
  if (!v30[3])
  {
    sub_1AD1E1AA8((uint64_t)v30);
LABEL_9:
    sub_1AD73CAE0();
    uint64_t v15 = v1;
    uint64_t v16 = sub_1AD73CB80();
    os_log_type_t v17 = sub_1AD73F920();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v27 = v2;
      uint64_t v19 = v18;
      uint64_t v20 = swift_slowAlloc();
      v30[0] = v20;
      *(_DWORD *)uint64_t v19 = 136446722;
      uint64_t v21 = sub_1AD740E30();
      uint64_t v28 = sub_1AD1F62D4(v21, v22, v30);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2082;
      uint64_t v28 = sub_1AD1F62D4(1835365481, 0xE400000000000000, v30);
      sub_1AD7403B0();
      *(_WORD *)(v19 + 22) = 2082;
      sub_1AD1E1B04();
      uint64_t v28 = v23;
      sub_1AD324E84();
      uint64_t v24 = sub_1AD73F220();
      uint64_t v28 = sub_1AD1F62D4(v24, v25, v30);
      sub_1AD7403B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AD1A4000, v16, v17, "[%{public}s.%{public}s]: Attempted to set item (%{public}s) that did not conform to PickerTableViewCellSource", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v20, -1, -1);
      MEMORY[0x1B3E68450](v19, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v27);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1AD20EE0C(0, (unint64_t *)&qword_1EB73E870);
  sub_1AD20EE0C(0, (unint64_t *)&unk_1E9A2C460);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v7 = (void *)v28;
  uint64_t v8 = v29;
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC18HealthExperienceUI19PickerTableViewCell_pickerView];
  uint64_t ObjectType = swift_getObjectType();
  objc_msgSend(v9, sel_setDelegate_, v7);
  objc_msgSend(v9, sel_setDataSource_, v7);
  objc_msgSend(v9, sel_reloadAllComponents);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = (void *)(v11 + 40);
    do
    {
      objc_msgSend(v9, sel_selectRow_inComponent_animated_, *(v13 - 1), *v13, 0);
      v13 += 2;
      --v12;
    }
    while (v12);
  }
  swift_bridgeObjectRelease();
  if ((objc_msgSend(v7, sel_respondsToSelector_, sel_pickerView_didSelectRow_inComponent_) & 1) == 0) {
    return swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  objc_msgSend(v7, sel_pickerView_didSelectRow_inComponent_, v9, objc_msgSend(v9, sel_selectedRowInComponent_, 0), 0);
  return swift_unknownObjectRelease_n();
}

uint64_t sub_1AD3248A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI19PickerTableViewCell_item;
  swift_beginAccess();
  return sub_1AD1EF2DC(v3, a1);
}

uint64_t sub_1AD3248FC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI19PickerTableViewCell_item;
  swift_beginAccess();
  sub_1AD205C2C(a1, v3);
  swift_endAccess();
  sub_1AD324458();
  return sub_1AD1E1AA8(a1);
}

uint64_t (*sub_1AD32496C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1AD3249CC;
}

uint64_t sub_1AD3249CC(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1AD324458();
  }
  return result;
}

id PickerTableViewCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a3)
  {
    uint64_t v6 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

char *PickerTableViewCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD324BC8(a2, a3);
}

id PickerTableViewCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PickerTableViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_1AD324BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = &v2[OBJC_IVAR____TtC18HealthExperienceUI19PickerTableViewCell_item];
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((void *)v4 + 4) = 0;
  id v5 = objc_allocWithZone(MEMORY[0x1E4FB1A98]);
  uint64_t v6 = v2;
  id v7 = objc_msgSend(v5, sel_init);
  *(void *)&v6[OBJC_IVAR____TtC18HealthExperienceUI19PickerTableViewCell_pickerView] = v7;

  if (a2)
  {
    uint64_t v8 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
  }
  v17.receiver = v6;
  v17.super_class = (Class)type metadata accessor for PickerTableViewCell();
  uint64_t v9 = (char *)objc_msgSendSuper2(&v17, sel_initWithStyle_reuseIdentifier_, 0, v8);

  uint64_t v10 = OBJC_IVAR____TtC18HealthExperienceUI19PickerTableViewCell_pickerView;
  uint64_t v11 = *(void **)&v9[OBJC_IVAR____TtC18HealthExperienceUI19PickerTableViewCell_pickerView];
  uint64_t v12 = v9;
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v13 = objc_msgSend(v12, sel_contentView);
  objc_msgSend(v13, sel_addSubview_, v11);

  id v14 = *(id *)&v9[v10];
  id v15 = objc_msgSend(v12, sel_contentView);
  objc_msgSend(v14, sel_hk_alignConstraintsWithView_, v15);

  return v12;
}

uint64_t type metadata accessor for PickerTableViewCell()
{
  return self;
}

uint64_t sub_1AD324D60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18HealthExperienceUI19PickerTableViewCell_item;
  swift_beginAccess();
  return sub_1AD1EF2DC(v3, a2);
}

uint64_t dispatch thunk of PickerTableViewCellSource.initialSelections.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for PickerTableViewCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PickerTableViewCell);
}

uint64_t dispatch thunk of PickerTableViewCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of PickerTableViewCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of PickerTableViewCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

unint64_t sub_1AD324E84()
{
  unint64_t result = qword_1E9A30BE0;
  if (!qword_1E9A30BE0)
  {
    sub_1AD1E1B04();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9A30BE0);
  }
  return result;
}

uint64_t SharableModelVersionCoding.modelVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (((*(uint64_t (**)(void))(a2 + 8))() & 1) != 0
    && ((*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2),
        ((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2) & 1) != 0))
  {
    (*(void (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
    sub_1AD73B150();
    uint64_t v6 = sub_1AD73B180();
    id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a3;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v11 = sub_1AD73B180();
    id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a3;
    uint64_t v10 = 1;
  }
  return v7(v9, v10, 1, v8);
}

uint64_t sub_1AD324FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + a3 - 16);
  uint64_t v6 = *(void (***)(void, void, void))(a4 + a3 - 8);
  sub_1AD1C09F8();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD1C0A50(a1, (uint64_t)v9);
  return SharableModelVersionCoding.modelVersion.setter((uint64_t)v9, v5, v6);
}

void (*SharableModelVersionCoding.modelVersion.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *uint64_t v7 = a2;
  sub_1AD1C09F8();
  size_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  v7[3] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v7[4] = v10;
  SharableModelVersionCoding.modelVersion.getter(a2, a3, (uint64_t)v10);
  return sub_1AD325154;
}

void sub_1AD325154(uint64_t **a1, char a2)
{
  objc_super v2 = *a1;
  uint64_t v3 = (void *)(*a1)[3];
  uint64_t v4 = (void *)(*a1)[4];
  uint64_t v5 = (void (**)(void, void, void))(*a1)[1];
  uint64_t v6 = **a1;
  if (a2)
  {
    sub_1AD1C0A50((uint64_t)v4, (uint64_t)v3);
    SharableModelVersionCoding.modelVersion.setter((uint64_t)v3, v6, v5);
    sub_1AD1C099C((uint64_t)v4);
  }
  else
  {
    SharableModelVersionCoding.modelVersion.setter((uint64_t)v4, v6, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_1AD3251EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return SharableModelVersionCoding.modelVersion.getter(*(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8), a3);
}

uint64_t sub_1AD325220()
{
  return 16;
}

__n128 sub_1AD32522C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of SharableModelVersionCoding.hasLatestSupportedVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SharableModelVersionCoding.hasLatestSupportedVersion.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SharableModelVersionCoding.hasLatestSupportedVersion.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of SharableModelVersionCoding.latestSupportedVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SharableModelVersionCoding.latestSupportedVersion.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of SharableModelVersionCoding.latestSupportedVersion.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SharableModelVersionCoding.hasMinimumSupportedVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of SharableModelVersionCoding.hasMinimumSupportedVersion.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of SharableModelVersionCoding.hasMinimumSupportedVersion.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of SharableModelVersionCoding.minimumSupportedVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of SharableModelVersionCoding.minimumSupportedVersion.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of SharableModelVersionCoding.minimumSupportedVersion.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

void sub_1AD325328()
{
  qword_1E9A2C470 = 0x403E000000000000;
}

void sub_1AD325338()
{
}

uint64_t sub_1AD325368()
{
  return swift_release();
}

uint64_t sub_1AD325378()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  sub_1AD20E2C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD325470()
{
  return type metadata accessor for SummarySharingPreviewButtonDataSource();
}

uint64_t type metadata accessor for SummarySharingPreviewButtonDataSource()
{
  uint64_t result = qword_1E9A2C478;
  if (!qword_1E9A2C478) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AD3254C4()
{
  return swift_updateClassMetadata2();
}

void *sub_1AD32550C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ListLayoutConfiguration();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 8);
  if (qword_1EB73FD20 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB73EE48);
  sub_1AD213FFC(v6, (uint64_t)v4);
  if (qword_1E9A29038 != -1) {
    swift_once();
  }
  *((void *)v4 + 8) = qword_1E9A2C470;
  uint64_t v7 = ListLayoutConfiguration.layout(for:)(v5);
  sub_1AD225778((uint64_t)v4);
  return v7;
}

void sub_1AD32562C()
{
}

uint64_t sub_1AD325654(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1AD73A670();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for SummarySharingPreviewSummariesCell();
  sub_1AD325B64();
  *(void *)(a4 + 32) = sub_1AD73F220();
  *(void *)(a4 + 40) = v12;
  *(void *)(a4 + 64) = 0;
  *(unsigned char *)(a4 + 136) = 1;
  *(void *)(a4 + 152) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 160) = 0;
  *(void *)(a4 + 168) = 0;
  uint64_t v21 = sub_1AD740E30();
  uint64_t v22 = v13;
  sub_1AD73F300();
  sub_1AD73A660();
  sub_1AD325BA0((unint64_t *)&qword_1EB7392C0, MEMORY[0x1E4F27990]);
  sub_1AD740B50();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v14 = v22;
  *(void *)(a4 + 16) = v21;
  *(void *)(a4 + 24) = v14;
  if (qword_1E9A29460 != -1) {
    swift_once();
  }
  uint64_t v15 = unk_1E9A2EB70;
  *(void *)(a4 + 48) = qword_1E9A2EB68;
  *(void *)(a4 + 56) = v15;
  uint64_t v16 = qword_1E9A29468;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  objc_super v17 = (void *)qword_1E9A2EB78;
  uint64_t v18 = *(void **)(a4 + 64);
  *(void *)(a4 + 64) = qword_1E9A2EB78;
  id v19 = v17;

  *(void *)(a4 + 112) = a2;
  sub_1AD20FE90(a1, a4 + 72);
  *(void *)(a4 + 120) = a3;
  *(void *)(a4 + 128) = &protocol witness table for CellRegistering<A>;
  return a4;
}

uint64_t sub_1AD3258D8(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1AD73A670();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 64;
  sub_1AD1FFE38(a1, (uint64_t)v30);
  sub_1AD1FFE38((uint64_t)v30, (uint64_t)v29);
  swift_retain();
  id v10 = a2;
  uint64_t v11 = sub_1AD4FF9A4((uint64_t)v10);
  uint64_t v12 = type metadata accessor for SummarySharingPreviewSummariesItem();
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = sub_1AD325654(v29, (uint64_t)v10, (uint64_t)v11, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  uint64_t v15 = OBJC_IVAR____TtC18HealthExperienceUI37SummarySharingPreviewButtonDataSource_previewItem;
  *(void *)(v3 + OBJC_IVAR____TtC18HealthExperienceUI37SummarySharingPreviewButtonDataSource_previewItem) = v14;
  swift_release();
  sub_1AD275004();
  uint64_t inited = swift_initStackObject();
  long long v28 = xmmword_1AD74C370;
  *(_OWORD *)(inited + 16) = xmmword_1AD74C370;
  sub_1AD212688();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = v28;
  uint64_t v18 = *(void *)(v3 + v15);
  *(void *)(v17 + 56) = v12;
  *(void *)(v17 + 64) = sub_1AD325BA0(&qword_1E9A2C488, (void (*)(uint64_t))type metadata accessor for SummarySharingPreviewSummariesItem);
  *(void *)(v17 + 32) = v18;
  swift_retain();
  sub_1AD73A660();
  uint64_t v19 = sub_1AD73A620();
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1AD1FBD54(MEMORY[0x1E4FBC860]);
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = Array<A>.identifierToIndexDict()(v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = 0;
  *(void *)(inited + 48) = v17;
  *(void *)(inited + 56) = v23;
  *(void *)(inited + 64) = v19;
  *(void *)(inited + 72) = v21;
  uint64_t v24 = sub_1AD1FBF24();
  uint64_t v26 = MutableArrayDataSource.init(arrangedSections:identifier:)(inited, v24, v25);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v26;
}

unint64_t sub_1AD325B64()
{
  unint64_t result = qword_1E9A2AE60;
  if (!qword_1E9A2AE60)
  {
    type metadata accessor for SummarySharingPreviewSummariesCell();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9A2AE60);
  }
  return result;
}

uint64_t sub_1AD325BA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static DataTypeDetailConfiguration.standardWithChart(hkType:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AD326C04(0, (unint64_t *)&qword_1EB73C350, &qword_1EB73A4A8, (uint64_t)&protocol descriptor for DataTypeDetailComponent, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AD751F20;
  *(void *)(v3 + 56) = &type metadata for DataTypeDetailConfiguration.ChartComponent;
  *(void *)(v3 + 64) = &protocol witness table for DataTypeDetailConfiguration.ChartComponent;
  *(void *)(v3 + 32) = a1;
  *(unsigned char *)(v3 + 40) = 0;
  uint64_t v4 = self;
  id v5 = a1;
  id v6 = objc_msgSend(v4, sel_hk_chartBackgroundColor);
  sub_1AD1A88FC();
  uint64_t v7 = sub_1AD73F9E0();
  *(void *)(v3 + 96) = &type metadata for DataTypeDetailConfiguration.MessageButtonComponent;
  *(void *)(v3 + 104) = &protocol witness table for DataTypeDetailConfiguration.MessageButtonComponent;
  *(void *)(v3 + 72) = v5;
  *(void *)(v3 + 80) = v6;
  *(void *)(v3 + 88) = v7;
  id v8 = v5;
  uint64_t v9 = sub_1AD73AF50();
  *(void *)(v3 + 112) = v8;
  *(void *)(v3 + 120) = v9;
  *(void *)(v3 + 128) = v10;
  *(void *)(v3 + 136) = &type metadata for DataTypeDetailConfiguration.PromptsComponent;
  *(void *)(v3 + 176) = &type metadata for DataTypeDetailConfiguration.GetMoreFromHealthComponent;
  *(void *)(v3 + 184) = &protocol witness table for DataTypeDetailConfiguration.GetMoreFromHealthComponent;
  *(void *)(v3 + 144) = &protocol witness table for DataTypeDetailConfiguration.PromptsComponent;
  *(void *)(v3 + 152) = v8;
  *(void *)(v3 + 160) = 0;
  *(void *)(v3 + 216) = &type metadata for DataTypeDetailConfiguration.TrendsComponent;
  *(void *)(v3 + 224) = &protocol witness table for DataTypeDetailConfiguration.TrendsComponent;
  *(void *)(v3 + 192) = v8;
  *(void *)(v3 + 200) = 3;
  unint64_t v11 = sub_1AD25A038((uint64_t)&unk_1F041D178);
  *(void *)(v3 + 256) = &type metadata for DataTypeDetailConfiguration.HighlightsComponent;
  *(void *)(v3 + 264) = &protocol witness table for DataTypeDetailConfiguration.HighlightsComponent;
  *(void *)(v3 + 232) = v8;
  *(void *)(v3 + 240) = v11;
  *(void *)(v3 + 296) = &type metadata for DataTypeDetailConfiguration.DescriptionComponent;
  *(void *)(v3 + 304) = &protocol witness table for DataTypeDetailConfiguration.DescriptionComponent;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v8;
  *(void *)(v3 + 272) = sub_1AD326A54;
  *(void *)(v3 + 280) = v12;
  *(void *)(v3 + 288) = 3;
  *(void *)(v3 + 336) = &type metadata for DataTypeDetailConfiguration.ArticlesComponent;
  *(void *)(v3 + 344) = &protocol witness table for DataTypeDetailConfiguration.ArticlesComponent;
  uint64_t v13 = swift_allocObject();
  *(void *)(v3 + 312) = v13;
  *(void *)(v13 + 16) = v8;
  *(unsigned char *)(v13 + 24) = 0;
  *(void *)(v13 + 40) = 0;
  *(void *)(v13 + 48) = 0;
  *(void *)(v13 + 32) = 3;
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1AD74C350;
  *(void *)(v14 + 56) = &type metadata for DataTypeDetailConfiguration.AppsComponent;
  *(void *)(v14 + 64) = &protocol witness table for DataTypeDetailConfiguration.AppsComponent;
  *(void *)(v14 + 32) = v8;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1AD7511A0;
  type metadata accessor for DataTypeDetailViewController();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v17 = v8;
  uint64_t v18 = self;
  id v19 = v17;
  id v20 = objc_msgSend(v18, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v21 = sub_1AD73A1D0();
  uint64_t v23 = v22;

  *(void *)(v15 + 56) = &type metadata for DataTypeDetailConfiguration.FavoriteToggleComponent;
  *(void *)(v15 + 64) = &protocol witness table for DataTypeDetailConfiguration.FavoriteToggleComponent;
  uint64_t v24 = (void *)swift_allocObject();
  *(void *)(v15 + 32) = v24;
  v24[2] = v19;
  v24[3] = v21;
  v24[4] = v23;
  v24[5] = 3;
  *(void *)(v15 + 96) = &type metadata for DataTypeDetailConfiguration.DataManagementComponent;
  *(void *)(v15 + 104) = &protocol witness table for DataTypeDetailConfiguration.DataManagementComponent;
  uint64_t v25 = swift_allocObject();
  *(void *)(v15 + 72) = v25;
  *(void *)(v25 + 16) = v19;
  *(unsigned char *)(v25 + 24) = 1;
  *(void *)(v25 + 32) = 0;
  *(void *)(v25 + 40) = 0;
  *(void *)(v25 + 48) = 3;
  *(void *)(v15 + 136) = &type metadata for DataTypeDetailConfiguration.FeatureStatusComponent;
  *(void *)(v15 + 144) = &protocol witness table for DataTypeDetailConfiguration.FeatureStatusComponent;
  *(void *)(v15 + 112) = v19;
  *(unsigned char *)(v15 + 120) = 0;
  *(void *)(v14 + 96) = &type metadata for DataTypeDetailConfiguration.VerticalGroupComponent;
  *(void *)(v14 + 104) = &protocol witness table for DataTypeDetailConfiguration.VerticalGroupComponent;
  *(void *)(v14 + 72) = 0x736E6F6974704FLL;
  *(void *)(v14 + 80) = 0xE700000000000000;
  *(void *)(v14 + 88) = v15;
  *(void *)(v3 + 376) = &type metadata for DataTypeDetailConfiguration.HorizontalGroupComponent;
  *(void *)(v3 + 384) = &protocol witness table for DataTypeDetailConfiguration.HorizontalGroupComponent;
  strcpy((char *)(v3 + 352), "AppsAndOptions");
  *(unsigned char *)(v3 + 367) = -18;
  *(void *)(v3 + 368) = v14;
  id v26 = v19;
  uint64_t result = sub_1AD73AF40();
  *(void *)(v3 + 424) = &protocol witness table for DataTypeDetailConfiguration.PromptsComponent;
  *(void *)(v3 + 392) = v26;
  *(void *)(v3 + 400) = result;
  *(void *)(v3 + 408) = v28;
  *(void *)(v3 + 416) = &type metadata for DataTypeDetailConfiguration.PromptsComponent;
  *a2 = v3;
  return result;
}

uint64_t static DataTypeDetailConfiguration.standardWithSampleList(sampleType:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  static DataTypeDetailConfiguration.standardWithChart(hkType:)(a1, a2);
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  v15[3] = &type metadata for DataTypeDetailConfiguration.SampleListComponent;
  v15[4] = &protocol witness table for DataTypeDetailConfiguration.SampleListComponent;
  uint64_t v3 = (_OWORD *)swift_allocObject();
  v15[0] = v3;
  memset(&v12[8], 0, 40);
  *(void *)uint64_t v12 = a1;
  id v4 = a1;
  sub_1AD326B74((uint64_t)v13, (uint64_t)&v12[8]);
  long long v5 = *(_OWORD *)&v12[16];
  v3[1] = *(_OWORD *)v12;
  v3[2] = v5;
  v3[3] = *(_OWORD *)&v12[32];
  sub_1AD32623C(0x7472616843, (uint64_t *)0xE500000000000000, (uint64_t)v15);
  sub_1AD326C6C((uint64_t)v15);
  id v6 = objc_msgSend(self, sel_clearColor);
  sub_1AD1A88FC();
  uint64_t v7 = sub_1AD73F9E0();
  *(void *)&v12[24] = &type metadata for DataTypeDetailConfiguration.MessageButtonComponent;
  *(void *)&v12[32] = &protocol witness table for DataTypeDetailConfiguration.MessageButtonComponent;
  *(void *)uint64_t v12 = v4;
  *(void *)&v12[8] = v6;
  *(void *)&v12[16] = v7;
  id v8 = v4;
  sub_1AD32623C(0x426567617373654DLL, (uint64_t *)0xED00006E6F747475, (uint64_t)v12);
  sub_1AD326C6C((uint64_t)v12);
  *(void *)&v12[24] = &type metadata for DataTypeDetailConfiguration.DataManagementComponent;
  *(void *)&v12[32] = &protocol witness table for DataTypeDetailConfiguration.DataManagementComponent;
  uint64_t v9 = swift_allocObject();
  *(void *)uint64_t v12 = v9;
  *(void *)(v9 + 16) = v8;
  *(unsigned char *)(v9 + 24) = 0;
  *(void *)(v9 + 32) = 0;
  *(void *)(v9 + 40) = 0;
  *(void *)(v9 + 48) = 3;
  id v10 = v8;
  sub_1AD32623C(0x616E614D61746144, (uint64_t *)0xEE00746E656D6567, (uint64_t)v12);
  return sub_1AD326C6C((uint64_t)v12);
}

uint64_t sub_1AD32623C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v8 = *(void *)(*v4 + 16);
  uint64_t v26 = *v4 + 32;
  uint64_t v28 = *v4;
  swift_bridgeObjectRetain();
  unint64_t v9 = 0;
  if (v8) {
    goto LABEL_3;
  }
LABEL_2:
  long long v38 = 0u;
  long long v39 = 0u;
  unint64_t v9 = v8;
  long long v37 = 0u;
  while (1)
  {
    sub_1AD326D04((uint64_t)&v37, (uint64_t)&v40);
    uint64_t v5 = v42;
    if (!v42)
    {
      swift_bridgeObjectRelease();
      return v5 != 0;
    }
    unint64_t v29 = v40;
    sub_1AD20FE90(&v41, (uint64_t)v31);
    sub_1AD1FFE38((uint64_t)v31, (uint64_t)v30);
    sub_1AD2196B8(0, &qword_1EB73A4A8);
    sub_1AD326E54();
    if (swift_dynamicCast())
    {
      sub_1AD326FBC(&v34, &v37);
      uint64_t v10 = *((void *)&v38 + 1);
      uint64_t v11 = v39;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v37, *((uint64_t *)&v38 + 1));
      if ((*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))(v11 + 32))(a1, a2, a3, v10, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = *((void *)&v38 + 1);
        uint64_t v19 = *((void *)&v39 + 1);
        id v20 = __swift_project_boxed_opaque_existential_1(&v37, *((uint64_t *)&v38 + 1));
        *((void *)&v35 + 1) = v18;
        *(void *)&long long v36 = v19;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v34);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(boxed_opaque_existential_1, v20, v18);
        id v4 = v25;
        uint64_t v3 = *v25;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v25 = v3;
        if ((result & 1) == 0) {
          goto LABEL_35;
        }
        unint64_t v23 = v29;
        if ((v29 & 0x8000000000000000) == 0) {
          goto LABEL_27;
        }
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
    }
    else
    {
      long long v35 = 0u;
      long long v36 = 0u;
      long long v34 = 0u;
      sub_1AD326EB4((uint64_t)&v34);
    }
    uint64_t v12 = v32;
    uint64_t v13 = v33;
    __swift_project_boxed_opaque_existential_1(v31, v32);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13) == a1 && v14 == a2)
    {
      swift_bridgeObjectRelease();
LABEL_19:
      swift_bridgeObjectRelease();
      sub_1AD326F2C(a3, (uint64_t)&v34);
      id v4 = v25;
      if (*((void *)&v35 + 1))
      {
        sub_1AD20FE90(&v34, (uint64_t)&v37);
        uint64_t v3 = *v25;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v25 = v3;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          goto LABEL_32;
        }
        unint64_t v17 = v29;
        if ((v29 & 0x8000000000000000) == 0) {
          goto LABEL_22;
        }
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      sub_1AD326C6C((uint64_t)&v34);
      sub_1AD38F7D8(v29, (uint64_t)&v37);
LABEL_29:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      return v5 != 0;
    }
    id v4 = v14;
    uint64_t v3 = sub_1AD740BC0();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_19;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    if (v9 == v8) {
      goto LABEL_2;
    }
LABEL_3:
    if (v9 >= *(void *)(v28 + 16)) {
      break;
    }
    sub_1AD1FFE38(v26 + 40 * v9, (uint64_t)&v34 + 8);
    *(void *)&long long v37 = v9;
    sub_1AD20FE90((long long *)((char *)&v34 + 8), (uint64_t)&v37 + 8);
    ++v9;
  }
  __break(1u);
LABEL_32:
  uint64_t v3 = (uint64_t)sub_1AD398B30((void *)v3);
  uint64_t *v4 = v3;
  unint64_t v17 = v29;
  if ((v29 & 0x8000000000000000) != 0) {
    goto LABEL_33;
  }
LABEL_22:
  if (v17 < *(void *)(v3 + 16))
  {
    __swift_assign_boxed_opaque_existential_1((uint64_t *)(v3 + 40 * v17 + 32), (uint64_t *)&v37);
    goto LABEL_29;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  uint64_t result = (uint64_t)sub_1AD398B30((void *)v3);
  uint64_t v3 = result;
  uint64_t *v4 = result;
  unint64_t v23 = v29;
  if ((v29 & 0x8000000000000000) != 0) {
    goto LABEL_36;
  }
LABEL_27:
  if (v23 < *(void *)(v3 + 16))
  {
    uint64_t v24 = v3 + 40 * v23 + 32;
    __swift_destroy_boxed_opaque_existential_1(v24);
    sub_1AD20FE90(&v34, v24);
    goto LABEL_29;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1AD326610(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v4 + 16);
  unint64_t v8 = (uint64_t *)(v4 + 16);
  unint64_t v10 = *(void *)(v9 + 16);
  uint64_t v28 = v9 + 32;
  uint64_t v27 = v8;
  uint64_t v30 = v9;
  swift_bridgeObjectRetain();
  unint64_t v11 = 0;
  if (v10) {
    goto LABEL_3;
  }
LABEL_2:
  long long v40 = 0u;
  long long v41 = 0u;
  unint64_t v11 = v10;
  long long v39 = 0u;
  while (1)
  {
    sub_1AD326D04((uint64_t)&v39, (uint64_t)&v42);
    uint64_t v5 = v44;
    if (!v44)
    {
      swift_bridgeObjectRelease();
      return v5 != 0;
    }
    unint64_t v31 = v42;
    sub_1AD20FE90(&v43, (uint64_t)v33);
    sub_1AD1FFE38((uint64_t)v33, (uint64_t)v32);
    sub_1AD2196B8(0, &qword_1EB73A4A8);
    sub_1AD326E54();
    if (swift_dynamicCast())
    {
      sub_1AD326FBC(&v36, &v39);
      uint64_t v12 = *((void *)&v40 + 1);
      uint64_t v13 = v41;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v39, *((uint64_t *)&v40 + 1));
      if ((*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))(v13 + 32))(a1, a2, a3, v12, v13))
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = *((void *)&v40 + 1);
        uint64_t v21 = *((void *)&v41 + 1);
        uint64_t v22 = __swift_project_boxed_opaque_existential_1(&v39, *((uint64_t *)&v40 + 1));
        *((void *)&v37 + 1) = v20;
        *(void *)&long long v38 = v21;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v36);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(boxed_opaque_existential_1, v22, v20);
        unint64_t v8 = v27;
        uint64_t v3 = *v27;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v27 = v3;
        if ((result & 1) == 0) {
          goto LABEL_35;
        }
        unint64_t v25 = v31;
        if ((v31 & 0x8000000000000000) == 0) {
          goto LABEL_27;
        }
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
    }
    else
    {
      long long v37 = 0u;
      long long v38 = 0u;
      long long v36 = 0u;
      sub_1AD326EB4((uint64_t)&v36);
    }
    uint64_t v14 = v34;
    uint64_t v15 = v35;
    __swift_project_boxed_opaque_existential_1(v33, v34);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15) == a1 && v16 == a2)
    {
      swift_bridgeObjectRelease();
LABEL_19:
      swift_bridgeObjectRelease();
      sub_1AD326F2C(a3, (uint64_t)&v36);
      unint64_t v8 = v27;
      if (*((void *)&v37 + 1))
      {
        sub_1AD20FE90(&v36, (uint64_t)&v39);
        uint64_t v3 = *v27;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v27 = v3;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          goto LABEL_32;
        }
        unint64_t v19 = v31;
        if ((v31 & 0x8000000000000000) == 0) {
          goto LABEL_22;
        }
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      sub_1AD326C6C((uint64_t)&v36);
      sub_1AD38F7D8(v31, (uint64_t)&v39);
LABEL_29:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      return v5 != 0;
    }
    unint64_t v8 = v16;
    uint64_t v3 = sub_1AD740BC0();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_19;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    if (v11 == v10) {
      goto LABEL_2;
    }
LABEL_3:
    if (v11 >= *(void *)(v30 + 16)) {
      break;
    }
    sub_1AD1FFE38(v28 + 40 * v11, (uint64_t)&v36 + 8);
    *(void *)&long long v39 = v11;
    sub_1AD20FE90((long long *)((char *)&v36 + 8), (uint64_t)&v39 + 8);
    ++v11;
  }
  __break(1u);
LABEL_32:
  uint64_t v3 = (uint64_t)sub_1AD398B30((void *)v3);
  uint64_t *v8 = v3;
  unint64_t v19 = v31;
  if ((v31 & 0x8000000000000000) != 0) {
    goto LABEL_33;
  }
LABEL_22:
  if (v19 < *(void *)(v3 + 16))
  {
    __swift_assign_boxed_opaque_existential_1((uint64_t *)(v3 + 40 * v19 + 32), (uint64_t *)&v39);
    goto LABEL_29;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  uint64_t result = (uint64_t)sub_1AD398B30((void *)v3);
  uint64_t v3 = result;
  uint64_t *v8 = result;
  unint64_t v25 = v31;
  if ((v31 & 0x8000000000000000) != 0) {
    goto LABEL_36;
  }
LABEL_27:
  if (v25 < *(void *)(v3 + 16))
  {
    uint64_t v26 = v3 + 40 * v25 + 32;
    __swift_destroy_boxed_opaque_existential_1(v26);
    sub_1AD20FE90(&v36, v26);
    goto LABEL_29;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t static DataTypeDetailConfiguration.ComponentIdentifier.options.getter()
{
  return 0x736E6F6974704FLL;
}

uint64_t static DataTypeDetailConfiguration.ComponentIdentifier.appsAndOptions.getter()
{
  return 0x4F646E4173707041;
}

uint64_t sub_1AD326A1C()
{
  return swift_deallocObject();
}

void sub_1AD326A54(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AD6C8B10(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1AD326A5C()
{
  if (*(void *)(v0 + 48) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1AD326AA4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD326AE4()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1AD326B2C()
{
  if (*(void *)(v0 + 48)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  }
  return swift_deallocObject();
}

uint64_t sub_1AD326B74(uint64_t a1, uint64_t a2)
{
  sub_1AD326C04(0, &qword_1E9A32A70, (unint64_t *)&unk_1E9A2DA00, (uint64_t)&protocol descriptor for SampleMetadataViewControllerProviding, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1AD326C04(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1AD2196B8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1AD326C6C(uint64_t a1)
{
  sub_1AD326C04(0, (unint64_t *)&unk_1EB73A4B0, &qword_1EB73A4A8, (uint64_t)&protocol descriptor for DataTypeDetailComponent, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for DataTypeDetailConfiguration.ComponentIdentifier()
{
  return &type metadata for DataTypeDetailConfiguration.ComponentIdentifier;
}

uint64_t sub_1AD326D04(uint64_t a1, uint64_t a2)
{
  sub_1AD326D84(0, &qword_1EB73C0D8, (void (*)(uint64_t))sub_1AD326DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AD326D84(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AD740340();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1AD326DD8()
{
  if (!qword_1EB73C0D0)
  {
    sub_1AD2196B8(255, &qword_1EB73A4A8);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB73C0D0);
    }
  }
}

unint64_t sub_1AD326E54()
{
  unint64_t result = qword_1EB73B7B8;
  if (!qword_1EB73B7B8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB73B7B8);
  }
  return result;
}

uint64_t sub_1AD326EB4(uint64_t a1)
{
  sub_1AD326D84(0, &qword_1EB73B7C0, (void (*)(uint64_t))sub_1AD326E54);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD326F2C(uint64_t a1, uint64_t a2)
{
  sub_1AD326C04(0, (unint64_t *)&unk_1EB73A4B0, &qword_1EB73A4A8, (uint64_t)&protocol descriptor for DataTypeDetailComponent, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_1AD326FBC(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_1AD326FD4()
{
  uint64_t result = sub_1AD73F180();
  qword_1EB73D198 = result;
  return result;
}

double sub_1AD32700C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthExperienceUI21ScaledLabelConstraint_rawConstant;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_1AD327054(double a1)
{
  long long v3 = (double *)&v1[OBJC_IVAR____TtC18HealthExperienceUI21ScaledLabelConstraint_rawConstant];
  swift_beginAccess();
  double *v3 = a1;
  uint64_t v4 = &v1[OBJC_IVAR____TtC18HealthExperienceUI21ScaledLabelConstraint_referenceLabel];
  swift_beginAccess();
  uint64_t v5 = (void *)MEMORY[0x1B3E68580](v4);
  if (v5)
  {
    id v6 = v5;
    id v7 = objc_msgSend(v5, sel_font);
    if (v7)
    {
      uint64_t v8 = v7;
      objc_msgSend(v7, sel__scaledValueForValue_, *v3);
      double v10 = v9;

      objc_msgSend(v1, sel_setConstant_, v10);
    }
    else
    {
      __break(1u);
    }
  }
}

void (*sub_1AD327130(void *a1))(void **a1, char a2)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC18HealthExperienceUI21ScaledLabelConstraint_rawConstant;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1AD32719C;
}

void sub_1AD32719C(void **a1, char a2)
{
  long long v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3] + OBJC_IVAR____TtC18HealthExperienceUI21ScaledLabelConstraint_referenceLabel;
    swift_beginAccess();
    uint64_t v5 = (void *)MEMORY[0x1B3E68580](v4);
    if (v5)
    {
      id v6 = v5;
      id v7 = objc_msgSend(v5, sel_font);
      if (!v7)
      {
        __break(1u);
        return;
      }
      uint64_t v8 = v7;
      double v9 = (char *)v3[3];
      objc_msgSend(v7, sel__scaledValueForValue_, *(double *)&v9[v3[4]]);
      double v11 = v10;

      objc_msgSend(v9, sel_setConstant_, v11);
    }
  }
  free(v3);
}

uint64_t sub_1AD3272D4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthExperienceUI21ScaledLabelConstraint_referenceLabel;
  swift_beginAccess();
  return MEMORY[0x1B3E68580](v1);
}

void sub_1AD327374(void *a1)
{
}

void (*sub_1AD3273CC(void *a1))(id **a1, char a2)
{
  long long v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC18HealthExperienceUI21ScaledLabelConstraint_referenceLabel;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1B3E68580](v5);
  return sub_1AD327450;
}

void sub_1AD327450(id **a1, char a2)
{
  long long v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }
  free(v3);
}

uint64_t type metadata accessor for ScaledLabelConstraint()
{
  return self;
}

void sub_1AD3275CC()
{
  objc_msgSend(v0, sel_constant);
  uint64_t v2 = v1;
  long long v3 = (double *)&v0[OBJC_IVAR____TtC18HealthExperienceUI21ScaledLabelConstraint_rawConstant];
  swift_beginAccess();
  *(void *)long long v3 = v2;
  id v4 = &v0[OBJC_IVAR____TtC18HealthExperienceUI21ScaledLabelConstraint_referenceLabel];
  swift_beginAccess();
  uint64_t v5 = (void *)MEMORY[0x1B3E68580](v4);
  if (!v5) {
    goto LABEL_4;
  }
  id v6 = v5;
  id v7 = objc_msgSend(v5, sel_font);
  if (v7)
  {
    uint64_t v8 = v7;
    objc_msgSend(v7, sel__scaledValueForValue_, *v3);
    double v10 = v9;

    objc_msgSend(v0, sel_setConstant_, v10);
LABEL_4:
    id v11 = objc_msgSend(self, sel_defaultCenter);
    objc_msgSend(v11, sel_addObserver_selector_name_object_, v0, sel_textSizeChanged, *MEMORY[0x1E4FB27A8], 0);

    return;
  }
  __break(1u);
}

void sub_1AD327708()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC18HealthExperienceUI21ScaledLabelConstraint_referenceLabel];
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x1B3E68580](v1);
  if (v2)
  {
    long long v3 = v2;
    id v4 = objc_msgSend(v2, sel_font);
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = (double *)&v0[OBJC_IVAR____TtC18HealthExperienceUI21ScaledLabelConstraint_rawConstant];
      swift_beginAccess();
      objc_msgSend(v5, sel__scaledValueForValue_, *v6);
      double v8 = v7;

      objc_msgSend(v0, sel_setConstant_, v8);
    }
    else
    {
      __break(1u);
    }
  }
}

id ScaledLabelConstraint.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id ScaledLabelConstraint.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI21ScaledLabelConstraint_rawConstant] = 0;
  swift_unknownObjectWeakInit();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScaledLabelConstraint();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ScaledLabelConstraint.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScaledLabelConstraint();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1AD327944@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  long long v3 = (double *)(*a1 + OBJC_IVAR____TtC18HealthExperienceUI21ScaledLabelConstraint_rawConstant);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

void sub_1AD327998(double *a1)
{
}

uint64_t sub_1AD3279C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18HealthExperienceUI21ScaledLabelConstraint_referenceLabel;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1B3E68580](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1AD327A18()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t method lookup function for ScaledLabelConstraint(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ScaledLabelConstraint);
}

uint64_t dispatch thunk of ScaledLabelConstraint.rawConstant.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ScaledLabelConstraint.rawConstant.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ScaledLabelConstraint.rawConstant.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ScaledLabelConstraint.referenceLabel.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ScaledLabelConstraint.referenceLabel.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ScaledLabelConstraint.referenceLabel.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t UIViewController.resolve<A>(providerBlock:resolverBlock:)@<X0>(void (*a1)(void *)@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, char *a5@<X8>)
{
  uint64_t v86 = a3;
  uint64_t v87 = a2;
  uint64_t v89 = a5;
  uint64_t v8 = sub_1AD740340();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v88 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v85 = (char *)&v76 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v76 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  unint64_t v19 = (char *)&v76 - v18;
  uint64_t v20 = *(void *)(a4 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v17);
  uint64_t v81 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v83 = (char *)&v76 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v84 = (char *)&v76 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v76 - v27;
  unint64_t v93 = sub_1AD205938();
  unint64_t v97 = v93;
  v96[0] = v5;
  id v29 = v5;
  v92 = a1;
  a1(v96);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
  uint64_t v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  uint64_t v95 = v20 + 48;
  if (v94(v19, 1, a4) != 1)
  {
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v44(v28, v19, a4);
    uint64_t v45 = v89;
    v44(v89, v28, a4);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v45, 0, 1, a4);
  }
  id v90 = *(void (**)(char *, uint64_t))(v9 + 8);
  v90(v19, v8);
  id v30 = objc_msgSend(v29, sel_navigationController);
  uint64_t v80 = v20;
  uint64_t v91 = v9 + 8;
  id v82 = v29;
  if (!v30)
  {
    unint64_t v47 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  unint64_t v31 = v29;
  uint64_t v78 = v8;
  id v79 = v30;
  id v32 = objc_msgSend(v30, sel_viewControllers);
  unint64_t v33 = sub_1AD73F4B0();

  id v34 = v31;
  sub_1AD328D90(v33);
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  unint64_t v42 = v41;
  swift_bridgeObjectRelease();

  if (v42)
  {
    uint64_t v77 = v38;
    sub_1AD740BF0();
    swift_unknownObjectRetain_n();
    uint64_t v48 = swift_dynamicCastClass();
    if (!v48)
    {
      swift_unknownObjectRelease();
      uint64_t v48 = MEMORY[0x1E4FBC860];
    }
    uint64_t v49 = *(void *)(v48 + 16);
    swift_release();
    if (__OFSUB__(v42 >> 1, v40))
    {
      __break(1u);
    }
    else if (v49 == (v42 >> 1) - v40)
    {
      unint64_t v43 = swift_dynamicCastClass();
      if (!v43)
      {
        swift_unknownObjectRelease();
        unint64_t v43 = MEMORY[0x1E4FBC860];
      }
      goto LABEL_13;
    }
    swift_unknownObjectRelease();
    uint64_t v38 = v77;
  }
  unint64_t v43 = sub_1AD2A57BC(v36, v38, v40, v42);
LABEL_13:
  swift_unknownObjectRelease();
  unint64_t v47 = sub_1AD32853C(v43, (uint64_t (*)(unint64_t))sub_1AD2A57A4, (uint64_t (*)(uint64_t))sub_1AD398B2C);

  uint64_t v8 = v78;
LABEL_14:
  uint64_t v50 = a4;
  uint64_t v51 = v8;
  if (v47 >> 62) {
    goto LABEL_36;
  }
  uint64_t v52 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v52)
  {
    uint64_t v53 = 4;
    while (1)
    {
      uint64_t v54 = v53 - 4;
      if ((v47 & 0xC000000000000001) == 0) {
        break;
      }
      id v55 = (id)MEMORY[0x1B3E669F0](v53 - 4, v47);
      uint64_t v56 = v53 - 3;
      if (__OFADD__(v54, 1)) {
        goto LABEL_35;
      }
LABEL_22:
      unint64_t v97 = v93;
      v96[0] = v55;
      id v57 = v55;
      v92(v96);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
      if (v94(v16, 1, v50) != 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v66 = v80;
        uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
        uint64_t v68 = v84;
        v67(v84, v16, v50);
        uint64_t v69 = v89;
        v67(v89, v68, v50);
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v69, 0, 1, v50);
      }
      v90(v16, v51);
      ++v53;
      if (v56 == v52) {
        goto LABEL_24;
      }
    }
    id v55 = *(id *)(v47 + 8 * v53);
    uint64_t v56 = v53 - 3;
    if (!__OFADD__(v54, 1)) {
      goto LABEL_22;
    }
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1AD7408D0();
    swift_bridgeObjectRelease();
  }
LABEL_24:
  swift_bridgeObjectRelease();
  id v58 = objc_msgSend(v82, sel_parentViewController);
  uint64_t v60 = v88;
  uint64_t v59 = v89;
  uint64_t v61 = v87;
  if (v58)
  {
    os_log_t v62 = v58;
    uint64_t v63 = v85;
    v87();

    if (v94(v63, 1, v50) != 1)
    {
      uint64_t v70 = v80;
      uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
      uint64_t v72 = v83;
      v71(v83, v63, v50);
      unint64_t v73 = v59;
      unint64_t v74 = v72;
      goto LABEL_34;
    }
    v90(v63, v51);
  }
  id v64 = objc_msgSend(v82, sel_presentingViewController);
  if (!v64) {
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56))(v59, 1, 1, v50);
  }
  uint64_t v65 = v64;
  v61();

  if (v94(v60, 1, v50) == 1)
  {
    v90(v60, v51);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56))(v59, 1, 1, v50);
  }
  uint64_t v70 = v80;
  unint64_t v75 = v81;
  uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
  v71(v81, v60, v50);
  unint64_t v73 = v59;
  unint64_t v74 = v75;
LABEL_34:
  v71(v73, v74, v50);
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v59, 0, 1, v50);
}

uint64_t sub_1AD328384(unint64_t a1)
{
  return sub_1AD32853C(a1, (uint64_t (*)(unint64_t))sub_1AD2A57A4, (uint64_t (*)(uint64_t))sub_1AD398B2C);
}

uint64_t sub_1AD3283B0(uint64_t result)
{
  id v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  unint64_t v5 = v2 - 1;
  uint64_t v6 = 40 * v2 - 8;
  for (uint64_t i = 4; ; i += 5)
  {
    if (v3 == v5) {
      goto LABEL_4;
    }
    unint64_t v8 = v1[2];
    if (v3 >= v8) {
      break;
    }
    uint64_t result = sub_1AD1FFE38((uint64_t)&v1[i], (uint64_t)v10);
    if (v5 >= v8) {
      goto LABEL_14;
    }
    sub_1AD1FFE38((uint64_t)v1 + v6, (uint64_t)v9);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1AD398B80(v1);
      id v1 = (void *)result;
    }
    if (v3 >= v1[2]) {
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v1[i]);
    uint64_t result = sub_1AD20FE90(v9, (uint64_t)&v1[i]);
    if (v5 >= v1[2]) {
      goto LABEL_16;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v1 + v6);
    uint64_t result = sub_1AD20FE90(v10, (uint64_t)v1 + v6);
LABEL_4:
    ++v3;
    --v5;
    v6 -= 40;
    if (v4 == v3) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1AD3284E4(unint64_t a1)
{
  return sub_1AD32853C(a1, (uint64_t (*)(unint64_t))sub_1AD2A62FC, (uint64_t (*)(uint64_t))sub_1AD398B2C);
}

uint64_t sub_1AD328510(unint64_t a1)
{
  return sub_1AD32853C(a1, (uint64_t (*)(unint64_t))sub_1AD2A6544, sub_1AD398B2C);
}

uint64_t sub_1AD32853C(unint64_t a1, uint64_t (*a2)(unint64_t), uint64_t (*a3)(uint64_t))
{
  unint64_t v4 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0) {
    goto LABEL_39;
  }
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  uint64_t v21 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v5 & 0x4000000000000000) == 0)
  {
    uint64_t v6 = *(void *)(v5 + 16);
    swift_bridgeObjectRelease();
    unint64_t v7 = (unint64_t)v6 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain();
    uint64_t v6 = sub_1AD7408D0();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v20 = v6 >= 0 ? v6 : v6 + 1;
    if (v6 < -1) {
      __break(1u);
    }
    unint64_t v7 = v20 >> 1;
LABEL_6:
    if ((unint64_t)(v6 + 1) < 3) {
      return v5;
    }
    unint64_t v8 = 0;
    while (1)
    {
      unint64_t v10 = v8 + 1;
      unint64_t v4 = v6 - (v8 + 1);
      if (__OFSUB__(v6, v8 + 1)) {
        break;
      }
      if (v8 != v4)
      {
        uint64_t v11 = v21;
        if ((v21 & 0xC000000000000001) != 0)
        {
          uint64_t v14 = MEMORY[0x1B3E669F0](v8, v21);
          id v15 = (id)MEMORY[0x1B3E669F0](v6 - (v8 + 1), v21);
        }
        else
        {
          if ((v8 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          unint64_t v12 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v8 >= v12) {
            goto LABEL_34;
          }
          id v13 = *(id *)(v21 + 8 * v8 + 32);
          if ((v4 & 0x8000000000000000) != 0) {
            goto LABEL_35;
          }
          if (v4 >= v12) {
            goto LABEL_37;
          }
          uint64_t v14 = (uint64_t)v13;
          id v15 = *(id *)(v21 + 32 + 8 * v4);
        }
        id v16 = v15;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          uint64_t v11 = a3(v21);
          uint64_t v21 = v11;
        }
        uint64_t v17 = (v11 & 0xFFFFFFFFFFFFFF8) + 8 * v8;

        *(void *)(v17 + 32) = v16;
        sub_1AD73F4D0();
        uint64_t v18 = v21;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          uint64_t v18 = a3(v21);
          uint64_t v21 = v18;
        }
        if ((v4 & 0x8000000000000000) != 0) {
          goto LABEL_36;
        }
        if (v4 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_38;
        }
        uint64_t v9 = (v18 & 0xFFFFFFFFFFFFFF8) + 8 * v4;

        *(void *)(v9 + 32) = v14;
        sub_1AD73F4D0();
      }
      unint64_t v8 = v10;
      if (v7 == v10) {
        return v21;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    uint64_t v5 = a2(v4);
    uint64_t v21 = v5;
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
  }
}

uint64_t sub_1AD328770(uint64_t result)
{
  id v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  for (unint64_t i = v2 + 3; ; --i)
  {
    if (v3 == i - 4) {
      goto LABEL_5;
    }
    unint64_t v6 = v1[2];
    if (v3 >= v6) {
      break;
    }
    if (i - 4 >= v6) {
      goto LABEL_12;
    }
    uint64_t v7 = v1[v3 + 4];
    uint64_t v8 = v1[i];
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1AD398BD0(v1);
      id v1 = (void *)result;
    }
    v1[v3 + 4] = v8;
    v1[i] = v7;
LABEL_5:
    if (v4 == ++v3) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t UIViewController.resolutionDebugDescription.getter()
{
  unint64_t v3 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  sub_1AD740680();
  sub_1AD73F300();
  uint64_t v35 = ObjectType;
  swift_getMetatypeMetadata();
  sub_1AD73F220();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  sub_1AD73F300();
  uint64_t v5 = (uint64_t *)objc_msgSend(v0, sel_navigationController);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (!v5)
  {
    unint64_t v12 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  uint64_t v7 = v5;
  id v8 = objc_msgSend(v5, sel_viewControllers);
  sub_1AD205938();
  unint64_t v9 = sub_1AD73F4B0();

  id v10 = v3;
  sub_1AD328D90(v9);
  unint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v1 = v15;
  unint64_t v2 = v16;
  swift_bridgeObjectRelease();

  if (v2)
  {
    sub_1AD740BF0();
    swift_unknownObjectRetain_n();
    uint64_t v18 = swift_dynamicCastClass();
    if (!v18)
    {
      swift_unknownObjectRelease();
      uint64_t v18 = MEMORY[0x1E4FBC860];
    }
    uint64_t v19 = *(void *)(v18 + 16);
    swift_release();
    if (__OFSUB__(v2 >> 1, v1)) {
      goto LABEL_34;
    }
    if (v19 != (v2 >> 1) - v1) {
      goto LABEL_35;
    }
    unint64_t v17 = swift_dynamicCastClass();
    if (!v17)
    {
      swift_unknownObjectRelease();
      unint64_t v17 = MEMORY[0x1E4FBC860];
    }
    goto LABEL_11;
  }
  while (1)
  {
    unint64_t v17 = sub_1AD2A57BC(v12, v14, v1, v2);
LABEL_11:
    swift_unknownObjectRelease();
    unint64_t v12 = sub_1AD32853C(v17, (uint64_t (*)(unint64_t))sub_1AD2A57A4, (uint64_t (*)(uint64_t))sub_1AD398B2C);

LABEL_12:
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1AD7408D0();
      swift_bridgeObjectRelease();
      if (!v14)
      {
LABEL_31:
        swift_bridgeObjectRelease();
        uint64_t v20 = MEMORY[0x1E4FBC860];
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v14) {
        goto LABEL_31;
      }
    }
    uint64_t v35 = v6;
    uint64_t v7 = &v35;
    sub_1AD2F5810(0, v14 & ~(v14 >> 63), 0);
    if ((v14 & 0x8000000000000000) == 0) {
      break;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_unknownObjectRelease();
  }
  uint64_t v20 = v35;
  if ((v12 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v14; ++i)
    {
      MEMORY[0x1B3E669F0](i, v12);
      uint64_t v22 = swift_getObjectType();
      swift_unknownObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v35 = v20;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1AD2F5810(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v35;
      }
      unint64_t v25 = *(void *)(v20 + 16);
      unint64_t v24 = *(void *)(v20 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1AD2F5810(v24 > 1, v25 + 1, 1);
        uint64_t v20 = v35;
      }
      *(void *)(v20 + 16) = v25 + 1;
      *(void *)(v20 + 8 * v25 + 32) = v22;
    }
  }
  else
  {
    for (uint64_t j = 0; j != v14; ++j)
    {
      uint64_t v27 = swift_getObjectType();
      char v28 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v35 = v20;
      if ((v28 & 1) == 0)
      {
        sub_1AD2F5810(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v35;
      }
      unint64_t v30 = *(void *)(v20 + 16);
      unint64_t v29 = *(void *)(v20 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1AD2F5810(v29 > 1, v30 + 1, 1);
        uint64_t v20 = v35;
      }
      *(void *)(v20 + 16) = v30 + 1;
      *(void *)(v20 + 8 * v30 + 32) = v27;
    }
  }
  swift_bridgeObjectRelease();
LABEL_32:
  uint64_t v31 = sub_1AD329010(0, (unint64_t *)&qword_1EB739110, (void (*)(uint64_t))sub_1AD205938);
  MEMORY[0x1B3E657F0](v20, v31);
  swift_bridgeObjectRelease();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  sub_1AD73F300();

  sub_1AD328FB8();
  uint64_t v33 = v32;
  uint64_t v35 = v32;
  sub_1AD329010(0, (unint64_t *)&unk_1EB739100, (void (*)(uint64_t))sub_1AD328FB8);
  sub_1AD73F220();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  sub_1AD73F300();

  uint64_t v35 = v33;
  sub_1AD73F220();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  return v36;
}

void sub_1AD328D90(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  uint64_t v3 = a1 & 0xFFFFFFFFFFFFFF8;
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
    {
      uint64_t v5 = 0;
      goto LABEL_16;
    }
LABEL_3:
    sub_1AD205938();
    uint64_t v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        id v6 = (id)MEMORY[0x1B3E669F0](v5, a1);
        swift_bridgeObjectRelease();
      }
      else
      {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      char v7 = sub_1AD740050();

      if (v7) {
        break;
      }
      uint64_t v8 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
        goto LABEL_25;
      }
      ++v5;
      if (v8 == v4)
      {
        uint64_t v5 = v4;
        break;
      }
    }
    if (v5 < 0) {
      goto LABEL_28;
    }
    uint64_t v3 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v2) {
      goto LABEL_13;
    }
LABEL_16:
    uint64_t v10 = *(void *)(v3 + 16);
    goto LABEL_17;
  }
LABEL_25:
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1AD7408D0();
  swift_bridgeObjectRelease();
  if (v4) {
    goto LABEL_3;
  }
  uint64_t v5 = 0;
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1AD7408D0();
  swift_bridgeObjectRelease();
  if (v9 < 0)
  {
LABEL_29:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1AD7408D0();
  swift_bridgeObjectRelease();
LABEL_17:
  if (v10 < v5)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if ((a1 & 0xC000000000000001) != 0 && v5)
  {
    sub_1AD205938();
    uint64_t v11 = 0;
    do
    {
      uint64_t v12 = v11 + 1;
      sub_1AD7406A0();
      uint64_t v11 = v12;
    }
    while (v5 != v12);
  }
  swift_bridgeObjectRetain();
  if (v2)
  {
    sub_1AD7408E0();
    swift_bridgeObjectRelease();
  }
}

void sub_1AD328FB8()
{
  if (!qword_1EB731CF8)
  {
    sub_1AD205938();
    unint64_t v0 = sub_1AD740340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB731CF8);
    }
  }
}

uint64_t sub_1AD329010(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t PluginConfigurationProvider.getCellIndentationLevel(viewModel:)()
{
  return 0;
}

uint64_t PlatformCellHostingConfiguration.delegate.getter()
{
  swift_beginAccess();
  return MEMORY[0x1B3E68580](v0 + 16);
}

uint64_t PlatformCellHostingConfiguration.delegate.setter(uint64_t a1, uint64_t a2)
{
  sub_1AD209B6C(a1, a2);
  return swift_unknownObjectRelease();
}

void (*PlatformCellHostingConfiguration.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1B3E68580](v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1AD329158;
}

void sub_1AD329158(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 24) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t PlatformCellHostingConfiguration.init()()
{
  *(void *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  return v0;
}

uint64_t PlatformCellHostingConfiguration.makeBackgroundConfiguration(cellState:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1AD73CE60();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t PlatformCellHostingConfiguration.makeAccessories()()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t PlatformCellHostingConfiguration.deinit()
{
  sub_1AD24D3D8(v0 + 16);
  return v0;
}

uint64_t PlatformCellHostingConfiguration.__deallocating_deinit()
{
  sub_1AD24D3D8(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1AD3292D8@<X0>(uint64_t a1@<X8>)
{
  return PlatformCellHostingConfiguration.makeBackgroundConfiguration(cellState:)(a1);
}

uint64_t sub_1AD3292F0()
{
  return MEMORY[0x1E4FBC860];
}

void (*sub_1AD329300(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = PlatformCellHostingConfiguration.delegate.modify(v2);
  return sub_1AD24BDC4;
}

uint64_t sub_1AD32935C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AD3293A0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AD3293DC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1B3E68580](v4);
  uint64_t v6 = *(void *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1AD329438(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1AD329494()
{
  return 16;
}

__n128 sub_1AD3294A0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of PluginConfigurationProvider.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PluginConfigurationProvider.makeContentConfiguration(viewModelState:viewContext:cellState:actionHandlerContent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of PluginConfigurationProvider.makeBackgroundConfiguration(cellState:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PluginConfigurationProvider.makeAccessories()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of PluginConfigurationProvider.getCellIndentationLevel(viewModel:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of PluginConfigurationProvider.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of PluginConfigurationProvider.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of PluginConfigurationProvider.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of ContentConfigurationProviderDelegate.providerInvalidatedContentConfiguration()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PluginHostingConfigurationProvider.makeHostingConfiguration(viewModelState:viewContext:cellState:actionHandlerContent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t method lookup function for PlatformCellHostingConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PlatformCellHostingConfiguration);
}

uint64_t dispatch thunk of PlatformCellHostingConfiguration.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1AD3295B4()
{
  return swift_getOpaqueTypeConformance2();
}

void CollectionViewHeaderItem.init(text:makeConfiguration:respectsSuperviewXLayoutMargins:iconConfig:accessories:automationIdentifier:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v14 = *(void **)a6;
  uint64_t v52 = *(void **)(a6 + 8);
  uint64_t v15 = *(void *)(a6 + 24);
  uint64_t v43 = *(void *)(a6 + 16);
  uint64_t v16 = *(void *)(a6 + 32);
  uint64_t v17 = *(void *)(a6 + 40);
  uint64_t v19 = *(void *)(a6 + 48);
  uint64_t v18 = *(void *)(a6 + 56);
  char v50 = *(unsigned char *)(a6 + 64);
  type metadata accessor for CollectionViewHeaderCell();
  sub_1AD32C680(0, (unint64_t *)&qword_1EB73A670, (void (*)(void))type metadata accessor for CollectionViewHeaderCell);
  uint64_t v39 = sub_1AD73F220();
  v70[0] = v39;
  v70[1] = v20;
  v70[2] = a1;
  v70[3] = a2;
  uint64_t v53 = v14;
  uint64_t v54 = a2;
  v70[4] = a3;
  v70[5] = a4;
  char v71 = a5;
  uint64_t v72 = v14;
  unint64_t v73 = v52;
  uint64_t v74 = v43;
  uint64_t v46 = v15;
  uint64_t v47 = v16;
  uint64_t v75 = v15;
  uint64_t v76 = v16;
  uint64_t v42 = a7;
  uint64_t v77 = v17;
  uint64_t v78 = v19;
  uint64_t v51 = v19;
  uint64_t v21 = v18;
  uint64_t v79 = v18;
  char v80 = v50;
  uint64_t v82 = 0;
  uint64_t v83 = 0;
  uint64_t v81 = a7;
  uint64_t v40 = a1;
  uint64_t v45 = v20;
  if (a10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v22 = v47;
    uint64_t v23 = v17;
    sub_1AD2DBAC0(v14, v52);
    sub_1AD2DB9FC((uint64_t)v70);
    uint64_t v24 = a10;
    uint64_t v25 = v43;
    uint64_t v26 = v21;
    uint64_t v27 = a8;
  }
  else
  {
    *(void *)&long long v56 = a1;
    *((void *)&v56 + 1) = a2;
    uint64_t v68 = 32;
    unint64_t v69 = 0xE100000000000000;
    uint64_t v66 = 0;
    unint64_t v67 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v22 = v47;
    uint64_t v23 = v17;
    sub_1AD2DBAC0(v14, v52);
    sub_1AD2DB9FC((uint64_t)v70);
    sub_1AD20F9FC();
    uint64_t v27 = sub_1AD740400();
    uint64_t v24 = v28;
    uint64_t v25 = v43;
    uint64_t v26 = v21;
  }
  sub_1AD1E4524();
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1AD74C370;
  *(void *)(v29 + 32) = v27;
  *(void *)(v29 + 40) = v24;
  swift_bridgeObjectRetain();
  unint64_t v30 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  id v31 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v31)
  {
    char v32 = a5 & 1;
    uint64_t v49 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    uint64_t v44 = v33;
    swift_bridgeObjectRelease();

    sub_1AD2DBB04((uint64_t)v70);
    *(void *)&long long v56 = v39;
    *((void *)&v56 + 1) = v45;
    *(void *)&long long v57 = v40;
    *((void *)&v57 + 1) = v54;
    *(void *)&long long v58 = a3;
    *((void *)&v58 + 1) = a4;
    LOBYTE(v59) = v32;
    *((void *)&v59 + 1) = v53;
    *(void *)&long long v60 = v52;
    *((void *)&v60 + 1) = v25;
    *(void *)&long long v61 = v46;
    *((void *)&v61 + 1) = v22;
    *(void *)&long long v62 = v23;
    *((void *)&v62 + 1) = v51;
    *(void *)&long long v63 = v26;
    BYTE8(v63) = v50;
    *(void *)&long long v64 = v42;
    *((void *)&v64 + 1) = v49;
    uint64_t v65 = v44;
    sub_1AD2DB9FC((uint64_t)&v56);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1AD2DBBC8(v53, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AD2DBB04((uint64_t)&v56);
    long long v34 = v63;
    *(_OWORD *)(a9 + 96) = v62;
    *(_OWORD *)(a9 + 112) = v34;
    *(_OWORD *)(a9 + 128) = v64;
    *(void *)(a9 + 144) = v65;
    long long v35 = v59;
    *(_OWORD *)(a9 + 32) = v58;
    *(_OWORD *)(a9 + 48) = v35;
    long long v36 = v61;
    *(_OWORD *)(a9 + 64) = v60;
    *(_OWORD *)(a9 + 80) = v36;
    long long v37 = v57;
    *(_OWORD *)a9 = v56;
    *(_OWORD *)(a9 + 16) = v37;
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for CollectionViewHeaderCell()
{
  return self;
}

__n128 sub_1AD329B18()
{
  __asm { FMOV            V0.2D, #25.0 }
  xmmword_1E9A2C4A0 = (__int128)result;
  return result;
}

double static CollectionViewHeaderCell.defaultMaximumIconSize.getter()
{
  if (qword_1E9A29048 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return *(double *)&xmmword_1E9A2C4A0;
}

uint64_t static CollectionViewHeaderCell.defaultMaximumIconSize.setter(double a1, double a2)
{
  if (qword_1E9A29048 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  *(double *)&xmmword_1E9A2C4A0 = a1;
  *((double *)&xmmword_1E9A2C4A0 + 1) = a2;
  return result;
}

uint64_t (*static CollectionViewHeaderCell.defaultMaximumIconSize.modify())()
{
  if (qword_1E9A29048 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double static CollectionViewHeaderCell.defaultImageHorizontalPadding.getter()
{
  return *(double *)&qword_1E9A2C4B0;
}

uint64_t static CollectionViewHeaderCell.defaultImageHorizontalPadding.setter(double a1)
{
  uint64_t result = swift_beginAccess();
  qword_1E9A2C4B0 = *(void *)&a1;
  return result;
}

uint64_t (*static CollectionViewHeaderCell.defaultImageHorizontalPadding.modify())()
{
  return j_j__swift_endAccess;
}

void sub_1AD329D98()
{
  qword_1E9A2C4B8 = 0x4024000000000000;
}

double static CollectionViewHeaderCell.leadingTrailingMargin.getter()
{
  return sub_1AD32B5F8(&qword_1E9A29050, (uint64_t)&qword_1E9A2C4B8);
}

uint64_t static CollectionViewHeaderCell.leadingTrailingMargin.setter(double a1)
{
  return sub_1AD32B674(&qword_1E9A29050, (double *)&qword_1E9A2C4B8, a1);
}

uint64_t (*static CollectionViewHeaderCell.leadingTrailingMargin.modify())()
{
  if (qword_1E9A29050 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1AD329E78(uint64_t a1, void **a2)
{
  sub_1AD1EF2DC(a1, (uint64_t)v7);
  uint64_t v3 = *a2;
  uint64_t v4 = (uint64_t)*a2 + OBJC_IVAR____TtC18HealthExperienceUI24CollectionViewHeaderCell_item;
  swift_beginAccess();
  sub_1AD205C2C((uint64_t)v7, v4);
  uint64_t v5 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x78))(v5);
  return sub_1AD206D18((uint64_t)v7, (unint64_t *)&qword_1EB73E880, (unint64_t *)&qword_1EB73E870);
}

uint64_t sub_1AD329F34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI24CollectionViewHeaderCell_item;
  swift_beginAccess();
  return sub_1AD1EF2DC(v3, a1);
}

uint64_t sub_1AD329F88(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC18HealthExperienceUI24CollectionViewHeaderCell_item;
  swift_beginAccess();
  sub_1AD205C2C(a1, v3);
  uint64_t v4 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x78))(v4);
  return sub_1AD206D18(a1, (unint64_t *)&qword_1EB73E880, (unint64_t *)&qword_1EB73E870);
}

uint64_t (*sub_1AD32A040(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1AD32A0A0;
}

uint64_t sub_1AD32A0A0(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **(void **)(a1 + 24)) + 0x78))(result);
  }
  return result;
}

void *CollectionViewHeaderCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC18HealthExperienceUI24CollectionViewHeaderCell_item];
  uint64_t v10 = (objc_class *)type metadata accessor for CollectionViewHeaderCell();
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v15.receiver = v4;
  v15.super_class = v10;
  uint64_t v11 = objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v12 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v11) + 0x70);
  uint64_t v13 = v11;
  v12();

  return v13;
}

uint64_t sub_1AD32A330()
{
  sub_1AD1E3B78(0, (unint64_t *)&qword_1EB7401D0, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v10[-1] - v1;
  uint64_t v3 = sub_1AD73CE60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[3] = sub_1AD73D120();
  v10[4] = MEMORY[0x1E4FB0F88];
  __swift_allocate_boxed_opaque_existential_1(v10);
  _s18HealthExperienceUI29CollectionViewHeaderProvidingPAAE24makeDefaultConfiguration5UIKit013UIListContentJ0VyFZ_0();
  MEMORY[0x1B3E66120](v10);
  sub_1AD73CDD0();
  id v7 = objc_msgSend(self, sel_clearColor);
  sub_1AD73CE00();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v2, v6, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  MEMORY[0x1B3E66140](v2);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1AD32A500()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v70 = sub_1AD73CBA0();
  uint64_t v3 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AD73D120();
  uint64_t v69 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)v1 + OBJC_IVAR____TtC18HealthExperienceUI24CollectionViewHeaderCell_item;
  swift_beginAccess();
  sub_1AD1EF2DC(v9, (uint64_t)v80);
  if (v81)
  {
    sub_1AD2196B8(0, (unint64_t *)&qword_1EB73E870);
    uint64_t v10 = sub_1AD2196B8(0, &qword_1E9A2C4E0);
    if (swift_dynamicCast())
    {
      if (*((void *)&v74 + 1))
      {
        sub_1AD20FE90(&v73, (uint64_t)v82);
        uint64_t v11 = v83;
        uint64_t v12 = v84;
        __swift_project_boxed_opaque_existential_1(v82, v83);
        uint64_t v13 = (void (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
        v13();
        swift_release();
        uint64_t v14 = v83;
        uint64_t v15 = v84;
        __swift_project_boxed_opaque_existential_1(v82, v83);
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
        sub_1AD73D0C0();
        uint64_t v16 = v83;
        uint64_t v17 = v84;
        __swift_project_boxed_opaque_existential_1(v82, v83);
        (*(void (**)(uint64_t, uint64_t))(v17 + 40))(v16, v17);
        sub_1AD73FF00();
        uint64_t v18 = v83;
        uint64_t v19 = v84;
        __swift_project_boxed_opaque_existential_1(v82, v83);
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v19 + 32))(&v73, v18, v19);
        if ((void)v73 != 1)
        {
          long long v64 = (void *)v73;
          uint64_t v65 = v10;
          uint64_t v66 = v74;
          unint64_t v67 = (void *)*((void *)&v73 + 1);
          uint64_t v68 = *((void *)&v74 + 1);
          uint64_t v63 = v75;
          uint64_t v20 = v77;
          uint64_t v70 = v76;
          uint64_t v21 = v78;
          int v22 = v79;
          uint64_t v23 = v83;
          uint64_t v24 = v84;
          __swift_project_boxed_opaque_existential_1(v82, v83);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v24 + 32))(&v73, v23, v24);
          uint64_t v25 = (void *)v73;
          if ((void)v73 == 1)
          {
            uint64_t v26 = v64;
            uint64_t v27 = v67;
          }
          else
          {
            int v62 = v22;
            long long v60 = v20;
            uint64_t v61 = v21;
            uint64_t v58 = v76;
            id v59 = v77;
            uint64_t v57 = v75;
            long long v35 = (void *)*((void *)&v73 + 1);
            id v56 = (id)v73;
            sub_1AD2DBBC8(v25, v35);
            if (v25)
            {
              id v59 = v56;
              sub_1AD73D0E0();
              id v36 = v67;
              long long v37 = (void (*)(long long *, void))sub_1AD73CFE0();
              sub_1AD73CFC0();
              v37(&v73, 0);
              char v38 = (char)v60;
              if (v68) {
                swift_beginAccess();
              }
              sub_1AD73D000();
              if (v38)
              {
                if (qword_1E9A29048 != -1) {
                  swift_once();
                }
                swift_beginAccess();
              }
              uint64_t v51 = (void (*)(long long *, void))sub_1AD73CFE0();
              sub_1AD73CF90();
              v51(&v73, 0);
              if (v62)
              {
                swift_beginAccess();
                uint64_t v52 = qword_1E9A2C4B0;
              }
              else
              {
                uint64_t v52 = v61;
              }
              uint64_t v53 = (void (*)(long long *, void))sub_1AD73D030();
              *(void *)(v54 + 8) = v52;
              v53(&v73, 0);

              sub_1AD2DBBC8(v64, v67);
              goto LABEL_20;
            }
            uint64_t v26 = v64;
            uint64_t v27 = v67;
          }
          sub_1AD2DBBC8(v26, v27);
        }
        if (qword_1E9A29050 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v39 = qword_1E9A2C4B8;
        uint64_t v40 = (void (*)(long long *, void))sub_1AD73D030();
        *(void *)(v41 + 8) = v39;
        v40(&v73, 0);
LABEL_20:
        uint64_t v42 = v83;
        uint64_t v43 = v84;
        __swift_project_boxed_opaque_existential_1(v82, v83);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v43 + 24))(v42, v43) & 1) == 0)
        {
          uint64_t v44 = (void (*)(long long *, void))sub_1AD73D090();
          *v45 &= ~1uLL;
          v44(&v73, 0);
        }
        *((void *)&v74 + 1) = v6;
        uint64_t v75 = MEMORY[0x1E4FB0F88];
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v73);
        (*(void (**)(uint64_t *, char *, uint64_t))(v69 + 16))(boxed_opaque_existential_1, v8, v6);
        MEMORY[0x1B3E66120](&v73);
        sub_1AD1FFE38((uint64_t)v82, (uint64_t)v80);
        sub_1AD2196B8(0, &qword_1EB73B6B8);
        if (swift_dynamicCast())
        {
          sub_1AD20FE90(v71, (uint64_t)&v73);
          uint64_t v47 = *((void *)&v74 + 1);
          uint64_t v48 = v75;
          __swift_project_boxed_opaque_existential_1(&v73, *((uint64_t *)&v74 + 1));
          (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v48);
          if (v49)
          {
            char v50 = (void *)sub_1AD73F180();
            objc_msgSend(v1, sel_setAccessibilityIdentifier_, v50);
            swift_bridgeObjectRelease();
          }
          (*(void (**)(char *, uint64_t))(v69 + 8))(v8, v6);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
        }
        else
        {
          uint64_t v72 = 0;
          memset(v71, 0, sizeof(v71));
          (*(void (**)(char *, uint64_t))(v69 + 8))(v8, v6);
          sub_1AD206D18((uint64_t)v71, (unint64_t *)&qword_1EB73B6C0, &qword_1EB73B6B8);
        }
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
      }
    }
    else
    {
      uint64_t v75 = 0;
      long long v73 = 0u;
      long long v74 = 0u;
    }
  }
  else
  {
    sub_1AD206D18((uint64_t)v80, (unint64_t *)&qword_1EB73E880, (unint64_t *)&qword_1EB73E870);
    long long v73 = 0u;
    long long v74 = 0u;
    uint64_t v75 = 0;
  }
  sub_1AD206D18((uint64_t)&v73, &qword_1E9A2C4D8, &qword_1E9A2C4E0);
  sub_1AD73CB40();
  uint64_t v28 = sub_1AD73CB80();
  os_log_type_t v29 = sub_1AD73F920();
  if (os_log_type_enabled(v28, v29))
  {
    unint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v82[0] = v31;
    *(_DWORD *)unint64_t v30 = 136446210;
    *(void *)&long long v73 = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v32 = sub_1AD73F220();
    *(void *)&long long v73 = sub_1AD1F62D4(v32, v33, v82);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v28, v29, "[%{public}s] item is not an CollectionViewHeaderItem", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v31, -1, -1);
    MEMORY[0x1B3E68450](v30, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v70);
}

void sub_1AD32AE98(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = (id)sub_1AD73F180();
    objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3);
  }
}

id CollectionViewHeaderCell.__deallocating_deinit()
{
  return sub_1AD32C010(type metadata accessor for CollectionViewHeaderCell);
}

uint64_t (*sub_1AD32AF48(uint64_t a1))(uint64_t, char)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1AD32AFA8;
}

uint64_t sub_1AD32AFAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC18HealthExperienceUI24CollectionViewHeaderCell_item;
  swift_beginAccess();
  return sub_1AD1EF2DC(v3, a1);
}

uint64_t sub_1AD32B004(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v3 + OBJC_IVAR____TtC18HealthExperienceUI24CollectionViewHeaderCell_item;
  swift_beginAccess();
  sub_1AD205C2C(a1, v4);
  uint64_t v5 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x78))(v5);
  return sub_1AD206D18(a1, (unint64_t *)&qword_1EB73E880, (unint64_t *)&qword_1EB73E870);
}

uint64_t (*sub_1AD32B0C0(uint64_t a1))(uint64_t, char)
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1AD32AFA8;
}

void sub_1AD32B124(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = *v2;
    id v4 = (id)sub_1AD73F180();
    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);
  }
}

uint64_t CollectionViewHeaderItem.reuseIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CollectionViewHeaderItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CollectionViewHeaderItem.reuseIdentifier.modify())(void, void)
{
  return nullsub_1;
}

uint64_t CollectionViewHeaderItem.uniqueIdentifier.getter()
{
  return 0x7449726564616548;
}

uint64_t CollectionViewHeaderItem.text.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CollectionViewHeaderItem.makeConfiguration.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t CollectionViewHeaderItem.respectsSuperviewXLayoutMargins.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

id CollectionViewHeaderItem.iconConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 56);
  uint64_t v3 = *(void **)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 88);
  uint64_t v7 = *(void *)(v1 + 96);
  uint64_t v8 = *(void *)(v1 + 104);
  uint64_t v9 = *(void *)(v1 + 112);
  char v10 = *(unsigned char *)(v1 + 120);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  return sub_1AD2DBAC0(v2, v3);
}

uint64_t CollectionViewHeaderItem.accessories.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CollectionViewHeaderItem.accessories.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 128) = a1;
  return result;
}

uint64_t (*CollectionViewHeaderItem.accessories.modify())(void, void)
{
  return nullsub_1;
}

uint64_t CollectionViewHeaderItem.baseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CollectionViewHeaderItem.baseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return result;
}

uint64_t (*CollectionViewHeaderItem.baseIdentifier.modify())(void, void)
{
  return nullsub_1;
}

uint64_t sub_1AD32B414()
{
  return 0x7449726564616548;
}

uint64_t sub_1AD32B488()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t sub_1AD32B4B8()
{
  return *(unsigned __int8 *)(v0 + 48);
}

id sub_1AD32B4C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 56);
  uint64_t v3 = *(void **)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 88);
  uint64_t v7 = *(void *)(v1 + 96);
  uint64_t v8 = *(void *)(v1 + 104);
  uint64_t v9 = *(void *)(v1 + 112);
  char v10 = *(unsigned char *)(v1 + 120);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  return sub_1AD2DBAC0(v2, v3);
}

uint64_t sub_1AD32B50C()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD32B53C(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return result;
}

uint64_t (*sub_1AD32B574())(void, void)
{
  return nullsub_1;
}

uint64_t CollectionViewHeaderItem.IconConfiguration.init(icon:tintColor:imageToTextPadding:maximumIconSize:imageLeadingPadding:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4 & 1;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = a7 & 1;
  *(void *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 64) = a10 & 1;
  return result;
}

void sub_1AD32B5C4()
{
  qword_1E9A2C4C0 = 0x4034000000000000;
}

double static CollectionViewHeaderWithLinkCell.textToSecondaryTextHorizontalPadding.getter()
{
  return sub_1AD32B5F8(&qword_1E9A29058, (uint64_t)&qword_1E9A2C4C0);
}

double sub_1AD32B5F8(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return *(double *)a2;
}

uint64_t static CollectionViewHeaderWithLinkCell.textToSecondaryTextHorizontalPadding.setter(double a1)
{
  return sub_1AD32B674(&qword_1E9A29058, (double *)&qword_1E9A2C4C0, a1);
}

uint64_t sub_1AD32B674(void *a1, double *a2, double a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  *a2 = a3;
  return result;
}

uint64_t (*static CollectionViewHeaderWithLinkCell.textToSecondaryTextHorizontalPadding.modify())()
{
  if (qword_1E9A29058 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1AD32B760()
{
  sub_1AD32A330();
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D38]), sel_initWithTarget_action_, v0, sel_linkWasTapped);
  objc_msgSend(v0, sel_addGestureRecognizer_, v1);
}

uint64_t sub_1AD32B7DC()
{
  id v1 = v0;
  sub_1AD1E3B78(0, &qword_1E9A2B800, MEMORY[0x1E4FB0F90]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v30[-v3];
  uint64_t v5 = sub_1AD73D120();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AD32A500();
  uint64_t v9 = (uint64_t)&v0[OBJC_IVAR____TtC18HealthExperienceUI24CollectionViewHeaderCell_item];
  swift_beginAccess();
  sub_1AD1EF2DC(v9, (uint64_t)v51);
  if (!v52) {
    return sub_1AD206D18((uint64_t)v51, (unint64_t *)&qword_1EB73E880, (unint64_t *)&qword_1EB73E870);
  }
  sub_1AD2196B8(0, (unint64_t *)&qword_1EB73E870);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return result;
  }
  v34[9] = v47;
  long long v35 = v48;
  long long v36 = v49;
  long long v37 = v50;
  v34[5] = v43;
  v34[6] = v44;
  v34[7] = v45;
  v34[8] = v46;
  v34[3] = v41;
  v34[4] = v42;
  v34[1] = v39;
  v34[2] = v40;
  v34[0] = v38;
  MEMORY[0x1B3E66110](v31);
  if (!v32)
  {
    sub_1AD206D18((uint64_t)v31, &qword_1E9A2B808, &qword_1EB7325F0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_9;
  }
  sub_1AD2196B8(0, &qword_1EB7325F0);
  int v11 = swift_dynamicCast();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v4, v11 ^ 1u, 1, v5);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_9:
    sub_1AD32C7AC((uint64_t)v34);
    return sub_1AD32DE78((uint64_t)v4);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v4, v5);
  sub_1AD73CE80();
  swift_bridgeObjectRetain();
  sub_1AD73CED0();
  id v12 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  uint64_t v13 = (void (*)(uint64_t *, void))sub_1AD73D020();
  sub_1AD73CF00();
  v13(v31, 0);
  int v14 = BYTE8(v35);
  uint64_t v15 = self;
  if (v14 == 1)
  {
    id v16 = objc_msgSend(v15, sel_systemBlueColor);
    uint64_t v17 = (void (*)(uint64_t *, void))sub_1AD73D020();
    sub_1AD73CF20();
    v17(v31, 0);
    uint64_t v18 = *((void *)&v36 + 1);
    uint64_t v19 = &v1[OBJC_IVAR____TtC18HealthExperienceUI32CollectionViewHeaderWithLinkCell_didTapLink];
    uint64_t v20 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI32CollectionViewHeaderWithLinkCell_didTapLink];
    *(void *)uint64_t v19 = v36;
    *((void *)v19 + 1) = v18;
    swift_retain();
    uint64_t v21 = v20;
  }
  else
  {
    id v22 = objc_msgSend(v15, sel_hk_appInteractionDisabledColor);
    uint64_t v23 = (void (*)(uint64_t *, void))sub_1AD73D020();
    sub_1AD73CF20();
    v23(v31, 0);
    uint64_t v24 = &v1[OBJC_IVAR____TtC18HealthExperienceUI32CollectionViewHeaderWithLinkCell_didTapLink];
    uint64_t v21 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI32CollectionViewHeaderWithLinkCell_didTapLink];
    *(void *)uint64_t v24 = 0;
    *((void *)v24 + 1) = 0;
  }
  sub_1AD1E4514(v21);
  if (qword_1E9A29058 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_1AD73D0A0();
  if (qword_1E9A29050 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v25 = qword_1E9A2C4B8;
  uint64_t v26 = (void (*)(uint64_t *, void))sub_1AD73D030();
  *(void *)(v27 + 24) = v25;
  v26(v31, 0);
  uint64_t v32 = v5;
  uint64_t v33 = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v31);
  (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v6 + 16))(boxed_opaque_existential_1, v8, v5);
  MEMORY[0x1B3E66120](v31);
  if (*((void *)&v37 + 1))
  {
    os_log_type_t v29 = (void *)sub_1AD73F180();
    objc_msgSend(v1, sel_setAccessibilityIdentifier_, v29);
  }
  sub_1AD32C7AC((uint64_t)v34);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

id CollectionViewHeaderWithLinkCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC18HealthExperienceUI32CollectionViewHeaderWithLinkCell_didTapLink];
  char v10 = (objc_class *)type metadata accessor for CollectionViewHeaderWithLinkCell();
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  v12.receiver = v4;
  v12.super_class = v10;
  return objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
}

uint64_t type metadata accessor for CollectionViewHeaderWithLinkCell()
{
  return self;
}

uint64_t sub_1AD32BFE4()
{
  return sub_1AD1E4514(*(void *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI32CollectionViewHeaderWithLinkCell_didTapLink));
}

id CollectionViewHeaderWithLinkCell.__deallocating_deinit()
{
  return sub_1AD32C010(type metadata accessor for CollectionViewHeaderWithLinkCell);
}

id sub_1AD32C010(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t CollectionViewHeaderWithLinkItem.reuseIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CollectionViewHeaderWithLinkItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CollectionViewHeaderWithLinkItem.reuseIdentifier.modify())(void, void)
{
  return nullsub_1;
}

uint64_t CollectionViewHeaderWithLinkItem.uniqueIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CollectionViewHeaderWithLinkItem.text.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CollectionViewHeaderWithLinkItem.makeConfiguration.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_retain();
  return v1;
}

uint64_t CollectionViewHeaderWithLinkItem.respectsSuperviewXLayoutMargins.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

id CollectionViewHeaderWithLinkItem.iconConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 72);
  objc_super v3 = *(void **)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 88);
  uint64_t v5 = *(void *)(v1 + 96);
  uint64_t v6 = *(void *)(v1 + 104);
  uint64_t v7 = *(void *)(v1 + 112);
  uint64_t v8 = *(void *)(v1 + 120);
  uint64_t v9 = *(void *)(v1 + 128);
  char v10 = *(unsigned char *)(v1 + 136);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  return sub_1AD2DBAC0(v2, v3);
}

uint64_t CollectionViewHeaderWithLinkItem.accessories.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CollectionViewHeaderWithLinkItem.linkText.getter()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CollectionViewHeaderWithLinkItem.linkEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 168);
}

uint64_t CollectionViewHeaderWithLinkItem.didTapLink.getter()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_retain();
  return v1;
}

uint64_t CollectionViewHeaderWithLinkItem.baseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CollectionViewHeaderWithLinkItem.baseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 192) = a1;
  *(void *)(v2 + 200) = a2;
  return result;
}

uint64_t (*CollectionViewHeaderWithLinkItem.baseIdentifier.modify())(void, void)
{
  return nullsub_1;
}

__n128 CollectionViewHeaderWithLinkItem.init(text:makeConfiguration:respectsSuperviewXLayoutMargins:iconConfig:accessories:linkText:linkEnabled:uniqueIdentifier:didTapLink:automationIdentifier:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, unint64_t a12, unint64_t a13, long long a14, long long a15)
{
  id v16 = *(void **)a6;
  long long v46 = *(void **)(a6 + 8);
  uint64_t v17 = *(void *)(a6 + 16);
  uint64_t v18 = *(void *)(a6 + 32);
  uint64_t v48 = *(void *)(a6 + 40);
  uint64_t v49 = *(void *)(a6 + 24);
  uint64_t v20 = *(void *)(a6 + 48);
  uint64_t v19 = *(void *)(a6 + 56);
  char v21 = *(unsigned char *)(a6 + 64);
  *(void *)&long long v51 = type metadata accessor for CollectionViewHeaderWithLinkCell();
  sub_1AD32C680(0, &qword_1E9A2AF38, (void (*)(void))type metadata accessor for CollectionViewHeaderWithLinkCell);
  uint64_t v36 = sub_1AD73F220();
  uint64_t v45 = v20;
  long long v42 = v16;
  char v41 = v21;
  uint64_t v43 = v22;
  if (a13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v24 = v16;
    unint64_t v25 = a13;
    uint64_t v26 = v17;
    uint64_t v27 = v18;
    sub_1AD2DBAC0(v24, v46);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v29 = a1;
    uint64_t v28 = a8;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v26 = v17;
    uint64_t v27 = v18;
    sub_1AD2DBAC0(v16, v46);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1AD740680();
    swift_bridgeObjectRelease();
    *((void *)&v51 + 1) = 0x80000001AD777770;
    uint64_t v29 = a1;
    sub_1AD73F300();
    sub_1AD73F300();
    uint64_t v28 = a8;
    sub_1AD73F300();
    unint64_t v25 = 0x80000001AD777770;
    a12 = 0xD000000000000013;
  }
  *(void *)&long long v51 = v36;
  *((void *)&v51 + 1) = v43;
  v52.n128_u64[0] = a12;
  v52.n128_u64[1] = v25;
  *(void *)&long long v53 = v29;
  *((void *)&v53 + 1) = a2;
  *(void *)&long long v54 = a3;
  *((void *)&v54 + 1) = a4;
  LOBYTE(v55) = a5 & 1;
  *((void *)&v55 + 1) = v42;
  *(void *)&long long v56 = v46;
  *((void *)&v56 + 1) = v26;
  *(void *)&long long v57 = v49;
  *((void *)&v57 + 1) = v27;
  *(void *)&long long v58 = v48;
  *((void *)&v58 + 1) = v45;
  *(void *)&long long v59 = v19;
  BYTE8(v59) = v41;
  *(void *)&long long v60 = a7;
  *((void *)&v60 + 1) = v28;
  *(void *)&long long v61 = a10;
  BYTE8(v61) = a11 & 1;
  long long v62 = a14;
  long long v63 = a15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AD32C6BC((uint64_t)&v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1AD2DBBC8(v42, v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD32C7AC((uint64_t)&v51);
  long long v30 = v62;
  *(_OWORD *)(a9 + 160) = v61;
  *(_OWORD *)(a9 + 176) = v30;
  *(_OWORD *)(a9 + 192) = v63;
  long long v31 = v58;
  *(_OWORD *)(a9 + 96) = v57;
  *(_OWORD *)(a9 + 112) = v31;
  long long v32 = v60;
  *(_OWORD *)(a9 + 128) = v59;
  *(_OWORD *)(a9 + 144) = v32;
  long long v33 = v54;
  *(_OWORD *)(a9 + 32) = v53;
  *(_OWORD *)(a9 + 48) = v33;
  long long v34 = v56;
  *(_OWORD *)(a9 + 64) = v55;
  *(_OWORD *)(a9 + 80) = v34;
  __n128 result = v52;
  *(_OWORD *)a9 = v51;
  *(__n128 *)(a9 + 16) = result;
  return result;
}

uint64_t sub_1AD32C680(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3();
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1AD32C6BC(uint64_t a1)
{
  objc_super v3 = *(void **)(a1 + 80);
  uint64_t v4 = *(void **)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1AD2DBAC0(v4, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1AD32C7AC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 80);
  uint64_t v4 = *(void **)(a1 + 72);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD2DBBC8(v4, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD32C8A0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_retain();
  return v1;
}

uint64_t sub_1AD32C8D0()
{
  return *(unsigned __int8 *)(v0 + 64);
}

id sub_1AD32C8D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 72);
  objc_super v3 = *(void **)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 88);
  uint64_t v5 = *(void *)(v1 + 96);
  uint64_t v6 = *(void *)(v1 + 104);
  uint64_t v7 = *(void *)(v1 + 112);
  uint64_t v8 = *(void *)(v1 + 120);
  uint64_t v9 = *(void *)(v1 + 128);
  char v10 = *(unsigned char *)(v1 + 136);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  return sub_1AD2DBAC0(v2, v3);
}

uint64_t sub_1AD32C924()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD32C92C()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD32C95C(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 192) = a1;
  *(void *)(v2 + 200) = a2;
  return result;
}

uint64_t (*sub_1AD32C994())(void, void)
{
  return nullsub_1;
}

void static CollectionViewHeaderItem.forSummarySharingSelection(text:iconConfig:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void **)a3;
  uint64_t v6 = *(void **)(a3 + 8);
  uint64_t v36 = v6;
  long long v37 = *(void **)a3;
  uint64_t v34 = *(void *)(a3 + 24);
  uint64_t v35 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 32);
  uint64_t v8 = *(void *)(a3 + 40);
  uint64_t v9 = *(void *)(a3 + 56);
  *((void *)&v32 + 1) = *(void *)(a3 + 48);
  char v10 = *(unsigned char *)(a3 + 64);
  type metadata accessor for CollectionViewHeaderCell();
  swift_bridgeObjectRetain();
  sub_1AD2DBAC0(v5, v6);
  sub_1AD32C680(0, (unint64_t *)&qword_1EB73A670, (void (*)(void))type metadata accessor for CollectionViewHeaderCell);
  uint64_t v11 = sub_1AD73F220();
  uint64_t v13 = v12;
  uint64_t v29 = v11;
  v52[0] = v11;
  v52[1] = v12;
  v52[2] = a1;
  v52[3] = a2;
  v52[4] = sub_1AD32CD08;
  v52[5] = 0;
  char v53 = 1;
  long long v54 = v37;
  long long v55 = v6;
  uint64_t v56 = v35;
  uint64_t v57 = v34;
  uint64_t v58 = v7;
  uint64_t v59 = v8;
  uint64_t v60 = *((void *)&v32 + 1);
  uint64_t v61 = v9;
  char v62 = v10;
  uint64_t v63 = 0;
  uint64_t v64 = 0;
  uint64_t v65 = 0;
  *(void *)&long long v38 = a1;
  *((void *)&v38 + 1) = a2;
  uint64_t v50 = 32;
  unint64_t v51 = 0xE100000000000000;
  uint64_t v48 = 0;
  unint64_t v49 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  char v31 = v10;
  *(void *)&long long v32 = v8;
  sub_1AD2DBAC0(v37, v6);
  uint64_t v14 = v13;
  swift_bridgeObjectRetain();
  sub_1AD2DB9FC((uint64_t)v52);
  sub_1AD20F9FC();
  uint64_t v15 = sub_1AD740400();
  uint64_t v17 = v16;
  sub_1AD1E4524();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1AD74C370;
  *(void *)(v18 + 32) = v15;
  *(void *)(v18 + 40) = v17;
  uint64_t v19 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  id v20 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v20)
  {
    uint64_t v21 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    uint64_t v27 = v22;
    uint64_t v28 = v21;

    sub_1AD2DBB04((uint64_t)v52);
    *(void *)&long long v38 = v29;
    *((void *)&v38 + 1) = v14;
    *(void *)&long long v39 = a1;
    *((void *)&v39 + 1) = a2;
    *(void *)&long long v40 = sub_1AD32CD08;
    *((void *)&v40 + 1) = 0;
    LOBYTE(v41) = 1;
    *((void *)&v41 + 1) = v37;
    *(void *)&long long v42 = v36;
    *((void *)&v42 + 1) = v35;
    *(void *)&long long v43 = v34;
    *((void *)&v43 + 1) = v7;
    long long v44 = v32;
    *(void *)&long long v45 = v9;
    BYTE8(v45) = v31;
    *(void *)&long long v46 = 0;
    *((void *)&v46 + 1) = v28;
    uint64_t v47 = v27;
    sub_1AD2DB9FC((uint64_t)&v38);
    sub_1AD2DBBC8(v37, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AD2DBB04((uint64_t)&v38);
    long long v23 = v45;
    *(_OWORD *)(a4 + 96) = v44;
    *(_OWORD *)(a4 + 112) = v23;
    *(_OWORD *)(a4 + 128) = v46;
    *(void *)(a4 + 144) = v47;
    long long v24 = v41;
    *(_OWORD *)(a4 + 32) = v40;
    *(_OWORD *)(a4 + 48) = v24;
    long long v25 = v43;
    *(_OWORD *)(a4 + 64) = v42;
    *(_OWORD *)(a4 + 80) = v25;
    long long v26 = v39;
    *(_OWORD *)a4 = v38;
    *(_OWORD *)(a4 + 16) = v26;
  }
  else
  {
    __break(1u);
  }
}

double static CollectionViewHeaderWithLinkItem.forSummarySharingSelection(text:iconConfig:linkText:linkEnabled:uniqueIdentifier:didTapLink:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W5>, unint64_t a6@<X6>, unint64_t a7@<X7>, uint64_t a8@<X8>, long long a9)
{
  uint64_t v9 = *(void **)(a3 + 8);
  char v10 = *(void **)(a3 + 16);
  uint64_t v11 = *(void **)(a3 + 24);
  uint64_t v12 = *(void **)(a3 + 32);
  uint64_t v13 = *(void **)(a3 + 40);
  uint64_t v14 = *(void **)(a3 + 48);
  uint64_t v15 = *(void **)(a3 + 56);
  char v16 = *(unsigned char *)(a3 + 64);
  v26[0] = *(id *)a3;
  v26[1] = v9;
  v26[2] = v10;
  v26[3] = v11;
  v26[4] = v12;
  v26[5] = v13;
  v26[6] = v14;
  v26[7] = v15;
  char v27 = v16;
  swift_bridgeObjectRetain();
  sub_1AD2DBAC0(v26[0], v9);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v17 = swift_bridgeObjectRetain();
  *(void *)&double result = CollectionViewHeaderWithLinkItem.init(text:makeConfiguration:respectsSuperviewXLayoutMargins:iconConfig:accessories:linkText:linkEnabled:uniqueIdentifier:didTapLink:automationIdentifier:)(a1, a2, (uint64_t)sub_1AD32CD08, 0, 1, (uint64_t)v26, 0, a4, a8, v17, a5, a6, a7, a9, 0).n128_u64[0];
  return result;
}

uint64_t sub_1AD32CE3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18HealthExperienceUI24CollectionViewHeaderCell_item;
  swift_beginAccess();
  return sub_1AD1EF2DC(v3, a2);
}

uint64_t dispatch thunk of CollectionViewHeaderProviding.text.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CollectionViewHeaderProviding.makeConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CollectionViewHeaderProviding.respectsSuperviewXLayoutMargins.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CollectionViewHeaderProviding.iconConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CollectionViewHeaderProviding.accessories.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t method lookup function for CollectionViewHeaderCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CollectionViewHeaderCell);
}

uint64_t dispatch thunk of CollectionViewHeaderCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of CollectionViewHeaderCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of CollectionViewHeaderCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of CollectionViewHeaderCell.updateAutomationIdentifiers(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t destroy for CollectionViewHeaderItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = *(void **)(a1 + 56);
  if (v2 != (void *)1)
  {
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CollectionViewHeaderItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = a2 + 56;
  uint64_t v6 = *(void **)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v6 == (void *)1)
  {
    long long v8 = *(_OWORD *)(v7 + 48);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(v7 + 32);
    *(_OWORD *)(a1 + 104) = v8;
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(v7 + 64);
    long long v9 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v7;
    *(_OWORD *)(a1 + 72) = v9;
  }
  else
  {
    uint64_t v11 = *(void **)(a2 + 64);
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 56) = v6;
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v10;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    id v12 = v6;
    id v13 = v11;
  }
  uint64_t v14 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v14;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CollectionViewHeaderItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = (_OWORD *)(a1 + 56);
  uint64_t v6 = *(void **)(a1 + 56);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v8 = (_OWORD *)(a2 + 56);
  uint64_t v7 = *(void **)(a2 + 56);
  if (v6 == (void *)1)
  {
    if (v7 == (void *)1)
    {
      _OWORD *v5 = *v8;
      long long v9 = *(_OWORD *)(a2 + 72);
      long long v10 = *(_OWORD *)(a2 + 88);
      long long v11 = *(_OWORD *)(a2 + 104);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      *(_OWORD *)(a1 + 88) = v10;
      *(_OWORD *)(a1 + 104) = v11;
      *(_OWORD *)(a1 + 72) = v9;
    }
    else
    {
      *(void *)(a1 + 56) = v7;
      uint64_t v15 = *(void **)(a2 + 64);
      *(void *)(a1 + 64) = v15;
      uint64_t v16 = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 72) = v16;
      long long v17 = *(_OWORD *)(a2 + 88);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = v17;
      uint64_t v18 = *(void *)(a2 + 112);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      *(void *)(a1 + 112) = v18;
      id v19 = v7;
      id v20 = v15;
    }
  }
  else if (v7 == (void *)1)
  {
    sub_1AD32D33C((id *)(a1 + 56));
    _OWORD *v5 = *v8;
    long long v13 = *(_OWORD *)(a2 + 88);
    long long v12 = *(_OWORD *)(a2 + 104);
    long long v14 = *(_OWORD *)(a2 + 72);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(_OWORD *)(a1 + 88) = v13;
    *(_OWORD *)(a1 + 104) = v12;
    *(_OWORD *)(a1 + 72) = v14;
  }
  else
  {
    *(void *)(a1 + 56) = v7;
    id v21 = v7;

    uint64_t v22 = *(void **)(a1 + 64);
    long long v23 = *(void **)(a2 + 64);
    *(void *)(a1 + 64) = v23;
    id v24 = v23;

    uint64_t v25 = *(void *)(a2 + 72);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(void *)(a1 + 72) = v25;
    long long v26 = *(_OWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = v26;
    uint64_t v27 = *(void *)(a2 + 112);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(void *)(a1 + 112) = v27;
  }
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *sub_1AD32D33C(id *a1)
{
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for CollectionViewHeaderItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 56);
  long long v7 = *(void **)(a1 + 56);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  if (v7 != (void *)1)
  {
    if (v6 != 1)
    {
      *(void *)(a1 + 56) = v6;

      long long v10 = *(void **)(a1 + 64);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);

      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      goto LABEL_6;
    }
    sub_1AD32D33C((id *)(a1 + 56));
  }
  long long v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v8;
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  long long v9 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v9;
LABEL_6:
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionViewHeaderItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CollectionViewHeaderItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionViewHeaderItem()
{
  return &type metadata for CollectionViewHeaderItem;
}

void destroy for LayoutConfiguration.Size(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 8);
}

uint64_t initializeWithCopy for CollectionViewHeaderItem.IconConfiguration(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for CollectionViewHeaderItem.IconConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  long long v7 = *(void **)(a1 + 8);
  long long v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  uint64_t v10 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v10;
  long long v11 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v11;
  uint64_t v12 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v12;
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for CollectionViewHeaderItem.IconConfiguration(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionViewHeaderItem.IconConfiguration(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 65)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CollectionViewHeaderItem.IconConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionViewHeaderItem.IconConfiguration()
{
  return &type metadata for CollectionViewHeaderItem.IconConfiguration;
}

uint64_t method lookup function for CollectionViewHeaderWithLinkCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CollectionViewHeaderWithLinkCell);
}

uint64_t destroy for CollectionViewHeaderWithLinkItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v2 = *(void **)(a1 + 72);
  if (v2 != (void *)1)
  {
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CollectionViewHeaderWithLinkItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = a2 + 72;
  long long v7 = *(void **)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v7 == (void *)1)
  {
    long long v9 = *(_OWORD *)(v8 + 48);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(v8 + 32);
    *(_OWORD *)(a1 + 120) = v9;
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(v8 + 64);
    long long v10 = *(_OWORD *)(v8 + 16);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v8;
    *(_OWORD *)(a1 + 88) = v10;
  }
  else
  {
    uint64_t v12 = *(void **)(a2 + 80);
    uint64_t v11 = *(void *)(a2 + 88);
    *(void *)(a1 + 72) = v7;
    *(void *)(a1 + 80) = v12;
    *(void *)(a1 + 88) = v11;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    id v13 = v7;
    id v14 = v12;
  }
  uint64_t v15 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v15;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  uint64_t v16 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v16;
  uint64_t v17 = *(void *)(a2 + 192);
  uint64_t v18 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = v17;
  *(void *)(a1 + 200) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CollectionViewHeaderWithLinkItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = (_OWORD *)(a1 + 72);
  uint64_t v6 = *(void **)(a1 + 72);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = (_OWORD *)(a2 + 72);
  long long v7 = *(void **)(a2 + 72);
  if (v6 == (void *)1)
  {
    if (v7 == (void *)1)
    {
      _OWORD *v5 = *v8;
      long long v9 = *(_OWORD *)(a2 + 88);
      long long v10 = *(_OWORD *)(a2 + 104);
      long long v11 = *(_OWORD *)(a2 + 120);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(_OWORD *)(a1 + 104) = v10;
      *(_OWORD *)(a1 + 120) = v11;
      *(_OWORD *)(a1 + 88) = v9;
    }
    else
    {
      *(void *)(a1 + 72) = v7;
      uint64_t v15 = *(void **)(a2 + 80);
      *(void *)(a1 + 80) = v15;
      uint64_t v16 = *(void *)(a2 + 88);
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(void *)(a1 + 88) = v16;
      long long v17 = *(_OWORD *)(a2 + 104);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      *(_OWORD *)(a1 + 104) = v17;
      uint64_t v18 = *(void *)(a2 + 128);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(void *)(a1 + 128) = v18;
      id v19 = v7;
      id v20 = v15;
    }
  }
  else if (v7 == (void *)1)
  {
    sub_1AD32D33C((id *)(a1 + 72));
    _OWORD *v5 = *v8;
    long long v13 = *(_OWORD *)(a2 + 104);
    long long v12 = *(_OWORD *)(a2 + 120);
    long long v14 = *(_OWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(_OWORD *)(a1 + 104) = v13;
    *(_OWORD *)(a1 + 120) = v12;
    *(_OWORD *)(a1 + 88) = v14;
  }
  else
  {
    *(void *)(a1 + 72) = v7;
    id v21 = v7;

    uint64_t v22 = *(void **)(a1 + 80);
    long long v23 = *(void **)(a2 + 80);
    *(void *)(a1 + 80) = v23;
    id v24 = v23;

    uint64_t v25 = *(void *)(a2 + 88);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(void *)(a1 + 88) = v25;
    long long v26 = *(_OWORD *)(a2 + 104);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = v26;
    uint64_t v27 = *(void *)(a2 + 128);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(void *)(a1 + 128) = v27;
  }
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  uint64_t v28 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v28;
  swift_retain();
  swift_release();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for CollectionViewHeaderWithLinkItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  uint64_t v7 = *(void *)(a2 + 72);
  uint64_t v8 = *(void **)(a1 + 72);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  if (v8 != (void *)1)
  {
    if (v7 != 1)
    {
      *(void *)(a1 + 72) = v7;

      long long v11 = *(void **)(a1 + 80);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);

      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      goto LABEL_6;
    }
    sub_1AD32D33C((id *)(a1 + 72));
  }
  long long v9 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v9;
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  long long v10 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v10;
LABEL_6:
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  swift_release();
  uint64_t v13 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionViewHeaderWithLinkItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CollectionViewHeaderWithLinkItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionViewHeaderWithLinkItem()
{
  return &type metadata for CollectionViewHeaderWithLinkItem;
}

uint64_t sub_1AD32DE78(uint64_t a1)
{
  sub_1AD1E3B78(0, &qword_1E9A2B800, MEMORY[0x1E4FB0F90]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PrimarySecondaryDataSource.observedTraitsDidChange(traitEnvironment:previousTraitCollection:)(void *a1, uint64_t a2)
{
  sub_1AD210298();
  sub_1AD210640();
  swift_unknownObjectRetain();
  if (swift_dynamicCast())
  {
    uint64_t v4 = *((void *)&v10 + 1);
    uint64_t v5 = v11;
    __swift_project_boxed_opaque_existential_1(&v9, *((uint64_t *)&v10 + 1));
    TraitCollectionChangeHandling.notifyIfChangedTraitsWithinObservedTraits(traitEnvironment:previousTraitCollection:)(a1, a2, v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  }
  else
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
    sub_1AD2101A0((uint64_t)&v9);
  }
  sub_1AD210264();
  swift_unknownObjectRetain();
  if (swift_dynamicCast())
  {
    uint64_t v6 = *((void *)&v10 + 1);
    uint64_t v7 = v11;
    __swift_project_boxed_opaque_existential_1(&v9, *((uint64_t *)&v10 + 1));
    TraitCollectionChangeHandling.notifyIfChangedTraitsWithinObservedTraits(traitEnvironment:previousTraitCollection:)(a1, a2, v6, v7);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  }
  else
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
    return sub_1AD2101A0((uint64_t)&v9);
  }
}

uint64_t sub_1AD32E07C(void *a1, uint64_t a2)
{
  return PrimarySecondaryDataSource.observedTraitsDidChange(traitEnvironment:previousTraitCollection:)(a1, a2);
}

uint64_t HideableDataSource<>.observedTraitsDidChange(traitEnvironment:previousTraitCollection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1AD20DAE0();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 16);
  uint64_t v9 = *(void *)(v7 + 80);
  swift_unknownObjectRetain();
  v8(a1, a2, v9, a3);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD32E140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return HideableDataSource<>.observedTraitsDidChange(traitEnvironment:previousTraitCollection:)(a1, a2, *(void *)(a4 - 8));
}

uint64_t MappedDataSourceWithContext<>.observedTraits.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(a1 + 8))(*(void *)(*(void *)v1 + 480), a1);
}

uint64_t MappedDataSourceWithContext<>.observedTraitsDidChange(traitEnvironment:previousTraitCollection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 16);
  uint64_t v8 = *(void *)(*(void *)v3 + 480);
  swift_unknownObjectRetain();
  v7(a1, a2, v8, a3);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD32E278(uint64_t a1, uint64_t a2)
{
  return MappedDataSourceWithContext<>.observedTraits.getter(*(void *)(a2 - 8));
}

uint64_t sub_1AD32E2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MappedDataSourceWithContext<>.observedTraitsDidChange(traitEnvironment:previousTraitCollection:)(a1, a2, *(void *)(a4 - 8));
}

uint64_t DataSourceWrapper<>.observedTraits.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(a2 + 32))();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = v4(AssociatedTypeWitness, a3);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t DataSourceWrapper<>.observedTraitsDidChange(traitEnvironment:previousTraitCollection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8(a1, a2, AssociatedTypeWitness, a5);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD32E444(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  uint64_t WitnessTable = swift_getWitnessTable();
  return DataSourceWrapper<>.observedTraits.getter(a1, WitnessTable, v3);
}

uint64_t sub_1AD32E4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 - 8);
  uint64_t WitnessTable = swift_getWitnessTable();
  return DataSourceWrapper<>.observedTraitsDidChange(traitEnvironment:previousTraitCollection:)(a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1AD32E514(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  uint64_t WitnessTable = swift_getWitnessTable();
  return DataSourceWrapper<>.observedTraits.getter(a1, WitnessTable, v3);
}

uint64_t sub_1AD32E570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 - 8);
  uint64_t WitnessTable = swift_getWitnessTable();
  return DataSourceWrapper<>.observedTraitsDidChange(traitEnvironment:previousTraitCollection:)(a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1AD32E5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  uint64_t WitnessTable = swift_getWitnessTable();
  return DataSourceWrapper<>.observedTraits.getter(a1, WitnessTable, v3);
}

uint64_t sub_1AD32E640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 - 8);
  uint64_t WitnessTable = swift_getWitnessTable();
  return DataSourceWrapper<>.observedTraitsDidChange(traitEnvironment:previousTraitCollection:)(a1, a2, a3, WitnessTable, v7);
}

uint64_t dispatch thunk of TraitCollectionChangeHandling.observedTraits.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TraitCollectionChangeHandling.observedTraitsDidChange(traitEnvironment:previousTraitCollection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1AD32E6DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI41SectionedAdaptorCellWithHostingController_item;
  swift_beginAccess();
  return sub_1AD1EF2DC(v3, a1);
}

uint64_t sub_1AD32E734(uint64_t a1)
{
  sub_1AD1EF2DC(a1, (uint64_t)v5);
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI41SectionedAdaptorCellWithHostingController_item;
  swift_beginAccess();
  sub_1AD2D8174((uint64_t)v5, v3);
  swift_endAccess();
  sub_1AD32EC20();
  return sub_1AD1E1AA8(a1);
}

void (*sub_1AD32E7B0(void *a1))(void *a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_1AD2D81F0();
  return sub_1AD32E80C;
}

void sub_1AD32E80C(void *a1, char a2)
{
  uint64_t v3 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  if ((a2 & 1) == 0) {
    sub_1AD32EC20();
  }
  free(v3);
}

char *sub_1AD32E868(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = (uint64_t *)&v4[OBJC_IVAR____TtC18HealthExperienceUI31SummarySharingProfileHeaderCell_sharingProfileView];
  type metadata accessor for SummarySharingProfileHeaderItem();
  swift_allocObject();
  long long v10 = v4;
  sub_1AD32FF80();
  sub_1AD330BC0(&qword_1E9A2C528, (void (*)(uint64_t))type metadata accessor for SummarySharingProfileHeaderItem);
  *uint64_t v9 = sub_1AD73DFD0();
  v9[1] = v11;

  uint64_t v22 = *v9;
  uint64_t v23 = v9[1];
  sub_1AD330988();
  swift_retain();
  sub_1AD73ECF0();
  uint64_t v12 = SectionedAdaptorCellWithHostingController.init(rootView:frame:)(a1, a2, a3, a4);
  objc_msgSend(v12, sel_setUserInteractionEnabled_, 0);
  sub_1AD3309DC(0, (unint64_t *)&qword_1EB741320, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1AD74C360;
  long long v14 = (id *)&v12[OBJC_IVAR____TtC18HealthExperienceUI41SectionedAdaptorCellWithHostingController_hostingController];
  swift_beginAccess();
  __n128 result = (char *)objc_msgSend(*v14, sel_view);
  if (result)
  {
    uint64_t v16 = result;
    long long v17 = self;
    id v18 = objc_msgSend(v16, sel_centerXAnchor);

    id v19 = objc_msgSend(v12, sel_centerXAnchor);
    id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

    *(void *)(v13 + 32) = v20;
    sub_1AD73F4D0();
    sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F810);
    id v21 = (void *)sub_1AD73F490();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_activateConstraints_, v21, v13, v22, v23);

    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD32EC20()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthExperienceUI41SectionedAdaptorCellWithHostingController_item;
  swift_beginAccess();
  sub_1AD1EF2DC(v1, (uint64_t)v6);
  if (!v6[3]) {
    return sub_1AD1E1AA8((uint64_t)v6);
  }
  sub_1AD2196B8(0, (unint64_t *)&qword_1EB73E870);
  type metadata accessor for SummarySharingProfileHeaderItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1AD73DC00();
    swift_release();
    swift_release();
    uint64_t v4 = v6[0];
    uint64_t v3 = v6[1];
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1AD73DC00();
    swift_release();
    swift_release();
    uint64_t v5 = (void *)v6[0];
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1AD73DC00();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1AD73DC00();
    swift_release();
    swift_release();
    sub_1AD330348(v4, v3, v5);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1AD32EE6C()
{
}

uint64_t sub_1AD32EE9C()
{
  return swift_release();
}

id sub_1AD32EEB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SummarySharingProfileHeaderCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SummarySharingProfileHeaderCell()
{
  return self;
}

void sub_1AD32EF1C()
{
  uint64_t v0 = (void *)sub_1AD73F180();
  id v1 = objc_msgSend(self, sel_systemImageNamed_, v0);

  if (v1) {
    qword_1E9A48720 = (uint64_t)v1;
  }
  else {
    __break(1u);
  }
}

uint64_t sub_1AD32EF9C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1AD73DC00();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1AD32F010()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1AD73DC00();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1AD32F084()
{
  return sub_1AD32F0AC();
}

uint64_t sub_1AD32F098()
{
  return sub_1AD32F0AC();
}

uint64_t sub_1AD32F0AC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1AD73DC00();
  swift_release();
  swift_release();
  return v1;
}

void *sub_1AD32F118(uint64_t a1)
{
  objc_super v2 = v1;
  uint64_t v81 = a1;
  uint64_t v95 = *v1;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AD330A28(0, (unint64_t *)&qword_1EB740280, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v89 = (char *)&v77 - v5;
  uint64_t v6 = sub_1AD73EEB0();
  uint64_t v84 = *(void *)(v6 - 8);
  uint64_t v85 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v83 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD330A8C();
  uint64_t v87 = *(void *)(v8 - 8);
  uint64_t v88 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v86 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD330C08();
  uint64_t v91 = *(void *)(v10 - 8);
  uint64_t v92 = v10;
  MEMORY[0x1F4188790](v10);
  id v90 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD330A28(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928], v3);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v82 = (char *)&v77 - v13;
  uint64_t v14 = sub_1AD73C130();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v93 = v14;
  uint64_t v94 = v15;
  MEMORY[0x1F4188790](v14);
  long long v17 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1AD73A670();
  uint64_t v18 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  id v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD1DB168();
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v26 = (char *)v2 + OBJC_IVAR____TtC18HealthExperienceUI31SummarySharingProfileHeaderItem__accountIdentifier;
  sub_1AD3309DC(0, (unint64_t *)&qword_1EB7413B8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  uint64_t v28 = v27;
  id v96 = 0;
  uint64_t v97 = 0;
  sub_1AD73DBC0();
  uint64_t v79 = v23;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  uint64_t v78 = v26;
  v29(v26, v25, v22);
  long long v30 = (char *)v2 + OBJC_IVAR____TtC18HealthExperienceUI31SummarySharingProfileHeaderItem__status;
  id v96 = 0;
  uint64_t v97 = 0;
  uint64_t v77 = v28;
  uint64_t v31 = v22;
  long long v32 = v17;
  long long v33 = v2;
  sub_1AD73DBC0();
  v29(v30, v25, v31);
  uint64_t v34 = v94;
  uint64_t v35 = v81;
  id v96 = (id)sub_1AD740E30();
  uint64_t v97 = v36;
  sub_1AD73F300();
  sub_1AD73C0C0();
  sub_1AD330BC0((unint64_t *)&qword_1EB7392C0, MEMORY[0x1E4F27990]);
  uint64_t v37 = v80;
  sub_1AD740B50();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v37);
  uint64_t v38 = v93;
  uint64_t v39 = v97;
  v33[2] = v96;
  void v33[3] = v39;
  uint64_t v40 = sub_1AD73C090();
  uint64_t v42 = v41;
  swift_beginAccess();
  uint64_t v101 = v40;
  uint64_t v102 = v42;
  sub_1AD73DBC0();
  swift_endAccess();
  LOBYTE(v40) = sub_1AD73C120();
  long long v43 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
  v43(v32, v35, v38);
  if (v40)
  {
    uint64_t v44 = sub_1AD73B870();
    unint64_t v46 = v45;
    swift_bridgeObjectRelease();
    if ((v46 & 0x2000000000000000) != 0) {
      uint64_t v47 = HIBYTE(v46) & 0xF;
    }
    else {
      uint64_t v47 = v44 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v48 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v32, v38);
    if (v47)
    {
      uint64_t v49 = MEMORY[0x1B3E62370](v48);
      uint64_t v51 = v50;
      __n128 v52 = v78;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v52, v31);
      uint64_t v101 = v49;
      uint64_t v102 = v51;
      sub_1AD73DBC0();
      swift_endAccess();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v38);
  }
  uint64_t v53 = sub_1AD73C0D0();
  if (v53)
  {
    id v54 = (id)v53;
    uint64_t v55 = v38;
  }
  else
  {
    if (qword_1E9A29060 != -1) {
      swift_once();
    }
    uint64_t v55 = v38;
    id v54 = (id)qword_1E9A48720;
  }
  swift_beginAccess();
  uint64_t v101 = (uint64_t)v54;
  uint64_t v80 = sub_1AD2147D4(0, (unint64_t *)&qword_1EB741440);
  sub_1AD73DBC0();
  swift_endAccess();
  uint64_t v56 = sub_1AD73C020();
  char v58 = v57 & 1;
  uint64_t v59 = (uint64_t)v82;
  sub_1AD73C060();
  uint64_t v60 = (void *)sub_1AD330CD4(v56, v58, v59);
  uint64_t v62 = v61;
  sub_1AD331374(v59, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928]);
  swift_getKeyPath();
  swift_getKeyPath();
  id v96 = v60;
  uint64_t v97 = v62;
  swift_retain();
  sub_1AD73DC10();
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73C100);
  uint64_t v63 = (void *)sub_1AD73F9E0();
  uint64_t v98 = v55;
  uint64_t v99 = MEMORY[0x1E4F66130];
  uint64_t v100 = MEMORY[0x1E4F66138];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v96);
  v43((char *)boxed_opaque_existential_1, v35, v55);
  sub_1AD73F970();
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F7F0);
  uint64_t v66 = v83;
  uint64_t v65 = v84;
  uint64_t v67 = v85;
  (*(void (**)(char *, void, uint64_t))(v84 + 104))(v83, *MEMORY[0x1E4FBCB28], v85);
  uint64_t v68 = (void *)sub_1AD73FC80();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v67);
  uint64_t v69 = (void *)sub_1AD73F9C0();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
  id v96 = v69;
  sub_1AD330B48();
  sub_1AD330BC0(&qword_1E9A2C550, (void (*)(uint64_t))sub_1AD330B48);
  uint64_t v70 = v86;
  sub_1AD73DCC0();
  swift_release();
  id v96 = (id)sub_1AD73FC50();
  uint64_t v71 = sub_1AD73FBF0();
  uint64_t v72 = (uint64_t)v89;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v89, 1, 1, v71);
  sub_1AD330BC0(&qword_1E9A2C560, (void (*)(uint64_t))sub_1AD330A8C);
  sub_1AD21F35C();
  long long v73 = v90;
  uint64_t v74 = v88;
  sub_1AD73DD80();
  sub_1AD331374(v72, (unint64_t *)&qword_1EB740280, MEMORY[0x1E4FBCC28]);

  (*(void (**)(char *, uint64_t))(v87 + 8))(v70, v74);
  *(void *)(swift_allocObject() + 16) = v95;
  sub_1AD330BC0(&qword_1E9A2C568, (void (*)(uint64_t))sub_1AD330C08);
  swift_retain();
  uint64_t v75 = v92;
  sub_1AD73DC60();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v35, v93);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v73, v75);
  return v33;
}

uint64_t sub_1AD32FCF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1AD740280();
  *a1 = result;
  return result;
}

uint64_t sub_1AD32FD30()
{
  uint64_t v0 = sub_1AD73CBA0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73CAD0();
  uint64_t v4 = sub_1AD73CB80();
  os_log_type_t v5 = sub_1AD73F940();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = sub_1AD740E30();
    uint64_t v11 = sub_1AD1F62D4(v8, v9, &v12);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v4, v5, "[%s] New photo publisher completed", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v7, -1, -1);
    MEMORY[0x1B3E68450](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1AD32FF08(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1AD73DC10();
}

void *sub_1AD32FF80()
{
  uint64_t v1 = v0;
  uint64_t v19 = *v0;
  uint64_t v2 = sub_1AD73A670();
  uint64_t v20 = *(void *)(v2 - 8);
  uint64_t v21 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD1DB168();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (char *)v1 + OBJC_IVAR____TtC18HealthExperienceUI31SummarySharingProfileHeaderItem__accountIdentifier;
  sub_1AD3309DC(0, (unint64_t *)&qword_1EB7413B8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  sub_1AD73DBC0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v11(v10, v9, v6);
  uint64_t v12 = (char *)v1 + OBJC_IVAR____TtC18HealthExperienceUI31SummarySharingProfileHeaderItem__status;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  sub_1AD73DBC0();
  v11(v12, v9, v6);
  swift_beginAccess();
  *(void *)&long long v22 = 0;
  *((void *)&v22 + 1) = 0xE000000000000000;
  sub_1AD73DBC0();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v10, v6);
  long long v18 = xmmword_1AD752370;
  long long v22 = xmmword_1AD752370;
  sub_1AD73DBC0();
  swift_endAccess();
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_init);
  swift_beginAccess();
  *(void *)&long long v22 = v14;
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB741440);
  sub_1AD73DBC0();
  swift_endAccess();
  swift_beginAccess();
  v13(v12, v6);
  long long v22 = v18;
  sub_1AD73DBC0();
  swift_endAccess();
  uint64_t v23 = sub_1AD740E30();
  uint64_t v24 = v15;
  sub_1AD73F300();
  sub_1AD73A660();
  sub_1AD73A620();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v21);
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  uint64_t v16 = v24;
  v1[2] = v23;
  v1[3] = v16;
  return v1;
}

uint64_t sub_1AD330348(uint64_t a1, uint64_t a2, void *a3)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1AD73DC10();
  if (!a3)
  {
    if (qword_1E9A29060 != -1) {
      swift_once();
    }
    (id)qword_1E9A48720;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  id v4 = a3;
  sub_1AD73DC10();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1AD73DC10();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD73DC10();
}

uint64_t sub_1AD330510()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthExperienceUI31SummarySharingProfileHeaderItem__name;
  sub_1AD3309DC(0, &qword_1EB741380, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC18HealthExperienceUI31SummarySharingProfileHeaderItem__image;
  sub_1AD33081C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC18HealthExperienceUI31SummarySharingProfileHeaderItem__accountIdentifier;
  sub_1AD1DB168();
  uint64_t v7 = v6;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v8(v5, v6);
  v8(v0 + OBJC_IVAR____TtC18HealthExperienceUI31SummarySharingProfileHeaderItem__status, v7);
  return swift_deallocClassInstance();
}

uint64_t sub_1AD330694()
{
  return type metadata accessor for SummarySharingProfileHeaderItem();
}

uint64_t type metadata accessor for SummarySharingProfileHeaderItem()
{
  uint64_t result = qword_1E9A2C510;
  if (!qword_1E9A2C510) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1AD3306E8()
{
  sub_1AD3309DC(319, &qword_1EB741380, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F)
  {
    sub_1AD33081C();
    if (v1 <= 0x3F)
    {
      sub_1AD1DB168();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_1AD33081C()
{
  if (!qword_1E9A2C520)
  {
    sub_1AD2147D4(255, (unint64_t *)&qword_1EB741440);
    unint64_t v0 = sub_1AD73DC30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C520);
    }
  }
}

uint64_t sub_1AD330884()
{
  return sub_1AD73F220();
}

uint64_t sub_1AD3308BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD3308F0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SummarySharingProfileHeaderItem();
  uint64_t result = sub_1AD73DA50();
  *a1 = result;
  return result;
}

unint64_t sub_1AD330930()
{
  unint64_t result = qword_1E9A2AED0;
  if (!qword_1E9A2AED0)
  {
    type metadata accessor for SummarySharingProfileHeaderCell();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9A2AED0);
  }
  return result;
}

unint64_t sub_1AD330988()
{
  unint64_t result = qword_1E9A2C530;
  if (!qword_1E9A2C530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C530);
  }
  return result;
}

void sub_1AD3309DC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1AD330A28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1AD330A8C()
{
  if (!qword_1E9A2C538)
  {
    sub_1AD330B48();
    sub_1AD2147D4(255, (unint64_t *)&qword_1EB741440);
    sub_1AD330BC0(&qword_1E9A2C550, (void (*)(uint64_t))sub_1AD330B48);
    unint64_t v0 = sub_1AD73D850();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C538);
    }
  }
}

void sub_1AD330B48()
{
  if (!qword_1E9A2C540)
  {
    sub_1AD2147D4(255, &qword_1E9A2C548);
    unint64_t v0 = sub_1AD73D9F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C540);
    }
  }
}

uint64_t sub_1AD330BC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AD330C08()
{
  if (!qword_1E9A2C558)
  {
    sub_1AD330A8C();
    sub_1AD2147D4(255, (unint64_t *)&qword_1EB73F7F0);
    sub_1AD330BC0(&qword_1E9A2C560, (void (*)(uint64_t))sub_1AD330A8C);
    sub_1AD21F35C();
    unint64_t v0 = sub_1AD73D9A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C558);
    }
  }
}

uint64_t sub_1AD330CD4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = sub_1AD73A770();
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1AD739FB0();
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v39 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD330A28(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v14 = sub_1AD73A600();
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  long long v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v20 = 0;
  if (a2) {
    return v20;
  }
  if (a1 != 1)
  {
    if (!a1)
    {
      if (qword_1EB732818 != -1) {
        swift_once();
      }
      return sub_1AD73A1D0();
    }
    return 0;
  }
  uint64_t v37 = (char *)&v35 - v18;
  uint64_t v21 = v19;
  sub_1AD331404(a3, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v13, 1, v14) == 1)
  {
    sub_1AD331374((uint64_t)v13, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928]);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v37, v13, v14);
  sub_1AD73A740();
  sub_1AD330A28(0, (unint64_t *)&unk_1E9A313C0, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v22 = sub_1AD73A760();
  uint64_t v23 = *(void *)(v22 - 8);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = swift_allocObject();
  long long v35 = xmmword_1AD74C370;
  *(_OWORD *)(v25 + 16) = xmmword_1AD74C370;
  (*(void (**)(unint64_t, void, uint64_t))(v23 + 104))(v25 + v24, *MEMORY[0x1E4F27BF0], v22);
  sub_1AD2748C8(v25);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1AD73A5F0();
  long long v26 = v39;
  sub_1AD73A6D0();
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v36 = v21 + 8;
  v27(v17, v14);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v6);
  uint64_t v28 = sub_1AD739F80();
  if ((v29 & 1) != 0 || (uint64_t v30 = v28, v28 < 1))
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v41);
    v27(v37, v14);
    return 0;
  }
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  sub_1AD73A1D0();
  sub_1AD208280(0, (unint64_t *)&qword_1EB73F8F0, (unint64_t *)&qword_1EB73F910, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v31 + 16) = v35;
  uint64_t v33 = MEMORY[0x1E4FBB5C8];
  *(void *)(v31 + 56) = v32;
  *(void *)(v31 + 64) = v33;
  *(void *)(v31 + 32) = v30;
  uint64_t v20 = sub_1AD73F190();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v41);
  v27(v37, v14);
  return v20;
}

uint64_t sub_1AD331374(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1AD330A28(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AD3313E4()
{
  return swift_deallocObject();
}

uint64_t sub_1AD3313F4()
{
  return sub_1AD32FD30();
}

uint64_t sub_1AD3313FC(void **a1)
{
  return sub_1AD32FF08(a1);
}

uint64_t sub_1AD331404(uint64_t a1, uint64_t a2)
{
  sub_1AD330A28(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SummaryAlertDataModel.hkType.getter()
{
  sub_1AD3317FC(0, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
  return sub_1AD73EFD0();
}

uint64_t SummaryAlertDataModel.hkType.setter()
{
  sub_1AD3317FC(0, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
  return sub_1AD73EFE0();
}

void (*SummaryAlertDataModel.hkType.modify(void *a1))(void *)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1AD3317FC(0, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
  v2[4] = sub_1AD73EFC0();
  return sub_1AD3315B4;
}

uint64_t SummaryAlertDataModel.alertTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SummaryAlertDataModel() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for SummaryAlertDataModel()
{
  uint64_t result = qword_1EB73CB60;
  if (!qword_1EB73CB60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SummaryAlertDataModel.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SummaryAlertDataModel() + 24);
  uint64_t v4 = sub_1AD73A600();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t SummaryAlertDataModel.alertDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SummaryAlertDataModel() + 28);
  uint64_t v4 = sub_1AD73A600();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t SummaryAlertDataModel.imageRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SummaryAlertDataModel() + 32);
  uint64_t v4 = sub_1AD73B970();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t SummaryAlertDataModel.imageAccentColor.getter()
{
  return sub_1AD73EFD0();
}

void sub_1AD3317FC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1AD2147D4(255, a3);
    unint64_t v4 = sub_1AD73EFF0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AD331854(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for SummaryAlertDataModel();
  sub_1AD3317FC(0, &qword_1EB73CA38, (unint64_t *)&qword_1EB741430);
  id v2 = v1;
  return sub_1AD73EFE0();
}

uint64_t SummaryAlertDataModel.imageAccentColor.setter()
{
  return sub_1AD73EFE0();
}

void (*SummaryAlertDataModel.imageAccentColor.modify(void *a1))(void *)
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SummaryAlertDataModel();
  sub_1AD3317FC(0, &qword_1EB73CA38, (unint64_t *)&qword_1EB741430);
  v2[4] = sub_1AD73EFC0();
  return sub_1AD3315B4;
}

uint64_t SummaryAlertDataModel.headerText.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SummaryAlertDataModel() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SummaryAlertDataModel.bodyMessage.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SummaryAlertDataModel() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SummaryAlertDataModel.init(hkType:alertTitle:startDate:alertDate:imageRepresentation:imageAccentColor:bodyMessage:headerText:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v42 = a7;
  uint64_t v47 = a10;
  uint64_t v48 = a8;
  uint64_t v45 = a11;
  uint64_t v46 = a12;
  sub_1AD3317FC(0, &qword_1EB73CA38, (unint64_t *)&qword_1EB741430);
  uint64_t v43 = *(void *)(v19 - 8);
  uint64_t v44 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v41 = (char *)&v39 - v20;
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB741780);
  id v40 = a1;
  sub_1AD73F000();
  uint64_t v21 = (int *)type metadata accessor for SummaryAlertDataModel();
  uint64_t v22 = (void *)(a9 + v21[5]);
  void *v22 = a2;
  v22[1] = a3;
  uint64_t v23 = a9 + v21[6];
  uint64_t v24 = sub_1AD73A600();
  uint64_t v25 = *(void *)(v24 - 8);
  long long v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
  v26(v23, a4, v24);
  v26(a9 + v21[7], a5, v24);
  uint64_t v27 = a9 + v21[8];
  uint64_t v28 = sub_1AD73B970();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = v27;
  uint64_t v31 = a6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v30, a6, v28);
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB741430);
  uint64_t v32 = v41;
  sub_1AD73F000();

  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v28);
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v33(a5, v24);
  v33(a4, v24);
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v43 + 32))(a9 + v21[9], v32, v44);
  long long v35 = (void *)(a9 + v21[10]);
  uint64_t v36 = v46;
  *long long v35 = v45;
  v35[1] = v36;
  uint64_t v37 = (void *)(a9 + v21[11]);
  uint64_t v38 = v47;
  *uint64_t v37 = v48;
  v37[1] = v38;
  return result;
}

uint64_t SummaryAlertDataModel.init(data:)(uint64_t a1, unint64_t a2)
{
  return swift_release();
}

uint64_t SummaryAlertDataModel.encode()()
{
  sub_1AD739D50();
  swift_allocObject();
  sub_1AD739D40();
  type metadata accessor for SummaryAlertDataModel();
  sub_1AD332F98(&qword_1EB73CB58, (void (*)(uint64_t))type metadata accessor for SummaryAlertDataModel);
  uint64_t v0 = sub_1AD739D30();
  swift_release();
  return v0;
}

uint64_t sub_1AD331EAC(char a1)
{
  uint64_t result = 0x657079546B68;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7469547472656C61;
      break;
    case 2:
      unsigned int v3 = 1918989427;
      goto LABEL_5;
    case 3:
      unsigned int v3 = 1919249505;
LABEL_5:
      uint64_t result = v3 | 0x7461447400000000;
      break;
    case 4:
      uint64_t result = 0xD000000000000013;
      break;
    case 5:
      uint64_t result = 0xD000000000000010;
      break;
    case 6:
      uint64_t result = 0x6554726564616568;
      break;
    case 7:
      uint64_t result = 0x7373654D79646F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AD331FC4()
{
  return sub_1AD331EAC(*v0);
}

uint64_t sub_1AD331FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AD334608(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD331FF4(uint64_t a1)
{
  unint64_t v2 = sub_1AD332448();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AD332030(uint64_t a1)
{
  unint64_t v2 = sub_1AD332448();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SummaryAlertDataModel.encode(to:)(void *a1)
{
  sub_1AD332ED8(0, &qword_1EB73D250, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD332448();
  sub_1AD740D90();
  char v17 = 0;
  sub_1AD3317FC(0, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
  sub_1AD332F3C(&qword_1EB73CA20);
  sub_1AD740B00();
  if (!v1)
  {
    type metadata accessor for SummaryAlertDataModel();
    char v16 = 1;
    sub_1AD740AC0();
    char v15 = 2;
    sub_1AD73A600();
    sub_1AD332F98(&qword_1EB73CAD0, MEMORY[0x1E4F27928]);
    sub_1AD740B00();
    char v14 = 3;
    sub_1AD740B00();
    char v13 = 4;
    sub_1AD73B970();
    sub_1AD332F98(&qword_1EB73CAF0, MEMORY[0x1E4F65F88]);
    sub_1AD740B00();
    char v12 = 5;
    sub_1AD3317FC(0, &qword_1EB73CA38, (unint64_t *)&qword_1EB741430);
    sub_1AD33249C(&qword_1EB73CA30);
    sub_1AD740B00();
    char v11 = 6;
    sub_1AD740A80();
    char v10 = 7;
    sub_1AD740A80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1AD332448()
{
  unint64_t result = qword_1EB73CB40;
  if (!qword_1EB73CB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB73CB40);
  }
  return result;
}

uint64_t sub_1AD33249C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AD3317FC(255, &qword_1EB73CA38, (unint64_t *)&qword_1EB741430);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SummaryAlertDataModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  sub_1AD3317FC(0, &qword_1EB73CA38, (unint64_t *)&qword_1EB741430);
  uint64_t v56 = v3;
  uint64_t v54 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v50 = (char *)&v47 - v4;
  uint64_t v57 = sub_1AD73B970();
  uint64_t v55 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v51 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AD73A600();
  uint64_t v62 = *(void *)(v6 - 8);
  uint64_t v63 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v11 = (char *)&v47 - v10;
  sub_1AD3317FC(0, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
  uint64_t v13 = v12;
  uint64_t v58 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  char v15 = (char *)&v47 - v14;
  sub_1AD332ED8(0, &qword_1E9A2C578, MEMORY[0x1E4FBBDC0]);
  uint64_t v52 = *(void *)(v16 - 8);
  uint64_t v53 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v47 - v17;
  uint64_t v64 = type metadata accessor for SummaryAlertDataModel();
  MEMORY[0x1F4188790](v64);
  uint64_t v61 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  uint64_t v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_1AD332448();
  uint64_t v21 = v60;
  sub_1AD740D80();
  if (v21) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  }
  uint64_t v60 = (void (*)(void, void, void))v11;
  uint64_t v48 = v9;
  char v72 = 0;
  sub_1AD332F3C(&qword_1E9A2C580);
  sub_1AD740A40();
  uint64_t v22 = v13;
  uint64_t v23 = v61;
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v61, v15, v22);
  char v71 = 1;
  uint64_t v24 = sub_1AD740A00();
  uint64_t v25 = (int *)v64;
  long long v26 = (uint64_t *)&v23[*(int *)(v64 + 20)];
  *long long v26 = v24;
  v26[1] = v27;
  char v70 = 2;
  sub_1AD332F98((unint64_t *)&unk_1EB7392B0, MEMORY[0x1E4F27928]);
  uint64_t v28 = v60;
  uint64_t v29 = v63;
  sub_1AD740A40();
  uint64_t v47 = v22;
  uint64_t v30 = &v23[v25[6]];
  uint64_t v60 = *(void (**)(void, void, void))(v62 + 32);
  v60(v30, v28, v29);
  char v69 = 3;
  uint64_t v31 = v48;
  sub_1AD740A40();
  v60(&v23[v25[7]], v31, v29);
  char v68 = 4;
  sub_1AD332F98(&qword_1EB738440, MEMORY[0x1E4F65F88]);
  uint64_t v32 = v51;
  uint64_t v33 = v57;
  sub_1AD740A40();
  LODWORD(v60) = 1;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v23[v25[8]], v32, v33);
  char v67 = 5;
  sub_1AD33249C(&qword_1E9A2C588);
  uint64_t v34 = v50;
  uint64_t v35 = v56;
  sub_1AD740A40();
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v23[v25[9]], v34, v35);
  char v66 = 6;
  uint64_t v36 = sub_1AD7409C0();
  uint64_t v37 = (uint64_t)v59;
  uint64_t v38 = v52;
  uint64_t v39 = (uint64_t *)&v23[v25[10]];
  *uint64_t v39 = v36;
  v39[1] = v40;
  char v65 = 7;
  uint64_t v41 = sub_1AD7409C0();
  uint64_t v43 = v42;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v53);
  uint64_t v44 = (uint64_t)v61;
  uint64_t v45 = (uint64_t *)&v61[v25[11]];
  *uint64_t v45 = v41;
  v45[1] = v43;
  sub_1AD332FE0(v44, v49);
  __swift_destroy_boxed_opaque_existential_1(v37);
  return sub_1AD333044(v44);
}

void sub_1AD332ED8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1AD332448();
    unint64_t v7 = a3(a1, &type metadata for SummaryAlertDataModel.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1AD332F3C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AD3317FC(255, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD332F98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD332FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummaryAlertDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD333044(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SummaryAlertDataModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD3330A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SummaryAlertDataModel.init(from:)(a1, a2);
}

uint64_t sub_1AD3330B8(void *a1)
{
  return SummaryAlertDataModel.encode(to:)(a1);
}

uint64_t sub_1AD3330D0@<X0>(uint64_t *a1@<X8>)
{
  sub_1AD3317FC(0, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
  uint64_t result = sub_1AD73EFD0();
  *a1 = result;
  return result;
}

uint64_t sub_1AD33311C(void **a1)
{
  uint64_t v1 = *a1;
  sub_1AD3317FC(0, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
  id v2 = v1;
  return sub_1AD73EFE0();
}

uint64_t sub_1AD333178@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SummaryAlertDataModel();
  sub_1AD3317FC(0, &qword_1EB73CA38, (unint64_t *)&qword_1EB741430);
  uint64_t result = sub_1AD73EFD0();
  *a1 = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SummaryAlertDataModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1AD3317FC(0, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    char v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = sub_1AD73A600();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    v16((char *)a1 + a3[7], (char *)a2 + a3[7], v15);
    uint64_t v17 = a3[8];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_1AD73B970();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = a3[9];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    sub_1AD3317FC(0, &qword_1EB73CA38, (unint64_t *)&qword_1EB741430);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    uint64_t v25 = a3[10];
    uint64_t v26 = a3[11];
    uint64_t v27 = (uint64_t *)((char *)a1 + v25);
    uint64_t v28 = (uint64_t *)((char *)a2 + v25);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = (uint64_t *)((char *)a1 + v26);
    uint64_t v31 = (uint64_t *)((char *)a2 + v26);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SummaryAlertDataModel(uint64_t a1, int *a2)
{
  sub_1AD3317FC(0, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = sub_1AD73A600();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + a2[7], v6);
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = sub_1AD73B970();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = a1 + a2[9];
  sub_1AD3317FC(0, &qword_1EB73CA38, (unint64_t *)&qword_1EB741430);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SummaryAlertDataModel(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1AD3317FC(0, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  uint64_t v14 = sub_1AD73A600();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  v15(a1 + a3[7], a2 + a3[7], v14);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1AD73B970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  sub_1AD3317FC(0, &qword_1EB73CA38, (unint64_t *)&qword_1EB741430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = a3[10];
  uint64_t v25 = a3[11];
  uint64_t v26 = (void *)(a1 + v24);
  uint64_t v27 = (void *)(a2 + v24);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = (void *)(a1 + v25);
  uint64_t v30 = (void *)(a2 + v25);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SummaryAlertDataModel(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1AD3317FC(0, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1AD73A600();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14(a1 + a3[7], a2 + a3[7], v13);
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1AD73B970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_1AD3317FC(0, &qword_1EB73CA38, (unint64_t *)&qword_1EB741430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  void *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[11];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SummaryAlertDataModel(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1AD3317FC(0, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1AD73A600();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1AD73B970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  sub_1AD3317FC(0, &qword_1EB73CA38, (unint64_t *)&qword_1EB741430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  return a1;
}

uint64_t assignWithTake for SummaryAlertDataModel(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1AD3317FC(0, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1AD73A600();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v16(a1 + a3[7], a2 + a3[7], v15);
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1AD73B970();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  sub_1AD3317FC(0, &qword_1EB73CA38, (unint64_t *)&qword_1EB741430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  uint64_t v25 = a3[10];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *uint64_t v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[11];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *uint64_t v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SummaryAlertDataModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AD333DD4);
}

uint64_t sub_1AD333DD4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1AD3317FC(0, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  uint64_t v13 = sub_1AD73A600();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[6];
LABEL_11:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_12;
  }
  uint64_t v16 = sub_1AD73B970();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[8];
    goto LABEL_11;
  }
  sub_1AD3317FC(0, &qword_1EB73CA38, (unint64_t *)&qword_1EB741430);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[9];
  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for SummaryAlertDataModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AD333FE8);
}

void sub_1AD333FE8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1AD3317FC(0, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    unint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    v11(v12, a2, a2, v10);
    return;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 8) = (a2 - 1);
    return;
  }
  uint64_t v13 = sub_1AD73A600();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[6];
LABEL_9:
    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_1AD73B970();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_9;
  }
  sub_1AD3317FC(0, &qword_1EB73CA38, (unint64_t *)&qword_1EB741430);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[9];
  v18(v20, a2, a2, v19);
}

void sub_1AD3341E8()
{
  sub_1AD3317FC(319, &qword_1EB73CA28, (unint64_t *)&qword_1EB741780);
  if (v0 <= 0x3F)
  {
    sub_1AD73A600();
    if (v1 <= 0x3F)
    {
      sub_1AD73B970();
      if (v2 <= 0x3F)
      {
        sub_1AD3317FC(319, &qword_1EB73CA38, (unint64_t *)&qword_1EB741430);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for SummaryAlertDataModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SummaryAlertDataModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AD3344C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummaryAlertDataModel.CodingKeys()
{
  return &type metadata for SummaryAlertDataModel.CodingKeys;
}

unint64_t sub_1AD334504()
{
  unint64_t result = qword_1E9A2C590;
  if (!qword_1E9A2C590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C590);
  }
  return result;
}

unint64_t sub_1AD33455C()
{
  unint64_t result = qword_1EB73CB50;
  if (!qword_1EB73CB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB73CB50);
  }
  return result;
}

unint64_t sub_1AD3345B4()
{
  unint64_t result = qword_1EB73CB48;
  if (!qword_1EB73CB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB73CB48);
  }
  return result;
}

uint64_t sub_1AD334608(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657079546B68 && a2 == 0xE600000000000000;
  if (v2 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469547472656C61 && a2 == 0xEA0000000000656CLL || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461447472617473 && a2 == 0xE900000000000065 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461447472656C61 && a2 == 0xE900000000000065 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AD777A40 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AD777A60 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6554726564616568 && a2 == 0xEA00000000007478 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7373654D79646F62 && a2 == 0xEB00000000656761)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1AD740BC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t GridLayoutEngine.WidthConfiguration.init(defaultWidth:widthsPerWidthDesignation:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  if (a3 <= 0.0)
  {
    swift_bridgeObjectRelease();
    unint64_t result = sub_1AD7408B0();
    __break(1u);
  }
  else
  {
    *(double *)a2 = a3;
    *(void *)(a2 + 8) = result;
  }
  return result;
}

uint64_t GridLayoutEngine.minWidthsOfItem.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t GridLayoutEngine.maxWidthsOfItem.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t GridLayoutEngine.init(minWidthOfItem:maxWidthOfItem:estimatedHeight:interItemSpacingProvider:interSectionSpacing:)@<X0>(double a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  uint64_t v16 = sub_1AD2184D4(MEMORY[0x1E4FBC860]);
  if (a7 <= 0.0) {
    goto LABEL_7;
  }
  if (a2)
  {
    a1 = 0.0;
    uint64_t result = 0;
    goto LABEL_6;
  }
  uint64_t result = sub_1AD2184D4(MEMORY[0x1E4FBC860]);
  if (a1 > 0.0)
  {
LABEL_6:
    *(double *)a6 = a7;
    *(void *)(a6 + 8) = v16;
    *(double *)(a6 + 16) = a1;
    *(void *)(a6 + 24) = result;
    *(double *)(a6 + 32) = a8;
    *(void *)(a6 + 40) = a5;
    *(void *)(a6 + 48) = a3;
    *(void *)(a6 + 56) = a4;
    return result;
  }
LABEL_7:
  swift_bridgeObjectRelease();
  uint64_t result = sub_1AD7408B0();
  __break(1u);
  return result;
}

void *GridLayoutEngine.init(minWidthsOfItem:maxWidthsOfItem:estimatedHeight:interItemSpacingProvider:interSectionSpacing:)@<X0>(void *result@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v7 = result[1];
  *(void *)a6 = *result;
  *(void *)(a6 + 8) = v7;
  *(_OWORD *)(a6 + 16) = *a2;
  *(double *)(a6 + 32) = a7;
  *(void *)(a6 + 40) = a5;
  *(void *)(a6 + 48) = a3;
  *(void *)(a6 + 56) = a4;
  return result;
}

id sub_1AD334B48(uint64_t *a1)
{
  return GridLayoutEngine.layout(for:)(a1);
}

double static GridLayoutEngine.standardMinimumWidth.getter()
{
  if (qword_1EB739AE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return *(double *)&qword_1EB739AD8;
}

uint64_t static GridLayoutEngine.standardMinimumWidth.setter(double a1)
{
  if (qword_1EB739AE8 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  qword_1EB739AD8 = *(void *)&a1;
  return result;
}

uint64_t (*static GridLayoutEngine.standardMinimumWidth.modify())()
{
  if (qword_1EB739AE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static GridLayoutEngine.standard.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB739AE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  double v2 = *(double *)&qword_1EB739AD8;
  id v3 = objc_msgSend(self, sel_interSectionSpacing);
  uint64_t result = sub_1AD2184D4(MEMORY[0x1E4FBC860]);
  if (v2 <= 0.0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1AD7408B0();
    __break(1u);
  }
  else
  {
    *(double *)a1 = v2;
    *(void *)(a1 + 8) = result;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0x4062C00000000000;
    *(void *)(a1 + 40) = v3;
    *(void *)(a1 + 48) = sub_1AD216C14;
    *(void *)(a1 + 56) = 0;
  }
  return result;
}

uint64_t static GridLayoutEngine.maximumOfTwoItemsLayout.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB739AE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  double v2 = *(double *)&qword_1EB739AD8;
  id v3 = objc_msgSend(self, sel_interSectionSpacing);
  uint64_t v4 = sub_1AD2184D4(MEMORY[0x1E4FBC860]);
  if (v2 <= 0.0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_1AD7408B0();
    __break(1u);
  }
  else
  {
    uint64_t result = sub_1AD2184D4(MEMORY[0x1E4FBC860]);
    *(double *)a1 = v2;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = 0x4082C00000000000;
    *(void *)(a1 + 24) = result;
    *(void *)(a1 + 32) = 0x4062C00000000000;
    *(void *)(a1 + 40) = v3;
    *(void *)(a1 + 48) = sub_1AD216C14;
    *(void *)(a1 + 56) = 0;
  }
  return result;
}

uint64_t initializeWithCopy for GridLayoutEngine(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = (id)v8;
  swift_retain();
  return a1;
}

void *assignWithCopy for GridLayoutEngine(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v4 = (void *)a2[5];
  uint64_t v5 = (void *)a1[5];
  a1[5] = v4;
  id v6 = v4;

  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for GridLayoutEngine(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  uint64_t v4 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GridLayoutEngine(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GridLayoutEngine(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void *assignWithCopy for GridLayoutEngine.WidthConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for GridLayoutEngine.WidthConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for GridLayoutEngine.WidthConfiguration()
{
  return &type metadata for GridLayoutEngine.WidthConfiguration;
}

uint64_t sub_1AD335234(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1AD337168(a1, a2);
  swift_release();
  return v2;
}

uint64_t PDFTable.Configuration.init(columnSpacings:rowSpacing:minimumRowHeight:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  *(void *)a2 = result;
  *(double *)(a2 + 8) = a3;
  *(double *)(a2 + 16) = a4;
  return result;
}

uint64_t PDFTable.__allocating_init(_:configuration:pageContinuationRenderables:)(uint64_t (*a1)(void), uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *a3;
  uint64_t v8 = a3[1];
  uint64_t v9 = a3[2];
  uint64_t v10 = a1();
  v13[0] = v7;
  v13[1] = v8;
  _OWORD v13[2] = v9;
  swift_allocObject();
  uint64_t v11 = sub_1AD337334(v10, v13, a4, a5);
  sub_1AD1E4514(a4);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t PDFTable.__allocating_init(_:configuration:pageContinuationRenderables:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v8 = sub_1AD337334(a1, a2, a3, a4);
  sub_1AD1E4514(a3);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t PDFTable.init(_:configuration:pageContinuationRenderables:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1AD337334(a1, a2, a3, a4);
  sub_1AD1E4514(a3);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1AD33540C@<X0>(_OWORD *a1@<X8>)
{
  unint64_t v3 = v1[1];
  unint64_t v4 = *(void *)(*v1 + 16);
  if (v3 == v4)
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
    return result;
  }
  if (v3 >= v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = *v1 + 40 * v3 + 32;
  v1[1] = v3 + 1;
  uint64_t v6 = v1[2];
  uint64_t result = sub_1AD1FFE38(v5, (uint64_t)v8);
  if (__OFADD__(v6, 1))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v1[2] = v6 + 1;
  *(void *)a1 = v6;
  return sub_1AD20FE90(v8, (uint64_t)a1 + 8);
}

void sub_1AD3354AC(uint64_t a1@<X8>)
{
  unint64_t v2 = v1[1];
  unint64_t v3 = *(void *)(*v1 + 16);
  if (v2 == v3)
  {
    *(void *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    return;
  }
  if (v2 >= v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = *v1 + 48 * v2;
  uint64_t v5 = *(void *)(v4 + 32);
  uint64_t v6 = *(void *)(v4 + 40);
  uint64_t v7 = *(void *)(v4 + 48);
  long long v8 = *(_OWORD *)(v4 + 56);
  uint64_t v9 = *(void *)(v4 + 72);
  v1[1] = v2 + 1;
  uint64_t v10 = v1[2];
  if (__OFADD__(v10, 1))
  {
LABEL_9:
    __break(1u);
    return;
  }
  v1[2] = v10 + 1;
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = v8;
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

uint64_t PDFTable.render(context:document:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int v152 = *(unsigned __int8 *)(a2 + 96);
  if (v152 == 1)
  {
    v155 = sub_1AD336518(a2);
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 24);
    uint64_t v170 = *(void *)(v4 + 16);
    if (v170)
    {
      uint64_t v5 = *(void *)(v2 + 48);
      unint64_t v168 = *(void *)(v5 + 16);
      uint64_t v165 = v5;
      uint64_t v163 = v5 + 32;
      uint64_t result = swift_bridgeObjectRetain();
      unint64_t v7 = 0;
      v155 = (void *)MEMORY[0x1E4FBC860];
      double v8 = 0.0;
      do
      {
        if (v7 >= *(void *)(v4 + 16)) {
          goto LABEL_104;
        }
        uint64_t v10 = *(void *)(v4 + 32 + 8 * v7);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v155 = sub_1AD51C7A0(0, v155[2] + 1, 1, v155);
        }
        unint64_t v12 = v155[2];
        unint64_t v11 = v155[3];
        if (v12 >= v11 >> 1) {
          v155 = sub_1AD51C7A0((void *)(v11 > 1), v12 + 1, 1, v155);
        }
        v155[2] = v12 + 1;
        *(double *)&v155[v12 + 4] = v8;
        uint64_t v13 = *(void *)(v10 + 16);
        if (v13)
        {
          uint64_t v14 = v10 + 32;
          swift_bridgeObjectRetain();
          double v15 = 0.0;
          do
          {
            sub_1AD1FFE38(v14, (uint64_t)&v187);
            type metadata accessor for PDFBuilder.Document();
            swift_allocObject();
            uint64_t v16 = sub_1AD4B4AFC(a2);
            *(double *)(v16 + 168) = PDFBuilder.Document.bodyBox.getter();
            *(void *)(v16 + 176) = v17;
            *(void *)(v16 + 184) = v18;
            *(void *)(v16 + 192) = v19;
            *(unsigned char *)(v16 + 200) = 0;
            uint64_t v20 = v189;
            uint64_t v21 = v190;
            __swift_project_boxed_opaque_existential_1(&v187, v189);
            v194.origin.CGFloat x = (*(double (**)(uint64_t, uint64_t, uint64_t))(v21 + 24))(v16, v20, v21);
            double Width = CGRectGetWidth(v194);
            swift_release();
            if (Width > v15) {
              double v15 = Width;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v187);
            v14 += 40;
            --v13;
          }
          while (v13);
          uint64_t result = swift_bridgeObjectRelease_n();
          uint64_t v3 = v149;
        }
        else
        {
          uint64_t result = swift_bridgeObjectRelease();
          double v15 = 0.0;
        }
        if (v7 >= v168)
        {
          uint64_t v9 = (double *)&qword_1E9A2E5B8;
          uint64_t result = swift_beginAccess();
        }
        else
        {
          if (v7 >= *(void *)(v165 + 16)) {
            goto LABEL_105;
          }
          uint64_t v9 = (double *)(v163 + 8 * v7);
        }
        ++v7;
        double v8 = v8 + v15 + *v9;
      }
      while (v7 != v170);
      swift_bridgeObjectRelease();
    }
    else
    {
      v155 = (void *)MEMORY[0x1E4FBC860];
    }
  }
  uint64_t v23 = *(void *)(v3 + 16);
  uint64_t v192 = 0;
  uint64_t v193 = 0;
  uint64_t v191 = v23;
  uint64_t v146 = v23;
  swift_bridgeObjectRetain();
  sub_1AD33540C(&v184);
  sub_1AD337748((uint64_t)&v184, (uint64_t)&v187, &qword_1E9A2C598, &qword_1E9A2C5A0, &qword_1E9A2AAF8);
  if (!v190)
  {
LABEL_99:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_27:
  uint64_t v148 = v187;
  sub_1AD20FE90(&v188, (uint64_t)v181);
  uint64_t v24 = v182;
  uint64_t v25 = v183;
  __swift_project_boxed_opaque_existential_1(v181, v182);
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
  uint64_t v27 = *(void *)(v26 + 16);
  double v28 = 0.0;
  if (v27)
  {
    uint64_t v29 = v26 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1AD1FFE38(v29, (uint64_t)&v184);
      type metadata accessor for PDFBuilder.Document();
      swift_allocObject();
      uint64_t v30 = sub_1AD4B4AFC(a2);
      *(double *)(v30 + 168) = PDFBuilder.Document.bodyBox.getter();
      *(void *)(v30 + 176) = v31;
      *(void *)(v30 + 184) = v32;
      *(void *)(v30 + 192) = v33;
      *(unsigned char *)(v30 + 200) = 0;
      uint64_t v34 = v185;
      uint64_t v35 = v186;
      __swift_project_boxed_opaque_existential_1(&v184, v185);
      v195.origin.CGFloat x = (*(double (**)(uint64_t, uint64_t, uint64_t))(v35 + 24))(v30, v34, v35);
      double Height = CGRectGetHeight(v195);
      swift_release();
      if (Height > v28) {
        double v28 = Height;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v184);
      v29 += 40;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
  }
  double v37 = *(double *)(v3 + 64);
  swift_bridgeObjectRelease();
  if (v28 > v37) {
    CGFloat v38 = v28;
  }
  else {
    CGFloat v38 = v37;
  }
  double v147 = v38;
  sub_1AD336904(a2, a1, v38);
  uint64_t v39 = v182;
  uint64_t v40 = v183;
  __swift_project_boxed_opaque_existential_1(v181, v182);
  uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
  unint64_t v42 = *(void *)(v41 + 16);
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  uint64_t result = swift_beginAccess();
  unint64_t v43 = 0;
  uint64_t v150 = v41 + 32;
  uint64_t v151 = v41;
  unint64_t v153 = v42;
  while (1)
  {
    if (v43 == v42)
    {
      long long v179 = 0u;
      long long v180 = 0u;
      unint64_t v58 = v42;
      long long v178 = 0u;
    }
    else
    {
      if ((v43 & 0x8000000000000000) != 0) {
        goto LABEL_102;
      }
      if (v43 >= *(void *)(v151 + 16)) {
        goto LABEL_103;
      }
      sub_1AD1FFE38(v150 + 40 * v43, (uint64_t)&v175);
      *(void *)&long long v178 = v43;
      sub_1AD20FE90(&v175, (uint64_t)&v178 + 8);
      unint64_t v58 = v43 + 1;
    }
    sub_1AD337748((uint64_t)&v178, (uint64_t)&v184, (unint64_t *)&qword_1EB732768, (unint64_t *)&qword_1EB732760, qword_1EB732090);
    if (!v186)
    {
      swift_bridgeObjectRelease();
      v208.origin.CGFloat x = PDFBuilder.Document.drawingContext.getter();
      CGFloat x = v208.origin.x;
      CGFloat y = v208.origin.y;
      CGFloat v135 = v208.size.width;
      CGFloat v136 = v208.size.height;
      double v137 = CGRectGetMinX(v208) + 0.0;
      v209.origin.CGFloat x = x;
      v209.origin.CGFloat y = y;
      v209.size.width = v135;
      v209.size.height = v136;
      double v138 = v147 + CGRectGetMinY(v209);
      v210.origin.CGFloat x = x;
      v210.origin.CGFloat y = y;
      v210.size.width = v135;
      v210.size.height = v136;
      CGFloat v139 = CGRectGetWidth(v210);
      v211.origin.CGFloat x = x;
      v211.origin.CGFloat y = y;
      v211.size.width = v135;
      v211.size.height = v136;
      double v140 = CGRectGetHeight(v211) - v147;
      *(double *)(a2 + 168) = v137;
      *(double *)(a2 + 176) = v138;
      *(CGFloat *)(a2 + 184) = v139;
      *(double *)(a2 + 192) = v140;
      *(unsigned char *)(a2 + 200) = 0;
      if (v148 < *(void *)(v146 + 16) - 1)
      {
        double v141 = *(double *)(v3 + 56);
        v212.origin.CGFloat x = v137;
        v212.origin.CGFloat y = v138;
        v212.size.width = v139;
        v212.size.height = v140;
        CGFloat v142 = CGRectGetMinX(v212) + 0.0;
        v213.origin.CGFloat x = v137;
        v213.origin.CGFloat y = v138;
        v213.size.width = v139;
        v213.size.height = v140;
        double v143 = v141 + CGRectGetMinY(v213);
        v214.origin.CGFloat x = v137;
        v214.origin.CGFloat y = v138;
        v214.size.width = v139;
        v214.size.height = v140;
        CGFloat v144 = CGRectGetWidth(v214);
        v215.origin.CGFloat x = v137;
        v215.origin.CGFloat y = v138;
        v215.size.width = v139;
        v215.size.height = v140;
        CGFloat v145 = CGRectGetHeight(v215);
        *(CGFloat *)(a2 + 168) = v142;
        *(double *)(a2 + 176) = v143;
        *(CGFloat *)(a2 + 184) = v144;
        *(CGFloat *)(a2 + 192) = v145 - v141;
        *(unsigned char *)(a2 + 200) = 0;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v181);
      sub_1AD33540C(&v184);
      sub_1AD337748((uint64_t)&v184, (uint64_t)&v187, &qword_1E9A2C598, &qword_1E9A2C5A0, &qword_1E9A2AAF8);
      if (!v190) {
        goto LABEL_99;
      }
      goto LABEL_27;
    }
    unint64_t v59 = v184;
    uint64_t result = sub_1AD20FE90((long long *)((char *)&v184 + 8), (uint64_t)&v178);
    if ((v59 & 0x8000000000000000) != 0) {
      break;
    }
    if (v59 >= v155[2]) {
      goto LABEL_101;
    }
    unint64_t v157 = v58;
    double v60 = *(double *)&v155[v59 + 4];
    type metadata accessor for PDFBuilder.Document();
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 104) = 1;
    *(unsigned char *)(v61 + 112) = 1;
    *(_OWORD *)(v61 + 120) = 0u;
    *(_OWORD *)(v61 + 136) = 0u;
    *(_WORD *)(v61 + 152) = 256;
    *(void *)(v61 + 160) = 1;
    *(_OWORD *)(v61 + 168) = 0u;
    *(_OWORD *)(v61 + 184) = 0u;
    *(_WORD *)(v61 + 200) = 257;
    long long v62 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v61 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v61 + 32) = v62;
    long long v63 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(v61 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v61 + 64) = v63;
    *(_OWORD *)(v61 + 80) = *(_OWORD *)(a2 + 80);
    char v64 = *(unsigned char *)(a2 + 201);
    swift_beginAccess();
    *(unsigned char *)(v61 + 201) = v64;
    *(unsigned char *)(v61 + 96) = v152;
    uint64_t v65 = *(void *)(a2 + 216);
    *(void *)(v61 + 208) = *(void *)(a2 + 208);
    *(void *)(v61 + 216) = v65;
    *(double *)(v61 + 168) = PDFBuilder.Document.drawingContext.getter();
    *(void *)(v61 + 176) = v66;
    *(void *)(v61 + 184) = v67;
    *(void *)(v61 + 192) = v68;
    *(unsigned char *)(v61 + 200) = 0;
    *(void *)(v61 + 104) = *(void *)(a2 + 104);
    *(void *)(v61 + 120) = *(void *)(a2 + 120);
    uint64_t v69 = *(void *)(a2 + 160);
    swift_beginAccess();
    *(void *)(v61 + 160) = v69;
    if (!v152)
    {
      double v44 = PDFBuilder.Document.drawingContext.getter();
      CGFloat v46 = v45;
      CGFloat v48 = v47;
      CGFloat v50 = v49;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v196.origin.CGFloat x = v44;
      v196.origin.CGFloat y = v46;
      v196.size.width = v48;
      v196.size.height = v50;
      double v51 = v60 + CGRectGetMinX(v196);
      v197.origin.CGFloat x = v44;
      v197.origin.CGFloat y = v46;
      v197.size.width = v48;
      v197.size.height = v50;
      double v52 = v60;
      CGFloat v53 = CGRectGetMinY(v197) + 0.0;
      v198.origin.CGFloat x = v44;
      v198.origin.CGFloat y = v46;
      v198.size.width = v48;
      v198.size.height = v50;
      CGFloat v54 = CGRectGetWidth(v198) - v52;
      v199.origin.CGFloat x = v44;
      v199.origin.CGFloat y = v46;
      v199.size.width = v48;
      v199.size.height = v50;
      CGFloat v55 = CGRectGetHeight(v199);
      *(double *)(v61 + 168) = v51;
      *(CGFloat *)(v61 + 176) = v53;
      *(CGFloat *)(v61 + 184) = v54;
      *(CGFloat *)(v61 + 192) = v55;
LABEL_38:
      *(unsigned char *)(v61 + 200) = 0;
      unint64_t v42 = v153;
      unint64_t v43 = v157;
      goto LABEL_39;
    }
    uint64_t v161 = v61;
    uint64_t v70 = *(void *)(v3 + 24);
    if (v59 < *(void *)(v70 + 16))
    {
      uint64_t v71 = *(void *)(v70 + 8 * v59 + 32);
      uint64_t v160 = *(void *)(v71 + 16);
      if (v160)
      {
        uint64_t v158 = v71 + 32;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_beginAccess();
        uint64_t v72 = 0;
        double v73 = 0.0;
        double v159 = v60;
        while (1)
        {
          sub_1AD1FFE38(v158 + 40 * v72, (uint64_t)&v174);
          swift_allocObject();
          uint64_t v77 = sub_1AD4B4AFC(v61);
          swift_beginAccess();
          uint64_t v78 = *(void *)(v77 + 208);
          int64_t v79 = *(void *)(v78 + 16);
          double v171 = v73;
          uint64_t v162 = v72;
          if (v79)
          {
            uint64_t v172 = MEMORY[0x1E4FBC860];
            swift_retain();
            swift_bridgeObjectRetain();
            sub_1AD2F57D0(0, v79, 0);
            uint64_t v80 = v172;
            uint64_t v81 = (void *)(v78 + 32);
            do
            {
              uint64_t v82 = v81[4];
              __swift_project_boxed_opaque_existential_1(v81, v81[3]);
              swift_allocObject();
              uint64_t v83 = sub_1AD4B4AFC(v77);
              long long v84 = *(_OWORD *)(v83 + 48);
              *(_OWORD *)(v83 + 168) = *(_OWORD *)(v83 + 32);
              *(_OWORD *)(v83 + 184) = v84;
              *(unsigned char *)(v83 + 200) = 0;
              CGFloat v85 = (*(double (**)(void))(v82 + 24))();
              CGFloat v87 = v86;
              CGFloat v89 = v88;
              CGFloat v91 = v90;
              swift_release();
              v201.origin.CGFloat x = v85;
              v201.origin.CGFloat y = v87;
              v201.size.width = v89;
              v201.size.height = v91;
              CGFloat v92 = CGRectGetHeight(v201);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                sub_1AD2F57D0(0, *(void *)(v172 + 16) + 1, 1);
              }
              unint64_t v94 = *(void *)(v172 + 16);
              unint64_t v93 = *(void *)(v172 + 24);
              if (v94 >= v93 >> 1) {
                sub_1AD2F57D0(v93 > 1, v94 + 1, 1);
              }
              *(void *)(v172 + 16) = v94 + 1;
              *(CGFloat *)(v172 + 8 * v94 + 32) = v92;
              v81 += 5;
              --v79;
            }
            while (v79);
            swift_bridgeObjectRelease();
            swift_release();
          }
          else
          {
            uint64_t v80 = MEMORY[0x1E4FBC860];
          }
          uint64_t v95 = *(void *)(v80 + 16);
          *(double *)&uint64_t v96 = 0.0;
          double v97 = 0.0;
          if (v95)
          {
            uint64_t v98 = (double *)(v80 + 32);
            do
            {
              double v99 = *v98++;
              double v97 = v97 + v99;
              --v95;
            }
            while (v95);
          }
          swift_bridgeObjectRelease();
          double v167 = v97 + 1.0;
          if (v97 + 1.0 > 0.0)
          {
            swift_beginAccess();
            uint64_t v96 = qword_1E9A2E5B0;
          }
          double v169 = *(double *)&v96;
          double v100 = 0.0;
          if ((*(unsigned char *)(v77 + 153) & 1) == 0)
          {
            double v100 = *(double *)(v77 + 144);
            if (*(unsigned char *)(v77 + 152)) {
              double v100 = 0.0;
            }
          }
          double v166 = v100;
          double v102 = *(double *)(v77 + 32);
          double v101 = *(double *)(v77 + 40);
          CGFloat v103 = *(double *)(v77 + 48);
          CGFloat v104 = *(double *)(v77 + 56);
          v202.origin.CGFloat x = v102;
          v202.origin.CGFloat y = v101;
          v202.size.width = v103;
          v202.size.height = v104;
          double v164 = CGRectGetHeight(v202);
          swift_beginAccess();
          uint64_t v105 = *(void *)(v77 + 216);
          int64_t v106 = *(void *)(v105 + 16);
          if (v106)
          {
            uint64_t v173 = MEMORY[0x1E4FBC860];
            swift_retain();
            swift_bridgeObjectRetain();
            sub_1AD2F57D0(0, v106, 0);
            uint64_t v107 = v173;
            uint64_t v108 = (void *)(v105 + 32);
            do
            {
              uint64_t v109 = v108[4];
              __swift_project_boxed_opaque_existential_1(v108, v108[3]);
              swift_allocObject();
              uint64_t v110 = sub_1AD4B4AFC(v77);
              long long v111 = *(_OWORD *)(v110 + 48);
              *(_OWORD *)(v110 + 168) = *(_OWORD *)(v110 + 32);
              *(_OWORD *)(v110 + 184) = v111;
              *(unsigned char *)(v110 + 200) = 0;
              CGFloat v112 = (*(double (**)(void))(v109 + 24))();
              CGFloat v114 = v113;
              CGFloat v116 = v115;
              CGFloat v118 = v117;
              swift_release();
              v203.origin.CGFloat x = v112;
              v203.origin.CGFloat y = v114;
              v203.size.width = v116;
              v203.size.height = v118;
              CGFloat v119 = CGRectGetHeight(v203);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                sub_1AD2F57D0(0, *(void *)(v173 + 16) + 1, 1);
              }
              unint64_t v121 = *(void *)(v173 + 16);
              unint64_t v120 = *(void *)(v173 + 24);
              if (v121 >= v120 >> 1) {
                sub_1AD2F57D0(v120 > 1, v121 + 1, 1);
              }
              *(void *)(v173 + 16) = v121 + 1;
              *(CGFloat *)(v173 + 8 * v121 + 32) = v119;
              v108 += 5;
              --v106;
            }
            while (v106);
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v122 = *(void *)(v173 + 16);
            if (v122)
            {
LABEL_80:
              uint64_t v123 = (double *)(v107 + 32);
              double v124 = 0.0;
              do
              {
                double v125 = *v123++;
                double v124 = v124 + v125;
                --v122;
              }
              while (v122);
              goto LABEL_85;
            }
          }
          else
          {
            uint64_t v107 = MEMORY[0x1E4FBC860];
            uint64_t v122 = *(void *)(MEMORY[0x1E4FBC860] + 16);
            if (v122) {
              goto LABEL_80;
            }
          }
          double v124 = 0.0;
LABEL_85:
          swift_bridgeObjectRelease();
          double v126 = *(double *)&qword_1E9A2E5C0;
          if (*(unsigned char *)(v77 + 153) & 1) != 0 || (*(unsigned char *)(v77 + 136))
          {
            v204.origin.CGFloat x = v102;
            v204.origin.CGFloat y = v101;
            v204.size.width = v103;
            v204.size.height = v104;
            double v127 = CGRectGetWidth(v204);
          }
          else
          {
            double v127 = *(double *)(v77 + 128);
          }
          v205.origin.CGFloat x = v102;
          v205.origin.CGFloat y = v101;
          v205.size.width = v103;
          v205.size.height = v104;
          double v128 = CGRectGetWidth(v205);
          if (v127 >= v128) {
            double v127 = v128;
          }
          if (*(unsigned char *)(v77 + 96) == 1)
          {
            v206.origin.CGFloat x = v102;
            v206.origin.CGFloat y = v101;
            v206.size.width = v103;
            v206.size.height = v104;
            double v102 = CGRectGetMaxX(v206) - v127;
          }
          uint64_t v72 = v162 + 1;
          *(double *)(v77 + 168) = v102;
          *(double *)(v77 + 176) = v166 + v167 + v169 + v101;
          *(double *)(v77 + 184) = v127;
          *(double *)(v77 + 192) = v164 - (v167 + v169) - v166 - v124 - v126;
          *(unsigned char *)(v77 + 200) = 0;
          uint64_t v74 = v176;
          uint64_t v75 = v177;
          __swift_project_boxed_opaque_existential_1(&v174, v176);
          v200.origin.CGFloat x = (*(double (**)(uint64_t, uint64_t, uint64_t))(v75 + 24))(v77, v74, v75);
          double v76 = CGRectGetWidth(v200);
          swift_release();
          double v73 = v171;
          if (v76 > v171) {
            double v73 = v76;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v174);
          uint64_t v61 = v161;
          double v60 = v159;
          if (v72 == v160)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v3 = v149;
            goto LABEL_96;
          }
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      double v73 = 0.0;
LABEL_96:
      uint64_t v129 = *((void *)&v179 + 1);
      uint64_t v130 = v180;
      __swift_project_boxed_opaque_existential_1(&v178, *((uint64_t *)&v179 + 1));
      v207.origin.CGFloat x = (*(double (**)(uint64_t, uint64_t, uint64_t))(v130 + 24))(v61, v129, v130);
      double v131 = v60 + v73 - CGRectGetWidth(v207);
      PDFBuilder.Document.drawingContext.getter();
      *(double *)(v61 + 168) = v131;
      *(void *)(v61 + 176) = v132;
      goto LABEL_38;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v42 = v153;
    unint64_t v43 = v157;
LABEL_39:
    uint64_t v56 = *((void *)&v179 + 1);
    uint64_t v57 = v180;
    __swift_project_boxed_opaque_existential_1(&v178, *((uint64_t *)&v179 + 1));
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v57 + 16))(a1, v61, v56, v57);
    swift_release();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v178);
  }
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
  return result;
}

void *sub_1AD336518(uint64_t a1)
{
  unint64_t v5 = *(void *)(v2 + 24);
  if (!*(void *)(v5 + 16)) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v6 = v2;
  unint64_t v8 = a1;
  v50.origin.CGFloat x = PDFBuilder.Document.drawingContext.getter();
  double MaxX = CGRectGetMaxX(v50);
  unint64_t v10 = *(void *)(v5 + 16);
  if (!v10) {
    goto LABEL_36;
  }
  double v11 = MaxX;
  uint64_t v12 = *(void *)(v5 + 32);
  unint64_t v45 = v5 + 32;
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v14 = v12 + 32;
    swift_bridgeObjectRetain_n();
    double v15 = 0.0;
    do
    {
      sub_1AD1FFE38(v14, (uint64_t)v47);
      type metadata accessor for PDFBuilder.Document();
      swift_allocObject();
      uint64_t v16 = sub_1AD4B4AFC(a1);
      *(double *)(v16 + 168) = PDFBuilder.Document.bodyBox.getter();
      *(void *)(v16 + 176) = v17;
      *(void *)(v16 + 184) = v18;
      *(void *)(v16 + 192) = v19;
      *(unsigned char *)(v16 + 200) = 0;
      uint64_t v20 = v48;
      uint64_t v21 = v49;
      __swift_project_boxed_opaque_existential_1(v47, v48);
      v51.origin.CGFloat x = (*(double (**)(uint64_t, uint64_t, uint64_t))(v21 + 24))(v16, v20, v21);
      double Width = CGRectGetWidth(v51);
      swift_release();
      if (Width > v15) {
        double v15 = Width;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
      v14 += 40;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    double v15 = 0.0;
  }
  double v4 = v11 - v15;
  uint64_t v3 = sub_1AD51C7A0(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v1 = v3[2];
  unint64_t v10 = v3[3];
  unint64_t v8 = v1 + 1;
  if (v1 >= v10 >> 1) {
    goto LABEL_37;
  }
  while (1)
  {
    v3[2] = v8;
    *(double *)&v3[v1 + 4] = v4;
    unint64_t v23 = *(void *)(v5 + 16);
    unint64_t v1 = v23 != 0;
    if (v23 == v1) {
      break;
    }
    uint64_t v24 = *(void *)(v6 + 48);
    unint64_t v44 = *(void *)(v24 + 16);
    uint64_t v42 = v24;
    uint64_t v41 = v24 + 32;
    swift_bridgeObjectRetain();
    unint64_t v5 = 0;
    unint64_t v43 = v23;
    while (v1 < v23)
    {
      uint64_t v25 = *(void *)(v45 + 8 * v1);
      if (v5 >= v44)
      {
        uint64_t v26 = (double *)&qword_1E9A2E5B8;
        swift_beginAccess();
      }
      else
      {
        unint64_t v10 = *(void *)(v42 + 16);
        if (v5 >= v10) {
          goto LABEL_35;
        }
        uint64_t v26 = (double *)(v41 + 8 * v5);
      }
      double v27 = *v26;
      uint64_t v28 = *(void *)(v25 + 16);
      if (v28)
      {
        CGFloat v46 = v3;
        uint64_t v29 = v25 + 32;
        swift_bridgeObjectRetain_n();
        double v30 = 0.0;
        do
        {
          sub_1AD1FFE38(v29, (uint64_t)v47);
          type metadata accessor for PDFBuilder.Document();
          swift_allocObject();
          uint64_t v31 = sub_1AD4B4AFC(a1);
          *(double *)(v31 + 168) = PDFBuilder.Document.bodyBox.getter();
          *(void *)(v31 + 176) = v32;
          *(void *)(v31 + 184) = v33;
          *(void *)(v31 + 192) = v34;
          *(unsigned char *)(v31 + 200) = 0;
          uint64_t v35 = v48;
          uint64_t v6 = v49;
          __swift_project_boxed_opaque_existential_1(v47, v48);
          v52.origin.CGFloat x = (*(double (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v31, v35, v6);
          double v36 = CGRectGetWidth(v52);
          swift_release();
          if (v36 > v30) {
            double v30 = v36;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
          v29 += 40;
          --v28;
        }
        while (v28);
        swift_bridgeObjectRelease_n();
        uint64_t v3 = v46;
        unint64_t v23 = v43;
      }
      else
      {
        double v30 = 0.0;
      }
      unint64_t v38 = v3[2];
      unint64_t v37 = v3[3];
      unint64_t v8 = v38 + 1;
      if (v38 >= v37 >> 1) {
        uint64_t v3 = sub_1AD51C7A0((void *)(v37 > 1), v38 + 1, 1, v3);
      }
      ++v1;
      ++v5;
      double v4 = v4 - v27 - v30;
      v3[2] = v8;
      unint64_t v10 = (unint64_t)&v3[v38];
      *(double *)(v10 + 32) = v4;
      if (v1 == v23)
      {
        swift_bridgeObjectRelease();
        unint64_t v8 = v3[2];
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t v3 = sub_1AD51C7A0((void *)(v10 > 1), v8, 1, v3);
  }
LABEL_30:
  unint64_t v39 = v3[3];
  if (v8 >= v39 >> 1) {
    uint64_t v3 = sub_1AD51C7A0((void *)(v39 > 1), v8 + 1, 1, v3);
  }
  v3[2] = v8 + 1;
  v3[v8 + 4] = 0;
  return v3;
}

void sub_1AD336904(uint64_t a1, void *a2, CGFloat a3)
{
  double v7 = PDFBuilder.Document.drawingContext.getter();
  CGFloat v9 = v8;
  v20.size.width = CGRectGetWidth(*(CGRect *)(a1 + 168));
  v20.origin.CGFloat x = v7;
  v20.origin.CGFloat y = v9;
  v20.size.height = a3;
  if (!CGRectContainsRect(*(CGRect *)(a1 + 168), v20))
  {
    swift_beginAccess();
    uint64_t v10 = *(void *)(a1 + 120);
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11)
    {
      __break(1u);
    }
    else
    {
      uint64_t v13 = *(void *)(a1 + 160);
      if (v12 == *(void *)(a1 + 104))
      {
        sub_1AD4B4558(a2);
      }
      else
      {
        *(void *)(a1 + 120) = v12;
        sub_1AD4B48A0();
      }
      if (v13 != *(void *)(a1 + 160))
      {
        uint64_t v14 = *(uint64_t (**)(uint64_t))(v3 + 32);
        if (v14)
        {
          uint64_t v15 = v14(a1);
          uint64_t v16 = *(void *)(v15 + 16);
          if (v16)
          {
            uint64_t v17 = (void *)(v15 + 32);
            do
            {
              uint64_t v18 = v17[3];
              uint64_t v19 = v17[4];
              __swift_project_boxed_opaque_existential_1(v17, v18);
              (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v19 + 16))(a2, a1, v18, v19);
              v17 += 5;
              --v16;
            }
            while (v16);
          }
          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

void PDFTable.boundingRectForContent(in:)(uint64_t a1)
{
  sub_1AD336A7C(*(void *)(v1 + 24), a1);
}

void sub_1AD336A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_30:
    PDFBuilder.Document.drawingContext.getter();
    return;
  }
  uint64_t v31 = v3 - 1;
  uint64_t v33 = a1 + 32;
  swift_bridgeObjectRetain();
  unint64_t v4 = 0;
  double v5 = 0.0;
  double v6 = 0.0;
  uint64_t v32 = v3;
LABEL_6:
  uint64_t v8 = *(void *)(v33 + 8 * v4);
  unint64_t v34 = v4;
  unint64_t v35 = v4 + 1;
  unint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = v8 + 32;
  swift_bridgeObjectRetain_n();
  unint64_t v11 = 0;
  double v12 = 0.0;
  while (1)
  {
    if (v11 == v9)
    {
      long long v39 = 0u;
      long long v40 = 0u;
      unint64_t v11 = v9;
      long long v38 = 0u;
      goto LABEL_12;
    }
    if (v11 >= *(void *)(v8 + 16)) {
      break;
    }
    sub_1AD1FFE38(v10 + 40 * v11, (uint64_t)v37);
    *(void *)&long long v38 = v11;
    sub_1AD20FE90(v37, (uint64_t)&v38 + 8);
    ++v11;
LABEL_12:
    sub_1AD337748((uint64_t)&v38, (uint64_t)&v41, (unint64_t *)&qword_1EB732768, (unint64_t *)&qword_1EB732760, qword_1EB732090);
    if (!v44)
    {
      swift_bridgeObjectRelease();
      if (v12 > v5) {
        double v5 = v12;
      }
      if (v9)
      {
        swift_bridgeObjectRetain();
        double v22 = 0.0;
        do
        {
          sub_1AD1FFE38(v10, (uint64_t)&v41);
          type metadata accessor for PDFBuilder.Document();
          swift_allocObject();
          uint64_t v23 = sub_1AD4B4AFC(a2);
          *(double *)(v23 + 168) = PDFBuilder.Document.bodyBox.getter();
          *(void *)(v23 + 176) = v24;
          *(void *)(v23 + 184) = v25;
          *(void *)(v23 + 192) = v26;
          *(unsigned char *)(v23 + 200) = 0;
          uint64_t v27 = v43;
          uint64_t v28 = v44;
          __swift_project_boxed_opaque_existential_1(&v41, v43);
          v46.origin.CGFloat x = (*(double (**)(uint64_t, uint64_t, uint64_t))(v28 + 24))(v23, v27, v28);
          double Width = CGRectGetWidth(v46);
          swift_release();
          if (Width > v22) {
            double v22 = Width;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
          v10 += 40;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
        double v22 = 0.0;
      }
      double v6 = v6 + v22;
      if ((uint64_t)v34 < v31)
      {
        uint64_t v30 = *(void *)(v36 + 48);
        if (v34 < *(void *)(v30 + 16))
        {
          double v7 = (double *)(v30 + 8 * v34 + 32);
        }
        else
        {
          double v7 = (double *)&qword_1E9A2E5B8;
          swift_beginAccess();
        }
        double v6 = v6 + *v7;
      }
      unint64_t v4 = v35;
      if (v35 == v32)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      goto LABEL_6;
    }
    uint64_t v13 = v41;
    sub_1AD20FE90(&v42, (uint64_t)&v38);
    type metadata accessor for PDFBuilder.Document();
    swift_allocObject();
    uint64_t v14 = sub_1AD4B4AFC(a2);
    *(double *)(v14 + 168) = PDFBuilder.Document.bodyBox.getter();
    *(void *)(v14 + 176) = v15;
    *(void *)(v14 + 184) = v16;
    *(void *)(v14 + 192) = v17;
    *(unsigned char *)(v14 + 200) = 0;
    uint64_t v19 = *((void *)&v39 + 1);
    uint64_t v18 = v40;
    __swift_project_boxed_opaque_existential_1(&v38, *((uint64_t *)&v39 + 1));
    v45.origin.CGFloat x = (*(double (**)(uint64_t, uint64_t, uint64_t))(v18 + 24))(v14, v19, v18);
    double Height = CGRectGetHeight(v45);
    swift_release();
    double v21 = *(double *)(v36 + 64);
    if (Height > v21) {
      double v21 = Height;
    }
    double v12 = v12 + v21;
    if (v13 < *(void *)(v8 + 16) - 1) {
      double v12 = v12 + *(double *)(v36 + 56);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  }
  __break(1u);
}

double PDFTable.minimumBoundingRectForContent(in:)(uint64_t a1)
{
  sub_1AD337884();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD74C370;
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v21 = a1;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    double v7 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v14 = *(void *)(v4 + 8 * v6 + 32);
      if (*(void *)(v14 + 16))
      {
        sub_1AD1FFE38(v14 + 32, (uint64_t)v22);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v25 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          double v7 = sub_1AD51C744(0, v7[2] + 1, 1, v7);
          uint64_t v25 = v7;
        }
        unint64_t v17 = v7[2];
        unint64_t v16 = v7[3];
        if (v17 >= v16 >> 1) {
          uint64_t v25 = sub_1AD51C744((void *)(v16 > 1), v17 + 1, 1, v7);
        }
        uint64_t v8 = v23;
        uint64_t v9 = v24;
        uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
        MEMORY[0x1F4188790](v10);
        double v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
        (*(void (**)(unsigned char *))(v13 + 16))(v12);
        sub_1AD1FAE5C(v17, (uint64_t)v12, (uint64_t *)&v25, v8, v9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
        double v7 = v25;
      }
      ++v6;
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
    a1 = v21;
  }
  else
  {
    double v7 = (void *)MEMORY[0x1E4FBC860];
  }
  *(void *)(inited + 32) = v7;
  sub_1AD336A7C(inited, a1);
  double v19 = v18;
  swift_setDeallocating();
  sub_1AD3378DC();
  swift_arrayDestroy();
  return v19;
}

uint64_t PDFTable.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD1E4514(*(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PDFTable.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD1E4514(*(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD3370F4(void *a1, uint64_t a2)
{
  return PDFTable.render(context:document:)(a1, a2);
}

void sub_1AD337118(uint64_t a1)
{
  sub_1AD336A7C(*(void *)(*(void *)v1 + 24), a1);
}

double sub_1AD337144(uint64_t a1)
{
  return PDFTable.minimumBoundingRectForContent(in:)(a1);
}

uint64_t sub_1AD337168(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1AD2F57D0(0, v2, 0);
    uint64_t v3 = v21;
    uint64_t v6 = (void *)(a1 + 32);
    do
    {
      uint64_t v7 = v6[4];
      __swift_project_boxed_opaque_existential_1(v6, v6[3]);
      swift_allocObject();
      uint64_t v8 = sub_1AD4B4AFC(a2);
      long long v9 = *(_OWORD *)(v8 + 48);
      *(_OWORD *)(v8 + 168) = *(_OWORD *)(v8 + 32);
      *(_OWORD *)(v8 + 184) = v9;
      *(unsigned char *)(v8 + 200) = 0;
      CGFloat v10 = (*(double (**)(void))(v7 + 24))();
      CGFloat v12 = v11;
      CGFloat v14 = v13;
      CGFloat v16 = v15;
      swift_release();
      v22.origin.CGFloat x = v10;
      v22.origin.CGFloat y = v12;
      v22.size.width = v14;
      v22.size.height = v16;
      CGFloat Height = CGRectGetHeight(v22);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1AD2F57D0(0, *(void *)(v21 + 16) + 1, 1);
      }
      unint64_t v19 = *(void *)(v21 + 16);
      unint64_t v18 = *(void *)(v21 + 24);
      if (v19 >= v18 >> 1) {
        sub_1AD2F57D0(v18 > 1, v19 + 1, 1);
      }
      *(void *)(v21 + 16) = v19 + 1;
      *(CGFloat *)(v21 + 8 * v19 + 32) = Height;
      v6 += 5;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1AD337334(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a2;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 40) = a4;
  *(void *)(v4 + 48) = v6;
  *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 1);
  *(void *)(v4 + 32) = a3;
  uint64_t v34 = *(void *)(a1 + 16);
  if (v34)
  {
    uint64_t v33 = a1 + 32;
    swift_bridgeObjectRetain();
    sub_1AD21485C(a3);
    uint64_t v7 = 0;
    uint64_t v36 = (uint64_t)v44 + 8;
    uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
    long long v39 = (long long *)v46;
LABEL_4:
    long long v9 = (void *)(v33 + 40 * v7);
    uint64_t v35 = v7 + 1;
    uint64_t v10 = v9[3];
    uint64_t v11 = v9[4];
    __swift_project_boxed_opaque_existential_1(v9, v10);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    unint64_t v13 = 0;
    unint64_t v14 = *(void *)(result + 16);
    uint64_t v38 = result;
    uint64_t v37 = result + 32;
    if (!v14)
    {
LABEL_5:
      unint64_t v13 = v14;
      memset(v44, 0, sizeof(v44));
      goto LABEL_8;
    }
    while (v13 < *(void *)(v38 + 16))
    {
      sub_1AD1FFE38(v37 + 40 * v13, (uint64_t)&v41);
      *(void *)&v44[0] = v13;
      sub_1AD20FE90(&v41, v36);
      ++v13;
LABEL_8:
      sub_1AD337748((uint64_t)v44, (uint64_t)&v45, (unint64_t *)&qword_1EB732768, (unint64_t *)&qword_1EB732760, qword_1EB732090);
      if (!v46[3])
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = v35;
        if (v35 == v34) {
          goto LABEL_27;
        }
        goto LABEL_4;
      }
      unint64_t v15 = v45;
      sub_1AD20FE90(v39, (uint64_t)v44);
      uint64_t v16 = v8[2];
      if ((uint64_t)v15 >= v16)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_1AD51C76C(0, v16 + 1, 1, v8);
        }
        unint64_t v18 = v8[2];
        unint64_t v17 = v8[3];
        if (v18 >= v17 >> 1) {
          uint64_t v8 = sub_1AD51C76C((void *)(v17 > 1), v18 + 1, 1, v8);
        }
        long long v8[2] = v18 + 1;
        v8[v18 + 4] = MEMORY[0x1E4FBC860];
      }
      sub_1AD1FFE38((uint64_t)v44, (uint64_t)v40);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result)
      {
        if ((v15 & 0x8000000000000000) != 0) {
          goto LABEL_28;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_1AD398B94(v8);
        uint64_t v8 = (void *)result;
        if ((v15 & 0x8000000000000000) != 0)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
          break;
        }
      }
      if (v15 >= v8[2]) {
        goto LABEL_29;
      }
      unint64_t v19 = &v8[v15];
      CGRect v22 = (void *)v19[4];
      CGRect v20 = v19 + 4;
      uint64_t v21 = v22;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *CGRect v20 = (uint64_t)v22;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v21 = sub_1AD51C744(0, v21[2] + 1, 1, v21);
        *CGRect v20 = (uint64_t)v21;
      }
      unint64_t v25 = v21[2];
      unint64_t v24 = v21[3];
      if (v25 >= v24 >> 1) {
        *CGRect v20 = (uint64_t)sub_1AD51C744((void *)(v24 > 1), v25 + 1, 1, v21);
      }
      uint64_t v26 = v42;
      uint64_t v27 = v43;
      uint64_t v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v42);
      MEMORY[0x1F4188790](v28);
      uint64_t v30 = (char *)&v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v31 + 16))(v30);
      sub_1AD1FAE5C(v25, (uint64_t)v30, v20, v26, v27);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
      if (v13 == v14) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1AD21485C(a3);
    uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
LABEL_27:
    uint64_t result = v32;
    *(void *)(v32 + 24) = v8;
  }
  return result;
}

uint64_t sub_1AD337748(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, unint64_t *a5)
{
  sub_1AD3377BC(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1AD3377BC(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1AD337818(255, a3, a4);
    unint64_t v5 = sub_1AD740340();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1AD337818(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1AD2196B8(255, a3);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1AD337884()
{
  if (!qword_1E9A2C5A8)
  {
    sub_1AD3378DC();
    unint64_t v0 = sub_1AD740B60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C5A8);
    }
  }
}

void sub_1AD3378DC()
{
  if (!qword_1E9A2C5B0[0])
  {
    sub_1AD2196B8(255, qword_1EB732090);
    unint64_t v0 = sub_1AD73F5A0();
    if (!v1) {
      atomic_store(v0, qword_1E9A2C5B0);
    }
  }
}

uint64_t type metadata accessor for PDFTable()
{
  return self;
}

uint64_t method lookup function for PDFTable(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PDFTable);
}

uint64_t dispatch thunk of PDFTable.__allocating_init(_:configuration:pageContinuationRenderables:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for PDFTable.Configuration()
{
  return &type metadata for PDFTable.Configuration;
}

id MeProfilePicturePublisher.init(imageDiameter:scale:fetchQueue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F179C8]), sel_init);
  long long v9 = (void *)*MEMORY[0x1E4F4C060];
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(void *)(a2 + 16) = sub_1AD1A961C;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = &off_1F0425658;
  *(void *)(a2 + 48) = a1;
  *(void *)(a2 + 56) = v9;
  return v9;
}

uint64_t (*sub_1AD337A34())()
{
  return j__swift_endAccess;
}

uint64_t sub_1AD337AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)((char *)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x88));
  void *v3 = a1;
  v3[1] = a2;
  return swift_unknownObjectRelease();
}

id sub_1AD337AE4()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for MeProfilePicturePublisher.Inner();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id sub_1AD337BA0(void *a1)
{
  id v1 = a1;
  return sub_1AD337AE4();
}

void sub_1AD337BC8(void *a1)
{
  int64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0x60));
  objc_super v3 = (char *)a1 + *(void *)((*v2 & *a1) + 0x68);
  uint64_t v4 = sub_1AD73C770();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  uint64_t v5 = *(void **)((char *)a1 + *(void *)((*v2 & *a1) + 0xA0));
}

void sub_1AD337D64(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1B3E68580](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_1AD337DD4(a1, a2);
  }
}

void sub_1AD337DD4(void *a1, void *a2)
{
  objc_super v3 = v2;
  uint64_t v6 = (void *)(*MEMORY[0x1E4FBC8C8] & *v2);
  uint64_t v7 = v6[10];
  uint64_t v36 = v6[11];
  sub_1AD73C750();
  swift_getWitnessTable();
  uint64_t v8 = sub_1AD740D70();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v30 - v10;
  uint64_t v12 = sub_1AD73CBA0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v35 = v14;
    id v17 = a2;
    sub_1AD73CAD0();
    id v18 = a2;
    id v19 = a2;
    CGRect v20 = sub_1AD73CB80();
    os_log_type_t v21 = sub_1AD73F940();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v34 = v8;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v33 = v9;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v37 = (uint64_t)a2;
      uint64_t v38 = v31;
      uint64_t v32 = v7;
      *(_DWORD *)uint64_t v23 = 136315138;
      v30[1] = v23 + 4;
      id v24 = a2;
      sub_1AD26B6B8();
      uint64_t v25 = sub_1AD73F220();
      uint64_t v37 = sub_1AD1F62D4(v25, v26, &v38);
      sub_1AD7403B0();
      uint64_t v8 = v34;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AD1A4000, v20, v21, "Fetch profile picture error: %s", v23, 0xCu);
      uint64_t v27 = v31;
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v27, -1, -1);
      uint64_t v28 = v23;
      uint64_t v9 = v33;
      MEMORY[0x1B3E68450](v28, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v35);
    uint64_t v38 = 0;
    type metadata accessor for MeProfilePicturePublisher.Inner();
    swift_getWitnessTable();
    sub_1AD73C6E0();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    if (a1) {
      id v29 = objc_msgSend(a1, sel_hk_resizedInterfaceImageWithSize_, *(double *)((char *)v3 + v6[14]), *(double *)((char *)v3 + v6[14]));
    }
    else {
      id v29 = 0;
    }
    uint64_t v38 = (uint64_t)v29;
    type metadata accessor for MeProfilePicturePublisher.Inner();
    swift_getWitnessTable();
    sub_1AD73C6E0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_1AD338250(void *a1)
{
  uint64_t v2 = sub_1AD739E80();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD739E30();
  id v6 = a1;
  sub_1AD33824C();

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1AD338338()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);
}

void sub_1AD33839C()
{
}

void (*sub_1AD3383E0(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1AD337A34();
  return sub_1AD24BDC4;
}

uint64_t sub_1AD338438()
{
  type metadata accessor for MeProfilePicturePublisher.Inner();
  return sub_1AD73C6E0();
}

uint64_t sub_1AD338498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for MeProfilePicturePublisher.Inner();
  return MEMORY[0x1F411F0C0](a1, v5, a3);
}

uint64_t sub_1AD3384FC()
{
  return sub_1AD73C700();
}

uint64_t sub_1AD338548()
{
  return sub_1AD73D760();
}

void sub_1AD33856C(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    v4[4] = a1;
    v4[5] = a2;
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 1107296256;
    v4[2] = sub_1AD33862C;
    v4[3] = &block_descriptor_11;
    uint64_t v3 = _Block_copy(v4);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v3 = 0;
  }
  objc_msgSend(v2, sel_profilePictureForAccountOwnerWithCompletion_, v3);
  _Block_release(v3);
}

void sub_1AD33862C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void *assignWithCopy for MeProfilePicturePublisher(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[5] = v5;
  id v6 = (void *)a1[6];
  id v7 = (void *)a2[6];
  a1[6] = v7;
  id v8 = v7;

  uint64_t v9 = (void *)a2[7];
  uint64_t v10 = (void *)a1[7];
  a1[7] = v9;
  id v11 = v9;

  return a1;
}

uint64_t assignWithTake for MeProfilePicturePublisher(uint64_t a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  swift_release();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 32) = a2[2];

  uint64_t v5 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = a2[3];

  return a1;
}

uint64_t getEnumTagSinglePayload for MeProfilePicturePublisher(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MeProfilePicturePublisher(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MeProfilePicturePublisher()
{
  return &type metadata for MeProfilePicturePublisher;
}

uint64_t sub_1AD33885C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1AD338894()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1AD3388CC(void *a1, void *a2)
{
  sub_1AD337D64(a1, a2, *(void *)(v2 + 32));
}

void sub_1AD3388D8()
{
}

uint64_t sub_1AD338914(void *a1, void *a2)
{
  uint64_t v3 = v2;
  *(void *)(v2 + 24) = MEMORY[0x1E4FBC860];
  sub_1AD73B520();
  id v6 = (void *)sub_1AD73B440();
  sub_1AD1EFDA4();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1AD74C360;
  sub_1AD33972C();
  swift_getKeyPath();
  *(void *)(v7 + 32) = sub_1AD73FB40();
  sub_1AD73F4D0();
  id v8 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSortDescriptors_, v8);

  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v6, a1, 0, 0);
  sub_1AD1FB488();
  id v11 = objc_allocWithZone(v10);
  uint64_t v12 = _s18HealthExperienceUI33FeedItemSuggestedActionDataSourceCyACSo26NSFetchedResultsControllerCy0A8Platform0dE0CGcfc_0(v9);

  *(void *)(v3 + 16) = v12;
  return v3;
}

uint64_t sub_1AD338A6C()
{
  uint64_t v1 = v0;
  sub_1AD20E2C8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(char **)(v1 + 16);
  id v8 = &v7[qword_1EB751EC8];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v8, v3);
  uint64_t v9 = sub_1AD73D260();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  Class v10 = v7;
  uint64_t v11 = sub_1AD2C7888(v9, v10);
  swift_bridgeObjectRelease();

  uint64_t v26 = *(void *)(v11 + 16);
  if (v26)
  {
    uint64_t v24 = v1;
    uint64_t v25 = v11 + 32;
    v23[1] = v11;
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    unint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t v14 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v16 = v25 + 48 * v12;
      uint64_t v18 = *(void *)(v16 + 8);
      uint64_t v17 = *(void *)(v16 + 16);
      unint64_t v31 = v13;
      uint64_t v19 = *(void *)(v17 + 16);
      if (v19)
      {
        uint64_t v20 = v17 + 32;
        uint64_t v27 = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        do
        {
          sub_1AD1FFE38(v20, (uint64_t)v30);
          sub_1AD1FFE38((uint64_t)v30, (uint64_t)v28);
          sub_1AD2282B4();
          sub_1AD73B520();
          if ((swift_dynamicCast() & 1) == 0) {
            uint64_t v29 = 0;
          }
          uint64_t v21 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
          if (v29)
          {
            MEMORY[0x1B3E657B0](v21);
            if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1AD73F510();
            }
            sub_1AD73F560();
            sub_1AD73F4D0();
          }
          v20 += 40;
          --v19;
        }
        while (v19);
        unint64_t v15 = v31;
        unint64_t v13 = MEMORY[0x1E4FBC860];
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v15 = v13;
      }
      ++v12;
      swift_bridgeObjectRelease();
      v30[0] = v14;
      swift_bridgeObjectRetain();
      sub_1AD25FAC8(v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v30[0];
    }
    while (v12 != v26);
    swift_bridgeObjectRelease_n();
    uint64_t v1 = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  *(void *)(v1 + 24) = v14;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD338DC8()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t MappedDataSourceWithFeedItemsAndContext.__allocating_init(_:context:predicate:managedContext:allowEmptySections:mapBlock:)(uint64_t a1, uint64_t a2, void *a3, void *a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  swift_allocObject();
  uint64_t v16 = sub_1AD33934C(a1, a2, a3, a4, a5, a6, a7);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v8 + 592) - 8) + 8))(a2);
  return v16;
}

uint64_t MappedDataSourceWithFeedItemsAndContext.init(_:context:predicate:managedContext:allowEmptySections:mapBlock:)(uint64_t a1, uint64_t a2, void *a3, void *a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = *v7;
  uint64_t v10 = sub_1AD33934C(a1, a2, a3, a4, a5, a6, a7);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v9 + 592) - 8) + 8))(a2);
  return v10;
}

void sub_1AD338F44(uint64_t a1, uint64_t a2, uint64_t a3, Swift::Bool a4)
{
  sub_1AD6064BC(a3, a4);
  uint64_t v8 = (void *)(*(void *)(*(void *)(v4 + *(void *)(*(void *)v4 + 624)) + 16) + qword_1EB751EC0);
  BOOL v9 = *v8 == a1 && v8[1] == a2;
  if (v9 || (sub_1AD740BC0() & 1) != 0)
  {
    sub_1AD338A6C();
    type metadata accessor for MappedDataSourceWithFeedItemsAndContext();
    SnapshotDataSource.notifyObserversSnapshotDidChange(animated:)(a4);
  }
}

uint64_t sub_1AD339050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, Swift::Bool a5)
{
  sub_1AD20E2C8();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  uint64_t v13 = v12;
  sub_1AD73D2B0();
  swift_retain();
  sub_1AD338F44(v11, v13, (uint64_t)v10, a5);
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void MappedDataSourceWithFeedItemsAndContext.__allocating_init(dataSource:context:allowEmptySections:transformation:)()
{
}

void MappedDataSourceWithFeedItemsAndContext.init(dataSource:context:allowEmptySections:transformation:)()
{
}

uint64_t sub_1AD339200()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

id *MappedDataSourceWithFeedItemsAndContext.deinit()
{
  uint64_t v0 = MappedDataSourceWithContext.deinit();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t MappedDataSourceWithFeedItemsAndContext.__deallocating_deinit()
{
  MappedDataSourceWithFeedItemsAndContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD33934C(uint64_t a1, uint64_t a2, void *a3, void *a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v31 = a6;
  uint64_t v32 = a2;
  int v34 = a5;
  uint64_t v12 = *(void **)v8;
  uint64_t v13 = *(void *)(*(void *)v8 + 592);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v16 = (char *)&v30 - v15;
  *(void *)(v8 + v12[76]) = MEMORY[0x1E4FBC860];
  uint64_t v17 = (void *)(v8 + *(void *)(*(void *)v8 + 616));
  *uint64_t v17 = v18;
  v17[1] = v19;
  type metadata accessor for FetchedResultsContext();
  uint64_t v20 = swift_allocObject();
  swift_retain();
  swift_retain();
  id v21 = a4;
  id v33 = v21;
  id v22 = a3;
  uint64_t v23 = v21;
  uint64_t v24 = v22;
  sub_1AD338914(v23, v22);
  sub_1AD338A6C();
  *(void *)(v8 + *(void *)(*(void *)v8 + 624)) = v20;
  swift_retain();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v32, v13);
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = v12[73];
  v25[3] = v13;
  v25[4] = v12[75];
  v25[5] = v31;
  v25[6] = a7;
  v25[7] = v20;
  v35[0] = sub_1AD3397B4;
  v35[1] = v25;
  char v36 = 0;
  swift_retain();
  swift_retain();
  uint64_t v26 = swift_unknownObjectRetain();
  uint64_t v27 = sub_1AD6061C0(v26, (uint64_t (*)(void, void))v16, v34, (uint64_t)v35);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  swift_unknownObjectRelease();
  uint64_t v28 = (id *)(*(void *)(*(void *)(v27 + *(void *)(*(void *)v27 + 624)) + 16) + qword_1E9A2B648);
  swift_beginAccess();
  objc_msgSend(*v28, sel_registerObserver_, v27);
  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  return v27;
}

uint64_t type metadata accessor for MappedDataSourceWithFeedItemsAndContext()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1AD339648()
{
}

uint64_t type metadata accessor for FetchedResultsContext()
{
  return self;
}

uint64_t sub_1AD33969C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MappedDataSourceWithFeedItemsAndContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MappedDataSourceWithFeedItemsAndContext);
}

uint64_t dispatch thunk of MappedDataSourceWithFeedItemsAndContext.__allocating_init(_:context:predicate:managedContext:allowEmptySections:mapBlock:)()
{
  return (*(uint64_t (**)(void))(v0 + 656))();
}

unint64_t sub_1AD33972C()
{
  unint64_t result = qword_1EB7413D0;
  if (!qword_1EB7413D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB7413D0);
  }
  return result;
}

uint64_t sub_1AD339774()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD3397B4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 40);
  uint64_t v6 = *(void *)(*(void *)(v2 + 56) + 24);
  swift_bridgeObjectRetain();
  uint64_t v7 = v5(a1, a2, v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t dispatch thunk of PluginInfoOverride.pluginInfoOverride.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1AD339838()
{
  qword_1E9A2C638 = 0x4028000000000000;
}

void sub_1AD339848()
{
  qword_1E9A2C640 = 0x4030000000000000;
}

void sub_1AD339858()
{
  qword_1E9A2C648 = 0x4030000000000000;
}

void sub_1AD339868()
{
  qword_1E9A2C650 = 0x4028000000000000;
}

void sub_1AD339878()
{
  qword_1E9A2C658 = 0x4034000000000000;
}

uint64_t sub_1AD339888(uint64_t a1, void *a2)
{
  sub_1AD1EF2DC(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_item;
  swift_beginAccess();
  sub_1AD205C2C((uint64_t)v5, v3);
  swift_endAccess();
  sub_1AD33A304();
  return sub_1AD1E1AA8((uint64_t)v5);
}

uint64_t sub_1AD3398FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_item;
  swift_beginAccess();
  return sub_1AD1EF2DC(v3, a1);
}

uint64_t sub_1AD339950(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_item;
  swift_beginAccess();
  sub_1AD205C2C(a1, v3);
  swift_endAccess();
  sub_1AD33A304();
  return sub_1AD1E1AA8(a1);
}

void (*sub_1AD3399C0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1AD339A20;
}

void sub_1AD339A20(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1AD33A304();
  }
}

id SelectableCellStyleFooterView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

char *SelectableCellStyleFooterView.init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_item];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_contentView;
  id v11 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  uint64_t v12 = v4;
  id v13 = objc_msgSend(v11, sel_init);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_secondarySystemBackgroundColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v15);

  if (qword_1EB73FDD8 != -1) {
    swift_once();
  }
  double v16 = *(double *)&qword_1EB73E7D8;
  id v17 = (id)*MEMORY[0x1E4F39EA8];
  id v18 = objc_msgSend(v13, sel_layer);
  objc_msgSend(v18, sel_setCornerCurve_, v17);

  id v19 = objc_msgSend(v13, sel_layer);
  objc_msgSend(v19, sel_setCornerRadius_, v16);

  id v20 = objc_msgSend(v13, sel_layer);
  objc_msgSend(v20, sel_setMaskedCorners_, 15);

  objc_msgSend(v13, sel_setClipsToBounds_, 1);
  *(void *)&v12[v10] = v13;
  uint64_t v21 = OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_titleLabel;
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v22, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v23 = objc_msgSend(v14, sel_linkColor);
  objc_msgSend(v22, sel_setTextColor_, v23);

  *(void *)&v12[v21] = v22;
  v29.receiver = v12;
  v29.super_class = (Class)type metadata accessor for SelectableCellStyleFooterView();
  uint64_t v24 = (char *)objc_msgSendSuper2(&v29, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v25 = *(void **)&v24[OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_contentView];
  uint64_t v26 = v24;
  objc_msgSend(v26, sel_addSubview_, v25);
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D38]), sel_initWithTarget_action_, v26, sel_didSelect);
  objc_msgSend(v25, sel_addGestureRecognizer_, v27);

  objc_msgSend(v25, sel_addSubview_, *(void *)&v26[OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_titleLabel]);
  sub_1AD339E10();

  return v26;
}

void sub_1AD339E10()
{
  uint64_t v1 = v0;
  objc_super v29 = self;
  sub_1AD1EFDA4();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1AD752B90;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_titleLabel];
  id v4 = objc_msgSend(v3, sel_leadingAnchor);
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_contentView];
  id v6 = objc_msgSend(v5, sel_leadingAnchor);
  if (qword_1E9A29078 != -1) {
    swift_once();
  }
  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, *(double *)&qword_1E9A2C640);

  *(void *)(v2 + 32) = v7;
  id v8 = objc_msgSend(v3, sel_topAnchor);
  id v9 = objc_msgSend(v5, sel_topAnchor);
  if (qword_1E9A29070 != -1) {
    swift_once();
  }
  id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v9, *(double *)&qword_1E9A2C638);

  *(void *)(v2 + 40) = v10;
  id v11 = objc_msgSend(v5, sel_trailingAnchor);
  id v12 = objc_msgSend(v3, sel_trailingAnchor);
  if (qword_1E9A29080 != -1) {
    swift_once();
  }
  id v13 = objc_msgSend(v11, sel_constraintGreaterThanOrEqualToAnchor_constant_, v12, *(double *)&qword_1E9A2C648);

  *(void *)(v2 + 48) = v13;
  id v14 = objc_msgSend(v5, sel_bottomAnchor);
  id v15 = objc_msgSend(v3, sel_bottomAnchor);
  if (qword_1E9A29088 != -1) {
    swift_once();
  }
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v15, *(double *)&qword_1E9A2C650);

  *(void *)(v2 + 56) = v16;
  id v17 = objc_msgSend(v5, sel_topAnchor);
  id v18 = objc_msgSend(v1, sel_topAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(void *)(v2 + 64) = v19;
  id v20 = objc_msgSend(v5, sel_leadingAnchor);
  id v21 = objc_msgSend(v1, sel_leadingAnchor);
  id v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

  *(void *)(v2 + 72) = v22;
  id v23 = objc_msgSend(v1, sel_trailingAnchor);
  id v24 = objc_msgSend(v5, sel_trailingAnchor);
  id v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

  *(void *)(v2 + 80) = v25;
  id v26 = objc_msgSend(v1, sel_bottomAnchor);
  id v27 = objc_msgSend(v5, sel_bottomAnchor);
  if (qword_1E9A29090 != -1) {
    swift_once();
  }
  id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v27, *(double *)&qword_1E9A2C658);

  *(void *)(v2 + 88) = v28;
  sub_1AD73F4D0();
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F810);
  id v30 = (id)sub_1AD73F490();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_activateConstraints_, v30);
}

void sub_1AD33A304()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1AD73CBA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t)&v1[OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_item];
  swift_beginAccess();
  sub_1AD1EF2DC(v6, (uint64_t)v22);
  if (v22[3])
  {
    sub_1AD2282B4();
    if (swift_dynamicCast())
    {
      id v7 = *(void **)&v1[OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_titleLabel];
      id v8 = (void *)sub_1AD73F180();
      objc_msgSend(v7, sel_setText_, v8);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
  }
  else
  {
    sub_1AD1E1AA8((uint64_t)v22);
  }
  sub_1AD73CA80();
  id v9 = v1;
  id v10 = sub_1AD73CB80();
  os_log_type_t v11 = sub_1AD73F920();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v20 = v2;
    uint64_t v13 = v12;
    uint64_t v14 = swift_slowAlloc();
    v22[0] = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v15 = sub_1AD740E30();
    uint64_t v21 = sub_1AD1F62D4(v15, v16, v22);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    sub_1AD1EF2DC(v6, (uint64_t)&v21);
    sub_1AD1E1B04();
    uint64_t v17 = sub_1AD73F220();
    uint64_t v21 = sub_1AD1F62D4(v17, v18, v22);
    sub_1AD7403B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v10, v11, "[%s] Expected SelectableCellStyleFooterItem; got %s instead",
      (uint8_t *)v13,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v14, -1, -1);
    MEMORY[0x1B3E68450](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1AD33A62C()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1AD73CBA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73CA80();
  id v6 = v1;
  id v7 = sub_1AD73CB80();
  os_log_type_t v8 = sub_1AD73F940();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v19[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v11 = sub_1AD740E30();
    v20[0] = sub_1AD1F62D4(v11, v12, v19);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v20[0] = objc_msgSend(v6, sel_viewController);
    sub_1AD328FB8();
    uint64_t v13 = sub_1AD73F220();
    v20[0] = sub_1AD1F62D4(v13, v14, v19);
    sub_1AD7403B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v7, v8, "[%s] User selected view; calling didSelect function with parent view controller %s",
      (uint8_t *)v9,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v10, -1, -1);
    MEMORY[0x1B3E68450](v9, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v15 = (uint64_t)v6 + OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_item;
  swift_beginAccess();
  sub_1AD1EF2DC(v15, (uint64_t)v20);
  if (!v20[3]) {
    return sub_1AD1E1AA8((uint64_t)v20);
  }
  sub_1AD2282B4();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v17 = (void (*)(void))v19[4];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(v6, sel_viewController);
    v17();

    return swift_release();
  }
  return result;
}

id SelectableCellStyleFooterView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SelectableCellStyleFooterView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1AD33AA24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_item;
  swift_beginAccess();
  return sub_1AD1EF2DC(v3, a1);
}

uint64_t sub_1AD33AA7C(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_item;
  swift_beginAccess();
  sub_1AD205C2C(a1, v3);
  swift_endAccess();
  sub_1AD33A304();
  return sub_1AD1E1AA8(a1);
}

void (*sub_1AD33AAF0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1AD339A20;
}

uint64_t SelectableCellStyleFooterItem.reuseIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SelectableCellStyleFooterItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *objc_super v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SelectableCellStyleFooterItem.reuseIdentifier.modify())(void, void)
{
  return nullsub_1;
}

unint64_t SelectableCellStyleFooterItem.uniqueIdentifier.getter()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  sub_1AD73F300();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  sub_1AD33AD80();
  swift_retain();
  sub_1AD73F220();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  return 0xD00000000000001ELL;
}

uint64_t sub_1AD33ACC8(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t type metadata accessor for SelectableCellStyleFooterView()
{
  return self;
}

uint64_t sub_1AD33AD1C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD33AD54(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

unint64_t sub_1AD33AD80()
{
  unint64_t result = qword_1E9A2C678;
  if (!qword_1E9A2C678)
  {
    sub_1AD328FB8();
    unint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1E9A2C678);
  }
  return result;
}

uint64_t sub_1AD33ADD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_item;
  swift_beginAccess();
  return sub_1AD1EF2DC(v3, a2);
}

uint64_t method lookup function for SelectableCellStyleFooterView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SelectableCellStyleFooterView);
}

uint64_t dispatch thunk of SelectableCellStyleFooterView.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of SelectableCellStyleFooterView.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SelectableCellStyleFooterView.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t destroy for SelectableCellStyleFooterItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for SelectableCellStyleFooterItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SelectableCellStyleFooterItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SelectableCellStyleFooterItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SelectableCellStyleFooterItem()
{
  return &type metadata for SelectableCellStyleFooterItem;
}

void sub_1AD33B088()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_item];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  uint64_t v2 = OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_contentView;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_secondarySystemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  if (qword_1EB73FDD8 != -1) {
    swift_once();
  }
  double v6 = *(double *)&qword_1EB73E7D8;
  id v7 = (id)*MEMORY[0x1E4F39EA8];
  id v8 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v8, sel_setCornerCurve_, v7);

  id v9 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v9, sel_setCornerRadius_, v6);

  id v10 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v10, sel_setMaskedCorners_, 15);

  objc_msgSend(v3, sel_setClipsToBounds_, 1);
  *(void *)&v0[v2] = v3;
  uint64_t v11 = OBJC_IVAR____TtC18HealthExperienceUI29SelectableCellStyleFooterView_titleLabel;
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v13 = objc_msgSend(v4, sel_linkColor);
  objc_msgSend(v12, sel_setTextColor_, v13);

  *(void *)&v0[v11] = v12;
  sub_1AD7408B0();
  __break(1u);
}

uint64_t sub_1AD33B2DC(uint64_t a1, uint64_t a2)
{
  switch(sub_1AD33B83C(a1, a2))
  {
    case 1u:
      if (qword_1E9A290C8 != -1) {
        swift_once();
      }
      sub_1AD1D71C8(0, (unint64_t *)&qword_1EB73F8F0, (uint64_t (*)(uint64_t))sub_1AD2FF7D4, MEMORY[0x1E4FBBE00]);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1AD74C370;
      uint64_t v8 = sub_1AD33BD98();
      uint64_t v10 = v9;
      *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v7 + 64) = sub_1AD21FDC0();
      *(void *)(v7 + 32) = v8;
      *(void *)(v7 + 40) = v10;
      uint64_t v11 = sub_1AD73F190();
      goto LABEL_26;
    case 2u:
      if (qword_1E9A290D0 != -1) {
        swift_once();
      }
      sub_1AD1D71C8(0, (unint64_t *)&qword_1EB73F8F0, (uint64_t (*)(uint64_t))sub_1AD2FF7D4, MEMORY[0x1E4FBBE00]);
      uint64_t v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_1AD74C370;
      if (qword_1E9A290A0 != -1) {
        swift_once();
      }
      id v12 = (void *)qword_1E9A2C688;
      uint64_t v4 = (void *)sub_1AD73A590();
      id v5 = objc_msgSend(v12, sel_stringFromDate_, v4);
      goto LABEL_25;
    case 3u:
      if (qword_1E9A290D8 != -1) {
        swift_once();
      }
      sub_1AD1D71C8(0, (unint64_t *)&qword_1EB73F8F0, (uint64_t (*)(uint64_t))sub_1AD2FF7D4, MEMORY[0x1E4FBBE00]);
      uint64_t v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_1AD74C370;
      if (qword_1E9A290B0 != -1) {
        swift_once();
      }
      id v13 = (void *)qword_1E9A2C698;
      uint64_t v4 = (void *)sub_1AD73A590();
      id v5 = objc_msgSend(v13, sel_stringFromDate_, v4);
      goto LABEL_25;
    case 4u:
    case 5u:
      if (qword_1E9A290E0 != -1) {
        swift_once();
      }
      sub_1AD1D71C8(0, (unint64_t *)&qword_1EB73F8F0, (uint64_t (*)(uint64_t))sub_1AD2FF7D4, MEMORY[0x1E4FBBE00]);
      uint64_t v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_1AD74C370;
      if (qword_1E9A290A8 != -1) {
        swift_once();
      }
      id v3 = (void *)qword_1E9A2C690;
      uint64_t v4 = (void *)sub_1AD73A590();
      id v5 = objc_msgSend(v3, sel_stringFromDate_, v4);
      goto LABEL_25;
    default:
      if (qword_1E9A290C0 != -1) {
        swift_once();
      }
      sub_1AD1D71C8(0, (unint64_t *)&qword_1EB73F8F0, (uint64_t (*)(uint64_t))sub_1AD2FF7D4, MEMORY[0x1E4FBBE00]);
      uint64_t v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_1AD74C370;
      if (qword_1E9A29098 != -1) {
        swift_once();
      }
      double v6 = (void *)qword_1E9A2C680;
      uint64_t v4 = (void *)sub_1AD73A590();
      id v5 = objc_msgSend(v6, sel_stringFromDate_, v4);
LABEL_25:
      id v14 = v5;

      uint64_t v15 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
      uint64_t v17 = v16;

      *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v2 + 64) = sub_1AD21FDC0();
      *(void *)(v2 + 32) = v15;
      *(void *)(v2 + 40) = v17;
      uint64_t v11 = sub_1AD73F190();
LABEL_26:
      swift_bridgeObjectRelease();
      return v11;
  }
}

uint64_t sub_1AD33B83C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AD73A760();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD1D71C8(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v48 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  CGRect v50 = (char *)&v39 - v12;
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v39 - v13;
  uint64_t v15 = sub_1AD73A600();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  double v47 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v49 = (char *)&v39 - v20;
  MEMORY[0x1F4188790](v19);
  id v22 = (char *)&v39 - v21;
  if (sub_1AD73A730()) {
    return 0;
  }
  uint64_t v46 = a1;
  uint64_t v24 = *MEMORY[0x1E4F27BF0];
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v43(v7, v24, v4);
  uint64_t v45 = a2;
  sub_1AD73A720();
  id v25 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v41 = v4;
  uint64_t v44 = v5 + 8;
  v25(v7, v4);
  uint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v26 = v42(v14, 1, v15);
  uint64_t v40 = v16;
  if (v26 == 1)
  {
    sub_1AD2EC2D8((uint64_t)v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v14, v15);
    char v27 = sub_1AD73A730();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
    if (v27) {
      return 1;
    }
  }
  uint64_t v28 = v41;
  v43(v7, *MEMORY[0x1E4F27BC0], v41);
  objc_super v29 = v50;
  sub_1AD73A720();
  v25(v7, v28);
  if (v42(v29, 1, v15) == 1)
  {
    uint64_t v30 = (uint64_t)v29;
LABEL_9:
    sub_1AD2EC2D8(v30);
    return 5;
  }
  long long v39 = v25;
  uint64_t v31 = v40;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  id v33 = v49;
  v32(v49, v29, v15);
  if (sub_1AD73A5B0())
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v15);
    return 2;
  }
  else
  {
    v43(v7, *MEMORY[0x1E4F27C20], v28);
    uint64_t v34 = v15;
    uint64_t v35 = v48;
    sub_1AD73A720();
    v39(v7, v28);
    if (v42(v35, 1, v34) == 1)
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v49, v34);
      uint64_t v30 = (uint64_t)v35;
      goto LABEL_9;
    }
    char v36 = v47;
    v32(v47, v35, v34);
    char v37 = sub_1AD73A5B0();
    uint64_t v38 = *(void (**)(char *, uint64_t))(v31 + 8);
    v38(v36, v34);
    v38(v49, v34);
    if (v37) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1AD33BD98()
{
  uint64_t v0 = sub_1AD73A760();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD1D71C8(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = sub_1AD73A600();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v21 - v12;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F27BF0], v0);
  sub_1AD73A5F0();
  sub_1AD73A720();
  id v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v11, v7);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1AD2EC2D8((uint64_t)v6);
    return 0;
  }
  else
  {
    uint64_t v16 = v14;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    if (qword_1E9A290B8 != -1) {
      swift_once();
    }
    uint64_t v17 = (void *)qword_1E9A2C6A0;
    uint64_t v18 = (void *)sub_1AD73A590();
    id v19 = objc_msgSend(v17, sel_stringFromDate_, v18);

    uint64_t v15 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    v16(v13, v7);
  }
  return v15;
}

uint64_t sub_1AD33C0D4(uint64_t a1)
{
  sub_1AD1D71C8(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v16[-v3];
  uint64_t v5 = sub_1AD73A600();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v16[-v10];
  sub_1AD26F920(a1, (uint64_t)v16);
  if (!v17)
  {
    sub_1AD1F65C4((uint64_t)v16);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  int v12 = swift_dynamicCast();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v4, v12 ^ 1u, 1, v5);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_1AD2EC2D8((uint64_t)v4);
    return 0;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v11, v4, v5);
  sub_1AD73A5F0();
  uint64_t v13 = sub_1AD33B2DC((uint64_t)v11, (uint64_t)v9);
  id v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  v14(v11, v5);
  return v13;
}

id sub_1AD33C4CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LastSyncedDateFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1AD33C570()
{
  return type metadata accessor for LastSyncedDateFormatter();
}

uint64_t type metadata accessor for LastSyncedDateFormatter()
{
  uint64_t result = qword_1E9A2C700;
  if (!qword_1E9A2C700) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AD33C5C4()
{
  uint64_t result = sub_1AD73A770();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_1AD33C654(uint64_t a1)
{
  return sub_1AD33C720(a1, 0, 1, &qword_1E9A2C680);
}

id sub_1AD33C668()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  sub_1AD33CBD8(1162167621, 0xE400000000000000, 1162167621, 0xE400000000000000);
  unint64_t v1 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setDateFormat_, v1);

  id result = objc_msgSend(v0, sel_setFormattingContext_, 1);
  qword_1E9A2C688 = (uint64_t)v0;
  return result;
}

id sub_1AD33C70C(uint64_t a1)
{
  return sub_1AD33C720(a1, 3, 0, &qword_1E9A2C690);
}

id sub_1AD33C720(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v7, sel_setDateStyle_, a2);
  objc_msgSend(v7, sel_setTimeStyle_, a3);
  id result = objc_msgSend(v7, sel_setFormattingContext_, 1);
  *a4 = v7;
  return result;
}

id sub_1AD33C7A8()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  sub_1AD33CBD8(0x644D4D4D4DLL, 0xE500000000000000, 0x64204D4D4D4DLL, 0xE600000000000000);
  unint64_t v1 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setDateFormat_, v1);

  id result = objc_msgSend(v0, sel_setFormattingContext_, 1);
  qword_1E9A2C698 = (uint64_t)v0;
  return result;
}

id sub_1AD33C854()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 1);
  objc_msgSend(v0, sel_setTimeStyle_, 0);
  objc_msgSend(v0, sel_setDoesRelativeDateFormatting_, 1);
  id result = objc_msgSend(v0, sel_setFormattingContext_, 1);
  qword_1E9A2C6A0 = (uint64_t)v0;
  return result;
}

uint64_t sub_1AD33C8E0()
{
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t result = sub_1AD73A1D0();
  qword_1E9A2C6A8 = result;
  unk_1E9A2C6B0 = v1;
  return result;
}

uint64_t sub_1AD33C978()
{
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t result = sub_1AD73A1D0();
  qword_1E9A2C6B8 = result;
  unk_1E9A2C6C0 = v1;
  return result;
}

uint64_t sub_1AD33CA10()
{
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t result = sub_1AD73A1D0();
  qword_1E9A2C6C8 = result;
  unk_1E9A2C6D0 = v1;
  return result;
}

uint64_t sub_1AD33CAA8()
{
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t result = sub_1AD73A1D0();
  qword_1E9A2C6D8 = result;
  unk_1E9A2C6E0 = v1;
  return result;
}

uint64_t sub_1AD33CB40()
{
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t result = sub_1AD73A1D0();
  qword_1E9A2C6E8 = result;
  unk_1E9A2C6F0 = v1;
  return result;
}

uint64_t sub_1AD33CBD8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v7 = sub_1AD73CBA0();
  uint64_t v26 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v28 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1AD73A6A0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  int v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = self;
  id v14 = (void *)sub_1AD73F180();
  sub_1AD73A690();
  uint64_t v15 = (void *)sub_1AD73A680();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v16 = objc_msgSend(v13, sel_dateFormatFromTemplate_options_locale_, v14, 0, v15);

  if (v16)
  {
    uint64_t v17 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  }
  else
  {
    uint64_t v25 = v7;
    sub_1AD73CB20();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v18 = sub_1AD73CB80();
    os_log_type_t v19 = sub_1AD73F920();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v21 = v26;
    uint64_t v17 = v27;
    if (v20)
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v30 = v23;
      *(_DWORD *)uint64_t v22 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1AD1F62D4(a1, a2, &v30);
      sub_1AD7403B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1AD1F62D4(v17, a4, &v30);
      sub_1AD7403B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AD1A4000, v18, v19, "Failed to create a localized date format for template '%{public}s', falling back to '%{public}s'", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v23, -1, -1);
      MEMORY[0x1B3E68450](v22, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v28, v25);
    swift_bridgeObjectRetain();
  }
  return v17;
}

void sub_1AD33CFEC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v7 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for ThresholdSpecifierViewControllerCell();
  id v8 = objc_msgSendSuper2(&v16, sel_initWithStyle_reuseIdentifier_specifier_, a1, v7, a4);

  if (v8)
  {

    if (a4)
    {
      id v9 = v8;
      id v10 = a4;
      uint64_t v11 = (void *)sub_1AD73F180();
      id v12 = objc_msgSend(v10, sel_propertyForKey_, v11);

      if (v12)
      {
        sub_1AD7404B0();
        swift_unknownObjectRelease();
        sub_1AD1F65C4((uint64_t)v15);
        id v13 = objc_msgSend(v9, sel_detailTextLabel);
        if (v13)
        {
          id v14 = v13;
          objc_msgSend(v13, sel_setNumberOfLines_, 0);
        }
        objc_msgSend(v9, sel_setAccessoryView_, 0);
      }
      else
      {
        memset(v15, 0, sizeof(v15));

        sub_1AD1F65C4((uint64_t)v15);
      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
  }
}

void sub_1AD33D254(void *a1)
{
  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for ThresholdSpecifierViewControllerCell();
  objc_msgSendSuper2(&v15, sel_refreshCellContentsWithSpecifier_, a1);
  if (!a1)
  {
    __break(1u);
    return;
  }
  uint64_t v3 = (void *)sub_1AD73F180();
  id v4 = objc_msgSend(a1, sel_propertyForKey_, v3);

  if (v4)
  {
    sub_1AD7404B0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  sub_1AD1EB55C((uint64_t)&v11, (uint64_t)v13);
  if (!v14) {
    goto LABEL_14;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  uint64_t v5 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_, v5);

  uint64_t v6 = (void *)sub_1AD73F180();
  id v7 = objc_msgSend(a1, sel_propertyForKey_, v6);

  if (v7)
  {
    sub_1AD7404B0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  sub_1AD1EB55C((uint64_t)&v11, (uint64_t)v13);
  if (v14)
  {
    if (swift_dynamicCast())
    {
      id v8 = objc_msgSend(v1, sel_detailTextLabel);
      if (v8)
      {
        id v9 = v8;
        id v10 = (void *)sub_1AD73F180();
        swift_bridgeObjectRelease();
        objc_msgSend(v9, sel_setText_, v10);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
LABEL_14:
    sub_1AD1F65C4((uint64_t)v13);
  }
}

id sub_1AD33D504()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ThresholdSpecifierViewControllerCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ThresholdSpecifierViewControllerCell()
{
  return self;
}

void *SnapshotDataSource.withSectionItemLimit(_:)(uint64_t a1)
{
  type metadata accessor for DataSourceWithSectionItemLimit();
  uint64_t v2 = swift_unknownObjectRetain();
  uint64_t v3 = sub_1AD540830(v2, a1);
  swift_unknownObjectRelease();
  return v3;
}

void *SnapshotDataSource.withAdaptiveSectionItemLimit(limits:)(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for DataSourceWithAdaptiveSectionItemLimit();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  id v4 = sub_1AD2E8764(v2, a1, 0x7FFFFFFFFFFFFFFFLL);
  swift_unknownObjectRelease();
  return v4;
}

HealthExperienceUI::SourcesType_optional __swiftcall SourcesType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1AD740990();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t SourcesType.rawValue.getter()
{
  uint64_t v1 = 0x6C6174736E696E75;
  if (*v0 != 1) {
    uint64_t v1 = 0x73656369766564;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1936748641;
  }
}

uint64_t sub_1AD33D6E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AD5FC46C(*a1, *a2);
}

uint64_t sub_1AD33D6F0()
{
  return sub_1AD740D40();
}

uint64_t sub_1AD33D798()
{
  sub_1AD73F2B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD33D82C()
{
  return sub_1AD740D40();
}

HealthExperienceUI::SourcesType_optional sub_1AD33D8D0(Swift::String *a1)
{
  return SourcesType.init(rawValue:)(*a1);
}

void sub_1AD33D8DC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xEF7370704164656CLL;
  uint64_t v5 = 0x6C6174736E696E75;
  if (v2 != 1)
  {
    uint64_t v5 = 0x73656369766564;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1936748641;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

id SourcesViewController.__allocating_init(sourceType:profileName:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return SourcesViewController.init(sourceType:profileName:)(a1, a2, a3);
}

id SourcesViewController.init(sourceType:profileName:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = sub_1AD73CBA0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *a1;
  v4[OBJC_IVAR____TtC18HealthExperienceUI21SourcesViewController_sourceType] = v13;
  uint64_t v14 = &v4[OBJC_IVAR____TtC18HealthExperienceUI21SourcesViewController_profileName];
  void *v14 = a2;
  v14[1] = a3;
  sub_1AD73CA80();
  objc_super v15 = sub_1AD73CB80();
  os_log_type_t v16 = sub_1AD73F940();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v28 = v9;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v29 = v27;
    *(_DWORD *)uint64_t v17 = 136446466;
    uint64_t v31 = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v18 = sub_1AD73F220();
    uint64_t v31 = sub_1AD1F62D4(v18, v19, &v29);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    unint64_t v20 = 0xEF7370704164656CLL;
    uint64_t v21 = 0x6C6174736E696E75;
    if (v13 != 1)
    {
      uint64_t v21 = 0x73656369766564;
      unint64_t v20 = 0xE700000000000000;
    }
    if (v13) {
      uint64_t v22 = v21;
    }
    else {
      uint64_t v22 = 1936748641;
    }
    if (v13) {
      unint64_t v23 = v20;
    }
    else {
      unint64_t v23 = 0xE400000000000000;
    }
    uint64_t v31 = sub_1AD1F62D4(v22, v23, &v29);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v15, v16, "[%{public}s] initializing vc of type %s", (uint8_t *)v17, 0x16u);
    uint64_t v24 = v27;
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v24, -1, -1);
    MEMORY[0x1B3E68450](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v28);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v25 = (objc_class *)type metadata accessor for SourcesViewController();
  v30.receiver = v4;
  v30.super_class = v25;
  return objc_msgSendSuper2(&v30, sel_initWithCollectionViewLayout_, 0);
}

id SourcesViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SourcesViewController.init(coder:)()
{
}

void sub_1AD33DD68()
{
  uint64_t v1 = (objc_class *)type metadata accessor for SourcesViewController();
  v11[3] = v1;
  v11[4] = &protocol witness table for SourcesViewController;
  v11[0] = v0;
  uint64_t v2 = (uint64_t)v0 + OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController_dataSourceProvider;
  swift_beginAccess();
  id v3 = v0;
  sub_1AD2234BC((uint64_t)v11, v2);
  swift_endAccess();
  v10.receiver = v3;
  v10.super_class = v1;
  objc_msgSendSuper2(&v10, sel_viewDidLoad);
  sub_1AD33E410();
  unint64_t v4 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v4);

  id v5 = objc_msgSend(v3, sel_collectionView);
  if (v5)
  {
    BOOL v6 = v5;
    id v7 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
    objc_msgSend(v6, sel_setBackgroundColor_, v7);

    id v8 = objc_msgSend(v3, sel_collectionView);
    if (v8)
    {
      uint64_t v9 = v8;
      objc_msgSend(v8, sel_setPreservesSuperviewLayoutMargins_, 1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1AD33DF10()
{
  uint64_t v1 = v0;
  sub_1AD218C30();
  id v2 = objc_msgSend(v0, sel_collectionView);
  if (!v2)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v3 = v2;
  sub_1AD274354();

  id v4 = objc_msgSend(v1, sel_collectionView);
  if (!v4)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v5 = v4;
  sub_1AD274388();

  id v6 = objc_msgSend(v1, sel_collectionView);
  if (!v6)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v7 = v6;
  uint64_t v8 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  sub_1AD406DC8(v8, v9);

  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v1, sel_collectionView);
  if (!v10)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v11 = v10;
  sub_1AD2743BC();

  id v12 = objc_msgSend(v1, sel_collectionView);
  if (!v12)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  int v13 = v12;
  sub_1AD2743F0();

  id v14 = objc_msgSend(v1, sel_collectionView);
  if (!v14)
  {
LABEL_15:
    __break(1u);
    return;
  }
  id v15 = v14;
  sub_1AD274424();
}

id sub_1AD33E068()
{
  id result = objc_msgSend(v0, sel_collectionView);
  if (result)
  {
    id v2 = result;
    uint64_t v3 = sub_1AD219708();
    type metadata accessor for NonAnimatingDiffableCollectionViewAdaptor();
    uint64_t v4 = swift_allocObject();
    id v5 = (void *)(v4
                  + OBJC_IVAR____TtC18HealthExperienceUI41NonAnimatingDiffableCollectionViewAdaptor_shouldAnimateDiffableCollectionViewAdaptorKey);
    void *v5 = 0xD000000000000036;
    v5[1] = 0x80000001AD778030;
    return (id)sub_1AD33F3E4(v2, v3, 1, (uint64_t)sub_1AD5D8658, 0, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD33E128()
{
  swift_getObjectType();
  id v1 = objc_msgSend(v0, sel_resolvedHealthStore);
  if (v1)
  {
    id v2 = v1;
    if (v0[OBJC_IVAR____TtC18HealthExperienceUI21SourcesViewController_sourceType] >= 2u)
    {
      uint64_t v13[3] = (uint64_t)&type metadata for HealthStoreDeviceProvider;
      v13[4] = (uint64_t)&off_1F0423F40;
      v13[0] = (uint64_t)v1;
      type metadata accessor for DeviceSourcesDataSource();
      id v5 = (void *)swift_allocObject();
      uint64_t v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v13, (uint64_t)&type metadata for HealthStoreDeviceProvider);
      MEMORY[0x1F4188790](v6);
      uint64_t v8 = (uint64_t *)((char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      uint64_t v4 = sub_1AD2FD2AC(v2, *v8, v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    else
    {
      id v3 = v1;
      UIViewController.resolvedHealthExperienceStore.getter(v13);
      type metadata accessor for AppSourcesDataSource(0);
      swift_allocObject();
      uint64_t v4 = sub_1AD6C2B14(v3, (uint64_t)v13);
    }
    type metadata accessor for DownloadingDataDataSource();
    swift_allocObject();
    uint64_t v10 = sub_1AD65B8A4();
    sub_1AD2C8E0C();
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1AD74C370;
    sub_1AD33F804();
    swift_allocObject();
    swift_retain();
    swift_retain();
    *(void *)(v11 + 32) = sub_1AD2D59DC(v4, v10);
    *(void *)(v11 + 40) = &protocol witness table for PrimarySecondaryDataSource<A, B>;

    swift_release();
    swift_release();
    return v11;
  }
  else
  {
    sub_1AD740680();
    swift_bridgeObjectRelease();
    swift_getMetatypeMetadata();
    sub_1AD73F220();
    sub_1AD73F300();
    swift_bridgeObjectRelease();
    sub_1AD73F300();
    uint64_t result = sub_1AD7408B0();
    __break(1u);
  }
  return result;
}

id sub_1AD33E410()
{
  if (!v0[OBJC_IVAR____TtC18HealthExperienceUI21SourcesViewController_sourceType])
  {
    id result = objc_msgSend(v0, sel_collectionView);
    if (result)
    {
      uint64_t v9 = result;
      uint64_t v10 = MEMORY[0x1E4FBB1A0];
      uint64_t v11 = (void *)sub_1AD73F490();
      id v12 = (id)HKUIJoinStringsForAutomationIdentifier();

      objc_msgSend(v9, sel_setAccessibilityIdentifier_, v12);
      int v13 = &v0[OBJC_IVAR____TtC18HealthExperienceUI21SourcesViewController_profileName];
      uint64_t v14 = *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI21SourcesViewController_profileName + 8];
      if (v14)
      {
        uint64_t v15 = *(void *)v13;
        uint64_t v16 = qword_1EB732818;
        swift_bridgeObjectRetain();
        if (v16 != -1) {
          swift_once();
        }
        sub_1AD73A1D0();
        sub_1AD208350(0, (unint64_t *)&qword_1EB73F8F0, (unint64_t *)&qword_1EB73F910, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_1AD74C370;
        *(void *)(v17 + 56) = v10;
        *(void *)(v17 + 64) = sub_1AD21FDC0();
        *(void *)(v17 + 32) = v15;
        *(void *)(v17 + 40) = v14;
        uint64_t v18 = sub_1AD73F190();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (qword_1EB732818 == -1) {
        return (id)sub_1AD73A1D0();
      }
      goto LABEL_25;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v0[OBJC_IVAR____TtC18HealthExperienceUI21SourcesViewController_sourceType] == 1)
  {
    id result = objc_msgSend(v0, sel_collectionView);
    if (result)
    {
      id v2 = result;
      uint64_t v3 = MEMORY[0x1E4FBB1A0];
      uint64_t v4 = (void *)sub_1AD73F490();
      id v5 = (id)HKUIJoinStringsForAutomationIdentifier();

      objc_msgSend(v2, sel_setAccessibilityIdentifier_, v5);
      uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI21SourcesViewController_profileName];
      uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI21SourcesViewController_profileName + 8];
      if (v7)
      {
        uint64_t v8 = qword_1EB732818;
        swift_bridgeObjectRetain();
        if (v8 == -1) {
          goto LABEL_15;
        }
        goto LABEL_23;
      }
      if (qword_1EB732818 == -1) {
        return (id)sub_1AD73A1D0();
      }
      goto LABEL_25;
    }
    __break(1u);
    goto LABEL_27;
  }
  id result = objc_msgSend(v0, sel_collectionView);
  if (result)
  {
    unint64_t v19 = result;
    uint64_t v3 = MEMORY[0x1E4FBB1A0];
    unint64_t v20 = (void *)sub_1AD73F490();
    id v21 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v19, sel_setAccessibilityIdentifier_, v21);
    uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI21SourcesViewController_profileName];
    uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI21SourcesViewController_profileName + 8];
    if (v7)
    {
      uint64_t v22 = qword_1EB732818;
      swift_bridgeObjectRetain();
      if (v22 == -1)
      {
LABEL_15:
        sub_1AD73A1D0();
        sub_1AD208350(0, (unint64_t *)&qword_1EB73F8F0, (unint64_t *)&qword_1EB73F910, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_1AD74C370;
        *(void *)(v23 + 56) = v3;
        *(void *)(v23 + 64) = sub_1AD21FDC0();
        *(void *)(v23 + 32) = v6;
        *(void *)(v23 + 40) = v7;
        uint64_t v18 = sub_1AD73F190();
        swift_bridgeObjectRelease();
LABEL_16:
        swift_bridgeObjectRelease();
        return (id)v18;
      }
LABEL_23:
      swift_once();
      goto LABEL_15;
    }
    if (qword_1EB732818 == -1) {
      return (id)sub_1AD73A1D0();
    }
LABEL_25:
    swift_once();
    return (id)sub_1AD73A1D0();
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1AD33EAC4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1AD73CBA0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)sub_1AD73A7C0();
  id v10 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v9);

  if (!v10) {
    goto LABEL_7;
  }
  uint64_t v26 = ObjectType;
  id v29 = v10;
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F818);
  sub_1AD20EE0C(0, (unint64_t *)&qword_1EB73EDD0);
  id v11 = v10;
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v28 = 0;
    memset(v27, 0, sizeof(v27));

    sub_1AD33F880((uint64_t)v27);
    uint64_t ObjectType = v26;
LABEL_7:
    sub_1AD73CAD0();
    unint64_t v19 = sub_1AD73CB80();
    os_log_type_t v20 = sub_1AD73F920();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v26 = v5;
      id v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(void *)&v27[0] = v22;
      *(_DWORD *)id v21 = 136446210;
      v30[0] = ObjectType;
      swift_getMetatypeMetadata();
      uint64_t v23 = sub_1AD73F220();
      v30[0] = sub_1AD1F62D4(v23, v24, (uint64_t *)v27);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AD1A4000, v19, v20, "[%{public}s] cell is not a selectable cell", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v22, -1, -1);
      MEMORY[0x1B3E68450](v21, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v26);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  sub_1AD20FE90(v27, (uint64_t)v30);
  uint64_t v12 = v31;
  uint64_t v13 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v13 + 16))(v11, v2, v12, v13);
  uint64_t v14 = v31;
  uint64_t v15 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v15 + 32))(v27, v2, v14, v15);
  if (LOBYTE(v27[0]) != 2)
  {
    uint64_t v16 = v27[0] & 1;
    uint64_t v17 = (void *)sub_1AD73A7C0();
    objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v17, v16);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

void SourcesViewController.__allocating_init(dataSource:)()
{
}

void SourcesViewController.init(dataSource:)()
{
}

id SourcesViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void SourcesViewController.init(collectionViewLayout:)()
{
}

uint64_t sub_1AD33F060()
{
  return swift_bridgeObjectRelease();
}

id SourcesViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SourcesViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1AD33F0BC()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v0) + 0x130))();
}

Swift::Void __swiftcall SourcesViewController.viewControllerWillEnterAdaptiveModal()()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F7B0);
  sub_1AD2147D4(0, (unint64_t *)&unk_1E9A2D9F0);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1AD7400A0();
  id v3 = (id)sub_1AD73FAA0();
  objc_msgSend(v1, sel_setLeftBarButtonItem_, v3, 0, 0, 0, sub_1AD33F940, v2);
}

void sub_1AD33F24C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  id v3 = (void *)MEMORY[0x1B3E68580](v2);
  if (v3)
  {
    uint64_t v4 = v3;
    objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

Swift::Void __swiftcall SourcesViewController.viewControllerDidLeaveAdaptiveModal()()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setLeftBarButtonItem_, 0);
}

uint64_t type metadata accessor for SourcesViewController()
{
  return self;
}

uint64_t sub_1AD33F3E4(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB740278);
  sub_1AD73FA60();
  v33[0] = 2;
  sub_1AD21F894();
  sub_1AD73AAE0();
  *(unsigned char *)(a6 + OBJC_IVAR____TtC18HealthExperienceUI29DiffableCollectionViewAdaptor_loaded) = 0;
  type metadata accessor for DiffableCollectionViewAdaptor.DebugState(0);
  swift_storeEnumTagMultiPayload();
  *(void *)(a6 + OBJC_IVAR____TtC18HealthExperienceUI29DiffableCollectionViewAdaptor_collectionView) = a1;
  uint64_t v12 = (void *)(a6 + OBJC_IVAR____TtC18HealthExperienceUI29DiffableCollectionViewAdaptor_backingDataSource);
  *uint64_t v12 = a2;
  v12[1] = &protocol witness table for CompoundSectionedDataSource;
  v12[2] = &protocol witness table for CompoundSectionedDataSource;
  id v13 = a1;
  swift_retain();
  objc_msgSend(v13, sel__setShouldPrefetchCellsWhenPerformingReloadData_, a3 & 1);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a4;
  v14[3] = a5;
  v14[4] = a2;
  v14[5] = &protocol witness table for CompoundSectionedDataSource;
  v14[6] = &protocol witness table for CompoundSectionedDataSource;
  sub_1AD33FBC4(0, &qword_1EB738C40, MEMORY[0x1E4FB10A8]);
  id v16 = objc_allocWithZone(v15);
  id v17 = v13;
  swift_retain();
  swift_retain();
  uint64_t v18 = sub_1AD73D3A0();
  uint64_t v19 = OBJC_IVAR____TtC18HealthExperienceUI29DiffableCollectionViewAdaptor_diffableDataSource;
  *(void *)(a6 + OBJC_IVAR____TtC18HealthExperienceUI29DiffableCollectionViewAdaptor_diffableDataSource) = v18;
  uint64_t v20 = v12[1];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 48);
  swift_unknownObjectRetain();
  uint64_t v23 = (void *)v22(ObjectType, v20);
  swift_unknownObjectRelease();
  objc_msgSend(v23, sel_registerObserver_, a6);

  unint64_t v24 = *(void **)(a6 + v19);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  id v25 = v24;
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = a6;
  sub_1AD73D3B0();
  swift_unownedRelease();

  if (sub_1AD1BCF4C())
  {
    uint64_t v26 = *(void **)(a6 + v19);
    swift_allocObject();
    swift_weakInit();
    id v27 = v26;
    uint64_t v28 = (void (*)(unsigned char *, void))sub_1AD73D3F0();
    sub_1AD33FBC4(0, &qword_1EB738C38, MEMORY[0x1E4FB1090]);
    sub_1AD73D3E0();
    v28(v33, 0);

    id v29 = *(void **)(a6 + v19);
    swift_allocObject();
    swift_weakInit();
    id v30 = v29;
    uint64_t v31 = (void (*)(unsigned char *, void))sub_1AD73D3F0();
    sub_1AD73D3D0();
    v31(v33, 0);
  }
  swift_release();
  swift_release();
  return a6;
}

void sub_1AD33F804()
{
  if (!qword_1E9A2C720)
  {
    type metadata accessor for MutableArrayDataSourceWithLayout();
    type metadata accessor for DownloadingDataDataSource();
    unint64_t v0 = type metadata accessor for PrimarySecondaryDataSource();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C720);
    }
  }
}

uint64_t sub_1AD33F880(uint64_t a1)
{
  sub_1AD208350(0, (unint64_t *)&qword_1EB73A068, (unint64_t *)&qword_1EB73EDD0, (uint64_t)&protocol descriptor for CellSelectionHandling, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD33F908()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1AD33F940(uint64_t a1)
{
  sub_1AD33F24C(a1, v1);
}

unint64_t sub_1AD33F94C()
{
  unint64_t result = qword_1E9A2C728;
  if (!qword_1E9A2C728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C728);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SourcesType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AD33FA6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SourcesType()
{
  return &type metadata for SourcesType;
}

uint64_t method lookup function for SourcesViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SourcesViewController);
}

uint64_t dispatch thunk of SourcesViewController.__allocating_init(sourceType:profileName:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of SourcesViewController.selectedDataSources(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t sub_1AD33FB0C()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD33FB4C()
{
  swift_unownedRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD33FB84()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1AD33FBBC(uint64_t *a1)
{
  return sub_1AD3AC21C(a1);
}

void sub_1AD33FBC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void *))
{
  if (!*a2)
  {
    v6[0] = MEMORY[0x1E4FBB1A0];
    v6[1] = MEMORY[0x1E4FBB1A0];
    v6[2] = MEMORY[0x1E4FBB1B0];
    v6[3] = MEMORY[0x1E4FBB1B0];
    unint64_t v4 = a3(0, v6);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AD33FC30()
{
  return sub_1AD3AC354();
}

uint64_t static ContentConfigurationItem.makeDateDisplayItem(title:date:placeholderText:cellSelectionHandler:uniqueIdentifier:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8)
{
  uint64_t v53 = a6;
  uint64_t v54 = a5;
  uint64_t v51 = a7;
  uint64_t v52 = a4;
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v44 = a1;
  uint64_t v50 = a8;
  sub_1AD1E3C20(0, (unint64_t *)&qword_1EB7401D0, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v49 = (char *)&v42 - v9;
  uint64_t v10 = sub_1AD73CE60();
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v48 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AD1E3C20(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v14 - 8);
  id v16 = (char *)&v42 - v15;
  uint64_t v17 = sub_1AD73A600();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1AD73D120();
  uint64_t v45 = *(void *)(v21 - 8);
  uint64_t v46 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73D110();
  swift_bridgeObjectRetain();
  sub_1AD73D0C0();
  sub_1AD340D70(v44, (uint64_t)v16, (unint64_t *)&unk_1EB741390, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1AD341A84((uint64_t)v16, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928]);
    swift_bridgeObjectRetain();
    sub_1AD73CED0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    id v24 = objc_allocWithZone(MEMORY[0x1E4F28C10]);
    id v25 = objc_msgSend(v24, sel_init, v42, v43);
    objc_msgSend(v25, sel_setDateStyle_, 3);
    objc_msgSend(v25, sel_setTimeStyle_, 0);
    uint64_t v26 = (void *)sub_1AD73A590();
    id v27 = objc_msgSend(v25, sel_stringFromDate_, v26);

    _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    sub_1AD73CED0();

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  uint64_t v28 = self;
  id v29 = objc_msgSend(v28, sel_systemBlueColor);
  id v30 = (void (*)(uint64_t *, void))sub_1AD73D020();
  sub_1AD73CF20();
  v30(v57, 0);
  sub_1AD73CE10();
  id v31 = objc_msgSend(v28, sel_secondarySystemGroupedBackgroundColor);
  sub_1AD73CE00();
  uint64_t v32 = v46;
  v57[3] = v46;
  v57[4] = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v57);
  uint64_t v34 = v45;
  (*(void (**)(uint64_t *, char *, uint64_t))(v45 + 16))(boxed_opaque_existential_1, v23, v32);
  uint64_t v36 = v47;
  uint64_t v35 = v48;
  uint64_t v37 = (uint64_t)v49;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v49, v12, v48);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
  char v56 = 2;
  char v55 = 0;
  uint64_t v38 = v50;
  swift_bridgeObjectRetain();
  uint64_t v39 = v52;
  uint64_t v40 = v54;
  sub_1AD21485C(v52);
  ContentConfigurationItem.init(uniqueIdentifier:contentConfiguration:cellAccessories:cellSelectionHandler:deselectionBehavior:backgroundConfiguration:updateContentConfigurationHandler:container:automationIdentifier:)(v53, v38, (uint64_t)v57, MEMORY[0x1E4FBC860], v39, v40, &v56, v37, v51, 0, 0, &v55, 0, 0);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v23, v32);
}

uint64_t CalendarDatePickerItem.reuseIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CalendarDatePickerItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CalendarDatePickerItem.reuseIdentifier.modify())(void, void)
{
  return nullsub_1;
}

unint64_t CalendarDatePickerItem.uniqueIdentifier.getter()
{
  return 0xD000000000000017;
}

uint64_t type metadata accessor for CalendarDatePickerItem()
{
  uint64_t result = qword_1E9A2C748;
  if (!qword_1E9A2C748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CalendarDatePickerItem.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CalendarDatePickerItem() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CalendarDatePickerItem.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for CalendarDatePickerItem() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*CalendarDatePickerItem.title.modify())(void, void)
{
  return nullsub_1;
}

uint64_t CalendarDatePickerItem.placeholderText.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CalendarDatePickerItem() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CalendarDatePickerItem.placeholderText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for CalendarDatePickerItem() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*CalendarDatePickerItem.placeholderText.modify())(void, void)
{
  return nullsub_1;
}

uint64_t sub_1AD3404BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*a1) {
    uint64_t v3 = a1[1];
  }
  else {
    uint64_t v3 = 0;
  }
  unint64_t v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for CalendarDatePickerItem() + 32));
  uint64_t v5 = *v4;
  sub_1AD21485C(v2);
  uint64_t result = sub_1AD1E4514(v5);
  uint64_t *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t CalendarDatePickerItem.dataProvider.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CalendarDatePickerItem() + 32));
  sub_1AD21485C(v1);
  return v1;
}

uint64_t CalendarDatePickerItem.dataProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for CalendarDatePickerItem() + 32));
  uint64_t result = sub_1AD1E4514(*v5);
  uint64_t *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*CalendarDatePickerItem.dataProvider.modify())(void, void)
{
  return nullsub_1;
}

uint64_t sub_1AD3405FC@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CalendarDatePickerItem() + 36));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1AD304FE0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1AD21485C(v4);
}

uint64_t sub_1AD340690(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1AD304FB8;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for CalendarDatePickerItem() + 36));
  uint64_t v8 = *v7;
  sub_1AD21485C(v3);
  uint64_t result = sub_1AD1E4514(v8);
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t CalendarDatePickerItem.updateHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CalendarDatePickerItem() + 36));
  sub_1AD21485C(v1);
  return v1;
}

uint64_t CalendarDatePickerItem.updateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for CalendarDatePickerItem() + 36));
  uint64_t result = sub_1AD1E4514(*v5);
  uint64_t *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*CalendarDatePickerItem.updateHandler.modify())(void, void)
{
  return nullsub_1;
}

uint64_t CalendarDatePickerItem.isEditEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CalendarDatePickerItem() + 40));
}

uint64_t CalendarDatePickerItem.isEditEnabled.setter(char a1)
{
  uint64_t result = type metadata accessor for CalendarDatePickerItem();
  *(unsigned char *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*CalendarDatePickerItem.isEditEnabled.modify())(void, void)
{
  return nullsub_1;
}

uint64_t CalendarDatePickerItem.init(dataProvider:updateHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  type metadata accessor for CalendarDatePickerCollectionViewCell();
  sub_1AD34098C();
  *a5 = sub_1AD73F220();
  a5[1] = v10;
  uint64_t v11 = (int *)type metadata accessor for CalendarDatePickerItem();
  uint64_t result = sub_1AD73A660();
  id v13 = (uint64_t *)((char *)a5 + v11[6]);
  *id v13 = 0;
  v13[1] = 0xE000000000000000;
  uint64_t v14 = (uint64_t *)((char *)a5 + v11[7]);
  void *v14 = 0;
  v14[1] = 0;
  uint64_t v15 = (uint64_t *)((char *)a5 + v11[8]);
  id v16 = (uint64_t *)((char *)a5 + v11[9]);
  *((unsigned char *)a5 + v11[10]) = 1;
  *uint64_t v15 = a1;
  v15[1] = a2;
  *id v16 = a3;
  v16[1] = a4;
  return result;
}

uint64_t type metadata accessor for CalendarDatePickerCollectionViewCell()
{
  return self;
}

unint64_t sub_1AD34098C()
{
  unint64_t result = qword_1E9A2C730;
  if (!qword_1E9A2C730)
  {
    type metadata accessor for CalendarDatePickerCollectionViewCell();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9A2C730);
  }
  return result;
}

uint64_t sub_1AD3409C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1AD3409FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1AD340A34(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_1AD340A40(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 32));
  sub_1AD21485C(v2);
  return v2;
}

uint64_t sub_1AD340A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = (uint64_t *)(v3 + *(int *)(a3 + 32));
  uint64_t result = sub_1AD1E4514(*v6);
  uint64_t *v6 = a1;
  v6[1] = v5;
  return result;
}

uint64_t (*sub_1AD340AC4(uint64_t a1, uint64_t a2))()
{
  uint64_t v3 = *(int *)(a2 + 32);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v2 + v3);
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  if (!v6) {
    uint64_t v5 = 0;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v2;
  return sub_1AD340B08;
}

uint64_t sub_1AD340B0C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  sub_1AD21485C(v2);
  return v2;
}

uint64_t sub_1AD340B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = (uint64_t *)(v3 + *(int *)(a3 + 36));
  uint64_t result = sub_1AD1E4514(*v6);
  uint64_t *v6 = a1;
  v6[1] = v5;
  return result;
}

uint64_t (*sub_1AD340B90(uint64_t a1, uint64_t a2))()
{
  uint64_t v3 = *(int *)(a2 + 36);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v2 + v3);
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  if (!v6) {
    uint64_t v5 = 0;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v2;
  return sub_1AD340B08;
}

uint64_t sub_1AD340BD4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  uint64_t v2 = (void *)(*(void *)(result + 16) + *(int *)(result + 24));
  if (!*(void *)result) {
    uint64_t v1 = 0;
  }
  *uint64_t v2 = *(void *)result;
  v2[1] = v1;
  return result;
}

unint64_t sub_1AD340BF4()
{
  return 0xD000000000000017;
}

uint64_t sub_1AD340C58(uint64_t a1, void *a2)
{
  sub_1AD340D70(a1, (uint64_t)v5, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC18HealthExperienceUI36CalendarDatePickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1AD205C2C((uint64_t)v5, v3);
  swift_endAccess();
  sub_1AD341644();
  return sub_1AD341A84((uint64_t)v5, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
}

uint64_t sub_1AD340D00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI36CalendarDatePickerCollectionViewCell_item;
  swift_beginAccess();
  return sub_1AD340D70(v3, a1, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
}

uint64_t sub_1AD340D70(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1AD1E3C20(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1AD340DDC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI36CalendarDatePickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1AD205C2C(a1, v3);
  swift_endAccess();
  sub_1AD341644();
  return sub_1AD341A84(a1, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
}

uint64_t (*sub_1AD340E68(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1AD340EC8;
}

uint64_t sub_1AD340EC8(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1AD341644();
  }
  return result;
}

char *sub_1AD340EFC(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC18HealthExperienceUI36CalendarDatePickerCollectionViewCell_item];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = OBJC_IVAR____TtC18HealthExperienceUI36CalendarDatePickerCollectionViewCell_datePicker;
  id v11 = objc_allocWithZone(MEMORY[0x1E4FB16B0]);
  uint64_t v12 = v4;
  id v13 = objc_msgSend(v11, sel_init);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v13, sel_setPreferredDatePickerStyle_, 3);
  objc_msgSend(v13, sel_setDatePickerMode_, 1);
  *(void *)&v4[v10] = v13;

  v17.receiver = v12;
  v17.super_class = (Class)type metadata accessor for CalendarDatePickerCollectionViewCell();
  uint64_t v14 = (char *)objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1AD3410E0();
  id v15 = *(id *)&v14[OBJC_IVAR____TtC18HealthExperienceUI36CalendarDatePickerCollectionViewCell_datePicker];
  objc_msgSend(v15, sel_addTarget_action_forControlEvents_, v14, sel_pickerDateChanged_, 0xFFFFFFFFLL);

  return v14;
}

id CalendarDatePickerCollectionViewCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t sub_1AD3410E0()
{
  uint64_t v1 = v0;
  sub_1AD1E3C20(0, (unint64_t *)&qword_1EB7401D0, MEMORY[0x1E4FB0F28]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v13 - v6;
  id v8 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v8, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI36CalendarDatePickerCollectionViewCell_datePicker]);

  sub_1AD3412A0();
  MEMORY[0x1B3E66130]();
  uint64_t v9 = sub_1AD73CE60();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9))
  {
    uint64_t v10 = (void (*)(uint64_t))MEMORY[0x1E4FB0F28];
    sub_1AD340D70((uint64_t)v7, (uint64_t)v5, (unint64_t *)&qword_1EB7401D0, MEMORY[0x1E4FB0F28]);
    MEMORY[0x1B3E66140](v5);
    return sub_1AD341A84((uint64_t)v7, (unint64_t *)&qword_1EB7401D0, v10);
  }
  else
  {
    id v12 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
    sub_1AD73CE00();
    return MEMORY[0x1B3E66140](v7);
  }
}

void sub_1AD3412A0()
{
  uint64_t v1 = v0;
  uint64_t v28 = self;
  sub_1AD1EFDA4();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1AD74C710;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC18HealthExperienceUI36CalendarDatePickerCollectionViewCell_datePicker];
  id v4 = objc_msgSend(v3, sel_leadingAnchor);
  id v5 = objc_msgSend(v1, sel_contentView);
  id v6 = objc_msgSend(v5, sel_layoutMarginsGuide);

  id v7 = objc_msgSend(v6, sel_leadingAnchor);
  id v8 = objc_msgSend(v4, sel_constraintGreaterThanOrEqualToAnchor_, v7);

  *(void *)(v2 + 32) = v8;
  id v9 = objc_msgSend(v3, sel_topAnchor);
  id v10 = objc_msgSend(v1, sel_contentView);
  id v11 = objc_msgSend(v10, sel_layoutMarginsGuide);

  id v12 = objc_msgSend(v11, sel_topAnchor);
  id v13 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v12);

  *(void *)(v2 + 40) = v13;
  id v14 = objc_msgSend(v3, sel_bottomAnchor);
  id v15 = objc_msgSend(v1, sel_contentView);
  id v16 = objc_msgSend(v15, sel_layoutMarginsGuide);

  id v17 = objc_msgSend(v16, sel_bottomAnchor);
  id v18 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v17);

  *(void *)(v2 + 48) = v18;
  id v19 = objc_msgSend(v3, sel_trailingAnchor);
  id v20 = objc_msgSend(v1, sel_contentView);
  id v21 = objc_msgSend(v20, sel_layoutMarginsGuide);

  id v22 = objc_msgSend(v21, sel_trailingAnchor);
  id v23 = objc_msgSend(v19, sel_constraintLessThanOrEqualToAnchor_, v22);

  *(void *)(v2 + 56) = v23;
  id v24 = objc_msgSend(v3, sel_centerXAnchor);
  id v25 = objc_msgSend(v1, sel_contentView);
  id v26 = objc_msgSend(v25, sel_centerXAnchor);

  id v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v26);
  *(void *)(v2 + 64) = v27;
  sub_1AD73F4D0();
  sub_1AD1EED2C();
  id v29 = (id)sub_1AD73F490();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_activateConstraints_, v29);
}

uint64_t sub_1AD341644()
{
  uint64_t v1 = v0;
  sub_1AD1E3C20(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = &v25[-v3];
  uint64_t v5 = sub_1AD73A600();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AD1E3C20(0, &qword_1E9A2C760, (void (*)(uint64_t))type metadata accessor for CalendarDatePickerItem);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = &v25[-v10];
  uint64_t v12 = type metadata accessor for CalendarDatePickerItem();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = &v25[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = v1 + OBJC_IVAR____TtC18HealthExperienceUI36CalendarDatePickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1AD340D70(v16, (uint64_t)v26, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
  if (!v27)
  {
    sub_1AD341A84((uint64_t)v26, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_7;
  }
  sub_1AD2282B4();
  int v17 = swift_dynamicCast();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v11, v17 ^ 1u, 1, v12);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_7:
    id v22 = &qword_1E9A2C760;
    id v23 = type metadata accessor for CalendarDatePickerItem;
    uint64_t v24 = (uint64_t)v11;
    return sub_1AD341A84(v24, v22, (void (*)(uint64_t))v23);
  }
  sub_1AD342DF0((uint64_t)v11, (uint64_t)v15);
  id v18 = *(void (**)(unsigned char *))&v15[*(int *)(v12 + 32)];
  if (v18)
  {
    swift_retain();
    v18(v15);
    sub_1AD1E4514((uint64_t)v18);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v4, v5);
      id v19 = *(void **)(v1 + OBJC_IVAR____TtC18HealthExperienceUI36CalendarDatePickerCollectionViewCell_datePicker);
      id v20 = (void *)sub_1AD73A590();
      objc_msgSend(v19, sel_setDate_animated_, v20, 1);

      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
      return sub_1AD342E54((uint64_t)v15);
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  sub_1AD342E54((uint64_t)v15);
  id v22 = (unint64_t *)&unk_1EB741390;
  id v23 = (uint64_t (*)())MEMORY[0x1E4F27928];
  uint64_t v24 = (uint64_t)v4;
  return sub_1AD341A84(v24, v22, (void (*)(uint64_t))v23);
}

uint64_t sub_1AD341A84(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1AD1E3C20(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AD341AE0(void *a1)
{
  uint64_t v2 = v1;
  v30[0] = swift_getObjectType();
  uint64_t v4 = sub_1AD73CBA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD1E3C20(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v30 - v9;
  sub_1AD1E3C20(0, &qword_1E9A2C760, (void (*)(uint64_t))type metadata accessor for CalendarDatePickerItem);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v30 - v12;
  uint64_t v14 = type metadata accessor for CalendarDatePickerItem();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  int v17 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v2 + OBJC_IVAR____TtC18HealthExperienceUI36CalendarDatePickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1AD340D70(v18, (uint64_t)v31, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
  if (v31[3])
  {
    sub_1AD2282B4();
    int v19 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, v19 ^ 1u, 1, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      sub_1AD342DF0((uint64_t)v13, (uint64_t)v17);
      id v20 = *(void (**)(char *, char *))&v17[*(int *)(v14 + 36)];
      if (v20)
      {
        swift_retain();
        id v21 = objc_msgSend(a1, sel_date, v30[0]);
        sub_1AD73A5D0();

        uint64_t v22 = sub_1AD73A600();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 0, 1, v22);
        v20(v17, v10);
        sub_1AD1E4514((uint64_t)v20);
        sub_1AD341A84((uint64_t)v10, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928]);
      }
      return sub_1AD342E54((uint64_t)v17);
    }
  }
  else
  {
    sub_1AD341A84((uint64_t)v31, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  }
  sub_1AD341A84((uint64_t)v13, &qword_1E9A2C760, (void (*)(uint64_t))type metadata accessor for CalendarDatePickerItem);
  sub_1AD73CAD0();
  uint64_t v24 = sub_1AD73CB80();
  os_log_type_t v25 = sub_1AD73F940();
  if (os_log_type_enabled(v24, v25))
  {
    id v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    v31[0] = v27;
    *(_DWORD *)id v26 = 136315138;
    uint64_t v28 = sub_1AD740E30();
    v30[1] = sub_1AD1F62D4(v28, v29, v31);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v24, v25, "[%s] item is not a CalendarDatePickerItem", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v27, -1, -1);
    MEMORY[0x1B3E68450](v26, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id CalendarDatePickerCollectionViewCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CalendarDatePickerCollectionViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void _s18HealthExperienceUI36CalendarDatePickerCollectionViewCellC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC18HealthExperienceUI36CalendarDatePickerCollectionViewCell_item];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  uint64_t v2 = OBJC_IVAR____TtC18HealthExperienceUI36CalendarDatePickerCollectionViewCell_datePicker;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB16B0]), sel_init);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setPreferredDatePickerStyle_, 3);
  objc_msgSend(v3, sel_setDatePickerMode_, 1);
  *(void *)&v0[v2] = v3;

  sub_1AD7408B0();
  __break(1u);
}

unint64_t sub_1AD3421D8(uint64_t a1)
{
  unint64_t result = sub_1AD342200();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AD342200()
{
  unint64_t result = qword_1E9A2C740;
  if (!qword_1E9A2C740)
  {
    type metadata accessor for CalendarDatePickerItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C740);
  }
  return result;
}

uint64_t sub_1AD342258@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CalendarDatePickerItem() + 32));
  uint64_t v4 = *v3;
  if (*v3) {
    uint64_t v5 = v3[1];
  }
  else {
    uint64_t v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  return sub_1AD21485C(v4);
}

uint64_t sub_1AD3422B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18HealthExperienceUI36CalendarDatePickerCollectionViewCell_item;
  swift_beginAccess();
  return sub_1AD340D70(v3, a2, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
}

void *initializeBufferWithCopyOfBuffer for CalendarDatePickerItem(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1AD73A670();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (void *)((char *)v4 + v14);
    int v19 = (void *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[8];
    uint64_t v22 = (void *)((char *)v4 + v21);
    id v23 = (char *)a2 + v21;
    uint64_t v24 = *(void *)((char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24)
    {
      uint64_t v25 = *((void *)v23 + 1);
      void *v22 = v24;
      v22[1] = v25;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    }
    uint64_t v27 = a3[9];
    uint64_t v28 = (void *)((char *)v4 + v27);
    unint64_t v29 = (void *)((char *)a2 + v27);
    if (*v29)
    {
      uint64_t v30 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v30;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    }
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  }
  return v4;
}

uint64_t destroy for CalendarDatePickerItem(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1AD73A670();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[8])) {
    uint64_t result = swift_release();
  }
  if (*(void *)(a1 + a2[9]))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for CalendarDatePickerItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1AD73A670();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)((char *)a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23)
  {
    uint64_t v24 = *((void *)v22 + 1);
    void *v21 = v23;
    v21[1] = v24;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  if (*v27)
  {
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  }
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

void *assignWithCopy for CalendarDatePickerItem(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AD73A670();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  void *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)((char *)a1 + v16);
  uint64_t v20 = *(void *)((char *)a2 + v16);
  if (v19)
  {
    if (v20)
    {
      uint64_t v21 = *((void *)v18 + 1);
      *uint64_t v17 = v20;
      v17[1] = v21;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v20)
  {
    uint64_t v22 = *((void *)v18 + 1);
    *uint64_t v17 = v20;
    v17[1] = v22;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
LABEL_8:
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)((char *)a1 + v23);
  uint64_t v27 = *(void *)((char *)a2 + v23);
  if (!v26)
  {
    if (v27)
    {
      uint64_t v29 = *((void *)v25 + 1);
      void *v24 = v27;
      v24[1] = v29;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    goto LABEL_15;
  }
  if (!v27)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v28 = *((void *)v25 + 1);
  void *v24 = v27;
  v24[1] = v28;
  swift_retain();
  swift_release();
LABEL_15:
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

_OWORD *initializeWithTake for CalendarDatePickerItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AD73A670();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  uint64_t v14 = *v13;
  if (*v13)
  {
    uint64_t v15 = v13[1];
    *uint64_t v12 = v14;
    v12[1] = v15;
  }
  else
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  }
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (uint64_t *)((char *)a2 + v16);
  uint64_t v19 = *v18;
  if (*v18)
  {
    uint64_t v20 = v18[1];
    *uint64_t v17 = v19;
    v17[1] = v20;
  }
  else
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  }
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

void *assignWithTake for CalendarDatePickerItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1AD73A670();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)((char *)a1 + v21);
  uint64_t v25 = *(void *)((char *)a2 + v21);
  if (v24)
  {
    if (v25)
    {
      uint64_t v26 = *((void *)v23 + 1);
      void *v22 = v25;
      v22[1] = v26;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v25)
  {
    uint64_t v27 = *((void *)v23 + 1);
    void *v22 = v25;
    v22[1] = v27;
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
LABEL_8:
  uint64_t v28 = a3[9];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)((char *)a1 + v28);
  uint64_t v32 = *(void *)((char *)a2 + v28);
  if (!v31)
  {
    if (v32)
    {
      uint64_t v34 = *((void *)v30 + 1);
      *uint64_t v29 = v32;
      v29[1] = v34;
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    goto LABEL_15;
  }
  if (!v32)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v33 = *((void *)v30 + 1);
  *uint64_t v29 = v32;
  v29[1] = v33;
  swift_release();
LABEL_15:
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for CalendarDatePickerItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AD342B20);
}

uint64_t sub_1AD342B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1AD73A670();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CalendarDatePickerItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AD342BE4);
}

uint64_t sub_1AD342BE4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1AD73A670();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1AD342C8C()
{
  uint64_t result = sub_1AD73A670();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for CalendarDatePickerCollectionViewCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalendarDatePickerCollectionViewCell);
}

uint64_t dispatch thunk of CalendarDatePickerCollectionViewCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of CalendarDatePickerCollectionViewCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of CalendarDatePickerCollectionViewCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t sub_1AD342DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarDatePickerItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD342E54(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CalendarDatePickerItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD342EB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t MedicationsAffectHeartRateDataSource.__allocating_init(healthStore:)(void *a1)
{
  return MedicationsAffectHeartRateDataSource.init(healthStore:)(a1);
}

uint64_t MedicationsAffectHeartRateDataSource.init(healthStore:)(void *a1)
{
  sub_1AD1C88C0(0, &qword_1E9A2C768);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD74C350;
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AD73A1D0();
  uint64_t v4 = v3;
  uint64_t v5 = sub_1AD73A1D0();
  *(void *)(inited + 32) = v2;
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = v5;
  *(void *)(inited + 56) = v6;
  *(void *)(inited + 64) = 0xD000000000000016;
  *(void *)(inited + 72) = 0x80000001AD770D90;
  *(void *)(inited + 80) = &unk_1F041D438;
  *(_WORD *)(inited + 88) = 258;
  *(void *)(inited + 96) = 0;
  *(void *)(inited + 104) = 0;
  uint64_t v7 = sub_1AD73A1D0();
  uint64_t v9 = v8;
  uint64_t v10 = sub_1AD73A1D0();
  *(void *)(inited + 112) = v7;
  *(void *)(inited + 120) = v9;
  *(void *)(inited + 128) = v10;
  *(void *)(inited + 136) = v11;
  strcpy((char *)(inited + 144), "betaBlockers");
  *(unsigned char *)(inited + 157) = 0;
  *(_WORD *)(inited + 158) = -5120;
  *(void *)(inited + 160) = &unk_1F041D438;
  *(_WORD *)(inited + 168) = 258;
  *(void *)(inited + 176) = 0;
  *(void *)(inited + 184) = 0;
  uint64_t v64 = sub_1AD73A1D0();
  uint64_t v65 = v12;
  sub_1AD1C88C0(0, &qword_1E9A2C770);
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_1AD74C350;
  uint64_t v62 = MEMORY[0x1E4FBC860];
  sub_1AD2F5660(0, 2, 0);
  uint64_t v13 = v62;
  uint64_t v14 = *(void *)(inited + 40);
  uint64_t v59 = *(void *)(inited + 32);
  uint64_t v15 = *(void *)(inited + 56);
  uint64_t v16 = *(void *)(inited + 72);
  uint64_t v53 = *(void *)(inited + 64);
  uint64_t v55 = *(void *)(inited + 48);
  uint64_t v17 = *(void *)(inited + 80);
  uint64_t v49 = *(unsigned __int8 *)(inited + 88);
  int v47 = *(unsigned __int8 *)(inited + 89);
  uint64_t v18 = *(void *)(inited + 104);
  uint64_t v51 = *(void *)(inited + 96);
  unint64_t v20 = *(void *)(v62 + 16);
  unint64_t v19 = *(void *)(v62 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20 >= v19 >> 1)
  {
    sub_1AD2F5660(v19 > 1, v20 + 1, 1);
    uint64_t v13 = v62;
  }
  *(void *)(v13 + 16) = v20 + 1;
  uint64_t v21 = 256;
  uint64_t v22 = (void *)(v13 + 80 * v20);
  v22[4] = v59;
  uint64_t v22[5] = v14;
  if (!v47) {
    uint64_t v21 = 0;
  }
  v22[6] = v55;
  v22[7] = v15;
  v22[8] = v53;
  v22[9] = v16;
  v22[10] = v17;
  v22[11] = v21 | v49 | 0xC000000000000000;
  v22[12] = v51;
  v22[13] = v18;
  uint64_t v23 = *(void *)(inited + 120);
  uint64_t v24 = *(void *)(inited + 136);
  uint64_t v54 = *(void *)(inited + 128);
  uint64_t v56 = *(void *)(inited + 112);
  uint64_t v25 = *(void *)(inited + 152);
  uint64_t v26 = *(void *)(inited + 160);
  uint64_t v48 = *(unsigned __int8 *)(inited + 168);
  int v27 = *(unsigned __int8 *)(inited + 169);
  uint64_t v28 = *(void *)(inited + 184);
  uint64_t v50 = *(void *)(inited + 176);
  uint64_t v52 = *(void *)(inited + 144);
  int64_t v60 = v20 + 2;
  unint64_t v29 = v20 + 1;
  unint64_t v30 = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29 >= v30 >> 1)
  {
    sub_1AD2F5660(v30 > 1, v60, 1);
    uint64_t v13 = v62;
  }
  uint64_t v31 = 256;
  if (!v27) {
    uint64_t v31 = 0;
  }
  *(void *)(v13 + 16) = v60;
  uint64_t v32 = (void *)(v13 + 80 * v29);
  v32[4] = v56;
  v32[5] = v23;
  v32[6] = v54;
  v32[7] = v24;
  v32[8] = v52;
  v32[9] = v25;
  v32[10] = v26;
  v32[11] = v31 | v48 | 0xC000000000000000;
  v32[12] = v50;
  v32[13] = v28;
  swift_bridgeObjectRelease();
  *(void *)(v61 + 32) = v13;
  uint64_t v63 = MEMORY[0x1E4FBC860];
  sub_1AD2F5660(0, 1, 0);
  uint64_t v33 = v63;
  unint64_t v35 = *(void *)(v63 + 16);
  unint64_t v34 = *(void *)(v63 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35 >= v34 >> 1)
  {
    sub_1AD2F5660(v34 > 1, v35 + 1, 1);
    uint64_t v33 = v63;
  }
  *(void *)(v33 + 16) = v35 + 1;
  uint64_t v36 = (void *)(v33 + 80 * v35);
  v36[4] = v64;
  v36[5] = v65;
  v36[6] = 0;
  v36[7] = 0;
  v36[8] = 0xD000000000000015;
  v36[9] = 0x80000001AD770D70;
  v36[10] = &unk_1F041D470;
  v36[11] = 0xC000000000000002;
  v36[12] = 0;
  v36[13] = 0;
  swift_arrayDestroy();
  *(void *)(v61 + 40) = v33;
  type metadata accessor for ConfirmDetailsProvider();
  uint64_t v37 = swift_allocObject();
  id v38 = a1;
  uint64_t v39 = sub_1AD344CFC((uint64_t)v38, 0, 1, (uint64_t)sub_1AD29C5E8, 0, v37);
  type metadata accessor for ConfirmDetailsValueFormatterImpl();
  uint64_t v40 = (void *)swift_allocObject();
  v40[4] = 0;
  v40[5] = 0;
  v40[2] = v38;
  uint64_t v41 = self;
  id v42 = v38;
  id v43 = objc_msgSend(v41, sel_sharedInstanceForHealthStore_, v42, 0xE000000000000000);
  id v44 = objc_msgSend(v43, sel_createHKUnitPreferenceController);

  v40[3] = v44;
  swift_retain();
  uint64_t v45 = sub_1AD3441C0(v61, (uint64_t)v40, v39, v58);
  swift_release();

  return v45;
}

void MedicationsAffectHeartRateDataSource.__allocating_init(sections:detailsFormatter:detailsProvider:)()
{
}

void MedicationsAffectHeartRateDataSource.init(sections:detailsFormatter:detailsProvider:)()
{
}

uint64_t MedicationsAffectHeartRateDataSource.__deallocating_deinit()
{
  OnboardingConfirmDetailsDataSource.deinit();
  return swift_deallocClassInstance();
}

id sub_1AD34366C(char *a1)
{
  uint64_t v80 = a1;
  v84[3] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *v1;
  uint64_t v3 = sub_1AD73CBA0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v73 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v73 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v73 - v14;
  sub_1AD73CB20();
  uint64_t v16 = sub_1AD73CB80();
  os_log_type_t v17 = sub_1AD73F940();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v78 = v2;
  uint64_t v79 = v3;
  uint64_t v75 = v7;
  uint64_t v77 = v4;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    v84[0] = v20;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v21 = sub_1AD740E30();
    v83[0] = sub_1AD1F62D4(v21, v22, v84);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    v83[0] = sub_1AD1F62D4(0xD00000000000001ELL, 0x80000001AD778610, v84);
    sub_1AD7403B0();
    _os_log_impl(&dword_1AD1A4000, v16, v17, "%s.%s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    uint64_t v23 = v20;
    uint64_t v4 = v77;
    MEMORY[0x1B3E68450](v23, -1, -1);
    uint64_t v24 = v19;
    uint64_t v3 = v79;
    MEMORY[0x1B3E68450](v24, -1, -1);
  }

  uint64_t v25 = *(void (**)(char *, uint64_t))(v4 + 8);
  v25(v15, v3);
  uint64_t v26 = OBJC_IVAR____TtC18HealthExperienceUI34OnboardingConfirmDetailsDataSource_model;
  uint64_t v27 = *(void *)&v80[OBJC_IVAR____TtC18HealthExperienceUI34OnboardingConfirmDetailsDataSource_model]
      + OBJC_IVAR____TtC18HealthExperienceUI19ConfirmDetailsModel_multiselectValues;
  swift_beginAccess();
  uint64_t v28 = *(void *)v27;
  if (*(void *)(*(void *)v27 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v29 = sub_1AD20F694(0xD000000000000016, 0x80000001AD770D90);
    if (v30)
    {
      uint64_t v31 = *(unsigned __int8 *)(*(void *)(v28 + 56) + v29);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  sub_1AD73CB20();
  uint64_t v32 = sub_1AD73CB80();
  os_log_type_t v33 = sub_1AD73F920();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v74 = v25;
    uint64_t v36 = v35;
    v83[0] = v35;
    *(_DWORD *)uint64_t v34 = 136315394;
    uint64_t v37 = sub_1AD740E30();
    uint64_t v82 = (char *)sub_1AD1F62D4(v37, v38, v83);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v82 = (char *)sub_1AD1F62D4(0xD000000000000016, 0x80000001AD770D90, v83);
    sub_1AD7403B0();
    _os_log_impl(&dword_1AD1A4000, v32, v33, "%s Could not access Medications That Affect Heart Rate field for %s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    uint64_t v25 = v74;
    MEMORY[0x1B3E68450](v36, -1, -1);
    uint64_t v39 = v34;
    uint64_t v3 = v79;
    MEMORY[0x1B3E68450](v39, -1, -1);
  }

  v25(v13, v3);
  uint64_t v31 = 0;
LABEL_10:
  uint64_t v40 = *(void *)&v80[v26] + OBJC_IVAR____TtC18HealthExperienceUI19ConfirmDetailsModel_multiselectValues;
  swift_beginAccess();
  uint64_t v41 = *(void *)v40;
  if (*(void *)(*(void *)v40 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v42 = sub_1AD20F694(0x636F6C4261746562, 0xEC0000007372656BLL);
    if (v43)
    {
      int v44 = *(unsigned __int8 *)(*(void *)(v41 + 56) + v42);
      swift_bridgeObjectRelease();
      if (v44) {
        v31 |= 2uLL;
      }
      goto LABEL_20;
    }
    swift_bridgeObjectRelease();
  }
  sub_1AD73CB20();
  uint64_t v45 = sub_1AD73CB80();
  os_log_type_t v46 = sub_1AD73F920();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc();
    uint64_t v74 = v25;
    uint64_t v48 = v47;
    uint64_t v49 = (char *)swift_slowAlloc();
    uint64_t v82 = v49;
    *(_DWORD *)uint64_t v48 = 136315394;
    uint64_t v50 = sub_1AD740E30();
    uint64_t v81 = sub_1AD1F62D4(v50, v51, (uint64_t *)&v82);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2080;
    uint64_t v81 = sub_1AD1F62D4(0x636F6C4261746562, 0xEC0000007372656BLL, (uint64_t *)&v82);
    sub_1AD7403B0();
    _os_log_impl(&dword_1AD1A4000, v45, v46, "%s Could not access Medications That Affect Heart Rate field for %s", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v49, -1, -1);
    uint64_t v52 = v48;
    uint64_t v3 = v79;
    uint64_t v25 = v74;
    MEMORY[0x1B3E68450](v52, -1, -1);
  }

  v25(v10, v3);
LABEL_20:
  uint64_t v53 = *(void **)(v76 + 16);
  uint64_t v82 = 0;
  unsigned int v54 = objc_msgSend(v53, sel__setCardioFitnessMedicationsUse_error_, v31, &v82);
  id v55 = v82;
  if (v54)
  {
    return v55;
  }
  else
  {
    uint64_t v57 = (uint64_t (*)(char *, uint64_t))v25;
    uint64_t v80 = v82;
    unint64_t v58 = v82;
    uint64_t v59 = (void *)sub_1AD73A360();

    swift_willThrow();
    int64_t v60 = v75;
    sub_1AD73CB20();
    id v61 = v59;
    id v62 = v59;
    uint64_t v63 = sub_1AD73CB80();
    os_log_type_t v64 = sub_1AD73F920();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = swift_slowAlloc();
      uint64_t v66 = (char *)swift_slowAlloc();
      uint64_t v82 = v66;
      *(_DWORD *)uint64_t v65 = 136315394;
      uint64_t v67 = sub_1AD740E30();
      uint64_t v81 = sub_1AD1F62D4(v67, v68, (uint64_t *)&v82);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v65 + 12) = 2080;
      uint64_t v81 = (uint64_t)v59;
      id v69 = v59;
      sub_1AD26B6B8();
      uint64_t v70 = sub_1AD73F240();
      uint64_t v81 = sub_1AD1F62D4(v70, v71, (uint64_t *)&v82);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AD1A4000, v63, v64, "%s Could not save Medications That Affect Heart Rate selection: %s", (uint8_t *)v65, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v66, -1, -1);
      MEMORY[0x1B3E68450](v65, -1, -1);

      uint64_t v72 = v75;
    }
    else
    {

      uint64_t v72 = v60;
    }
    return (id)v57(v72, v3);
  }
}

uint64_t MedicationsAffectHeartRateDataSourceDelegate.deinit()
{
  return v0;
}

uint64_t MedicationsAffectHeartRateDataSourceDelegate.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t MedicationsAffectHeartRateDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1AD73A830();
  uint64_t v7 = v6;
  if (a1 == 0xD000000000000013 && a2 == 0x80000001AD771460)
  {
    if (!v6)
    {
LABEL_7:
      a3[3] = (uint64_t)&type metadata for UITableView.HeightItem;
      unint64_t result = sub_1AD24A764();
      a3[4] = result;
      uint64_t v9 = 0x403E000000000000;
LABEL_10:
      *a3 = v9;
      return result;
    }
    goto LABEL_9;
  }
  if ((sub_1AD740BC0() & 1) != 0 && !v7) {
    goto LABEL_7;
  }
  if (sub_1AD740BC0())
  {
LABEL_9:
    a3[3] = (uint64_t)&type metadata for UITableView.HeightItem;
    unint64_t result = sub_1AD24A764();
    a3[4] = result;
    uint64_t v9 = 0x4034000000000000;
    goto LABEL_10;
  }
  if (a1 == 0xD000000000000013 && a2 == 0x80000001AD771490 || (sub_1AD740BC0() & 1) != 0)
  {
    a3[3] = (uint64_t)&type metadata for UITableView.HeightItem;
    unint64_t result = sub_1AD24A764();
    a3[4] = result;
    *a3 = 0;
  }
  else
  {
    a3[3] = (uint64_t)&type metadata for UITableView.EmptyItem;
    unint64_t result = sub_1AD24A710();
    a3[4] = result;
  }
  return result;
}

unint64_t sub_1AD3441A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return MedicationsAffectHeartRateDataSource.supplementaryItem(ofKind:at:)(a1, a2, a3);
}

uint64_t sub_1AD3441C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v90 = *a4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AD1C69AC(0, (unint64_t *)&qword_1EB740280, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  double v86 = (char *)&v73 - v10;
  uint64_t v82 = sub_1AD73EEB0();
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  uint64_t v80 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD345214();
  uint64_t v84 = *(void *)(v12 - 8);
  uint64_t v85 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v83 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD345320();
  uint64_t v88 = *(void *)(v14 - 8);
  uint64_t v89 = v14;
  MEMORY[0x1F4188790](v14);
  CGFloat v87 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for ConfirmDetailsProvider.Details();
  uint64_t v16 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  BOOL v18 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD1C69AC(0, &qword_1E9A2B5A0, MEMORY[0x1E4F26F90], v8);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v79 = (char *)&v73 - v20;
  sub_1AD1C69AC(0, &qword_1E9A2B5A8, (uint64_t (*)(uint64_t))type metadata accessor for ConfirmDetailsProvider.Details, v8);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v24 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v73 - v25;
  uint64_t v27 = (char *)a4 + OBJC_IVAR____TtC18HealthExperienceUI34OnboardingConfirmDetailsDataSource_selectedIndexPath;
  uint64_t v28 = sub_1AD73A860();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC18HealthExperienceUI34OnboardingConfirmDetailsDataSource_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1AD7408D0()) {
    unint64_t v29 = sub_1AD275268(MEMORY[0x1E4FBC860]);
  }
  else {
    unint64_t v29 = MEMORY[0x1E4FBC870];
  }
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC18HealthExperienceUI34OnboardingConfirmDetailsDataSource_subscriptions) = v29;
  *(uint64_t *)((char *)a4
             + OBJC_IVAR____TtC18HealthExperienceUI34OnboardingConfirmDetailsDataSource_confirmDetailsSections) = a1;
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC18HealthExperienceUI34OnboardingConfirmDetailsDataSource_detailsProvider) = a3;
  if (a3)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v26, 1, 1, v91);
    swift_bridgeObjectRetain();
    sub_1AD3453EC((uint64_t)v26, (uint64_t)v24);
    swift_beginAccess();
    uint64_t v30 = *(void *)(a3 + 80);
    char v31 = *(unsigned char *)(a3 + 88);
  }
  else
  {
    uint64_t v32 = sub_1AD739FB0();
    uint64_t v75 = v26;
    uint64_t v77 = a2;
    uint64_t v33 = v32;
    uint64_t v34 = *(void *)(v32 - 8);
    uint64_t v76 = v24;
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
    uint64_t v74 = v16;
    uint64_t v36 = a1;
    char v31 = 1;
    uint64_t v37 = (uint64_t)v79;
    v35(v79, 1, 1, v32);
    unint64_t v38 = (int *)v91;
    uint64_t v39 = *(int *)(v91 + 20);
    uint64_t v78 = 0;
    uint64_t v40 = &v18[v39];
    uint64_t v41 = v33;
    a2 = v77;
    v35(&v18[v39], 1, 1, v41);
    uint64_t v42 = v38[6];
    *(void *)&v18[v42] = 0;
    uint64_t v43 = v38[7];
    *(void *)&v18[v43] = 0;
    *(void *)BOOL v18 = 0;
    v18[8] = 1;
    swift_bridgeObjectRetain();
    uint64_t v44 = (uint64_t)v40;
    a3 = v78;
    sub_1AD29B654(v37, v44);

    *(void *)&v18[v42] = 0;
    a1 = v36;

    *(void *)&v18[v43] = 0;
    uint64_t v24 = v76;
    v18[v38[8]] = 0;
    v18[v38[9]] = 0;
    uint64_t v26 = v75;
    sub_1AD29FB20((uint64_t)v18, (uint64_t)v75);
    (*(void (**)(char *, void, uint64_t, int *))(v74 + 56))(v26, 0, 1, v38);
    sub_1AD3453EC((uint64_t)v26, (uint64_t)v24);
    uint64_t v30 = 0;
  }
  type metadata accessor for ConfirmDetailsModel();
  uint64_t v45 = swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v46 = sub_1AD345480(a1, a2, (uint64_t)v24, v30, v31, v45);
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC18HealthExperienceUI34OnboardingConfirmDetailsDataSource_model) = v46;
  uint64_t v47 = (uint64_t *)(v46 + OBJC_IVAR____TtC18HealthExperienceUI19ConfirmDetailsModel_visibleRows);
  uint64_t v48 = swift_beginAccess();
  uint64_t v49 = *v47;
  MEMORY[0x1F4188790](v48);
  *(&v73 - 2) = v46;
  *(&v73 - 1) = (uint64_t)v26;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_1AD2F232C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1AD345774, (uint64_t)(&v73 - 4), v49);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v51 = sub_1AD4E8948(v50);
  swift_bridgeObjectRelease();
  uint64_t v52 = sub_1AD1FBF24();
  uint64_t v54 = MutableArrayDataSource.init(arrangedSections:identifier:)(v51, v52, v53);
  *(void *)(*(void *)(v54 + OBJC_IVAR____TtC18HealthExperienceUI34OnboardingConfirmDetailsDataSource_model)
            + OBJC_IVAR____TtC18HealthExperienceUI19ConfirmDetailsModel_delegate
            + 8) = &off_1F042FF98;
  swift_unknownObjectWeakAssign();
  uint64_t v55 = (uint64_t)v26;
  if (a3)
  {
    uint64_t v56 = *(uint64_t (**)(uint64_t))(*(void *)a3 + 184);
    swift_retain();
    uint64_t v57 = swift_retain();
    unint64_t v58 = (void *)v56(v57);
    swift_release();
    id v92 = v58;
    sub_1AD345958(0, (unint64_t *)&qword_1E9A2C790, MEMORY[0x1E4F1AAE0]);
    sub_1AD3452AC();
    uint64_t v59 = v83;
    sub_1AD73DC80();
    swift_release();
    sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F7F0);
    uint64_t v60 = v81;
    id v61 = v80;
    uint64_t v62 = v82;
    (*(void (**)(char *, void, uint64_t))(v81 + 104))(v80, *MEMORY[0x1E4FBCB38], v82);
    uint64_t v63 = (void *)sub_1AD73FC80();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
    id v92 = v63;
    uint64_t v64 = sub_1AD73FBF0();
    uint64_t v65 = (uint64_t)v86;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v86, 1, 1, v64);
    sub_1AD345910(&qword_1E9A2C7A8, (void (*)(uint64_t))sub_1AD345214);
    sub_1AD21F35C();
    uint64_t v66 = v87;
    uint64_t v67 = v85;
    sub_1AD73DD80();
    sub_1AD345794(v65, (unint64_t *)&qword_1EB740280, MEMORY[0x1E4FBCC28]);

    (*(void (**)(char *, uint64_t))(v84 + 8))(v59, v67);
    uint64_t v68 = swift_allocObject();
    swift_weakInit();
    uint64_t v69 = swift_allocObject();
    uint64_t v70 = v90;
    *(void *)(v69 + 16) = v68;
    *(void *)(v69 + 24) = v70;
    sub_1AD345910(&qword_1E9A2C7B0, (void (*)(uint64_t))sub_1AD345320);
    uint64_t v71 = v89;
    sub_1AD73DE20();
    swift_release();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v66, v71);
    swift_beginAccess();
    sub_1AD73DA00();
    swift_endAccess();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  sub_1AD345794(v55, &qword_1E9A2B5A8, (uint64_t (*)(uint64_t))type metadata accessor for ConfirmDetailsProvider.Details);
  return v54;
}

uint64_t sub_1AD344CFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  int v22 = a3;
  uint64_t v21 = a2;
  sub_1AD1C69AC(0, &qword_1E9A2B5A8, (uint64_t (*)(uint64_t))type metadata accessor for ConfirmDetailsProvider.Details, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v20 = (char *)&v19 - v9;
  uint64_t v10 = sub_1AD73FC40();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1AD73FBD0();
  MEMORY[0x1F4188790](v14);
  uint64_t v15 = sub_1AD73EEF0();
  MEMORY[0x1F4188790](v15 - 8);
  v26[3] = sub_1AD2147D4(0, (unint64_t *)&qword_1EB73C0F0);
  v26[4] = &protocol witness table for HKHealthStore;
  v26[0] = a1;
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F7F0);
  sub_1AD73EED0();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1AD345910(&qword_1EB732790, MEMORY[0x1E4FBCC10]);
  sub_1AD1C69AC(0, (unint64_t *)&unk_1EB732720, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1AD21F9D8();
  sub_1AD7404F0();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCC58], v10);
  *(void *)(a6 + 72) = sub_1AD73FC70();
  *(void *)(a6 + 80) = 0;
  *(unsigned char *)(a6 + 88) = 1;
  uint64_t v16 = type metadata accessor for ConfirmDetailsProvider.Details();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v20, 1, 1, v16);
  sub_1AD345958(0, (unint64_t *)&qword_1E9A2B5B0, MEMORY[0x1E4F1ABB0]);
  swift_allocObject();
  *(void *)(a6 + 96) = sub_1AD73DAD0();
  sub_1AD1FFE38((uint64_t)v26, a6 + 16);
  swift_beginAccess();
  *(void *)(a6 + 80) = v21;
  *(unsigned char *)(a6 + 88) = v22 & 1;
  uint64_t v17 = v24;
  *(void *)(a6 + 56) = v23;
  *(void *)(a6 + 64) = v17;
  swift_retain();
  sub_1AD29C79C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return a6;
}

uint64_t sub_1AD3450FC()
{
  return type metadata accessor for MedicationsAffectHeartRateDataSource();
}

uint64_t type metadata accessor for MedicationsAffectHeartRateDataSource()
{
  uint64_t result = qword_1E9A2C778;
  if (!qword_1E9A2C778) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AD345150()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for MedicationsAffectHeartRateDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationsAffectHeartRateDataSource);
}

uint64_t dispatch thunk of MedicationsAffectHeartRateDataSource.__allocating_init(healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 712))();
}

uint64_t type metadata accessor for MedicationsAffectHeartRateDataSourceDelegate()
{
  return self;
}

uint64_t method lookup function for MedicationsAffectHeartRateDataSourceDelegate(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationsAffectHeartRateDataSourceDelegate);
}

uint64_t dispatch thunk of MedicationsAffectHeartRateDataSourceDelegate.detailsDataSourceDidUpdate(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

void sub_1AD345214()
{
  if (!qword_1E9A2C788)
  {
    sub_1AD345958(255, (unint64_t *)&qword_1E9A2C790, MEMORY[0x1E4F1AAE0]);
    type metadata accessor for ConfirmDetailsProvider.Details();
    sub_1AD3452AC();
    unint64_t v0 = sub_1AD73D7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C788);
    }
  }
}

unint64_t sub_1AD3452AC()
{
  unint64_t result = qword_1E9A2C798;
  if (!qword_1E9A2C798)
  {
    sub_1AD345958(255, (unint64_t *)&qword_1E9A2C790, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C798);
  }
  return result;
}

void sub_1AD345320()
{
  if (!qword_1E9A2C7A0)
  {
    sub_1AD345214();
    sub_1AD2147D4(255, (unint64_t *)&qword_1EB73F7F0);
    sub_1AD345910(&qword_1E9A2C7A8, (void (*)(uint64_t))sub_1AD345214);
    sub_1AD21F35C();
    unint64_t v0 = sub_1AD73D9A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C7A0);
    }
  }
}

uint64_t sub_1AD3453EC(uint64_t a1, uint64_t a2)
{
  sub_1AD1C69AC(0, &qword_1E9A2B5A8, (uint64_t (*)(uint64_t))type metadata accessor for ConfirmDetailsProvider.Details, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD345480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v25 = a4;
  uint64_t v26 = a1;
  uint64_t v10 = sub_1AD73A770();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[3] = type metadata accessor for ConfirmDetailsValueFormatterImpl();
  v27[4] = &protocol witness table for ConfirmDetailsValueFormatterImpl;
  v27[0] = a2;
  uint64_t v14 = a6 + OBJC_IVAR____TtC18HealthExperienceUI19ConfirmDetailsModel_mostRecentDetails;
  uint64_t v15 = type metadata accessor for ConfirmDetailsProvider.Details();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = OBJC_IVAR____TtC18HealthExperienceUI19ConfirmDetailsModel_correlatedItemsMapping;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  *(void *)(a6 + v16) = sub_1AD2584F4(MEMORY[0x1E4FBC860]);
  *(void *)(a6 + OBJC_IVAR____TtC18HealthExperienceUI19ConfirmDetailsModel_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v18 = a6 + OBJC_IVAR____TtC18HealthExperienceUI19ConfirmDetailsModel_calendar;
  id v19 = objc_msgSend(self, sel_hk_gregorianCalendar);
  sub_1AD73A700();

  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v18, v13, v10);
  uint64_t v20 = a6 + OBJC_IVAR____TtC18HealthExperienceUI19ConfirmDetailsModel____lazy_storage___defaultDateOfBirth;
  sub_1AD1C69AC(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  sub_1AD1FFE38((uint64_t)v27, a6 + OBJC_IVAR____TtC18HealthExperienceUI19ConfirmDetailsModel_valueFormatter);
  *(void *)(a6 + OBJC_IVAR____TtC18HealthExperienceUI19ConfirmDetailsModel_visibleRows) = v17;
  swift_beginAccess();
  sub_1AD34587C(a3, v14);
  swift_endAccess();
  *(void *)(a6 + OBJC_IVAR____TtC18HealthExperienceUI19ConfirmDetailsModel_multiselectValues) = MEMORY[0x1E4FBC868];
  uint64_t v22 = 35;
  uint64_t v23 = v26;
  if ((a5 & 1) == 0) {
    uint64_t v22 = v25;
  }
  *(void *)(a6 + OBJC_IVAR____TtC18HealthExperienceUI19ConfirmDetailsModel_defaultAge) = v22;
  sub_1AD3BEE00(v23);
  sub_1AD345794(a3, &qword_1E9A2B5A8, (uint64_t (*)(uint64_t))type metadata accessor for ConfirmDetailsProvider.Details);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return a6;
}

uint64_t sub_1AD345774@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AD3BF4AC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1AD345794(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1AD1C69AC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AD345804()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1AD34583C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD345874(uint64_t a1)
{
  return sub_1AD4E9B84(a1);
}

uint64_t sub_1AD34587C(uint64_t a1, uint64_t a2)
{
  sub_1AD1C69AC(0, &qword_1E9A2B5A8, (uint64_t (*)(uint64_t))type metadata accessor for ConfirmDetailsProvider.Details, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD345910(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AD345958(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_1AD1C69AC(255, &qword_1E9A2B5A8, (uint64_t (*)(uint64_t))type metadata accessor for ConfirmDetailsProvider.Details, MEMORY[0x1E4FBB718]);
    unint64_t v7 = a3(a1, v6, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t AppSourcesItem.__allocating_init(sourceDataModel:healthStore:sourceType:)(void *a1, void *a2, char *a3)
{
  uint64_t v6 = swift_allocObject();
  AppSourcesItem.init(sourceDataModel:healthStore:sourceType:)(a1, a2, a3);
  return v6;
}

void sub_1AD345A50(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  uint64_t v10 = self;
  swift_retain();
  id v11 = objc_msgSend(v10, sel_sharedImageManager);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(unsigned char *)(v13 + 24) = a5;
  *(void *)(v13 + 32) = a3;
  *(void *)(v13 + 40) = sub_1AD28B6F4;
  *(void *)(v13 + 48) = v9;
  v16[4] = sub_1AD347914;
  v16[5] = v13;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  v16[2] = sub_1AD345CCC;
  v16[3] = &block_descriptor_16;
  uint64_t v14 = _Block_copy(v16);
  id v15 = a3;
  swift_release();
  objc_msgSend(v11, sel_loadIconForSource_productType_completionHandler_, v15, 0, v14);
  _Block_release(v14);
}

void sub_1AD345BE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, void (*a8)(void *, void))
{
  uint64_t v12 = a5 + 16;
  swift_beginAccess();
  uint64_t v13 = (void *)MEMORY[0x1B3E68580](v12);

  if (v13)
  {
    uint64_t v14 = a1;
    if (!a1)
    {
      if (a6 >= 2u)
      {
        id v15 = objc_msgSend(self, sel_defaultDeviceIconTableUIForSource_, a7);
      }
      else
      {
        sub_1AD73B760();
        id v15 = (id)sub_1AD73B750();
      }
      uint64_t v14 = v15;
    }
    id v16 = v14;
    id v17 = a1;
    a8(v14, 0);
  }
}

void sub_1AD345CCC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v11 = a2;
  id v10 = a5;
  v9(a2, a3, a4, a5);
  swift_release();
}

uint64_t sub_1AD345D70()
{
  unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AD2084EC(0, &qword_1EB73FD50, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v26 = (char *)&v23 - v2;
  uint64_t v3 = sub_1AD73CCB0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v25 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1AD73CC10();
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD2084EC(0, (unint64_t *)&qword_1EB7401D0, MEMORY[0x1E4FB0F28], v0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = sub_1AD5ABA84();
  MEMORY[0x1B3E66130](v15);
  uint64_t v16 = sub_1AD73CE60();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v14, 1, v16))
  {
    id v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FB0F28];
    sub_1AD207BB4((uint64_t)v14, (uint64_t)v12, (unint64_t *)&qword_1EB7401D0, MEMORY[0x1E4FB0F28]);
    MEMORY[0x1B3E66140](v12);
    sub_1AD20702C((uint64_t)v14, (unint64_t *)&qword_1EB7401D0, v17);
  }
  else
  {
    id v18 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
    sub_1AD73CE00();
    MEMORY[0x1B3E66140](v14);
  }
  sub_1AD2084EC(0, &qword_1EB7401F0, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1AD73CCE0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1AD74C370;
  uint64_t v19 = v24;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FB0E18], v24);
  uint64_t v20 = sub_1AD73CC40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v26, 1, 1, v20);
  uint64_t v21 = v25;
  sub_1AD73CCA0();
  sub_1AD73CC70();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v21, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  return sub_1AD73FF00();
}

void sub_1AD3461FC()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1AD73CBA0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD2084EC(0, (unint64_t *)&qword_1EB740280, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v54 - v8;
  sub_1AD221ED4();
  uint64_t v11 = v10;
  uint64_t v58 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v57 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1AD73D120();
  uint64_t v59 = *(void (***)(char *, uint64_t))(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v1[OBJC_IVAR____TtC18HealthExperienceUI16IconWithNameCell_item];
  swift_beginAccess();
  sub_1AD207BB4(v16, (uint64_t)&v62, (unint64_t *)&qword_1EB73E880, (uint64_t (*)(uint64_t))sub_1AD2282B4);
  if (v64)
  {
    sub_1AD2282B4();
    type metadata accessor for AppSourcesItem();
    if (swift_dynamicCast())
    {
      uint64_t v56 = v11;
      uint64_t v17 = v61[0];
      uint64_t v62 = 0;
      unint64_t v63 = 0xE000000000000000;
      sub_1AD740680();
      swift_bridgeObjectRelease();
      uint64_t v62 = 0xD000000000000013;
      unint64_t v63 = 0x80000001AD774970;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1AD73F300();
      swift_bridgeObjectRelease();
      id v18 = (void *)sub_1AD73F180();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setAccessibilityIdentifier_, v18);

      id v19 = objc_msgSend(*(id *)(v17 + 48), sel_source);
      uint64_t v20 = self;
      id v21 = objc_msgSend(v20, sel_sharedImageManager);
      id v22 = objc_msgSend(v21, sel_iconForSource_productType_, v19, 0);

      if (v22)
      {
        *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI14AppSourcesCell_iconPublisher] = 0;
        swift_release();
        swift_bridgeObjectRetain();
        id v23 = v22;
        MEMORY[0x1B3E66240]();
        swift_bridgeObjectRetain();
        sub_1AD73D0C0();
        id v24 = v23;
        sub_1AD73D0E0();
        uint64_t v25 = (void (*)(uint64_t *, void))sub_1AD73CFE0();
        sub_1AD73CF90();
        v25(&v62, 0);
        sub_1AD73D050();
        uint64_t v64 = v13;
        uint64_t v65 = MEMORY[0x1E4FB0F88];
        uint64_t v26 = __swift_allocate_boxed_opaque_existential_1(&v62);
        uint64_t v27 = v59;
        ((void (*)(uint64_t *, char *, uint64_t))v59[2])(v26, v15, v13);
        MEMORY[0x1B3E66120](&v62);
        v27[1](v15, v13);
        swift_bridgeObjectRelease();

        swift_release();
      }
      else
      {
        unsigned int v34 = *(unsigned __int8 *)(v17 + 32);
        id v54 = *(id *)(v17 + 56);
        id v55 = v19;
        if (v34 >= 2)
        {
          swift_bridgeObjectRetain();
          id v35 = objc_msgSend(v20, sel_defaultDeviceIconTableUIForSource_, v19, v54);
        }
        else
        {
          sub_1AD73B760();
          swift_bridgeObjectRetain();
          id v35 = (id)sub_1AD73B750();
        }
        uint64_t v36 = v35;
        MEMORY[0x1B3E66240]();
        swift_bridgeObjectRetain();
        sub_1AD73D0C0();
        id v54 = v36;
        sub_1AD73D0E0();
        uint64_t v37 = (void (*)(uint64_t *, void))sub_1AD73CFE0();
        sub_1AD73CF90();
        v37(&v62, 0);
        sub_1AD73D050();
        uint64_t v64 = v13;
        uint64_t v65 = MEMORY[0x1E4FB0F88];
        unint64_t v38 = __swift_allocate_boxed_opaque_existential_1(&v62);
        uint64_t v39 = v59;
        ((void (*)(uint64_t *, char *, uint64_t))v59[2])(v38, v15, v13);
        MEMORY[0x1B3E66120](&v62);
        v39[1](v15, v13);
        swift_bridgeObjectRelease();

        id v40 = objc_msgSend(v20, sel_sharedImageManager);
        char v41 = *(unsigned char *)(v17 + 32);
        uint64_t v42 = swift_allocObject();
        uint64_t v43 = v55;
        *(void *)(v42 + 16) = v55;
        *(void *)(v42 + 24) = v40;
        *(unsigned char *)(v42 + 32) = v41;
        uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AC28];
        sub_1AD1C6DE4(0, &qword_1E9A2C7C0, MEMORY[0x1E4F1AC28]);
        swift_allocObject();
        uint64_t v59 = v43;
        id v45 = v40;
        uint64_t v62 = sub_1AD73DB80();
        sub_1AD221AC4(&qword_1E9A2C7C8, &qword_1E9A2C7C0, v44);
        uint64_t v46 = sub_1AD73DC70();

        swift_release();
        uint64_t v62 = v46;
        sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F7F0);
        id v60 = (id)sub_1AD73FC50();
        uint64_t v47 = sub_1AD73FBF0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v9, 1, 1, v47);
        uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
        sub_1AD1C6DE4(0, (unint64_t *)&qword_1EB7326C8, MEMORY[0x1E4F1AAE0]);
        sub_1AD221AC4(&qword_1EB7326C0, (unint64_t *)&qword_1EB7326C8, v48);
        sub_1AD21F35C();
        uint64_t v49 = v57;
        sub_1AD73DD80();
        sub_1AD20702C((uint64_t)v9, (unint64_t *)&qword_1EB740280, MEMORY[0x1E4FBCC28]);

        swift_release();
        uint64_t v50 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v51 = swift_allocObject();
        *(void *)(v51 + 16) = v50;
        *(void *)(v51 + 24) = v17;
        sub_1AD347814(&qword_1EB732680, 255, (void (*)(uint64_t))sub_1AD221ED4);
        swift_retain();
        uint64_t v52 = v56;
        uint64_t v53 = sub_1AD73DE20();
        swift_release();
        (*(void (**)(char *, uint64_t))(v58 + 8))(v49, v52);
        *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI14AppSourcesCell_iconPublisher] = v53;
        swift_release();

        swift_release();
      }
      return;
    }
  }
  else
  {
    sub_1AD20702C((uint64_t)&v62, (unint64_t *)&qword_1EB73E880, (uint64_t (*)(uint64_t))sub_1AD2282B4);
  }
  sub_1AD73CB40();
  uint64_t v28 = sub_1AD73CB80();
  os_log_type_t v29 = sub_1AD73F930();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v61[0] = v31;
    *(_DWORD *)uint64_t v30 = 136446210;
    uint64_t v62 = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v32 = sub_1AD73F220();
    uint64_t v62 = sub_1AD1F62D4(v32, v33, v61);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v28, v29, "[%{public}s] item is not an AppSourcesItem", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v31, -1, -1);
    MEMORY[0x1B3E68450](v30, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1AD346C90(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1B3E68580](v5);
  if (result)
  {
    uint64_t v7 = (void *)result;
    swift_beginAccess();
    uint64_t v9 = *(void *)(a3 + 56);
    uint64_t v8 = *(void *)(a3 + 64);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v7) + 0x88);
    swift_bridgeObjectRetain();
    v10(v9, v8, v4);

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AD346E30()
{
  return swift_release();
}

id sub_1AD346E40()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppSourcesCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1AD346E84(uint64_t a1, void *a2)
{
}

uint64_t sub_1AD346EAC()
{
  type metadata accessor for AppSourcesCell();
  sub_1AD347948();
  uint64_t result = sub_1AD73F220();
  qword_1E9A48728 = result;
  unk_1E9A48730 = v1;
  return result;
}

uint64_t sub_1AD346EF0()
{
  if (qword_1E9A290E8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1E9A48728;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t AppSourcesItem.uniqueIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void AppSourcesItem.sourceType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t (*sub_1AD346F94())()
{
  return j__swift_endAccess;
}

uint64_t AppSourcesItem.init(sourceDataModel:healthStore:sourceType:)(void *a1, void *a2, char *a3)
{
  char v5 = *a3;
  *(void *)(v3 + 40) = a2;
  *(void *)(v3 + 48) = a1;
  *(unsigned char *)(v3 + 32) = v5;
  id v6 = a2;
  id v7 = a1;
  id v8 = objc_msgSend(v7, sel_source);
  id v9 = objc_msgSend(v8, sel_name);

  uint64_t v10 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  uint64_t v12 = v11;

  *(void *)(v3 + 56) = v10;
  *(void *)(v3 + 64) = v12;
  id v13 = objc_msgSend(v7, sel_source);
  id v14 = objc_msgSend(v13, sel_bundleIdentifier);

  uint64_t v15 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  uint64_t v17 = v16;

  *(void *)(v3 + 16) = v15;
  *(void *)(v3 + 24) = v17;
  return v3;
}

uint64_t AppSourcesItem.deinit()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AppSourcesItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD347168(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1AD347814(&qword_1E9A2AC60, a2, (void (*)(uint64_t))type metadata accessor for AppSourcesItem);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for AppSourcesItem()
{
  return self;
}

uint64_t sub_1AD3471E4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 64);
  *a2 = *(void *)(v3 + 56);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AppSourcesCell()
{
  return self;
}

uint64_t dispatch thunk of SourcesItem.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for AppSourcesItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AppSourcesItem);
}

uint64_t dispatch thunk of AppSourcesItem.reuseIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of AppSourcesItem.name.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of AppSourcesItem.name.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of AppSourcesItem.name.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of AppSourcesItem.__allocating_init(sourceDataModel:healthStore:sourceType:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

void sub_1AD347328(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1AD73CBA0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v2 + OBJC_IVAR____TtC18HealthExperienceUI16IconWithNameCell_item;
  swift_beginAccess();
  sub_1AD207BB4(v9, (uint64_t)v28, (unint64_t *)&qword_1EB73E880, (uint64_t (*)(uint64_t))sub_1AD2282B4);
  if (v28[3])
  {
    sub_1AD2282B4();
    type metadata accessor for AppSourcesItem();
    if (swift_dynamicCast())
    {
      uint64_t v10 = v27;
      uint64_t v11 = *(void **)(v27 + 48);
      id v12 = objc_msgSend(v11, sel_source);
      id v13 = *(void **)(v10 + 40);
      id v14 = objc_msgSend(v13, sel_viewControllerFactory);
      uint64_t v15 = v14;
      if (*(unsigned __int8 *)(v10 + 32) > 1u)
      {
        if (objc_msgSend(v12, sel__isAppleWatch))
        {
          id v16 = objc_msgSend(v15, sel_createWatchStoredDataViewControllerForSource_withHealthStore_usingInsetStyling_, v12, v13, 1);
        }
        else
        {
          if (!objc_msgSend(v12, sel__hasFirstPartyBundleID))
          {
            id v24 = v13;
            id v25 = objc_msgSend(v24, sel_displayTypeController);
            id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C40]), sel_initWithHealthStore_displayTypeController_source_useInsetStyling_, v24, v25, v12, 1);

            if (!v23)
            {
              sub_1AD7408B0();
              __break(1u);
              return;
            }
            goto LABEL_14;
          }
          id v16 = objc_msgSend(v15, sel_createLocalDeviceStoredDataViewControllerForSource_withHealthStore_usingInsetStyling_, v12, v13, 1);
        }
      }
      else
      {
        id v16 = objc_msgSend(v14, sel_detailViewControllerForSourceModel_withHealthStore_, v11, v13);
      }
      id v23 = v16;
LABEL_14:
      objc_msgSend(a1, sel_showViewController_sender_, v23, 0);

      swift_release();
      return;
    }
  }
  else
  {
    sub_1AD20702C((uint64_t)v28, (unint64_t *)&qword_1EB73E880, (uint64_t (*)(uint64_t))sub_1AD2282B4);
  }
  sub_1AD73CB40();
  uint64_t v17 = sub_1AD73CB80();
  os_log_type_t v18 = sub_1AD73F930();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v27 = v20;
    *(_DWORD *)id v19 = 136446210;
    v28[0] = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v21 = sub_1AD73F220();
    v28[0] = sub_1AD1F62D4(v21, v22, &v27);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v17, v18, "[%{public}s] item is not an AppSourcesItem", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v20, -1, -1);
    MEMORY[0x1B3E68450](v19, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1AD347780()
{
  return swift_deallocObject();
}

void sub_1AD3477C0(uint64_t a1, uint64_t a2)
{
  sub_1AD345A50(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32));
}

uint64_t sub_1AD3477CC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD34780C(uint64_t *a1)
{
  return sub_1AD346C90(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1AD347814(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD34785C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD347894()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1AD3478CC()
{
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1AD347914(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AD345BE0(a1, a2, a3, a4, *(void *)(v4 + 16), *(unsigned char *)(v4 + 24), *(void *)(v4 + 32), *(void (**)(void *, void))(v4 + 40));
}

unint64_t sub_1AD347948()
{
  unint64_t result = qword_1E9A2AFB0;
  if (!qword_1E9A2AFB0)
  {
    type metadata accessor for AppSourcesCell();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9A2AFB0);
  }
  return result;
}

uint64_t sub_1AD347988(void *a1, void *a2)
{
  sub_1AD290CA4();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AD73A4B0();
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)&double v9 = MEMORY[0x1F4188790](v7).n128_u64[0];
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(a1, sel_uniqueIdentifier, v9);
  _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

  sub_1AD73A4A0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1AD347BB4((uint64_t)v6);
    uint64_t result = sub_1AD7408B0();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    uint64_t v13 = sub_1AD73A9B0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return v13;
  }
  return result;
}

uint64_t sub_1AD347BB4(uint64_t a1)
{
  sub_1AD290CA4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static SummarySharingInviteToReceiveAnalyticsEvent.eventName.getter()
{
  swift_beginAccess();
  uint64_t v0 = qword_1E9A2C7D0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static SummarySharingInviteToReceiveAnalyticsEvent.eventName.setter(uint64_t a1, void *a2)
{
  qword_1E9A2C7D0 = a1;
  off_1E9A2C7D8 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SummarySharingInviteToReceiveAnalyticsEvent.eventName.modify())()
{
  return j__swift_endAccess;
}

uint64_t SummarySharingInviteToReceiveAnalyticsEvent.__allocating_init(userDemographicsAnalytics:stepDetails:location:version:activeWatchProductType:)(uint64_t a1, __int16 *a2)
{
  uint64_t v4 = swift_allocObject();
  SummarySharingInviteToReceiveAnalyticsEvent.init(userDemographicsAnalytics:stepDetails:location:version:activeWatchProductType:)(a1, a2);
  return v4;
}

void *SummarySharingInviteToReceiveAnalyticsEvent.init(userDemographicsAnalytics:stepDetails:location:version:activeWatchProductType:)(uint64_t a1, __int16 *a2)
{
  uint64_t v3 = v2;
  char v4 = *(unsigned char *)(a1 + 24);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 25);
  __int16 v26 = *a2;
  v3[3] = 0;
  uint64_t v6 = (void **)(v3 + 3);
  v3[4] = 0;
  v3[2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28ED0]), sel_initWithBool_, v5);
  if (v5 == 1)
  {
    unint64_t v8 = (unint64_t)UserDemographicsAnalytics.ageValueForAnalytics()();
    double v9 = *v6;
    char *v6 = (void *)v8;

    if (v4)
    {
      uint64_t v10 = 0;
      goto LABEL_7;
    }
    sub_1AD73FA70();
  }
  else
  {
    sub_1AD349580(&qword_1E9A2C7E0, v7, (void (*)(uint64_t))type metadata accessor for SummarySharingInviteToReceiveAnalyticsEvent);
    uint64_t v11 = sub_1AD73BA20();
    id v12 = *v6;
    char *v6 = (void *)v11;

    sub_1AD73BA30();
  }
  uint64_t v10 = sub_1AD73F180();
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v13 = (void *)v3[4];
  v3[4] = v10;

  sub_1AD348B3C();
  v3[5] = sub_1AD740080();
  sub_1AD348B3C();
  v3[6] = sub_1AD740080();
  uint64_t v14 = sub_1AD73F180();
  swift_bridgeObjectRelease();
  v3[7] = v14;
  if (v26 == 3)
  {
    sub_1AD349580(&qword_1E9A2C7E0, v15, (void (*)(uint64_t))type metadata accessor for SummarySharingInviteToReceiveAnalyticsEvent);
    sub_1AD73BA30();
    uint64_t v16 = sub_1AD73F180();
    swift_bridgeObjectRelease();
    v3[8] = v16;
    sub_1AD73BA30();
    uint64_t v17 = sub_1AD73F180();
  }
  else
  {
    os_log_type_t v18 = (void *)sub_1AD740080();
    id v19 = objc_msgSend(v18, sel_substringToIndex_, 1);
    _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

    sub_1AD73F250();
    swift_bridgeObjectRelease();
    id v20 = objc_msgSend(v18, sel_substringFromIndex_, 1);
    _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

    sub_1AD73F300();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_1AD73F180();

    swift_bridgeObjectRelease();
    v3[8] = v21;
    unint64_t v22 = (void *)SummarySharingInviteToReceiveAnalyticsEvent.Action.rawValue.getter();
    id v23 = objc_msgSend(v22, sel_substringToIndex_, 1);
    _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

    sub_1AD73F250();
    swift_bridgeObjectRelease();
    id v24 = objc_msgSend(v22, sel_substringFromIndex_, 1);
    _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

    sub_1AD73F300();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_1AD73F180();
  }
  swift_bridgeObjectRelease();
  v3[9] = v17;
  return v3;
}

uint64_t static SummarySharingInviteToReceiveAnalyticsEvent.submitAnalytics(healthStore:location:version:stepDetails:)(void *a1, unsigned __int8 *a2, uint64_t a3, __int16 *a4)
{
  sub_1AD348EF4();
  uint64_t v25 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v23 = *a2;
  __int16 v11 = *a4;
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  uint64_t v13 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AC28];
  sub_1AD349460(0, (unint64_t *)&unk_1EB732E18, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  uint64_t v27 = sub_1AD73DB80();
  sub_1AD349078(&qword_1EB732E10, (unint64_t *)&unk_1EB732E18, v13);
  uint64_t v14 = sub_1AD73DC70();
  swift_release();
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1AD349460(0, &qword_1E9A2B8B0, (uint64_t)&type metadata for UserDemographicsAnalytics, v13);
  swift_allocObject();
  swift_retain();
  id v15 = a1;
  uint64_t v16 = sub_1AD73DB80();
  uint64_t v26 = v14;
  uint64_t v27 = v16;
  uint64_t v17 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
  sub_1AD349460(0, &qword_1E9A2AE20, v12, MEMORY[0x1E4F1AAE0]);
  sub_1AD348FFC();
  sub_1AD349078(&qword_1E9A2AE40, &qword_1E9A2AE20, v17);
  sub_1AD73DCD0();
  swift_release();
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(_WORD *)(v18 + 16) = v11;
  *(unsigned char *)(v18 + 18) = v23;
  *(void *)(v18 + 24) = v24;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1AD34950C;
  *(void *)(v19 + 24) = v18;
  sub_1AD349580(&qword_1E9A2C7F0, 255, (void (*)(uint64_t))sub_1AD348EF4);
  uint64_t v20 = v25;
  sub_1AD73DC50();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v20);
}

uint64_t sub_1AD348594(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, char a5)
{
  uint64_t v8 = sub_1AD73CBA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  __int16 v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  char v14 = *(unsigned char *)(a1 + 24);
  char v15 = *(unsigned char *)(a1 + 25);
  uint64_t v32 = *(void *)a1;
  char v33 = v12;
  uint64_t v34 = v13;
  char v35 = v14;
  char v36 = v15;
  LOWORD(v30) = a4;
  char v31 = a5;
  type metadata accessor for SummarySharingInviteToReceiveAnalyticsEvent();
  uint64_t v16 = swift_allocObject();
  swift_bridgeObjectRetain();
  SummarySharingInviteToReceiveAnalyticsEvent.init(userDemographicsAnalytics:stepDetails:location:version:activeWatchProductType:)((uint64_t)&v32, (__int16 *)&v30);
  sub_1AD73CB50();
  swift_retain_n();
  uint64_t v17 = sub_1AD73CB80();
  os_log_type_t v18 = sub_1AD73F940();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v29 = v8;
    uint64_t v21 = v20;
    uint64_t v32 = v20;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v22 = sub_1AD740E30();
    uint64_t v30 = sub_1AD1F62D4(v22, v23, &v32);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v30 = v16;
    swift_retain();
    uint64_t v24 = sub_1AD73F220();
    uint64_t v30 = sub_1AD1F62D4(v24, v25, &v32);
    sub_1AD7403B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v17, v18, "[%s] Submitting invite to receive analytics: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v21, -1, -1);
    MEMORY[0x1B3E68450](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v29);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v32 = v16;
  sub_1AD349580(&qword_1E9A2C818, v26, (void (*)(uint64_t))type metadata accessor for SummarySharingInviteToReceiveAnalyticsEvent);
  sub_1AD73B8E0();
  return swift_release();
}

id *SummarySharingInviteToReceiveAnalyticsEvent.deinit()
{
  return v0;
}

uint64_t SummarySharingInviteToReceiveAnalyticsEvent.__deallocating_deinit()
{
  SummarySharingInviteToReceiveAnalyticsEvent.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD348958()
{
  swift_beginAccess();
  uint64_t v0 = qword_1E9A2C7D0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t SummarySharingInviteToReceiveAnalyticsEvent.Step.rawValue.getter()
{
  return sub_1AD740080();
}

uint64_t static SummarySharingInviteToReceiveAnalyticsEvent.makeAnalyticsString(from:)(void *a1)
{
  id v2 = objc_msgSend(a1, sel_substringToIndex_, 1);
  _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

  sub_1AD73F250();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(a1, sel_substringFromIndex_, 1);
  _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

  sub_1AD73F300();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1AD73F180();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t type metadata accessor for SummarySharingInviteToReceiveAnalyticsEvent()
{
  return self;
}

unint64_t sub_1AD348B3C()
{
  unint64_t result = qword_1EB73C2A8;
  if (!qword_1EB73C2A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB73C2A8);
  }
  return result;
}

HealthExperienceUI::SummarySharingInviteToReceiveAnalyticsEvent::Step_optional __swiftcall SummarySharingInviteToReceiveAnalyticsEvent.Step.init(rawValue:)(NSString rawValue)
{
  id v3 = v1;
  sub_1AD348B3C();
  NSString v4 = rawValue;
  uint64_t v5 = (void *)sub_1AD740080();
  char v6 = sub_1AD740050();

  if (v6)
  {

    char v8 = 0;
  }
  else
  {
    id v9 = v4;
    uint64_t v10 = (void *)sub_1AD740080();
    char v11 = sub_1AD740050();

    if (v11)
    {

      char v8 = 1;
    }
    else
    {
      id v12 = v9;
      uint64_t v13 = (void *)sub_1AD740080();
      char v14 = sub_1AD740050();

      if (v14) {
        char v8 = 2;
      }
      else {
        char v8 = 3;
      }
    }
  }
  char *v3 = v8;
  return result;
}

uint64_t sub_1AD348C8C()
{
  return sub_1AD5FB82C();
}

uint64_t sub_1AD348C98()
{
  return sub_1AD6A51BC();
}

void sub_1AD348CA0()
{
  sub_1AD348B3C();
  id v0 = (id)sub_1AD740080();
  sub_1AD740060();
}

uint64_t sub_1AD348D58()
{
  return sub_1AD61C3E8();
}

HealthExperienceUI::SummarySharingInviteToReceiveAnalyticsEvent::Step_optional sub_1AD348D60(NSString *a1)
{
  return SummarySharingInviteToReceiveAnalyticsEvent.Step.init(rawValue:)(*a1);
}

uint64_t sub_1AD348D68@<X0>(uint64_t *a1@<X8>)
{
  sub_1AD348B3C();
  uint64_t result = sub_1AD740080();
  *a1 = result;
  return result;
}

uint64_t SummarySharingInviteToReceiveAnalyticsEvent.Action.rawValue.getter()
{
  return sub_1AD740080();
}

void sub_1AD348EF4()
{
  if (!qword_1E9A2C7E8)
  {
    sub_1AD349460(255, &qword_1E9A2B8B0, (uint64_t)&type metadata for UserDemographicsAnalytics, MEMORY[0x1E4F1AC28]);
    id v0 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
    sub_1AD349460(255, &qword_1E9A2AE20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F1AAE0]);
    sub_1AD348FFC();
    sub_1AD349078(&qword_1E9A2AE40, &qword_1E9A2AE20, v0);
    unint64_t v1 = sub_1AD73D860();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1E9A2C7E8);
    }
  }
}

unint64_t sub_1AD348FFC()
{
  unint64_t result = qword_1E9A2B8B8;
  if (!qword_1E9A2B8B8)
  {
    sub_1AD349460(255, &qword_1E9A2B8B0, (uint64_t)&type metadata for UserDemographicsAnalytics, MEMORY[0x1E4F1AC28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2B8B8);
  }
  return result;
}

uint64_t sub_1AD349078(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AD349460(255, a2, MEMORY[0x1E4FBB1A0], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

HealthExperienceUI::SummarySharingInviteToReceiveAnalyticsEvent::Action_optional __swiftcall SummarySharingInviteToReceiveAnalyticsEvent.Action.init(rawValue:)(NSString rawValue)
{
  id v3 = v1;
  sub_1AD348B3C();
  NSString v4 = rawValue;
  uint64_t v5 = (void *)sub_1AD740080();
  char v6 = sub_1AD740050();

  if (v6)
  {

    char v8 = 0;
  }
  else
  {
    id v9 = v4;
    uint64_t v10 = (void *)sub_1AD740080();
    char v11 = sub_1AD740050();

    if (v11)
    {

      char v8 = 1;
    }
    else
    {
      id v12 = v9;
      uint64_t v13 = (void *)sub_1AD740080();
      char v14 = sub_1AD740050();

      if (v14)
      {

        char v8 = 2;
      }
      else
      {
        id v15 = v12;
        uint64_t v16 = (void *)sub_1AD740080();
        char v17 = sub_1AD740050();

        if (v17)
        {

          char v8 = 3;
        }
        else
        {
          id v18 = v15;
          uint64_t v19 = (void *)sub_1AD740080();
          char v20 = sub_1AD740050();

          if (v20)
          {

            char v8 = 4;
          }
          else
          {
            id v21 = v18;
            uint64_t v22 = (void *)sub_1AD740080();
            char v23 = sub_1AD740050();

            if (v23) {
              char v8 = 5;
            }
            else {
              char v8 = 6;
            }
          }
        }
      }
    }
  }
  char *v3 = v8;
  return result;
}

uint64_t sub_1AD3492A4()
{
  sub_1AD348B3C();
  id v0 = (void *)SummarySharingInviteToReceiveAnalyticsEvent.Action.rawValue.getter();
  unint64_t v1 = (void *)SummarySharingInviteToReceiveAnalyticsEvent.Action.rawValue.getter();
  char v2 = sub_1AD740050();

  return v2 & 1;
}

uint64_t sub_1AD349324()
{
  sub_1AD740CF0();
  id v0 = (void *)SummarySharingInviteToReceiveAnalyticsEvent.Action.rawValue.getter();
  sub_1AD740060();

  return sub_1AD740D40();
}

void sub_1AD34937C()
{
  id v0 = (id)SummarySharingInviteToReceiveAnalyticsEvent.Action.rawValue.getter();
  sub_1AD740060();
}

uint64_t sub_1AD3493DC()
{
  sub_1AD740CF0();
  id v0 = (void *)SummarySharingInviteToReceiveAnalyticsEvent.Action.rawValue.getter();
  sub_1AD740060();

  return sub_1AD740D40();
}

HealthExperienceUI::SummarySharingInviteToReceiveAnalyticsEvent::Action_optional sub_1AD349430(NSString *a1)
{
  return SummarySharingInviteToReceiveAnalyticsEvent.Action.init(rawValue:)(*a1);
}

uint64_t sub_1AD349438@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SummarySharingInviteToReceiveAnalyticsEvent.Action.rawValue.getter();
  *a1 = result;
  return result;
}

void sub_1AD349460(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t, void, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AD3494C4()
{
  return swift_deallocObject();
}

uint64_t sub_1AD3494FC()
{
  return swift_deallocObject();
}

uint64_t sub_1AD34950C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD348594(a1, a2, a3, *(_WORD *)(v3 + 16), *(unsigned char *)(v3 + 18));
}

uint64_t sub_1AD34951C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD349554(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void, void))(v1 + 16))(a1, *(void *)(a1 + 32), *(void *)(a1 + 40));
}

uint64_t sub_1AD349580(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD3495C8(uint64_t a1, uint64_t a2)
{
  return sub_1AD349580(&qword_1E9A2C7F8, a2, (void (*)(uint64_t))type metadata accessor for SummarySharingInviteToReceiveAnalyticsEvent);
}

uint64_t sub_1AD349610(uint64_t a1, uint64_t a2)
{
  return sub_1AD349580(&qword_1E9A2C800, a2, (void (*)(uint64_t))type metadata accessor for SummarySharingInviteToReceiveAnalyticsEvent);
}

unint64_t sub_1AD34965C()
{
  unint64_t result = qword_1E9A2C808;
  if (!qword_1E9A2C808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C808);
  }
  return result;
}

unint64_t sub_1AD3496B4()
{
  unint64_t result = qword_1E9A2C810;
  if (!qword_1E9A2C810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C810);
  }
  return result;
}

uint64_t method lookup function for SummarySharingInviteToReceiveAnalyticsEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SummarySharingInviteToReceiveAnalyticsEvent);
}

uint64_t dispatch thunk of SummarySharingInviteToReceiveAnalyticsEvent.__allocating_init(userDemographicsAnalytics:stepDetails:location:version:activeWatchProductType:)()
{
  return (*(uint64_t (**)(void))(v0 + 336))();
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SummarySharingInviteToReceiveAnalyticsEvent.StepDetails(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 65282 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65282 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65282;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SummarySharingInviteToReceiveAnalyticsEvent.StepDetails(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AD3498A0);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarySharingInviteToReceiveAnalyticsEvent.StepDetails()
{
  return &type metadata for SummarySharingInviteToReceiveAnalyticsEvent.StepDetails;
}

unsigned char *storeEnumTagSinglePayload for SummarySharingInviteToReceiveAnalyticsEvent.Step(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AD3499A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarySharingInviteToReceiveAnalyticsEvent.Step()
{
  return &type metadata for SummarySharingInviteToReceiveAnalyticsEvent.Step;
}

uint64_t getEnumTagSinglePayload for SummarySharingInviteToReceiveAnalyticsEvent.Action(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SummarySharingInviteToReceiveAnalyticsEvent.Action(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AD349B38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarySharingInviteToReceiveAnalyticsEvent.Action()
{
  return &type metadata for SummarySharingInviteToReceiveAnalyticsEvent.Action;
}

void sub_1AD349BF4()
{
  sub_1AD1FFE38((uint64_t)&v0[OBJC_IVAR____TtC18HealthExperienceUI22ProfileSharingFlowView_profileBeingShared], (uint64_t)v24);
  uint64_t v1 = (char *)objc_allocWithZone((Class)type metadata accessor for ProfileAvatarWithNameBelow());
  uint64_t v2 = v25;
  uint64_t v3 = v26;
  uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
  MEMORY[0x1F4188790](v4);
  unsigned int v6 = (char *)&v24[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v6);
  id v8 = sub_1AD541970((uint64_t)v6, v1, v2, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  uint64_t v9 = OBJC_IVAR____TtC18HealthExperienceUI22ProfileSharingFlowView_profileBeingSharedView;
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI22ProfileSharingFlowView_profileBeingSharedView];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI22ProfileSharingFlowView_profileBeingSharedView] = v8;

  if (!*(void *)&v0[v9])
  {
    __break(1u);
    goto LABEL_7;
  }
  objc_msgSend(v0, sel_addSubview_);
  char v11 = *(void **)&v0[v9];
  if (!v11)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_1AD1EFDA4();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1AD74DE20;
  uint64_t v13 = *(void **)&v0[v9];
  if (!v13)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v14 = objc_msgSend(v13, sel_topAnchor);
  id v15 = objc_msgSend(v0, sel_topAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(void *)(v12 + 32) = v16;
  char v17 = *(void **)&v0[v9];
  if (v17)
  {
    id v18 = self;
    id v19 = objc_msgSend(v17, sel_bottomAnchor);
    id v20 = objc_msgSend(v0, sel_bottomAnchor);
    id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

    *(void *)(v12 + 40) = v21;
    v24[0] = v12;
    sub_1AD73F4D0();
    sub_1AD1EED2C();
    uint64_t v22 = (void *)sub_1AD73F490();
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_activateConstraints_, v22);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1AD349EA4()
{
  uint64_t v1 = sub_1AD73BD60();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = &v0[OBJC_IVAR____TtC18HealthExperienceUI22ProfileSharingFlowView_profileReceivingSharedProfile];
  unsigned int v6 = (char *)objc_allocWithZone((Class)type metadata accessor for ProfileAvatarWithNameBelow());
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v5, v1);
  id v7 = sub_1AD34A6F4((uint64_t)v4, v6);
  uint64_t v8 = OBJC_IVAR____TtC18HealthExperienceUI22ProfileSharingFlowView_profileReceivingSharedProfileView;
  uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI22ProfileSharingFlowView_profileReceivingSharedProfileView];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI22ProfileSharingFlowView_profileReceivingSharedProfileView] = v7;

  if (!*(void *)&v0[v8])
  {
    __break(1u);
    goto LABEL_8;
  }
  objc_msgSend(v0, sel_addSubview_);
  uint64_t v10 = *(void **)&v0[v8];
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_1AD1EFDA4();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1AD74DE20;
  uint64_t v12 = *(void **)&v0[v8];
  if (!v12)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v13 = objc_msgSend(v12, sel_topAnchor);
  id v14 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI22ProfileSharingFlowView_profileBeingSharedView];
  if (!v14)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v15 = objc_msgSend(v14, sel_topAnchor);
  id v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v15);

  *(void *)(v11 + 32) = v16;
  char v17 = *(void **)&v0[v8];
  if (v17)
  {
    id v18 = self;
    id v19 = objc_msgSend(v17, sel_bottomAnchor);
    id v20 = objc_msgSend(v0, sel_bottomAnchor);
    id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

    *(void *)(v11 + 40) = v21;
    v23[1] = v11;
    sub_1AD73F4D0();
    sub_1AD1EED2C();
    uint64_t v22 = (void *)sub_1AD73F490();
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_activateConstraints_, v22);

    return;
  }
LABEL_11:
  __break(1u);
}

void sub_1AD34A144()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  objc_msgSend(v0, sel_addSubview_, v1);
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v2 = objc_msgSend(self, sel_configurationWithTextStyle_scale_, *MEMORY[0x1E4FB2928], 2);
  uint64_t v3 = (void *)sub_1AD73F180();
  id v4 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v3, v2);

  objc_msgSend(v1, sel_setImage_, v4);
  id v5 = objc_msgSend(self, sel_blackColor);
  objc_msgSend(v1, sel_setTintColor_, v5);

  sub_1AD1EFDA4();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1AD74C720;
  id v7 = objc_msgSend(v1, sel_centerXAnchor);
  id v8 = objc_msgSend(v0, sel_centerXAnchor);
  id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(void *)(v6 + 32) = v9;
  id v10 = objc_msgSend(v1, sel_centerYAnchor);
  id v11 = objc_msgSend(v0, sel_centerYAnchor);
  id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(void *)(v6 + 40) = v12;
  id v13 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI22ProfileSharingFlowView_profileBeingSharedView];
  if (!v13)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v14 = objc_msgSend(v13, sel_trailingAnchor);
  id v15 = objc_msgSend(v1, sel_leadingAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v15, -20.0);

  *(void *)(v6 + 48) = v16;
  char v17 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI22ProfileSharingFlowView_profileReceivingSharedProfileView];
  if (!v17)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v18 = self;
  id v19 = objc_msgSend(v17, sel_leadingAnchor);
  id v20 = objc_msgSend(v1, sel_trailingAnchor);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v20, 20.0);

  *(void *)(v6 + 56) = v21;
  sub_1AD73F4D0();
  sub_1AD1EED2C();
  id v22 = (id)sub_1AD73F490();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_activateConstraints_, v22);
}

id sub_1AD34A520()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProfileSharingFlowView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1AD34A5F8()
{
  return type metadata accessor for ProfileSharingFlowView();
}

uint64_t type metadata accessor for ProfileSharingFlowView()
{
  uint64_t result = qword_1E9A2C828;
  if (!qword_1E9A2C828) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AD34A64C()
{
  uint64_t result = sub_1AD73BD60();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_1AD34A6F4(uint64_t a1, char *a2)
{
  sub_1AD34AA10();
  MEMORY[0x1F4188790](v4 - 8);
  char v33 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AD73BD60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v32 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[3] = v8;
  v37[4] = MEMORY[0x1E4F66088];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v37);
  char v31 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 32);
  v31(boxed_opaque_existential_1, a1, v6);
  *(void *)&a2[OBJC_IVAR____TtC18HealthExperienceUI26ProfileAvatarWithNameBelow_iconView] = 0;
  *(void *)&a2[OBJC_IVAR____TtC18HealthExperienceUI26ProfileAvatarWithNameBelow_nameLabel] = 0;
  *(void *)&a2[OBJC_IVAR____TtC18HealthExperienceUI26ProfileAvatarWithNameBelow_icloudAccountLabel] = 0;
  uint64_t v11 = OBJC_IVAR____TtC18HealthExperienceUI26ProfileAvatarWithNameBelow_avatar;
  *(void *)&a2[OBJC_IVAR____TtC18HealthExperienceUI26ProfileAvatarWithNameBelow_avatar] = 0;
  id v12 = (uint64_t *)&a2[OBJC_IVAR____TtC18HealthExperienceUI26ProfileAvatarWithNameBelow_icloudAccount];
  *id v12 = 0;
  v12[1] = 0;
  id v13 = a2;
  uint64_t v14 = sub_1AD73B840();
  uint64_t v34 = v13;
  id v15 = (uint64_t *)&v13[OBJC_IVAR____TtC18HealthExperienceUI26ProfileAvatarWithNameBelow_localizedFullName];
  *id v15 = v14;
  v15[1] = v16;
  uint64_t v17 = v7;
  uint64_t v18 = (uint64_t)v33;
  uint64_t v19 = sub_1AD73B850();
  id v20 = *(void **)&a2[v11];
  *(void *)&a2[v11] = v19;

  sub_1AD1FFE38((uint64_t)v37, (uint64_t)v36);
  sub_1AD34AA68();
  int v21 = swift_dynamicCast();
  id v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  if (v21)
  {
    v22(v18, 0, 1, v6);
    char v23 = v32;
    v31((uint64_t *)v32, v18, v6);
    uint64_t v24 = sub_1AD73BD40();
    uint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v6);
    *id v12 = v24;
    v12[1] = v26;
    uint64_t v27 = v34;

    swift_bridgeObjectRelease();
  }
  else
  {
    v22(v18, 1, 1, v6);
    uint64_t v27 = v34;

    sub_1AD34AAC0(v18);
  }
  uint64_t v28 = (objc_class *)type metadata accessor for ProfileAvatarWithNameBelow();
  v35.receiver = v27;
  v35.super_class = v28;
  id v29 = objc_msgSendSuper2(&v35, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1AD540D04();
  sub_1AD540FD4();
  sub_1AD541384();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return v29;
}

void sub_1AD34AA10()
{
  if (!qword_1E9A2C838)
  {
    sub_1AD73BD60();
    unint64_t v0 = sub_1AD740340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C838);
    }
  }
}

unint64_t sub_1AD34AA68()
{
  unint64_t result = qword_1EB73E840;
  if (!qword_1EB73E840)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB73E840);
  }
  return result;
}

uint64_t sub_1AD34AAC0(uint64_t a1)
{
  sub_1AD34AA10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1AD34AB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (objc_class *)type metadata accessor for ProfileSharingFlowView();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR____TtC18HealthExperienceUI22ProfileSharingFlowView_profileBeingSharedView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC18HealthExperienceUI22ProfileSharingFlowView_profileReceivingSharedProfileView] = 0;
  uint64_t v6 = (uint64_t *)&v5[OBJC_IVAR____TtC18HealthExperienceUI22ProfileSharingFlowView_profileBeingShared];
  uint64_t v7 = sub_1AD73B5F0();
  uint64_t v8 = MEMORY[0x1E4F65DF8];
  v6[3] = v7;
  void v6[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v6);
  uint64_t v10 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(boxed_opaque_existential_1, a1, v7);
  uint64_t v11 = &v5[OBJC_IVAR____TtC18HealthExperienceUI22ProfileSharingFlowView_profileReceivingSharedProfile];
  uint64_t v12 = sub_1AD73BD60();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a2, v12);
  v16.receiver = v5;
  v16.super_class = v4;
  id v14 = objc_msgSendSuper2(&v16, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1AD349BF4();
  sub_1AD349EA4();
  sub_1AD34A144();

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v7);
  return v14;
}

void sub_1AD34ACDC(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1AD34ACE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController____lazy_storage___mainStore;
  swift_beginAccess();
  sub_1AD34C124(v3, (uint64_t)&v5);
  if (v6) {
    return sub_1AD20FE90(&v5, (uint64_t)a1);
  }
  sub_1AD34C09C((uint64_t)&v5);
  UIViewController.resolvedHealthExperienceStore.getter(a1);
  sub_1AD1FFE38((uint64_t)a1, (uint64_t)&v5);
  swift_beginAccess();
  sub_1AD208BA0((uint64_t)&v5, v3, (unint64_t *)&qword_1EB738408, (unint64_t *)&qword_1EB738400);
  return swift_endAccess();
}

void *sub_1AD34ADB8()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController____lazy_storage___dataSources;
  if (*(void *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController____lazy_storage___dataSources))
  {
    uint64_t v2 = *(void **)(v0
                    + OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController____lazy_storage___dataSources);
  }
  else
  {
    uint64_t v3 = v0;
    sub_1AD34ACE8(v5);
    type metadata accessor for HealthChecklistDataSourceProvider();
    swift_allocObject();
    uint64_t v2 = sub_1AD685BD4(v5);
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t HealthChecklistViewController.analyticsSource.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController_analyticsSource);
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController_analyticsSource + 8);
  *a1 = v2;
  a1[1] = v3;
  return sub_1AD34AE64(v2, v3);
}

uint64_t sub_1AD34AE64(uint64_t a1, unint64_t a2)
{
  if (a2 >= 7) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

id HealthChecklistViewController.__allocating_init(sender:isDoneButtonVisible:)(_OWORD *a1, char a2)
{
  long long v5 = objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController____lazy_storage___mainStore];
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((void *)v6 + 4) = 0;
  *(void *)&v5[OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController____lazy_storage___dataSources] = 0;
  *(_OWORD *)&v5[OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController_analyticsSource] = *a1;
  v5[OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController_isDoneButtonVisible] = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_initWithCollectionViewLayout_, 0);
}

id HealthChecklistViewController.init(sender:isDoneButtonVisible:)(_OWORD *a1, char a2)
{
  unint64_t v3 = &v2[OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController____lazy_storage___mainStore];
  *(_OWORD *)unint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v2[OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController____lazy_storage___dataSources] = 0;
  *(_OWORD *)&v2[OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController_analyticsSource] = *a1;
  v2[OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController_isDoneButtonVisible] = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for HealthChecklistViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCollectionViewLayout_, 0);
}

uint64_t type metadata accessor for HealthChecklistViewController()
{
  return self;
}

id HealthChecklistViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void HealthChecklistViewController.init(coder:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController____lazy_storage___mainStore];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController____lazy_storage___dataSources] = 0;

  sub_1AD7408B0();
  __break(1u);
}

void sub_1AD34B100()
{
  uint64_t v1 = sub_1AD34ADB8();
  v8[3] = type metadata accessor for HealthChecklistDataSourceProvider();
  v8[4] = &off_1F043AD28;
  v8[0] = v1;
  uint64_t v2 = (uint64_t)v0 + OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController_dataSourceProvider;
  swift_beginAccess();
  sub_1AD208BA0((uint64_t)v8, v2, (unint64_t *)&qword_1EB73F5D0, &qword_1EB73F5C8);
  swift_endAccess();
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for HealthChecklistViewController();
  objc_msgSendSuper2(&v7, sel_viewDidLoad);
  sub_1AD34B944();
  id v3 = objc_msgSend(v0, sel_collectionView);
  if (v3)
  {
    uint64_t v4 = v3;
    objc_super v5 = (void *)sub_1AD73F490();
    id v6 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v4, sel_setAccessibilityIdentifier_, v6);
  }
  else
  {
    __break(1u);
  }
}

id sub_1AD34B26C(char a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for HealthChecklistViewController();
  objc_msgSendSuper2(&v6, sel_viewDidAppear_, a1 & 1);
  sub_1AD34B360();
  sub_1AD34BF10();
  id result = objc_msgSend(v1, sel_resolvedHealthStore);
  if (result)
  {
    uint64_t v4 = result;
    id v5 = objc_msgSend(self, sel_safetyDefaultsDomainWithHealthStore_, result);
    _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    sub_1AD73B550();
    swift_allocObject();
    sub_1AD73B530();
    sub_1AD73B540();

    return (id)swift_release();
  }
  return result;
}

void sub_1AD34B360()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1AD73CBA0();
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v48 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = sub_1AD34ADB8();
  uint64_t v6 = v5[9];
  uint64_t v7 = v5[10];
  swift_unknownObjectRetain();
  swift_release();
  uint64_t v8 = sub_1AD34BD5C(v6, v7);
  swift_unknownObjectRelease();
  uint64_t v9 = sub_1AD34ADB8();
  uint64_t v10 = v9[11];
  uint64_t v11 = v9[12];
  swift_unknownObjectRetain();
  swift_release();
  uint64_t v12 = sub_1AD34BD5C(v10, v11);
  swift_unknownObjectRelease();
  uint64_t v13 = sub_1AD34ADB8();
  uint64_t v14 = v13[13];
  uint64_t v15 = v13[14];
  swift_unknownObjectRetain();
  swift_release();
  sub_1AD34BD5C(v14, v15);
  swift_unknownObjectRelease();
  objc_super v16 = sub_1AD34ADB8();
  uint64_t v17 = v16[15];
  uint64_t v18 = v16[16];
  swift_unknownObjectRetain();
  swift_release();
  sub_1AD34BD5C(v17, v18);
  swift_unknownObjectRelease();
  unint64_t v19 = *(void *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController_analyticsSource + 8);
  v49[0] = *(void *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController_analyticsSource);
  v49[1] = v19;
  sub_1AD34AE64(v49[0], v19);
  sub_1AD6F4E28(v49, v8, v12, &v51);
  id v20 = (void *)v51;
  int v21 = v52;
  id v22 = v53;
  char v23 = v54;
  uint64_t v25 = v55;
  uint64_t v24 = v56;
  sub_1AD73CB50();
  uint64_t v26 = sub_1AD73CB80();
  os_log_type_t v27 = sub_1AD73F940();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v46 = v20;
    uint64_t v29 = v28;
    uint64_t v30 = swift_slowAlloc();
    id v45 = v21;
    uint64_t v31 = v30;
    uint64_t v50 = v30;
    uint64_t v51 = ObjectType;
    *(_DWORD *)uint64_t v29 = 136446466;
    uint64_t v44 = v22;
    swift_getMetatypeMetadata();
    uint64_t v43 = v23;
    uint64_t v32 = sub_1AD73F220();
    uint64_t v51 = sub_1AD1F62D4(v32, v33, &v50);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    swift_beginAccess();
    uint64_t v42 = v4;
    uint64_t v34 = v24;
    objc_super v35 = v25;
    uint64_t v37 = qword_1E9A341B0;
    char v36 = off_1E9A341B8;
    swift_bridgeObjectRetain();
    uint64_t v38 = v37;
    uint64_t v25 = v35;
    uint64_t v24 = v34;
    uint64_t v51 = sub_1AD1F62D4(v38, (unint64_t)v36, &v50);
    char v23 = v43;
    sub_1AD7403B0();
    id v22 = v44;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v26, v27, "[%{public}s]: Submitting Health Checklist analytics: %s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    uint64_t v39 = v31;
    int v21 = v45;
    MEMORY[0x1B3E68450](v39, -1, -1);
    uint64_t v40 = v29;
    id v20 = v46;
    MEMORY[0x1B3E68450](v40, -1, -1);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v48);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v47 + 8))(v4, v48);
  }
  uint64_t v51 = (uint64_t)v20;
  uint64_t v52 = v21;
  uint64_t v53 = v22;
  id v54 = v23;
  id v55 = v25;
  uint64_t v56 = v24;
  sub_1AD34C1A0();
  sub_1AD73B8E0();
}

uint64_t static HealthChecklistViewController.markHealthChecklistAsViewed(with:)(uint64_t a1)
{
  id v1 = objc_msgSend(self, sel_safetyDefaultsDomainWithHealthStore_, a1);
  _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  sub_1AD73B550();
  swift_allocObject();
  sub_1AD73B530();
  sub_1AD73B540();
  return swift_release();
}

void sub_1AD34B844()
{
  id v1 = v0;
  sub_1AD218C30();
  id v2 = objc_msgSend(v0, sel_collectionView);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = v2;
  uint64_t v4 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  sub_1AD406F14(v4, v5);

  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v1, sel_collectionView);
  if (!v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = v6;
  uint64_t v8 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  sub_1AD406F7C(v8, v9);

  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v1, sel_collectionView);
  if (!v10)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v11 = v10;
  sub_1AD273E0C();
}

void sub_1AD34B944()
{
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v2 = v1;
  id v3 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  id v4 = objc_msgSend(v0, sel_collectionView);
  if (!v4)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v5 = v4;
  objc_msgSend(v4, sel_setPreservesSuperviewLayoutMargins_, 1);

  id v6 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v6, sel_setLargeTitleDisplayMode_, 2);

  if (*((unsigned char *)v0 + OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController_isDoneButtonVisible) == 1)
  {
    id v7 = objc_msgSend(v0, sel_navigationItem);
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_dismissProfile_);
    objc_msgSend(v7, sel_setRightBarButtonItem_, v8);
  }
}

void HealthChecklistViewController.__allocating_init(dataSource:)()
{
}

void HealthChecklistViewController.init(dataSource:)()
{
}

id HealthChecklistViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void HealthChecklistViewController.init(collectionViewLayout:)()
{
}

uint64_t sub_1AD34BC74()
{
  sub_1AD34C09C(v0 + OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController____lazy_storage___mainStore);
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController_analyticsSource);
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI29HealthChecklistViewController_analyticsSource + 8);
  return sub_1AD34C110(v1, v2);
}

id HealthChecklistViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthChecklistViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1AD34BD5C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  if (SnapshotDataSource.isEmpty.getter(ObjectType, a2)) {
    return 0;
  }
  uint64_t v5 = SnapshotDataSource.contentsAsArray()(ObjectType, a2);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    id v7 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v8 = 48;
    do
    {
      uint64_t v9 = *(void *)(v5 + v8);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v7 = sub_1AD51C974(0, v7[2] + 1, 1, v7);
      }
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1) {
        id v7 = sub_1AD51C974((void *)(v10 > 1), v11 + 1, 1, v7);
      }
      v7[2] = v11 + 1;
      v7[v11 + 4] = v9;
      v8 += 48;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v7[2];
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    uint64_t v14 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v15 = v7[v13++ + 4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1AD1FE044(v15);
      swift_bridgeObjectRelease();
    }
    while (v12 != v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v14 + 16);
  swift_bridgeObjectRelease();
  return v4;
}

void sub_1AD34BF10()
{
  id v0 = objc_msgSend((id)BiomeLibrary(), sel_Discoverability);
  swift_unknownObjectRelease();
  id v1 = objc_msgSend(v0, sel_Signals);
  swift_unknownObjectRelease();
  id v2 = objc_msgSend(v1, sel_source);
  id v3 = objc_allocWithZone(MEMORY[0x1E4F4FE08]);
  uint64_t v4 = (void *)sub_1AD73F180();
  id v5 = objc_msgSend(v3, sel_initWithContentIdentifier_context_osBuild_userInfo_, v4, 0, 0, 0);

  objc_msgSend(v2, sel_sendEvent_, v5);
}

uint64_t method lookup function for HealthChecklistViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthChecklistViewController);
}

uint64_t dispatch thunk of HealthChecklistViewController.providedPresentation.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of HealthChecklistViewController.__allocating_init(sender:isDoneButtonVisible:)()
{
  return (*(uint64_t (**)(void))(v0 + 360))();
}

uint64_t sub_1AD34C09C(uint64_t a1)
{
  sub_1AD1DE498(0, (unint64_t *)&qword_1EB738408, (unint64_t *)&qword_1EB738400);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD34C110(uint64_t a1, unint64_t a2)
{
  if (a2 >= 7) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AD34C124(uint64_t a1, uint64_t a2)
{
  sub_1AD1DE498(0, (unint64_t *)&qword_1EB738408, (unint64_t *)&qword_1EB738400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AD34C1A0()
{
  unint64_t result = qword_1E9A2C860;
  if (!qword_1E9A2C860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C860);
  }
  return result;
}

Swift::Bool __swiftcall PluginNotificationCenterDelegateProviding.providesCriticalAlerts()()
{
  return 0;
}

uint64_t dispatch thunk of PluginNotificationCenterDelegateProviding.notificationCenterDelegate(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PluginNotificationCenterDelegateProviding.providesCriticalAlerts()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1AD34C224(uint64_t a1, void *a2)
{
  sub_1AD1EF2DC(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_item;
  swift_beginAccess();
  sub_1AD205C2C((uint64_t)v5, v3);
  swift_endAccess();
  sub_1AD34D870();
  return sub_1AD206D18((uint64_t)v5, (unint64_t *)&qword_1EB73E880, (unint64_t *)&qword_1EB73E870);
}

uint64_t sub_1AD34C2B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_item;
  swift_beginAccess();
  return sub_1AD1EF2DC(v3, a1);
}

uint64_t sub_1AD34C304(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_item;
  swift_beginAccess();
  sub_1AD205C2C(a1, v3);
  swift_endAccess();
  sub_1AD34D870();
  return sub_1AD206D18(a1, (unint64_t *)&qword_1EB73E880, (unint64_t *)&qword_1EB73E870);
}

void (*sub_1AD34C38C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1AD34C3EC;
}

void sub_1AD34C3EC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1AD34D870();
  }
}

void sub_1AD34C420(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_avatarImageView);
  swift_beginAccess();
  uint64_t v4 = *v3;
  void *v3 = v2;
  id v5 = v2;
}

id sub_1AD34C484()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_avatarImageView);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void sub_1AD34C4DC(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_avatarImageView);
  swift_beginAccess();
  uint64_t v4 = *v3;
  void *v3 = a1;
}

uint64_t (*sub_1AD34C530())()
{
  return j__swift_endAccess;
}

double static SummaryHeaderProfileCell.avatarHeightWidth.getter()
{
  return 116.0;
}

id sub_1AD34C598()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell____lazy_storage___containerView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell____lazy_storage___containerView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell____lazy_storage___containerView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1AD34C620()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell____lazy_storage___profileNameView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell____lazy_storage___profileNameView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell____lazy_storage___profileNameView);
  }
  else
  {
    type metadata accessor for SummaryHeaderProfileNameView();
    id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1AD34C6AC()
{
  return sub_1AD34C96C(&OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell____lazy_storage___defaultConstraints, (uint64_t (*)(uint64_t))sub_1AD34C6CC);
}

uint64_t sub_1AD34C6CC(void *a1)
{
  sub_1AD1C88C0(0, (unint64_t *)&qword_1EB741320);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1AD74C720;
  id v3 = sub_1AD34C598();
  id v4 = objc_msgSend(v3, sel_leadingAnchor);

  id v5 = objc_msgSend(a1, sel_contentView);
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
  *(void *)(v2 + 32) = v7;
  id v8 = sub_1AD34C598();
  id v9 = objc_msgSend(v8, sel_topAnchor);

  id v10 = objc_msgSend(a1, sel_contentView);
  id v11 = objc_msgSend(v10, sel_topAnchor);

  id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v11);
  *(void *)(v2 + 40) = v12;
  id v13 = objc_msgSend(a1, sel_contentView);
  id v14 = objc_msgSend(v13, sel_bottomAnchor);

  id v15 = sub_1AD34C598();
  id v16 = objc_msgSend(v15, sel_bottomAnchor);

  id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
  *(void *)(v2 + 48) = v17;
  id v18 = objc_msgSend(a1, sel_contentView);
  id v19 = objc_msgSend(v18, sel_trailingAnchor);

  id v20 = sub_1AD34C598();
  id v21 = objc_msgSend(v20, sel_trailingAnchor);

  id v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v21);
  *(void *)(v2 + 56) = v22;
  sub_1AD73F4D0();
  return v2;
}

uint64_t sub_1AD34C94C()
{
  return sub_1AD34C96C(&OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell____lazy_storage___axConstraints, (uint64_t (*)(uint64_t))sub_1AD34C9D4);
}

uint64_t sub_1AD34C96C(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(v2 + *a1);
  if (v4)
  {
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = a2(v2);
    *(void *)(v2 + v3) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1AD34C9D4(void *a1)
{
  sub_1AD1C88C0(0, (unint64_t *)&qword_1EB741320);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1AD74C710;
  id v3 = sub_1AD34C598();
  id v4 = objc_msgSend(v3, sel_leadingAnchor);

  id v5 = objc_msgSend(a1, sel_contentView);
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  id v7 = objc_msgSend(v4, sel_constraintGreaterThanOrEqualToAnchor_, v6);
  *(void *)(v2 + 32) = v7;
  id v8 = sub_1AD34C598();
  id v9 = objc_msgSend(v8, sel_topAnchor);

  id v10 = objc_msgSend(a1, sel_contentView);
  id v11 = objc_msgSend(v10, sel_topAnchor);

  id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v11);
  *(void *)(v2 + 40) = v12;
  id v13 = sub_1AD34C598();
  id v14 = objc_msgSend(v13, sel_bottomAnchor);

  id v15 = objc_msgSend(a1, sel_contentView);
  id v16 = objc_msgSend(v15, sel_bottomAnchor);

  id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
  *(void *)(v2 + 48) = v17;
  id v18 = objc_msgSend(a1, sel_contentView);
  id v19 = objc_msgSend(v18, sel_trailingAnchor);

  id v20 = sub_1AD34C598();
  id v21 = objc_msgSend(v20, sel_trailingAnchor);

  id v22 = objc_msgSend(v19, sel_constraintGreaterThanOrEqualToAnchor_, v21);
  *(void *)(v2 + 56) = v22;
  id v23 = sub_1AD34C598();
  id v24 = objc_msgSend(v23, sel_centerXAnchor);

  id v25 = objc_msgSend(a1, sel_contentView);
  id v26 = objc_msgSend(v25, sel_centerXAnchor);

  id v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v26);
  *(void *)(v2 + 64) = v27;
  sub_1AD73F4D0();
  return v2;
}

id SummaryHeaderProfileCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id SummaryHeaderProfileCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  swift_getObjectType();
  id v9 = &v4[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_item];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell____lazy_storage___containerView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell____lazy_storage___profileNameView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell____lazy_storage___defaultConstraints] = 0;
  *(void *)&v4[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell____lazy_storage___axConstraints] = 0;
  id v10 = v4;
  *(void *)&v10[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_avatarImageView] = sub_1AD3BC8AC();

  v13.receiver = v10;
  v13.super_class = (Class)type metadata accessor for SummaryHeaderProfileCell();
  id v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1AD34CFBC();

  return v11;
}

id SummaryHeaderProfileCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id SummaryHeaderProfileCell.init(coder:)(void *a1)
{
  swift_getObjectType();
  id v3 = &v1[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_item];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell____lazy_storage___containerView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell____lazy_storage___profileNameView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell____lazy_storage___defaultConstraints] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell____lazy_storage___axConstraints] = 0;
  id v4 = v1;
  *(void *)&v4[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_avatarImageView] = sub_1AD3BC8AC();

  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for SummaryHeaderProfileCell();
  id v5 = objc_msgSendSuper2(&v9, sel_initWithCoder_, a1);
  id v6 = v5;
  if (v5)
  {
    id v7 = v5;
    sub_1AD34CFBC();
  }
  return v6;
}

uint64_t sub_1AD34CFBC()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_contentView);
  id v3 = sub_1AD34C598();
  objc_msgSend(v2, sel_addSubview_, v3);

  id v4 = sub_1AD34C598();
  id v5 = (id *)&v1[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_avatarImageView];
  swift_beginAccess();
  objc_msgSend(v4, sel_addSubview_, *v5);

  id v6 = sub_1AD34C598();
  id v7 = sub_1AD34C620();
  objc_msgSend(v6, sel_addSubview_, v7);

  id v8 = sub_1AD34C620();
  id v9 = objc_msgSend(v8, sel_centerYAnchor);

  id v10 = objc_msgSend(*v5, sel_centerYAnchor);
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  LODWORD(v12) = 1132068864;
  objc_msgSend(v11, sel_setPriority_, v12);
  id v55 = self;
  sub_1AD1C88C0(0, (unint64_t *)&qword_1EB741320);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1AD753470;
  id v14 = objc_msgSend(*v5, sel_topAnchor);
  id v15 = sub_1AD34C598();
  id v16 = objc_msgSend(v15, sel_topAnchor);

  id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v16, 10.0);
  *(void *)(v13 + 32) = v17;
  id v18 = objc_msgSend(*v5, sel_leadingAnchor);
  id v19 = sub_1AD34C598();
  id v20 = objc_msgSend(v19, (SEL)&selRef_beginUpdates + 2);

  id v21 = objc_msgSend(v18, (SEL)&selRef_categorySampleWithType_value_startDate_endDate_metadata_ + 6, v20);
  *(void *)(v13 + 40) = v21;
  id v22 = objc_msgSend(*v5, sel_widthAnchor);
  id v23 = objc_msgSend(v22, sel_constraintEqualToConstant_, 116.0);

  *(void *)(v13 + 48) = v23;
  id v24 = objc_msgSend(*v5, sel_heightAnchor);
  id v25 = objc_msgSend(v24, sel_constraintEqualToConstant_, 116.0);

  *(void *)(v13 + 56) = v25;
  id v26 = sub_1AD34C598();
  id v27 = objc_msgSend(v26, sel_bottomAnchor);

  id v28 = objc_msgSend(*v5, sel_bottomAnchor);
  id v29 = objc_msgSend(v27, sel_constraintGreaterThanOrEqualToAnchor_, v28);

  *(void *)(v13 + 64) = v29;
  *(void *)(v13 + 72) = v11;
  id v30 = v11;
  id v31 = sub_1AD34C620();
  id v32 = objc_msgSend(v31, sel_topAnchor);

  id v33 = sub_1AD34C598();
  id v34 = objc_msgSend(v33, sel_topAnchor);

  id v35 = objc_msgSend(v32, sel_constraintGreaterThanOrEqualToAnchor_, v34);
  *(void *)(v13 + 80) = v35;
  id v36 = sub_1AD34C620();
  id v37 = objc_msgSend(v36, sel_leadingAnchor);

  id v38 = objc_msgSend(*v5, sel_trailingAnchor);
  id v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v38, 15.0);

  *(void *)(v13 + 88) = v39;
  id v40 = sub_1AD34C598();
  id v41 = objc_msgSend(v40, sel_trailingAnchor);

  id v42 = sub_1AD34C620();
  id v43 = objc_msgSend(v42, sel_trailingAnchor);

  id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v43);
  *(void *)(v13 + 96) = v44;
  id v45 = sub_1AD34C598();
  id v46 = objc_msgSend(v45, sel_bottomAnchor);

  id v47 = sub_1AD34C620();
  id v48 = objc_msgSend(v47, sel_bottomAnchor);

  id v49 = objc_msgSend(v46, sel_constraintGreaterThanOrEqualToAnchor_, v48);
  *(void *)(v13 + 104) = v49;
  sub_1AD73F4D0();
  sub_1AD1EED2C();
  uint64_t v50 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  objc_msgSend(v55, sel_activateConstraints_, v50);

  sub_1AD34D698();
  sub_1AD1EEB90();
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_1AD74C370;
  uint64_t v52 = sub_1AD73D540();
  uint64_t v53 = MEMORY[0x1E4FB1138];
  *(void *)(v51 + 32) = v52;
  *(void *)(v51 + 40) = v53;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1AD267CB8();
  sub_1AD73FFD0();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1AD34D618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1B3E68580](v3);
  if (v4)
  {
    id v5 = (void *)v4;
    swift_getObjectType();
    if ((sub_1AD73FD40() & 1) == 0) {
      sub_1AD34D698();
    }
  }
}

void sub_1AD34D698()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_traitCollection);
  id v11 = objc_msgSend(v2, sel_preferredContentSizeCategory);

  id v3 = objc_msgSend(self, sel_accessibilitySizeThresholdForAdjustedLayout);
  char v4 = sub_1AD73FE60();

  id v5 = objc_msgSend(v1, sel_traitCollection);
  uint64_t v6 = sub_1AD73FCB0();

  id v7 = self;
  if ((v4 & 1) != 0 || (unint64_t)(v6 - 1) <= 1)
  {
    sub_1AD34C6AC();
    sub_1AD1EED2C();
    id v9 = (void *)sub_1AD73F490();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_deactivateConstraints_, v9);

    sub_1AD34C94C();
  }
  else
  {
    sub_1AD34C94C();
    sub_1AD1EED2C();
    id v8 = (void *)sub_1AD73F490();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_deactivateConstraints_, v8);

    sub_1AD34C6AC();
  }
  id v10 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_activateConstraints_, v10);
}

void sub_1AD34D870()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t)&v0[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_item];
  swift_beginAccess();
  sub_1AD1EF2DC(v2, (uint64_t)v20);
  if (!v21)
  {
    sub_1AD206D18((uint64_t)v20, (unint64_t *)&qword_1EB73E880, (unint64_t *)&qword_1EB73E870);
    long long v22 = 0u;
    long long v23 = 0u;
    uint64_t v24 = 0;
    goto LABEL_8;
  }
  sub_1AD2196B8(0, (unint64_t *)&qword_1EB73E870);
  sub_1AD2196B8(0, (unint64_t *)&qword_1EB73E840);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v24 = 0;
    long long v22 = 0u;
    long long v23 = 0u;
    goto LABEL_8;
  }
  if (!*((void *)&v23 + 1))
  {
LABEL_8:
    sub_1AD206D18((uint64_t)&v22, (unint64_t *)&qword_1EB73E850, (unint64_t *)&qword_1EB73E840);
    id v19 = (id *)&v1[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_avatarImageView];
    swift_beginAccess();
    objc_msgSend(*v19, sel_setImage_, 0);
    return;
  }
  sub_1AD20FE90(&v22, (uint64_t)v25);
  id v3 = (id *)&v1[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_avatarImageView];
  swift_beginAccess();
  char v4 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)*v3) + 0x80);
  id v5 = *v3;
  v4();

  sub_1AD4FCB94();
  id v6 = sub_1AD34C620();
  sub_1AD6FF0F0((uint64_t)v25);

  sub_1AD34D698();
  id v7 = (void *)sub_1AD73F490();
  id v8 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v8)
  {
    uint64_t v9 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    uint64_t v11 = v10;

    swift_bridgeObjectRetain();
    double v12 = (void *)sub_1AD73F180();
    objc_msgSend(v1, sel_setAccessibilityIdentifier_, v12);

    id v13 = sub_1AD34C620();
    swift_bridgeObjectRetain();
    sub_1AD3CB244(v9, v11);

    swift_bridgeObjectRelease();
    id v14 = *v3;
    sub_1AD1C88C0(0, (unint64_t *)&qword_1EB741480);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1AD7511A0;
    *(void *)(v15 + 32) = v9;
    *(void *)(v15 + 40) = v11;
    *(void *)(v15 + 48) = 0x726174617641;
    *(void *)(v15 + 56) = 0xE600000000000000;
    *(void *)(v15 + 64) = 0x6567616D49;
    *(void *)(v15 + 72) = 0xE500000000000000;
    id v16 = v14;
    id v17 = (void *)sub_1AD73F490();
    swift_bridgeObjectRelease();
    id v18 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v16, sel_setAccessibilityIdentifier_, v18);
    swift_bridgeObjectRelease();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  else
  {
    __break(1u);
  }
}

void sub_1AD34DBC8(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  if (a2)
  {
    swift_bridgeObjectRetain();
    id v6 = (void *)sub_1AD73F180();
    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v6);

    id v7 = sub_1AD34C620();
    swift_bridgeObjectRetain();
    sub_1AD3CB244(a1, a2);

    swift_bridgeObjectRelease();
    id v8 = (void **)&v3[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_avatarImageView];
    swift_beginAccess();
    uint64_t v9 = *v8;
    sub_1AD1C88C0(0, (unint64_t *)&qword_1EB741480);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1AD7511A0;
    *(void *)(v10 + 32) = a1;
    *(void *)(v10 + 40) = a2;
    *(void *)(v10 + 48) = 0x726174617641;
    *(void *)(v10 + 56) = 0xE600000000000000;
    *(void *)(v10 + 64) = 0x6567616D49;
    *(void *)(v10 + 72) = 0xE500000000000000;
    id v11 = v9;
    double v12 = (void *)sub_1AD73F490();
    swift_bridgeObjectRelease();
    id v13 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v11, sel_setAccessibilityIdentifier_, v13);
  }
  else
  {
    objc_msgSend(v2, sel_setAccessibilityIdentifier_, 0);
    id v14 = (char *)sub_1AD34C620();
    objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC18HealthExperienceUI15ProfileNameView_nameLabel], sel_setAccessibilityIdentifier_, 0);
    objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC18HealthExperienceUI15ProfileNameView_subtitleView], sel_setAccessibilityIdentifier_, 0);

    uint64_t v15 = (id *)&v3[OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_avatarImageView];
    swift_beginAccess();
    objc_msgSend(*v15, sel_setAccessibilityIdentifier_, 0);
  }
}

id SummaryHeaderProfileCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SummaryHeaderProfileCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1AD34DEA8(uint64_t a1, uint64_t a2)
{
}

uint64_t type metadata accessor for SummaryHeaderProfileCell()
{
  return self;
}

uint64_t sub_1AD34DEF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_item;
  swift_beginAccess();
  return sub_1AD1EF2DC(v3, a2);
}

id sub_1AD34DF4C@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____TtC18HealthExperienceUI24SummaryHeaderProfileCell_avatarImageView);
  swift_beginAccess();
  char v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for SummaryHeaderProfileCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SummaryHeaderProfileCell);
}

uint64_t dispatch thunk of SummaryHeaderProfileCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SummaryHeaderProfileCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SummaryHeaderProfileCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of SummaryHeaderProfileCell.avatarImageView.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of SummaryHeaderProfileCell.avatarImageView.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of SummaryHeaderProfileCell.avatarImageView.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of SummaryHeaderProfileCell.updateConstraintsForAccessibilitySize()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of SummaryHeaderProfileCell.updateAutomationIdentifiers(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t sub_1AD34E17C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1AD34E1B4(uint64_t a1, uint64_t a2)
{
  sub_1AD34D618(a1, a2, v2);
}

ValueMetadata *type metadata accessor for InternalSettingsRegionAvailability()
{
  return &type metadata for InternalSettingsRegionAvailability;
}

uint64_t sub_1AD34E1CC()
{
  uint64_t v0 = sub_1AD73FCC0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AD73FCD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73FCE0();
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == *MEMORY[0x1E4F66900])
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v7, v0);
    int v9 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
    if (v9 == *MEMORY[0x1E4F668F0])
    {
      (*(void (**)(char *, uint64_t))(v1 + 96))(v3, v0);
      return *(void *)v3;
    }
    if (v9 == *MEMORY[0x1E4F668F8]) {
      return 0;
    }
    if (v9 == *MEMORY[0x1E4F668E8]) {
      return 1;
    }
    if (v9 == *MEMORY[0x1E4F668E0]) {
      return 2;
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else if (v8 != *MEMORY[0x1E4F66908])
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return 0;
}

ValueMetadata *type metadata accessor for InternalSettingsAllowedCountries()
{
  return &type metadata for InternalSettingsAllowedCountries;
}

uint64_t sub_1AD34E47C(uint64_t a1, id a2)
{
  id v3 = objc_msgSend(a2, sel_allCountryCodes);
  uint64_t v4 = sub_1AD73F4B0();

  uint64_t v7 = v4;
  swift_bridgeObjectRetain();
  sub_1AD34E870(&v7);
  swift_bridgeObjectRelease();
  if (a1)
  {
    uint64_t v5 = sub_1AD34F3A8(0, *(void *)(v7 + 16), a1, v7, a1);
    swift_release();
    return v5;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

id sub_1AD34E548(void *a1)
{
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    id v3 = result;
    unsigned int v4 = objc_msgSend(result, sel_isAppleWatch);

    if (v4) {
      uint64_t v5 = 5;
    }
    else {
      uint64_t v5 = 9;
    }
    uint64_t v6 = sub_1AD34E47C(v5, a1);
    int64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      uint64_t v17 = MEMORY[0x1E4FBC860];
      sub_1AD20DD60(0, v7, 0);
      uint64_t v8 = v17;
      sub_1AD34F900(0, (unint64_t *)&qword_1EB73F760, MEMORY[0x1E4FBB320]);
      sub_1AD34E8DC();
      uint64_t v9 = 0;
      do
      {
        uint64_t v10 = v6;
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_1AD73F100();
        uint64_t v13 = v12;
        swift_bridgeObjectRelease();
        unint64_t v15 = *(void *)(v17 + 16);
        unint64_t v14 = *(void *)(v17 + 24);
        if (v15 >= v14 >> 1) {
          sub_1AD20DD60(v14 > 1, v15 + 1, 1);
        }
        ++v9;
        *(void *)(v17 + 16) = v15 + 1;
        uint64_t v16 = v17 + 16 * v15;
        *(void *)(v16 + 32) = v11;
        *(void *)(v16 + 40) = v13;
        uint64_t v6 = v10;
      }
      while (v7 != v9);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return (id)MEMORY[0x1E4FBC860];
    }
    return (id)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD34E700(void *a1)
{
  strcpy((char *)v4, "Provenance: ");
  objc_msgSend(a1, sel_provenance);
  id v2 = (id)NSStringFromHKCountrySetProvenance();
  _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

  sub_1AD73F300();
  swift_bridgeObjectRelease();
  sub_1AD73F300();
  sub_1AD34E7CC(a1);
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  return v4[0];
}

unint64_t sub_1AD34E7CC(void *a1)
{
  return 0xD000000000000011;
}

uint64_t sub_1AD34E870(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1AD6E1AC8(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1AD34E950(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_1AD34E8DC()
{
  unint64_t result = qword_1EB73F770;
  if (!qword_1EB73F770)
  {
    sub_1AD34F900(255, (unint64_t *)&qword_1EB73F760, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB73F770);
  }
  return result;
}

uint64_t sub_1AD34E950(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1AD740B30();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1AD34F03C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  double v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      unint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          double v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1AD34F10C((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v97 = sub_1AD6E1A78((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          double v100 = &v97[16 * v96 + 32];
          *(void *)double v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          unint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1AD73F540();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    unint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1AD740BC0();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      long long v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1AD740BC0()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1AD6E135C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_1AD6E135C((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    id v42 = v11 + 32;
    id v43 = &v11[16 * v41 + 32];
    *(void *)id v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          id v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        double v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1AD34F10C((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)double v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        id v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      id v33 = (void *)(v10 + 16 * v9);
      do
      {
        id v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        id v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1AD740BC0() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)id v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1AD7408A0();
  __break(1u);
  return result;
}

uint64_t sub_1AD34F03C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_1AD740BC0(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD34F10C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        id v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_1AD740BC0() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)id v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)id v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    unint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_1AD740BC0() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_1AD6E149C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1AD740940();
  __break(1u);
  return result;
}

uint64_t sub_1AD34F3A8(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a3;
  int64_t v7 = a1;
  int64_t v8 = 0;
  int64_t v9 = a1;
  while (1)
  {
    BOOL v10 = v9 <= a2;
    if (a3 > 0) {
      BOOL v10 = v9 >= a2;
    }
    if (v10) {
      break;
    }
    BOOL v11 = __OFADD__(v9, a3);
    v9 += a3;
    if (v11) {
      int64_t v9 = (v9 >> 63) ^ 0x8000000000000000;
    }
    BOOL v11 = __OFADD__(v8++, 1);
    if (v11)
    {
      __break(1u);
      break;
    }
  }
  uint64_t v46 = MEMORY[0x1E4FBC860];
  sub_1AD2F5830(0, v8, 0);
  uint64_t result = v46;
  if (v8)
  {
    uint64_t v41 = *(void *)(a4 + 16);
    uint64_t v40 = a4 + 32;
    int64_t v13 = a2;
    while (1)
    {
      BOOL v14 = v7 <= v13;
      if (v6 > 0) {
        BOOL v14 = v7 >= v13;
      }
      if (v14) {
        break;
      }
      if (__OFADD__(v7, v6)) {
        int64_t v15 = ((v7 + v6) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v15 = v7 + v6;
      }
      if (__OFADD__(v7, a5)) {
        goto LABEL_77;
      }
      if (v7 + a5 >= v41) {
        uint64_t v16 = v41;
      }
      else {
        uint64_t v16 = v7 + a5;
      }
      uint64_t v17 = v16 - v7;
      if (v16 < v7) {
        goto LABEL_78;
      }
      if (v7 < 0) {
        goto LABEL_79;
      }
      uint64_t v44 = result;
      uint64_t v18 = v6;
      sub_1AD740BF0();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v19 = swift_dynamicCastClass();
      if (!v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = MEMORY[0x1E4FBC860];
      }
      uint64_t v20 = *(void *)(v19 + 16);
      swift_release();
      if (v20 == v17)
      {
        uint64_t v21 = (void *)swift_dynamicCastClass();
        uint64_t v6 = v18;
        int64_t v13 = a2;
        if (!v21)
        {
          swift_bridgeObjectRelease();
          uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v6 = v18;
        int64_t v13 = a2;
        if (v16 != v7)
        {
          if (v17 < 1)
          {
            if (v17 < 0) {
              goto LABEL_83;
            }
          }
          else
          {
            sub_1AD34F900(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBBE00]);
            uint64_t v21 = (void *)swift_allocObject();
            int64_t v24 = _swift_stdlib_malloc_size(v21);
            uint64_t v25 = v24 - 32;
            if (v24 < 32) {
              uint64_t v25 = v24 - 17;
            }
            v21[2] = v17;
            v21[3] = 2 * (v25 >> 4);
          }
          if (v40 + 16 * v7 < (unint64_t)&v21[2 * v17 + 4] && (unint64_t)(v21 + 4) < v40 + 16 * v16) {
            goto LABEL_83;
          }
          swift_arrayInitWithCopy();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = v44;
      unint64_t v23 = *(void *)(v44 + 16);
      unint64_t v22 = *(void *)(v44 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1AD2F5830(v22 > 1, v23 + 1, 1);
        int64_t v13 = a2;
        uint64_t result = v44;
      }
      *(void *)(result + 16) = v23 + 1;
      *(void *)(result + 8 * v23 + 32) = v21;
      int64_t v7 = v15;
      if (!--v8) {
        goto LABEL_43;
      }
    }
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
  }
  else
  {
    int64_t v15 = v7;
    int64_t v13 = a2;
LABEL_43:
    BOOL v26 = v15 <= v13;
    if (v6 > 0) {
      BOOL v26 = v15 >= v13;
    }
    if (v26) {
      return result;
    }
    uint64_t v45 = a4 + 32;
    while (1)
    {
      int64_t v27 = __OFADD__(v15, v6) ? ((v15 + v6) >> 63) ^ 0x8000000000000000 : v15 + v6;
      if (__OFADD__(v15, a5)) {
        break;
      }
      if (v15 + a5 >= *(void *)(a4 + 16)) {
        uint64_t v28 = *(void *)(a4 + 16);
      }
      else {
        uint64_t v28 = v15 + a5;
      }
      uint64_t v29 = v28 - v15;
      if (v28 < v15) {
        goto LABEL_81;
      }
      if (v15 < 0) {
        goto LABEL_82;
      }
      uint64_t v30 = result;
      sub_1AD740BF0();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v31 = swift_dynamicCastClass();
      if (!v31)
      {
        swift_bridgeObjectRelease();
        uint64_t v31 = MEMORY[0x1E4FBC860];
      }
      uint64_t v32 = *(void *)(v31 + 16);
      swift_release();
      if (v32 == v29)
      {
        id v33 = (void *)swift_dynamicCastClass();
        if (!v33)
        {
          swift_bridgeObjectRelease();
          id v33 = (void *)MEMORY[0x1E4FBC860];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        id v33 = (void *)MEMORY[0x1E4FBC860];
        if (v28 != v15)
        {
          if (v29 < 1)
          {
            if (v29 < 0) {
              goto LABEL_83;
            }
          }
          else
          {
            sub_1AD34F900(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBBE00]);
            id v33 = (void *)swift_allocObject();
            int64_t v38 = _swift_stdlib_malloc_size(v33);
            uint64_t v39 = v38 - 32;
            if (v38 < 32) {
              uint64_t v39 = v38 - 17;
            }
            v33[2] = v29;
            void v33[3] = 2 * (v39 >> 4);
          }
          if (v45 + 16 * v15 < (unint64_t)&v33[2 * v29 + 4] && (unint64_t)(v33 + 4) < v45 + 16 * v28) {
            goto LABEL_83;
          }
          swift_arrayInitWithCopy();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = v30;
      uint64_t v47 = v30;
      unint64_t v35 = *(void *)(v30 + 16);
      unint64_t v34 = *(void *)(v30 + 24);
      int64_t v36 = a2;
      if (v35 >= v34 >> 1)
      {
        sub_1AD2F5830(v34 > 1, v35 + 1, 1);
        int64_t v36 = a2;
        uint64_t result = v47;
      }
      *(void *)(result + 16) = v35 + 1;
      *(void *)(result + 8 * v35 + 32) = v33;
      BOOL v37 = v27 <= v36;
      if (v6 > 0) {
        BOOL v37 = v27 >= v36;
      }
      int64_t v15 = v27;
      if (v37) {
        return result;
      }
    }
  }
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  uint64_t result = sub_1AD740940();
  __break(1u);
  return result;
}

void sub_1AD34F900(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for InternalSettingsAllowedCountrySet()
{
  return &type metadata for InternalSettingsAllowedCountrySet;
}

uint64_t sub_1AD34F960()
{
  return sub_1AD34FEC4(&OBJC_IVAR____TtC18HealthExperienceUI12HostViewCell_hostView);
}

void sub_1AD34F96C(void *a1, double a2, double a3, float a4, float a5)
{
  BOOL v11 = (void *)(v5 + OBJC_IVAR____TtC18HealthExperienceUI12HostViewCell_hostView);
  swift_beginAccess();
  if (!*v11)
  {
    __break(1u);
    return;
  }
  type metadata accessor for ChromeHostView();
  uint64_t v12 = (id *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC18HealthExperienceUI14ChromeHostView_header);
  swift_beginAccess();
  if (*v12)
  {
    *(float *)&double v13 = a4;
    *(float *)&double v14 = a5;
    objc_msgSend(*v12, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_, a2, a3, v13, v14);
    if (*v11) {
      goto LABEL_4;
    }
  }
  else if (*v11)
  {
LABEL_4:
    double v15 = UIEdgeInsetsInsetRect(0.0, 0.0, a2);
    self;
    uint64_t v16 = (void *)swift_dynamicCastObjCClass();
    if (v16)
    {
      objc_msgSend(v16, sel_sizeThatFits_, v15, 0.0);
      return;
    }
    goto LABEL_8;
  }
  __break(1u);
LABEL_8:
  type metadata accessor for FeedItemHostingController();
  if (swift_dynamicCastClass())
  {
    id v17 = a1;
    sub_1AD73E470();
  }
}

id ChromeHostViewCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id ChromeHostViewCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for ChromeHostViewCell(0);
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id ChromeHostViewCell.__deallocating_deinit()
{
  return sub_1AD3501A4(type metadata accessor for ChromeHostViewCell);
}

id ChromeHostViewTableCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  if (a3)
  {
    uint64_t v6 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id ChromeHostViewTableCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v5 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for ChromeHostViewTableCell(0);
  id v6 = objc_msgSendSuper2(&v8, sel_initWithStyle_reuseIdentifier_, a1, v5);

  return v6;
}

id ChromeHostViewTableCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ChromeHostViewTableCell.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ChromeHostViewTableCell(0);
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id sub_1AD34FE68(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  v6.receiver = a1;
  v6.super_class = (Class)a4(0);
  return objc_msgSendSuper2(&v6, sel_initWithCoder_, a3);
}

uint64_t sub_1AD34FEB8()
{
  return sub_1AD34FEC4(&OBJC_IVAR____TtC18HealthExperienceUI17HostViewTableCell_hostView);
}

uint64_t sub_1AD34FEC4(void *a1)
{
  uint64_t v2 = (void **)(v1 + *a1);
  uint64_t result = swift_beginAccess();
  unint64_t v4 = *v2;
  if (v4)
  {
    type metadata accessor for ChromeHostView();
    uint64_t v5 = swift_dynamicCastClassUnconditional();
    id v6 = v4;
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1AD34FF3C(double a1, double a2, float a3, float a4)
{
  id v9 = &v4[OBJC_IVAR____TtC18HealthExperienceUI17HostViewTableCell_hostView];
  swift_beginAccess();
  if (*(void *)v9)
  {
    objc_super v10 = *(void **)(*(void *)v9 + OBJC_IVAR____TtC18HealthExperienceUI8HostView_hostedView);
    if (!v10 || ((swift_getObjectType(), swift_conformsToProtocol2()) ? (BOOL v11 = v10) : (BOOL v11 = 0), !v11))
    {
      v20.receiver = v4;
      v20.super_class = (Class)type metadata accessor for ChromeHostViewTableCell(0);
      *(float *)&double v17 = a3;
      *(float *)&double v18 = a4;
      objc_msgSendSuper2(&v20, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_, a1, a2, v17, v18);
      return;
    }
    type metadata accessor for ChromeHostView();
    uint64_t v12 = (void **)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC18HealthExperienceUI14ChromeHostView_header);
    swift_beginAccess();
    double v13 = *v12;
    if (v13)
    {
      id v14 = v10;
      *(float *)&double v15 = a3;
      *(float *)&double v16 = a4;
      objc_msgSend(v13, sel_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_, a1, a2, v15, v16);
      if (*(void *)v9)
      {
LABEL_9:
        objc_msgSend(v11, sel_sizeThatFits_, UIEdgeInsetsInsetRect(0.0, 0.0, a1), 1.79769313e308);

        return;
      }
    }
    else
    {
      id v19 = v10;
      if (*(void *)v9) {
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  __break(1u);
}

id ChromeHostViewTableCell.__deallocating_deinit()
{
  return sub_1AD3501A4(type metadata accessor for ChromeHostViewTableCell);
}

id sub_1AD3501A4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for ChromeHostViewTableCell(uint64_t a1)
{
  return sub_1AD20CA30(a1, (uint64_t *)&unk_1E9A2C8A0);
}

uint64_t sub_1AD350204()
{
  return type metadata accessor for ChromeHostViewCell(0);
}

uint64_t method lookup function for ChromeHostViewCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChromeHostViewCell);
}

uint64_t dispatch thunk of ChromeHostViewCell.chromeHostView.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t sub_1AD350260()
{
  return type metadata accessor for ChromeHostViewTableCell(0);
}

uint64_t sub_1AD350268()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for ChromeHostViewTableCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChromeHostViewTableCell);
}

uint64_t dispatch thunk of ChromeHostViewTableCell.chromeHostView.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t EnhancedFeatureDataTypeDescriptionProvider.titleText.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id EnhancedFeatureDataTypeDescriptionProvider.attribution.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 48);
  char v3 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  return v2;
}

uint64_t EnhancedFeatureDataTypeDescriptionProvider.objectWillChange.getter()
{
  return swift_retain();
}

uint64_t EnhancedFeatureDataTypeDescriptionProvider.__allocating_init(displayType:mode:featureStatusProvider:)(void *a1, int a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  EnhancedFeatureDataTypeDescriptionProvider.init(displayType:mode:featureStatusProvider:)(a1, a2, a3);
  return v6;
}

uint64_t EnhancedFeatureDataTypeDescriptionProvider.init(displayType:mode:featureStatusProvider:)(void *a1, int a2, void *a3)
{
  uint64_t v4 = v3;
  sub_1AD1C6A10(0, (unint64_t *)&qword_1EB740280, MEMORY[0x1E4FBCC28]);
  MEMORY[0x1F4188790](v8 - 8);
  objc_super v10 = &v43[-v9];
  sub_1AD3509FC();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  double v15 = &v43[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AD1C6A10(0, &qword_1E9A325A0, MEMORY[0x1E4F66798]);
  MEMORY[0x1F4188790](v16 - 8);
  double v18 = &v43[-v17];
  uint64_t v46 = v13;
  uint64_t v47 = v12;
  uint64_t v45 = v15;
  int v44 = a2;
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1AD7408D0()) {
    unint64_t v19 = sub_1AD275268(MEMORY[0x1E4FBC860]);
  }
  else {
    unint64_t v19 = MEMORY[0x1E4FBC870];
  }
  *(void *)(v4 + 120) = v19;
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_1AD73C690();
  uint64_t v20 = sub_1AD73C640();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  char v22 = sub_1AD73C630();
  (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v18, v20);
  id v23 = objc_msgSend(a1, sel_localization);
  id v24 = objc_msgSend(v23, sel_titleEmbeddedDisplayName);

  uint64_t v25 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  uint64_t v27 = v26;

  *(void *)(v4 + 16) = v25;
  *(void *)(v4 + 24) = v27;
  id v28 = objc_msgSend(a1, sel_localization);
  uint64_t v29 = v28;
  if (v22) {
    id v30 = objc_msgSend(v28, sel_summaryForEnhancedFeature);
  }
  else {
    id v30 = objc_msgSend(v28, sel_summary);
  }
  id v31 = v30;

  char v32 = v44;
  if (v31)
  {
    uint64_t v33 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    unint64_t v35 = v34;
  }
  else
  {
    uint64_t v33 = 0;
    unint64_t v35 = 0xE000000000000000;
  }
  *(void *)(v4 + 32) = v33;
  *(void *)(v4 + 40) = v35;
  id v36 = a1;
  DataTypeDescriptionAttribution.init(displayType:mode:)(v36, v32, (uint64_t)&v48);
  char v37 = v49;
  *(void *)(v4 + 48) = v48;
  *(unsigned char *)(v4 + 56) = v37;
  sub_1AD73DB00();
  swift_allocObject();
  *(void *)(v4 + 64) = sub_1AD73DAF0();
  *(void *)(v4 + 72) = v36;
  sub_1AD1FFE38((uint64_t)a3, v4 + 80);
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  id v38 = v36;
  uint64_t v48 = sub_1AD73C6A0();
  sub_1AD1DA3FC();
  id v50 = (id)sub_1AD73FC50();
  uint64_t v39 = sub_1AD73FBF0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v10, 1, 1, v39);
  sub_1AD350AE8();
  sub_1AD350C44((unint64_t *)&unk_1E9A326F0, (void (*)(uint64_t))sub_1AD350AE8);
  sub_1AD350C44((unint64_t *)&qword_1EB740290, (void (*)(uint64_t))sub_1AD1DA3FC);
  uint64_t v40 = v45;
  sub_1AD73DD80();
  sub_1AD350B50((uint64_t)v10, (unint64_t *)&qword_1EB740280, MEMORY[0x1E4FBCC28]);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1AD350C44(&qword_1E9A32700, (void (*)(uint64_t))sub_1AD3509FC);
  uint64_t v41 = v47;
  sub_1AD73DE20();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v40, v41);
  swift_beginAccess();
  sub_1AD73DA00();
  swift_endAccess();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v4;
}

void sub_1AD3509FC()
{
  if (!qword_1E9A326E0)
  {
    sub_1AD350AE8();
    sub_1AD1DA3FC();
    sub_1AD350C44((unint64_t *)&unk_1E9A326F0, (void (*)(uint64_t))sub_1AD350AE8);
    sub_1AD350C44((unint64_t *)&qword_1EB740290, (void (*)(uint64_t))sub_1AD1DA3FC);
    unint64_t v0 = sub_1AD73D9A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A326E0);
    }
  }
}

void sub_1AD350AE8()
{
  if (!qword_1E9A2C8B0)
  {
    sub_1AD73C640();
    unint64_t v0 = sub_1AD73D9F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C8B0);
    }
  }
}

uint64_t sub_1AD350B50(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1AD1C6A10(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1AD350BAC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1AD350BE4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1AD350C8C();
    return swift_release();
  }
  return result;
}

uint64_t sub_1AD350C3C()
{
  return sub_1AD350BE4();
}

uint64_t sub_1AD350C44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD350C8C()
{
  uint64_t v1 = v0;
  sub_1AD1C6A10(0, &qword_1E9A325A0, MEMORY[0x1E4F66798]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v15[-v3];
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 80), *(void *)(v0 + 104));
  sub_1AD73C690();
  uint64_t v5 = sub_1AD73C640();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  char v7 = sub_1AD73C630();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v4, v5);
  if (v7)
  {
    id v8 = objc_msgSend(*(id *)(v1 + 72), sel_localization);
    id v9 = objc_msgSend(v8, sel_summaryForEnhancedFeature);
  }
  else
  {
    id v8 = objc_msgSend(*(id *)(v1 + 72), sel_localization);
    id v9 = objc_msgSend(v8, sel_summary);
  }
  id v10 = v9;

  if (v10)
  {
    uint64_t v11 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    unint64_t v13 = v12;
  }
  else
  {
    uint64_t v11 = 0;
    unint64_t v13 = 0xE000000000000000;
  }
  swift_beginAccess();
  *(void *)(v1 + 32) = v11;
  *(void *)(v1 + 40) = v13;
  swift_bridgeObjectRelease();
  return sub_1AD73DAE0();
}

uint64_t EnhancedFeatureDataTypeDescriptionProvider.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EnhancedFeatureDataTypeDescriptionProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD350FC0()
{
  return swift_retain();
}

uint64_t sub_1AD350FCC()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

id sub_1AD35101C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 48);
  char v3 = *(unsigned char *)(*(void *)v1 + 56);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  return v2;
}

uint64_t sub_1AD351034@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  *a2 = *(void *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for EnhancedFeatureDataTypeDescriptionProvider()
{
  return self;
}

uint64_t method lookup function for EnhancedFeatureDataTypeDescriptionProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EnhancedFeatureDataTypeDescriptionProvider);
}

uint64_t dispatch thunk of EnhancedFeatureDataTypeDescriptionProvider.summaryText.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of EnhancedFeatureDataTypeDescriptionProvider.summaryText.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of EnhancedFeatureDataTypeDescriptionProvider.summaryText.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of EnhancedFeatureDataTypeDescriptionProvider.__allocating_init(displayType:mode:featureStatusProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

id sub_1AD351140(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5)
{
  sub_1AD35162C(0, (unint64_t *)&qword_1E9A31E60, (void (*)(uint64_t))sub_1AD3515AC);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD74C370;
  id v9 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB0700];
  *(void *)(inited + 40) = a3;
  id v10 = v9;
  id v11 = a3;
  unint64_t v12 = sub_1AD25860C(inited);
  if (a4)
  {
    id v31 = a4;
    id v13 = objc_msgSend(v31, sel_imageWithRenderingMode_, 2);
    id v14 = objc_msgSend(self, sel_textAttachmentWithImage_, v13);

    sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F840);
    id v15 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v14);
    sub_1AD35162C(0, (unint64_t *)&qword_1EB732860, (void (*)(uint64_t))sub_1AD268594);
    uint64_t v16 = swift_initStackObject();
    *(_OWORD *)(v16 + 16) = xmmword_1AD74C370;
    *(void *)(v16 + 32) = v10;
    *(void *)(v16 + 64) = sub_1AD2147D4(0, (unint64_t *)&qword_1EB741430);
    *(void *)(v16 + 40) = v11;
    id v17 = v11;
    id v18 = v10;
    sub_1AD257F70(v16);
    type metadata accessor for Key(0);
    sub_1AD2AB12C();
    char v19 = a5;
    uint64_t v20 = (void *)sub_1AD73F020();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_addAttributes_range_, v20, 0, objc_msgSend(v15, sel_length));

    if (v19)
    {
      swift_bridgeObjectRetain();
      sub_1AD73F300();
      sub_1AD5E3734(v12);
      swift_bridgeObjectRelease();
      id v26 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
      uint64_t v27 = (void *)sub_1AD73F180();
      swift_bridgeObjectRelease();
      id v28 = (void *)sub_1AD73F020();
      swift_bridgeObjectRelease();
      id v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

      objc_msgSend(v29, sel_appendAttributedString_, v15);
      id v24 = v15;
      id v15 = v29;
    }
    else
    {
      sub_1AD73F300();
      sub_1AD5E3734(v12);
      swift_bridgeObjectRelease();
      id v21 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      char v22 = (void *)sub_1AD73F180();
      swift_bridgeObjectRelease();
      id v23 = (void *)sub_1AD73F020();
      swift_bridgeObjectRelease();
      id v24 = objc_msgSend(v21, sel_initWithString_attributes_, v22, v23);

      objc_msgSend(v15, sel_appendAttributedString_, v24);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1AD5E3734(v12);
    swift_bridgeObjectRelease();
    id v25 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
    id v14 = (id)sub_1AD73F180();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1AD2AB12C();
    id v24 = (id)sub_1AD73F020();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(v25, sel_initWithString_attributes_, v14, v24);
  }

  return v15;
}

void sub_1AD3515AC()
{
  if (!qword_1E9A2C8B8)
  {
    type metadata accessor for Key(255);
    sub_1AD2147D4(255, (unint64_t *)&qword_1EB741430);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9A2C8B8);
    }
  }
}

void sub_1AD35162C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AD740B60();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AD351680(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_baseIdentifier);
  swift_beginAccess();
  void *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD3516EC()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_baseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1AD351744(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_baseIdentifier);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1AD3517A4())()
{
  return j__swift_endAccess;
}

uint64_t sub_1AD351800()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_parentViewController;
  swift_beginAccess();
  return MEMORY[0x1B3E68580](v1);
}

void sub_1AD35184C(void *a1)
{
}

void (*sub_1AD3518A4(void *a1))(id **, char)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_parentViewController;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1B3E68580](v5);
  return sub_1AD351928;
}

uint64_t sub_1AD35192C(uint64_t a1, void *a2)
{
  sub_1AD2DF308(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_context;
  swift_beginAccess();
  sub_1AD351A64((uint64_t)v5, v3);
  swift_endAccess();
  sub_1AD353A4C();
  return sub_1AD353CB0((uint64_t)v5);
}

uint64_t sub_1AD3519A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_context;
  swift_beginAccess();
  return sub_1AD2DF308(v3, a1);
}

uint64_t sub_1AD3519F4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_context;
  swift_beginAccess();
  sub_1AD351A64(a1, v3);
  swift_endAccess();
  sub_1AD353A4C();
  return sub_1AD353CB0(a1);
}

uint64_t sub_1AD351A64(uint64_t a1, uint64_t a2)
{
  sub_1AD208550(0, (unint64_t *)&qword_1EB73F2E0, (unint64_t *)&qword_1EB73F2D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1AD351AE4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1AD351B44;
}

uint64_t sub_1AD351B44(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1AD353A4C();
  }
  return result;
}

uint64_t sub_1AD351B78()
{
  swift_getObjectType();
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_context;
  swift_beginAccess();
  sub_1AD2DF308(v1, (uint64_t)&v9);
  if (v10)
  {
    sub_1AD20FE90(&v9, (uint64_t)v11);
    uint64_t v2 = v12;
    uint64_t v3 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
    if (v4 >> 60 != 15)
    {
      sub_1AD73BDE0();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    sub_1AD353CB0((uint64_t)&v9);
  }
  v11[0] = 0;
  v11[1] = 0xE000000000000000;
  sub_1AD740680();
  uint64_t v6 = sub_1AD740E30();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  *(void *)&long long v9 = v6;
  *((void *)&v9 + 1) = v8;
  sub_1AD73F300();
  sub_1AD2DF308(v1, (uint64_t)v11);
  sub_1AD208550(0, (unint64_t *)&qword_1EB73F2E0, (unint64_t *)&qword_1EB73F2D0);
  sub_1AD73F220();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1AD7408B0();
  __break(1u);
  return result;
}

id sub_1AD351D3C()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___titleLabel);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v4, sel_setTextColor_, v5);

    id v6 = sub_1AD1F454C((void *)*MEMORY[0x1E4FB28C8], 0, 1, 2, 0, 0, 1);
    objc_msgSend(v4, sel_setFont_, v6);

    objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v4, sel_setNumberOfLines_, 0);
    objc_msgSend(v4, sel_setLineBreakMode_, 0);
    LODWORD(v7) = 1148846080;
    objc_msgSend(v4, sel_setContentHuggingPriority_forAxis_, 1, v7);
    uint64_t v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_1AD351E9C()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___primaryDescriptionStackView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___primaryDescriptionStackView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___primaryDescriptionStackView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setAlignment_, 1);
    if (qword_1E9A29118 != -1) {
      swift_once();
    }
    objc_msgSend(v4, sel_setSpacing_, *(double *)&qword_1E9A2C8E8);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1AD351F94()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___secondaryDescriptionLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___secondaryDescriptionLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___secondaryDescriptionLabel);
  }
  else
  {
    id v4 = sub_1AD351FF8(v0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1AD351FF8(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setTextColor_, *(void *)(a1 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryFootnoteColor));
  objc_msgSend(v2, sel_setFont_, *(void *)(a1 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryFootnoteFont));
  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  objc_msgSend(v2, sel_setLineBreakMode_, 0);
  LODWORD(v3) = 1148846080;
  objc_msgSend(v2, sel_setContentHuggingPriority_forAxis_, 1, v3);
  return v2;
}

id sub_1AD3520D8()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___iconImageView;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___iconImageView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___iconImageView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setContentMode_, 1);
    objc_msgSend(v4, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 1);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1AD352188()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___disclosureImageView;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___disclosureImageView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___disclosureImageView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = sub_1AD1F454C((void *)*MEMORY[0x1E4FB28C8], *MEMORY[0x1E4FB09E0], 0, 0, 0, 0, 1);
    id v6 = objc_msgSend(self, sel_configurationWithFont_scale_, v5, 1);
    double v7 = (void *)sub_1AD73F180();
    id v8 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v7, v6);

    objc_msgSend(v4, sel_setImage_, v8);
    objc_msgSend(v4, sel_setContentMode_, 1);
    id v9 = objc_msgSend(self, sel_tertiaryLabelColor);
    objc_msgSend(v4, sel_setTintColor_, v9);

    objc_msgSend(v4, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 1);
    uint64_t v10 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1AD352364()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___bottomAccessoryView;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___bottomAccessoryView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___bottomAccessoryView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ListStyleAccessoryView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

char *sub_1AD352418(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_baseIdentifier];
  *(void *)id v9 = 0;
  *((void *)v9 + 1) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v10 = &v4[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_actionHandler];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  id v11 = &v4[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_context];
  *(_OWORD *)id v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((void *)v11 + 4) = 0;
  uint64_t v12 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_containerViewBackgroundColor;
  uint64_t v13 = self;
  id v14 = v4;
  *(void *)&v4[v12] = objc_msgSend(v13, sel_secondarySystemGroupedBackgroundColor);
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___titleLabel] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___primaryDescriptionStackView] = 0;
  uint64_t v15 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryFootnoteColor;
  *(void *)&v14[v15] = objc_msgSend(v13, sel_secondaryLabelColor);
  uint64_t v16 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryFootnoteFont;
  *(void *)&v14[v16] = sub_1AD1F454C((void *)*MEMORY[0x1E4FB28F0], 0, 1, 2, 0, 0, 1);
  uint64_t v17 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryLinkColor;
  *(void *)&v14[v17] = objc_msgSend(v13, sel_systemBlueColor);
  uint64_t v18 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryLinkFont;
  *(void *)&v14[v18] = sub_1AD1F454C((void *)*MEMORY[0x1E4FB2950], 0, 1, 0, 0, 0, 1);
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___secondaryDescriptionLabel] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___iconImageView] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___disclosureImageView] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___bottomAccessoryView] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_iconImageViewWidthConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_iconImageViewLeadingConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_disclosureImageViewWidthConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_disclosureImageViewTrailingConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelLeadingConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelTopConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelTrailingConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_primaryDescriptionStackViewHeightConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_primaryDescriptionStackViewTopSpacingConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelHeightConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelTopSpacingConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelBottomConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_bottomAccessoryViewHeightConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_bottomAccessoryViewBottomConstraint] = 0;

  v23.receiver = v14;
  v23.super_class = (Class)type metadata accessor for FeatureStatusPlatformFeedItemView();
  char v19 = (char *)objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v20 = *(void *)&v19[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_containerViewBackgroundColor];
  id v21 = v19;
  objc_msgSend(v21, sel_setBackgroundColor_, v20);
  sub_1AD352784();
  sub_1AD35286C();

  return v21;
}

id FeatureStatusPlatformFeedItemView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_1AD352784()
{
  id v1 = sub_1AD351D3C();
  objc_msgSend(v0, sel_addSubview_, v1);

  id v2 = sub_1AD3520D8();
  objc_msgSend(v0, sel_addSubview_, v2);

  id v3 = sub_1AD351E9C();
  objc_msgSend(v0, sel_addSubview_, v3);

  id v4 = sub_1AD351F94();
  objc_msgSend(v0, sel_addSubview_, v4);

  id v5 = sub_1AD352188();
  objc_msgSend(v0, sel_addSubview_, v5);

  id v6 = sub_1AD352364();
  objc_msgSend(v0, sel_addSubview_, v6);
}

void sub_1AD35286C()
{
  unint64_t v0 = sub_1AD352970();
  sub_1AD21FC9C(v0);
  unint64_t v1 = sub_1AD352EC4();
  sub_1AD21FC9C(v1);
  unint64_t v2 = sub_1AD353188();
  sub_1AD21FC9C(v2);
  unint64_t v3 = sub_1AD35344C();
  sub_1AD21FC9C(v3);
  unint64_t v4 = sub_1AD352C84();
  sub_1AD21FC9C(v4);
  unint64_t v5 = sub_1AD353770();
  sub_1AD21FC9C(v5);
  id v6 = self;
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F810);
  id v7 = (id)sub_1AD73F490();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_activateConstraints_, v7);
}

uint64_t sub_1AD352970()
{
  id v1 = sub_1AD3520D8();
  LODWORD(v2) = 1148846080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 0, v2);

  id v3 = sub_1AD3520D8();
  LODWORD(v4) = 1148846080;
  objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);

  id v5 = sub_1AD3520D8();
  id v6 = objc_msgSend(v5, sel_widthAnchor);

  if (qword_1E9A29100 != -1) {
    swift_once();
  }
  id v7 = objc_msgSend(v6, sel_constraintEqualToConstant_, *(double *)&qword_1E9A2C8D0);

  id v8 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_iconImageViewWidthConstraint];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_iconImageViewWidthConstraint] = v7;
  id v9 = v7;

  sub_1AD1EFDA4();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1AD74C720;
  id v11 = sub_1AD3520D8();
  id v12 = objc_msgSend(v11, sel_topAnchor);

  id v13 = objc_msgSend(v0, sel_topAnchor);
  if (qword_1E9A290F8 != -1) {
    swift_once();
  }
  id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v13, *(double *)&qword_1E9A2C8C8);

  *(void *)(v10 + 32) = v14;
  id v15 = sub_1AD3520D8();
  id v16 = objc_msgSend(v15, sel_leadingAnchor);

  id v17 = objc_msgSend(v0, sel_leadingAnchor);
  if (qword_1E9A290F0 != -1) {
    swift_once();
  }
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, *(double *)&qword_1E9A2C8C0);

  *(void *)(v10 + 40) = v18;
  *(void *)(v10 + 48) = v9;
  id v19 = v9;
  id v20 = sub_1AD3520D8();
  id v21 = objc_msgSend(v20, sel_heightAnchor);

  id v22 = sub_1AD3520D8();
  id v23 = objc_msgSend(v22, sel_widthAnchor);

  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  *(void *)(v10 + 56) = v24;
  sub_1AD73F4D0();

  return v10;
}

uint64_t sub_1AD352C84()
{
  id v1 = sub_1AD352188();
  LODWORD(v2) = 1148846080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 0, v2);

  id v3 = sub_1AD352188();
  LODWORD(v4) = 1148846080;
  objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);

  id v5 = sub_1AD352188();
  id v6 = objc_msgSend(v5, sel_trailingAnchor);

  id v7 = objc_msgSend(v0, sel_trailingAnchor);
  if (qword_1E9A290F0 != -1) {
    swift_once();
  }
  id v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v7, -*(double *)&qword_1E9A2C8C0);

  id v9 = sub_1AD352188();
  id v10 = objc_msgSend(v9, sel_widthAnchor);

  id v11 = objc_msgSend(v10, sel_constraintEqualToConstant_, 0.0);
  id v12 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_disclosureImageViewWidthConstraint];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_disclosureImageViewWidthConstraint] = v11;

  id v13 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_disclosureImageViewTrailingConstraint];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_disclosureImageViewTrailingConstraint] = v8;
  id v14 = v8;

  sub_1AD1EFDA4();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1AD74DE20;
  id v16 = sub_1AD352188();
  id v17 = objc_msgSend(v16, sel_firstBaselineAnchor);

  id v18 = sub_1AD351D3C();
  id v19 = objc_msgSend(v18, sel_firstBaselineAnchor);

  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v19);
  *(void *)(v15 + 32) = v20;
  *(void *)(v15 + 40) = v14;
  sub_1AD73F4D0();
  return v15;
}

uint64_t sub_1AD352EC4()
{
  id v1 = sub_1AD351D3C();
  LODWORD(v2) = 1148846080;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 1, v2);

  id v3 = sub_1AD351D3C();
  id v4 = objc_msgSend(v3, sel_topAnchor);

  id v5 = objc_msgSend(v0, sel_topAnchor);
  if (qword_1E9A290F8 != -1) {
    swift_once();
  }
  id v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, *(double *)&qword_1E9A2C8C8);

  id v7 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelTopConstraint];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelTopConstraint] = v6;
  id v8 = v6;

  id v9 = sub_1AD351D3C();
  id v10 = objc_msgSend(v9, sel_leadingAnchor);

  id v11 = sub_1AD3520D8();
  id v12 = objc_msgSend(v11, sel_trailingAnchor);

  if (qword_1E9A29108 != -1) {
    swift_once();
  }
  id v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v12, *(double *)&qword_1E9A2C8D8);

  id v14 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelLeadingConstraint];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelLeadingConstraint] = v13;
  id v15 = v13;

  id v16 = sub_1AD351D3C();
  id v17 = objc_msgSend(v16, sel_trailingAnchor);

  id v18 = objc_msgSend(v0, sel_trailingAnchor);
  if (qword_1E9A290F0 != -1) {
    swift_once();
  }
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, -*(double *)&qword_1E9A2C8C0);

  id v20 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelTrailingConstraint];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelTrailingConstraint] = v19;
  id v21 = v19;

  sub_1AD1EFDA4();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1AD7501A0;
  *(void *)(v22 + 32) = v8;
  *(void *)(v22 + 40) = v15;
  *(void *)(v22 + 48) = v21;
  uint64_t v24 = v22;
  sub_1AD73F4D0();
  return v24;
}

uint64_t sub_1AD353188()
{
  id v1 = sub_1AD351E9C();
  LODWORD(v2) = 1148846080;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 1, v2);

  id v3 = sub_1AD351E9C();
  id v4 = objc_msgSend(v3, sel_topAnchor);

  id v5 = sub_1AD351D3C();
  id v6 = objc_msgSend(v5, sel_bottomAnchor);

  if (qword_1E9A29110 != -1) {
    swift_once();
  }
  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, *(double *)&qword_1E9A2C8E0);

  id v8 = sub_1AD351E9C();
  id v9 = objc_msgSend(v8, sel_heightAnchor);

  id v10 = objc_msgSend(v9, sel_constraintEqualToConstant_, 0.0);
  id v11 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_primaryDescriptionStackViewHeightConstraint];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_primaryDescriptionStackViewHeightConstraint] = v10;

  id v12 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_primaryDescriptionStackViewTopSpacingConstraint];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_primaryDescriptionStackViewTopSpacingConstraint] = v7;
  id v13 = v7;

  sub_1AD1EFDA4();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1AD7501A0;
  id v15 = sub_1AD351E9C();
  id v16 = objc_msgSend(v15, sel_leadingAnchor);

  id v17 = sub_1AD351D3C();
  id v18 = objc_msgSend(v17, sel_leadingAnchor);

  id v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  *(void *)(v14 + 32) = v19;
  id v20 = sub_1AD351E9C();
  id v21 = objc_msgSend(v20, sel_trailingAnchor);

  id v22 = objc_msgSend(v0, sel_trailingAnchor);
  if (qword_1E9A290F0 != -1) {
    swift_once();
  }
  id v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v22, -*(double *)&qword_1E9A2C8C0);

  *(void *)(v14 + 40) = v23;
  *(void *)(v14 + 48) = v13;
  sub_1AD73F4D0();
  return v14;
}

uint64_t sub_1AD35344C()
{
  id v1 = sub_1AD351F94();
  id v2 = objc_msgSend(v1, sel_topAnchor);

  id v3 = sub_1AD351E9C();
  id v4 = objc_msgSend(v3, sel_bottomAnchor);

  if (qword_1E9A29120 != -1) {
    swift_once();
  }
  id v5 = objc_msgSend(v2, sel_constraintEqualToAnchor_constant_, v4, *(double *)&qword_1E9A2C8F0);

  id v6 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelTopSpacingConstraint];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelTopSpacingConstraint] = v5;
  id v7 = v5;

  id v8 = sub_1AD351F94();
  id v9 = objc_msgSend(v8, sel_bottomAnchor);

  id v10 = objc_msgSend(v0, sel_bottomAnchor);
  if (qword_1E9A290F8 != -1) {
    swift_once();
  }
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v10, -*(double *)&qword_1E9A2C8C8);

  id v12 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelBottomConstraint];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelBottomConstraint] = v11;
  id v13 = v11;

  id v14 = sub_1AD351F94();
  id v15 = objc_msgSend(v14, sel_heightAnchor);

  id v16 = objc_msgSend(v15, sel_constraintEqualToConstant_, 0.0);
  id v17 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelHeightConstraint];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelHeightConstraint] = v16;

  sub_1AD1EFDA4();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1AD74C720;
  id v19 = sub_1AD351F94();
  id v20 = objc_msgSend(v19, sel_leadingAnchor);

  id v21 = sub_1AD351E9C();
  id v22 = objc_msgSend(v21, sel_leadingAnchor);

  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(void *)(v18 + 32) = v23;
  id v24 = sub_1AD351F94();
  id v25 = objc_msgSend(v24, sel_trailingAnchor);

  id v26 = sub_1AD351E9C();
  id v27 = objc_msgSend(v26, sel_trailingAnchor);

  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
  *(void *)(v18 + 40) = v28;
  *(void *)(v18 + 48) = v7;
  *(void *)(v18 + 56) = v13;
  sub_1AD73F4D0();
  return v18;
}

uint64_t sub_1AD353770()
{
  id v1 = sub_1AD352364();
  id v2 = objc_msgSend(v1, sel_heightAnchor);

  id v3 = objc_msgSend(v2, sel_constraintEqualToConstant_, 0.0);
  id v4 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_bottomAccessoryViewHeightConstraint];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_bottomAccessoryViewHeightConstraint] = v3;
  id v5 = v3;

  id v6 = sub_1AD352364();
  id v7 = objc_msgSend(v6, sel_bottomAnchor);

  id v8 = objc_msgSend(v0, sel_bottomAnchor);
  id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  id v10 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_bottomAccessoryViewBottomConstraint];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_bottomAccessoryViewBottomConstraint] = v9;
  id v11 = v9;

  sub_1AD1EFDA4();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1AD74C720;
  id v13 = sub_1AD352364();
  id v14 = objc_msgSend(v13, sel_leadingAnchor);

  id v15 = sub_1AD351D3C();
  id v16 = objc_msgSend(v15, sel_leadingAnchor);

  id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
  *(void *)(v12 + 32) = v17;
  id v18 = sub_1AD352364();
  id v19 = objc_msgSend(v18, sel_trailingAnchor);

  id v20 = objc_msgSend(v0, sel_trailingAnchor);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(void *)(v12 + 40) = v21;
  id v22 = sub_1AD352364();
  id v23 = objc_msgSend(v22, sel_topAnchor);

  id v24 = sub_1AD351F94();
  id v25 = objc_msgSend(v24, sel_bottomAnchor);

  if (qword_1E9A290F8 != -1) {
    swift_once();
  }
  id v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, *(double *)&qword_1E9A2C8C8);

  *(void *)(v12 + 48) = v26;
  *(void *)(v12 + 56) = v11;
  sub_1AD73F4D0();

  return v12;
}

uint64_t sub_1AD353A4C()
{
  uint64_t v0 = sub_1AD739D70();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AD73BE20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD351B78();
  sub_1AD354F90((uint64_t)v7);
  sub_1AD353D28((uint64_t)v7);
  sub_1AD355314();
  sub_1AD35445C((uint64_t)v7);
  sub_1AD354C2C();
  sub_1AD355510();
  uint64_t v13 = sub_1AD73BDB0();
  uint64_t v14 = v8;
  sub_1AD739D60();
  sub_1AD20F9FC();
  sub_1AD7403F0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  uint64_t v13 = 0;
  uint64_t v14 = 0xE000000000000000;
  sub_1AD740680();
  uint64_t v9 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v13 = v9;
  uint64_t v14 = v11;
  sub_1AD73F300();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  sub_1AD35687C(v13, v14);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AD353CB0(uint64_t a1)
{
  sub_1AD208550(0, (unint64_t *)&qword_1EB73F2E0, (unint64_t *)&qword_1EB73F2D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1AD353D28(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1AD73B810();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v63 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v60 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v60 - v11;
  id v13 = sub_1AD351D3C();
  sub_1AD73BE10();
  uint64_t v14 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setText_, v14);

  id v15 = sub_1AD351D3C();
  id v16 = sub_1AD351D3C();
  id v17 = objc_msgSend(v16, sel_text);

  objc_msgSend(v15, sel_setAccessibilityLabel_, v17);
  id v18 = sub_1AD351D3C();
  uint64_t v62 = a1;
  sub_1AD73BD80();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v12, v4);
  uint64_t v61 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  int v19 = v61(v10, v4);
  if (v19 == *MEMORY[0x1E4F65EC0] || v19 == *MEMORY[0x1E4F65EB8])
  {
    objc_msgSend(v18, sel_setAlpha_, 0.5);

    id v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  }
  else
  {
    objc_msgSend(v18, sel_setAlpha_, 1.0);
    id v20 = *(void (**)(char *, uint64_t))(v5 + 8);
    v20(v10, v4);
  }
  v20(v12, v4);
  uint64_t v21 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelTopConstraint;
  id v22 = *(void **)&v2[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelTopConstraint];
  if (v22) {
    objc_msgSend(v22, sel_setActive_, 0);
  }
  uint64_t v60 = v20;
  uint64_t v23 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelLeadingConstraint;
  id v24 = *(void **)&v2[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelLeadingConstraint];
  if (v24) {
    objc_msgSend(v24, sel_setActive_, 0);
  }
  IsUsingAccessibilityContentSizeCategorCGFloat y = HKUIApplicationIsUsingAccessibilityContentSizeCategory();
  id v26 = sub_1AD351D3C();
  id v27 = objc_msgSend(v26, sel_topAnchor);

  if (IsUsingAccessibilityContentSizeCategory)
  {
    id v28 = sub_1AD3520D8();
    id v29 = objc_msgSend(v28, sel_bottomAnchor);

    if (qword_1E9A29108 != -1) {
      swift_once();
    }
    id v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v29, *(double *)&qword_1E9A2C8D8, v60);

    id v31 = *(void **)&v2[v21];
    *(void *)&v2[v21] = v30;

    id v32 = sub_1AD351D3C();
    id v33 = objc_msgSend(v32, sel_leadingAnchor);

    id v34 = objc_msgSend(v2, sel_leadingAnchor);
    if (qword_1E9A290F0 != -1) {
      swift_once();
    }
    uint64_t v35 = qword_1E9A2C8C0;
  }
  else
  {
    id v36 = objc_msgSend(v2, sel_topAnchor);
    if (qword_1E9A290F8 != -1) {
      swift_once();
    }
    id v37 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v36, *(double *)&qword_1E9A2C8C8, v60);

    id v38 = *(void **)&v2[v21];
    *(void *)&v2[v21] = v37;

    id v39 = sub_1AD351D3C();
    id v33 = objc_msgSend(v39, sel_leadingAnchor);

    id v40 = sub_1AD3520D8();
    id v34 = objc_msgSend(v40, sel_trailingAnchor);

    if (qword_1E9A29108 != -1) {
      swift_once();
    }
    uint64_t v35 = qword_1E9A2C8D8;
  }
  id v41 = objc_msgSend(v33, sel_constraintEqualToAnchor_constant_, v34, *(double *)&v35);

  id v42 = *(void **)&v2[v23];
  *(void *)&v2[v23] = v41;

  id v43 = *(void **)&v2[v21];
  if (v43) {
    objc_msgSend(v43, sel_setActive_, 1);
  }
  int v44 = *(void **)&v2[v23];
  uint64_t v45 = v63;
  if (v44) {
    objc_msgSend(v44, sel_setActive_, 1);
  }
  uint64_t v46 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelTrailingConstraint;
  uint64_t v47 = *(void **)&v2[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelTrailingConstraint];
  if (v47) {
    objc_msgSend(v47, sel_setActive_, 0);
  }
  sub_1AD73BD80();
  int v48 = v61(v45, v4);
  int v49 = *MEMORY[0x1E4F65EC8];
  id v50 = sub_1AD351D3C();
  id v51 = objc_msgSend(v50, sel_trailingAnchor);

  if (v48 == v49)
  {
    id v52 = sub_1AD352188();
    id v53 = objc_msgSend(v52, sel_leadingAnchor);

    if (qword_1E9A29128 != -1) {
      swift_once();
    }
    id v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_constant_, v53, -*(double *)&qword_1E9A2C8F8);

    BOOL v55 = *(void **)&v2[v46];
    *(void *)&v2[v46] = v54;
  }
  else
  {
    id v56 = objc_msgSend(v2, sel_trailingAnchor);
    if (qword_1E9A290F0 != -1) {
      swift_once();
    }
    id v57 = objc_msgSend(v51, sel_constraintEqualToAnchor_constant_, v56, -*(double *)&qword_1E9A2C8C0);

    uint64_t v58 = *(void **)&v2[v46];
    *(void *)&v2[v46] = v57;

    v60(v45, v4);
  }
  id result = *(id *)&v2[v46];
  if (result) {
    return objc_msgSend(result, sel_setActive_, 1);
  }
  return result;
}

void sub_1AD35445C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v74 = sub_1AD73B810();
  uint64_t v5 = *(void *)(v74 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v74 - 8);
  uint64_t v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v64 = (char *)&v59 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v77 = (char *)&v59 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v78 = (char *)&v59 - v13;
  id v14 = sub_1AD351E9C();
  id v15 = objc_msgSend(v14, sel_arrangedSubviews);

  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F880);
  unint64_t v16 = sub_1AD73F4B0();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1AD7408D0();
    if (!v17) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v17) {
      goto LABEL_10;
    }
  }
  if (v17 < 1) {
    goto LABEL_51;
  }
  for (uint64_t i = 0; i != v17; ++i)
  {
    if ((v16 & 0xC000000000000001) != 0) {
      id v19 = (id)MEMORY[0x1B3E669F0](i, v16);
    }
    else {
      id v19 = *(id *)(v16 + 8 * i + 32);
    }
    id v20 = v19;
    objc_msgSend(v19, sel_removeFromSuperview);
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  uint64_t v21 = sub_1AD73BDD0();
  if (!v21)
  {
    id v54 = sub_1AD351E9C();
    objc_msgSend(v54, sel_setHidden_, 1);

    objc_msgSend(*(id *)(v3+ OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_primaryDescriptionStackViewHeightConstraint), sel_setActive_, 1);
    BOOL v55 = *(void **)(v3
                   + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_primaryDescriptionStackViewTopSpacingConstraint);
    if (v55)
    {
      objc_msgSend(v55, sel_setConstant_, 0.0);
    }
    return;
  }
  uint64_t v22 = v21;
  unint64_t v23 = *(void *)(v21 + 16);
  if (v23)
  {
    uint64_t v68 = v8;
    uint64_t v60 = (void *)(v21 + 32);
    uint64_t v79 = (void *)(v21 + 32 + 16 * v23 - 16);
    double v25 = *MEMORY[0x1E4FB12A8];
    double v24 = *(double *)(MEMORY[0x1E4FB12A8] + 8);
    double v26 = *(double *)(MEMORY[0x1E4FB12A8] + 16);
    double v27 = *(double *)(MEMORY[0x1E4FB12A8] + 24);
    uint64_t v76 = (void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v73 = (uint64_t (**)(char *, uint64_t))(v5 + 88);
    unsigned int v75 = *MEMORY[0x1E4F65EC8];
    int v67 = *MEMORY[0x1E4F65ED0];
    unsigned int v72 = *MEMORY[0x1E4F65EB0];
    uint64_t v71 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v1 = (uint64_t *)(v21 + 40);
    swift_bridgeObjectRetain();
    uint64_t v59 = (void *)(v22 + 40);
    unint64_t v28 = v23;
    uint64_t v29 = v74;
    uint64_t v30 = a1;
    unint64_t v31 = v23;
    uint64_t v61 = v3;
    uint64_t v62 = v30;
    unint64_t v69 = v23;
    uint64_t v70 = v22;
    BOOL v65 = (void (**)(char *, void, uint64_t))(v5 + 104);
    while (1)
    {
      unint64_t v37 = *(void *)(v22 + 16);
      if (v31 > v37)
      {
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        swift_once();
LABEL_47:
        objc_msgSend(v1, sel_setConstant_, *(double *)&qword_1E9A2C8E0, v59);

        return;
      }
      uint64_t v38 = *(v1 - 1);
      uint64_t v39 = *v1;
      BOOL v40 = v38 == *v79 && v39 == v79[1];
      if (v40 || (sub_1AD740BC0() & 1) != 0)
      {
        if (v37 < 2)
        {
          swift_bridgeObjectRetain();
          char v32 = 3;
          double v33 = v25;
        }
        else
        {
          uint64_t v41 = qword_1E9A29118;
          swift_bridgeObjectRetain();
          if (v41 != -1) {
            swift_once();
          }
          double v33 = *(double *)&qword_1E9A2C8E8;
          char v32 = 3;
        }
        goto LABEL_14;
      }
      swift_bridgeObjectRetain();
      id v42 = v78;
      sub_1AD73BD80();
      id v43 = v77;
      int v44 = *v76;
      (*v76)(v77, v42, v29);
      int v45 = (*v73)(v43, v29);
      if (v45 == v75 || v45 == v67 || v45 == v72) {
        break;
      }
      uint64_t v46 = *v71;
      uint64_t v29 = v74;
      (*v71)(v78, v74);
      v46(v77, v29);
      char v32 = 2;
      double v33 = v25;
      unint64_t v31 = v69;
      uint64_t v22 = v70;
LABEL_14:
      v1 += 2;
      v80[0] = v32;
      id v34 = objc_allocWithZone((Class)type metadata accessor for LabelWithIndicatorView());
      id v35 = LabelWithIndicatorView.init(style:title:contentInsets:)(v80, v38, v39, v33, v24, v26, v27);
      id v36 = sub_1AD351E9C();
      objc_msgSend(v36, sel_addArrangedSubview_, v35);

      if (!--v28)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_45;
      }
    }
    uint64_t v47 = v64;
    uint64_t v29 = v74;
    uint64_t v63 = *v65;
    v63(v64, v75, v74);
    int v48 = v78;
    int v66 = sub_1AD73B800();
    int v49 = *v71;
    (*v71)(v47, v29);
    v44(v68, v48, v29);
    if (v66)
    {
      id v50 = v49;
      v49(v68, v29);
      unint64_t v31 = v69;
      uint64_t v22 = v70;
    }
    else
    {
      v63(v47, v72, v29);
      id v51 = v68;
      int v66 = sub_1AD73B800();
      v49(v47, v29);
      id v52 = v51;
      id v50 = v49;
      v49(v52, v29);
      unint64_t v31 = v69;
      uint64_t v22 = v70;
      if ((v66 & 1) == 0)
      {
        char v53 = 0;
LABEL_38:
        v50(v78, v29);
        char v32 = v53 & 1;
        double v33 = v25;
        uint64_t v3 = v61;
        goto LABEL_14;
      }
    }
    if (!*(void *)(v22 + 16)) {
      goto LABEL_50;
    }
    if (v38 == *v60 && v39 == *v59) {
      char v53 = 1;
    }
    else {
      char v53 = sub_1AD740BC0();
    }
    goto LABEL_38;
  }
  swift_bridgeObjectRelease();
LABEL_45:
  id v56 = sub_1AD351E9C();
  objc_msgSend(v56, sel_setHidden_, 0);

  objc_msgSend(*(id *)(v3+ OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_primaryDescriptionStackViewHeightConstraint), sel_setActive_, 0);
  id v57 = *(void **)(v3
                 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_primaryDescriptionStackViewTopSpacingConstraint);
  if (v57)
  {
    uint64_t v58 = qword_1E9A29110;
    uint64_t v1 = v57;
    if (v58 != -1) {
      goto LABEL_52;
    }
    goto LABEL_47;
  }
}

void sub_1AD354C2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1AD73B810();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73BDC0();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  id v8 = sub_1AD351F94();
  uint64_t v9 = v8;
  if (v7)
  {
    objc_msgSend(v8, sel_setHidden_, 0);

    objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelHeightConstraint), sel_setActive_, 0);
    uint64_t v10 = *(void **)(v1
                   + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelTopSpacingConstraint);
    if (v10)
    {
      uint64_t v11 = qword_1E9A29120;
      id v12 = v10;
      if (v11 != -1) {
        swift_once();
      }
      objc_msgSend(v12, sel_setConstant_, *(double *)&qword_1E9A2C8F0);
    }
  }
  else
  {
    objc_msgSend(v8, sel_setHidden_, 1);

    objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelHeightConstraint), sel_setActive_, 1);
    uint64_t v13 = *(void **)(v1
                   + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelTopSpacingConstraint);
    if (v13) {
      objc_msgSend(v13, sel_setConstant_, 0.0);
    }
  }
  id v14 = *(void **)(v1
                 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelBottomConstraint);
  if (v14) {
    objc_msgSend(v14, sel_setActive_, v7 != 0);
  }
  id v15 = sub_1AD351F94();
  sub_1AD73BDC0();
  if (v16)
  {
    uint64_t v17 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = 0;
  }
  objc_msgSend(v15, sel_setText_, v17);

  sub_1AD73BD80();
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v18 != *MEMORY[0x1E4F65EC8] && v18 != *MEMORY[0x1E4F65ED0])
  {
    if (v18 == *MEMORY[0x1E4F65EC0] || v18 == *MEMORY[0x1E4F65EB8])
    {
      id v24 = sub_1AD351F94();
      objc_msgSend(v24, sel_setTextColor_, *(void *)(v1 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryLinkColor));

      id v21 = sub_1AD351F94();
      uint64_t v22 = v21;
      uint64_t v23 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryLinkFont;
      goto LABEL_24;
    }
    if (v18 != *MEMORY[0x1E4F65EB0])
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return;
    }
  }
  id v20 = sub_1AD351F94();
  objc_msgSend(v20, sel_setTextColor_, *(void *)(v1 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryFootnoteColor));

  id v21 = sub_1AD351F94();
  uint64_t v22 = v21;
  uint64_t v23 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryFootnoteFont;
LABEL_24:
  objc_msgSend(v21, sel_setFont_, *(void *)(v1 + v23));
}

uint64_t sub_1AD354F90(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1AD73B810();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  id v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v28 - v9;
  sub_1AD35850C();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[1] = a1;
  sub_1AD73BE00();
  uint64_t v14 = sub_1AD73B970();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1AD358564((uint64_t)v13);
    goto LABEL_7;
  }
  uint64_t v16 = (void *)sub_1AD73B940();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  if (!v16)
  {
LABEL_7:
    id v21 = sub_1AD3520D8();
    objc_msgSend(v21, sel_setHidden_, 1);

    id v22 = sub_1AD3520D8();
    objc_msgSend(v22, sel_setImage_, 0);

    uint64_t v23 = *(void **)(v2
                   + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_iconImageViewWidthConstraint);
    if (v23) {
      objc_msgSend(v23, sel_setActive_, 0);
    }
    goto LABEL_9;
  }
  id v17 = sub_1AD3520D8();
  objc_msgSend(v17, sel_setHidden_, 0);

  id v18 = sub_1AD3520D8();
  objc_msgSend(v18, sel_setImage_, v16);

  id v19 = *(void **)(v2
                 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_iconImageViewWidthConstraint);
  if (v19)
  {
    id v20 = v19;
    objc_msgSend(v20, sel_setActive_, 1);
  }
LABEL_9:
  id v24 = sub_1AD3520D8();
  sub_1AD73BD80();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v25 == *MEMORY[0x1E4F65EC0] || v25 == *MEMORY[0x1E4F65EB8])
  {
    objc_msgSend(v24, sel_setAlpha_, 0.5);

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  else
  {
    objc_msgSend(v24, sel_setAlpha_, 1.0);
    double v26 = *(void (**)(char *, uint64_t))(v5 + 8);
    v26(v8, v4);

    return ((uint64_t (*)(char *, uint64_t))v26)(v10, v4);
  }
}

void sub_1AD355314()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1AD73B810();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73BD80();
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  int v7 = *MEMORY[0x1E4F65EC8];
  id v8 = sub_1AD352188();
  uint64_t v9 = v8;
  if (v6 == v7)
  {
    objc_msgSend(v8, sel_setHidden_, 0);

    objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_disclosureImageViewWidthConstraint), sel_setActive_, 0);
    uint64_t v10 = *(void **)(v1
                   + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_disclosureImageViewTrailingConstraint);
    if (v10)
    {
      uint64_t v11 = qword_1E9A290F0;
      id v12 = v10;
      if (v11 != -1) {
        swift_once();
      }
      objc_msgSend(v12, sel_setConstant_, -*(double *)&qword_1E9A2C8C0);
    }
  }
  else
  {
    objc_msgSend(v8, sel_setHidden_, 1);

    objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_disclosureImageViewWidthConstraint), sel_setActive_, 1);
    uint64_t v13 = *(void **)(v1
                   + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_disclosureImageViewTrailingConstraint);
    if (v13) {
      objc_msgSend(v13, sel_setConstant_, 0.0);
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id sub_1AD355510()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1AD73B810();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = sub_1AD352364();
  uint64_t v7 = sub_1AD73BD90();
  sub_1AD6E6130(v7, v8, 2);

  swift_bridgeObjectRelease();
  sub_1AD73BD80();
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  LODWORD(v6) = *MEMORY[0x1E4F65ED0];
  int v10 = *MEMORY[0x1E4F65EB0];
  id v11 = sub_1AD352364();
  id v12 = v11;
  if (v9 == v6 || v9 == v10)
  {
    objc_msgSend(v11, sel_setHidden_, 0);

    objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelBottomConstraint), sel_setActive_, 0);
    uint64_t v14 = *(void **)(v1
                   + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_bottomAccessoryViewBottomConstraint);
    if (v14) {
      objc_msgSend(v14, sel_setActive_, 1);
    }
    return objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_bottomAccessoryViewHeightConstraint), sel_setActive_, 0);
  }
  else
  {
    objc_msgSend(v11, sel_setHidden_, 1);

    objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelBottomConstraint), sel_setActive_, 1);
    uint64_t v16 = *(void **)(v1
                   + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_bottomAccessoryViewBottomConstraint);
    if (v16) {
      objc_msgSend(v16, sel_setActive_, 0);
    }
    objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_bottomAccessoryViewHeightConstraint), sel_setActive_, 1);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1AD35572C(id a1)
{
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for FeatureStatusPlatformFeedItemView();
  objc_msgSendSuper2(&v12, sel_traitCollectionDidChange_, a1);
  if (a1) {
    a1 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  }
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (!a1)
  {

    return sub_1AD353A4C();
  }
  uint64_t v5 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  uint64_t v7 = v6;
  if (v5 == _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0() && v7 == v8)
  {

    return swift_bridgeObjectRelease_n();
  }
  char v10 = sub_1AD740BC0();

  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
    return sub_1AD353A4C();
  }
  return result;
}

uint64_t sub_1AD3558CC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1AD73B810();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_1AD73BE20();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  objc_super v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD351B78();
  sub_1AD73BD80();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E4F65EC8], v2);
  char v13 = sub_1AD73B800();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v6, v2);
  v14(v8, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v13) {
    char v16 = 2;
  }
  else {
    char v16 = 1;
  }
  *a1 = v16;
  return result;
}

void sub_1AD355AC4()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v0 = sub_1AD73CBA0();
  uint64_t v72 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v64 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1AD73B810();
  uint64_t v77 = *(void **)(v3 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v71 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v64 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v64 - v9;
  uint64_t v11 = sub_1AD73BE20();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v64 - v16;
  sub_1AD351B78();
  if ((sub_1AD73BD70() & 1) != 0 && (HKImproveHealthAndActivityAnalyticsAllowed() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  else
  {
    int v67 = v2;
    uint64_t v66 = v0;
    sub_1AD73BD80();
    uint64_t v18 = *MEMORY[0x1E4F65EC8];
    id v19 = v77;
    uint64_t v76 = v11;
    uint64_t v20 = (uint64_t)v8;
    uint64_t v21 = v3;
    uint64_t v70 = (void (*)(char *, uint64_t, uint64_t))v77[13];
    v70(v8, v18, v3);
    uint64_t v69 = sub_1AD35845C((unint64_t *)&qword_1E9A2AEF8, MEMORY[0x1E4F65ED8]);
    char v22 = sub_1AD73F150();
    uint64_t v23 = (void (*)(char *, uint64_t))v19[1];
    v23(v8, v21);
    uint64_t v73 = v10;
    uint64_t v74 = v23;
    id v24 = v10;
    uint64_t v25 = v21;
    v23(v24, v21);
    double v26 = *(void (**)(char *, char *))(v12 + 16);
    unsigned int v75 = v17;
    double v27 = v17;
    uint64_t v28 = v76;
    v26(v15, v27);
    if (v22)
    {
      uint64_t v29 = v28;
      uint64_t v30 = v28;
      unint64_t v31 = *(void (**)(char *, uint64_t))(v12 + 8);
      v31(v15, v30);
      uint64_t v32 = v29;
LABEL_7:
      v31(v75, v32);
      return;
    }
    double v33 = v73;
    sub_1AD73BD80();
    v70(v8, *MEMORY[0x1E4F65ED0], v21);
    char v34 = sub_1AD73F150();
    id v35 = v74;
    v74((char *)v20, v25);
    v35(v33, v25);
    unint64_t v37 = *(void (**)(char *, uint64_t))(v12 + 8);
    id v36 = (void (*)(char *, uint64_t, uint64_t))(v12 + 8);
    uint64_t v38 = v28;
    uint64_t v39 = v28;
    unint64_t v31 = v37;
    v37(v15, v39);
    if (v34)
    {
      uint64_t v32 = v38;
      goto LABEL_7;
    }
    uint64_t v70 = v36;
    uint64_t v69 = sub_1AD73BDB0();
    uint64_t v65 = v40;
    uint64_t v41 = v73;
    sub_1AD73BD80();
    sub_1AD73BCB0();
    sub_1AD73BCA0();
    char v42 = sub_1AD73BC90();
    uint64_t v78 = 1;
    id v43 = (void (*)(uint64_t, char *, uint64_t))v77[2];
    v43(v20, v41, v25);
    uint64_t v44 = (uint64_t)v71;
    v43((uint64_t)v71, v41, v25);
    HealthChecklistFeatureViewedAnalyticsEvent.init(featureName:source:startState:endState:isIHAEnabled:)((id *)&v78, v20, v44, v42 & 1, (uint64_t *)&v80);
    swift_release();
    v74(v41, v25);
    int v45 = v80;
    uint64_t v46 = v81;
    uint64_t v47 = v82;
    int v48 = v83;
    int v49 = v84;
    uint64_t v77 = v85;
    id v50 = v86;
    id v51 = v67;
    sub_1AD73CB50();
    id v52 = sub_1AD73CB80();
    os_log_type_t v53 = sub_1AD73F940();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = swift_slowAlloc();
      uint64_t v71 = v46;
      uint64_t v55 = v54;
      uint64_t v65 = swift_slowAlloc();
      uint64_t v79 = v65;
      *(_DWORD *)uint64_t v55 = 136446466;
      uint64_t v73 = v50;
      uint64_t v80 = (void *)ObjectType;
      swift_getMetatypeMetadata();
      uint64_t v69 = (uint64_t)v49;
      uint64_t v56 = sub_1AD73F220();
      uint64_t v74 = v31;
      uint64_t v80 = (void *)sub_1AD1F62D4(v56, v57, &v79);
      uint64_t ObjectType = (uint64_t)v45;
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2080;
      swift_beginAccess();
      os_log_type_t v58 = v53;
      uint64_t v59 = qword_1E9A2F290;
      uint64_t v60 = off_1E9A2F298;
      swift_bridgeObjectRetain();
      int v49 = (void *)v69;
      uint64_t v80 = (void *)sub_1AD1F62D4(v59, (unint64_t)v60, &v79);
      int v45 = (void *)ObjectType;
      id v50 = v73;
      sub_1AD7403B0();
      unint64_t v31 = v74;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AD1A4000, v52, v58, "[%{public}s]: Submitting %s analytics event (unavailable)", (uint8_t *)v55, 0x16u);
      uint64_t v61 = v65;
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v61, -1, -1);
      uint64_t v62 = v55;
      uint64_t v46 = v71;
      MEMORY[0x1B3E68450](v62, -1, -1);

      (*(void (**)(char *, uint64_t))(v72 + 8))(v67, v66);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v72 + 8))(v51, v66);
    }
    uint64_t v80 = v45;
    uint64_t v81 = v46;
    uint64_t v82 = v47;
    unint64_t v83 = v48;
    uint64_t v63 = v77;
    uint64_t v84 = v49;
    uint64_t v85 = v77;
    double v86 = v50;
    sub_1AD3584A4();
    sub_1AD73B8E0();
    v31(v75, v76);

    sub_1AD3584F8(v50);
  }
}

void *sub_1AD3562BC()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1AD73CBA0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v44 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = (uint64_t)&v1[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_context];
  swift_beginAccess();
  sub_1AD2DF308(v13, (uint64_t)&v48);
  if (!v49[1])
  {
    sub_1AD353CB0((uint64_t)&v48);
    sub_1AD73CB20();
    uint64_t v25 = sub_1AD73CB80();
    os_log_type_t v26 = sub_1AD73F930();
    if (os_log_type_enabled(v25, v26))
    {
      double v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(void *)&long long v48 = v28;
      *(_DWORD *)double v27 = 136315138;
      uint64_t v29 = sub_1AD740E30();
      v51[0] = sub_1AD1F62D4(v29, v30, (uint64_t *)&v48);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AD1A4000, v25, v26, "%s makePluginActionHandler context is nil", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v28, -1, -1);
      MEMORY[0x1B3E68450](v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    return 0;
  }
  sub_1AD20FE90(&v48, (uint64_t)v51);
  uint64_t v14 = &v1[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_parentViewController];
  swift_beginAccess();
  uint64_t v15 = MEMORY[0x1B3E68580](v14);
  if (!v15)
  {
    sub_1AD73CB20();
    unint64_t v31 = sub_1AD73CB80();
    os_log_type_t v32 = sub_1AD73F930();
    if (os_log_type_enabled(v31, v32))
    {
      double v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(void *)&long long v48 = v34;
      *(_DWORD *)double v33 = 136315138;
      uint64_t v35 = sub_1AD740E30();
      uint64_t v50 = sub_1AD1F62D4(v35, v36, (uint64_t *)&v48);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AD1A4000, v31, v32, "%s makePluginActionHandler parentViewController is nil", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v34, -1, -1);
      MEMORY[0x1B3E68450](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    goto LABEL_20;
  }
  uint64_t v16 = (void *)v15;
  uint64_t v46 = ObjectType;
  sub_1AD1FFE38((uint64_t)v51, (uint64_t)v49);
  *(void *)&long long v48 = v1;
  *((void *)&v48 + 1) = v16;
  uint64_t v17 = v52;
  uint64_t v18 = v53;
  __swift_project_boxed_opaque_existential_1(v51, v52);
  id v19 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v18 + 80);
  uint64_t v20 = v1;
  id v21 = v16;
  uint64_t v22 = v19(&v48, v17, v18);
  if (!v22)
  {
LABEL_16:
    sub_1AD73CB20();
    unint64_t v37 = sub_1AD73CB80();
    os_log_type_t v38 = sub_1AD73F940();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v50 = v40;
      *(_DWORD *)uint64_t v39 = 136315138;
      id v45 = v21;
      uint64_t v41 = sub_1AD740E30();
      uint64_t v47 = sub_1AD1F62D4(v41, v42, &v50);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AD1A4000, v37, v38, "%s makePluginActionHandler actionHandler is nil, legacy subclass is handling action", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v40, -1, -1);
      MEMORY[0x1B3E68450](v39, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
    sub_1AD358408((uint64_t)&v48);
LABEL_20:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    return 0;
  }
  uint64_t v23 = (void *)v22;
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v24 = v23;
  }
  else {
    id v24 = 0;
  }
  if (!v24)
  {

    goto LABEL_16;
  }
  sub_1AD358408((uint64_t)&v48);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  return v24;
}

void sub_1AD35687C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (uint64_t *)&v2[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_baseIdentifier];
  swift_beginAccess();
  uint64_t *v6 = a1;
  v6[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a2)
  {
    uint64_t v7 = (void *)sub_1AD73F180();
    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v7);

    id v8 = sub_1AD351D3C();
    swift_bridgeObjectRetain();
    sub_1AD73F300();
    uint64_t v9 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9);

    sub_1AD356BD8(a1, a2);
    id v10 = sub_1AD351F94();
    swift_bridgeObjectRetain();
    sub_1AD73F300();
    uint64_t v11 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setAccessibilityIdentifier_, v11);

    uint64_t v12 = (char *)sub_1AD352364();
    swift_bridgeObjectRetain();
    sub_1AD73F300();
    uint64_t v14 = a1;
    uint64_t v13 = a2;
    uint64_t v15 = (uint64_t *)&v12[OBJC_IVAR____TtC18HealthExperienceUI22ListStyleAccessoryView_baseIdentifier];
    swift_beginAccess();
    *uint64_t v15 = v14;
    v15[1] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = (void *)sub_1AD73F180();
    objc_msgSend(v12, sel_setAccessibilityIdentifier_, v16);

    uint64_t v17 = (char *)sub_1AD6E58E8();
    swift_bridgeObjectRetain();
    sub_1AD73F300();
    uint64_t v18 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_setAccessibilityIdentifier_, v18, v14, v13);

    swift_bridgeObjectRelease();
  }
  else
  {
    objc_msgSend(v3, sel_setAccessibilityIdentifier_, 0);
    id v19 = sub_1AD351D3C();
    objc_msgSend(v19, sel_setAccessibilityIdentifier_, 0);

    sub_1AD356BD8(a1, 0);
    id v20 = sub_1AD351F94();
    objc_msgSend(v20, sel_setAccessibilityIdentifier_, 0);

    uint64_t v17 = (char *)sub_1AD352364();
    id v21 = (uint64_t *)&v17[OBJC_IVAR____TtC18HealthExperienceUI22ListStyleAccessoryView_baseIdentifier];
    swift_beginAccess();
    uint64_t *v21 = a1;
    v21[1] = 0;
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_setAccessibilityIdentifier_, 0);
    uint64_t v18 = sub_1AD6E58E8();
    objc_msgSend(v18, sel_setAccessibilityIdentifier_, 0);
  }
}

uint64_t sub_1AD356BD8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v6 = sub_1AD351E9C();
    swift_bridgeObjectRetain();
    sub_1AD73F300();
    uint64_t v7 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7);

    id v8 = sub_1AD351E9C();
    id v9 = objc_msgSend(v8, sel_arrangedSubviews);

    sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F880);
    unint64_t v10 = sub_1AD73F4B0();

    unint64_t v47 = MEMORY[0x1E4FBC860];
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1AD7408D0();
      if (v11) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v11)
      {
LABEL_4:
        if (v11 < 1)
        {
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          swift_bridgeObjectRetain();
          uint64_t result = sub_1AD7408D0();
          uint64_t v20 = result;
          if (!result) {
            goto LABEL_45;
          }
          goto LABEL_18;
        }
        uint64_t v12 = 0;
        unint64_t v2 = v10 & 0xC000000000000001;
        do
        {
          if (v2) {
            id v13 = (id)MEMORY[0x1B3E669F0](v12, v10);
          }
          else {
            id v13 = *(id *)(v10 + 8 * v12 + 32);
          }
          uint64_t v14 = v13;
          type metadata accessor for LabelWithIndicatorView();
          uint64_t v15 = swift_dynamicCastClass();
          if (v15)
          {
            uint64_t v3 = (char **)v15;
            MEMORY[0x1B3E657B0]();
            if (*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1AD73F510();
            }
            sub_1AD73F560();
            sub_1AD73F4D0();
          }
          else
          {
          }
          ++v12;
        }
        while (v11 != v12);
        swift_bridgeObjectRelease();
        unint64_t v16 = v47;
LABEL_32:
        swift_bridgeObjectRelease();
        if (v16 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v26 = sub_1AD7408D0();
          if (!v26) {
            return swift_bridgeObjectRelease_n();
          }
        }
        else
        {
          uint64_t v26 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v26) {
            return swift_bridgeObjectRelease_n();
          }
        }
        if (v26 >= 1)
        {
          uint64_t v44 = a1;
          uint64_t v45 = a2;
          uint64_t v27 = 0;
          unint64_t v46 = v16 & 0xC000000000000001;
          unint64_t v28 = v16;
          do
          {
            if (v46) {
              uint64_t v29 = (char *)MEMORY[0x1B3E669F0](v27, v16);
            }
            else {
              uint64_t v29 = (char *)*(id *)(v16 + 8 * v27 + 32);
            }
            unint64_t v30 = v29;
            ++v27;
            swift_bridgeObjectRetain();
            sub_1AD73F300();
            unint64_t v31 = &v30[OBJC_IVAR____TtC18HealthExperienceUI22LabelWithIndicatorView_baseIdentifier];
            swift_beginAccess();
            *(void *)unint64_t v31 = v44;
            *((void *)v31 + 1) = v45;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            os_log_type_t v32 = (void *)sub_1AD73F180();
            objc_msgSend(v30, sel_setAccessibilityIdentifier_, v32);

            id v33 = sub_1AD417960();
            swift_bridgeObjectRetain();
            sub_1AD73F300();
            uint64_t v34 = (void *)sub_1AD73F180();
            swift_bridgeObjectRelease();
            objc_msgSend(v33, sel_setAccessibilityIdentifier_, v34);

            id v35 = sub_1AD417800();
            swift_bridgeObjectRetain();
            sub_1AD73F300();
            unint64_t v36 = (void *)sub_1AD73F180();
            swift_bridgeObjectRelease();
            objc_msgSend(v35, sel_setAccessibilityIdentifier_, v36);

            swift_bridgeObjectRelease();
            unint64_t v16 = v28;
          }
          while (v26 != v27);
          return swift_bridgeObjectRelease_n();
        }
        goto LABEL_43;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v16 = MEMORY[0x1E4FBC860];
    goto LABEL_32;
  }
  id v17 = sub_1AD351E9C();
  uint64_t v3 = &selRef__setupEntryItems;
  objc_msgSend(v17, sel_setAccessibilityIdentifier_, 0);

  id v18 = sub_1AD351E9C();
  id v19 = objc_msgSend(v18, sel_arrangedSubviews);

  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F880);
  unint64_t v2 = sub_1AD73F4B0();

  unint64_t v47 = MEMORY[0x1E4FBC860];
  if (v2 >> 62) {
    goto LABEL_44;
  }
  uint64_t v20 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v20)
  {
LABEL_45:
    swift_bridgeObjectRelease();
    unint64_t v25 = MEMORY[0x1E4FBC860];
    goto LABEL_46;
  }
LABEL_18:
  if (v20 < 1)
  {
    __break(1u);
    goto LABEL_57;
  }
  for (uint64_t i = 0; i != v20; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v23 = (id)MEMORY[0x1B3E669F0](i, v2);
    }
    else {
      id v23 = *(id *)(v2 + 8 * i + 32);
    }
    id v24 = v23;
    type metadata accessor for LabelWithIndicatorView();
    if (swift_dynamicCastClass())
    {
      MEMORY[0x1B3E657B0]();
      if (*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1AD73F510();
      }
      sub_1AD73F560();
      sub_1AD73F4D0();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v25 = v47;
LABEL_46:
  swift_bridgeObjectRelease();
  if (!(v25 >> 62))
  {
    uint64_t v37 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v37) {
      goto LABEL_48;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1AD7408D0();
  uint64_t v37 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_48:
  if (v37 >= 1)
  {
    uint64_t v38 = 0;
    do
    {
      if ((v25 & 0xC000000000000001) != 0) {
        uint64_t v39 = (char *)MEMORY[0x1B3E669F0](v38, v25);
      }
      else {
        uint64_t v39 = (char *)*(id *)(v25 + 8 * v38 + 32);
      }
      uint64_t v40 = v39;
      ++v38;
      uint64_t v41 = &v39[OBJC_IVAR____TtC18HealthExperienceUI22LabelWithIndicatorView_baseIdentifier];
      swift_beginAccess();
      *(void *)uint64_t v41 = 0;
      *((void *)v41 + 1) = 0;
      swift_bridgeObjectRelease();
      objc_msgSend(v40, v3[400], 0);
      id v42 = sub_1AD417960();
      objc_msgSend(v42, v3[400], 0);

      id v43 = sub_1AD417800();
      objc_msgSend(v43, v3[400], 0);
    }
    while (v37 != v38);
    return swift_bridgeObjectRelease_n();
  }
LABEL_57:
  __break(1u);
  return result;
}

id FeatureStatusPlatformFeedItemView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeatureStatusPlatformFeedItemView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1AD357504(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1AD357528()
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_baseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1AD357584(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(*v2 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_baseIdentifier);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1AD3575E8())()
{
  return j_j__swift_endAccess;
}

void sub_1AD357648(char a1)
{
}

void sub_1AD35766C()
{
}

uint64_t sub_1AD357690@<X0>(char *a1@<X8>)
{
  return sub_1AD3558CC(a1);
}

void sub_1AD3576B4()
{
  qword_1E9A2C8C0 = 0x402A000000000000;
}

void sub_1AD3576C4()
{
  qword_1E9A2C8C8 = 0x4026000000000000;
}

void sub_1AD3576D4()
{
  qword_1E9A2C8D0 = 0x4046800000000000;
}

void sub_1AD3576E8()
{
  qword_1E9A2C8D8 = 0x4026000000000000;
}

void sub_1AD3576F8()
{
  qword_1E9A2C8E0 = 0x4010000000000000;
}

void sub_1AD357708()
{
  qword_1E9A2C8E8 = 0x4010000000000000;
}

void sub_1AD357718()
{
  qword_1E9A2C8F0 = 0x4018000000000000;
}

void sub_1AD357728()
{
  qword_1E9A2C8F8 = 0x4020000000000000;
}

void sub_1AD357738()
{
  swift_getObjectType();
  uint64_t v1 = sub_1AD73CBA0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD355AC4();
  uint64_t v5 = sub_1AD3562BC();
  id v6 = &v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_actionHandler];
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_actionHandler];
  *(void *)id v6 = v5;
  *((void *)v6 + 1) = v8;

  sub_1AD73CB20();
  id v9 = v0;
  unint64_t v10 = sub_1AD73CB80();
  os_log_type_t v11 = sub_1AD73F940();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v28 = v26;
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v13 = sub_1AD740E30();
    *(void *)&long long v27 = sub_1AD1F62D4(v13, v14, &v28);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    long long v27 = *(_OWORD *)v6;
    uint64_t v25 = v1;
    uint64_t v15 = (void *)v27;
    sub_1AD208550(0, &qword_1E9A2C9E8, &qword_1E9A2C9F0);
    id v16 = v15;
    uint64_t v17 = sub_1AD73F220();
    *(void *)&long long v27 = sub_1AD1F62D4(v17, v18, &v28);
    sub_1AD7403B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v10, v11, "%s didSelectCell actionHandler: %s", (uint8_t *)v12, 0x16u);
    uint64_t v19 = v26;
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v19, -1, -1);
    MEMORY[0x1B3E68450](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  uint64_t v20 = *(void **)v6;
  if (*(void *)v6)
  {
    uint64_t v21 = *((void *)v6 + 1);
    uint64_t ObjectType = swift_getObjectType();
    id v23 = *(void (**)(uint64_t, uint64_t))(v21 + 16);
    id v24 = v20;
    v23(ObjectType, v21);
  }
}

void sub_1AD357A2C(char a1)
{
  uint64_t v2 = v1;
  if ((a1 & 1) == 0)
  {
    id v11 = *(id *)&v1[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_containerViewBackgroundColor];
LABEL_11:
    objc_msgSend(v2, sel_setBackgroundColor_, v11);

    return;
  }
  uint64_t v3 = (uint64_t)&v1[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_context];
  swift_beginAccess();
  sub_1AD2DF308(v3, (uint64_t)v14);
  uint64_t v4 = v15;
  if (v15)
  {
    uint64_t v5 = v16;
    id v6 = __swift_project_boxed_opaque_existential_1(v14, v15);
    uint64_t v7 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v6);
    id v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 40))(&v13, v4, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
    if (v13 - 6 < 2)
    {
      id v10 = sub_1AD2E8D38();
    }
    else if (v13 == 4 || v13 == 12)
    {
      id v10 = sub_1AD2E8EC4();
    }
    else
    {
      id v10 = objc_msgSend(self, sel_systemGray5Color);
    }
    id v11 = v10;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    goto LABEL_11;
  }
  __break(1u);
}

void _s18HealthExperienceUI33FeatureStatusPlatformFeedItemViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_baseIdentifier];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v2 = &v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_actionHandler];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_context];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  uint64_t v4 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_containerViewBackgroundColor;
  uint64_t v5 = self;
  *(void *)&v0[v4] = objc_msgSend(v5, sel_secondarySystemGroupedBackgroundColor);
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___primaryDescriptionStackView] = 0;
  uint64_t v6 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryFootnoteColor;
  *(void *)&v0[v6] = objc_msgSend(v5, sel_secondaryLabelColor);
  uint64_t v7 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryFootnoteFont;
  *(void *)&v0[v7] = sub_1AD1F454C((void *)*MEMORY[0x1E4FB28F0], 0, 1, 2, 0, 0, 1);
  uint64_t v8 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryLinkColor;
  *(void *)&v0[v8] = objc_msgSend(v5, sel_systemBlueColor);
  uint64_t v9 = OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryLinkFont;
  *(void *)&v0[v9] = sub_1AD1F454C((void *)*MEMORY[0x1E4FB2950], 0, 1, 0, 0, 0, 1);
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___secondaryDescriptionLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___iconImageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___disclosureImageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView____lazy_storage___bottomAccessoryView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_iconImageViewWidthConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_iconImageViewLeadingConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_disclosureImageViewWidthConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_disclosureImageViewTrailingConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelLeadingConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelTopConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_titleLabelTrailingConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_primaryDescriptionStackViewHeightConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_primaryDescriptionStackViewTopSpacingConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelHeightConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelTopSpacingConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_secondaryDescriptionLabelBottomConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_bottomAccessoryViewHeightConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_bottomAccessoryViewBottomConstraint] = 0;

  sub_1AD7408B0();
  __break(1u);
}

uint64_t type metadata accessor for FeatureStatusPlatformFeedItemView()
{
  return self;
}

uint64_t sub_1AD357EB0()
{
  return sub_1AD35845C(&qword_1EB73CB08, MEMORY[0x1E4F66090]);
}

uint64_t sub_1AD357EF8()
{
  return sub_1AD35845C(&qword_1EB73CB00, MEMORY[0x1E4F66090]);
}

uint64_t sub_1AD357F40@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_baseIdentifier);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD357F9C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_parentViewController;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1B3E68580](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1AD357FF4()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1AD35804C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18HealthExperienceUI33FeatureStatusPlatformFeedItemView_context;
  swift_beginAccess();
  return sub_1AD2DF308(v3, a2);
}

uint64_t method lookup function for FeatureStatusPlatformFeedItemView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeatureStatusPlatformFeedItemView);
}

uint64_t dispatch thunk of FeatureStatusPlatformFeedItemView.baseIdentifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of FeatureStatusPlatformFeedItemView.baseIdentifier.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of FeatureStatusPlatformFeedItemView.baseIdentifier.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of FeatureStatusPlatformFeedItemView.parentViewController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of FeatureStatusPlatformFeedItemView.parentViewController.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of FeatureStatusPlatformFeedItemView.parentViewController.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of FeatureStatusPlatformFeedItemView.context.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of FeatureStatusPlatformFeedItemView.context.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of FeatureStatusPlatformFeedItemView.context.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of FeatureStatusPlatformFeedItemView.updateView()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3D0))();
}

uint64_t dispatch thunk of FeatureStatusPlatformFeedItemView.setHighlighted(_:animated:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x410))();
}

uint64_t dispatch thunk of FeatureStatusPlatformFeedItemView.deselectionBehavior.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x418))();
}

uint64_t dispatch thunk of FeatureStatusPlatformFeedItemView.didSelectCell(_:in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x420))();
}

uint64_t dispatch thunk of FeatureStatusPlatformFeedItemView.updateAutomationIdentifiers(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x430))();
}

uint64_t sub_1AD358408(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AD35845C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AD3584A4()
{
  unint64_t result = qword_1E9A2C9F8;
  if (!qword_1E9A2C9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2C9F8);
  }
  return result;
}

void sub_1AD3584F8(id a1)
{
  if ((char *)a1 - 1 >= (char *)3) {
}
  }

void sub_1AD35850C()
{
  if (!qword_1EB740380[0])
  {
    sub_1AD73B970();
    unint64_t v0 = sub_1AD740340();
    if (!v1) {
      atomic_store(v0, qword_1EB740380);
    }
  }
}

uint64_t sub_1AD358564(uint64_t a1)
{
  sub_1AD35850C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL static RootNavigationMode.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t RootNavigationMode.hash(into:)()
{
  return sub_1AD740D00();
}

uint64_t RootNavigationMode.hashValue.getter()
{
  return sub_1AD740D40();
}

uint64_t static TraitRootNavigationMode.defaultValue.getter()
{
  return byte_1EB73E670;
}

uint64_t static TraitRootNavigationMode.defaultValue.setter(char a1)
{
  char v1 = a1 & 1;
  uint64_t result = swift_beginAccess();
  byte_1EB73E670 = v1;
  return result;
}

uint64_t (*static TraitRootNavigationMode.defaultValue.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t static TraitRootNavigationMode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v0 = qword_1E9A2CA00;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static TraitRootNavigationMode.identifier.setter(uint64_t a1, void *a2)
{
  qword_1E9A2CA00 = a1;
  off_1E9A2CA08 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static TraitRootNavigationMode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1AD35882C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = byte_1EB73E670;
  return result;
}

uint64_t sub_1AD358878()
{
  swift_beginAccess();
  uint64_t v0 = qword_1E9A2CA00;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t UIMutableTraits.rootNavigationMode.getter()
{
  sub_1AD358938();
  sub_1AD73CCF0();
  return v1;
}

unint64_t sub_1AD358938()
{
  unint64_t result = qword_1EB73A4C8;
  if (!qword_1EB73A4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB73A4C8);
  }
  return result;
}

uint64_t UIMutableTraits.rootNavigationMode.setter()
{
  return sub_1AD73CD00();
}

uint64_t (*UIMutableTraits.rootNavigationMode.modify(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = v3;
  *(void *)a1 = a2;
  sub_1AD358938();
  sub_1AD73CCF0();
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a1 + 24);
  return sub_1AD358A78;
}

uint64_t sub_1AD358A78(uint64_t a1)
{
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a1 + 25);
  sub_1AD358938();
  return sub_1AD73CD00();
}

uint64_t UITraitCollection.rootNavigationMode.getter()
{
  sub_1AD358938();
  sub_1AD73FCA0();
  return v1;
}

unint64_t sub_1AD358B14()
{
  unint64_t result = qword_1EB738798;
  if (!qword_1EB738798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB738798);
  }
  return result;
}

uint64_t sub_1AD358B68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = UIMutableTraits.rootNavigationMode.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1AD358B9C()
{
  return UIMutableTraits.rootNavigationMode.setter();
}

uint64_t sub_1AD358BCC()
{
  return 16;
}

__n128 sub_1AD358BD8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

unsigned char *storeEnumTagSinglePayload for RootNavigationMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AD358CB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RootNavigationMode()
{
  return &type metadata for RootNavigationMode;
}

ValueMetadata *type metadata accessor for TraitRootNavigationMode()
{
  return &type metadata for TraitRootNavigationMode;
}

NSObject *HKTAlertDetailFactory.makeViewController(hkType:context:)(void *a1, NSObject *a2)
{
  id v4 = objc_msgSend(a1, sel_identifier);
  uint64_t v5 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  uint64_t v7 = v6;

  if (v5 == 0xD00000000000002ALL && v7 == 0x80000001AD7793F0
    || (sub_1AD740BC0() & 1) != 0
    || v5 == 0xD000000000000029 && v7 == 0x80000001AD779420
    || (sub_1AD740BC0() & 1) != 0
    || v5 == 0xD000000000000031 && v7 == 0x80000001AD779450
    || (sub_1AD740BC0() & 1) != 0
    || v5 == 0xD00000000000002ALL && v7 == 0x80000001AD779490
    || (sub_1AD740BC0() & 1) != 0
    || v5 == 0xD000000000000033 && v7 == 0x80000001AD7794C0
    || (sub_1AD740BC0() & 1) != 0
    || v5 == 0xD00000000000002DLL && v7 == 0x80000001AD779500
    || (sub_1AD740BC0() & 1) != 0
    || v5 == 0xD000000000000033 && v7 == 0x80000001AD779530
    || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return HKTDataTypeDetailFactory.makeViewController(hkType:context:)(a1, a2);
  }
  if (v5 == 0xD000000000000038 && v7 == 0x80000001AD779570
    || (sub_1AD740BC0() & 1) != 0
    || v5 == 0xD000000000000031 && v7 == 0x80000001AD7795B0
    || (sub_1AD740BC0() & 1) != 0
    || v5 == 0xD000000000000030 && v7 == 0x80000001AD7795F0
    || (sub_1AD740BC0() & 1) != 0
    || v5 == 0xD000000000000031 && v7 == 0x80000001AD779630
    || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = 0xD000000000000025;
    id v10 = "MenstrualCyclesAppPlugin.healthplugin";
    return sub_1AD2D956C((uint64_t)a1, v9, (unint64_t)(v10 - 32) | 0x8000000000000000, a2);
  }
  if (v5 == 0xD000000000000027 && v7 == 0x80000001AD779670)
  {
    swift_bridgeObjectRelease();
LABEL_44:
    uint64_t v9 = 0xD000000000000021;
    id v10 = "SleepHealthAppPlugin.healthplugin";
    return sub_1AD2D956C((uint64_t)a1, v9, (unint64_t)(v10 - 32) | 0x8000000000000000, a2);
  }
  char v11 = sub_1AD740BC0();
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_44;
  }
  sub_1AD2D9C24();
  swift_allocError();
  *(void *)uint64_t v12 = 0;
  *(void *)(v12 + 8) = 0;
  *(unsigned char *)(v12 + 16) = 2;
  return swift_willThrow();
}

ValueMetadata *type metadata accessor for HKTAlertDetailFactory()
{
  return &type metadata for HKTAlertDetailFactory;
}

double static CameraScannerOverlayWithButtonsViewController.Constants.fixedImageSizeVerticalOffsetFromCenterAmount.getter()
{
  return -90.0;
}

uint64_t sub_1AD359170@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  int v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_actionHandler);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1AD35B704;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_1AD21485C(v4);
}

uint64_t sub_1AD359210(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1AD35B714;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_actionHandler);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1AD21485C(v3);
  return sub_1AD1E4514(v8);
}

uint64_t sub_1AD3592D8()
{
  return sub_1AD3594C0(&OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_actionHandler);
}

uint64_t sub_1AD3592E4(uint64_t a1, uint64_t a2)
{
  return sub_1AD359524(a1, a2, &OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_actionHandler);
}

uint64_t (*sub_1AD3592F0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1AD35934C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_cancelHandler);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1AD33AD54;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_1AD21485C(v4);
}

uint64_t sub_1AD3593EC(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1AD35B5AC;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_cancelHandler);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1AD21485C(v3);
  return sub_1AD1E4514(v8);
}

uint64_t sub_1AD3594B4()
{
  return sub_1AD3594C0(&OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_cancelHandler);
}

uint64_t sub_1AD3594C0(void *a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  uint64_t v3 = *v2;
  sub_1AD21485C(*v2);
  return v3;
}

uint64_t sub_1AD359518(uint64_t a1, uint64_t a2)
{
  return sub_1AD359524(a1, a2, &OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_cancelHandler);
}

uint64_t sub_1AD359524(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (uint64_t *)(v3 + *a3);
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t *v6 = a1;
  v6[1] = a2;
  return sub_1AD1E4514(v7);
}

uint64_t (*sub_1AD359580())()
{
  return j_j__swift_endAccess;
}

id sub_1AD3595DC(unsigned __int8 *a1, uint64_t *a2)
{
  int v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v4 = (unsigned char *)(*a2
               + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_showsBackground);
  swift_beginAccess();
  unsigned char *v4 = v2;
  uint64_t v5 = (id *)(v3 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_overlayView);
  swift_beginAccess();
  return objc_msgSend(*v5, sel_setHidden_, v2 ^ 1u);
}

uint64_t sub_1AD359668()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_showsBackground);
  swift_beginAccess();
  return *v1;
}

id sub_1AD3596B0(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_showsBackground);
  swift_beginAccess();
  unsigned char *v3 = a1;
  uint64_t v4 = (id *)(v1 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_overlayView);
  swift_beginAccess();
  return objc_msgSend(*v4, sel_setHidden_, (a1 & 1) == 0);
}

void (*sub_1AD35973C(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_showsBackground;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1AD3597A8;
}

void sub_1AD3597A8(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = (unsigned char *)(v4 + v3[4]);
    uint64_t v6 = (id *)(v4 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_overlayView);
    swift_beginAccess();
    objc_msgSend(*v6, sel_setHidden_, (*v5 & 1) == 0);
  }
  free(v3);
}

id sub_1AD359838()
{
  id result = *(id *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_primaryButton);
  if (result) {
    return objc_msgSend(result, sel_isUserInteractionEnabled);
  }
  return result;
}

id sub_1AD359868(id result)
{
  uint64_t v2 = OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_primaryButton;
  if (*(void *)(v1 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_primaryButton))
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_primaryButton), sel_setUserInteractionEnabled_, result & 1);
    id result = *(id *)(v1 + v2);
    if (result)
    {
      return objc_msgSend(result, sel_setNeedsUpdateConfiguration);
    }
  }
  return result;
}

id (*sub_1AD3598D4(uint64_t a1))(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_primaryButton;
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(v1 + v3);
  if (v4) {
    LOBYTE(v4) = objc_msgSend(v4, sel_isUserInteractionEnabled);
  }
  *(unsigned char *)(a1 + 16) = (_BYTE)v4;
  return sub_1AD359940;
}

id sub_1AD359940(void *a1)
{
  uint64_t v1 = (unsigned __int8 *)(a1 + 2);
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  id result = *(id *)(*a1 + v2);
  if (result)
  {
    objc_msgSend(result, sel_setUserInteractionEnabled_, *v1);
    id result = *(id *)(v3 + v2);
    if (result)
    {
      return objc_msgSend(result, sel_setNeedsUpdateConfiguration);
    }
  }
  return result;
}

void sub_1AD3599A8(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_overlayView);
  swift_beginAccess();
  uint64_t v4 = *v3;
  void *v3 = v2;
  id v5 = v2;
}

id sub_1AD359A0C()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_overlayView);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void sub_1AD359A64(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_overlayView);
  swift_beginAccess();
  uint64_t v4 = *v3;
  void *v3 = a1;
}

uint64_t (*sub_1AD359AB8())()
{
  return j__swift_endAccess;
}

id CameraScannerOverlayWithButtonsViewController.__allocating_init(title:detail:detailMaxNumberOfLines:primaryButtonTitle:primaryButtonImage:cancelButtonTitle:headerView:headerHeight:overlayMode:automationIdentifierPrefix:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, double a9, long long a10, long long a11, uint64_t a12, uint64_t a13)
{
  id v22 = objc_allocWithZone(v13);
  return CameraScannerOverlayWithButtonsViewController.init(title:detail:detailMaxNumberOfLines:primaryButtonTitle:primaryButtonImage:cancelButtonTitle:headerView:headerHeight:overlayMode:automationIdentifierPrefix:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, *((uint64_t *)&a10 + 1), (void *)a11, *((uint64_t **)&a11 + 1), a12, a13);
}

id CameraScannerOverlayWithButtonsViewController.init(title:detail:detailMaxNumberOfLines:primaryButtonTitle:primaryButtonImage:cancelButtonTitle:headerView:headerHeight:overlayMode:automationIdentifierPrefix:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, double a9, uint64_t a10, uint64_t a11, void *a12, uint64_t *a13, uint64_t a14, uint64_t a15)
{
  uint64_t v17 = *a13;
  char v18 = *((unsigned char *)a13 + 8);
  *(void *)&v15[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_primaryButton] = 0;
  *(void *)&v15[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_cancelButton] = 0;
  *(void *)&v15[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_topPaddingConstraint] = 0;
  *(void *)&v15[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_customContentView] = 0;
  uint64_t v19 = &v15[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_actionHandler];
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v20 = &v15[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_cancelHandler];
  *uint64_t v20 = 0;
  v20[1] = 0;
  v15[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_showsBackground] = 1;
  uint64_t v21 = &v15[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_primaryButtonTitle];
  void *v21 = a6;
  v21[1] = a7;
  *(void *)&v15[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_primaryButtonImage] = a8;
  id v22 = &v15[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_cancelButtonTitle];
  void *v22 = a10;
  v22[1] = a11;
  *(void *)&v15[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_contentHeaderView] = a12;
  *(double *)&v15[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_contentHeaderHeight] = a9;
  id v23 = &v15[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_titleText];
  *id v23 = a1;
  v23[1] = a2;
  id v24 = &v15[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_detailText];
  void *v24 = a3;
  v24[1] = a4;
  *(void *)&v15[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_detailMaxNumberOfLines] = a5;
  uint64_t v25 = &v15[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_automationIdentifierPrefix];
  *uint64_t v25 = a14;
  v25[1] = a15;
  uint64_t v46 = v17;
  char v47 = v18;
  id v26 = a12;
  long long v27 = v15;
  id v28 = a8;
  CameraScannerOverlayMode.createView()(v29);
  *(void *)&v27[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_overlayView] = v30;

  unint64_t v31 = (void *)sub_1AD73F180();
  v45.receiver = v27;
  v45.super_class = (Class)type metadata accessor for CameraScannerOverlayWithButtonsViewController();
  id v32 = objc_msgSendSuper2(&v45, sel_initWithTitle_detailText_icon_contentLayout_, v31, 0, 0, 2);

  id v33 = v32;
  sub_1AD35AAC8();
  sub_1AD1B536C(0, (unint64_t *)&qword_1EB73C360, (uint64_t (*)(uint64_t))sub_1AD222468, MEMORY[0x1E4FBBE00]);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1AD74C370;
  uint64_t v35 = sub_1AD73D540();
  uint64_t v36 = MEMORY[0x1E4FB1138];
  *(void *)(v34 + 32) = v35;
  *(void *)(v34 + 40) = v36;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1AD267CB8();
  id v37 = v33;
  sub_1AD73FB70();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  id result = objc_msgSend(v37, sel_view);
  if (result)
  {
    uint64_t v39 = result;
    uint64_t v40 = self;
    id v41 = objc_msgSend(v40, sel_clearColor);
    objc_msgSend(v39, sel_setBackgroundColor_, v41);

    id v42 = objc_msgSend(v37, sel_contentView);
    id v43 = objc_msgSend(v40, sel_clearColor);
    objc_msgSend(v42, sel_setBackgroundColor_, v43);

    id v44 = v37;
    objc_msgSend(v44, sel_setOverrideUserInterfaceStyle_, 2);

    return v44;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for CameraScannerOverlayWithButtonsViewController()
{
  return self;
}

void sub_1AD359F74(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1B3E68580](v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    if (a2)
    {
      id v7 = a2;
      id v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);
      id v9 = objc_msgSend(self, sel_currentTraitCollection);
      id v10 = objc_msgSend(v9, sel_preferredContentSizeCategory);

      uint64_t v11 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
      uint64_t v13 = v12;
      if (v11 == _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0() && v13 == v14)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v16 = sub_1AD740BC0();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0) {
          sub_1AD35AAC8();
        }
      }

      uint64_t v6 = v7;
    }
  }
}

id sub_1AD35A0C4()
{
  sub_1AD35A9A0();
  uint64_t v1 = (id *)&v0[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_overlayView];
  swift_beginAccess();
  objc_msgSend(*v1, sel_removeFromSuperview);
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v3 = result;
    objc_msgSend(result, sel_insertSubview_atIndex_, *v1, 0);

    id v4 = *v1;
    id result = objc_msgSend(v0, sel_view);
    if (result)
    {
      uint64_t v5 = result;
      objc_msgSend(result, sel_bounds);
      double v7 = v6;
      double v9 = v8;
      double v11 = v10;
      double v13 = v12;

      objc_msgSend(v4, sel_setFrame_, v7, v9, v11, v13);
      sub_1AD35A534();
      v14.receiver = v0;
      v14.super_class = (Class)type metadata accessor for CameraScannerOverlayWithButtonsViewController();
      return objc_msgSendSuper2(&v14, sel_viewDidLoad);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AD35A2A0(void *a1, const char *a2)
{
  uint64_t v5 = v2;
  swift_getObjectType();
  uint64_t v6 = sub_1AD73CBA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  double v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = (void (**)(uint64_t))(v5 + *a1);
  swift_beginAccess();
  double v11 = *v10;
  if (*v10)
  {
    swift_retain();
    v11(v5);
    return sub_1AD1E4514((uint64_t)v11);
  }
  else
  {
    sub_1AD73CAF0();
    double v13 = sub_1AD73CB80();
    os_log_type_t v14 = sub_1AD73F920();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      v20[0] = a2;
      uint64_t v17 = v16;
      uint64_t v21 = v16;
      *(_DWORD *)uint64_t v15 = 136446210;
      uint64_t v18 = sub_1AD740E30();
      v20[1] = (const char *)sub_1AD1F62D4(v18, v19, &v21);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AD1A4000, v13, v14, v20[0], v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v17, -1, -1);
      MEMORY[0x1B3E68450](v15, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1AD35A534()
{
  uint64_t v1 = v0;
  sub_1AD1B536C(0, (unint64_t *)&qword_1EB732830, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v35 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v32 - v5;
  uint64_t v7 = (void *)sub_1AD73F180();
  sub_1AD1E4524();
  uint64_t v8 = swift_allocObject();
  long long v34 = xmmword_1AD74C350;
  *(_OWORD *)(v8 + 16) = xmmword_1AD74C350;
  uint64_t v10 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_automationIdentifierPrefix];
  uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_automationIdentifierPrefix
                    + 8];
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v9;
  strcpy((char *)(v8 + 48), "PrimaryButton");
  *(_WORD *)(v8 + 62) = -4864;
  swift_bridgeObjectRetain();
  double v11 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  id v12 = (id)HKUIJoinStringsForAutomationIdentifier();

  id v13 = objc_msgSend(v1, sel_hxui_addPrimaryFooterButtonWithTitle_accessibilityIdentifier_, v7, v12);
  id v14 = v13;
  sub_1AD740260();

  uint64_t v15 = sub_1AD740240();
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  if (!v16(v6, 1, v15))
  {
    id v17 = objc_msgSend(self, sel_tintColor);
    sub_1AD7401A0();
  }
  if (!v16(v6, 1, v15))
  {
    id v18 = objc_msgSend(self, sel_whiteColor);
    id v33 = v1;
    uint64_t v19 = sub_1AD7400C0();
    uint64_t v32 = v10;
    uint64_t v20 = (void (*)(char *, void))v19;
    uint64_t v1 = v33;
    sub_1AD73CE00();
    v20(v36, 0);
    uint64_t v10 = v32;
  }
  if (!v16(v6, 1, v15))
  {
    id v21 = *(id *)&v1[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_primaryButtonImage];
    sub_1AD7401F0();
  }
  if (!v16(v6, 1, v15)) {
    sub_1AD740150();
  }
  sub_1AD35B5E4((uint64_t)v6, v35);
  id v22 = v14;
  sub_1AD740270();

  id v23 = *(void **)&v1[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_primaryButton];
  *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_primaryButton] = v22;
  id v24 = v22;

  if (*(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_cancelButtonTitle
                    + 8])
  {
    uint64_t v25 = (void *)sub_1AD73F180();
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = v34;
    *(void *)(v26 + 32) = v10;
    *(void *)(v26 + 40) = v9;
    strcpy((char *)(v26 + 48), "CancelButton");
    *(unsigned char *)(v26 + 61) = 0;
    *(_WORD *)(v26 + 62) = -5120;
    swift_bridgeObjectRetain();
    long long v27 = (void *)sub_1AD73F490();
    swift_bridgeObjectRelease();
    id v28 = (id)HKUIJoinStringsForAutomationIdentifier();

    id v29 = objc_msgSend(v1, sel_hxui_addSecondaryFooterButtonWithTitle_bold_accessibilityIdentifier_, v25, 0, v28);
    uint64_t v30 = *(void **)&v1[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_cancelButton];
    *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_cancelButton] = v29;

    id v24 = v30;
  }

  return sub_1AD35B678((uint64_t)v6);
}

void sub_1AD35A9A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_titleText];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_titleText];
  uint64_t v4 = *((void *)v2 + 1);
  uint64_t v5 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_detailMaxNumberOfLines];
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_contentHeaderView];
  double v7 = *(double *)&v1[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_contentHeaderHeight];
  uint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_detailText];
  uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_detailText + 8];
  uint64_t v10 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_automationIdentifierPrefix];
  uint64_t v11 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_automationIdentifierPrefix
                     + 8];
  id v12 = objc_allocWithZone((Class)type metadata accessor for CameraScannerOverlayContentView());
  id v13 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v14 = CameraScannerOverlayContentView.init(title:detail:detailMaxNumberOfLines:headerView:headerHeight:automationIdentifierPrefix:)(v3, v4, v8, v9, v5, v6, v10, v11, v7);
  objc_msgSend(v1, sel_setCenteredContentView_, v14);
}

void sub_1AD35AAC8()
{
  id v1 = objc_msgSend(self, sel_currentTraitCollection);
  id v2 = objc_msgSend(v1, sel_preferredContentSizeCategory);

  sub_1AD73FE60();
  id v3 = objc_msgSend(v0, sel_headerView);
  id v4 = (id)sub_1AD73F180();
  objc_msgSend(v3, sel_setTitle_);
}

uint64_t sub_1AD35ABBC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1AD35ABF4(uint64_t a1, void *a2)
{
  sub_1AD359F74(a1, a2, v2);
}

id CameraScannerOverlayWithButtonsViewController.__allocating_init(title:detailText:symbolName:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  id v12 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    id v13 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    id v14 = 0;
    goto LABEL_6;
  }
  id v13 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  id v14 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
LABEL_6:
  id v15 = objc_msgSend(objc_allocWithZone(v8), sel_initWithTitle_detailText_symbolName_contentLayout_, v12, v13, v14, a7);

  return v15;
}

void CameraScannerOverlayWithButtonsViewController.init(title:detailText:symbolName:contentLayout:)()
{
}

id CameraScannerOverlayWithButtonsViewController.__allocating_init(title:detailText:icon:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  double v7 = v6;
  uint64_t v11 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  if (a4)
  {
    id v12 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v12 = 0;
  }
  id v13 = objc_msgSend(objc_allocWithZone(v7), sel_initWithTitle_detailText_icon_contentLayout_, v11, v12, a5, a6);

  return v13;
}

void CameraScannerOverlayWithButtonsViewController.init(title:detailText:icon:contentLayout:)()
{
}

id CameraScannerOverlayWithButtonsViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CameraScannerOverlayWithButtonsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t (*sub_1AD35AFB4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1AD35B020@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = (unsigned char *)(*a1
               + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_showsBackground);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

id sub_1AD35B078@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = *(id *)(*a1
                 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_primaryButton);
  if (result) {
    id result = objc_msgSend(result, sel_isUserInteractionEnabled);
  }
  *a2 = (_BYTE)result;
  return result;
}

id sub_1AD35B0BC(unsigned __int8 *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_primaryButton;
  id result = *(id *)(*a2
                 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_primaryButton);
  if (result)
  {
    objc_msgSend(result, sel_setUserInteractionEnabled_, *a1);
    id result = *(id *)(v3 + v4);
    if (result)
    {
      return objc_msgSend(result, sel_setNeedsUpdateConfiguration);
    }
  }
  return result;
}

id sub_1AD35B12C@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____TtC18HealthExperienceUI45CameraScannerOverlayWithButtonsViewController_overlayView);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for CameraScannerOverlayWithButtonsViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CameraScannerOverlayWithButtonsViewController);
}

uint64_t dispatch thunk of CameraScannerOverlayWithButtonsViewController.actionHandler.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of CameraScannerOverlayWithButtonsViewController.actionHandler.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of CameraScannerOverlayWithButtonsViewController.actionHandler.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of CameraScannerOverlayWithButtonsViewController.cancelHandler.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of CameraScannerOverlayWithButtonsViewController.cancelHandler.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of CameraScannerOverlayWithButtonsViewController.cancelHandler.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of CameraScannerOverlayWithButtonsViewController.showsBackground.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of CameraScannerOverlayWithButtonsViewController.showsBackground.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of CameraScannerOverlayWithButtonsViewController.showsBackground.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of CameraScannerOverlayWithButtonsViewController.primaryButtonEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of CameraScannerOverlayWithButtonsViewController.primaryButtonEnabled.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of CameraScannerOverlayWithButtonsViewController.primaryButtonEnabled.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of CameraScannerOverlayWithButtonsViewController.overlayView.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of CameraScannerOverlayWithButtonsViewController.overlayView.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of CameraScannerOverlayWithButtonsViewController.overlayView.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of CameraScannerOverlayWithButtonsViewController.__allocating_init(title:detail:detailMaxNumberOfLines:primaryButtonTitle:primaryButtonImage:cancelButtonTitle:headerView:headerHeight:overlayMode:automationIdentifierPrefix:)()
{
  return (*(uint64_t (**)(void))(v0 + 432))();
}

ValueMetadata *type metadata accessor for CameraScannerOverlayWithButtonsViewController.Constants()
{
  return &type metadata for CameraScannerOverlayWithButtonsViewController.Constants;
}

uint64_t sub_1AD35B574()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD35B5AC(uint64_t a1)
{
  objc_super v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_1AD35B5E4(uint64_t a1, uint64_t a2)
{
  sub_1AD1B536C(0, (unint64_t *)&qword_1EB732830, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD35B678(uint64_t a1)
{
  sub_1AD1B536C(0, (unint64_t *)&qword_1EB732830, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SummarySharingOnboardingError.init(error:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (!a1) {
    goto LABEL_10;
  }
  id v4 = a1;
  id v5 = a1;
  unsigned int v6 = MEMORY[0x1B3E619B0](a1);
  if (v6 > 4 || ((1 << v6) & 0x13) == 0)
  {

    id v8 = a1;
    sub_1AD2196B8(0, (unint64_t *)&qword_1EB7414A0);
    type metadata accessor for HKError(0);
    if (swift_dynamicCast())
    {
      sub_1AD35B904();
      uint64_t v9 = sub_1AD73A310();

      *a2 = v9;
      type metadata accessor for SummarySharingOnboardingError();
      return swift_storeEnumTagMultiPayload();
    }

LABEL_10:
    type metadata accessor for SummarySharingOnboardingError();
    return swift_storeEnumTagMultiPayload();
  }
  char v7 = MEMORY[0x1B3E619B0](a1);

  *(unsigned char *)a2 = v7;
  sub_1AD73B6C0();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SummarySharingOnboardingError();
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for SummarySharingOnboardingError()
{
  uint64_t result = qword_1E9A2CB88;
  if (!qword_1E9A2CB88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1AD35B904()
{
  unint64_t result = qword_1E9A2A2B8;
  if (!qword_1E9A2A2B8)
  {
    type metadata accessor for HKError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2A2B8);
  }
  return result;
}

void sub_1AD35B95C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v70 = a7;
  uint64_t v71 = a8;
  unint64_t v69 = a6;
  uint64_t v73 = a1;
  uint64_t v13 = sub_1AD73B6C0();
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  id v18 = (char *)&v64 - v17;
  uint64_t v19 = type metadata accessor for SummarySharingOnboardingError();
  MEMORY[0x1F4188790](v19);
  id v21 = (unint64_t *)((char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v72 = v8;
  sub_1AD35FDEC(v8, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for SummarySharingOnboardingError);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (*v21 != 730) {
        goto LABEL_2;
      }
      uint64_t v30 = v73;
      uint64_t v78 = v73;
      sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F7E0);
      sub_1AD2196B8(0, &qword_1E9A2CB98);
      id v31 = v30;
      if (swift_dynamicCast())
      {
        uint64_t v32 = *__swift_project_boxed_opaque_existential_1(&v79, *((uint64_t *)&v80 + 1)) + qword_1E9A31638;
        long long aBlock = *(_OWORD *)v32;
        long long v75 = *(_OWORD *)(v32 + 16);
        uint64_t v76 = *(uint64_t (**)())(v32 + 32);
        uint64_t v33 = sub_1AD4A1548();
        uint64_t v35 = v34;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
        if (qword_1EB732818 != -1) {
          swift_once();
        }
        sub_1AD73A1D0();
        sub_1AD21E028(0, (unint64_t *)&qword_1EB73F8F0, (unint64_t *)&qword_1EB73F910, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = xmmword_1AD74C370;
        *(void *)(v36 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v36 + 64) = sub_1AD21FDC0();
        *(void *)(v36 + 32) = v33;
        *(void *)(v36 + 40) = v35;
        uint64_t v37 = sub_1AD73F190();
        uint64_t v39 = v38;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v81 = 0;
        long long v79 = 0u;
        long long v80 = 0u;
        sub_1AD360814((uint64_t)&v79);
        if (qword_1EB732818 != -1) {
          swift_once();
        }
        uint64_t v37 = sub_1AD73A1D0();
        uint64_t v39 = v61;
      }
      if (qword_1EB732818 != -1) {
        swift_once();
      }
      uint64_t v62 = sub_1AD73A1D0();
      sub_1AD2B6A34(v31, v37, v39, v62, v63, MEMORY[0x1E4FBC860], 0, 0);
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2u:
      sub_1AD35D40C(v73, *v21, v70, v71);
      break;
    case 3u:
      sub_1AD2B6A34(v73, a2, a3, a4, a5, v69, v70, v71);
      break;
    case 4u:
      unint64_t v41 = *v21;
      unint64_t v40 = v21[1];
      if (qword_1EB732818 != -1) {
        swift_once();
      }
      sub_1AD73A1D0();
      sub_1AD21E028(0, (unint64_t *)&qword_1EB73F8F0, (unint64_t *)&qword_1EB73F910, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v42 = swift_allocObject();
      long long v66 = xmmword_1AD74C370;
      *(_OWORD *)(v42 + 16) = xmmword_1AD74C370;
      uint64_t v43 = MEMORY[0x1E4FBB1A0];
      *(void *)(v42 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v44 = sub_1AD21FDC0();
      *(void *)(v42 + 64) = v44;
      *(void *)(v42 + 32) = v41;
      *(void *)(v42 + 40) = v40;
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_1AD73F190();
      uint64_t v68 = v45;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AD73A1D0();
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = v66;
      *(void *)(v46 + 56) = v43;
      *(void *)(v46 + 64) = v44;
      *(void *)(v46 + 32) = v41;
      *(void *)(v46 + 40) = v40;
      uint64_t v65 = sub_1AD73F190();
      *(void *)&long long v66 = v47;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)&long long v79 = MEMORY[0x1E4FBC860];
      sub_1AD73A1D0();
      uint64_t v48 = swift_allocObject();
      uint64_t v50 = v70;
      uint64_t v49 = v71;
      *(void *)(v48 + 16) = v70;
      *(void *)(v48 + 24) = v49;
      sub_1AD21485C(v50);
      id v51 = (void *)sub_1AD73F180();
      swift_bridgeObjectRelease();
      uint64_t v76 = sub_1AD35FD24;
      uint64_t v77 = v48;
      *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v75 = sub_1AD35CE78;
      *((void *)&v75 + 1) = &block_descriptor_23;
      uint64_t v52 = _Block_copy(&aBlock);
      swift_release();
      uint64_t v53 = self;
      id v54 = objc_msgSend(v53, sel_actionWithTitle_style_handler_, v51, 0, v52);
      _Block_release(v52);

      sub_1AD73A1D0();
      uint64_t v55 = (void *)sub_1AD73F180();
      swift_bridgeObjectRelease();
      uint64_t v76 = sub_1AD35D234;
      uint64_t v77 = 0;
      *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v75 = sub_1AD35CE78;
      *((void *)&v75 + 1) = &block_descriptor_26_0;
      uint64_t v56 = _Block_copy(&aBlock);
      swift_release();
      id v57 = objc_msgSend(v53, sel_actionWithTitle_style_handler_, v55, 0, v56);
      _Block_release(v56);

      id v58 = v54;
      MEMORY[0x1B3E657B0]();
      if (*(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1AD73F510();
      }
      sub_1AD73F560();
      sub_1AD73F4D0();
      id v59 = v57;
      MEMORY[0x1B3E657B0]();
      if (*(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1AD73F510();
      }
      sub_1AD73F560();
      sub_1AD73F4D0();
      unint64_t v60 = swift_bridgeObjectRetain();
      sub_1AD2600E4(v60);
      sub_1AD2B6A34(v73, v67, v68, v65, v66, v79, v50, v49);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 5u:
    case 6u:
    case 7u:
    case 8u:
LABEL_2:
      if (qword_1EB732818 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_1AD73A1D0();
      sub_1AD2B6A34(v73, a2, a3, v22, v23, MEMORY[0x1E4FBC860], v70, v71);
LABEL_5:
      swift_bridgeObjectRelease();
      break;
    default:
      if (swift_getEnumCaseMultiPayload()
        || (sub_1AD35FDEC((uint64_t)v21, (uint64_t)v18, MEMORY[0x1E4F65E90]), *v18 != 4))
      {
        sub_1AD35FD30((uint64_t)v21, (uint64_t)v16, MEMORY[0x1E4F65E90]);
        sub_1AD35DB44((uint64_t)v16, v73, v70, v71);
        sub_1AD3608A0((uint64_t)v16, MEMORY[0x1E4F65E90]);
      }
      else
      {
        uint64_t v24 = v70;
        if (qword_1EB732818 != -1) {
          swift_once();
        }
        uint64_t v25 = sub_1AD73A1D0();
        uint64_t v27 = v26;
        uint64_t v28 = sub_1AD73A1D0();
        sub_1AD2B6A34(v73, v25, v27, v28, v29, MEMORY[0x1E4FBC860], v24, v71);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1AD3608A0((uint64_t)v21, MEMORY[0x1E4F65E90]);
      }
      break;
  }
  SummarySharingOnboardingError.submitAnalyticsIfNeeded()();
}

void static SummarySharingOnboardingErrorHandling.displayError(on:title:message:customActions:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v46 = a7;
  uint64_t v49 = a2;
  uint64_t v50 = a4;
  uint64_t v13 = sub_1AD73CBA0();
  uint64_t v47 = *(void *)(v13 - 8);
  uint64_t v48 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1AD73EF20();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (uint64_t *)((char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F7F0);
  *uint64_t v19 = sub_1AD73FC50();
  (*(void (**)(uint64_t *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E4FBCBF0], v16);
  char v20 = sub_1AD73EF50();
  (*(void (**)(uint64_t *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  sub_1AD73CAD0();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v21 = sub_1AD73CB80();
  os_log_type_t v22 = sub_1AD73F940();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v45 = a1;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v51 = v43;
    *(_DWORD *)uint64_t v23 = 136315650;
    uint64_t v44 = a8;
    uint64_t v24 = sub_1AD740E30();
    uint64_t aBlock = sub_1AD1F62D4(v24, v25, &v51);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    uint64_t aBlock = v49;
    uint64_t v53 = a3;
    sub_1AD21FD18(0, (unint64_t *)&qword_1EB7413B8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1AD73F220();
    uint64_t aBlock = sub_1AD1F62D4(v26, v27, &v51);
    sub_1AD7403B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 22) = 2080;
    uint64_t aBlock = v50;
    uint64_t v53 = a5;
    swift_bridgeObjectRetain();
    a8 = v44;
    uint64_t v28 = sub_1AD73F220();
    uint64_t aBlock = sub_1AD1F62D4(v28, v29, &v51);
    sub_1AD7403B0();
    swift_bridgeObjectRelease_n();
    a1 = v45;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v21, v22, "[%s] Received an error: %s, %s", (uint8_t *)v23, 0x20u);
    uint64_t v30 = v43;
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v30, -1, -1);
    MEMORY[0x1B3E68450](v23, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v48);
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v31 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    if (a5)
    {
LABEL_7:
      uint64_t v32 = (void *)sub_1AD73F180();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    id v31 = 0;
    if (a5) {
      goto LABEL_7;
    }
  }
  uint64_t v32 = 0;
LABEL_10:
  uint64_t v15 = (char *)objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v31, v32, 1);

  if (!(a6 >> 62))
  {
    uint64_t v33 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v33) {
      goto LABEL_12;
    }
LABEL_21:
    if (qword_1EB732818 == -1)
    {
LABEL_22:
      sub_1AD73A1D0();
      uint64_t v37 = swift_allocObject();
      uint64_t v38 = v46;
      *(void *)(v37 + 16) = v46;
      *(void *)(v37 + 24) = a8;
      sub_1AD21485C(v38);
      uint64_t v39 = (void *)sub_1AD73F180();
      swift_bridgeObjectRelease();
      uint64_t v56 = sub_1AD35FD24;
      uint64_t v57 = v37;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v53 = 1107296256;
      id v54 = sub_1AD35CE78;
      uint64_t v55 = &block_descriptor_17;
      unint64_t v40 = _Block_copy(&aBlock);
      swift_release();
      id v41 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v39, 0, v40);
      _Block_release(v40);

      objc_msgSend(v15, sel_addAction_, v41);
      goto LABEL_23;
    }
LABEL_25:
    swift_once();
    goto LABEL_22;
  }
LABEL_20:
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1AD7408D0();
  swift_bridgeObjectRelease();
  if (!v33) {
    goto LABEL_21;
  }
LABEL_12:
  if (v33 < 1)
  {
    __break(1u);
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v33; ++i)
  {
    if ((a6 & 0xC000000000000001) != 0) {
      id v35 = (id)MEMORY[0x1B3E669F0](i, a6);
    }
    else {
      id v35 = *(id *)(a6 + 8 * i + 32);
    }
    uint64_t v36 = v35;
    objc_msgSend(v15, sel_addAction_, v35);
  }
  swift_bridgeObjectRelease();
LABEL_23:
  objc_msgSend(a1, sel_presentViewController_animated_completion_, v15, 1, 0);
}

uint64_t static SummarySharingOnboardingErrorHandling.displayGenericError(on:title:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1AD73A1D0();
  static SummarySharingOnboardingErrorHandling.displayError(on:title:message:customActions:completion:)(a1, a2, a3, v10, v11, MEMORY[0x1E4FBC860], a4, a5);
  return swift_bridgeObjectRelease();
}

void sub_1AD35CE78(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t SummarySharingOnboardingError.init(syncStatus:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SummarySharingOnboardingError();
  uint64_t v11 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(a1, sel_syncEnabled) & 1) == 0)
  {

    goto LABEL_7;
  }
  unsigned int v7 = objc_msgSend(a1, sel_accountSupportsSecureContainer);

  if (!v7)
  {
LABEL_7:
    sub_1AD73B6C0();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1AD35FD30((uint64_t)v6, a2, (uint64_t (*)(void))type metadata accessor for SummarySharingOnboardingError);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a2, 0, 1, v4);
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  return v8(a2, 1, 1, v4);
}

uint64_t sub_1AD35D088()
{
  sub_1AD21FD18(0, &qword_1E9A2CB70, MEMORY[0x1E4FBB550], MEMORY[0x1E4F67098]);
  uint64_t v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1E9A2CA98);
  __swift_project_value_buffer(v1, (uint64_t)qword_1E9A2CA98);
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB740278);
  sub_1AD73FA60();
  return sub_1AD73AAE0();
}

uint64_t sub_1AD35D160()
{
  sub_1AD21FD18(0, (unint64_t *)&qword_1EB738410, MEMORY[0x1E4FBB390], MEMORY[0x1E4F67098]);
  uint64_t v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1EB738968);
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB738968);
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB740278);
  sub_1AD73FA60();
  return sub_1AD73AAE0();
}

uint64_t sub_1AD35D234()
{
  sub_1AD290CA4();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1AD73A4B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73A4A0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_1AD3608A0((uint64_t)v2, (uint64_t (*)(void))sub_1AD290CA4);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id v8 = objc_msgSend(self, sel_defaultWorkspace);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = (void *)sub_1AD73A420();
    objc_msgSend(v9, sel_hk_asyncOpenURL_, v10);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1AD35D40C(void *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  sub_1AD21FD18(0, &qword_1E9A2CB70, MEMORY[0x1E4FBB550], MEMORY[0x1E4F67098]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v23 - v9;
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1AD73A1D0();
  uint64_t v13 = v12;
  if (a2 > 1)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AD73A1D0();
    sub_1AD21E028(0, (unint64_t *)&qword_1EB73F8F0, (unint64_t *)&qword_1EB73F910, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1AD74C370;
    if (qword_1E9A29130 != -1) {
      swift_once();
    }
    uint64_t v15 = __swift_project_value_buffer(v7, (uint64_t)qword_1E9A2CA98);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v15, v7);
    sub_1AD73AAC0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v16 = sub_1AD740B50();
    uint64_t v18 = v17;
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 64) = sub_1AD21FDC0();
    *(void *)(v14 + 32) = v16;
    *(void *)(v14 + 40) = v18;
    uint64_t v19 = sub_1AD73F190();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AD2B6A34(a1, v11, v13, v19, v21, MEMORY[0x1E4FBC860], v24, v25);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t static SummarySharingOnboardingErrorHandling.displayMaxNumberRelationshipsError(on:for:completion:)(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a5;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  sub_1AD21FD18(0, &qword_1E9A2CB70, MEMORY[0x1E4FBB550], MEMORY[0x1E4F67098]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v24 - v10;
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1AD73A1D0();
  uint64_t v14 = v13;
  if (a2 > 1)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AD73A1D0();
    sub_1AD21E028(0, (unint64_t *)&qword_1EB73F8F0, (unint64_t *)&qword_1EB73F910, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1AD74C370;
    if (qword_1E9A29130 != -1) {
      swift_once();
    }
    uint64_t v16 = __swift_project_value_buffer(v8, (uint64_t)qword_1E9A2CA98);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v16, v8);
    sub_1AD73AAC0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v17 = sub_1AD740B50();
    uint64_t v19 = v18;
    *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v15 + 64) = sub_1AD21FDC0();
    *(void *)(v15 + 32) = v17;
    *(void *)(v15 + 40) = v19;
    uint64_t v20 = sub_1AD73F190();
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    static SummarySharingOnboardingErrorHandling.displayError(on:title:message:customActions:completion:)(a1, v12, v14, v20, v22, MEMORY[0x1E4FBC860], v25, v26);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

void sub_1AD35DB44(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1AD73B6C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  sub_1AD35F074(&aBlock);
  uint64_t v11 = v42;
  if (v42)
  {
    uint64_t v32 = v9;
    uint64_t v33 = a1;
    id v40 = a2;
    uint64_t v12 = aBlock;
    uint64_t v13 = v43;
    uint64_t v14 = v44;
    uint64_t v35 = v46;
    uint64_t v36 = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v39 = v12;
    uint64_t v15 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    uint64_t v38 = v13;
    uint64_t v16 = (void *)sub_1AD73F180();
    uint64_t v37 = v14;
    swift_bridgeObjectRelease();
    id v34 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v15, v16, 1);

    if (qword_1EB732818 != -1) {
      swift_once();
    }
    sub_1AD73A1D0();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a3;
    *(void *)(v17 + 24) = a4;
    sub_1AD21485C(a3);
    uint64_t v18 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    uint64_t v45 = sub_1AD35FD24;
    uint64_t v46 = v17;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v42 = 1107296256;
    uint64_t v43 = sub_1AD35CE78;
    uint64_t v44 = &block_descriptor_33;
    uint64_t v19 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v20 = self;
    id v21 = objc_msgSend(v20, sel_actionWithTitle_style_handler_, v18, 1, v19);
    _Block_release(v19);

    sub_1AD35FDEC(v33, (uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), MEMORY[0x1E4F65E90]);
    unint64_t v22 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v23 = swift_allocObject();
    sub_1AD35FD30((uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, MEMORY[0x1E4F65E90]);
    uint64_t v24 = (uint64_t *)(v23 + ((v10 + v22 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t *v24 = a3;
    v24[1] = a4;
    sub_1AD21485C(a3);
    swift_bridgeObjectRetain();
    uint64_t v25 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    uint64_t v45 = sub_1AD35FD98;
    uint64_t v46 = v23;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v42 = 1107296256;
    uint64_t v43 = sub_1AD35CE78;
    uint64_t v44 = &block_descriptor_40_1;
    uint64_t v26 = _Block_copy(&aBlock);
    swift_release();
    id v27 = objc_msgSend(v20, sel_actionWithTitle_style_handler_, v25, 0, v26);
    _Block_release(v26);

    sub_1AD35FD9C(v39, v11);
    id v28 = v34;
    objc_msgSend(v34, sel_addAction_, v21);
    objc_msgSend(v28, sel_addAction_, v27);
    objc_msgSend(v40, sel_presentViewController_animated_completion_, v28, 1, 0);
  }
  else
  {
    if (qword_1EB732818 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1AD73A1D0();
    sub_1AD2B6A34(a2, 0, 0, v29, v30, MEMORY[0x1E4FBC860], a3, a4);
    swift_bridgeObjectRelease();
  }
}

void static SummarySharingOnboardingErrorHandling.displayHealthCloudError(for:on:completion:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1AD73B6C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  sub_1AD35F074(&aBlock);
  uint64_t v11 = v40;
  if (v40)
  {
    uint64_t v30 = v9;
    uint64_t v31 = a1;
    id v38 = a2;
    uint64_t v12 = aBlock;
    uint64_t v13 = v41;
    uint64_t v14 = v42;
    uint64_t v33 = v44;
    id v34 = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v37 = v12;
    uint64_t v15 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    uint64_t v36 = v13;
    uint64_t v16 = (void *)sub_1AD73F180();
    uint64_t v35 = v14;
    swift_bridgeObjectRelease();
    id v32 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v15, v16, 1);

    if (qword_1EB732818 != -1) {
      swift_once();
    }
    sub_1AD73A1D0();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a3;
    *(void *)(v17 + 24) = a4;
    sub_1AD21485C(a3);
    uint64_t v18 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    uint64_t v43 = sub_1AD35FD24;
    uint64_t v44 = v17;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v40 = 1107296256;
    id v41 = sub_1AD35CE78;
    uint64_t v42 = &block_descriptor_6_0;
    uint64_t v19 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v20 = self;
    id v21 = objc_msgSend(v20, sel_actionWithTitle_style_handler_, v18, 1, v19);
    _Block_release(v19);

    sub_1AD35FDEC(v31, (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), MEMORY[0x1E4F65E90]);
    unint64_t v22 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v23 = swift_allocObject();
    sub_1AD35FD30((uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, MEMORY[0x1E4F65E90]);
    uint64_t v24 = (uint64_t *)(v23 + ((v10 + v22 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t *v24 = a3;
    v24[1] = a4;
    sub_1AD21485C(a3);
    swift_bridgeObjectRetain();
    uint64_t v25 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    uint64_t v43 = sub_1AD35FD98;
    uint64_t v44 = v23;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v40 = 1107296256;
    id v41 = sub_1AD35CE78;
    uint64_t v42 = &block_descriptor_12;
    uint64_t v26 = _Block_copy(&aBlock);
    swift_release();
    id v27 = objc_msgSend(v20, sel_actionWithTitle_style_handler_, v25, 0, v26);
    _Block_release(v26);

    sub_1AD35FD9C(v37, v11);
    id v28 = v32;
    objc_msgSend(v32, sel_addAction_, v21);
    objc_msgSend(v28, sel_addAction_, v27);
    objc_msgSend(v38, sel_presentViewController_animated_completion_, v28, 1, 0);
  }
  else
  {
    static SummarySharingOnboardingErrorHandling.displayGenericError(on:title:completion:)(a2, 0, 0, a3, a4);
  }
}

Swift::Void __swiftcall SummarySharingOnboardingError.submitAnalyticsIfNeeded()()
{
  uint64_t v1 = type metadata accessor for SummarySharingOnboardingError();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  SummarySharingOnboardingError.uiAnalyticsOperation.getter((char *)v7);
  int v4 = LOBYTE(v7[0]);
  sub_1AD35FDEC(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SummarySharingOnboardingError);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 8u:
      return;
    case 2u:
    case 3u:
    case 5u:
    case 6u:
    case 7u:
      goto LABEL_4;
    case 4u:
      sub_1AD3608A0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SummarySharingOnboardingError);
LABEL_4:
      switch(v4)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
          sub_1AD2147D4(0, (unint64_t *)&qword_1EB73C2A8);
          uint64_t v5 = (void *)sub_1AD740080();
          uint64_t v6 = (void *)sub_1AD73F180();
          swift_bridgeObjectRelease();
          v7[0] = v5;
          v7[1] = v6;
          sub_1AD35FE54();
          sub_1AD73B8E0();

          break;
        default:
          return;
      }
      break;
    default:
      sub_1AD3608A0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SummarySharingOnboardingError);
      break;
  }
}

HealthExperienceUI::SummarySharingOnboardingError::SharingOperation_optional __swiftcall SummarySharingOnboardingError.SharingOperation.init(rawValue:)(NSString rawValue)
{
  uint64_t v3 = v1;
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73C2A8);
  NSString v4 = rawValue;
  uint64_t v5 = (void *)sub_1AD740080();
  char v6 = sub_1AD740050();

  if (v6)
  {

    char v8 = 0;
  }
  else
  {
    id v9 = v4;
    uint64_t v10 = (void *)sub_1AD740080();
    char v11 = sub_1AD740050();

    if (v11)
    {

      char v8 = 1;
    }
    else
    {
      id v12 = v9;
      uint64_t v13 = (void *)sub_1AD740080();
      char v14 = sub_1AD740050();

      if (v14)
      {

        char v8 = 2;
      }
      else
      {
        id v15 = v12;
        uint64_t v16 = (void *)sub_1AD740080();
        char v17 = sub_1AD740050();

        if (v17)
        {

          char v8 = 3;
        }
        else
        {
          id v18 = v15;
          uint64_t v19 = (void *)sub_1AD740080();
          char v20 = sub_1AD740050();

          if (v20) {
            char v8 = 4;
          }
          else {
            char v8 = 5;
          }
        }
      }
    }
  }
  char *v3 = v8;
  return result;
}

uint64_t SummarySharingOnboardingError.SharingOperation.rawValue.getter()
{
  return sub_1AD740080();
}

uint64_t sub_1AD35EBA8()
{
  return sub_1AD5FBDE8();
}

uint64_t sub_1AD35EBB4()
{
  return sub_1AD740D40();
}

void sub_1AD35EBFC()
{
}

uint64_t sub_1AD35EC04()
{
  return sub_1AD740D40();
}

HealthExperienceUI::SummarySharingOnboardingError::SharingOperation_optional sub_1AD35EC48(NSString *a1)
{
  return SummarySharingOnboardingError.SharingOperation.init(rawValue:)(*a1);
}

uint64_t sub_1AD35EC50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SummarySharingOnboardingError.SharingOperation.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t SummarySharingOnboardingError.uiAnalyticsOperation.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SummarySharingOnboardingError();
  MEMORY[0x1F4188790](v4);
  char v6 = (void *)((char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AD35FDEC(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SummarySharingOnboardingError);
  uint64_t result = swift_getEnumCaseMultiPayload();
  char v8 = 0;
  switch((int)result)
  {
    case 1:
    case 7:
    case 8:
      goto LABEL_3;
    case 2:
      uint64_t v9 = *v6;
      if (*v6)
      {
        if (v9 != 1)
        {
          long long v10[2] = 0;
          v10[3] = 0xE000000000000000;
          sub_1AD740680();
          sub_1AD73F300();
          v10[1] = v9;
          type metadata accessor for HKSharingMessageDirection(0);
          sub_1AD740840();
          sub_1AD7408B0();
          __break(1u);
          JUMPOUT(0x1AD35EE4CLL);
        }
        char v8 = 1;
      }
      else
      {
        char v8 = 0;
      }
      break;
    case 3:
      char v8 = *(unsigned char *)v6;
      break;
    case 4:
      uint64_t result = swift_bridgeObjectRelease();
      char v8 = 0;
      break;
    case 5:
    case 6:
      break;
    default:
      uint64_t result = sub_1AD3608A0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SummarySharingOnboardingError);
LABEL_3:
      char v8 = 5;
      break;
  }
  *a1 = v8;
  return result;
}

unint64_t SummarySharingOnboardingError.uiAnalyticsDescription.getter()
{
  uint64_t v1 = type metadata accessor for SummarySharingOnboardingError();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD35FDEC(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SummarySharingOnboardingError);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 1:
    case 8:
      return result;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      sub_1AD3608A0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SummarySharingOnboardingError);
      unint64_t result = 0x4364696C61766E69;
      break;
    case 5:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      sub_1AD3608A0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SummarySharingOnboardingError);
      unint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_1AD35F044(uint64_t a1, uint64_t (*a2)(void))
{
  if (a2) {
    return a2();
  }
  return result;
}

uint64_t sub_1AD35F074@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1AD73B6C0();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  sub_1AD35FDEC(v2, (uint64_t)&v18 - v8, MEMORY[0x1E4F65E90]);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 3)
    {
      if (qword_1E9A29158 != -1) {
        swift_once();
      }
      char v11 = &qword_1E9A2CB40;
      goto LABEL_19;
    }
    if (EnumCaseMultiPayload == 2)
    {
      if (qword_1E9A29150 != -1) {
        swift_once();
      }
      char v11 = &qword_1E9A2CB10;
LABEL_19:
      uint64_t v12 = v11[1];
      uint64_t v13 = v11[2];
      uint64_t v14 = v11[3];
      uint64_t v15 = v11[4];
      uint64_t v16 = v11[5];
      *a1 = *v11;
      a1[1] = v12;
      a1[2] = v13;
      a1[3] = v14;
      a1[4] = v15;
      a1[5] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_1AD3608A0((uint64_t)v9, MEMORY[0x1E4F65E90]);
    }
  }
  else
  {
    sub_1AD35FDEC((uint64_t)v9, (uint64_t)v7, MEMORY[0x1E4F65E90]);
    if (!*v7)
    {
      if (qword_1E9A29148 != -1) {
        swift_once();
      }
      char v11 = &qword_1E9A2CAE0;
      goto LABEL_19;
    }
    if (*v7 == 1)
    {
      if (qword_1E9A29140 != -1) {
        swift_once();
      }
      char v11 = &qword_1E9A2CAB0;
      goto LABEL_19;
    }
  }
  *((_OWORD *)a1 + 1) = 0u;
  *((_OWORD *)a1 + 2) = 0u;
  *(_OWORD *)a1 = 0u;
  return sub_1AD3608A0((uint64_t)v9, MEMORY[0x1E4F65E90]);
}

void sub_1AD35F2CC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  id v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CloudSyncFlow()), sel_init);
  sub_1AD58F058(a2);

  if (a3) {
    a3();
  }
}

uint64_t sub_1AD35F338()
{
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1AD73A1D0();
  uint64_t v2 = v1;
  uint64_t v3 = sub_1AD73A1D0();
  uint64_t v5 = v4;
  uint64_t result = sub_1AD73A1D0();
  qword_1E9A2CAB0 = v0;
  *(void *)algn_1E9A2CAB8 = v2;
  qword_1E9A2CAC0 = v3;
  unk_1E9A2CAC8 = v5;
  qword_1E9A2CAD0 = result;
  unk_1E9A2CAD8 = v7;
  return result;
}

uint64_t sub_1AD35F4B0()
{
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1AD73A1D0();
  uint64_t v2 = v1;
  uint64_t result = sub_1AD73A1D0();
  qword_1E9A2CAE0 = v0;
  *(void *)algn_1E9A2CAE8 = v2;
  qword_1E9A2CAF0 = result;
  unk_1E9A2CAF8 = v4;
  qword_1E9A2CB00 = 0xD00000000000002DLL;
  unk_1E9A2CB08 = 0x80000001AD779EE0;
  return result;
}

uint64_t sub_1AD35F5EC()
{
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1AD73A1D0();
  uint64_t v2 = v1;
  uint64_t v3 = sub_1AD73A1D0();
  uint64_t v5 = v4;
  uint64_t result = sub_1AD73A1D0();
  qword_1E9A2CB10 = v0;
  *(void *)algn_1E9A2CB18 = v2;
  qword_1E9A2CB20 = v3;
  unk_1E9A2CB28 = v5;
  qword_1E9A2CB30 = result;
  unk_1E9A2CB38 = v7;
  return result;
}

uint64_t sub_1AD35F764()
{
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1AD73A1D0();
  uint64_t v2 = v1;
  uint64_t v3 = sub_1AD73A1D0();
  uint64_t v5 = v4;
  uint64_t result = sub_1AD73A1D0();
  qword_1E9A2CB40 = v0;
  *(void *)algn_1E9A2CB48 = v2;
  qword_1E9A2CB50 = v3;
  unk_1E9A2CB58 = v5;
  qword_1E9A2CB60 = result;
  unk_1E9A2CB68 = v7;
  return result;
}

uint64_t (*sub_1AD35F8E4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1AD35FBA0(v6, a2, a3);
  return sub_1AD35F94C;
}

uint64_t (*sub_1AD35F950(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1AD35FC20(v6, a2, a3);
  return sub_1AD35F94C;
}

uint64_t (*sub_1AD35F9B8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1AD35FCA0(v6, a2, a3);
  return sub_1AD35F94C;
}

uint64_t (*sub_1AD35FA20(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1AD360794(v6, a2, a3);
  return sub_1AD35F94C;
}

uint64_t (*sub_1AD35FA88(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1AD360AE0(v6, a2, a3);
  return sub_1AD35F94C;
}

uint64_t (*sub_1AD35FAF0(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1AD360B68(v6, a2, a3);
  return sub_1AD35F94C;
}

void sub_1AD35FB58(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1AD35FBA0(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1B3E669F0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for PDFArticleTitle;
  }
  __break(1u);
  return result;
}

void (*sub_1AD35FC20(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1B3E669F0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for DataTypeDescriptionAttribution;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1AD35FCA0(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1B3E669F0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    uint64_t *v3 = v4;
    return j__s18HealthExperienceUI37StandardSnidgetCurrentValueNoDataViewVwxx;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AD35FD30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AD35FD9C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AD35FDEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1AD35FE54()
{
  unint64_t result = qword_1E9A2CB78;
  if (!qword_1E9A2CB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CB78);
  }
  return result;
}

unint64_t sub_1AD35FEAC()
{
  unint64_t result = qword_1E9A2CB80;
  if (!qword_1E9A2CB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CB80);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SummarySharingOnboardingError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4)
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      swift_bridgeObjectRetain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = sub_1AD73B6C0();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v9 = sub_1AD73A600();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      goto LABEL_10;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t destroy for SummarySharingOnboardingError(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 4)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    sub_1AD73B6C0();
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 1)
    {
      uint64_t v3 = sub_1AD73A600();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    }
  }
  return result;
}

void *initializeWithCopy for SummarySharingOnboardingError(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_1AD73B6C0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_1AD73A600();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for SummarySharingOnboardingError(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1AD3608A0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for SummarySharingOnboardingError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_1AD73B6C0();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v8 = sub_1AD73A600();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *initializeWithTake for SummarySharingOnboardingError(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1AD73B6C0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1AD73A600();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for SummarySharingOnboardingError(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1AD3608A0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for SummarySharingOnboardingError);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1AD73B6C0();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v7 = sub_1AD73A600();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1AD3605E4()
{
  uint64_t result = sub_1AD73B6C0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SummarySharingOnboardingError.SharingOperation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AD36075CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarySharingOnboardingError.SharingOperation()
{
  return &type metadata for SummarySharingOnboardingError.SharingOperation;
}

uint64_t (*sub_1AD360794(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  int v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1B3E669F0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    uint64_t *v3 = v4;
    return j__s18HealthExperienceUI28FeatureRequirementEvaluationVwxx;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AD360814(uint64_t a1)
{
  sub_1AD21E028(0, &qword_1E9A2CBA0, &qword_1E9A2CB98, (uint64_t)&protocol descriptor for SharingContactNameProviding, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD3608A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AD360904()
{
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v1 = *(void *)(sub_1AD73B6C0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1AD73A600();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  if (*(void *)(v0 + v3)) {
    swift_release();
  }
  return swift_deallocObject();
}

void sub_1AD360A40(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1AD73B6C0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void (**)(void))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1AD35F2CC(a1, v1 + v4, v5);
}

uint64_t (*sub_1AD360AE0(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1B3E669F0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    uint64_t *v3 = v4;
    return destroy for StandardSnidgetCurrentValueNoDataView;
  }
  __break(1u);
  return result;
}

uint64_t destroy for StandardSnidgetCurrentValueNoDataView()
{
  return swift_release();
}

uint64_t (*sub_1AD360B68(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1B3E669F0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    uint64_t *v3 = v4;
    return destroy for FeatureRequirementEvaluation;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AD360C18()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AD2085B0(0, &qword_1EB73FD50, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v26 = (char *)&v23 - v2;
  uint64_t v3 = sub_1AD73CCB0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v25 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1AD73CC10();
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD2085B0(0, (unint64_t *)&qword_1EB7401D0, MEMORY[0x1E4FB0F28], v0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = sub_1AD5ABA84();
  MEMORY[0x1B3E66130](v15);
  uint64_t v16 = sub_1AD73CE60();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v14, 1, v16))
  {
    char v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FB0F28];
    sub_1AD207C34((uint64_t)v14, (uint64_t)v12, (unint64_t *)&qword_1EB7401D0, MEMORY[0x1E4FB0F28]);
    MEMORY[0x1B3E66140](v12);
    sub_1AD20709C((uint64_t)v14, (unint64_t *)&qword_1EB7401D0, v17);
  }
  else
  {
    id v18 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
    sub_1AD73CE00();
    MEMORY[0x1B3E66140](v14);
  }
  sub_1AD2085B0(0, &qword_1EB7401F0, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1AD73CCE0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1AD74C370;
  uint64_t v19 = v24;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FB0E18], v24);
  uint64_t v20 = sub_1AD73CC40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v26, 1, 1, v20);
  id v21 = v25;
  sub_1AD73CCA0();
  sub_1AD73CC70();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v21, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  return sub_1AD73FF00();
}

id sub_1AD36115C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UninstalledAppSourcesCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1AD361190(uint64_t a1, void *a2)
{
}

uint64_t sub_1AD3611B8()
{
  return sub_1AD73F220();
}

uint64_t type metadata accessor for UninstalledAppSourcesCell()
{
  return self;
}

unint64_t sub_1AD361214()
{
  unint64_t result = qword_1E9A2AFA0;
  if (!qword_1E9A2AFA0)
  {
    type metadata accessor for UninstalledAppSourcesCell();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9A2AFA0);
  }
  return result;
}

uint64_t UninstalledAppsItem.__allocating_init(uninstalledAppSources:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  UninstalledAppsItem.init(uninstalledAppSources:)(a1);
  return v2;
}

uint64_t UninstalledAppsItem.init(uninstalledAppSources:)(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1AD73A1D0();
  uint64_t v4 = v3;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_init, 0x80000001AD7781A0);
  *(void *)(v1 + 40) = v4;
  *(void *)(v1 + 48) = v5;
  *(void *)(v1 + 32) = v2;
  *(unsigned char *)(v1 + 56) = 1;
  return v1;
}

void UninstalledAppsItem.__allocating_init(name:isSelectable:)()
{
}

void UninstalledAppsItem.init(name:isSelectable:)()
{
}

uint64_t sub_1AD3613E8()
{
  return swift_bridgeObjectRelease();
}

uint64_t UninstalledAppsItem.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UninstalledAppsItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UninstalledAppsItem()
{
  return self;
}

uint64_t method lookup function for UninstalledAppsItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UninstalledAppsItem);
}

uint64_t dispatch thunk of UninstalledAppsItem.__allocating_init(uninstalledAppSources:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

void sub_1AD3614C8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1AD73CBA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = v2 + OBJC_IVAR____TtC18HealthExperienceUI16IconWithNameCell_item;
  swift_beginAccess();
  sub_1AD207C34(v12, (uint64_t)v37, (unint64_t *)&qword_1EB73E880, (uint64_t (*)(uint64_t))sub_1AD2282B4);
  if (v37[3])
  {
    sub_1AD2282B4();
    type metadata accessor for UninstalledAppsItem();
    if (swift_dynamicCast())
    {
      uint64_t v13 = v36;
      type metadata accessor for SourcesViewController();
      uint64_t v14 = swift_dynamicCastClass();
      if (v14)
      {
        uint64_t v15 = (void *)v14;
        uint64_t v16 = *(void *)(v13 + 64);
        uint64_t v17 = *(void *)(v14 + OBJC_IVAR____TtC18HealthExperienceUI21SourcesViewController_profileName);
        uint64_t v18 = *(void *)(v14 + OBJC_IVAR____TtC18HealthExperienceUI21SourcesViewController_profileName + 8);
        *(void *)((char *)objc_allocWithZone((Class)type metadata accessor for UninstalledAppSourcesViewController())
                  + OBJC_IVAR____TtC18HealthExperienceUI35UninstalledAppSourcesViewController_uninstalledApps) = v16;
        LOBYTE(v37[0]) = 1;
        swift_bridgeObjectRetain();
        id v19 = a1;
        swift_bridgeObjectRetain();
        id v20 = SourcesViewController.init(sourceType:profileName:)((unsigned __int8 *)v37, v17, v18);
        objc_msgSend(v15, sel_showViewController_sender_, v20, 0);
        swift_release();

        return;
      }
      sub_1AD73CB40();
      uint64_t v29 = sub_1AD73CB80();
      os_log_type_t v30 = sub_1AD73F920();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 136446210;
        uint64_t v35 = v31 + 4;
        uint64_t v36 = v32;
        v37[0] = ObjectType;
        swift_getMetatypeMetadata();
        uint64_t v33 = sub_1AD73F220();
        v37[0] = sub_1AD1F62D4(v33, v34, &v36);
        sub_1AD7403B0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AD1A4000, v29, v30, "[%{public}s] view coontroller was not a SourcesViewController", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1B3E68450](v32, -1, -1);
        MEMORY[0x1B3E68450](v31, -1, -1);
        swift_release();
      }
      else
      {

        swift_release();
      }
      id v27 = *(void (**)(char *, uint64_t))(v6 + 8);
      id v28 = v11;
      goto LABEL_13;
    }
  }
  else
  {
    sub_1AD20709C((uint64_t)v37, (unint64_t *)&qword_1EB73E880, (uint64_t (*)(uint64_t))sub_1AD2282B4);
  }
  sub_1AD73CB40();
  id v21 = sub_1AD73CB80();
  os_log_type_t v22 = sub_1AD73F930();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v36 = v24;
    *(_DWORD *)uint64_t v23 = 136446210;
    v37[0] = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v35 = (uint8_t *)v5;
    uint64_t v25 = sub_1AD73F220();
    v37[0] = sub_1AD1F62D4(v25, v26, &v36);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v21, v22, "[%{public}s] item is not an UninstalledAppsItem", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v24, -1, -1);
    MEMORY[0x1B3E68450](v23, -1, -1);

    (*(void (**)(char *, uint8_t *))(v6 + 8))(v9, v35);
    return;
  }

  id v27 = *(void (**)(char *, uint64_t))(v6 + 8);
  id v28 = v9;
LABEL_13:
  v27(v28, v5);
}

uint64_t PDFHeaderContentProvider.HeaderContent.nameString.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDFHeaderContentProvider.HeaderContent.dateOfBirthString.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDFHeaderContentProvider.HeaderContent.exportedDateString.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static PDFHeaderContentProvider.headerContent(characteristics:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  if (v4)
  {
    uint64_t v6 = v4;
  }
  else
  {
    if (qword_1EB732818 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1AD73A1D0();
    uint64_t v6 = v7;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1AD361B08((uint64_t)a1);
  uint64_t v10 = v9;
  uint64_t result = sub_1AD3621B8();
  *a2 = v5;
  a2[1] = v6;
  a2[2] = v8;
  a2[3] = v10;
  a2[4] = result;
  a2[5] = v12;
  return result;
}

uint64_t sub_1AD361B08(uint64_t a1)
{
  uint64_t v2 = sub_1AD73A520();
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v48 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v45 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1AD73A540();
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1AD21E0F8(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = sub_1AD73A600();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v49 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD21E0F8(0, &qword_1E9A2B5A0, MEMORY[0x1E4F26F90], v6);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v16 = sub_1AD739FB0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  id v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for PDFCharacteristicsProvider.Content();
  sub_1AD29B57C(a1 + *(int *)(v20 + 20), (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    id v21 = &qword_1E9A2B5A0;
    os_log_type_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F26F90];
    uint64_t v23 = (uint64_t)v15;
LABEL_5:
    sub_1AD3625C0(v23, v21, v22);
    if (qword_1EB732818 != -1) {
      swift_once();
    }
    return sub_1AD73A1D0();
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  sub_1AD739F90();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    id v21 = (unint64_t *)&unk_1EB741390;
    os_log_type_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
    uint64_t v23 = (uint64_t)v9;
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v49, v9, v10);
  uint64_t v42 = v10;
  uint64_t v43 = v11;
  uint64_t v25 = (void *)sub_1AD739F60();
  unint64_t v26 = (void *)sub_1AD73A590();
  id v27 = objc_msgSend(v25, sel_hk_ageWithCurrentDate_, v26);

  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_1AD73A1D0();
  sub_1AD73A530();
  id v28 = v45;
  sub_1AD73A510();
  uint64_t v29 = v49;
  uint64_t v40 = sub_1AD73A5E0();
  uint64_t v31 = v30;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v48);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v5, v46);
  id v50 = v27;
  sub_1AD362630();
  uint64_t v32 = sub_1AD740490();
  uint64_t v34 = v33;
  sub_1AD21E0F8(0, (unint64_t *)&qword_1EB73F8F0, (uint64_t (*)(uint64_t))sub_1AD2FF7D4, MEMORY[0x1E4FBBE00]);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1AD74C350;
  uint64_t v36 = MEMORY[0x1E4FBB1A0];
  *(void *)(v35 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v37 = sub_1AD21FDC0();
  *(void *)(v35 + 32) = v40;
  *(void *)(v35 + 40) = v31;
  *(void *)(v35 + 96) = v36;
  *(void *)(v35 + 104) = v37;
  *(void *)(v35 + 64) = v37;
  *(void *)(v35 + 72) = v32;
  *(void *)(v35 + 80) = v34;
  uint64_t v24 = sub_1AD73F1F0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v42);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  return v24;
}

uint64_t sub_1AD3621B8()
{
  uint64_t v0 = sub_1AD73A520();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AD73A540();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  sub_1AD73A1D0();
  type metadata accessor for PDFCharacteristicsProvider.Content();
  sub_1AD73A530();
  sub_1AD73A510();
  uint64_t v8 = sub_1AD73A5E0();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1AD21E0F8(0, (unint64_t *)&qword_1EB73F8F0, (uint64_t (*)(uint64_t))sub_1AD2FF7D4, MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1AD74C370;
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 64) = sub_1AD21FDC0();
  *(void *)(v11 + 32) = v8;
  *(void *)(v11 + 40) = v10;
  uint64_t v12 = sub_1AD73F1F0();
  swift_bridgeObjectRelease();
  return v12;
}

ValueMetadata *type metadata accessor for PDFHeaderContentProvider()
{
  return &type metadata for PDFHeaderContentProvider;
}

void *initializeWithCopy for PDFHeaderContentProvider.HeaderContent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PDFHeaderContentProvider.HeaderContent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PDFHeaderContentProvider.HeaderContent(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PDFHeaderContentProvider.HeaderContent()
{
  return &type metadata for PDFHeaderContentProvider.HeaderContent;
}

uint64_t sub_1AD3625C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1AD21E0F8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1AD362630()
{
  unint64_t result = qword_1EB73F738;
  if (!qword_1EB73F738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB73F738);
  }
  return result;
}

BOOL static PDFThreeStringSingleLineHStack.Layout.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PDFThreeStringSingleLineHStack.Layout.hash(into:)()
{
  return sub_1AD740D00();
}

uint64_t PDFThreeStringSingleLineHStack.Layout.hashValue.getter()
{
  return sub_1AD740D40();
}

uint64_t PDFThreeStringSingleLineHStack.init(left:middle:right:layout:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v8 = *a4;
  sub_1AD362768(a1, a5);
  sub_1AD362768(a2, a5 + 40);
  uint64_t result = sub_1AD362768(a3, a5 + 80);
  *(unsigned char *)(a5 + 120) = v8;
  return result;
}

uint64_t sub_1AD362768(uint64_t a1, uint64_t a2)
{
  sub_1AD3627CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AD3627CC()
{
  if (!qword_1E9A2CBA8)
  {
    sub_1AD2F1E68();
    unint64_t v0 = sub_1AD740340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2CBA8);
    }
  }
}

uint64_t PDFThreeStringSingleLineHStack.render(context:document:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1AD363040(v2 + 40, (uint64_t)v73);
  uint64_t v6 = v2 + 80;
  if (*(unsigned char *)(a2 + 96)) {
    uint64_t v7 = v74;
  }
  else {
    uint64_t v7 = v72;
  }
  if (*(unsigned char *)(a2 + 96)) {
    char v8 = v72;
  }
  else {
    char v8 = v74;
  }
  sub_1AD363040(v6, (uint64_t)v7);
  sub_1AD363040(v3, (uint64_t)v8);
  sub_1AD363040((uint64_t)v74, (uint64_t)&v67);
  if (v68)
  {
    sub_1AD20FE90(&v67, (uint64_t)v69);
    type metadata accessor for PDFBuilder.Document();
    swift_allocObject();
    uint64_t v9 = sub_1AD4B4AFC(a2);
    uint64_t v10 = v70;
    uint64_t v11 = v71;
    __swift_project_boxed_opaque_existential_1(v69, v70);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16))(a1, v9, v10, v11);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  }
  else
  {
    sub_1AD3630A4((uint64_t)&v67);
  }
  sub_1AD363040((uint64_t)v72, (uint64_t)&v67);
  if (v68)
  {
    sub_1AD20FE90(&v67, (uint64_t)v69);
    type metadata accessor for PDFBuilder.Document();
    swift_allocObject();
    uint64_t v12 = sub_1AD4B4AFC(a2);
    v75.origin.CGFloat x = PDFBuilder.Document.drawingContext.getter();
    double Width = CGRectGetWidth(v75);
    v76.origin.CGFloat x = sub_1AD362DC4(2, v12);
    double v14 = Width - CGRectGetWidth(v76);
    CGFloat v15 = *(double *)(v12 + 168);
    CGFloat v16 = *(double *)(v12 + 176);
    CGFloat v17 = *(double *)(v12 + 184);
    CGFloat v18 = *(double *)(v12 + 192);
    v77.origin.CGFloat x = v15;
    v77.origin.CGFloat y = v16;
    v77.size.width = v17;
    v77.size.height = v18;
    double v19 = v14 + CGRectGetMinX(v77);
    v78.origin.CGFloat x = v15;
    v78.origin.CGFloat y = v16;
    v78.size.width = v17;
    v78.size.height = v18;
    CGFloat v20 = CGRectGetMinY(v78) + 0.0;
    v79.origin.CGFloat x = v15;
    v79.origin.CGFloat y = v16;
    v79.size.width = v17;
    v79.size.height = v18;
    CGFloat v21 = CGRectGetWidth(v79) - v14;
    v80.origin.CGFloat x = v15;
    v80.origin.CGFloat y = v16;
    v80.size.width = v17;
    v80.size.height = v18;
    CGFloat Height = CGRectGetHeight(v80);
    *(double *)(v12 + 168) = v19;
    *(CGFloat *)(v12 + 176) = v20;
    *(CGFloat *)(v12 + 184) = v21;
    *(CGFloat *)(v12 + 192) = Height;
    *(unsigned char *)(v12 + 200) = 0;
    uint64_t v23 = v70;
    uint64_t v24 = v71;
    __swift_project_boxed_opaque_existential_1(v69, v70);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 16))(a1, v12, v23, v24);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  }
  else
  {
    sub_1AD3630A4((uint64_t)&v67);
  }
  sub_1AD363040((uint64_t)v73, (uint64_t)&v67);
  if (v68)
  {
    sub_1AD20FE90(&v67, (uint64_t)v69);
    type metadata accessor for PDFBuilder.Document();
    swift_allocObject();
    uint64_t v25 = sub_1AD4B4AFC(a2);
    if (*(unsigned char *)(v3 + 120))
    {
      v81.origin.CGFloat x = PDFBuilder.Document.drawingContext.getter();
      CGFloat v26 = CGRectGetWidth(v81) * 0.5;
      v82.origin.CGFloat x = sub_1AD362DC4(1, v25);
      double v27 = v26 - CGRectGetWidth(v82) * 0.5;
    }
    else
    {
      v83.origin.CGFloat x = sub_1AD362DC4(0, v25);
      double v29 = CGRectGetWidth(v83);
      v84.origin.CGFloat x = sub_1AD362DC4(2, v25);
      double v30 = CGRectGetWidth(v84);
      v85.origin.CGFloat x = PDFBuilder.Document.drawingContext.getter();
      double v31 = v29 + (CGRectGetWidth(v85) - v29 - v30) * 0.5;
      v86.origin.CGFloat x = sub_1AD362DC4(1, v25);
      double v27 = v31 - CGRectGetWidth(v86) * 0.5;
    }
    CGFloat v32 = *(double *)(v25 + 168);
    CGFloat v33 = *(double *)(v25 + 176);
    CGFloat v34 = *(double *)(v25 + 184);
    CGFloat v35 = *(double *)(v25 + 192);
    v87.origin.CGFloat x = v32;
    v87.origin.CGFloat y = v33;
    v87.size.width = v34;
    v87.size.height = v35;
    double v36 = v27 + CGRectGetMinX(v87);
    v88.origin.CGFloat x = v32;
    v88.origin.CGFloat y = v33;
    v88.size.width = v34;
    v88.size.height = v35;
    CGFloat v37 = CGRectGetMinY(v88) + 0.0;
    v89.origin.CGFloat x = v32;
    v89.origin.CGFloat y = v33;
    v89.size.width = v34;
    v89.size.height = v35;
    CGFloat v38 = CGRectGetWidth(v89) - v27;
    v90.origin.CGFloat x = v32;
    v90.origin.CGFloat y = v33;
    v90.size.width = v34;
    v90.size.height = v35;
    CGFloat v39 = CGRectGetHeight(v90);
    *(double *)(v25 + 168) = v36;
    *(CGFloat *)(v25 + 176) = v37;
    *(CGFloat *)(v25 + 184) = v38;
    *(CGFloat *)(v25 + 192) = v39;
    *(unsigned char *)(v25 + 200) = 0;
    uint64_t v40 = v70;
    uint64_t v41 = v71;
    __swift_project_boxed_opaque_existential_1(v69, v70);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 16))(a1, v25, v40, v41);
    swift_release();
    uint64_t v28 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  }
  else
  {
    uint64_t v28 = sub_1AD3630A4((uint64_t)&v67);
  }
  MEMORY[0x1F4188790](v28);
  v66[2] = v3;
  uint64_t v66[3] = a2;
  uint64_t v42 = sub_1AD2F28A8((void (*)(uint64_t *__return_ptr, char *))sub_1AD363100, (uint64_t)v66, (uint64_t)&unk_1F041D710);
  uint64_t v43 = *(void *)(v42 + 16);
  if (v43)
  {
    double v44 = *(double *)(v42 + 32);
    uint64_t v45 = v43 - 1;
    if (v45)
    {
      uint64_t v46 = (double *)(v42 + 40);
      do
      {
        double v47 = *v46++;
        double v48 = v47;
        if (v44 < v47) {
          double v44 = v48;
        }
        --v45;
      }
      while (v45);
    }
    swift_bridgeObjectRelease();
    double v49 = PDFBuilder.Document.drawingContext.getter();
    uint64_t v51 = v50;
    CGFloat v52 = CGRectGetWidth(*(CGRect *)(a2 + 168));
  }
  else
  {
    swift_bridgeObjectRelease();
    double v49 = 0.0;
    uint64_t v51 = 0;
    CGFloat v52 = 0.0;
    double v44 = 0.0;
  }
  double v53 = v49;
  uint64_t v54 = v51;
  double v55 = v44;
  double v56 = CGRectGetHeight(*(CGRect *)(&v52 - 2));
  v91.origin.CGFloat x = PDFBuilder.Document.drawingContext.getter();
  CGFloat x = v91.origin.x;
  CGFloat y = v91.origin.y;
  CGFloat v59 = v91.size.width;
  CGFloat v60 = v91.size.height;
  CGFloat v61 = CGRectGetMinX(v91) + 0.0;
  v92.origin.CGFloat x = x;
  v92.origin.CGFloat y = y;
  v92.size.width = v59;
  v92.size.height = v60;
  double v62 = v56 + CGRectGetMinY(v92);
  v93.origin.CGFloat x = x;
  v93.origin.CGFloat y = y;
  v93.size.width = v59;
  v93.size.height = v60;
  CGFloat v63 = CGRectGetWidth(v93);
  v94.origin.CGFloat x = x;
  v94.origin.CGFloat y = y;
  v94.size.width = v59;
  v94.size.height = v60;
  CGFloat v64 = CGRectGetHeight(v94);
  *(CGFloat *)(a2 + 168) = v61;
  *(double *)(a2 + 176) = v62;
  *(CGFloat *)(a2 + 184) = v63;
  *(CGFloat *)(a2 + 192) = v64 - v56;
  *(unsigned char *)(a2 + 200) = 0;
  sub_1AD3630A4((uint64_t)v72);
  sub_1AD3630A4((uint64_t)v73);
  return sub_1AD3630A4((uint64_t)v74);
}

double sub_1AD362DC4(char a1, uint64_t a2)
{
  type metadata accessor for PDFBuilder.Document();
  swift_allocObject();
  uint64_t v5 = sub_1AD4B4AFC(a2);
  uint64_t v6 = v5;
  if (*(unsigned char *)(a2 + 96) == 1)
  {
    if (a1 != 2)
    {
      if (a1 == 1)
      {
        long long v7 = *(_OWORD *)(v5 + 48);
        *(_OWORD *)(v5 + 168) = *(_OWORD *)(v5 + 32);
        *(_OWORD *)(v5 + 184) = v7;
        *(unsigned char *)(v5 + 200) = 0;
LABEL_7:
        uint64_t v9 = v2 + 40;
        goto LABEL_12;
      }
      long long v11 = *(_OWORD *)(v5 + 48);
      *(_OWORD *)(v5 + 168) = *(_OWORD *)(v5 + 32);
      *(_OWORD *)(v5 + 184) = v11;
      *(unsigned char *)(v5 + 200) = 0;
      goto LABEL_11;
    }
    long long v10 = *(_OWORD *)(v5 + 48);
    *(_OWORD *)(v5 + 168) = *(_OWORD *)(v5 + 32);
    *(_OWORD *)(v5 + 184) = v10;
    *(unsigned char *)(v5 + 200) = 0;
LABEL_9:
    uint64_t v9 = v2;
    goto LABEL_12;
  }
  long long v8 = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v5 + 168) = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v5 + 184) = v8;
  *(unsigned char *)(v5 + 200) = 0;
  if (!a1) {
    goto LABEL_9;
  }
  if (a1 == 1) {
    goto LABEL_7;
  }
LABEL_11:
  uint64_t v9 = v2 + 80;
LABEL_12:
  sub_1AD363040(v9, (uint64_t)v16);
  uint64_t v12 = v17;
  if (v17)
  {
    uint64_t v13 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    double v14 = (*(double (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))(v6, v12, v13);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    swift_release();
    sub_1AD3630A4((uint64_t)v16);
    return 0.0;
  }
  return v14;
}

double PDFThreeStringSingleLineHStack.boundingRectForContent(in:)(uint64_t a1)
{
  void v11[3] = a1;
  uint64_t v2 = sub_1AD2F28A8((void (*)(uint64_t *__return_ptr, char *))sub_1AD363100, (uint64_t)v11, (uint64_t)&unk_1F041D398);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    double v4 = *(double *)(v2 + 32);
    uint64_t v5 = v3 - 1;
    if (v5)
    {
      uint64_t v6 = (double *)(v2 + 40);
      do
      {
        double v7 = *v6++;
        double v8 = v7;
        if (v4 < v7) {
          double v4 = v8;
        }
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
    double v9 = PDFBuilder.Document.drawingContext.getter();
    CGRectGetWidth(*(CGRect *)(a1 + 168));
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0.0;
  }
  return v9;
}

uint64_t sub_1AD363040(uint64_t a1, uint64_t a2)
{
  sub_1AD3627CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD3630A4(uint64_t a1)
{
  sub_1AD3627CC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AD363100(char *a1@<X0>, CGFloat *a2@<X8>)
{
}

uint64_t sub_1AD363118(uint64_t result)
{
  uint64_t v1 = result + 64;
  char v2 = *(unsigned char *)(result + 32);
  uint64_t v3 = 1 << v2;
  uint64_t v4 = -1;
  if (1 << v2 < 64) {
    uint64_t v4 = ~(-1 << (1 << v2));
  }
  unint64_t v5 = v4 & *(void *)(result + 64);
  if (v5)
  {
    uint64_t v6 = 0;
    unint64_t v7 = __clz(__rbit64(v5));
    unint64_t v8 = (v5 - 1) & v5;
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
  }
  else
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 <= 6) {
      return 0;
    }
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
    unint64_t v17 = *(void *)(result + 72);
    if (v17)
    {
      uint64_t v6 = 1;
    }
    else
    {
      if (v6 < 8) {
        return 0;
      }
      unint64_t v17 = *(void *)(result + 80);
      if (v17)
      {
        uint64_t v6 = 2;
      }
      else
      {
        unint64_t v17 = *(void *)(result + 88);
        if (v17)
        {
          uint64_t v6 = 3;
        }
        else
        {
LABEL_37:
          if (v6 < 9) {
            return 0;
          }
          unint64_t v17 = *(void *)(result + 96);
          if (v17)
          {
            uint64_t v6 = 4;
          }
          else
          {
            unint64_t v17 = *(void *)(result + 104);
            if (!v17) {
              goto LABEL_43;
            }
            uint64_t v6 = 5;
          }
        }
      }
    }
LABEL_30:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v7 = __clz(__rbit64(v17)) + (v6 << 6);
  }
  uint64_t v10 = *(void *)(result + 56);
  uint64_t result = *(void *)(v10 + 8 * v7);
  while (v8)
  {
    unint64_t v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v12 = v11 | (v6 << 6);
LABEL_7:
    uint64_t v13 = *(void *)(v10 + 8 * v12);
    if (result <= v13) {
      uint64_t result = v13;
    }
  }
  int64_t v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v14);
  ++v6;
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 1;
  if (v14 + 1 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 2;
  if (v14 + 2 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 3;
  if (v14 + 3 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15)
  {
LABEL_25:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_7;
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v16);
  if (v15)
  {
    uint64_t v6 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v9) {
      return result;
    }
    unint64_t v15 = *(void *)(v1 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_43:
  uint64_t v18 = 0;
  uint64_t v19 = 6;
  if (v9 > 6) {
    uint64_t v19 = v9;
  }
  uint64_t v20 = v19 - 6;
  while (v20 != v18)
  {
    unint64_t v17 = *(void *)(result + 112 + 8 * v18++);
    if (v17)
    {
      uint64_t v6 = v18 + 5;
      goto LABEL_30;
    }
  }
  return 0;
}

double PDFThreeStringSingleLineHStack.minimumBoundingRectForContent(in:)(uint64_t a1)
{
  void v11[3] = a1;
  uint64_t v2 = sub_1AD2F28A8((void (*)(uint64_t *__return_ptr, char *))sub_1AD363100, (uint64_t)v11, (uint64_t)&unk_1F041D6E8);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    double v4 = *(double *)(v2 + 32);
    uint64_t v5 = v3 - 1;
    if (v5)
    {
      uint64_t v6 = (double *)(v2 + 40);
      do
      {
        double v7 = *v6++;
        double v8 = v7;
        if (v4 < v7) {
          double v4 = v8;
        }
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
    double v9 = PDFBuilder.Document.drawingContext.getter();
    CGRectGetWidth(*(CGRect *)(a1 + 168));
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0.0;
  }
  return v9;
}

void sub_1AD363400(char *a1@<X0>, CGFloat *a2@<X8>)
{
  v4.origin.CGFloat x = sub_1AD362DC4(*a1, *(void *)(v2 + 24));
  *a2 = CGRectGetHeight(v4);
}

unint64_t sub_1AD36344C()
{
  unint64_t result = qword_1E9A2CBB0;
  if (!qword_1E9A2CBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CBB0);
  }
  return result;
}

uint64_t destroy for PDFThreeStringSingleLineHStack(uint64_t result)
{
  uint64_t v1 = result;
  if (*(void *)(result + 24)) {
    unint64_t result = __swift_destroy_boxed_opaque_existential_1(result);
  }
  if (*(void *)(v1 + 64)) {
    unint64_t result = __swift_destroy_boxed_opaque_existential_1(v1 + 40);
  }
  if (*(void *)(v1 + 104))
  {
    return __swift_destroy_boxed_opaque_existential_1(v1 + 80);
  }
  return result;
}

uint64_t initializeWithCopy for PDFThreeStringSingleLineHStack(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  double v7 = (_OWORD *)(a1 + 40);
  double v8 = (_OWORD *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 64);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 56);
    *double v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  unint64_t v12 = (_OWORD *)(a1 + 80);
  uint64_t v13 = (_OWORD *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v14;
    *(void *)(a1 + 112) = v15;
    (**(void (***)(_OWORD *, _OWORD *))(v14 - 8))(v12, v13);
  }
  else
  {
    long long v16 = *(_OWORD *)(a2 + 96);
    *unint64_t v12 = *v13;
    *(_OWORD *)(a1 + 96) = v16;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t assignWithCopy for PDFThreeStringSingleLineHStack(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else if (v4)
  {
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  long long v5 = *a2;
  long long v6 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  uint64_t v7 = *((void *)a2 + 8);
  if (*(void *)(a1 + 64))
  {
    if (v7)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)a2 + 5);
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  else if (v7)
  {
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
    goto LABEL_15;
  }
  long long v8 = *(long long *)((char *)a2 + 40);
  long long v9 = *(long long *)((char *)a2 + 56);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v9;
LABEL_15:
  uint64_t v10 = *((void *)a2 + 13);
  if (!*(void *)(a1 + 104))
  {
    if (v10)
    {
      *(void *)(a1 + 104) = v10;
      *(void *)(a1 + 112) = *((void *)a2 + 14);
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 80, (uint64_t)(a2 + 5));
      goto LABEL_22;
    }
LABEL_21:
    long long v11 = a2[5];
    long long v12 = a2[6];
    *(void *)(a1 + 112) = *((void *)a2 + 14);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = v12;
    goto LABEL_22;
  }
  if (!v10)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
    goto LABEL_21;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)a2 + 10);
LABEL_22:
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  return a1;
}

__n128 __swift_memcpy121_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_OWORD *)(a1 + 105) = *(long long *)((char *)a2 + 105);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for PDFThreeStringSingleLineHStack(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (*(void *)(a1 + 104)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  }
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for PDFThreeStringSingleLineHStack(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 121)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PDFThreeStringSingleLineHStack(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 120) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 121) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PDFThreeStringSingleLineHStack()
{
  return &type metadata for PDFThreeStringSingleLineHStack;
}

unsigned char *storeEnumTagSinglePayload for PDFThreeStringSingleLineHStack.Layout(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AD363A68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PDFThreeStringSingleLineHStack.Layout()
{
  return &type metadata for PDFThreeStringSingleLineHStack.Layout;
}

void sub_1AD363AA0(uint64_t a1)
{
}

void sub_1AD363AB8(uint64_t a1)
{
}

void sub_1AD363AD0(uint64_t a1, void (*a2)(uint64_t, unint64_t))
{
  sub_1AD1FFE38(a1, (uint64_t)&v9);
  sub_1AD2196B8(0, (unint64_t *)&qword_1EB73E870);
  sub_1AD73B520();
  if (swift_dynamicCast()
    && (id v3 = objc_msgSend(v8, sel_userData)) != 0)
  {
    unsigned int v4 = v3;
    uint64_t v5 = sub_1AD73A4E0();
    unint64_t v7 = v6;

    a2(v5, v7);
    sub_1AD208DFC(v5, v7);
  }
  else
  {
    sub_1AD73A930();
    sub_1AD73A920();
    uint64_t v9 = 0;
    unint64_t v10 = 0xE000000000000000;
    sub_1AD740680();
    sub_1AD740E30();
    sub_1AD73F300();
    swift_bridgeObjectRelease();
    sub_1AD73F300();
    sub_1AD740840();
    sub_1AD73A900();
    __break(1u);
    sub_1AD73A930();
    sub_1AD73A920();
    uint64_t v9 = 0;
    unint64_t v10 = 0xE000000000000000;
    sub_1AD740680();
    sub_1AD740E30();
    sub_1AD73F300();
    swift_bridgeObjectRelease();
    sub_1AD73F300();
    sub_1AD2196B8(0, (unint64_t *)&qword_1EB7414A0);
    sub_1AD740840();
    sub_1AD73A900();
    __break(1u);
  }
}

uint64_t sub_1AD363D94(void *a1, char *a2)
{
  uint64_t v5 = sub_1AD73A670();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v11 = (char *)&v18 - v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v2;
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v13(v11, a2, v5);
  type metadata accessor for SharedProfileHeaderDataSource();
  swift_allocObject();
  v13(v9, v11, v5);
  id v14 = sub_1AD4411C8();
  uint64_t v15 = sub_1AD49E430(a1, v14, (uint64_t)sub_1AD365138, 0, (uint64_t)sub_1AD365780, v12, 0);
  long long v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v9, v5);
  v16(v11, v5);
  v16(a2, v5);
  return v15;
}

uint64_t Publisher<>.asProtocolPublisher.getter()
{
  sub_1AD3658D8(255, (unint64_t *)&qword_1EB73E850, (unint64_t *)&qword_1EB73E840, MEMORY[0x1E4F65F00], MEMORY[0x1E4FBB718]);
  uint64_t v0 = sub_1AD73D850();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v6 - v2;
  sub_1AD73DCC0();
  swift_getWitnessTable();
  uint64_t v4 = sub_1AD73DC70();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  sub_1AD2082E8(255, (unint64_t *)&qword_1EB73E850, (unint64_t *)&qword_1EB73E840, MEMORY[0x1E4F65F00], MEMORY[0x1E4FBB718]);
  uint64_t v0 = sub_1AD73D850();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v6 - v2;
  sub_1AD73DCC0();
  swift_getWitnessTable();
  uint64_t v4 = sub_1AD73DC70();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  sub_1AD20FF64(255, (unint64_t *)&qword_1EB73E850, (unint64_t *)&qword_1EB73E840, MEMORY[0x1E4F65F00], MEMORY[0x1E4FBB718]);
  uint64_t v0 = sub_1AD73D850();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v6 - v2;
  sub_1AD73DCC0();
  swift_getWitnessTable();
  uint64_t v4 = sub_1AD73DC70();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  sub_1AD559054(255, (unint64_t *)&qword_1EB73E850, (uint64_t (*)(uint64_t))sub_1AD34AA68, MEMORY[0x1E4FBB718]);
  uint64_t v0 = sub_1AD73D850();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v6 - v2;
  sub_1AD73DCC0();
  swift_getWitnessTable();
  uint64_t v4 = sub_1AD73DC70();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1AD3640E0(uint64_t a1)
{
  uint64_t v2 = sub_1AD73C130();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD363AD0(a1, MEMORY[0x1E4F66128]);
  uint64_t v6 = (void *)sub_1AD365788((uint64_t)v5);
  sub_1AD73C110();
  sub_1AD73C100();
  sub_1AD740280();
  uint64_t v7 = sub_1AD73BBB0();
  swift_allocObject();
  uint64_t v8 = sub_1AD73BBA0();
  id v9 = v6;
  uint64_t v10 = MEMORY[0x1B3E623A0]();
  uint64_t v12 = v11;
  uint64_t v13 = (objc_class *)type metadata accessor for ProfileContactOptionsItem();
  id v14 = objc_allocWithZone(v13);
  id v15 = sub_1AD450858(v9, v10, v12, (uint64_t)&unk_1F041D9B0);

  sub_1AD3658D8(0, (unint64_t *)&qword_1EB73F8D0, (unint64_t *)&qword_1EB73E870, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1AD7511A0;
  uint64_t v17 = MEMORY[0x1E4F66018];
  *(void *)(v16 + 56) = v7;
  *(void *)(v16 + 64) = v17;
  *(void *)(v16 + 32) = v8;
  uint64_t v18 = MEMORY[0x1E4F66140];
  *(void *)(v16 + 96) = v2;
  *(void *)(v16 + 104) = v18;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v16 + 72));
  (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(boxed_opaque_existential_1, v5, v2);
  *(void *)(v16 + 136) = v13;
  *(void *)(v16 + 144) = sub_1AD365940();
  *(void *)(v16 + 112) = v15;

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v16;
}

void sub_1AD364350()
{
}

uint64_t sub_1AD36437C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AD2D7980(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AD73C130();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD365BD8(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    uint64_t result = sub_1AD293B10((uint64_t)v6);
    uint64_t v12 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    sub_1AD365C3C(0, (unint64_t *)&qword_1EB741320, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1AD74C360;
    id v14 = (void *)*MEMORY[0x1E4F1AF98];
    *(void *)(v13 + 32) = *MEMORY[0x1E4F1AF98];
    v19[0] = v13;
    sub_1AD73F4D0();
    sub_1AD2147D4(0, (unint64_t *)&qword_1EB73C100);
    id v15 = v14;
    uint64_t v16 = (void *)sub_1AD73F9E0();
    v19[3] = v7;
    v19[4] = MEMORY[0x1E4F66130];
    uint64_t v19[5] = MEMORY[0x1E4F66138];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
    (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 16))(boxed_opaque_existential_1, v10, v7);
    uint64_t v18 = (void *)sub_1AD73F990();
    swift_bridgeObjectRelease();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    sub_1AD73C090();
    sub_1AD740280();
    sub_1AD73BBB0();
    swift_allocObject();
    uint64_t v12 = sub_1AD73BBA0();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  *a2 = v12;
  return result;
}

uint64_t sub_1AD36465C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1AD73C130();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD2D7980(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  CGFloat v64 = (char *)v59 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v65 = (uint64_t)v59 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v71 = (char *)v59 - v17;
  MEMORY[0x1F4188790](v16);
  long long v66 = (char *)v59 - v18;
  sub_1AD20E2C8();
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = v2 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v24, v20);
  uint64_t v25 = sub_1AD73D260();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  swift_retain();
  uint64_t v26 = sub_1AD365484(v25, v2);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v27 = *(void *)(v26 + 16);
  if (!v27)
  {
LABEL_5:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, 1, 1, v4);
    return swift_bridgeObjectRelease();
  }
  uint64_t v70 = v26 + 32;
  uint64_t v28 = 48;
  uint64_t v29 = v27;
  while (!*(void *)(*(void *)(v26 + v28) + 16))
  {
    v28 += 48;
    if (!--v29) {
      goto LABEL_5;
    }
  }
  CGFloat v63 = v7;
  unint64_t v31 = 0;
  uint64_t v32 = 48;
  while (1)
  {
    uint64_t v33 = *(void *)(*(void *)(v26 + v32) + 16);
    BOOL v34 = v33 == 0;
    if (v33) {
      break;
    }
    ++v31;
    v32 += 48;
    if (v27 == v31)
    {
      swift_bridgeObjectRetain();
      CGFloat v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
LABEL_33:
      uint64_t v27 = (uint64_t)v66;
      v35(v66, 1, 1, v4);
      swift_bridgeObjectRelease();
      double v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
LABEL_34:
      if (v44(v27, 1, v4) == 1) {
        goto LABEL_43;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, v27, v4);
      return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v35)(a1, 0, 1, v4);
    }
  }
  uint64_t v62 = a1;
  swift_bridgeObjectRetain();
  uint64_t v36 = v5;
  unint64_t v37 = 0;
  unint64_t v69 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
  uint64_t v61 = v36;
  uint64_t v68 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  v59[1] = (v36 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  CGFloat v60 = v11;
  while (1)
  {
    if ((v31 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v31 >= *(void *)(v26 + 16)) {
      goto LABEL_37;
    }
    if (v34) {
      goto LABEL_41;
    }
    unint64_t v38 = v70 + 48 * v31;
    uint64_t v41 = *(void *)(v38 + 16);
    unint64_t v40 = v38 + 16;
    uint64_t v39 = v41;
    if (v37 >= *(void *)(v41 + 16)) {
      goto LABEL_38;
    }
    uint64_t v42 = v27;
    sub_1AD1FFE38(v39 + 40 * v37 + 32, (uint64_t)v73);
    sub_1AD1FFE38((uint64_t)v73, (uint64_t)v72);
    sub_1AD2196B8(0, (unint64_t *)&qword_1EB73E870);
    swift_bridgeObjectRetain();
    uint64_t v27 = (uint64_t)v71;
    int v43 = swift_dynamicCast();
    long long v67 = *v69;
    v67((char *)v27, v43 ^ 1u, 1, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
    swift_bridgeObjectRelease();
    double v44 = *v68;
    uint64_t v45 = v4;
    unsigned int v46 = (*v68)(v27, 1, v4);
    sub_1AD293B10(v27);
    if (v46 != 1) {
      break;
    }
    if (++v37 == *(void *)(*(void *)v40 + 16))
    {
      ++v31;
      uint64_t v27 = v42;
      if (v31 == v42)
      {
        uint64_t v4 = v45;
        unint64_t v37 = 0;
        BOOL v34 = 1;
LABEL_28:
        unint64_t v31 = v42;
      }
      else
      {
        sub_1AD365998();
        v59[0] = sub_1AD365AE8();
        while (1)
        {
          swift_bridgeObjectRetain();
          double v47 = sub_1AD49FD08(v73, v31, v26, (void (*)(void *))sub_1AD364E94);
          uint64_t v49 = *v48;
          swift_bridgeObjectRetain();
          ((void (*)(void *, void))v47)(v73, 0);
          swift_bridgeObjectRelease();
          uint64_t v50 = *(void *)(v49 + 16);
          swift_bridgeObjectRelease();
          BOOL v34 = v50 == 0;
          if (v50) {
            break;
          }
          unint64_t v51 = v31 + 1;
          if (__OFADD__(v31, 1)) {
            goto LABEL_40;
          }
          ++v31;
          if (v51 == v42)
          {
            uint64_t v4 = v45;
            unint64_t v37 = 0;
            goto LABEL_28;
          }
        }
        unint64_t v37 = 0;
        uint64_t v4 = v45;
      }
    }
    else
    {
      BOOL v34 = 0;
      uint64_t v4 = v45;
      uint64_t v27 = v42;
    }
    if (v31 == v27 && v34)
    {
      a1 = v62;
      uint64_t v5 = v61;
      CGFloat v35 = v67;
      goto LABEL_33;
    }
  }
  if (v37 >= *(void *)(*(void *)v40 + 16))
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  sub_1AD1FFE38(*(void *)v40 + 40 * v37 + 32, (uint64_t)v73);
  sub_1AD1FFE38((uint64_t)v73, (uint64_t)v72);
  uint64_t v52 = (uint64_t)v64;
  uint64_t v4 = v45;
  int v53 = swift_dynamicCast();
  v67((char *)v52, v53 ^ 1u, 1, v45);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  uint64_t v54 = v65;
  sub_1AD365B74(v52, v65);
  uint64_t v55 = (uint64_t)v60;
  sub_1AD365BD8(v54, (uint64_t)v60);
  unsigned int v56 = v44(v55, 1, v4);
  uint64_t v27 = (uint64_t)v66;
  if (v56 != 1)
  {
    uint64_t v5 = v61;
    uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 32);
    id v58 = v63;
    v57(v63, v55, v4);
    sub_1AD293B10(v54);
    v57((char *)v27, (uint64_t)v58, v4);
    CGFloat v35 = v67;
    v67((char *)v27, 0, 1, v4);
    swift_bridgeObjectRelease();
    a1 = v62;
    goto LABEL_34;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  sub_1AD293B10(v27);
  uint64_t result = sub_1AD7408B0();
  __break(1u);
  return result;
}

uint64_t sub_1AD364E94@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD364EA0(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = sub_1AD73A670();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, a2, v12);
  id v16 = sub_1AD4411C8();
  uint64_t v17 = sub_1AD44028C(a1, v16, a3, a4, a5, a6);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v13 + 8);
  v18(v15, v12);
  v18(a2, v12);
  return v17;
}

uint64_t sub_1AD364FFC()
{
  _s18HealthExperienceUI0A31KitProfileInformationDataSourceCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD365050@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  if (*a1)
  {
    uint64_t v4 = sub_1AD73BBB0();
    uint64_t v5 = MEMORY[0x1E4F66010];
    *(void *)(a2 + 24) = v4;
    *(void *)(a2 + 32) = v5;
    *(void *)a2 = v3;
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return swift_retain();
}

uint64_t type metadata accessor for SharedProfileHeaderDataSource()
{
  uint64_t result = qword_1E9A2CBB8;
  if (!qword_1E9A2CBB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AD365100()
{
  return swift_initClassMetadata2();
}

id sub_1AD365138()
{
  if (qword_1EB740020 != -1) {
    swift_once();
  }
  long long v24 = xmmword_1EB73ED88;
  long long v25 = xmmword_1EB73ED98;
  long long v22 = xmmword_1EB73ED68;
  long long v23 = unk_1EB73ED78;
  long long v20 = unk_1EB73ED48;
  long long v21 = *(_OWORD *)&qword_1EB73ED58;
  *(_OWORD *)uint64_t v19 = xmmword_1EB73ED28;
  *(_OWORD *)&v19[16] = *(_OWORD *)&qword_1EB73ED38;
  long long v0 = xmmword_1EB73ED98;
  long long v1 = unk_1EB73ED78;
  uint64_t v2 = unk_1EB73ED60;
  long long v3 = xmmword_1EB73ED68;
  uint64_t v4 = unk_1EB73ED40;
  long long v6 = unk_1EB73ED48;
  uint64_t v5 = (void *)qword_1EB73ED58;
  long long v8 = *(_OWORD *)&v19[8];
  long long v9 = xmmword_1EB73ED88;
  sub_1AD212ECC((uint64_t)v19);
  sub_1AD215100(v4, v6, *((void **)&v6 + 1), v5);
  sub_1AD215100(v2, v3, *((void **)&v3 + 1), (void *)v1);
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F830);
  uint64_t v10 = 0;
  long long v11 = v8;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v16 = *((void *)&v1 + 1);
  long long v17 = v9;
  long long v18 = v0;
  return sub_1AD213458((long long *)&v10);
}

void *sub_1AD365284(uint64_t a1)
{
  uint64_t result = (void *)MEMORY[0x1E4FBC860];
  long long v21 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1AD21A834(v5, v6, (uint64_t)&v17);
      swift_bridgeObjectRelease();
      if (v18)
      {
        sub_1AD20FE90(&v17, (uint64_t)v20);
        sub_1AD20FE90(v20, (uint64_t)&v17);
        uint64_t v7 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v7 = sub_1AD1FE01C(0, v7[2] + 1, 1, v7);
          long long v21 = v7;
        }
        unint64_t v9 = v7[2];
        unint64_t v8 = v7[3];
        if (v9 >= v8 >> 1) {
          long long v21 = sub_1AD1FE01C((void *)(v8 > 1), v9 + 1, 1, v7);
        }
        uint64_t v10 = v18;
        uint64_t v11 = v19;
        uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v17, v18);
        MEMORY[0x1F4188790](v12);
        long long v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v15 + 16))(v14);
        sub_1AD1FAE5C(v9, (uint64_t)v14, (uint64_t *)&v21, v10, v11);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
      }
      else
      {
        sub_1AD1E1AA8((uint64_t)&v17);
      }
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v21;
  }
  return result;
}

uint64_t sub_1AD365484(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1AD20E2C8();
  uint64_t v37 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v36 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v42 = MEMORY[0x1E4FBC860];
    sub_1AD1FBB8C(0, v9, 0);
    uint64_t v10 = v42;
    uint64_t v31 = a2;
    uint64_t v34 = a2 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
    swift_beginAccess();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v11 = v7 + 16;
    uint64_t v32 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v33 = v12;
    uint64_t v13 = (uint64_t *)(a1 + 40);
    uint64_t v35 = v11;
    do
    {
      uint64_t v14 = *(v13 - 1);
      uint64_t v15 = *v13;
      long long v17 = v36;
      uint64_t v16 = v37;
      v33(v36, v34, v37);
      uint64_t v39 = v14;
      uint64_t v40 = v14;
      uint64_t v41 = v15;
      swift_bridgeObjectRetain();
      sub_1AD73D1E0();
      char v19 = v18;
      long long v20 = *v32;
      (*v32)(v17, v16);
      uint64_t v21 = MEMORY[0x1E4FBC860];
      if ((v19 & 1) == 0)
      {
        long long v22 = v36;
        uint64_t v23 = v37;
        v33(v36, v34, v37);
        uint64_t v40 = v39;
        uint64_t v41 = v15;
        uint64_t v21 = sub_1AD73D210();
        v20(v22, v23);
      }
      swift_retain();
      long long v24 = sub_1AD365284(v21);
      uint64_t v38 = v3;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRetain();
      sub_1AD1FBD54(MEMORY[0x1E4FBC860]);
      uint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = Array<A>.identifierToIndexDict()(v25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v42 = v10;
      unint64_t v28 = *(void *)(v10 + 16);
      unint64_t v27 = *(void *)(v10 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1AD1FBB8C(v27 > 1, v28 + 1, 1);
        uint64_t v10 = v42;
      }
      v13 += 2;
      *(void *)(v10 + 16) = v28 + 1;
      uint64_t v29 = (void *)(v10 + 48 * v28);
      v29[4] = 0;
      v29[5] = 0;
      v29[6] = v24;
      v29[7] = v26;
      uint64_t v3 = v38;
      v29[8] = v39;
      v29[9] = v15;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1AD365770()
{
  return swift_deallocObject();
}

uint64_t sub_1AD365780(uint64_t a1)
{
  return sub_1AD3640E0(a1);
}

uint64_t sub_1AD365788(uint64_t a1)
{
  uint64_t v9 = MEMORY[0x1E4FBC860];
  id v2 = objc_msgSend(self, sel_descriptorForRequiredKeys);
  MEMORY[0x1B3E657B0]();
  if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1AD73F510();
  }
  sub_1AD73F560();
  sub_1AD73F4D0();
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73C100);
  uint64_t v3 = (void *)sub_1AD73F9E0();
  uint64_t v4 = sub_1AD73C130();
  v8[3] = v4;
  v8[4] = MEMORY[0x1E4F66130];
  void v8[5] = MEMORY[0x1E4F66138];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(boxed_opaque_existential_1, a1, v4);
  uint64_t v6 = sub_1AD73F990();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

void sub_1AD3658D8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1AD2196B8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1AD365940()
{
  unint64_t result = qword_1E9A31980;
  if (!qword_1E9A31980)
  {
    type metadata accessor for ProfileContactOptionsItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A31980);
  }
  return result;
}

void sub_1AD365998()
{
  if (!qword_1E9A2CBC8)
  {
    sub_1AD365C3C(255, &qword_1E9A2CBD0, (uint64_t)&type metadata for ArrayDataSourceSection, MEMORY[0x1E4FBB320]);
    sub_1AD3658D8(255, (unint64_t *)&unk_1EB73F750, (unint64_t *)&qword_1EB73E870, MEMORY[0x1E4F66028], MEMORY[0x1E4FBB320]);
    sub_1AD365A80(&qword_1E9A2CBD8);
    unint64_t v0 = sub_1AD740820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2CBC8);
    }
  }
}

uint64_t sub_1AD365A80(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AD365C3C(255, &qword_1E9A2CBD0, (uint64_t)&type metadata for ArrayDataSourceSection, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AD365AE8()
{
  unint64_t result = qword_1E9A2CBE0;
  if (!qword_1E9A2CBE0)
  {
    sub_1AD365998();
    sub_1AD365A80(&qword_1E9A2CBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CBE0);
  }
  return result;
}

uint64_t sub_1AD365B74(uint64_t a1, uint64_t a2)
{
  sub_1AD2D7980(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD365BD8(uint64_t a1, uint64_t a2)
{
  sub_1AD2D7980(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1AD365C3C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AD365C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  if (a2) {
    uint64_t v10 = (void *)sub_1AD73F180();
  }
  else {
    uint64_t v10 = 0;
  }
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v10);

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(a4 + 16) + 8))(a3);
  if (result)
  {
    uint64_t v12 = (void *)(result + OBJC_IVAR____TtC18HealthExperienceUI19ProvidedViewContext_baseAutomationIdentifier);
    swift_beginAccess();
    *uint64_t v12 = a1;
    v12[1] = a2;
    swift_bridgeObjectRetain();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1AD365D74@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr, void))(v5 + 24))(&v7, *result);
    uint64_t result = (void *)swift_release();
    char v6 = v7;
  }
  else
  {
    char v6 = 2;
  }
  *a3 = v6;
  return result;
}

unint64_t sub_1AD365E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (unint64_t)sub_1AD3660B8(a3, (uint64_t)&off_1F04322B0) & 1;
}

void *sub_1AD365E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD365FF0(a3, (uint64_t)&off_1F04322B0);
}

void *sub_1AD365E7C@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  return sub_1AD365D74(a1, (uint64_t)&off_1F04322B0, a2);
}

uint64_t sub_1AD365EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD36613C(a3, (uint64_t)&off_1F04322B0);
}

uint64_t sub_1AD365ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD365C88(a1, a2, a3, (uint64_t)&off_1F04322B0);
}

unint64_t sub_1AD365F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (unint64_t)sub_1AD3660B8(a3, (uint64_t)&off_1F043E570) & 1;
}

void *sub_1AD365F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD365FF0(a3, (uint64_t)&off_1F043E570);
}

void *sub_1AD365F68@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  return sub_1AD365D74(a1, (uint64_t)&off_1F043E570, a2);
}

uint64_t sub_1AD365F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD36613C(a3, (uint64_t)&off_1F043E570);
}

uint64_t sub_1AD365FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD365C88(a1, a2, a3, (uint64_t)&off_1F043E570);
}

void *sub_1AD365FF0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(a2 + 8) + 24))();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
  if (result)
  {
    (*(void (**)(void))(v5 + 40))(*result);
    return (void *)swift_release();
  }
  return result;
}

void *sub_1AD3660B8(uint64_t a1, uint64_t a2)
{
  uint64_t result = (void *)(*(uint64_t (**)(void))(a2 + 80))();
  if (result)
  {
    char v4 = (*(uint64_t (**)(void))(v3 + 16))(*result);
    swift_release();
    return (void *)(v4 & 1);
  }
  return result;
}

uint64_t sub_1AD36613C(uint64_t a1, uint64_t a2)
{
  id v2 = (void *)(*(uint64_t (**)(void))(a2 + 80))();
  if (!v2) {
    return 2;
  }
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 32))(*v2);
  swift_release();
  return v4;
}

uint64_t SwiftChartPoint.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SwiftChartPoint.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *id v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SwiftChartPoint.id.modify())(void, void)
{
  return nullsub_1;
}

uint64_t SwiftChartPoint.dateInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SwiftChartPoint() + 20);
  uint64_t v4 = sub_1AD739E10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t SwiftChartPoint.dateInterval.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SwiftChartPoint() + 20);
  uint64_t v4 = sub_1AD739E10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*SwiftChartPoint.dateInterval.modify())(void, void)
{
  return nullsub_1;
}

double SwiftChartPoint.value.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for SwiftChartPoint() + 24));
}

uint64_t SwiftChartPoint.value.setter(double a1)
{
  uint64_t result = type metadata accessor for SwiftChartPoint();
  *(double *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*SwiftChartPoint.value.modify())(void, void)
{
  return nullsub_1;
}

uint64_t SwiftChartPoint.value2.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SwiftChartPoint() + 28));
}

uint64_t SwiftChartPoint.value2.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for SwiftChartPoint();
  uint64_t v6 = v2 + *(int *)(result + 28);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*SwiftChartPoint.value2.modify())(void, void)
{
  return nullsub_1;
}

uint64_t SwiftChartPoint.init(dateInterval:value:value2:id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>, double a7@<D0>)
{
  uint64_t v14 = (int *)type metadata accessor for SwiftChartPoint();
  uint64_t v15 = (char *)a6 + v14[7];
  uint64_t v16 = (char *)a6 + v14[5];
  uint64_t v17 = sub_1AD739E10();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a1, v17);
  *(double *)((char *)a6 + v14[6]) = a7;
  *(void *)uint64_t v15 = a2;
  v15[8] = a3 & 1;
  *a6 = a4;
  a6[1] = a5;
  return result;
}

uint64_t static SwiftChartPoint.daily(dateInterval:value:value2:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X8>, double a5@<D0>)
{
  uint64_t v10 = sub_1AD73A600();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1AD739E10();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  uint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  sub_1AD739DF0();
  sub_1AD73A500();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1AD73F6A0();
  uint64_t v18 = v23;
  unint64_t v19 = v24;
  long long v20 = (int *)type metadata accessor for SwiftChartPoint();
  uint64_t v21 = &a4[v20[7]];
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(&a4[v20[5]], v17, v14);
  *(double *)&a4[v20[6]] = a5;
  *(void *)uint64_t v21 = a2;
  v21[8] = a3 & 1;
  *(void *)a4 = v18;
  *((void *)a4 + 1) = v19;
  return result;
}

uint64_t static SwiftChartPoint.unique(dateInterval:value:value2:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X8>, double a5@<D0>)
{
  uint64_t v10 = sub_1AD73A600();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1AD739E10();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  sub_1AD739DF0();
  sub_1AD73A500();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1AD73F6A0();
  sub_1AD73F300();
  sub_1AD73F6A0();
  sub_1AD73F300();
  uint64_t v23 = a2;
  LOBYTE(v10) = a3 & 1;
  char v24 = a3 & 1;
  sub_1AD366A34();
  sub_1AD740320();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  uint64_t v18 = v25;
  unint64_t v19 = v26;
  long long v20 = (int *)type metadata accessor for SwiftChartPoint();
  uint64_t v21 = &a4[v20[7]];
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(&a4[v20[5]], v17, v14);
  *(double *)&a4[v20[6]] = a5;
  *(void *)uint64_t v21 = a2;
  v21[8] = v10;
  *(void *)a4 = v18;
  *((void *)a4 + 1) = v19;
  return result;
}

void sub_1AD366A34()
{
  if (!qword_1EB73CA48)
  {
    unint64_t v0 = sub_1AD740340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB73CA48);
    }
  }
}

uint64_t SwiftChartPoint.init(diagramStyle:dateInterval:value:value2:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  int v31 = a4;
  uint64_t v33 = a3;
  uint64_t v30 = a1;
  uint64_t v9 = sub_1AD73A600();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1AD739E10();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (int *)type metadata accessor for SwiftChartPoint();
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  long long v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(int *)(v18 + 28);
  uint64_t v32 = a5;
  uint64_t v22 = a5 + v21;
  uint64_t v23 = a2;
  *(void *)uint64_t v22 = 0;
  *(unsigned char *)(v22 + 8) = 1;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  char v24 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  if (v30 == 9)
  {
    sub_1AD739DF0();
    sub_1AD73A500();
    (*v24)(v12, v9);
    sub_1AD73F6A0();
    sub_1AD73F300();
    sub_1AD73F6A0();
    sub_1AD73F300();
    uint64_t v34 = v33;
    char v25 = v31;
    char v35 = v31 & 1;
    sub_1AD366A34();
    sub_1AD740320();
    sub_1AD73F300();
    swift_bridgeObjectRelease();
    uint64_t v26 = v36;
    unint64_t v27 = v37;
  }
  else
  {
    sub_1AD739DF0();
    sub_1AD73A500();
    (*v24)(v12, v9);
    sub_1AD73F6A0();
    uint64_t v26 = v36;
    unint64_t v27 = v37;
    char v25 = v31;
  }
  unint64_t v28 = &v20[v17[7]];
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v20[v17[5]], v16, v13);
  *(double *)&v20[v17[6]] = a6;
  *(void *)unint64_t v28 = v33;
  v28[8] = v25 & 1;
  *(void *)long long v20 = v26;
  *((void *)v20 + 1) = v27;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v23, v13);
  return sub_1AD367104((uint64_t)v20, v32);
}

uint64_t sub_1AD366E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AD367794(a1, a2);
  *a3 = result;
  return result;
}

void sub_1AD366E48(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1AD366E54(uint64_t a1)
{
  unint64_t v2 = sub_1AD1F1C00();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AD366E90(uint64_t a1)
{
  unint64_t v2 = sub_1AD1F1C00();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SwiftChartPoint.encode(to:)(void *a1)
{
  sub_1AD1F1998(0, &qword_1EB73CA58, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD1F1C00();
  sub_1AD740D90();
  v9[15] = 0;
  sub_1AD740AC0();
  if (!v1)
  {
    type metadata accessor for SwiftChartPoint();
    v9[14] = 1;
    sub_1AD739E10();
    sub_1AD1F1C54(&qword_1EB73CAB8);
    sub_1AD740B00();
    v9[13] = 2;
    sub_1AD740AE0();
    v9[12] = 3;
    sub_1AD740A90();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AD3670E8(void *a1)
{
  return SwiftChartPoint.encode(to:)(a1);
}

uint64_t sub_1AD367104(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SwiftChartPoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s18HealthExperienceUI15SwiftChartPointV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SwiftChartPoint();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v26 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v26 - v14;
  char v16 = sub_1AD739DA0();
  sub_1AD1F1AD0(a1, (uint64_t)v15);
  sub_1AD1F1AD0(a2, (uint64_t)v13);
  if ((v16 & 1) == 0)
  {
    sub_1AD1F19FC((uint64_t)v13);
    sub_1AD1F19FC((uint64_t)v15);
    sub_1AD1F1AD0(a1, (uint64_t)v10);
    sub_1AD1F1AD0(a2, (uint64_t)v7);
    goto LABEL_6;
  }
  double v17 = *(double *)&v15[*(int *)(v4 + 24)];
  sub_1AD1F19FC((uint64_t)v15);
  double v18 = *(double *)&v13[*(int *)(v4 + 24)];
  sub_1AD1F19FC((uint64_t)v13);
  sub_1AD1F1AD0(a1, (uint64_t)v10);
  sub_1AD1F1AD0(a2, (uint64_t)v7);
  if (v17 != v18)
  {
LABEL_6:
    sub_1AD1F19FC((uint64_t)v7);
    sub_1AD1F19FC((uint64_t)v10);
    return 0;
  }
  uint64_t v19 = &v10[*(int *)(v4 + 28)];
  double v20 = *(double *)v19;
  char v21 = v19[8];
  sub_1AD1F19FC((uint64_t)v10);
  uint64_t v22 = &v7[*(int *)(v4 + 28)];
  double v23 = *(double *)v22;
  uint64_t v24 = v22[8];
  sub_1AD1F19FC((uint64_t)v7);
  if ((v21 & 1) == 0) {
    return (v20 == v23) & ~v24;
  }
  return v24;
}

void *assignWithCopy for SwiftChartPoint(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AD739E10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v13;
  return a1;
}

_OWORD *initializeWithTake for SwiftChartPoint(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AD739E10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  return a1;
}

void *assignWithTake for SwiftChartPoint(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1AD739E10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v12 = (char *)a1 + v11;
  char v13 = (char *)a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for SwiftChartPoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AD367598);
}

uint64_t sub_1AD367598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1AD739E10();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SwiftChartPoint(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AD36765C);
}

uint64_t sub_1AD36765C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1AD739E10();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

ValueMetadata *type metadata accessor for SwiftChartPoint.CodingKeys()
{
  return &type metadata for SwiftChartPoint.CodingKeys;
}

unint64_t sub_1AD367740()
{
  unint64_t result = qword_1E9A2CBF0;
  if (!qword_1E9A2CBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CBF0);
  }
  return result;
}

uint64_t sub_1AD367794(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746E4965746164 && a2 == 0xEC0000006C617672 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x3265756C6176 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1AD740BC0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void sub_1AD367940()
{
  qword_1E9A2CBF8 = 0x4042000000000000;
}

void sub_1AD367950()
{
  qword_1E9A2CC00 = 0x4030000000000000;
}

void sub_1AD367960()
{
  qword_1E9A2CC08 = 0x4034000000000000;
}

void sub_1AD367970()
{
  qword_1E9A2CC10 = 0x4054000000000000;
}

void sub_1AD367980()
{
  qword_1E9A2CC18 = 0x4030000000000000;
}

double static ProminentMessageWithActionTileViewWithImage.ViewModel.Padding.defaultConfiguration.getter@<D0>(uint64_t a1@<X8>)
{
  if (qword_1E9A29180 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1E9A2CC18;
  if (qword_1E9A29178 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1E9A2CC10;
  *(void *)a1 = v2;
  *(double *)(a1 + 8) = result;
  return result;
}

uint64_t ProminentMessageWithActionTileViewWithImage.ViewModel.init(contentPrimaryText:contentSecondaryText:contentActionText:imageRepresentation:padding:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, void *a9@<X8>)
{
  uint64_t v11 = *a8;
  uint64_t v12 = a8[1];
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  uint64_t v13 = type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel(0);
  uint64_t result = sub_1AD36F268(a7, (uint64_t)a9 + *(int *)(v13 + 28), (uint64_t (*)(void))sub_1AD35850C);
  uint64_t v15 = (void *)((char *)a9 + *(int *)(v13 + 32));
  *uint64_t v15 = v11;
  v15[1] = v12;
  return result;
}

uint64_t ProminentMessageWithActionTileViewWithImage.ViewModel.Padding.init(imageBottomPadding:imageHeight:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v7 = result;
  if (a2)
  {
    if (qword_1E9A29180 != -1) {
      uint64_t result = swift_once();
    }
    uint64_t v7 = qword_1E9A2CC18;
  }
  if (a4)
  {
    if (qword_1E9A29178 != -1) {
      uint64_t result = swift_once();
    }
    a3 = qword_1E9A2CC10;
  }
  *a5 = v7;
  a5[1] = a3;
  return result;
}

uint64_t type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel(uint64_t a1)
{
  return sub_1AD20CA30(a1, (uint64_t *)&unk_1E9A2CCE0);
}

uint64_t sub_1AD367B7C()
{
  if (*v0) {
    return 0x6965486567616D69;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_1AD367BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AD36DFE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD367BEC(uint64_t a1)
{
  unint64_t v2 = sub_1AD367E2C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AD367C28(uint64_t a1)
{
  unint64_t v2 = sub_1AD367E2C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ProminentMessageWithActionTileViewWithImage.ViewModel.Padding.encode(to:)(void *a1)
{
  sub_1AD368A04(0, &qword_1E9A2CC20, (uint64_t (*)(void))sub_1AD367E2C, (uint64_t)&type metadata for ProminentMessageWithActionTileViewWithImage.ViewModel.Padding.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD367E2C();
  sub_1AD740D90();
  uint64_t v14 = v10;
  char v13 = 0;
  sub_1AD294234();
  sub_1AD740B00();
  if (!v2)
  {
    uint64_t v14 = v9;
    char v13 = 1;
    sub_1AD740B00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1AD367E2C()
{
  unint64_t result = qword_1E9A2CC28;
  if (!qword_1E9A2CC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CC28);
  }
  return result;
}

uint64_t ProminentMessageWithActionTileViewWithImage.ViewModel.Padding.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1AD368A04(0, &qword_1E9A2CC30, (uint64_t (*)(void))sub_1AD367E2C, (uint64_t)&type metadata for ProminentMessageWithActionTileViewWithImage.ViewModel.Padding.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD367E2C();
  sub_1AD740D80();
  if (!v2)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v15;
    char v16 = 0;
    sub_1AD294498();
    sub_1AD740A40();
    uint64_t v11 = v17;
    char v16 = 1;
    sub_1AD740A40();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    uint64_t v13 = v17;
    void *v10 = v11;
    v10[1] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1AD368094(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x676E6964646170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AD368148@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ProminentMessageWithActionTileViewWithImage.ViewModel.Padding.init(from:)(a1, a2);
}

uint64_t sub_1AD368160(void *a1)
{
  return ProminentMessageWithActionTileViewWithImage.ViewModel.Padding.encode(to:)(a1);
}

unint64_t sub_1AD368178()
{
  return sub_1AD368094(*v0);
}

uint64_t sub_1AD368180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AD36E0E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD3681A8(uint64_t a1)
{
  unint64_t v2 = sub_1AD3684A8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AD3681E4(uint64_t a1)
{
  unint64_t v2 = sub_1AD3684A8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ProminentMessageWithActionTileViewWithImage.ViewModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1AD368A04(0, &qword_1E9A2CC38, (uint64_t (*)(void))sub_1AD3684A8, (uint64_t)&type metadata for ProminentMessageWithActionTileViewWithImage.ViewModel.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD3684A8();
  sub_1AD740D90();
  LOBYTE(v12) = 0;
  sub_1AD740AC0();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1AD740A80();
    LOBYTE(v12) = 2;
    sub_1AD740A80();
    uint64_t v10 = type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel(0);
    LOBYTE(v12) = 3;
    sub_1AD73B970();
    sub_1AD1AF184(&qword_1EB73CAF0, MEMORY[0x1E4F65F88]);
    sub_1AD740AB0();
    long long v12 = *(_OWORD *)(v3 + *(int *)(v10 + 32));
    char v13 = 4;
    sub_1AD3684FC();
    sub_1AD740B00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1AD3684A8()
{
  unint64_t result = qword_1E9A2CC40;
  if (!qword_1E9A2CC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CC40);
  }
  return result;
}

unint64_t sub_1AD3684FC()
{
  unint64_t result = qword_1E9A2CC48;
  if (!qword_1E9A2CC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CC48);
  }
  return result;
}

uint64_t ProminentMessageWithActionTileViewWithImage.ViewModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  sub_1AD35850C();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD368A04(0, &qword_1E9A2CC50, (uint64_t (*)(void))sub_1AD3684A8, (uint64_t)&type metadata for ProminentMessageWithActionTileViewWithImage.ViewModel.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD3684A8();
  uint64_t v26 = v8;
  uint64_t v12 = v27;
  sub_1AD740D80();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)v5;
  uint64_t v14 = (uint64_t)a1;
  uint64_t v15 = v24;
  uint64_t v16 = v25;
  LOBYTE(v28) = 0;
  *uint64_t v11 = sub_1AD740A00();
  v11[1] = v17;
  LOBYTE(v28) = 1;
  v11[2] = sub_1AD7409C0();
  void v11[3] = v18;
  LOBYTE(v28) = 2;
  uint64_t v19 = sub_1AD7409C0();
  uint64_t v27 = 0;
  void v11[4] = v19;
  void v11[5] = v21;
  sub_1AD73B970();
  LOBYTE(v28) = 3;
  sub_1AD1AF184(&qword_1EB738440, MEMORY[0x1E4F65F88]);
  sub_1AD7409F0();
  sub_1AD36F268(v13, (uint64_t)v11 + *(int *)(v9 + 28), (uint64_t (*)(void))sub_1AD35850C);
  char v29 = 4;
  sub_1AD368A6C();
  sub_1AD740A40();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v26, v16);
  *(_OWORD *)((char *)v11 + *(int *)(v9 + 32)) = v28;
  sub_1AD36F344((uint64_t)v11, v23, type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel);
  __swift_destroy_boxed_opaque_existential_1(v14);
  return sub_1AD36F5BC((uint64_t)v11, type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel);
}

void sub_1AD368A04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1AD368A6C()
{
  unint64_t result = qword_1E9A2CC58;
  if (!qword_1E9A2CC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CC58);
  }
  return result;
}

uint64_t sub_1AD368AC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ProminentMessageWithActionTileViewWithImage.ViewModel.init(from:)(a1, a2);
}

uint64_t sub_1AD368AD8(void *a1)
{
  return ProminentMessageWithActionTileViewWithImage.ViewModel.encode(to:)(a1);
}

uint64_t ProminentMessageWithActionTileViewWithImage.viewModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ProminentMessageWithActionTileViewWithImage(0);
  return sub_1AD36F344(v1 + *(int *)(v3 + 24), a1, type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel);
}

uint64_t type metadata accessor for ProminentMessageWithActionTileViewWithImage(uint64_t a1)
{
  return sub_1AD20CA30(a1, (uint64_t *)&unk_1E9A2CCD0);
}

uint64_t ProminentMessageWithActionTileViewWithImage.didTapAction.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ProminentMessageWithActionTileViewWithImage(0) + 28));
  swift_retain();
  return v1;
}

uint64_t ProminentMessageWithActionTileViewWithImage.init(_:didTapAction:didTapDismiss:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  type metadata accessor for ProvidedViewContext(0);
  sub_1AD1AF184(&qword_1EB739D80, (void (*)(uint64_t))type metadata accessor for ProvidedViewContext);
  uint64_t v8 = sub_1AD73E150();
  uint64_t v10 = v9;
  swift_release();
  *a4 = v8;
  a4[1] = v10;
  uint64_t v11 = (int *)type metadata accessor for ProminentMessageWithActionTileViewWithImage(0);
  uint64_t v12 = (uint64_t *)((char *)a4 + v11[5]);
  *uint64_t v12 = swift_getKeyPath();
  sub_1AD36B204(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = sub_1AD36F268(a1, (uint64_t)a4 + v11[6], type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel);
  uint64_t v14 = (uint64_t *)((char *)a4 + v11[7]);
  void *v14 = a2;
  v14[1] = a3;
  return result;
}

uint64_t ProminentMessageWithActionTileViewWithImage.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1AD36B238(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD36EC34(0, &qword_1E9A2CCB0, sub_1AD36B238);
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v25 - v9;
  *(void *)a1 = sub_1AD73E430();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_1AD36B50C();
  uint64_t v12 = *(int *)(v11 + 44);
  *(void *)uint64_t v6 = sub_1AD73E430();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  sub_1AD36B598(0, &qword_1E9A2CCC0, sub_1AD36B274);
  sub_1AD368EF4(v2, (uint64_t)&v6[*(int *)(v13 + 44)]);
  if (qword_1E9A29160 != -1) {
    swift_once();
  }
  char v14 = sub_1AD73E740();
  sub_1AD73DE60();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  sub_1AD36F344((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))sub_1AD36B238);
  uint64_t v23 = &v10[*(int *)(v8 + 36)];
  *uint64_t v23 = v14;
  *((void *)v23 + 1) = v16;
  *((void *)v23 + 2) = v18;
  *((void *)v23 + 3) = v20;
  *((void *)v23 + 4) = v22;
  v23[40] = 0;
  sub_1AD36F5BC((uint64_t)v6, (uint64_t (*)(void))sub_1AD36B238);
  return sub_1AD36B5FC((uint64_t)v10, a1 + v12, (uint64_t)&qword_1E9A2CCB0, (uint64_t)sub_1AD36B238, MEMORY[0x1E4F3CAB0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1AD36EC34);
}

uint64_t sub_1AD368EF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v121 = a2;
  uint64_t v3 = type metadata accessor for ProminentMessageWithActionTileViewWithImage(0);
  uint64_t v4 = v3 - 8;
  uint64_t v118 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v119 = v5;
  uint64_t v120 = (uint64_t)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD2204BC(0);
  uint64_t v106 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v110 = (uint64_t *)((char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v111 = sub_1AD73EC20();
  uint64_t v109 = *(void *)(v111 - 8);
  MEMORY[0x1F4188790](v111);
  uint64_t v108 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1AD73EC00();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD36B418();
  uint64_t v105 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD36B3F0(0);
  uint64_t v107 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v112 = (uint64_t)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD36B3C8(0);
  uint64_t v114 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v113 = (uint64_t)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD36EB98(0, &qword_1E9A2CC80, sub_1AD36B3C8, MEMORY[0x1E4F3DF60]);
  uint64_t v116 = v20;
  uint64_t v115 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v103 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v104 = (uint64_t)&v98 - v23;
  sub_1AD35850C();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1AD73B970();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD36B334(0);
  uint64_t v32 = MEMORY[0x1F4188790](v31 - 8);
  uint64_t v117 = (uint64_t)&v98 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v122 = a1;
  uint64_t v123 = (uint64_t)&v98 - v34;
  uint64_t v35 = *(int *)(v4 + 32);
  uint64_t v36 = v27;
  unint64_t v37 = (char *)a1 + v35;
  uint64_t v38 = type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel(0);
  sub_1AD36F344((uint64_t)&v37[*(int *)(v38 + 28)], (uint64_t)v26, (uint64_t (*)(void))sub_1AD35850C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v36) == 1)
  {
    sub_1AD36F5BC((uint64_t)v26, (uint64_t (*)(void))sub_1AD35850C);
    uint64_t v39 = 1;
    uint64_t v40 = (uint64_t)v122;
    uint64_t v41 = v123;
LABEL_9:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v115 + 56))(v41, v39, 1, v116);
    uint64_t v77 = *((void *)v37 + 1);
    uint64_t v122 = *(void **)v37;
    type metadata accessor for ProvidedViewContext(0);
    uint64_t v78 = v41;
    sub_1AD1AF184(&qword_1EB739D80, (void (*)(uint64_t))type metadata accessor for ProvidedViewContext);
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_1AD73E150();
    uint64_t v114 = v80;
    uint64_t v81 = *((void *)v37 + 3);
    uint64_t v116 = *((void *)v37 + 2);
    uint64_t v82 = *((void *)v37 + 5);
    uint64_t v115 = *((void *)v37 + 4);
    uint64_t v83 = v120;
    sub_1AD36F344(v40, v120, type metadata accessor for ProminentMessageWithActionTileViewWithImage);
    unint64_t v84 = (*(unsigned __int8 *)(v118 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80);
    uint64_t v85 = swift_allocObject();
    sub_1AD36F268(v83, v85 + v84, type metadata accessor for ProminentMessageWithActionTileViewWithImage);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v86 = sub_1AD73E150();
    uint64_t v88 = v87;
    uint64_t v89 = v78;
    uint64_t v90 = v117;
    sub_1AD36F344(v89, v117, (uint64_t (*)(void))sub_1AD36B334);
    uint64_t v91 = v121;
    sub_1AD36F344(v90, v121, (uint64_t (*)(void))sub_1AD36B334);
    sub_1AD36B2A8();
    CGRect v93 = (uint64_t *)(v91 + v92[12]);
    uint64_t v94 = v114;
    *CGRect v93 = v79;
    v93[1] = v94;
    v93[2] = (uint64_t)v122;
    v93[3] = v77;
    uint64_t v95 = v91 + v92[16];
    *(void *)uint64_t v95 = 0;
    *(unsigned char *)(v95 + 8) = 0;
    unint64_t v96 = (uint64_t *)(v91 + v92[20]);
    *unint64_t v96 = v86;
    v96[1] = v88;
    v96[2] = v116;
    void v96[3] = v81;
    v96[4] = v115;
    v96[5] = v82;
    v96[6] = (uint64_t)sub_1AD36F2D0;
    v96[7] = v85;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1AD21485C((uint64_t)sub_1AD36F2D0);
    sub_1AD36F5BC(v123, (uint64_t (*)(void))sub_1AD36B334);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1AD1E4514((uint64_t)sub_1AD36F2D0);
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1AD36F5BC(v90, (uint64_t (*)(void))sub_1AD36B334);
  }
  uint64_t v102 = v28;
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  uint64_t v100 = v36;
  v42(v30, v26, v36);
  uint64_t v99 = v30;
  sub_1AD73B960();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4F3EBF8], v9);
  uint64_t v43 = sub_1AD73EC30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v44 = sub_1AD73E7B0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v46 = *MEMORY[0x1E4F3EC70];
  uint64_t v47 = v109;
  double v48 = *(void (**)(char *, uint64_t, uint64_t))(v109 + 104);
  uint64_t v101 = v38;
  uint64_t v49 = v108;
  uint64_t v50 = v111;
  v48(v108, v46, v111);
  uint64_t v51 = swift_getKeyPath();
  uint64_t v52 = v110;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))((char *)v110 + *(int *)(v106 + 28), v49, v50);
  *uint64_t v52 = v51;
  sub_1AD36F344((uint64_t)v52, (uint64_t)&v15[*(int *)(v105 + 36)], (uint64_t (*)(void))sub_1AD2204BC);
  *(void *)uint64_t v15 = v43;
  *((void *)v15 + 1) = 0;
  *((_WORD *)v15 + 8) = 1;
  *((void *)v15 + 3) = KeyPath;
  *((void *)v15 + 4) = v44;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1AD36F5BC((uint64_t)v52, (uint64_t (*)(void))sub_1AD2204BC);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v50);
  swift_release();
  swift_release();
  swift_release();
  sub_1AD73EE10();
  sub_1AD73DF30();
  uint64_t v53 = v112;
  sub_1AD36F344((uint64_t)v15, v112, (uint64_t (*)(void))sub_1AD36B418);
  uint64_t v54 = (_OWORD *)(v53 + *(int *)(v107 + 36));
  long long v55 = v125;
  *uint64_t v54 = v124;
  v54[1] = v55;
  v54[2] = v126;
  sub_1AD36F5BC((uint64_t)v15, (uint64_t (*)(void))sub_1AD36B418);
  LOBYTE(v50) = sub_1AD73E760();
  sub_1AD73DE60();
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v64 = v113;
  sub_1AD36F344(v53, v113, (uint64_t (*)(void))sub_1AD36B3F0);
  uint64_t v65 = v64 + *(int *)(v114 + 36);
  *(unsigned char *)uint64_t v65 = v50;
  *(void *)(v65 + 8) = v57;
  *(void *)(v65 + 16) = v59;
  *(void *)(v65 + 24) = v61;
  *(void *)(v65 + 32) = v63;
  *(unsigned char *)(v65 + 40) = 0;
  sub_1AD36F5BC(v53, (uint64_t (*)(void))sub_1AD36B3F0);
  sub_1AD2202CC(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = xmmword_1AD74C350;
  uint64_t v40 = (uint64_t)v122;
  if (*v122)
  {
    long long v67 = (void *)v66;
    uint64_t v68 = (uint64_t *)(*v122 + OBJC_IVAR____TtC18HealthExperienceUI19ProvidedViewContext_baseAutomationIdentifier);
    swift_beginAccess();
    uint64_t v41 = v123;
    if (v68[1])
    {
      uint64_t v69 = *v68;
      uint64_t v70 = v68[1];
    }
    else
    {
      uint64_t v69 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    }
    uint64_t v71 = v102;
    v67[4] = v69;
    v67[5] = v70;
    v67[6] = 1852793673;
    v67[7] = 0xE400000000000000;
    swift_bridgeObjectRetain();
    uint64_t v72 = (void *)sub_1AD73F490();
    swift_bridgeObjectRelease();
    id v73 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v73)
    {
      _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

      sub_1AD36EE8C(&qword_1E9A2CDD8, sub_1AD36B3C8, (void (*)(void))sub_1AD36F3AC);
      uint64_t v74 = (uint64_t)v103;
      sub_1AD73EAA0();
      swift_bridgeObjectRelease();
      sub_1AD36F5BC(v64, (uint64_t (*)(void))sub_1AD36B3C8);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v99, v100);
      uint64_t v75 = MEMORY[0x1E4F3DF60];
      uint64_t v76 = v104;
      sub_1AD36B5FC(v74, v104, (uint64_t)&qword_1E9A2CC80, (uint64_t)sub_1AD36B3C8, MEMORY[0x1E4F3DF60], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1AD36EB98);
      sub_1AD36B5FC(v76, v41, (uint64_t)&qword_1E9A2CC80, (uint64_t)sub_1AD36B3C8, v75, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1AD36EB98);
      uint64_t v39 = 0;
      goto LABEL_9;
    }
    __break(1u);
  }
  type metadata accessor for ProvidedViewContext(0);
  sub_1AD1AF184(&qword_1EB739D80, (void (*)(uint64_t))type metadata accessor for ProvidedViewContext);
  uint64_t result = sub_1AD73E140();
  __break(1u);
  return result;
}

uint64_t sub_1AD369CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v44[1] = a2;
  uint64_t v51 = a1;
  uint64_t v49 = a5;
  sub_1AD36EB30(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1AD73E900();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD36EB64(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v46 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  sub_1AD20F9FC();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1AD73E9B0();
  uint64_t v50 = v17;
  int v19 = v18;
  uint64_t v21 = v20;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4F3E148], v10);
  uint64_t v23 = sub_1AD73E7F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 1, 1, v23);
  sub_1AD73E810();
  uint64_t v24 = sub_1AD73E8A0();
  sub_1AD36F5BC((uint64_t)v9, (uint64_t (*)(void))sub_1AD36EB30);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v25 = swift_getKeyPath();
  uint64_t v26 = sub_1AD73EBB0();
  uint64_t v27 = swift_getKeyPath();
  char v28 = sub_1AD73E760();
  if (qword_1E9A29168 != -1) {
    swift_once();
  }
  sub_1AD73DE60();
  int v45 = v19;
  char v29 = v19 & 1;
  char v79 = v19 & 1;
  char v74 = 0;
  uint64_t v47 = v16;
  uint64_t v52 = v16;
  uint64_t v30 = v50;
  uint64_t v53 = v50;
  char v54 = v29;
  *(_DWORD *)long long v55 = *(_DWORD *)v78;
  *(_DWORD *)&v55[3] = *(_DWORD *)&v78[3];
  uint64_t v56 = v21;
  __int16 v57 = 256;
  int v58 = *(_DWORD *)&v76[7];
  __int16 v59 = v77;
  uint64_t v48 = KeyPath;
  uint64_t v60 = KeyPath;
  char v61 = 1;
  *(_DWORD *)&v62[3] = *(_DWORD *)&v76[3];
  *(_DWORD *)uint64_t v62 = *(_DWORD *)v76;
  v44[2] = v25;
  uint64_t v63 = v25;
  uint64_t v64 = v24;
  uint64_t v65 = v27;
  uint64_t v66 = v26;
  char v67 = v28;
  *(_DWORD *)&v68[3] = *(_DWORD *)&v75[3];
  *(_DWORD *)uint64_t v68 = *(_DWORD *)v75;
  uint64_t v69 = v31;
  uint64_t v70 = v32;
  uint64_t v71 = v33;
  uint64_t v72 = v34;
  char v73 = 0;
  sub_1AD2202CC(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1AD74C350;
  if (v51)
  {
    uint64_t v36 = (void *)v35;
    unint64_t v37 = (uint64_t *)(v51 + OBJC_IVAR____TtC18HealthExperienceUI19ProvidedViewContext_baseAutomationIdentifier);
    swift_beginAccess();
    if (v37[1])
    {
      uint64_t v38 = *v37;
      uint64_t v39 = v37[1];
    }
    else
    {
      uint64_t v38 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    }
    v36[4] = v38;
    v36[5] = v39;
    v36[6] = 0x656C746954;
    v36[7] = 0xE500000000000000;
    swift_bridgeObjectRetain();
    uint64_t v40 = (void *)sub_1AD73F490();
    swift_bridgeObjectRelease();
    id v41 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v41)
    {
      _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

      sub_1AD36EC0C(0);
      sub_1AD36EE58();
      uint64_t v42 = (uint64_t)v46;
      sub_1AD73EAA0();
      swift_bridgeObjectRelease();
      sub_1AD1CB6E0(v47, v30, v45 & 1);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return sub_1AD36F268(v42, v49, (uint64_t (*)(void))sub_1AD36EB64);
    }
    __break(1u);
  }
  type metadata accessor for ProvidedViewContext(0);
  sub_1AD1AF184(&qword_1EB739D80, (void (*)(uint64_t))type metadata accessor for ProvidedViewContext);
  uint64_t result = sub_1AD73E140();
  __break(1u);
  return result;
}

uint64_t sub_1AD36A2A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD369CDC(*v1, v1[1], v1[2], v1[3], a1);
}

uint64_t sub_1AD36A2B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AD36E500(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = &v30[-v9];
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v30[-v11];
  sub_1AD36E38C(0);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = &v30[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  int v19 = &v30[-v18];
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = &v30[-v20];
  uint64_t v22 = a1[3];
  if (v22)
  {
    uint64_t v31 = a1[2];
    uint64_t v32 = v22;
    swift_bridgeObjectRetain();
    sub_1AD36A73C(&v31, a1, (uint64_t)v19);
    sub_1AD36EB98(0, &qword_1E9A2CD60, (void (*)(uint64_t))sub_1AD36E3B4, MEMORY[0x1E4F3DF60]);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v19, 0, 1, v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AD36EB98(0, &qword_1E9A2CD60, (void (*)(uint64_t))sub_1AD36E3B4, MEMORY[0x1E4F3DF60]);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v19, 1, 1, v24);
  }
  sub_1AD36F268((uint64_t)v19, (uint64_t)v21, (uint64_t (*)(void))sub_1AD36E38C);
  uint64_t v25 = a1[5];
  if (v25)
  {
    uint64_t v31 = a1[4];
    uint64_t v32 = v25;
    swift_bridgeObjectRetain();
    sub_1AD36AB20(&v31, a1, (uint64_t)v10);
    sub_1AD36EB98(0, &qword_1E9A2CD80, sub_1AD36E528, MEMORY[0x1E4F3DF60]);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v10, 0, 1, v26);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AD36EB98(0, &qword_1E9A2CD80, sub_1AD36E528, MEMORY[0x1E4F3DF60]);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v10, 1, 1, v27);
  }
  sub_1AD36F268((uint64_t)v10, (uint64_t)v12, (uint64_t (*)(void))sub_1AD36E500);
  sub_1AD36F344((uint64_t)v21, (uint64_t)v16, (uint64_t (*)(void))sub_1AD36E38C);
  sub_1AD36F344((uint64_t)v12, (uint64_t)v7, (uint64_t (*)(void))sub_1AD36E500);
  sub_1AD36F344((uint64_t)v16, a2, (uint64_t (*)(void))sub_1AD36E38C);
  sub_1AD36E31C();
  sub_1AD36F344((uint64_t)v7, a2 + *(int *)(v28 + 48), (uint64_t (*)(void))sub_1AD36E500);
  sub_1AD36F5BC((uint64_t)v12, (uint64_t (*)(void))sub_1AD36E500);
  sub_1AD36F5BC((uint64_t)v21, (uint64_t (*)(void))sub_1AD36E38C);
  sub_1AD36F5BC((uint64_t)v7, (uint64_t (*)(void))sub_1AD36E500);
  return sub_1AD36F5BC((uint64_t)v16, (uint64_t (*)(void))sub_1AD36E38C);
}

uint64_t sub_1AD36A73C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  void v31[2] = a3;
  id v41 = a2;
  uint64_t v4 = sub_1AD73E8C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v32 = v8;
  uint64_t v33 = v9;
  sub_1AD20F9FC();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1AD73E9B0();
  uint64_t v12 = v11;
  char v14 = v13;
  uint64_t v16 = v15;
  sub_1AD73E7E0();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F3E0F8], v4);
  uint64_t v17 = sub_1AD73E8D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = swift_getKeyPath();
  v31[0] = v10;
  v31[1] = v16;
  uint64_t v32 = v10;
  uint64_t v20 = v12;
  char v21 = v14;
  uint64_t v33 = v20;
  char v34 = v14 & 1;
  uint64_t v35 = v16;
  __int16 v36 = 256;
  uint64_t v37 = KeyPath;
  uint64_t v38 = v17;
  uint64_t v39 = v19;
  char v40 = 1;
  sub_1AD2202CC(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v41;
  *(_OWORD *)(v22 + 16) = xmmword_1AD74C350;
  if (*v23)
  {
    uint64_t v24 = (void *)v22;
    uint64_t v25 = (uint64_t *)(*v23 + OBJC_IVAR____TtC18HealthExperienceUI19ProvidedViewContext_baseAutomationIdentifier);
    swift_beginAccess();
    if (v25[1])
    {
      uint64_t v26 = *v25;
      uint64_t v27 = v25[1];
    }
    else
    {
      uint64_t v26 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    }
    v24[4] = v26;
    v24[5] = v27;
    v24[6] = 0x7470697263736544;
    v24[7] = 0xEB000000006E6F69;
    swift_bridgeObjectRetain();
    uint64_t v28 = (void *)sub_1AD73F490();
    swift_bridgeObjectRelease();
    id v29 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v29)
    {
      _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

      sub_1AD36E3B4();
      sub_1AD36F790(&qword_1E9A2CDB8, (void (*)(uint64_t))sub_1AD36E3B4, (void (*)(void))sub_1AD36E774, (void (*)(void))sub_1AD220800);
      sub_1AD73EAA0();
      swift_bridgeObjectRelease();
      sub_1AD1CB6E0(v31[0], v20, v21 & 1);
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    __break(1u);
  }
  type metadata accessor for ProvidedViewContext(0);
  sub_1AD1AF184(&qword_1EB739D80, (void (*)(uint64_t))type metadata accessor for ProvidedViewContext);
  uint64_t result = sub_1AD73E140();
  __break(1u);
  return result;
}

uint64_t sub_1AD36AB20@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  v43[1] = a3;
  uint64_t v54 = sub_1AD73E0D0();
  uint64_t v51 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v50 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1AD73E630();
  uint64_t v49 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD36E65C(0, (unint64_t *)&qword_1E9A2CD98, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3E2E8], MEMORY[0x1E4F3ECD0]);
  uint64_t v44 = v8;
  uint64_t v46 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v43 - v9;
  sub_1AD36E55C();
  uint64_t v48 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  char v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD36E528(0);
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *a1;
  uint64_t v20 = a1[1];
  uint64_t v52 = v19;
  uint64_t v53 = v20;
  char v21 = (_OWORD *)swift_allocObject();
  long long v22 = a2[1];
  v21[1] = *a2;
  v21[2] = v22;
  long long v23 = a2[2];
  long long v24 = a2[3];
  int v45 = a2;
  v21[3] = v23;
  v21[4] = v24;
  swift_bridgeObjectRetain();
  sub_1AD36E950((uint64_t)a2);
  sub_1AD20F9FC();
  sub_1AD73EC70();
  sub_1AD73E620();
  sub_1AD36E6AC();
  sub_1AD1AF184(&qword_1E9A2CDA8, MEMORY[0x1E4F3DEB8]);
  uint64_t v25 = v44;
  uint64_t v26 = v47;
  sub_1AD73EA40();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v7, v26);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v25);
  uint64_t v27 = v50;
  sub_1AD73E0C0();
  uint64_t KeyPath = swift_getKeyPath();
  id v29 = (uint64_t *)&v18[*(int *)(v16 + 36)];
  sub_1AD36E730(0);
  uint64_t v31 = v51;
  uint64_t v32 = v54;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))((char *)v29 + *(int *)(v30 + 28), v27, v54);
  *id v29 = KeyPath;
  uint64_t v33 = v48;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v14, v48);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v32);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v33);
  sub_1AD2202CC(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = v45;
  *(_OWORD *)(v34 + 16) = xmmword_1AD74C350;
  if (*v35)
  {
    __int16 v36 = (void *)v34;
    uint64_t v37 = (uint64_t *)(*v35 + OBJC_IVAR____TtC18HealthExperienceUI19ProvidedViewContext_baseAutomationIdentifier);
    swift_beginAccess();
    if (v37[1])
    {
      uint64_t v38 = *v37;
      uint64_t v39 = v37[1];
    }
    else
    {
      uint64_t v38 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    }
    v36[4] = v38;
    v36[5] = v39;
    v36[6] = 1802398028;
    v36[7] = 0xE400000000000000;
    swift_bridgeObjectRetain();
    char v40 = (void *)sub_1AD73F490();
    swift_bridgeObjectRelease();
    id v41 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v41)
    {
      _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

      sub_1AD36E9DC();
      sub_1AD73EAA0();
      swift_bridgeObjectRelease();
      return sub_1AD36F5BC((uint64_t)v18, (uint64_t (*)(void))sub_1AD36E528);
    }
    __break(1u);
  }
  type metadata accessor for ProvidedViewContext(0);
  sub_1AD1AF184(&qword_1EB739D80, (void (*)(uint64_t))type metadata accessor for ProvidedViewContext);
  uint64_t result = sub_1AD73E140();
  __break(1u);
  return result;
}

uint64_t sub_1AD36B14C@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[1];
  v8[0] = *v1;
  v8[1] = v3;
  long long v4 = v1[3];
  long long v8[2] = v1[2];
  v8[3] = v4;
  if (qword_1E9A29170 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1E9A2CC08;
  *(void *)a1 = sub_1AD73E430();
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = 0;
  sub_1AD36B598(0, &qword_1E9A2CD40, sub_1AD36E2E8);
  return sub_1AD36A2B0(v8, a1 + *(int *)(v6 + 44));
}

void sub_1AD36B204(uint64_t a1)
{
}

void sub_1AD36B238(uint64_t a1)
{
}

void sub_1AD36B274(uint64_t a1)
{
}

void sub_1AD36B2A8()
{
  if (!qword_1E9A2CC70)
  {
    sub_1AD36B334(255);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1E9A2CC70);
    }
  }
}

void sub_1AD36B334(uint64_t a1)
{
}

void sub_1AD36B35C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1AD36EB98(255, a3, a4, MEMORY[0x1E4F3DF60]);
    unint64_t v5 = sub_1AD740340();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1AD36B3C8(uint64_t a1)
{
}

void sub_1AD36B3F0(uint64_t a1)
{
}

void sub_1AD36B418()
{
  if (!qword_1E9A2CC98)
  {
    sub_1AD36E460(255, &qword_1E9A2CCA0, (unint64_t *)&qword_1EB738CE8, MEMORY[0x1E4F3EC98], MEMORY[0x1E4F3D4F8]);
    sub_1AD2204BC(255);
    unint64_t v0 = sub_1AD73E080();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2CC98);
    }
  }
}

void sub_1AD36B4A0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1AD2202CC(255, a3, a4, MEMORY[0x1E4FBB718]);
    unint64_t v5 = sub_1AD73E6D0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1AD36B50C()
{
  if (!qword_1E9A2CCB8)
  {
    sub_1AD36EC34(255, &qword_1E9A2CCB0, sub_1AD36B238);
    unint64_t v0 = sub_1AD73DF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2CCB8);
    }
  }
}

void sub_1AD36B598(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AD73DF70();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1AD36B5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_1AD36B670(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1AD1AF184(&qword_1E9A2B380, (void (*)(uint64_t))type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel);
  uint64_t result = sub_1AD1AF184(&qword_1E9A2CCC8, (void (*)(uint64_t))type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1AD36B6F4()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for ProminentMessageWithActionTileViewWithImage(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    sub_1AD36B204(0);
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_1AD73E030();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = a2;
    uint64_t v12 = a3[6];
    uint64_t v13 = (void *)((char *)v7 + v12);
    char v14 = (char *)a2 + v12;
    uint64_t v15 = *(void *)((char *)a2 + v12 + 8);
    *uint64_t v13 = *(void *)((char *)a2 + v12);
    v13[1] = v15;
    uint64_t v16 = *(void *)((char *)a2 + v12 + 24);
    _OWORD v13[2] = *(void *)((char *)a2 + v12 + 16);
    uint64_t v13[3] = v16;
    uint64_t v17 = *(void *)((char *)a2 + v12 + 40);
    v13[4] = *(void *)((char *)a2 + v12 + 32);
    uint64_t v13[5] = v17;
    uint64_t v18 = type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel(0);
    uint64_t v19 = *(int *)(v18 + 28);
    __dst = (char *)v13 + v19;
    uint64_t v31 = v18;
    uint64_t v20 = &v14[v19];
    uint64_t v21 = sub_1AD73B970();
    uint64_t v22 = *(void *)(v21 - 8);
    id v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29(v20, 1, v21))
    {
      sub_1AD35850C();
      memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    *(_OWORD *)((char *)v13 + *(int *)(v31 + 32)) = *(_OWORD *)&v14[*(int *)(v31 + 32)];
    uint64_t v24 = a3[7];
    uint64_t v25 = (void *)((char *)v7 + v24);
    uint64_t v26 = (void *)((char *)v32 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
  }
  swift_retain();
  return v7;
}

uint64_t destroy for ProminentMessageWithActionTileViewWithImage(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1AD36B204(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1AD73E030();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + *(int *)(type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel(0) + 28);
  uint64_t v8 = sub_1AD73B970();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  return swift_release();
}

void *initializeWithCopy for ProminentMessageWithActionTileViewWithImage(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_1AD36B204(0);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1AD73E030();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = a3;
  uint64_t v32 = a2;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v33 = a1;
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)((char *)a2 + v11 + 8);
  *uint64_t v12 = *(void *)((char *)a2 + v11);
  v12[1] = v14;
  uint64_t v15 = *(void *)((char *)a2 + v11 + 24);
  v12[2] = *(void *)((char *)a2 + v11 + 16);
  v12[3] = v15;
  uint64_t v16 = *(void *)((char *)a2 + v11 + 40);
  v12[4] = *(void *)((char *)a2 + v11 + 32);
  v12[5] = v16;
  uint64_t v17 = type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel(0);
  uint64_t v18 = *(int *)(v17 + 28);
  __dst = (char *)v12 + v18;
  uint64_t v30 = v17;
  uint64_t v19 = &v13[v18];
  uint64_t v20 = sub_1AD73B970();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    sub_1AD35850C();
    memcpy(__dst, v19, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  *(_OWORD *)((char *)v12 + *(int *)(v30 + 32)) = *(_OWORD *)&v13[*(int *)(v30 + 32)];
  uint64_t v24 = *(int *)(v31 + 28);
  uint64_t v25 = (void *)((char *)v33 + v24);
  uint64_t v26 = (void *)((char *)v32 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  swift_retain();
  return v33;
}

void *assignWithCopy for ProminentMessageWithActionTileViewWithImage(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1AD36F5BC((uint64_t)a1 + v6, (uint64_t (*)(void))sub_1AD36B204);
    sub_1AD36B204(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_1AD73E030();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v31 = a2;
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *(void *)((char *)a2 + v10);
  v11[1] = *(void *)((char *)a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = v12[2];
  void v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v11[4] = v12[4];
  void v11[5] = v12[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel(0);
  uint64_t v13 = *(int *)(v30 + 28);
  uint64_t v14 = (char *)v11 + v13;
  uint64_t v15 = (char *)v12 + v13;
  uint64_t v16 = sub_1AD73B970();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_11;
  }
  if (v20)
  {
LABEL_11:
    sub_1AD35850C();
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_12:
  uint64_t v22 = *(int *)(v30 + 32);
  uint64_t v23 = (void *)((char *)v11 + v22);
  uint64_t v24 = (void *)((char *)v12 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  uint64_t v25 = a3[7];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)v31 + v25);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for ProminentMessageWithActionTileViewWithImage(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1AD36B204(0);
  uint64_t v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1AD73E030();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = (_OWORD *)((char *)a1 + v12);
  uint64_t v14 = (char *)a2 + v12;
  long long v15 = *(_OWORD *)((char *)a2 + v12 + 16);
  *uint64_t v13 = *(_OWORD *)((char *)a2 + v12);
  v13[1] = v15;
  _OWORD v13[2] = *(_OWORD *)((char *)a2 + v12 + 32);
  uint64_t v16 = type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel(0);
  uint64_t v17 = *(int *)(v16 + 28);
  uint64_t v18 = (char *)v13 + v17;
  int v19 = &v14[v17];
  uint64_t v20 = sub_1AD73B970();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    sub_1AD35850C();
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  *(_OWORD *)((char *)v13 + *(int *)(v16 + 32)) = *(_OWORD *)&v14[*(int *)(v16 + 32)];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  return a1;
}

void *assignWithTake for ProminentMessageWithActionTileViewWithImage(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1AD36F5BC((uint64_t)a1 + v6, (uint64_t (*)(void))sub_1AD36B204);
    sub_1AD36B204(0);
    uint64_t v10 = v9;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_1AD73E030();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  id v29 = a2;
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = *(void *)((char *)a2 + v12 + 8);
  *uint64_t v13 = *(void *)((char *)a2 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = v14[3];
  _OWORD v13[2] = v14[2];
  uint64_t v13[3] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = v14[5];
  v13[4] = v14[4];
  uint64_t v13[5] = v17;
  swift_bridgeObjectRelease();
  uint64_t v28 = type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel(0);
  uint64_t v18 = *(int *)(v28 + 28);
  int v19 = (char *)v13 + v18;
  uint64_t v20 = (char *)v14 + v18;
  uint64_t v21 = sub_1AD73B970();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_10;
  }
  if (v25)
  {
LABEL_10:
    sub_1AD35850C();
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_11:
  *(_OWORD *)((char *)v13 + *(int *)(v28 + 32)) = *(_OWORD *)((char *)v14 + *(int *)(v28 + 32));
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)v29 + a3[7]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ProminentMessageWithActionTileViewWithImage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AD36C558);
}

uint64_t sub_1AD36C558(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1AD228374(0, qword_1E9A2B450, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C658]);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel(0);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[7]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for ProminentMessageWithActionTileViewWithImage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AD36C6AC);
}

uint64_t sub_1AD36C6AC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1AD228374(0, qword_1E9A2B450, MEMORY[0x1E4F3CB98], MEMORY[0x1E4F3C658]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel(0);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[7]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  return v13(a1 + v11, a2, a2, v9);
}

void sub_1AD36C7E8()
{
  sub_1AD36B204(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ProminentMessageWithActionTileViewWithImage.ViewModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    uint64_t v9 = *(int *)(a3 + 28);
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v11 = sub_1AD73B970();
    uint64_t v12 = *(void *)(v11 - 8);
    unint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1AD35850C();
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    *(_OWORD *)((char *)v4 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  }
  return v4;
}

uint64_t destroy for ProminentMessageWithActionTileViewWithImage.ViewModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1AD73B970();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for ProminentMessageWithActionTileViewWithImage.ViewModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = *(int *)(a3 + 28);
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v10 = sub_1AD73B970();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1AD35850C();
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

void *assignWithCopy for ProminentMessageWithActionTileViewWithImage.ViewModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AD73B970();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1AD35850C();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  return a1;
}

_OWORD *initializeWithTake for ProminentMessageWithActionTileViewWithImage.ViewModel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1AD73B970();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1AD35850C();
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

void *assignWithTake for ProminentMessageWithActionTileViewWithImage.ViewModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1AD73B970();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1AD35850C();
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t getEnumTagSinglePayload for ProminentMessageWithActionTileViewWithImage.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AD36D1C8);
}

uint64_t sub_1AD36D1C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1AD35850C();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ProminentMessageWithActionTileViewWithImage.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AD36D28C);
}

uint64_t sub_1AD36D28C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1AD35850C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1AD36D334()
{
  sub_1AD35850C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel.Padding()
{
  return &type metadata for ProminentMessageWithActionTileViewWithImage.ViewModel.Padding;
}

uint64_t sub_1AD36D3F0()
{
  return sub_1AD1AF184(&qword_1E9A2CCF0, (void (*)(uint64_t))sub_1AD36D438);
}

void sub_1AD36D438()
{
  if (!qword_1E9A2CCF8)
  {
    sub_1AD36EC34(255, &qword_1E9A2CCB0, sub_1AD36B238);
    sub_1AD36D4C0();
    unint64_t v0 = sub_1AD73ECE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2CCF8);
    }
  }
}

unint64_t sub_1AD36D4C0()
{
  unint64_t result = qword_1E9A2CD00;
  if (!qword_1E9A2CD00)
  {
    sub_1AD36EC34(255, &qword_1E9A2CCB0, sub_1AD36B238);
    sub_1AD1AF184(&qword_1E9A2CD08, sub_1AD36B238);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CD00);
  }
  return result;
}

uint64_t destroy for ContentSecondaryTextAndActionView(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for ContentSecondaryTextAndActionView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = (_OWORD *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v5;
    *(void *)(a1 + 56) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *v6;
  }
  return a1;
}

void *assignWithCopy for ContentSecondaryTextAndActionView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[6];
  if (!a1[6])
  {
    if (v4)
    {
      uint64_t v6 = a2[7];
      a1[6] = v4;
      a1[7] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[7];
  a1[6] = v4;
  a1[7] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ContentSecondaryTextAndActionView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  if (!*(void *)(a1 + 48))
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v5;
      *(void *)(a1 + 56) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentSecondaryTextAndActionView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentSecondaryTextAndActionView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentSecondaryTextAndActionView()
{
  return &type metadata for ContentSecondaryTextAndActionView;
}

uint64_t destroy for ContentPrimaryTextView()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContentPrimaryTextView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ContentPrimaryTextView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContentPrimaryTextView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentPrimaryTextView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentPrimaryTextView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentPrimaryTextView()
{
  return &type metadata for ContentPrimaryTextView;
}

unsigned char *storeEnumTagSinglePayload for ProminentMessageWithActionTileViewWithImage.ViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AD36DB94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel.CodingKeys()
{
  return &type metadata for ProminentMessageWithActionTileViewWithImage.ViewModel.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ProminentMessageWithActionTileViewWithImage.ViewModel.Padding.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1AD36DC98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel.Padding.CodingKeys()
{
  return &type metadata for ProminentMessageWithActionTileViewWithImage.ViewModel.Padding.CodingKeys;
}

unint64_t sub_1AD36DCD4()
{
  unint64_t result = qword_1E9A2CD10;
  if (!qword_1E9A2CD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CD10);
  }
  return result;
}

unint64_t sub_1AD36DD2C()
{
  unint64_t result = qword_1E9A2CD18;
  if (!qword_1E9A2CD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CD18);
  }
  return result;
}

uint64_t sub_1AD36DD80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AD36DD9C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1AD36DDBC()
{
  unint64_t result = qword_1E9A2CD20;
  if (!qword_1E9A2CD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CD20);
  }
  return result;
}

unint64_t sub_1AD36DE14()
{
  unint64_t result = qword_1E9A2CD28;
  if (!qword_1E9A2CD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CD28);
  }
  return result;
}

unint64_t sub_1AD36DE6C()
{
  unint64_t result = qword_1E9A2CD30;
  if (!qword_1E9A2CD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CD30);
  }
  return result;
}

unint64_t sub_1AD36DEC4()
{
  unint64_t result = qword_1E9A2CD38;
  if (!qword_1E9A2CD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CD38);
  }
  return result;
}

uint64_t sub_1AD36DF18(uint64_t a1)
{
  uint64_t v2 = sub_1AD73E0D0();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1AD73E270();
}

uint64_t sub_1AD36DFE0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001AD77A190 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6965486567616D69 && a2 == 0xEB00000000746867)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1AD740BC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1AD36E0E8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001AD77A1B0 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AD77A1D0 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD77A1F0 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AD777A40 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x676E6964646170 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_1AD740BC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

void sub_1AD36E2E8(uint64_t a1)
{
}

void sub_1AD36E31C()
{
  if (!qword_1E9A2CD50)
  {
    sub_1AD36E38C(255);
    sub_1AD36E500(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9A2CD50);
    }
  }
}

void sub_1AD36E38C(uint64_t a1)
{
}

void sub_1AD36E3B4()
{
  if (!qword_1E9A2CD68)
  {
    sub_1AD36E460(255, &qword_1E9A2CD70, &qword_1EB738CB8, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3CE30]);
    sub_1AD2202CC(255, &qword_1EB73BEA0, MEMORY[0x1E4F3C870], MEMORY[0x1E4F3DF18]);
    unint64_t v0 = sub_1AD73E080();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2CD68);
    }
  }
}

void sub_1AD36E460(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  if (!*a2)
  {
    sub_1AD36E65C(255, a3, a4, a5, MEMORY[0x1E4F3CC10]);
    sub_1AD36B4A0(255, (unint64_t *)&qword_1EB73BED0, &qword_1EB73BF10, MEMORY[0x1E4F3E1B0]);
    unint64_t v6 = sub_1AD73E080();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1AD36E500(uint64_t a1)
{
}

void sub_1AD36E528(uint64_t a1)
{
}

void sub_1AD36E55C()
{
  if (!qword_1E9A2CD90)
  {
    sub_1AD36E65C(255, (unint64_t *)&qword_1E9A2CD98, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3E2E8], MEMORY[0x1E4F3ECD0]);
    sub_1AD73E630();
    sub_1AD36E6AC();
    sub_1AD1AF184(&qword_1E9A2CDA8, MEMORY[0x1E4F3DEB8]);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1E9A2CD90);
    }
  }
}

void sub_1AD36E65C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1AD36E6AC()
{
  unint64_t result = qword_1E9A2CDA0;
  if (!qword_1E9A2CDA0)
  {
    sub_1AD36E65C(255, (unint64_t *)&qword_1E9A2CD98, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3E2E8], MEMORY[0x1E4F3ECD0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CDA0);
  }
  return result;
}

void sub_1AD36E730(uint64_t a1)
{
}

unint64_t sub_1AD36E774()
{
  unint64_t result = qword_1E9A2CDC0;
  if (!qword_1E9A2CDC0)
  {
    sub_1AD36E460(255, &qword_1E9A2CD70, &qword_1EB738CB8, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3CE30]);
    sub_1AD36E82C();
    sub_1AD220524((unint64_t *)&qword_1EB73BEC8, (unint64_t *)&qword_1EB73BED0, &qword_1EB73BF10, MEMORY[0x1E4F3E1B0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CDC0);
  }
  return result;
}

unint64_t sub_1AD36E82C()
{
  unint64_t result = qword_1EB738CB0;
  if (!qword_1EB738CB0)
  {
    sub_1AD36E65C(255, &qword_1EB738CB8, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3CE30], MEMORY[0x1E4F3CC10]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB738CB0);
  }
  return result;
}

uint64_t sub_1AD36E8C8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1AD36E920()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 64);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1AD36E950(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1AD21485C(v2);
  return a1;
}

uint64_t sub_1AD36E9B4()
{
  return sub_1AD73E260();
}

unint64_t sub_1AD36E9DC()
{
  unint64_t result = qword_1E9A2CDC8;
  if (!qword_1E9A2CDC8)
  {
    sub_1AD36E528(255);
    sub_1AD36E65C(255, (unint64_t *)&qword_1E9A2CD98, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3E2E8], MEMORY[0x1E4F3ECD0]);
    sub_1AD73E630();
    sub_1AD36E6AC();
    sub_1AD1AF184(&qword_1E9A2CDA8, MEMORY[0x1E4F3DEB8]);
    swift_getOpaqueTypeConformance2();
    sub_1AD1AF184(&qword_1E9A2CDD0, sub_1AD36E730);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CDC8);
  }
  return result;
}

void sub_1AD36EB30(uint64_t a1)
{
}

void sub_1AD36EB64(uint64_t a1)
{
}

void sub_1AD36EB98(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_1AD73E080();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1AD36EC0C(uint64_t a1)
{
}

void sub_1AD36EC34(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AD73E080();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1AD36EC98()
{
  if (!qword_1EB738E00)
  {
    sub_1AD36ED18();
    sub_1AD36B4A0(255, &qword_1EB73BEE0, &qword_1EB73BF30, MEMORY[0x1E4F3EB98]);
    unint64_t v0 = sub_1AD73E080();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB738E00);
    }
  }
}

void sub_1AD36ED18()
{
  if (!qword_1EB738DD8)
  {
    sub_1AD36ED98();
    sub_1AD36B4A0(255, (unint64_t *)&qword_1EB73BED0, &qword_1EB73BF10, MEMORY[0x1E4F3E1B0]);
    unint64_t v0 = sub_1AD73E080();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB738DD8);
    }
  }
}

void sub_1AD36ED98()
{
  if (!qword_1EB738D78)
  {
    sub_1AD36E65C(255, &qword_1EB738CB8, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3CE30], MEMORY[0x1E4F3CC10]);
    sub_1AD2202CC(255, &qword_1EB73BEA0, MEMORY[0x1E4F3C870], MEMORY[0x1E4F3DF18]);
    unint64_t v0 = sub_1AD73E080();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB738D78);
    }
  }
}

uint64_t sub_1AD36EE58()
{
  return sub_1AD36EE8C(&qword_1EB738E48, sub_1AD36EC0C, (void (*)(void))sub_1AD36EF10);
}

uint64_t sub_1AD36EE8C(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AD36EF10()
{
  unint64_t result = qword_1EB738DF8;
  if (!qword_1EB738DF8)
  {
    sub_1AD36EC98();
    sub_1AD36EFA8();
    sub_1AD220524(&qword_1EB73BED8, &qword_1EB73BEE0, &qword_1EB73BF30, MEMORY[0x1E4F3EB98]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB738DF8);
  }
  return result;
}

unint64_t sub_1AD36EFA8()
{
  unint64_t result = qword_1EB738DD0;
  if (!qword_1EB738DD0)
  {
    sub_1AD36ED18();
    sub_1AD36F790(&qword_1EB738D70, (void (*)(uint64_t))sub_1AD36ED98, (void (*)(void))sub_1AD36E82C, (void (*)(void))sub_1AD220800);
    sub_1AD220524((unint64_t *)&qword_1EB73BEC8, (unint64_t *)&qword_1EB73BED0, &qword_1EB73BF10, MEMORY[0x1E4F3E1B0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB738DD0);
  }
  return result;
}

uint64_t sub_1AD36F084()
{
  uint64_t v1 = type metadata accessor for ProminentMessageWithActionTileViewWithImage(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 20);
  sub_1AD36B204(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1AD73E030();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v2 + *(int *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for ProminentMessageWithActionTileViewWithImage.ViewModel(0) + 28);
  uint64_t v7 = sub_1AD73B970();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD36F268(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AD36F2D0()
{
  uint64_t v1 = type metadata accessor for ProminentMessageWithActionTileViewWithImage(0);
  return (*(uint64_t (**)(void))(v0
                              + *(int *)(v1 + 28)
                              + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80))))();
}

uint64_t sub_1AD36F344(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1AD36F3AC()
{
  unint64_t result = qword_1E9A2CDE0;
  if (!qword_1E9A2CDE0)
  {
    sub_1AD36B3F0(255);
    sub_1AD36F790(&qword_1E9A2CDE8, (void (*)(uint64_t))sub_1AD36B418, (void (*)(void))sub_1AD36F468, (void (*)(void))sub_1AD2204F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CDE0);
  }
  return result;
}

unint64_t sub_1AD36F468()
{
  unint64_t result = qword_1E9A2CDF0;
  if (!qword_1E9A2CDF0)
  {
    sub_1AD36E460(255, &qword_1E9A2CCA0, (unint64_t *)&qword_1EB738CE8, MEMORY[0x1E4F3EC98], MEMORY[0x1E4F3D4F8]);
    sub_1AD36F520();
    sub_1AD220524((unint64_t *)&qword_1EB73BEC8, (unint64_t *)&qword_1EB73BED0, &qword_1EB73BF10, MEMORY[0x1E4F3E1B0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CDF0);
  }
  return result;
}

unint64_t sub_1AD36F520()
{
  unint64_t result = qword_1EB738CE0;
  if (!qword_1EB738CE0)
  {
    sub_1AD36E65C(255, (unint64_t *)&qword_1EB738CE8, MEMORY[0x1E4F3EC98], MEMORY[0x1E4F3D4F8], MEMORY[0x1E4F3CC10]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB738CE0);
  }
  return result;
}

uint64_t sub_1AD36F5BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AD36F61C()
{
  return sub_1AD1AF184(&qword_1E9A2CDF8, sub_1AD36F664);
}

void sub_1AD36F664(uint64_t a1)
{
}

void sub_1AD36F6A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1AD1AF184(a4, a5);
    unint64_t v8 = sub_1AD73ECE0();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AD36F734()
{
  return sub_1AD36F790(&qword_1EB738E68, sub_1AD36EB64, (void (*)(void))sub_1AD36EE58, (void (*)(void))sub_1AD36F81C);
}

uint64_t sub_1AD36F790(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD36F81C()
{
  return sub_1AD1AF184(&qword_1EB738EE8, MEMORY[0x1E4F3DF60]);
}

uint64_t PinnedPinnableFeedItemsDataSource.__allocating_init(pinnedContentManager:sourceProfiles:managedObjectContext:searchQuery:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + qword_1E9A48750) = a4;
  sub_1AD1FFE38(a1, v8 + qword_1E9A48758);
  sub_1AD1FFE38(a1, (uint64_t)v11);
  swift_retain();
  uint64_t v9 = FavoritableFeedItemsDataSource.init(sourceProfiles:managedObjectContext:pinnedContentManager:favoriteStatusFilter:searchQuery:separateByCategory:)(a2, a3, (uint64_t)v11, (uint64_t)&unk_1F041D9D8, a4, 0);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

uint64_t PinnedPinnableFeedItemsDataSource.init(pinnedContentManager:sourceProfiles:managedObjectContext:searchQuery:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  *(void *)(v4 + qword_1E9A48750) = a4;
  sub_1AD1FFE38(a1, v4 + qword_1E9A48758);
  sub_1AD1FFE38(a1, (uint64_t)v11);
  swift_retain();
  uint64_t v9 = FavoritableFeedItemsDataSource.init(sourceProfiles:managedObjectContext:pinnedContentManager:favoriteStatusFilter:searchQuery:separateByCategory:)(a2, a3, (uint64_t)v11, (uint64_t)&unk_1F041DA00, a4, 0);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

void *sub_1AD36F9B4@<X0>(void *a1@<X8>)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = sub_1AD73A1D0();
  uint64_t v6 = v5;

  a1[3] = &type metadata for HeaderWithIconItem;
  a1[4] = sub_1AD36FB00();
  uint64_t result = (void *)swift_allocObject();
  *a1 = result;
  result[2] = 0xD000000000000024;
  result[3] = 0x80000001AD77A210;
  result[4] = v4;
  result[5] = v6;
  result[6] = 0;
  result[7] = 0;
  return result;
}

unint64_t sub_1AD36FB00()
{
  unint64_t result = qword_1E9A2CE10;
  if (!qword_1E9A2CE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CE10);
  }
  return result;
}

uint64_t sub_1AD36FB54()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void PinnedPinnableFeedItemsDataSource.__allocating_init(sourceProfiles:managedObjectContext:pinnedContentManager:favoriteStatusFilter:searchQuery:separateByCategory:)()
{
}

void PinnedPinnableFeedItemsDataSource.init(sourceProfiles:managedObjectContext:pinnedContentManager:favoriteStatusFilter:searchQuery:separateByCategory:)()
{
}

uint64_t sub_1AD36FC04()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1E9A48758);
  return swift_release();
}

uint64_t PinnedPinnableFeedItemsDataSource.deinit()
{
  uint64_t v0 = FavoritableFeedItemsDataSource.deinit();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1E9A48758);
  swift_release();
  return v0;
}

uint64_t PinnedPinnableFeedItemsDataSource.__deallocating_deinit()
{
  uint64_t v0 = FavoritableFeedItemsDataSource.deinit();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1E9A48758);
  swift_release();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall PinnedPinnableFeedItemsDataSource.applyReorder(sectionTransactions:)(Swift::OpaquePointer sectionTransactions)
{
  uint64_t v87 = *v1;
  sub_1AD372CFC(0, &qword_1E9A2CE18, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBD80]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v88 = (char *)&v73 - v6;
  uint64_t v7 = MEMORY[0x1E4FBBD88];
  sub_1AD37276C(0, &qword_1E9A2CE20, &qword_1E9A2CE28, MEMORY[0x1E4FBBD88], MEMORY[0x1E4FBBCF0]);
  uint64_t v85 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v73 - v9;
  sub_1AD37276C(0, (unint64_t *)&unk_1E9A2CE30, &qword_1E9A2CE28, v7, MEMORY[0x1E4FBBCF8]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v83 = (uint64_t)&v73 - v15;
  uint64_t v16 = sub_1AD73CBA0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  unint64_t v84 = (char *)&v73 - v21;
  sub_1AD372C5C(0, (unint64_t *)&qword_1E9A2EC80, MEMORY[0x1E4FBB1C8], (uint64_t (*)(void, void *))type metadata accessor for DataSourceSectionTransaction);
  uint64_t v23 = v22;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  MEMORY[0x1F4188790](v24);
  if (*((void *)sectionTransactions._rawValue + 2))
  {
    uint64_t v82 = v27;
    uint64_t v28 = (char *)&v73 - v26;
    sub_1AD3725C8((uint64_t)sectionTransactions._rawValue+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80)), (uint64_t)&v73 - v26);
    if (sub_1AD370838((uint64_t)&v28[*(int *)(v23 + 52)]))
    {
      __swift_project_boxed_opaque_existential_1((uint64_t *)((char *)v1 + qword_1E9A48758), *(uint64_t *)((char *)v1 + qword_1E9A48758 + 24));
      sub_1AD73B1A0();
      swift_bridgeObjectRelease();
LABEL_11:
      uint64_t v59 = (uint64_t)v28;
      goto LABEL_12;
    }
    uint64_t v80 = v5;
    __int16 v36 = v84;
    sub_1AD73CAD0();
    sub_1AD3725C8((uint64_t)v28, v82);
    uint64_t v37 = sub_1AD73CB80();
    int v38 = sub_1AD73F920();
    if (!os_log_type_enabled(v37, (os_log_type_t)v38))
    {

      sub_1AD372650(v82);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, v16);
      goto LABEL_11;
    }
    int v75 = v38;
    os_log_t v77 = v37;
    uint64_t v78 = v28;
    uint64_t v79 = v17;
    uint64_t v81 = v16;
    uint64_t v39 = swift_slowAlloc();
    uint64_t v74 = swift_slowAlloc();
    uint64_t v91 = v74;
    *(_DWORD *)uint64_t v39 = 136315394;
    v92[0] = v87;
    swift_getMetatypeMetadata();
    uint64_t v40 = sub_1AD73F220();
    v92[0] = sub_1AD1F62D4(v40, v41, &v91);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    uint64_t v76 = (uint8_t *)v39;
    *(_WORD *)(v39 + 12) = 2080;
    uint64_t v42 = v83;
    uint64_t v43 = v82 + *(int *)(v23 + 52);
    uint64_t v44 = v80;
    uint64_t v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16);
    uint64_t v87 = v80 + 16;
    v86(v83, v43, v4);
    uint64_t v90 = MEMORY[0x1E4FBC860];
    sub_1AD20DD60(0, 0, 0);
    sub_1AD3726D0(v42, (uint64_t)v14);
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v88, v14, v4);
    int v45 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBD80];
    sub_1AD37282C(&qword_1E9A2CE28, &qword_1E9A2CE18, MEMORY[0x1E4FBBD80]);
    sub_1AD73F3D0();
    uint64_t v46 = *(int *)(v85 + 36);
    *(void *)&v10[v46] = 0;
    sub_1AD37276C(0, &qword_1E9A2CE40, (unint64_t *)&qword_1E9A2CE48, MEMORY[0x1E4FBBD90], MEMORY[0x1E4FBBC18]);
    uint64_t v48 = &v10[*(int *)(v47 + 36)];
    sub_1AD37282C((unint64_t *)&qword_1E9A2CE48, &qword_1E9A2CE18, v45);
    uint64_t v49 = *(void *)v48;
    sub_1AD73F7B0();
    if (v49 == v89[0])
    {
LABEL_8:
      uint64_t v50 = v76;
      uint64_t v51 = MEMORY[0x1E4FBBD88];
      sub_1AD372958((uint64_t)v10, &qword_1E9A2CE20, &qword_1E9A2CE28, MEMORY[0x1E4FBBD88], MEMORY[0x1E4FBBCF0]);
      uint64_t v52 = v90;
      sub_1AD372958(v83, (unint64_t *)&unk_1E9A2CE30, &qword_1E9A2CE28, v51, MEMORY[0x1E4FBBCF8]);
      v89[0] = v52;
      uint64_t v53 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
      sub_1AD372CFC(0, (unint64_t *)&qword_1EB73F760, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1AD37282C((unint64_t *)&qword_1EB73F770, (unint64_t *)&qword_1EB73F760, v53);
      uint64_t v54 = sub_1AD73F100();
      unint64_t v56 = v55;
      swift_release();
      v89[0] = sub_1AD1F62D4(v54, v56, &v91);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      sub_1AD372650(v82);
      os_log_t v57 = v77;
      _os_log_impl(&dword_1AD1A4000, v77, (os_log_type_t)v75, "[%s]: Failed to apply transaction %s", v50, 0x16u);
      uint64_t v58 = v74;
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v58, -1, -1);
      MEMORY[0x1B3E68450](v50, -1, -1);

      (*(void (**)(char *, uint64_t))(v79 + 8))(v84, v81);
      uint64_t v59 = (uint64_t)v78;
LABEL_12:
      sub_1AD372650(v59);
      return;
    }
    uint64_t v60 = (void (**)(char *, uint64_t))(v44 + 8);
    uint64_t v85 = v46;
    while (1)
    {
      char v61 = (void (*)(uint64_t *, void))sub_1AD73F800();
      sub_1AD37287C(v62, (uint64_t)v92);
      sub_1AD37290C((uint64_t)v92, (void (*)(void, void, void, void, void, void))sub_1AD372904);
      v61(v89, 0);
      uint64_t v63 = v88;
      v86((uint64_t)v88, (uint64_t)v10, v4);
      sub_1AD73F7C0();
      (*v60)(v63, v4);
      uint64_t v64 = *(void *)&v10[v46];
      if (__OFADD__(v64, 1)) {
        break;
      }
      *(void *)&v10[v46] = v64 + 1;
      uint64_t v65 = sub_1AD371FE0(v64, (uint64_t)v92);
      uint64_t v67 = v66;
      sub_1AD37290C((uint64_t)v92, (void (*)(void, void, void, void, void, void))sub_1AD372950);
      uint64_t v68 = v90;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AD20DD60(0, *(void *)(v68 + 16) + 1, 1);
        uint64_t v68 = v90;
      }
      unint64_t v70 = *(void *)(v68 + 16);
      unint64_t v69 = *(void *)(v68 + 24);
      if (v70 >= v69 >> 1)
      {
        sub_1AD20DD60(v69 > 1, v70 + 1, 1);
        uint64_t v68 = v90;
      }
      *(void *)(v68 + 16) = v70 + 1;
      unint64_t v71 = v68 + 16 * v70;
      *(void *)(v71 + 32) = v65;
      *(void *)(v71 + 40) = v67;
      uint64_t v72 = *(void *)v48;
      sub_1AD73F7B0();
      uint64_t v46 = v85;
      if (v72 == v89[0]) {
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v29 = v17;
    sub_1AD73CAD0();
    uint64_t v30 = sub_1AD73CB80();
    os_log_type_t v31 = sub_1AD73F920();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v81 = v16;
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v89[0] = v33;
      *(_DWORD *)uint64_t v32 = 136315138;
      v92[0] = v87;
      swift_getMetatypeMetadata();
      uint64_t v34 = sub_1AD73F220();
      v92[0] = sub_1AD1F62D4(v34, v35, v89);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AD1A4000, v30, v31, "[%s]: Attempted reordering with empty section transactions", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v33, -1, -1);
      MEMORY[0x1B3E68450](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v81);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v16);
    }
  }
}

void *sub_1AD370838(uint64_t a1)
{
  sub_1AD372C5C(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v69 = v2;
  uint64_t v80 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v68 = (char *)&v65 - v3;
  uint64_t v4 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBD80];
  sub_1AD372CFC(0, &qword_1E9A2CE18, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBD80]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v71 = (char *)&v65 - v8;
  sub_1AD37276C(0, &qword_1E9A2CE40, (unint64_t *)&qword_1E9A2CE48, MEMORY[0x1E4FBBD90], MEMORY[0x1E4FBBC18]);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v65 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v75 = v7 + 16;
  uint64_t v74 = v16;
  v16(v13, a1, v6);
  uint64_t v17 = sub_1AD37282C((unint64_t *)&qword_1E9A2CE48, &qword_1E9A2CE18, v4);
  sub_1AD73F790();
  *(void *)&v13[*(int *)(v10 + 44)] = v81;
  uint64_t v18 = (uint64_t)v13;
  uint64_t v19 = v17;
  sub_1AD372D48(v18, (uint64_t)v15);
  uint64_t v20 = *(int *)(v10 + 44);
  uint64_t v21 = (uint64_t)v15;
  uint64_t v76 = &v15[v20];
  uint64_t v22 = *(void *)&v15[v20];
  sub_1AD73F7B0();
  if (v22 == (void)v81)
  {
    uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
LABEL_3:
    sub_1AD372958(v21, &qword_1E9A2CE40, (unint64_t *)&qword_1E9A2CE48, MEMORY[0x1E4FBBD90], MEMORY[0x1E4FBBC18]);
    return v23;
  }
  uint64_t v73 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v67 = (void (**)(char *, uint64_t, uint64_t))(v80 + 16);
  uint64_t v66 = (void (**)(char *, uint64_t))(v80 + 8);
  uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v25 = v71;
  uint64_t v65 = v15;
  uint64_t v72 = v19;
  while (1)
  {
    uint64_t v28 = (void (*)(long long *, void))sub_1AD73F800();
    uint64_t v30 = v29[1];
    uint64_t v32 = v29[2];
    uint64_t v31 = v29[3];
    int v33 = *((unsigned __int8 *)v29 + 32);
    char v34 = *((unsigned char *)v29 + 33);
    uint64_t v78 = *v29;
    uint64_t v79 = v31;
    LODWORD(v80) = v33;
    sub_1AD372904();
    v28(&v81, 0);
    v74(v25, v21, v6);
    sub_1AD73F7C0();
    (*v73)(v25, v6);
    if (v34)
    {
      unint64_t v35 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v35 = sub_1AD51C354(0, v23[2] + 1, 1, v23);
      }
      unint64_t v37 = v35[2];
      unint64_t v36 = v35[3];
      if (v37 >= v36 >> 1) {
        unint64_t v35 = sub_1AD51C354((void *)(v36 > 1), v37 + 1, 1, v35);
      }
      void v35[2] = v37 + 1;
      uint64_t v23 = v35;
      uint64_t v26 = &v35[4 * v37];
      void v26[5] = 0;
      v26[6] = 0;
      v26[4] = v78;
      *((unsigned char *)v26 + 56) = 0;
      sub_1AD372950();
      goto LABEL_6;
    }
    uint64_t v38 = v70;
    uint64_t v39 = v70 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
    swift_beginAccess();
    uint64_t v40 = v68;
    uint64_t v41 = v39;
    uint64_t v42 = v69;
    (*v67)(v68, v41, v69);
    uint64_t v77 = v30;
    uint64_t v87 = v30;
    uint64_t v88 = v32;
    sub_1AD73D250();
    (*v66)(v40, v42);
    uint64_t v43 = v86;
    uint64_t v44 = v23;
    if (!v86) {
      goto LABEL_32;
    }
    uint64_t v45 = v85;
    uint64_t v46 = (uint64_t *)(v38 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_sections);
    swift_beginAccess();
    uint64_t v47 = *v46;
    if (!*(void *)(v47 + 16))
    {
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
    swift_bridgeObjectRetain();
    unint64_t v48 = sub_1AD20F694(v45, v43);
    uint64_t v49 = v77;
    if ((v50 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_32:
      uint64_t v83 = 0;
      long long v82 = 0u;
      long long v81 = 0u;
LABEL_33:
      sub_1AD372950();
      sub_1AD372958(v21, &qword_1E9A2CE40, (unint64_t *)&qword_1E9A2CE48, MEMORY[0x1E4FBBD90], MEMORY[0x1E4FBBC18]);
      swift_bridgeObjectRelease();
      sub_1AD1E1AA8((uint64_t)&v81);
      return 0;
    }
    uint64_t v51 = *(void *)(v47 + 56) + 48 * v48;
    uint64_t v52 = *(void *)(v51 + 16);
    uint64_t v53 = *(void *)(v51 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!*(void *)(v53 + 16)) {
      goto LABEL_21;
    }
    swift_bridgeObjectRetain();
    unint64_t v54 = sub_1AD20F694(v49, v32);
    if (v55) {
      break;
    }
    sub_1AD372950();
LABEL_21:
    uint64_t v83 = 0;
    long long v82 = 0u;
    long long v81 = 0u;
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = (uint64_t)v65;
    if (!*((void *)&v82 + 1)) {
      goto LABEL_33;
    }
    sub_1AD20FE90(&v81, (uint64_t)v89);
    sub_1AD1FFE38((uint64_t)v89, (uint64_t)&v85);
    sub_1AD20EE0C(0, (unint64_t *)&qword_1EB73E870);
    swift_dynamicCast();
    unint64_t result = objc_msgSend(v84, sel_pinnedContentIdentifier);
    if (!result) {
      goto LABEL_36;
    }
    os_log_t v57 = result;
    uint64_t v58 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    uint64_t v60 = v59;

    sub_1AD372DE4((uint64_t)&v81);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = v71;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v44 = sub_1AD51C354(0, v44[2] + 1, 1, v44);
    }
    unint64_t v63 = v44[2];
    unint64_t v62 = v44[3];
    if (v63 >= v62 >> 1) {
      uint64_t v44 = sub_1AD51C354((void *)(v62 > 1), v63 + 1, 1, v44);
    }
    v44[2] = v63 + 1;
    uint64_t v23 = v44;
    uint64_t v64 = &v44[4 * v63];
    v64[4] = v58;
    v64[5] = v60;
    v64[6] = v78;
    *((unsigned char *)v64 + 56) = 1;
    sub_1AD372950();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
LABEL_6:
    uint64_t v27 = *(void *)v76;
    sub_1AD73F7B0();
    if (v27 == (void)v81) {
      goto LABEL_3;
    }
  }
  unint64_t v56 = *(void *)(*(void *)(v53 + 56) + 8 * v54);
  unint64_t result = (void *)sub_1AD372950();
  if ((v56 & 0x8000000000000000) == 0)
  {
    if (v56 >= *(void *)(v52 + 16)) {
      goto LABEL_35;
    }
    sub_1AD1FFE38(v52 + 40 * v56 + 32, (uint64_t)&v81);
    goto LABEL_22;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

BOOL sub_1AD3711C8()
{
  return _s18HealthExperienceUI33PinnedPinnableFeedItemsDataSourceC17isReorderableItem10identifierSbSS_tF_0();
}

void sub_1AD3711F0(Swift::OpaquePointer a1)
{
}

uint64_t PinnableSearchQuery.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PinnableSearchQuery.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t EditFavoritesCollectionViewController.searchQuery.getter()
{
  return swift_retain();
}

id sub_1AD37127C()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController____lazy_storage___searchController;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController____lazy_storage___searchController);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController____lazy_storage___searchController);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BF8]), sel_initWithSearchResultsController_, 0);
    objc_msgSend(v4, sel_setSearchResultsUpdater_, v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1AD371308(uint64_t a1)
{
  *(void *)(v1
            + OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController____lazy_storage___searchController) = a1;
  return MEMORY[0x1F41817F8]();
}

void (*sub_1AD37131C(id *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = sub_1AD37127C();
  return sub_1AD371364;
}

void sub_1AD371364(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  id v3 = *(void **)(v1
                + OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController____lazy_storage___searchController);
  *(void *)(v1
            + OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController____lazy_storage___searchController) = v2;
}

char *EditFavoritesCollectionViewController.__allocating_init(pinnedContentManager:sourceProfiles:healthExperienceStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = objc_allocWithZone(v3);
  return EditFavoritesCollectionViewController.init(pinnedContentManager:sourceProfiles:healthExperienceStore:)(a1, a2, a3);
}

char *EditFavoritesCollectionViewController.init(pinnedContentManager:sourceProfiles:healthExperienceStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  *(void *)&v3[OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController____lazy_storage___searchController] = 0;
  type metadata accessor for PinnableSearchQuery();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  uint64_t v9 = OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController_searchQuery;
  *(void *)&v3[OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController_searchQuery] = v8;
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  uint64_t v10 = v3;
  uint64_t v11 = (void *)sub_1AD73A990();
  sub_1AD1FFE38(a1, (uint64_t)v28);
  type metadata accessor for PinnedPinnableFeedItemsDataSource();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + qword_1E9A48750) = v8;
  sub_1AD1FFE38((uint64_t)v28, v12 + qword_1E9A48758);
  sub_1AD1FFE38((uint64_t)v28, (uint64_t)v27);
  swift_retain_n();
  swift_bridgeObjectRetain();
  id v13 = v11;
  uint64_t v14 = FavoritableFeedItemsDataSource.init(sourceProfiles:managedObjectContext:pinnedContentManager:favoriteStatusFilter:searchQuery:separateByCategory:)(a2, v13, (uint64_t)v27, (uint64_t)&unk_1F041DA28, v8, 0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  uint64_t v15 = OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController_pinnedItemsDataSource;
  *(void *)&v10[OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController_pinnedItemsDataSource] = v14;
  sub_1AD1FFE38(a1, (uint64_t)v28);
  uint64_t v16 = *(void *)&v4[v9];
  type metadata accessor for FavoritableFeedItemsDataSource();
  swift_allocObject();
  id v17 = v13;
  swift_retain();
  uint64_t v18 = FavoritableFeedItemsDataSource.init(sourceProfiles:managedObjectContext:pinnedContentManager:favoriteStatusFilter:searchQuery:separateByCategory:)(a2, v17, (uint64_t)v28, (uint64_t)&unk_1F041DA50, v16, 1);
  uint64_t v19 = OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController_otherItemsDataSource;
  *(void *)&v10[OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController_otherItemsDataSource] = v18;

  sub_1AD2C8E0C();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1AD74C350;
  *(void *)(v20 + 32) = *(void *)&v10[v15];
  *(void *)(v20 + 40) = &protocol witness table for MutableArrayDataSource;
  *(void *)(v20 + 48) = *(void *)&v10[v19];
  *(void *)(v20 + 56) = &protocol witness table for MutableArrayDataSource;
  type metadata accessor for CompoundSectionedDataSource();
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v21 = CompoundSectionedDataSource.init(_:)(v20);
  uint64_t v22 = &v10[OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController_dataSourceProvider];
  *(_OWORD *)uint64_t v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  *((void *)v22 + 4) = 0;
  v10[OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController_usesAdaptiveMargins] = 1;
  *(void *)&v10[OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController____lazy_storage___dataSource] = 0;
  *(void *)&v10[OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController_dataSourceAdaptor] = 0;
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB15C0]), sel_init);
  v26.receiver = v10;
  v26.super_class = (Class)type metadata accessor for CompoundDataSourceCollectionViewController();
  uint64_t v24 = (char *)objc_msgSendSuper2(&v26, sel_initWithCollectionViewLayout_, v23);

  *(void *)&v24[OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController____lazy_storage___dataSource] = v21;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v24;
}

id EditFavoritesCollectionViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void EditFavoritesCollectionViewController.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController____lazy_storage___searchController] = 0;

  sub_1AD7408B0();
  __break(1u);
}

void sub_1AD3717E4()
{
  swift_getObjectType();
  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for EditFavoritesCollectionViewController();
  objc_msgSendSuper2(&v21, sel_viewDidLoad);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1AD73A1D0();

  id v3 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v3, 0x80000001AD77A3A0);

  id v4 = objc_msgSend(v0, sel_collectionView);
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = v4;
  id v6 = (void *)sub_1AD73F180();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6);

  id v7 = objc_msgSend(v0, sel_collectionView);
  if (!v7)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
  objc_msgSend(v8, sel_setBackgroundColor_, v9);

  id v10 = objc_msgSend(v0, sel_collectionView);
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v11 = v10;
  objc_msgSend(v10, sel_setKeyboardDismissMode_, 1);

  id v12 = objc_msgSend(v0, sel_collectionView);
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = (void *)sub_1AD73F490();
    id v15 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v13, sel_setAccessibilityIdentifier_, v15);
    id v16 = objc_msgSend(v0, sel_navigationItem);
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_doneButtonTapped);
    objc_msgSend(v16, sel_setRightBarButtonItem_, v17);

    id v18 = objc_msgSend(v0, sel_navigationItem);
    id v19 = sub_1AD37127C();
    objc_msgSend(v18, sel_setSearchController_, v19);

    id v20 = objc_msgSend(v0, sel_navigationItem);
    objc_msgSend(v20, sel_setPreferredSearchBarPlacement_, 2);

    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_1AD371B90(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController_searchQuery);
  id v4 = objc_msgSend(a1, sel_searchBar);
  id v5 = objc_msgSend(v4, sel_text);

  if (v5)
  {
    uint64_t v6 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *(void *)(v3 + 16) = v6;
  *(void *)(v3 + 24) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController_pinnedItemsDataSource);
  id v10 = *(char **)(v9 + qword_1EB751E80);
  char v11 = *(unsigned char *)(v9 + *(void *)(*(void *)v9 + 528));
  id v12 = *(uint64_t (**)(void))(v9 + qword_1EB7388A8);
  uint64_t v13 = *(void *)(v9 + qword_1EB7388A8 + 8);
  char v14 = *(unsigned char *)(v9 + qword_1EB7388A8 + 16);
  sub_1AD2C95F0((uint64_t)v12, v13, v14);
  id v15 = sub_1AD3721D8(v10, v11, v12, v13, v14);
  sub_1AD2C92FC((uint64_t)v12, v13, v14);
  sub_1AD387158((uint64_t)v15, 1);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v2 + OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController_otherItemsDataSource);
  id v17 = *(char **)(v16 + qword_1EB751E80);
  LOBYTE(v15) = *(unsigned char *)(v16 + *(void *)(*(void *)v16 + 528));
  id v18 = *(uint64_t (**)(void))(v16 + qword_1EB7388A8);
  uint64_t v19 = *(void *)(v16 + qword_1EB7388A8 + 8);
  LOBYTE(v13) = *(unsigned char *)(v16 + qword_1EB7388A8 + 16);
  sub_1AD2C95F0((uint64_t)v18, v19, v13);
  id v20 = sub_1AD3721D8(v17, (char)v15, v18, v19, v13);
  sub_1AD2C92FC((uint64_t)v18, v19, v13);
  sub_1AD387158((uint64_t)v20, 1);
  return swift_bridgeObjectRelease();
}

void EditFavoritesCollectionViewController.__allocating_init(dataSource:)()
{
}

void EditFavoritesCollectionViewController.init(dataSource:)()
{
}

id EditFavoritesCollectionViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void EditFavoritesCollectionViewController.init(collectionViewLayout:)()
{
}

uint64_t sub_1AD371EE0()
{
  swift_release();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController____lazy_storage___searchController));
  swift_release();
  return swift_release();
}

id EditFavoritesCollectionViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EditFavoritesCollectionViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1AD371FE0(uint64_t a1, uint64_t a2)
{
  sub_1AD37287C(a2, (uint64_t)&v5);
  sub_1AD740680();
  uint64_t v2 = MEMORY[0x1E4FBB550];
  uint64_t v3 = sub_1AD740B50();
  swift_bridgeObjectRelease();
  sub_1AD73F300();
  sub_1AD73F300();
  sub_1AD73F300();
  sub_1AD372CFC(0, (unint64_t *)&qword_1EB73F780, v2, MEMORY[0x1E4FBB718]);
  sub_1AD73F220();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  sub_1AD73F300();
  sub_1AD740B50();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_1AD3721D8(char *a1, char a2, uint64_t (*a3)(void), uint64_t a4, char a5)
{
  sub_1AD372C5C(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v14 = (char *)v34 - v13;
  id v15 = &a1[qword_1EB751EC8];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v15, v11);
  uint64_t v16 = sub_1AD73D260();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  id v17 = a1;
  uint64_t v18 = sub_1AD2C7888(v16, v17);
  swift_bridgeObjectRelease();

  if (a5)
  {
    if (a5 == 1)
    {
      MEMORY[0x1F4188790](v19);
      unint64_t v35 = a3;
      uint64_t v36 = a4;
      v34[-4] = a3;
      v34[-3] = a4;
      swift_retain();
      id v20 = sub_1AD588454((void (*)(long long *__return_ptr, void *))sub_1AD2C9930, (uint64_t)&v34[-6], v18);
      swift_bridgeObjectRelease();
      uint64_t v21 = v20[2];
      v34[1] = v20;
      if (v21)
      {
        uint64_t v22 = v20 + 5;
        id v23 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          if (*(void *)(v22[1] + 16))
          {
            uint64_t v28 = *(v22 - 1);
            uint64_t v29 = *v22;
            uint64_t v30 = v22[3];
            uint64_t v31 = v22[4];
            long long v37 = *(_OWORD *)(v22 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v38 = v23;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1AD1FBB8C(0, v23[2] + 1, 1);
              id v23 = v38;
            }
            unint64_t v25 = v23[2];
            unint64_t v24 = v23[3];
            long long v26 = v37;
            if (v25 >= v24 >> 1)
            {
              sub_1AD1FBB8C(v24 > 1, v25 + 1, 1);
              long long v26 = v37;
              id v23 = v38;
            }
            void v23[2] = v25 + 1;
            uint64_t v27 = &v23[6 * v25];
            v27[4] = v28;
            void v27[5] = v29;
            *((_OWORD *)v27 + 3) = v26;
            v27[8] = v30;
            v27[9] = v31;
          }
          v22 += 6;
          --v21;
        }
        while (v21);
      }
      else
      {
        id v23 = (void *)MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease();
      sub_1AD2C92FC((uint64_t)v35, v36, 1u);
    }
    else
    {
      swift_retain();
      id v23 = (void *)a3(v18);
      sub_1AD2C92FC((uint64_t)a3, a4, 2u);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    MEMORY[0x1F4188790](v19);
    v34[-4] = a3;
    v34[-3] = a4;
    LOBYTE(v34[-1]) = a2 & 1;
    swift_retain();
    id v23 = sub_1AD588454((void (*)(long long *__return_ptr, void *))sub_1AD372CC0, (uint64_t)&v34[-6], v18);
    sub_1AD2C92FC((uint64_t)a3, a4, 0);
    swift_bridgeObjectRelease();
  }
  return v23;
}

BOOL _s18HealthExperienceUI33PinnedPinnableFeedItemsDataSourceC17isReorderableItem10identifierSbSS_tF_0()
{
  uint64_t v1 = *(void *)(v0 + qword_1E9A48750);
  unint64_t v2 = *(void *)(v1 + 24);
  BOOL result = 1;
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 16) & 0xFFFFFFFFFFFFLL;
    if ((v2 & 0x2000000000000000) != 0 ? HIBYTE(v2) & 0xF : v3) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1AD3725C8(uint64_t a1, uint64_t a2)
{
  sub_1AD372C5C(0, (unint64_t *)&qword_1E9A2EC80, MEMORY[0x1E4FBB1C8], (uint64_t (*)(void, void *))type metadata accessor for DataSourceSectionTransaction);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD372650(uint64_t a1)
{
  sub_1AD372C5C(0, (unint64_t *)&qword_1E9A2EC80, MEMORY[0x1E4FBB1C8], (uint64_t (*)(void, void *))type metadata accessor for DataSourceSectionTransaction);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD3726D0(uint64_t a1, uint64_t a2)
{
  sub_1AD37276C(0, (unint64_t *)&unk_1E9A2CE30, &qword_1E9A2CE28, MEMORY[0x1E4FBBD88], MEMORY[0x1E4FBBCF8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1AD37276C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBD80];
    sub_1AD372CFC(255, &qword_1E9A2CE18, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBD80]);
    uint64_t v11 = v10;
    uint64_t v12 = sub_1AD37282C(a3, &qword_1E9A2CE18, v9);
    unint64_t v13 = a5(a1, v11, v12);
    if (!v14) {
      atomic_store(v13, a2);
    }
  }
}

uint64_t sub_1AD37282C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AD372CFC(255, a2, MEMORY[0x1E4FBB1A0], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD37287C(uint64_t a1, uint64_t a2)
{
  sub_1AD372CFC(0, &qword_1E9A2CE50, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBD78]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD372904()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD37290C(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1AD372950()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD372958(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_1AD37276C(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t type metadata accessor for PinnableSearchQuery()
{
  return self;
}

uint64_t type metadata accessor for PinnedPinnableFeedItemsDataSource()
{
  uint64_t result = qword_1E9A2CE80;
  if (!qword_1E9A2CE80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AD372A24()
{
  return MEMORY[0x1E4FBB1C8];
}

id sub_1AD372A30@<X0>(void *a1@<X8>)
{
  id result = sub_1AD37127C();
  *a1 = result;
  return result;
}

void sub_1AD372A5C(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  id v4 = *(id *)(*a2
             + OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController____lazy_storage___searchController);
  *(void *)(*a2
            + OBJC_IVAR____TtC18HealthExperienceUI37EditFavoritesCollectionViewController____lazy_storage___searchController) = *a1;
  id v3 = v2;
}

uint64_t sub_1AD372AAC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for PinnedPinnableFeedItemsDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PinnedPinnableFeedItemsDataSource);
}

uint64_t dispatch thunk of PinnedPinnableFeedItemsDataSource.__allocating_init(pinnedContentManager:sourceProfiles:managedObjectContext:searchQuery:)()
{
  return (*(uint64_t (**)(void))(v0 + 664))();
}

uint64_t method lookup function for PinnableSearchQuery(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PinnableSearchQuery);
}

uint64_t method lookup function for EditFavoritesCollectionViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EditFavoritesCollectionViewController);
}

uint64_t dispatch thunk of EditFavoritesCollectionViewController.searchController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of EditFavoritesCollectionViewController.searchController.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of EditFavoritesCollectionViewController.searchController.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of EditFavoritesCollectionViewController.__allocating_init(pinnedContentManager:sourceProfiles:healthExperienceStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 328))();
}

uint64_t dispatch thunk of EditFavoritesCollectionViewController.updateSearchResults(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

void sub_1AD372C5C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, void *))
{
  if (!*a2)
  {
    v7[0] = MEMORY[0x1E4FBB1A0];
    v7[1] = MEMORY[0x1E4FBB1A0];
    void v7[2] = a3;
    v7[3] = a3;
    unint64_t v5 = a4(0, v7);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AD372CC0@<X0>(_OWORD *a1@<X0>, void *a2@<X8>)
{
  id v3 = *(uint64_t (**)(uint64_t))(v2 + 16);
  char v4 = *(unsigned char *)(v2 + 40);
  long long v5 = a1[1];
  v7[0] = *a1;
  v7[1] = v5;
  void v7[2] = a1[2];
  return sub_1AD2C65BC((uint64_t *)v7, v3, v4, a2);
}

void sub_1AD372CFC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1AD372D48(uint64_t a1, uint64_t a2)
{
  sub_1AD37276C(0, &qword_1E9A2CE40, (unint64_t *)&qword_1E9A2CE48, MEMORY[0x1E4FBBD90], MEMORY[0x1E4FBBC18]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD372DE4(uint64_t a1)
{
  return a1;
}

uint64_t PDFCharacteristicsProvider.Content.init(name:dateOfBirth:exportedDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  uint64_t v8 = type metadata accessor for PDFCharacteristicsProvider.Content();
  sub_1AD372F24(a3, (uint64_t)a5 + *(int *)(v8 + 20));
  uint64_t v9 = (char *)a5 + *(int *)(v8 + 24);
  uint64_t v10 = sub_1AD73A600();
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  return v11(v9, a4, v10);
}

uint64_t type metadata accessor for PDFCharacteristicsProvider.Content()
{
  uint64_t result = qword_1E9A2CF30;
  if (!qword_1E9A2CF30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1AD372F24(uint64_t a1, uint64_t a2)
{
  sub_1AD3752E8(0, &qword_1E9A2B5A0, MEMORY[0x1E4F26F90], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PDFCharacteristicsProvider.Content.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDFCharacteristicsProvider.Content.dateOfBirth.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PDFCharacteristicsProvider.Content() + 20);
  return sub_1AD29B57C(v3, a1);
}

uint64_t PDFCharacteristicsProvider.Content.exportedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PDFCharacteristicsProvider.Content() + 24);
  uint64_t v4 = sub_1AD73A600();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PDFCharacteristicsProvider.__allocating_init(healthStore:dateGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  PDFCharacteristicsProvider.init(healthStore:dateGenerator:)(a1, a2, a3);
  return v6;
}

uint64_t *PDFCharacteristicsProvider.init(healthStore:dateGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v4;
  swift_defaultActor_initialize();
  sub_1AD3752E8(0, &qword_1E9A2CEF8, (uint64_t (*)(uint64_t))type metadata accessor for PDFCharacteristicsProvider.Content, MEMORY[0x1E4F65E70]);
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = v8;
  v4[14] = sub_1AD73B670();
  return v4;
}

uint64_t sub_1AD3731E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1AD3732AC;
  return sub_1AD3734A0(a1, a2, a3, a4);
}

uint64_t sub_1AD3732AC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1AD3733A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD3733E0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1AD3732AC;
  return sub_1AD3731E8(a1, v4, v5, v6);
}

uint64_t sub_1AD3734A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[20] = a4;
  v5[21] = v4;
  v5[18] = a2;
  v5[19] = a3;
  v5[17] = a1;
  uint64_t v6 = sub_1AD73A2A0();
  v5[22] = v6;
  v5[23] = *(void *)(v6 - 8);
  v5[24] = swift_task_alloc();
  uint64_t v7 = sub_1AD73A600();
  v5[25] = v7;
  v5[26] = *(void *)(v7 - 8);
  v5[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1AD3735C4, 0, 0);
}

uint64_t sub_1AD3735C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 2;
  uint64_t v4 = v0 + 10;
  uint64_t v5 = v0 + 16;
  uint64_t v6 = (void *)v0[18];
  v1[2] = v2;
  v1[7] = v5;
  v1[3] = sub_1AD37370C;
  uint64_t v7 = swift_continuation_init();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  v1[14] = sub_1AD375294;
  v1[15] = v8;
  v1[10] = MEMORY[0x1E4F143A8];
  v1[11] = 1107296256;
  v1[12] = sub_1AD35CE78;
  v1[13] = &block_descriptor_18;
  uint64_t v9 = _Block_copy(v4);
  swift_release();
  objc_msgSend(v6, sel_hk_fetchExistingDemographicInformationWithCompletion_, v9);
  _Block_release(v9);
  return MEMORY[0x1F41881E8](v3);
}

uint64_t sub_1AD37370C()
{
  *(void *)(*(void *)v0 + 224) = *(void *)(*(void *)v0 + 128);
  return MEMORY[0x1F4188298](sub_1AD373808, 0, 0);
}

uint64_t sub_1AD373808()
{
  uint64_t v1 = *(void **)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 176);
  (*(void (**)(void))(v0 + 152))();
  sub_1AD73A290();
  id v5 = objc_msgSend(v1, sel_firstName);
  _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

  sub_1AD73A240();
  id v6 = objc_msgSend(v1, sel_lastName);
  _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();

  sub_1AD73A260();
  uint64_t v7 = self;
  uint64_t v8 = (void *)sub_1AD73A270();
  id v9 = objc_msgSend(v7, sel_localizedStringFromPersonNameComponents_style_options_, v8, 2, 0);

  uint64_t v10 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  unint64_t v12 = v11;

  if ((v12 & 0x2000000000000000) != 0) {
    uint64_t v13 = HIBYTE(v12) & 0xF;
  }
  else {
    uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (!v13)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = 0;
    unint64_t v12 = 0;
  }
  uint64_t v15 = *(void *)(v0 + 216);
  uint64_t v14 = *(void **)(v0 + 224);
  uint64_t v16 = *(void *)(v0 + 200);
  uint64_t v17 = *(void *)(v0 + 208);
  uint64_t v18 = *(uint64_t **)(v0 + 136);
  uint64_t v19 = type metadata accessor for PDFCharacteristicsProvider.Content();
  sub_1AD373BE0(v14, (uint64_t)v18 + *(int *)(v19 + 20));

  *uint64_t v18 = v10;
  v18[1] = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))((char *)v18 + *(int *)(v19 + 24), v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  id v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_1AD373A1C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1AD373A3C, v1, 0);
}

uint64_t sub_1AD373A3C()
{
  uint64_t v4 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x1E4F65E68] + MEMORY[0x1E4F65E68]);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1AD373AEC;
  uint64_t v2 = *(void *)(v0 + 16);
  return v4(v2);
}

uint64_t sub_1AD373AEC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1AD373BE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_1AD73CBA0();
  uint64_t v46 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v47 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD3752E8(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v40 - v6;
  uint64_t v8 = sub_1AD739FB0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)v40 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v40 - v16;
  id v18 = objc_msgSend(a1, sel_dateOfBirthComponents);
  sub_1AD739F70();

  id v19 = objc_msgSend(a1, sel_dateOfBirthComponents);
  sub_1AD739F70();

  sub_1AD739F90();
  id v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v15, v8);
  uint64_t v21 = sub_1AD73A600();
  LODWORD(v15) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v7, 1, v21);
  sub_1AD2EC2D8((uint64_t)v7);
  if (v15 == 1)
  {
    uint64_t v44 = v3;
    sub_1AD73CAD0();
    id v22 = a1;
    id v23 = sub_1AD73CB80();
    os_log_type_t v24 = sub_1AD73F940();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      int v42 = v25;
      uint64_t v27 = v26;
      uint64_t v43 = swift_slowAlloc();
      uint64_t v50 = v43;
      *(_DWORD *)uint64_t v27 = 136446722;
      os_log_t v41 = v23;
      uint64_t v28 = sub_1AD740E30();
      uint64_t v49 = sub_1AD1F62D4(v28, v29, &v50);
      uint64_t v45 = v20;
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      uint64_t v49 = sub_1AD1F62D4(0xD000000000000019, 0x80000001AD77A640, &v50);
      sub_1AD7403B0();
      *(_WORD *)(v27 + 22) = 2080;
      v40[1] = v27 + 24;
      id v30 = objc_msgSend(v22, sel_dateOfBirthComponents);
      sub_1AD739F70();

      sub_1AD37534C();
      uint64_t v31 = sub_1AD740B50();
      unint64_t v33 = v32;
      char v34 = v12;
      unint64_t v35 = v45;
      v45(v34, v8);
      uint64_t v49 = sub_1AD1F62D4(v31, v33, &v50);
      sub_1AD7403B0();

      swift_bridgeObjectRelease();
      os_log_t v36 = v41;
      _os_log_impl(&dword_1AD1A4000, v41, (os_log_type_t)v42, "[%{public}s.%{public}s]: Unable to create date from birth day components: %s", (uint8_t *)v27, 0x20u);
      uint64_t v37 = v43;
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v37, -1, -1);
      MEMORY[0x1B3E68450](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v44);
      v35(v17, v8);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v44);
      v20(v17, v8);
    }
    uint64_t v38 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v48, v17, v8);
    uint64_t v38 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v48, v38, 1, v8);
}

uint64_t PDFCharacteristicsProvider.deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t PDFCharacteristicsProvider.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t PDFCharacteristicsProvider.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_1AD3741C0(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_1AD373A3C, v3, 0);
}

uint64_t dispatch thunk of PDFCharacteristicsProviding.fetchContent()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1AD3753A4;
  return v9(a1, a2, a3);
}

uint64_t type metadata accessor for PDFCharacteristicsProvider()
{
  return self;
}

uint64_t method lookup function for PDFCharacteristicsProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PDFCharacteristicsProvider);
}

uint64_t dispatch thunk of PDFCharacteristicsProvider.__allocating_init(healthStore:dateGenerator:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PDFCharacteristicsProvider.fetchContent()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 104) + **(int **)(*(void *)v1 + 104));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1AD3753A4;
  return v6(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for PDFCharacteristicsProvider.Content(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1AD739FB0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1AD3752E8(0, &qword_1E9A2B5A0, MEMORY[0x1E4F26F90], MEMORY[0x1E4FBB718]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = (char *)v4 + v16;
    id v18 = (char *)a2 + v16;
    uint64_t v19 = sub_1AD73A600();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return v4;
}

uint64_t destroy for PDFCharacteristicsProvider.Content(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1AD739FB0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_1AD73A600();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

void *initializeWithCopy for PDFCharacteristicsProvider.Content(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1AD739FB0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1AD3752E8(0, &qword_1E9A2B5A0, MEMORY[0x1E4F26F90], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1AD73A600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

void *assignWithCopy for PDFCharacteristicsProvider.Content(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AD739FB0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1AD3752E8(0, &qword_1E9A2B5A0, MEMORY[0x1E4F26F90], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_1AD73A600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

_OWORD *initializeWithTake for PDFCharacteristicsProvider.Content(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1AD739FB0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1AD3752E8(0, &qword_1E9A2B5A0, MEMORY[0x1E4F26F90], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1AD73A600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

void *assignWithTake for PDFCharacteristicsProvider.Content(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1AD739FB0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1AD3752E8(0, &qword_1E9A2B5A0, MEMORY[0x1E4F26F90], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_1AD73A600();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for PDFCharacteristicsProvider.Content(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1AD374EA8);
}

uint64_t sub_1AD374EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_1AD3752E8(0, &qword_1E9A2B5A0, MEMORY[0x1E4F26F90], MEMORY[0x1E4FBB718]);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 20);
      int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_1AD73A600();
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 24);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for PDFCharacteristicsProvider.Content(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1AD375024);
}

uint64_t sub_1AD375024(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    sub_1AD3752E8(0, &qword_1E9A2B5A0, MEMORY[0x1E4F26F90], MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1AD73A600();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1AD375180()
{
  sub_1AD3752E8(319, &qword_1E9A2B5A0, MEMORY[0x1E4F26F90], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F)
  {
    sub_1AD73A600();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1AD375284()
{
  return swift_deallocObject();
}

uint64_t sub_1AD375294(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  **(void **)(*(void *)(v2 + 64) + 40) = a1;
  id v3 = a1;
  return MEMORY[0x1F4188200](v2);
}

void sub_1AD3752E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1AD37534C()
{
  unint64_t result = qword_1E9A313B0;
  if (!qword_1E9A313B0)
  {
    sub_1AD739FB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A313B0);
  }
  return result;
}

char *BrowseCategoriesViewController.__allocating_init(healthExperienceStore:healthStore:)(uint64_t a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  return BrowseCategoriesViewController.init(healthExperienceStore:healthStore:)(a1, a2);
}

char *BrowseCategoriesViewController.init(healthExperienceStore:healthStore:)(uint64_t a1, void *a2)
{
  uint64_t v42 = a1;
  sub_1AD1D266C(0, &qword_1EB73E780, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v41 - v6;
  *(void *)&v2[OBJC_IVAR____TtC18HealthExperienceUI30BrowseCategoriesViewController_healthStore] = a2;
  unint64_t v8 = &v2[OBJC_IVAR____TtC18HealthExperienceUI30BrowseCategoriesViewController_experienceStore];
  sub_1AD1FFE38(a1, (uint64_t)&v2[OBJC_IVAR____TtC18HealthExperienceUI30BrowseCategoriesViewController_experienceStore]);
  __swift_project_boxed_opaque_existential_1(v8, *((void *)v8 + 3));
  uint64_t v9 = v2;
  id v44 = a2;
  uint64_t v41 = sub_1AD73A990();
  sub_1AD1C88C0(0, (unint64_t *)&qword_1EB741320);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1AD7501A0;
  id v11 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v12 = (void *)sub_1AD73F180();
  id v13 = objc_msgSend(v11, sel_initWithKey_ascending_, v12, 1);

  *(void *)(v10 + 32) = v13;
  id v14 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v15 = (void *)sub_1AD73F180();
  id v16 = objc_msgSend(v14, sel_initWithKey_ascending_, v15, 0);

  *(void *)(v10 + 40) = v16;
  id v17 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v18 = (void *)sub_1AD73F180();
  id v19 = objc_msgSend(v17, sel_initWithKey_ascending_selector_, v18, 1, sel_localizedStandardCompare_);

  *(void *)(v10 + 48) = v19;
  uint64_t v46 = v10;
  sub_1AD73F4D0();
  sub_1AD73B520();
  id v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1AD1D266C(0, (unint64_t *)&unk_1EB73F8B0, MEMORY[0x1E4F67030], MEMORY[0x1E4FBBE00]);
  uint64_t v21 = sub_1AD73AA80();
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = swift_allocObject();
  long long v43 = xmmword_1AD74C370;
  *(_OWORD *)(v24 + 16) = xmmword_1AD74C370;
  (*(void (**)(unint64_t, void, uint64_t))(v22 + 104))(v24 + v23, *MEMORY[0x1E4F67010], v21);
  uint64_t v25 = sub_1AD739E10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v7, 1, 1, v25);
  sub_1AD1C88C0(0, (unint64_t *)&qword_1EB73F8C0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = v43;
  *(void *)(v26 + 32) = sub_1AD73F8B0();
  uint64_t v27 = (void *)MEMORY[0x1B3E616A0](v24, 0, v7, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD260AE4((uint64_t)v7);
  uint64_t v28 = (void *)v41;
  unint64_t v29 = (void *)sub_1AD73FE80();

  swift_bridgeObjectRelease();
  id v30 = objc_allocWithZone((Class)type metadata accessor for SearchDataSource());
  v30[qword_1EB752080] = 0;
  id v31 = v29;
  unint64_t v32 = _s18HealthExperienceUI33FeedItemSuggestedActionDataSourceCyACSo26NSFetchedResultsControllerCy0A8Platform0dE0CGcfc_0(v31);
  type metadata accessor for CompoundSectionedDataSource();
  sub_1AD1D266C(0, (unint64_t *)&qword_1EB73DB80, (uint64_t (*)(uint64_t))sub_1AD2CAF5C, v20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v43;
  *(void *)(inited + 32) = v32;
  *(void *)(inited + 40) = &protocol witness table for FetchedResultsControllerDataSource<A>;
  char v34 = v32;
  uint64_t v35 = CompoundSectionedDataSource.__allocating_init(_:)(inited);
  os_log_t v36 = &v9[OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController_dataSourceProvider];
  *(_OWORD *)os_log_t v36 = 0u;
  *((_OWORD *)v36 + 1) = 0u;
  *((void *)v36 + 4) = 0;
  v9[OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController_usesAdaptiveMargins] = 1;
  *(void *)&v9[OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController____lazy_storage___dataSource] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController_dataSourceAdaptor] = 0;
  id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB15C0]), sel_init);
  uint64_t v38 = (objc_class *)type metadata accessor for CompoundDataSourceCollectionViewController();
  v45.receiver = v9;
  v45.super_class = v38;
  uint64_t v39 = (char *)objc_msgSendSuper2(&v45, sel_initWithCollectionViewLayout_, v37);

  *(void *)&v39[OBJC_IVAR____TtC18HealthExperienceUI42CompoundDataSourceCollectionViewController____lazy_storage___dataSource] = v35;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v42);
  return v39;
}

void sub_1AD3759DC()
{
  uint64_t v1 = v0;
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for BrowseCategoriesViewController();
  objc_msgSendSuper2(&v17, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v3 = v2;
  sub_1AD740680();
  uint64_t v4 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t v16 = v4;
  sub_1AD73F300();
  uint64_t v7 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v7, v16, v6);

  sub_1AD219708();
  unint64_t v8 = (UICollectionView *)objc_msgSend(v0, sel_collectionView);
  if (!v8)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v9 = v8;
  CompoundSectionedDataSource.registerCells(for:)(v8);
  swift_release();

  id v10 = objc_msgSend(v0, sel_collectionView);
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v11 = v10;
  objc_msgSend(v10, sel_setAllowsFocus_, 1);

  id v12 = objc_msgSend(v1, sel_collectionView);
  if (v12)
  {
    id v13 = v12;
    id v14 = (void *)sub_1AD73F490();
    id v15 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v13, sel_setAccessibilityIdentifier_, v15);
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1AD375C00(char a1)
{
  id v2 = v1;
  uint64_t v4 = sub_1AD73A860();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD1D266C(0, (unint64_t *)&qword_1EB731FE0, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v26 - v9;
  id v11 = (objc_class *)type metadata accessor for BrowseCategoriesViewController();
  v34.receiver = v2;
  v34.super_class = v11;
  objc_msgSendSuper2(&v34, sel_viewWillAppear_, a1 & 1);
  id v33 = v2;
  if (objc_msgSend(v2, sel_clearsSelectionOnViewWillAppear))
  {
    id v12 = objc_msgSend(v33, sel_collectionView);
    if (v12)
    {
      id v13 = v12;
      id v14 = objc_msgSend(v12, sel_indexPathsForSelectedItems);

      if (v14)
      {
        uint64_t v15 = sub_1AD73F4B0();

        uint64_t v16 = *(void *)(v15 + 16);
        uint64_t v27 = v15;
        if (v16)
        {
          uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
          uint64_t v17 = v5 + 16;
          unint64_t v19 = v15 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
          uint64_t v20 = *(void *)(v17 + 56);
          uint64_t v21 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 40);
          id v31 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 32);
          unint64_t v32 = v18;
          uint64_t v29 = v20;
          id v30 = (void (**)(char *, char *, uint64_t))(v17 + 16);
          uint64_t v28 = (void (**)(char *, uint64_t))(v17 - 8);
          swift_bridgeObjectRetain();
          unint64_t v26 = (v17 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
          while (1)
          {
            v32(v10, v19, v4);
            uint64_t v22 = *v21;
            (*v21)(v10, 0, 1, v4);
            if ((*v31)(v10, 1, v4) == 1) {
              break;
            }
            (*v30)(v7, v10, v4);
            id v23 = objc_msgSend(v33, sel_collectionView, v26, v27);
            if (!v23)
            {
              __break(1u);
              goto LABEL_15;
            }
            uint64_t v24 = v23;
            uint64_t v25 = (void *)sub_1AD73A7C0();
            objc_msgSend(v24, sel_deselectItemAtIndexPath_animated_, v25, 1);

            (*v28)(v7, v4);
            v19 += v29;
            if (!--v16) {
              goto LABEL_11;
            }
          }
        }
        else
        {
          uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
          swift_bridgeObjectRetain();
LABEL_11:
          v22(v10, 1, 1, v4);
        }
        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
LABEL_15:
      __break(1u);
    }
  }
}

void BrowseCategoriesViewController.__allocating_init(dataSource:)()
{
}

void BrowseCategoriesViewController.init(dataSource:)()
{
}

id BrowseCategoriesViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void BrowseCategoriesViewController.init(collectionViewLayout:)()
{
}

uint64_t sub_1AD3760A4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthExperienceUI30BrowseCategoriesViewController_experienceStore;
  return __swift_destroy_boxed_opaque_existential_1(v1);
}

id BrowseCategoriesViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BrowseCategoriesViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BrowseCategoriesViewController()
{
  return self;
}

uint64_t method lookup function for BrowseCategoriesViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BrowseCategoriesViewController);
}

uint64_t dispatch thunk of BrowseCategoriesViewController.__allocating_init(healthExperienceStore:healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

id sub_1AD3761B4()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthExperienceUI24CameraScannerLoadingView____lazy_storage___spinner;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC18HealthExperienceUI24CameraScannerLoadingView____lazy_storage___spinner);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI24CameraScannerLoadingView____lazy_storage___spinner);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 101);
    id v5 = objc_msgSend(self, sel_whiteColor);
    objc_msgSend(v4, sel_setColor_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1AD376280()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthExperienceUI24CameraScannerLoadingView____lazy_storage___blurView;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC18HealthExperienceUI24CameraScannerLoadingView____lazy_storage___blurView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI24CameraScannerLoadingView____lazy_storage___blurView);
  }
  else
  {
    id v4 = objc_msgSend(self, sel_effectWithStyle_, 3);
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v4);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    objc_super v2 = 0;
  }
  id v7 = v2;
  return v3;
}

void sub_1AD376444()
{
  id v1 = sub_1AD376280();
  objc_msgSend(v0, sel_addSubview_, v1);

  id v2 = sub_1AD3761B4();
  objc_msgSend(v0, sel_addSubview_, v2);

  id v3 = self;
  sub_1AD1EFDA4();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AD752B90;
  id v5 = sub_1AD376280();
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  id v7 = objc_msgSend(v0, sel_leadingAnchor);
  id v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

  *(void *)(v4 + 32) = v8;
  id v9 = sub_1AD376280();
  id v10 = objc_msgSend(v9, sel_trailingAnchor);

  id v11 = objc_msgSend(v0, sel_trailingAnchor);
  id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(void *)(v4 + 40) = v12;
  id v13 = sub_1AD376280();
  id v14 = objc_msgSend(v13, sel_topAnchor);

  id v15 = objc_msgSend(v0, sel_topAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(void *)(v4 + 48) = v16;
  id v17 = sub_1AD376280();
  id v18 = objc_msgSend(v17, sel_bottomAnchor);

  id v19 = objc_msgSend(v0, sel_bottomAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(void *)(v4 + 56) = v20;
  id v21 = sub_1AD3761B4();
  id v22 = objc_msgSend(v21, sel_centerXAnchor);

  id v23 = objc_msgSend(v0, sel_centerXAnchor);
  id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

  *(void *)(v4 + 64) = v24;
  id v25 = sub_1AD3761B4();
  id v26 = objc_msgSend(v25, sel_centerYAnchor);

  id v27 = objc_msgSend(v0, sel_centerYAnchor);
  id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v27);

  *(void *)(v4 + 72) = v28;
  id v29 = sub_1AD3761B4();
  id v30 = objc_msgSend(v29, sel_widthAnchor);

  id v31 = objc_msgSend(v30, sel_constraintEqualToConstant_, 100.0);
  *(void *)(v4 + 80) = v31;
  id v32 = sub_1AD3761B4();
  id v33 = objc_msgSend(v32, sel_heightAnchor);

  id v34 = objc_msgSend(v33, sel_constraintEqualToConstant_, 100.0);
  *(void *)(v4 + 88) = v34;
  sub_1AD73F4D0();
  sub_1AD1EED2C();
  id v35 = (id)sub_1AD73F490();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v35);
}

id CameraScannerLoadingView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void CameraScannerLoadingView.init(frame:)()
{
}

id CameraScannerLoadingView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CameraScannerLoadingView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CameraScannerLoadingView()
{
  return self;
}

uint64_t method lookup function for CameraScannerLoadingView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CameraScannerLoadingView);
}

uint64_t ContextMenuConfigurationProviding<>.contextMenuConfiguration.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a3 + 8))(v7, a1, a3);
  if (!v7[3])
  {
    sub_1AD206D18((uint64_t)v7, (unint64_t *)&qword_1EB73E880, (unint64_t *)&qword_1EB73E870);
    long long v8 = 0u;
    long long v9 = 0u;
    uint64_t v10 = 0;
    goto LABEL_7;
  }
  sub_1AD2196B8(0, (unint64_t *)&qword_1EB73E870);
  sub_1AD2196B8(0, &qword_1E9A2A9F8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v10 = 0;
    long long v8 = 0u;
    long long v9 = 0u;
    goto LABEL_7;
  }
  uint64_t v3 = *((void *)&v9 + 1);
  if (!*((void *)&v9 + 1))
  {
LABEL_7:
    sub_1AD206D18((uint64_t)&v8, &qword_1E9A2A9F0, &qword_1E9A2A9F8);
    return 0;
  }
  uint64_t v4 = v10;
  __swift_project_boxed_opaque_existential_1(&v8, *((uint64_t *)&v9 + 1));
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
  return v5;
}

uint64_t dispatch thunk of ContextMenuConfigurationProviding.contextMenuConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1AD376B28(uint64_t a1, void *a2)
{
  double v140 = a2;
  uint64_t v136 = sub_1AD73B970();
  uint64_t v135 = *(void *)(v136 - 8);
  MEMORY[0x1F4188790](v136);
  v133 = &v130[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  v134 = &v130[-v6];
  uint64_t v141 = sub_1AD73BF40();
  uint64_t v148 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141);
  uint64_t v146 = &v130[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v142 = sub_1AD73BF00();
  uint64_t v149 = *(void *)(v142 - 8);
  MEMORY[0x1F4188790](v142);
  double v147 = &v130[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AD3789FC();
  uint64_t v154 = v9;
  MEMORY[0x1F4188790](v9);
  v155 = &v130[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v143 = sub_1AD73BF30();
  uint64_t v145 = *(void *)(v143 - 8);
  MEMORY[0x1F4188790](v143);
  double v137 = &v130[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  double v138 = &v130[-v13];
  MEMORY[0x1F4188790](v14);
  CGFloat v139 = &v130[-v15];
  MEMORY[0x1F4188790](v16);
  uint64_t v132 = &v130[-v17];
  uint64_t v18 = sub_1AD73BF60();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  id v21 = &v130[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AD378A6C();
  uint64_t v23 = v22 - 8;
  MEMORY[0x1F4188790](v22);
  id v25 = &v130[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AD3786E0();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v151 = &v130[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v28);
  id v30 = &v130[-v29];
  MEMORY[0x1F4188790](v31);
  id v33 = &v130[-v32];
  unint64_t v153 = v2;
  uint64_t v34 = (uint64_t)&v2[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_previousConfiguration];
  swift_beginAccess();
  uint64_t v156 = a1;
  sub_1AD378AD0(a1, (uint64_t)v33, MEMORY[0x1E4F66100]);
  id v35 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56);
  uint64_t v150 = v19 + 56;
  int v152 = v35;
  v35((uint64_t)v33, 0, 1, v18);
  uint64_t v36 = (uint64_t)&v25[*(int *)(v23 + 56)];
  sub_1AD378AD0(v34, (uint64_t)v25, (uint64_t (*)(void))sub_1AD3786E0);
  sub_1AD378AD0((uint64_t)v33, v36, (uint64_t (*)(void))sub_1AD3786E0);
  id v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v37((uint64_t)v25, 1, v18) == 1)
  {
    sub_1AD378D10((uint64_t)v33, (uint64_t (*)(void))sub_1AD3786E0);
    if (v37(v36, 1, v18) == 1) {
      return sub_1AD378D10((uint64_t)v25, (uint64_t (*)(void))sub_1AD3786E0);
    }
    goto LABEL_6;
  }
  sub_1AD378AD0((uint64_t)v25, (uint64_t)v30, (uint64_t (*)(void))sub_1AD3786E0);
  if (v37(v36, 1, v18) == 1)
  {
    sub_1AD378D10((uint64_t)v33, (uint64_t (*)(void))sub_1AD3786E0);
    sub_1AD378D10((uint64_t)v30, MEMORY[0x1E4F66100]);
LABEL_6:
    sub_1AD378D10((uint64_t)v25, (uint64_t (*)(void))sub_1AD378A6C);
    goto LABEL_7;
  }
  sub_1AD378DC8(v36, (uint64_t)v21);
  int v131 = MEMORY[0x1B3E62280](v30, v21);
  uint64_t v47 = (uint64_t (*)(void))MEMORY[0x1E4F66100];
  sub_1AD378D10((uint64_t)v21, MEMORY[0x1E4F66100]);
  sub_1AD378D10((uint64_t)v33, (uint64_t (*)(void))sub_1AD3786E0);
  sub_1AD378D10((uint64_t)v30, v47);
  uint64_t result = sub_1AD378D10((uint64_t)v25, (uint64_t (*)(void))sub_1AD3786E0);
  if ((v131 & 1) == 0)
  {
LABEL_7:
    uint64_t v39 = v155;
    uint64_t v40 = (uint64_t)&v155[*(int *)(v154 + 48)];
    uint64_t v41 = v156;
    sub_1AD378AD0(v156, (uint64_t)v155, MEMORY[0x1E4F66100]);
    sub_1AD378AD0(v34, v40, (uint64_t (*)(void))sub_1AD3786E0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v144 = v34;
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        if (v37(v40, 1, v18) == 1)
        {
          uint64_t v154 = v18;
          uint64_t v43 = v145;
          id v44 = v139;
          uint64_t v45 = v143;
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v145 + 32))(v139, v39, v143);
          uint64_t v46 = v153;
        }
        else
        {
          int v59 = swift_getEnumCaseMultiPayload();
          uint64_t v60 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v145 + 32);
          uint64_t v45 = v143;
          if (v59 == 1)
          {
            v60(v138, v39, v143);
            v60(v137, (unsigned char *)v40, v45);
            char v61 = v134;
            sub_1AD73BF20();
            unint64_t v62 = v133;
            sub_1AD73BF20();
            sub_1AD378D70();
            uint64_t v63 = v136;
            char v64 = sub_1AD73F150();
            uint64_t v65 = *(void (**)(unsigned char *, uint64_t))(v135 + 8);
            v65(v62, v63);
            v65(v61, v63);
            uint64_t v66 = v153;
            if ((v64 & 1) == 0)
            {
              uint64_t v67 = *(void **)&v153[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageView];
              if (v67)
              {
                id v68 = v67;
                sub_1AD73BF20();
                uint64_t v69 = (void *)sub_1AD73B940();
                v65(v61, v63);
                objc_msgSend(v68, sel_setImage_, v69);
              }
            }
            uint64_t v70 = *(void **)&v66[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageTopConstraint];
            uint64_t v57 = (uint64_t)v151;
            unint64_t v71 = v138;
            if (v70)
            {
              id v72 = v70;
              double v73 = COERCE_DOUBLE(sub_1AD73BF10());
              if (v74) {
                double v73 = 0.0;
              }
              objc_msgSend(v72, sel_setConstant_, v73);
            }
            uint64_t v75 = *(void (**)(unsigned char *, uint64_t))(v145 + 8);
            v75(v137, v45);
            v75(v71, v45);
            uint64_t v76 = v144;
            goto LABEL_44;
          }
          uint64_t v100 = v132;
          v60(v132, v39, v143);
          sub_1AD378D10(v40, MEMORY[0x1E4F66100]);
          uint64_t v101 = OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_watchView;
          uint64_t v46 = v153;
          uint64_t v102 = *(void **)&v153[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_watchView];
          if (v102)
          {
            objc_msgSend(v102, sel_removeFromSuperview);
            uint64_t v103 = *(void **)&v46[v101];
          }
          else
          {
            uint64_t v103 = 0;
          }
          uint64_t v43 = v145;
          uint64_t v154 = v18;
          *(void *)&v46[v101] = 0;

          uint64_t v104 = OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_uiView;
          objc_msgSend(*(id *)&v46[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_uiView], sel_removeFromSuperview);
          uint64_t v105 = *(void **)&v46[v104];
          *(void *)&v46[v104] = 0;

          id v44 = v139;
          v60(v139, v100, v45);
        }
        id v106 = sub_1AD378B38();
        objc_msgSend(v46, sel_addSubview_, v106);
        id v107 = objc_msgSend(v106, sel_topAnchor);
        id v108 = objc_msgSend(v46, sel_topAnchor);
        uint64_t v109 = sub_1AD73BF10();
        char v111 = v110;
        (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v44, v45);
        double v112 = *(double *)&v109;
        if (v111) {
          double v112 = 0.0;
        }
        id v113 = objc_msgSend(v107, sel_constraintEqualToAnchor_constant_, v108, v112);

        uint64_t v114 = self;
        sub_1AD1EFDA4();
        uint64_t v115 = swift_allocObject();
        *(_OWORD *)(v115 + 16) = xmmword_1AD74C720;
        id v116 = objc_msgSend(v106, sel_centerXAnchor);
        id v117 = objc_msgSend(v46, sel_centerXAnchor);
        id v118 = objc_msgSend(v116, sel_constraintEqualToAnchor_, v117);

        *(void *)(v115 + 32) = v118;
        *(void *)(v115 + 40) = v113;
        id v119 = v113;
        id v120 = objc_msgSend(v106, sel_widthAnchor);
        id v121 = objc_msgSend(v120, sel_constraintEqualToConstant_, 65.0);

        *(void *)(v115 + 48) = v121;
        id v122 = objc_msgSend(v106, sel_bottomAnchor);
        id v123 = objc_msgSend(v46, sel_bottomAnchor);
        id v124 = objc_msgSend(v122, sel_constraintEqualToAnchor_, v123);

        *(void *)(v115 + 56) = v124;
        uint64_t v157 = v115;
        sub_1AD73F4D0();
        sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F810);
        long long v125 = (void *)sub_1AD73F490();
        swift_bridgeObjectRelease();
        objc_msgSend(v114, sel_activateConstraints_, v125);

        long long v126 = *(void **)&v46[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageView];
        *(void *)&v46[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageView] = v106;
        id v127 = v106;

        double v128 = *(void **)&v46[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageTopConstraint];
        *(void *)&v46[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageTopConstraint] = v119;

        uint64_t v41 = v156;
        uint64_t v18 = v154;
        uint64_t v57 = (uint64_t)v151;
      }
      else
      {
        uint64_t v53 = v142;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v149 + 32))(v147, v39, v142);
        uint64_t v54 = OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_watchView;
        char v55 = v153;
        unint64_t v56 = *(void **)&v153[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_watchView];
        uint64_t v57 = (uint64_t)v151;
        if (v56)
        {
          objc_msgSend(v56, sel_removeFromSuperview);
          uint64_t v58 = *(void **)&v55[v54];
        }
        else
        {
          uint64_t v58 = 0;
        }
        *(void *)&v55[v54] = 0;

        uint64_t v80 = OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageView;
        long long v81 = *(void **)&v55[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageView];
        if (v81)
        {
          objc_msgSend(v81, sel_removeFromSuperview);
          long long v82 = *(void **)&v55[v80];
        }
        else
        {
          long long v82 = 0;
        }
        *(void *)&v55[v80] = 0;

        uint64_t v91 = *(void **)&v55[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageTopConstraint];
        *(void *)&v55[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageTopConstraint] = 0;

        CGRect v92 = *(void **)&v55[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageHeightConstraint];
        *(void *)&v55[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageHeightConstraint] = 0;

        uint64_t v93 = OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_uiView;
        objc_msgSend(*(id *)&v55[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_uiView], sel_removeFromSuperview);
        uint64_t v94 = *(void **)&v55[v93];
        *(void *)&v55[v93] = 0;

        uint64_t v95 = v147;
        id v96 = sub_1AD378738();
        double v97 = *(void **)&v55[v93];
        *(void *)&v55[v93] = v96;
        id v98 = v96;

        objc_msgSend(v98, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        LODWORD(v99) = 1148846080;
        objc_msgSend(v98, sel_setContentHuggingPriority_forAxis_, 1, v99);
        objc_msgSend(v55, sel_addSubview_, v98);
        objc_msgSend(v98, sel_hk_alignConstraintsWithView_insets_, v55, 0.0, 0.0, 0.0, 0.0);

        (*(void (**)(unsigned char *, uint64_t))(v149 + 8))(v95, v53);
        sub_1AD378D10(v40, (uint64_t (*)(void))sub_1AD3786E0);
      }
      uint64_t v76 = v144;
    }
    else
    {
      uint64_t v48 = v141;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v148 + 32))(v146, v39, v141);
      uint64_t v49 = OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_watchView;
      uint64_t v50 = v153;
      uint64_t v51 = *(void **)&v153[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_watchView];
      if (v51)
      {
        objc_msgSend(v51, sel_removeFromSuperview);
        uint64_t v52 = *(void **)&v50[v49];
      }
      else
      {
        uint64_t v52 = 0;
      }
      uint64_t v57 = (uint64_t)v151;
      *(void *)&v50[v49] = 0;

      uint64_t v77 = OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageView;
      uint64_t v78 = *(void **)&v50[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageView];
      if (v78)
      {
        objc_msgSend(v78, sel_removeFromSuperview);
        uint64_t v79 = *(void **)&v50[v77];
      }
      else
      {
        uint64_t v79 = 0;
      }
      *(void *)&v50[v77] = 0;

      uint64_t v83 = *(void **)&v50[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageTopConstraint];
      *(void *)&v50[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageTopConstraint] = 0;

      id v84 = *(void **)&v50[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageHeightConstraint];
      *(void *)&v50[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageHeightConstraint] = 0;

      uint64_t v85 = OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_uiView;
      objc_msgSend(*(id *)&v50[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_uiView], sel_removeFromSuperview);
      uint64_t v86 = *(void **)&v50[v85];
      *(void *)&v50[v85] = 0;

      uint64_t v87 = v146;
      uint64_t v88 = (void *)sub_1AD377B84((uint64_t)v146, v140);
      uint64_t v89 = *(void **)&v50[v49];
      *(void *)&v50[v49] = v88;
      id v90 = v88;

      objc_msgSend(v50, sel_addSubview_, v90);
      objc_msgSend(v90, sel_hk_alignConstraintsWithView_insets_, v50, 0.0, 0.0, 0.0, 0.0);

      (*(void (**)(unsigned char *, uint64_t))(v148 + 8))(v87, v48);
      sub_1AD378D10(v40, (uint64_t (*)(void))sub_1AD3786E0);
      uint64_t v76 = v144;
    }
LABEL_44:
    uint64_t v129 = v152;
    sub_1AD378AD0(v41, v57, MEMORY[0x1E4F66100]);
    v129(v57, 0, 1, v18);
    swift_beginAccess();
    sub_1AD378CAC(v57, v76);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1AD377B84(uint64_t a1, void *a2)
{
  id v64 = a2;
  uint64_t v65 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v61 = sub_1AD73BF00();
  uint64_t v2 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1AD73B9D0();
  uint64_t v62 = *(void *)(v5 - 8);
  uint64_t v63 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v60 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1AD73CBA0();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v58 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1AD73B920();
  uint64_t v59 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1AD73B970();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1AD73BF40();
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16))(v20, v65, v16, v18);
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v20, v16);
  if (v21 == *MEMORY[0x1E4F660F8])
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
    sub_1AD3788E4();
    uint64_t v23 = &v20[v22[16]];
    uint64_t v25 = *(void *)v23;
    uint64_t v24 = *((void *)v23 + 1);
    uint64_t v52 = *(void *)&v20[v22[12]];
    uint64_t v53 = v25;
    uint64_t v61 = v24;
    uint64_t v26 = &v20[v22[20]];
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v20, v12);
    uint64_t v27 = v59;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v11, v26, v9);
    id v28 = (id)sub_1AD73B940();
    uint64_t v54 = v9;
    uint64_t v65 = v12;
    uint64_t v29 = v15;
    if (!v28)
    {
      uint64_t v34 = v58;
      sub_1AD73CAD0();
      id v35 = sub_1AD73CB80();
      os_log_type_t v36 = sub_1AD73F920();
      if (os_log_type_enabled(v35, v36))
      {
        id v37 = (uint8_t *)swift_slowAlloc();
        uint64_t v51 = swift_slowAlloc();
        uint64_t v67 = v51;
        *(_DWORD *)id v37 = 136446210;
        uint64_t v50 = v37 + 4;
        uint64_t v38 = sub_1AD740E30();
        uint64_t v66 = sub_1AD1F62D4(v38, v39, &v67);
        sub_1AD7403B0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AD1A4000, v35, v36, "[%{public}s] Failed to create image view", v37, 0xCu);
        uint64_t v40 = v51;
        swift_arrayDestroy();
        MEMORY[0x1B3E68450](v40, -1, -1);
        MEMORY[0x1B3E68450](v37, -1, -1);

        (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v57);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v57);
      }
      uint64_t v41 = (void *)sub_1AD73F180();
      id v30 = objc_msgSend(self, sel_systemImageNamed_, v41);

      if (v30) {
        goto LABEL_10;
      }
      id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_init);
    }
    id v30 = v28;
LABEL_10:
    id v42 = v64;
    uint64_t v43 = v60;
    sub_1AD73B9C0();
    id v44 = (void *)sub_1AD73B8F0();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v43, v63);
    id v45 = objc_allocWithZone(MEMORY[0x1E4F67C10]);
    uint64_t v46 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    uint64_t v47 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    id v33 = objc_msgSend(v45, sel_initWithIconImage_titleText_detailText_tintColor_, v30, v46, v47, v44);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v54);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v29, v65);
    goto LABEL_11;
  }
  if (v21 == *MEMORY[0x1E4F660F0])
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
    uint64_t v31 = v61;
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v20, v61);
    id v32 = sub_1AD378738();
    id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C10]), sel_initWithWatchView_, v32);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v31);
LABEL_11:
    objc_msgSend(v33, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    LODWORD(v48) = 1148846080;
    objc_msgSend(v33, sel_setContentHuggingPriority_forAxis_, 1, v48);
    return (uint64_t)v33;
  }
  uint64_t result = sub_1AD740BB0();
  __break(1u);
  return result;
}

id sub_1AD378408(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_previousConfiguration];
  uint64_t v4 = sub_1AD73BF60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_watchView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_uiView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageTopConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI21PromotionTileHeroView_imageHeightConstraint] = 0;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for PromotionTileHeroView();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

id sub_1AD378514()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PromotionTileHeroView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1AD3785EC()
{
  return type metadata accessor for PromotionTileHeroView();
}

uint64_t type metadata accessor for PromotionTileHeroView()
{
  uint64_t result = qword_1EB7387F8;
  if (!qword_1EB7387F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1AD378640()
{
  sub_1AD3786E0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1AD3786E0()
{
  if (!qword_1EB738448)
  {
    sub_1AD73BF60();
    unint64_t v0 = sub_1AD740340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB738448);
    }
  }
}

id sub_1AD378738()
{
  sub_1AD73BEE0();
  if (v0)
  {
    uint64_t v1 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
    id v2 = objc_msgSend(self, sel_bundleWithIdentifier_, v1);

    if (v2)
    {
      sub_1AD73BEF0();
      uint64_t v3 = (void *)sub_1AD73F180();
      swift_bridgeObjectRelease();
      id v4 = objc_msgSend(v2, sel_classNamed_, v3);

      if (v4)
      {
        swift_getObjCClassMetadata();
        sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F880);
        if (swift_dynamicCastMetatype())
        {
          id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
          if (v5)
          {
            uint64_t v6 = v5;
            objc_msgSend(v5, sel_setContentMode_, 1);
            LODWORD(v7) = 1148846080;
            objc_msgSend(v6, sel_setContentHuggingPriority_forAxis_, 1, v7);
            LODWORD(v8) = 1148846080;
            objc_msgSend(v6, sel_setContentCompressionResistancePriority_forAxis_, 0, v8);

            return v6;
          }
        }
      }
    }
  }
  id v10 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  return objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 100.0, 150.0);
}

void sub_1AD3788E4()
{
  if (!qword_1E9A2CF68)
  {
    MEMORY[0x1F4188790](0);
    sub_1AD73B970();
    sub_1AD73B920();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1E9A2CF68);
    }
  }
}

void sub_1AD3789FC()
{
  if (!qword_1EB738458)
  {
    sub_1AD73BF60();
    sub_1AD3786E0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB738458);
    }
  }
}

void sub_1AD378A6C()
{
  if (!qword_1EB738450)
  {
    sub_1AD3786E0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB738450);
    }
  }
}

uint64_t sub_1AD378AD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_1AD378B38()
{
  uint64_t v0 = sub_1AD73B970();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  objc_msgSend(v4, sel_setContentMode_, 1);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_1AD73BF20();
  uint64_t v5 = (void *)sub_1AD73B940();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setImage_, v5);

  LODWORD(v6) = 1148846080;
  objc_msgSend(v4, sel_setContentHuggingPriority_forAxis_, 1, v6);
  LODWORD(v7) = 1148846080;
  objc_msgSend(v4, sel_setContentCompressionResistancePriority_forAxis_, 0, v7);
  return v4;
}

uint64_t sub_1AD378CAC(uint64_t a1, uint64_t a2)
{
  sub_1AD3786E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD378D10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1AD378D70()
{
  unint64_t result = qword_1EB73E2C0;
  if (!qword_1EB73E2C0)
  {
    sub_1AD73B970();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB73E2C0);
  }
  return result;
}

uint64_t sub_1AD378DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1AD73BF60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t CellEditModeHandling<>.didSetEditMode(isEditing:animated:)(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 8))(v10, a3, a5);
  if (v10[3])
  {
    sub_1AD2196B8(0, (unint64_t *)&qword_1EB73E870);
    sub_1AD2196B8(0, &qword_1EB732138);
    if (swift_dynamicCast())
    {
      uint64_t v7 = *((void *)&v12 + 1);
      if (*((void *)&v12 + 1))
      {
        uint64_t v8 = v13;
        __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
        (*(void (**)(void, void, uint64_t, uint64_t))(v8 + 8))(a1 & 1, a2 & 1, v7, v8);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
      }
    }
    else
    {
      uint64_t v13 = 0;
      long long v11 = 0u;
      long long v12 = 0u;
    }
  }
  else
  {
    sub_1AD206D18((uint64_t)v10, (unint64_t *)&qword_1EB73E880, (unint64_t *)&qword_1EB73E870);
    long long v11 = 0u;
    long long v12 = 0u;
    uint64_t v13 = 0;
  }
  return sub_1AD206D18((uint64_t)&v11, (unint64_t *)&unk_1EB732140, &qword_1EB732138);
}

uint64_t dispatch thunk of CellEditModeHandling.didSetEditMode(isEditing:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t static SharingVersionMismatchFeedItemGenerating.makeVersionMismatchFeedItemIfNecessary(context:feedItemIdentifier:modelVersion:currentVersion:viewClass:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v41 = a3;
  uint64_t v42 = a6;
  uint64_t v38 = a5;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  sub_1AD1C09F8();
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v35 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v20 = sub_1AD73B180();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  id v37 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v35 - v24;
  sub_1AD38001C(a4, (uint64_t)v19, (uint64_t (*)(void))sub_1AD1C09F8);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v26(v19, 1, v20) == 1)
  {
    uint64_t v17 = v19;
LABEL_5:
    sub_1AD3817A0((uint64_t)v17, (uint64_t (*)(void))sub_1AD1C09F8);
    static SharingVersionMismatchFeedItemGenerating.makeVersionMismatchFeedItem(context:feedItemIdentifier:viewClass:)(v39, v40);
    goto LABEL_6;
  }
  uint64_t v35 = a7;
  uint64_t v36 = a8;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v27(v25, v19, v20);
  sub_1AD38001C(v38, (uint64_t)v17, (uint64_t (*)(void))sub_1AD1C09F8);
  if (v26(v17, 1, v20) == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    a8 = v36;
    goto LABEL_5;
  }
  id v30 = v37;
  v27(v37, v17, v20);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v14, v25, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v14, 0, 1, v20);
  char v31 = sub_1AD73B140();
  sub_1AD3817A0((uint64_t)v14, (uint64_t (*)(void))sub_1AD1C09F8);
  if (v31)
  {
    id v32 = *(void (**)(char *, uint64_t))(v21 + 8);
    v32(v30, v20);
    v32(v25, v20);
    uint64_t v33 = sub_1AD73AD70();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v36, 1, 1, v33);
  }
  a8 = v36;
  static SharingVersionMismatchFeedItemGenerating.makeVersionMismatchFeedItem(context:feedItemIdentifier:viewClass:)(v39, v40);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v21 + 8);
  v34(v30, v20);
  v34(v25, v20);
LABEL_6:
  uint64_t v28 = sub_1AD73AD70();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a8, 0, 1, v28);
}

uint64_t static SharingVersionMismatchFeedItemGenerating.makeVersionMismatchFeedItem(context:feedItemIdentifier:viewClass:)(uint64_t a1, uint64_t a2)
{
  v19[7] = a2;
  uint64_t v3 = sub_1AD73ADB0();
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = sub_1AD73CBA0();
  uint64_t v19[5] = *(void *)(v4 - 8);
  uint64_t v19[6] = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v29 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AD73ABF0();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v23 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AD73AA80();
  uint64_t v20 = *(void *)(v8 - 8);
  uint64_t v21 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v22 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD739D50();
  swift_allocObject();
  sub_1AD739D40();
  sub_1AD379A08();
  v30[0] = 0;
  v30[1] = 0;
  uint64_t v10 = sub_1AD739D30();
  uint64_t v26 = a1;
  uint64_t v11 = v10;
  unint64_t v13 = v12;
  swift_release();
  swift_bridgeObjectRetain();
  sub_1AD73ABC0();
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, *MEMORY[0x1E4F66F90], v21);
  sub_1AD1C93C8(v11, v13);
  sub_1AD73ADA0();
  sub_1AD73AC50();
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, *MEMORY[0x1E4F670E0], v25);
  sub_1AD73AC00();
  uint64_t v14 = sub_1AD73AE30();
  uint64_t v16 = v15;
  uint64_t v17 = (void (*)(void *, void))sub_1AD73AD30();
  sub_1AD1C18AC(&v31, v14, v16);
  swift_bridgeObjectRelease();
  v17(v30, 0);
  sub_1AD73AC20();
  sub_1AD73AC30();
  sub_1AD73AD00();
  return sub_1AD228620(v11, v13);
}

unint64_t sub_1AD379A08()
{
  unint64_t result = qword_1E9A2CF70;
  if (!qword_1E9A2CF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CF70);
  }
  return result;
}

uint64_t sub_1AD379A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1AD740CF0();
  if (*(void *)(a2 + 64))
  {
    sub_1AD740D10();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1AD73F2B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AD740D10();
    swift_bridgeObjectRetain();
  }
  uint64_t v11 = sub_1AD740D40();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v20 = v2;
    uint64_t v21 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1AD38001C(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, type metadata accessor for SummarySharingSelectableDataTypeItem);
      char v16 = _s18HealthExperienceUI36SummarySharingSelectableDataTypeItemV2eeoiySbAC_ACtFZ_0((uint64_t)v9, a2);
      sub_1AD3817A0((uint64_t)v9, type metadata accessor for SummarySharingSelectableDataTypeItem);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v20;
        a1 = v21;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    sub_1AD3817A0(a2, type metadata accessor for SummarySharingSelectableDataTypeItem);
    sub_1AD38001C(*(void *)(*v20 + 48) + v15 * v13, v21, type metadata accessor for SummarySharingSelectableDataTypeItem);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_10:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD38001C(a2, (uint64_t)v9, type metadata accessor for SummarySharingSelectableDataTypeItem);
    uint64_t v22 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1AD37D5FC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v22;
    swift_bridgeObjectRelease();
    sub_1AD2925E8(a2, a1);
    return 1;
  }
}

uint64_t sub_1AD379CF4(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1AD740CF0();
  int v6 = a2 >> 6;
  switch(a2 >> 6)
  {
    case 2:
    case 3:
      break;
    default:
      sub_1AD740D00();
      break;
  }
  sub_1AD740D00();
  uint64_t v7 = sub_1AD740D40();
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_42:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1AD37D85C(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v21;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_43;
  }
  uint64_t v10 = ~v8;
  BOOL v11 = a2 == 194;
  BOOL v12 = a2 == 193;
  BOOL v13 = a2 == 192;
  if (v6 != 3)
  {
    BOOL v11 = 0;
    BOOL v12 = 0;
    BOOL v13 = 0;
  }
  BOOL v14 = a2 == 128;
  BOOL v15 = v6 == 2 && a2 == 131;
  BOOL v16 = v6 == 2 && a2 == 130;
  BOOL v17 = v6 == 2 && a2 == 129;
  if (v6 != 2) {
    BOOL v14 = 0;
  }
  while (2)
  {
    unsigned int v18 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v9);
    switch(v18 >> 6)
    {
      case 1u:
        if (v6 == 1 && ((v18 ^ a2) & 0x3F) == 0) {
          goto LABEL_41;
        }
        goto LABEL_19;
      case 2u:
        switch(*(unsigned char *)(*(void *)(v5 + 48) + v9))
        {
          case 0x81:
            if (v17) {
              goto LABEL_41;
            }
            goto LABEL_19;
          case 0x82:
            if (v16) {
              goto LABEL_41;
            }
            goto LABEL_19;
          case 0x83:
            if (v15) {
              goto LABEL_41;
            }
            goto LABEL_19;
          default:
            if (v14) {
              goto LABEL_41;
            }
            goto LABEL_19;
        }
      case 3u:
        if (v18 != 192)
        {
          if (v18 == 193)
          {
            if (v12) {
              goto LABEL_41;
            }
          }
          else if (v11)
          {
            goto LABEL_41;
          }
LABEL_19:
          unint64_t v9 = (v9 + 1) & v10;
          if (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            goto LABEL_42;
          }
          continue;
        }
        if (!v13) {
          goto LABEL_19;
        }
LABEL_41:
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v9);
LABEL_43:
        *a1 = a2;
        return result;
      default:
        if (a2 <= 0x3Fu && v18 == a2) {
          goto LABEL_41;
        }
        goto LABEL_19;
    }
  }
}

uint64_t sub_1AD379FC4(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1AD73C730();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1AD21F56C(&qword_1E9A2B6E8, MEMORY[0x1E4F66840]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1AD73F0A0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    BOOL v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    BOOL v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    BOOL v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1AD21F56C((unint64_t *)&unk_1E9A2B6F0, MEMORY[0x1E4F66840]);
      char v21 = sub_1AD73F150();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      BOOL v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    BOOL v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1AD37DB54((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1AD37A2E8(void *a1, void *a2)
{
  return sub_1AD37A66C(a1, a2, (void (*)(void))sub_1AD37FF48, (void (*)(void))sub_1AD37FEB4, (void (*)(void))sub_1AD37FF48);
}

uint64_t sub_1AD37A318(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1AD73ACC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1AD21F56C((unint64_t *)&unk_1E9A2F270, MEMORY[0x1E4F670F8]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1AD73F0A0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    BOOL v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    BOOL v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    BOOL v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1AD21F56C(&qword_1E9A2B730, MEMORY[0x1E4F670F8]);
      char v21 = sub_1AD73F150();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      BOOL v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    BOOL v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1AD37DE1C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1AD37A63C(void *a1, void *a2)
{
  return sub_1AD37A66C(a1, a2, MEMORY[0x1E4F674F8], (void (*)(void))sub_1AD2760BC, MEMORY[0x1E4F674F8]);
}

uint64_t sub_1AD37A66C(void *a1, void *a2, void (*a3)(void), void (*a4)(void), void (*a5)(void))
{
  unint64_t v9 = v5;
  uint64_t v12 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v12 < 0) {
      uint64_t v13 = *v5;
    }
    else {
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v14 = a2;
    uint64_t v15 = sub_1AD740580();

    if (v15)
    {
      swift_bridgeObjectRelease();

      a3(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v37;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1AD740570();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v27 = sub_1AD37B0C4(v13, result + 1, a4, a5, a4);
    uint64_t v38 = v27;
    unint64_t v28 = *(void *)(v27 + 16);
    if (*(void *)(v27 + 24) <= v28)
    {
      uint64_t v33 = v28 + 1;
      id v34 = v14;
      sub_1AD37C720(v33, a4);
      uint64_t v29 = v38;
    }
    else
    {
      uint64_t v29 = v27;
      id v30 = v14;
    }
    sub_1AD37D578((uint64_t)v14, v29);
    *unint64_t v9 = v29;
    swift_bridgeObjectRelease();
    *a1 = v14;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1AD740040();
    uint64_t v18 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v19 = v17 & ~v18;
    if ((*(void *)(v12 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
    {
      a3(0);
      id v20 = *(id *)(*(void *)(v12 + 48) + 8 * v19);
      char v21 = sub_1AD740050();

      if (v21)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v25 = *(void **)(*(void *)(*v5 + 48) + 8 * v19);
        *a1 = v25;
        id v26 = v25;
        return 0;
      }
      uint64_t v22 = ~v18;
      while (1)
      {
        unint64_t v19 = (v19 + 1) & v22;
        if (((*(void *)(v12 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          break;
        }
        id v23 = *(id *)(*(void *)(v12 + 48) + 8 * v19);
        char v24 = sub_1AD740050();

        if (v24) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = *v5;
    uint64_t *v5 = 0x8000000000000000;
    id v32 = a2;
    sub_1AD37E0E4((uint64_t)v32, v19, isUniquelyReferenced_nonNull_native, a4, a5);
    uint64_t *v5 = v39;
    swift_bridgeObjectRelease();
    *a1 = v32;
  }
  return 1;
}

uint64_t sub_1AD37A92C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1AD73A4B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1AD21F56C((unint64_t *)&unk_1EB73E798, MEMORY[0x1E4F276F0]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1AD73F0A0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    unint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    BOOL v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    id v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      id v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1AD21F56C(&qword_1E9A2CFB0, MEMORY[0x1E4F276F0]);
      char v21 = sub_1AD73F150();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      id v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1AD37E270((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1AD37AC50(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1AD73C850();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1AD21F56C(&qword_1EB73F6D8, MEMORY[0x1E4F675C8]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1AD73F0A0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    unint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    BOOL v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    id v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      id v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1AD21F56C(&qword_1EB73F6E0, MEMORY[0x1E4F675C8]);
      char v21 = sub_1AD73F150();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      id v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1AD37E538((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1AD37AF74(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1AD740CF0();
  sub_1AD740D00();
  uint64_t v6 = sub_1AD740D40();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1AD37E800(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(void *)(v9 + 8 * v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v9 + 8 * v8) != a2);
  }
  uint64_t result = 0;
  a2 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1AD37B094(uint64_t a1, uint64_t a2)
{
  return sub_1AD37B0C4(a1, a2, (void (*)(void))sub_1AD2760BC, MEMORY[0x1E4F674F8], (void (*)(void))sub_1AD2760BC);
}

uint64_t sub_1AD37B0C4(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(void), void (*a5)(void))
{
  if (a2)
  {
    a3(0);
    uint64_t v7 = sub_1AD740630();
    uint64_t v20 = v7;
    sub_1AD740530();
    if (sub_1AD7405A0())
    {
      a4(0);
      do
      {
        swift_dynamicCast();
        uint64_t v7 = v20;
        unint64_t v14 = *(void *)(v20 + 16);
        if (*(void *)(v20 + 24) <= v14)
        {
          sub_1AD37C720(v14 + 1, a5);
          uint64_t v7 = v20;
        }
        uint64_t result = sub_1AD740040();
        uint64_t v9 = v7 + 56;
        uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
        unint64_t v11 = result & ~v10;
        unint64_t v12 = v11 >> 6;
        if (((-1 << v11) & ~*(void *)(v7 + 56 + 8 * (v11 >> 6))) != 0)
        {
          unint64_t v13 = __clz(__rbit64((-1 << v11) & ~*(void *)(v7 + 56 + 8 * (v11 >> 6)))) | v11 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v15 = 0;
          unint64_t v16 = (unint64_t)(63 - v10) >> 6;
          do
          {
            if (++v12 == v16 && (v15 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v17 = v12 == v16;
            if (v12 == v16) {
              unint64_t v12 = 0;
            }
            v15 |= v17;
            uint64_t v18 = *(void *)(v9 + 8 * v12);
          }
          while (v18 == -1);
          unint64_t v13 = __clz(__rbit64(~v18)) + (v12 << 6);
        }
        *(void *)(v9 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        *(void *)(*(void *)(v7 + 48) + 8 * v13) = v19;
        ++*(void *)(v7 + 16);
      }
      while (sub_1AD7405A0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v7;
}

uint64_t sub_1AD37B2C4()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1AD73AA80();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_1AD38170C();
  uint64_t v5 = sub_1AD740620();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      id v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1AD21F56C(&qword_1EB73E7F0, MEMORY[0x1E4F67030]);
      uint64_t result = sub_1AD73F0A0();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1AD37B6BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1AD1C1EA4();
  uint64_t v3 = sub_1AD740620();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1AD740CF0();
      sub_1AD73F2B0();
      uint64_t result = sub_1AD740D40();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *int64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1AD37B998()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v34 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_1AD37FF88();
  uint64_t v6 = sub_1AD740620();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v33 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    unint64_t v31 = v0;
    int64_t v32 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v18 >= v32) {
          goto LABEL_36;
        }
        unint64_t v19 = v33[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v32) {
            goto LABEL_36;
          }
          unint64_t v19 = v33[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v32) {
              goto LABEL_36;
            }
            unint64_t v19 = v33[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v32)
              {
LABEL_36:
                swift_release();
                uint64_t v1 = v31;
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 > 63) {
                  bzero(v33, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v33 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v33[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_42;
                  }
                  if (v14 >= v32) {
                    goto LABEL_36;
                  }
                  unint64_t v19 = v33[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(v34 + 72);
      sub_1AD2925E8(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4);
      sub_1AD740CF0();
      if (*((void *)v4 + 8))
      {
        sub_1AD740D10();
        swift_bridgeObjectRetain();
        sub_1AD73F2B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1AD740D10();
      }
      uint64_t result = sub_1AD740D40();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t result = sub_1AD2925E8((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v7;
  return result;
}

unint64_t sub_1AD37BD50()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1AD37FE04();
  uint64_t v3 = sub_1AD740620();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v13 >= v8) {
          goto LABEL_22;
        }
        unint64_t v14 = v5[v13];
        ++v10;
        if (!v14)
        {
          int64_t v10 = v13 + 1;
          if (v13 + 1 >= v8) {
            goto LABEL_22;
          }
          unint64_t v14 = v5[v10];
          if (!v14)
          {
            int64_t v10 = v13 + 2;
            if (v13 + 2 >= v8) {
              goto LABEL_22;
            }
            unint64_t v14 = v5[v10];
            if (!v14)
            {
              int64_t v15 = v13 + 3;
              if (v15 >= v8)
              {
LABEL_22:
                swift_release();
                uint64_t v16 = 1 << *(unsigned char *)(v2 + 32);
                if (v16 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v5 = -1 << v16;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v14 = v5[v15];
              if (!v14)
              {
                while (1)
                {
                  int64_t v10 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_28;
                  }
                  if (v10 >= v8) {
                    goto LABEL_22;
                  }
                  unint64_t v14 = v5[v10];
                  ++v15;
                  if (v14) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v10 = v15;
            }
          }
        }
LABEL_21:
        unint64_t v7 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      unint64_t result = sub_1AD37D458(*(unsigned char *)(*(void *)(v2 + 48) + v12), v3);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_1AD37BF18()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1AD73C730();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_1AD380430();
  uint64_t v5 = sub_1AD740620();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1AD21F56C(&qword_1E9A2B6E8, MEMORY[0x1E4F66840]);
      uint64_t result = sub_1AD73F0A0();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1AD37C310(uint64_t a1)
{
  return sub_1AD37C720(a1, (void (*)(void))sub_1AD37FEB4);
}

uint64_t sub_1AD37C328()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1AD73ACC0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_1AD381678();
  uint64_t v5 = sub_1AD740620();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1AD21F56C((unint64_t *)&unk_1E9A2F270, MEMORY[0x1E4F670F8]);
      uint64_t result = sub_1AD73F0A0();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1AD37C720(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  a2(0);
  uint64_t v5 = sub_1AD740620();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    char v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_1AD740040();
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v6;
  return result;
}

uint64_t sub_1AD37C9C0()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1AD73A4B0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_1AD3815E4();
  uint64_t v5 = sub_1AD740620();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1AD21F56C((unint64_t *)&unk_1EB73E798, MEMORY[0x1E4F276F0]);
      uint64_t result = sub_1AD73F0A0();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1AD37CDB8()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1AD73C850();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_1AD381550();
  uint64_t v5 = sub_1AD740620();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1AD21F56C(&qword_1EB73F6D8, MEMORY[0x1E4F675C8]);
      uint64_t result = sub_1AD73F0A0();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1AD37D1B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1AD3814BC();
  uint64_t result = sub_1AD740620();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_1AD740CF0();
      sub_1AD740D00();
      uint64_t result = sub_1AD740D40();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1AD37D458(unsigned __int8 a1, uint64_t a2)
{
  sub_1AD740CF0();
  switch(a1 >> 6)
  {
    case 2:
    case 3:
      break;
    default:
      sub_1AD740D00();
      break;
  }
  sub_1AD740D00();
  sub_1AD740D40();
  unint64_t result = sub_1AD740510();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(unsigned char *)(*(void *)(a2 + 48) + result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_1AD37D578(uint64_t a1, uint64_t a2)
{
  sub_1AD740040();
  unint64_t result = sub_1AD740510();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1AD37D5FC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  int64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
  {
LABEL_16:
    uint64_t v13 = v8;
    goto LABEL_17;
  }
  if (a3)
  {
    sub_1AD37B998();
    goto LABEL_8;
  }
  if (v12 <= v11)
  {
    sub_1AD37F8EC();
LABEL_8:
    uint64_t v14 = *v3;
    sub_1AD740CF0();
    if (*(void *)(a1 + 64))
    {
      sub_1AD740D10();
      swift_bridgeObjectRetain();
      sub_1AD73F2B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD740D10();
    }
    uint64_t v15 = sub_1AD740D40();
    uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
    a2 = v15 & ~v16;
    if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      v25[1] = v7;
      uint64_t v17 = ~v16;
      uint64_t v13 = v8;
      uint64_t v18 = *(void *)(v8 + 72);
      while (1)
      {
        sub_1AD38001C(*(void *)(v14 + 48) + v18 * a2, (uint64_t)v10, type metadata accessor for SummarySharingSelectableDataTypeItem);
        char v19 = _s18HealthExperienceUI36SummarySharingSelectableDataTypeItemV2eeoiySbAC_ACtFZ_0((uint64_t)v10, a1);
        sub_1AD3817A0((uint64_t)v10, type metadata accessor for SummarySharingSelectableDataTypeItem);
        if (v19) {
          goto LABEL_20;
        }
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_17;
        }
      }
    }
    goto LABEL_16;
  }
  uint64_t v13 = v8;
  sub_1AD37EB00();
LABEL_17:
  uint64_t v20 = *v26;
  *(void *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1AD2925E8(a1, *(void *)(v20 + 48) + *(void *)(v13 + 72) * a2);
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (!v23)
  {
    *(void *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_20:
  uint64_t result = sub_1AD740C20();
  __break(1u);
  return result;
}

uint64_t sub_1AD37D85C(uint64_t result, unint64_t a2, char a3)
{
  unsigned __int8 v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1AD37BD50();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_1AD37ED48();
        goto LABEL_49;
      }
      sub_1AD37FC78();
    }
    uint64_t v8 = *v3;
    sub_1AD740CF0();
    int v9 = v5 >> 6;
    switch(v5 >> 6)
    {
      case 2:
      case 3:
        break;
      default:
        sub_1AD740D00();
        break;
    }
    sub_1AD740D00();
    uint64_t result = sub_1AD740D40();
    uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v10;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      BOOL v12 = v5 == 194;
      BOOL v13 = v5 == 193;
      BOOL v14 = v5 == 192;
      if (v9 != 3)
      {
        BOOL v12 = 0;
        BOOL v13 = 0;
        BOOL v14 = 0;
      }
      BOOL v15 = v5 == 128;
      BOOL v16 = v9 == 2 && v5 == 131;
      BOOL v17 = v9 == 2 && v5 == 130;
      uint64_t result = v9 == 2 && v5 == 129;
      if (v9 != 2) {
        BOOL v15 = 0;
      }
      while (1)
      {
        unsigned int v18 = *(unsigned __int8 *)(*(void *)(v8 + 48) + a2);
        switch(v18 >> 6)
        {
          case 1u:
            if (v9 == 1 && ((v18 ^ v5) & 0x3F) == 0) {
              goto LABEL_48;
            }
            goto LABEL_26;
          case 2u:
            switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
            {
              case 0x81:
                if (result) {
                  goto LABEL_48;
                }
                goto LABEL_26;
              case 0x82:
                if (v17) {
                  goto LABEL_48;
                }
                goto LABEL_26;
              case 0x83:
                if (v16) {
                  goto LABEL_48;
                }
                goto LABEL_26;
              default:
                if (v15) {
                  goto LABEL_48;
                }
                goto LABEL_26;
            }
          case 3u:
            if (v18 == 192)
            {
              if (v14) {
                goto LABEL_48;
              }
            }
            else if (v18 == 193)
            {
              if (v13) {
                goto LABEL_48;
              }
            }
            else if (v12)
            {
LABEL_48:
              uint64_t result = sub_1AD740C20();
              __break(1u);
              goto LABEL_49;
            }
LABEL_26:
            a2 = (a2 + 1) & v11;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_49;
            }
            break;
          default:
            if (v5 <= 0x3Fu && v18 == v5) {
              goto LABEL_48;
            }
            goto LABEL_26;
        }
      }
    }
  }
LABEL_49:
  uint64_t v19 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v19 + 48) + a2) = v5;
  uint64_t v20 = *(void *)(v19 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
    JUMPOUT(0x1AD37DB24);
  }
  *(void *)(v19 + 16) = v22;
  return result;
}

uint64_t sub_1AD37DB54(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1AD73C730();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1AD37BF18();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1AD37F0F8(MEMORY[0x1E4F66840], (void (*)(void))sub_1AD380430);
      goto LABEL_12;
    }
    sub_1AD380084();
  }
  uint64_t v12 = *v3;
  sub_1AD21F56C(&qword_1E9A2B6E8, MEMORY[0x1E4F66840]);
  uint64_t v13 = sub_1AD73F0A0();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    BOOL v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1AD21F56C((unint64_t *)&unk_1E9A2B6F0, MEMORY[0x1E4F66840]);
      char v21 = sub_1AD73F150();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1AD740C20();
  __break(1u);
  return result;
}

uint64_t sub_1AD37DE1C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1AD73ACC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1AD37C328();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1AD37F0F8(MEMORY[0x1E4F670F8], (void (*)(void))sub_1AD381678);
      goto LABEL_12;
    }
    sub_1AD3804C4();
  }
  uint64_t v12 = *v3;
  sub_1AD21F56C((unint64_t *)&unk_1E9A2F270, MEMORY[0x1E4F670F8]);
  uint64_t v13 = sub_1AD73F0A0();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    BOOL v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1AD21F56C(&qword_1E9A2B730, MEMORY[0x1E4F670F8]);
      char v21 = sub_1AD73F150();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1AD740C20();
  __break(1u);
  return result;
}

void sub_1AD37E0E4(uint64_t a1, unint64_t a2, char a3, void (*a4)(void), void (*a5)(void))
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_1AD37C720(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_1AD37EF48(a4);
      goto LABEL_14;
    }
    sub_1AD380870(v11, a4);
  }
  uint64_t v12 = *v5;
  uint64_t v13 = sub_1AD740040();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    a5(0);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = sub_1AD740050();

    if (v16)
    {
LABEL_13:
      sub_1AD740C20();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = sub_1AD740050();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

uint64_t sub_1AD37E270(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_1AD73A4B0();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1AD37C9C0();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1AD37F0F8(MEMORY[0x1E4F276F0], (void (*)(void))sub_1AD3815E4);
      goto LABEL_12;
    }
    sub_1AD380AEC();
  }
  uint64_t v13 = *v3;
  sub_1AD21F56C((unint64_t *)&unk_1EB73E798, MEMORY[0x1E4F276F0]);
  uint64_t v14 = sub_1AD73F0A0();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    id v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_1AD21F56C(&qword_1E9A2CFB0, MEMORY[0x1E4F276F0]);
      char v22 = sub_1AD73F150();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1AD740C20();
  __break(1u);
  return result;
}

uint64_t sub_1AD37E538(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_1AD73C850();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1AD37CDB8();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1AD37F0F8(MEMORY[0x1E4F675C8], (void (*)(void))sub_1AD381550);
      goto LABEL_12;
    }
    sub_1AD380E98();
  }
  uint64_t v13 = *v3;
  sub_1AD21F56C(&qword_1EB73F6D8, MEMORY[0x1E4F675C8]);
  uint64_t v14 = sub_1AD73F0A0();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    id v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_1AD21F56C(&qword_1EB73F6E0, MEMORY[0x1E4F675C8]);
      char v22 = sub_1AD73F150();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1AD740C20();
  __break(1u);
  return result;
}

uint64_t sub_1AD37E800(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1AD37D1B0();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1AD37F3AC();
      goto LABEL_14;
    }
    sub_1AD381244();
  }
  uint64_t v8 = *v3;
  sub_1AD740CF0();
  sub_1AD740D00();
  uint64_t result = sub_1AD740D40();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      type metadata accessor for _HKDataTypeCode(0);
      uint64_t result = sub_1AD740C20();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_1AD37E950()
{
  uint64_t v1 = v0;
  sub_1AD1C1EA4();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD740610();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AD37EB00()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD37FF88();
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1AD740610();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v17) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v10 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v10 + 8 * v13);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    unint64_t v20 = *(void *)(v3 + 72) * v19;
    sub_1AD38001C(*(void *)(v6 + 48) + v20, (uint64_t)v5, type metadata accessor for SummarySharingSelectableDataTypeItem);
    uint64_t result = (void *)sub_1AD2925E8((uint64_t)v5, *(void *)(v8 + 48) + v20);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v17) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v10 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AD37ED48()
{
  uint64_t v1 = v0;
  sub_1AD37FE04();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD740610();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AD37EED8()
{
  return sub_1AD37F0F8(MEMORY[0x1E4F66840], (void (*)(void))sub_1AD380430);
}

void *sub_1AD37EF04()
{
  return sub_1AD37F0F8(MEMORY[0x1E4F670F8], (void (*)(void))sub_1AD381678);
}

id sub_1AD37EF30()
{
  return sub_1AD37EF48((void (*)(void))sub_1AD2760BC);
}

id sub_1AD37EF48(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1AD740610();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    int64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AD37F0F8(uint64_t (*a1)(void), void (*a2)(void))
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v25 - v7;
  a2(0);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_1AD740610();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    uint64_t *v4 = v11;
    return result;
  }
  id result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  uint64_t v26 = v4;
  BOOL v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    id result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1AD37F3AC()
{
  uint64_t v1 = v0;
  sub_1AD3814BC();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD740610();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1AD37F540()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1AD73AA80();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1AD38170C();
  uint64_t v7 = sub_1AD740620();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1AD21F56C(&qword_1EB73E7F0, MEMORY[0x1E4F67030]);
    uint64_t result = sub_1AD73F0A0();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1AD37F8EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v33 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_1AD37FF88();
  uint64_t v6 = sub_1AD740620();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  unint64_t v30 = v0;
  uint64_t v31 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v32) {
      goto LABEL_36;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v32) {
        goto LABEL_36;
      }
      unint64_t v19 = *(void *)(v31 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v32) {
          goto LABEL_36;
        }
        unint64_t v19 = *(void *)(v31 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v33 + 72);
    sub_1AD38001C(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, type metadata accessor for SummarySharingSelectableDataTypeItem);
    sub_1AD740CF0();
    if (*((void *)v4 + 8))
    {
      sub_1AD740D10();
      swift_bridgeObjectRetain();
      sub_1AD73F2B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD740D10();
    }
    uint64_t result = sub_1AD740D40();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_1AD2925E8((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v32)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_38;
  }
  unint64_t v19 = *(void *)(v31 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v32) {
      goto LABEL_36;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_1AD37FC78()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1AD37FE04();
  uint64_t v3 = sub_1AD740620();
  if (!*(void *)(v2 + 16))
  {
LABEL_23:
    unint64_t result = swift_release();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_6;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v8) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_22;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_22;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_6:
    unint64_t result = sub_1AD37D458(*(unsigned char *)(*(void *)(v2 + 48) + v12), v3);
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_22:
    swift_release();
    goto LABEL_23;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1AD37FE04()
{
  if (!qword_1E9A2CF78)
  {
    sub_1AD37FE60();
    unint64_t v0 = sub_1AD740650();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2CF78);
    }
  }
}

unint64_t sub_1AD37FE60()
{
  unint64_t result = qword_1E9A2CF80;
  if (!qword_1E9A2CF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2CF80);
  }
  return result;
}

void sub_1AD37FEB4()
{
  if (!qword_1EB73E758)
  {
    sub_1AD37FF48();
    sub_1AD21F56C((unint64_t *)&qword_1EB73D180, (void (*)(uint64_t))sub_1AD37FF48);
    unint64_t v0 = sub_1AD740650();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB73E758);
    }
  }
}

unint64_t sub_1AD37FF48()
{
  unint64_t result = qword_1EB741780;
  if (!qword_1EB741780)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB741780);
  }
  return result;
}

void sub_1AD37FF88()
{
  if (!qword_1E9A2CF88)
  {
    type metadata accessor for SummarySharingSelectableDataTypeItem(255);
    sub_1AD21F56C(&qword_1E9A2CF90, (void (*)(uint64_t))type metadata accessor for SummarySharingSelectableDataTypeItem);
    unint64_t v0 = sub_1AD740650();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2CF88);
    }
  }
}

uint64_t sub_1AD38001C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AD380084()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1AD73C730();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1AD380430();
  uint64_t v7 = sub_1AD740620();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1AD21F56C(&qword_1E9A2B6E8, MEMORY[0x1E4F66840]);
    uint64_t result = sub_1AD73F0A0();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1AD380430()
{
  if (!qword_1E9A2CF98)
  {
    sub_1AD73C730();
    sub_1AD21F56C(&qword_1E9A2B6E8, MEMORY[0x1E4F66840]);
    unint64_t v0 = sub_1AD740650();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2CF98);
    }
  }
}

uint64_t sub_1AD3804C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1AD73ACC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1AD381678();
  uint64_t v7 = sub_1AD740620();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1AD21F56C((unint64_t *)&unk_1E9A2F270, MEMORY[0x1E4F670F8]);
    uint64_t result = sub_1AD73F0A0();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1AD380870(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  a2(0);
  uint64_t v5 = sub_1AD740620();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v3 = v6;
    return result;
  }
  char v29 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    id v21 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_1AD740040();
    uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1AD380AEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1AD73A4B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1AD3815E4();
  uint64_t v7 = sub_1AD740620();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1AD21F56C((unint64_t *)&unk_1EB73E798, MEMORY[0x1E4F276F0]);
    uint64_t result = sub_1AD73F0A0();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1AD380E98()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1AD73C850();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1AD381550();
  uint64_t v7 = sub_1AD740620();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1AD21F56C(&qword_1EB73F6D8, MEMORY[0x1E4F675C8]);
    uint64_t result = sub_1AD73F0A0();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1AD381244()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1AD3814BC();
  uint64_t result = sub_1AD740620();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_1AD740CF0();
    sub_1AD740D00();
    uint64_t result = sub_1AD740D40();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1AD3814BC()
{
  if (!qword_1E9A2CFA0)
  {
    type metadata accessor for _HKDataTypeCode(255);
    sub_1AD21F56C(&qword_1E9A2CFA8, type metadata accessor for _HKDataTypeCode);
    unint64_t v0 = sub_1AD740650();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2CFA0);
    }
  }
}

void sub_1AD381550()
{
  if (!qword_1EB73F890)
  {
    sub_1AD73C850();
    sub_1AD21F56C(&qword_1EB73F6D8, MEMORY[0x1E4F675C8]);
    unint64_t v0 = sub_1AD740650();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB73F890);
    }
  }
}

void sub_1AD3815E4()
{
  if (!qword_1E9A2CFB8)
  {
    sub_1AD73A4B0();
    sub_1AD21F56C((unint64_t *)&unk_1EB73E798, MEMORY[0x1E4F276F0]);
    unint64_t v0 = sub_1AD740650();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2CFB8);
    }
  }
}

void sub_1AD381678()
{
  if (!qword_1E9A2CFC0)
  {
    sub_1AD73ACC0();
    sub_1AD21F56C((unint64_t *)&unk_1E9A2F270, MEMORY[0x1E4F670F8]);
    unint64_t v0 = sub_1AD740650();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2CFC0);
    }
  }
}

void sub_1AD38170C()
{
  if (!qword_1E9A2CFC8)
  {
    sub_1AD73AA80();
    sub_1AD21F56C(&qword_1EB73E7F0, MEMORY[0x1E4F67030]);
    unint64_t v0 = sub_1AD740650();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2CFC8);
    }
  }
}

uint64_t sub_1AD3817A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

UIInterfaceOrientationMask __swiftcall UINavigationController.overrideMask()()
{
  id v1 = objc_msgSend(v0, sel_visibleViewController);
  if (!v1) {
    return 2;
  }
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (v3) {
    UIInterfaceOrientationMask v4 = (UIInterfaceOrientationMask)objc_msgSend(v3, sel_overrideMask);
  }
  else {
    UIInterfaceOrientationMask v4 = 2;
  }

  return v4;
}

id OnboardingTableViewController.init(title:detailText:dataSource:icon:tableViewStyle:allowAnimations:useSystemMargins:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, char a9, char a10)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1AD383778(a1, a2, a3, a4, a5, a7, a8, a9, a10, v10, ObjectType, a6);
}

void sub_1AD38192C()
{
  if (v0[OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_useSystemMargins] != 1) {
    return;
  }
  id v1 = objc_msgSend(v0, sel_navigationController);
  if (!v1) {
    return;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_view);

  if (!v3)
  {
    __break(1u);
    goto LABEL_21;
  }
  objc_msgSend(v3, sel_directionalLayoutMargins);
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  id v12 = objc_msgSend(v0, sel_tableView);
  if (!v12)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v13 = v12;
  objc_msgSend(v12, sel_directionalLayoutMargins);
  double v15 = v14;
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;

  if (v15 != v5 || v17 != v7 || v19 != v9 || v21 != v11)
  {
    id v25 = objc_msgSend(v0, sel_tableView);
    if (v25)
    {
      id v26 = v25;
      objc_msgSend(v25, sel_setDirectionalLayoutMargins_, v5, v7, v9, v11);

      return;
    }
LABEL_22:
    __break(1u);
  }
}

id OnboardingTableViewController.__allocating_init(title:detailText:dataSource:icon:tableViewStyle:allowAnimations:useSystemMargins:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, char a9, char a10)
{
  double v18 = objc_allocWithZone(v10);
  uint64_t ObjectType = swift_getObjectType();
  return sub_1AD383778(a1, a2, a3, a4, a5, a7, a8, a9, a10, v18, ObjectType, a6);
}

void sub_1AD381B6C()
{
  id v1 = v0;
  v38.receiver = v0;
  v38.super_class = (Class)type metadata accessor for OnboardingTableViewController();
  objc_msgSendSuper2(&v38, sel_viewDidLoad);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_tableViewStyle], 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v1, sel_setTableView_, v2);

  id v3 = objc_msgSend(v1, sel_tableView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_14;
  }
  double v4 = v3;
  id v5 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v4, sel_setBackgroundColor_, v5);

  id v6 = objc_msgSend(v1, sel_tableView);
  if (!v6)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  double v7 = v6;
  objc_msgSend(v6, sel_setDelegate_, v1);

  id v8 = objc_msgSend(v1, sel_tableView);
  if (!v8)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  double v9 = v8;
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v10 = objc_msgSend(v1, sel_tableView);
  if (!v10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  double v11 = v10;
  uint64_t v12 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_dataSource];
  uint64_t v13 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_dataSource + 8];
  char v14 = v1[OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_allowAnimations];
  type metadata accessor for DiffableTableViewAdaptor();
  swift_allocObject();
  swift_unknownObjectRetain();
  double v15 = DiffableTableViewAdaptor.init(tableView:dataSource:allowAnimations:)(v11, v12, v13, v14);
  uint64_t v16 = OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_dataSourceAdaptor;
  *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_dataSourceAdaptor] = v15;
  swift_release();
  uint64_t v17 = *(void *)&v1[v16];
  if (!v17)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v19 = *(void *)(v17 + 48);
  *(void *)(v17 + 48) = sub_1AD383920;
  *(void *)(v17 + 56) = v18;
  sub_1AD1E4514(v19);
  uint64_t v33 = v12;
  uint64_t v34 = v13;
  sub_1AD20EE0C(0, (unint64_t *)&qword_1EB73D5A0);
  sub_1AD20EE0C(0, &qword_1E9A2D058);
  swift_unknownObjectRetain();
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v32 = 0;
    memset(v31, 0, sizeof(v31));
    sub_1AD206D74((uint64_t)v31, &qword_1E9A2D060, &qword_1E9A2D058);
LABEL_10:
    id v24 = objc_msgSend(v1, sel_tableView);
    if (v24)
    {
      id v25 = v24;
      sub_1AD2147D4(0, &qword_1E9A2D068);
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      unint64_t v27 = (void *)sub_1AD73F180();
      objc_msgSend(v25, sel_registerClass_forHeaderFooterViewReuseIdentifier_, ObjCClassFromMetadata, v27);

      id v28 = objc_msgSend(v1, sel_tableView);
      if (v28)
      {
        char v29 = v28;
        unint64_t v30 = (void *)sub_1AD73F180();
        objc_msgSend(v29, sel_registerClass_forHeaderFooterViewReuseIdentifier_, ObjCClassFromMetadata, v30);

        return;
      }
      goto LABEL_19;
    }
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_1AD20FE90(v31, (uint64_t)v35);
  uint64_t v20 = v36;
  uint64_t v21 = v37;
  __swift_project_boxed_opaque_existential_1(v35, v36);
  id v22 = objc_msgSend(v1, sel_tableView);
  if (v22)
  {
    unint64_t v23 = v22;
    (*(void (**)(id, uint64_t, uint64_t))(v21 + 8))(v22, v20, v21);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    goto LABEL_10;
  }
LABEL_20:
  __break(1u);
}

void sub_1AD381F88(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  id v2 = (void *)MEMORY[0x1B3E68580](v1);
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(v2, sel_view);

    if (!v4)
    {
      __break(1u);
      goto LABEL_9;
    }
    objc_msgSend(v4, sel_setNeedsLayout);
  }
  swift_beginAccess();
  id v5 = (void *)MEMORY[0x1B3E68580](v1);
  if (!v5) {
    return;
  }
  id v6 = v5;
  id v7 = objc_msgSend(v5, sel_view);

  if (!v7)
  {
LABEL_9:
    __break(1u);
    return;
  }
  objc_msgSend(v7, sel_layoutIfNeeded);
}

void sub_1AD3820B4()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(v2, sel_window);

    if (v4)
    {
      uint64_t v5 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_dataSourceAdaptor];
      if (v5)
      {
        if ((*(unsigned char *)(v5 + 41) & 1) == 0)
        {
          swift_retain();
          sub_1AD6091E8();
          swift_release();
        }
      }
    }
    v6.receiver = v1;
    v6.super_class = (Class)type metadata accessor for OnboardingTableViewController();
    objc_msgSendSuper2(&v6, sel_viewDidLayoutSubviews);
    sub_1AD38192C();
  }
  else
  {
    __break(1u);
  }
}

void sub_1AD3821C0(char a1)
{
  v29.receiver = v1;
  v29.super_class = (Class)type metadata accessor for OnboardingTableViewController();
  objc_msgSendSuper2(&v29, sel_viewWillAppear_, a1 & 1);
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_useSystemMargins) != 1) {
    return;
  }
  id v3 = objc_msgSend(v1, sel_navigationController);
  if (!v3) {
    return;
  }
  id v4 = v3;
  id v5 = objc_msgSend(v3, sel_view);

  if (!v5)
  {
    __break(1u);
    goto LABEL_19;
  }
  objc_msgSend(v5, sel_directionalLayoutMargins);
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;

  id v14 = objc_msgSend(v1, sel_tableView);
  if (!v14)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  double v15 = v14;
  objc_msgSend(v14, sel_directionalLayoutMargins);
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;

  if (v17 != v7 || v19 != v9 || v21 != v11 || v23 != v13)
  {
    id v27 = objc_msgSend(v1, sel_tableView);
    if (v27)
    {
      id v28 = v27;
      objc_msgSend(v27, sel_setDirectionalLayoutMargins_, v7, v9, v11, v13);

      return;
    }
LABEL_20:
    __break(1u);
  }
}

id OnboardingTableViewController.__allocating_init(title:detailText:symbolName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  double v9 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    double v10 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    double v11 = 0;
    goto LABEL_6;
  }
  double v10 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  double v11 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
LABEL_6:
  id v12 = objc_msgSend(objc_allocWithZone(v6), sel_initWithTitle_detailText_symbolName_, v9, v10, v11);

  return v12;
}

void OnboardingTableViewController.init(title:detailText:symbolName:)()
{
}

id OnboardingTableViewController.__allocating_init(title:detailText:icon:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  double v6 = v5;
  double v9 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  if (a4)
  {
    double v10 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
  }
  else
  {
    double v10 = 0;
  }
  id v11 = objc_msgSend(objc_allocWithZone(v6), sel_initWithTitle_detailText_icon_, v9, v10, a5);

  return v11;
}

void OnboardingTableViewController.init(title:detailText:icon:)()
{
}

id OnboardingTableViewController.__allocating_init(title:detailText:symbolName:adoptTableViewScrollView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  double v8 = v7;
  id v12 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    double v13 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    id v14 = 0;
    goto LABEL_6;
  }
  double v13 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  id v14 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
LABEL_6:
  id v15 = objc_msgSend(objc_allocWithZone(v8), sel_initWithTitle_detailText_symbolName_adoptTableViewScrollView_, v12, v13, v14, a7 & 1);

  return v15;
}

void OnboardingTableViewController.init(title:detailText:symbolName:adoptTableViewScrollView:)()
{
}

id OnboardingTableViewController.__allocating_init(title:detailText:icon:adoptTableViewScrollView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  double v7 = v6;
  id v11 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  if (a4)
  {
    id v12 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v12 = 0;
  }
  id v13 = objc_msgSend(objc_allocWithZone(v7), sel_initWithTitle_detailText_icon_adoptTableViewScrollView_, v11, v12, a5, a6 & 1);

  return v13;
}

void OnboardingTableViewController.init(title:detailText:icon:adoptTableViewScrollView:)()
{
}

id OnboardingTableViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OnboardingTableViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void __swiftcall OnboardingTableViewController.tableView(_:viewForFooterInSection:)(UIView_optional *__return_ptr retstr, UITableView *_, Swift::Int viewForFooterInSection)
{
}

void __swiftcall OnboardingTableViewController.tableView(_:viewForHeaderInSection:)(UIView_optional *__return_ptr retstr, UITableView *_, Swift::Int viewForHeaderInSection)
{
}

id sub_1AD3829D8(void *a1, uint64_t a2, int a3)
{
  uint64_t v7 = sub_1AD73A860();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  double v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1B3E60B40](0, a2);
  uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_dataSource);
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_dataSource + 8);
  *(void *)&long long v36 = v12;
  *((void *)&v36 + sub_1AD3829D8(_, viewForFooterInSection, 1) = v11;
  sub_1AD20EE0C(0, (unint64_t *)&qword_1EB73D5A0);
  sub_1AD20EE0C(0, &qword_1E9A2D078);
  swift_unknownObjectRetain();
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v40 = 0;
    long long v38 = 0u;
    long long v39 = 0u;
    sub_1AD206D74((uint64_t)&v38, &qword_1E9A2D080, &qword_1E9A2D078);
    goto LABEL_9;
  }
  uint64_t v33 = v8;
  uint64_t v34 = v7;
  id v13 = a1;
  sub_1AD20FE90(&v38, (uint64_t)v41);
  uint64_t v15 = v42;
  uint64_t v14 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  int v32 = a3;
  char v35 = a3;
  (*(void (**)(long long *__return_ptr, char *, char *, uint64_t, uint64_t))(v14 + 8))(&v36, &v35, v10, v15, v14);
  if (!v37)
  {
    sub_1AD206D74((uint64_t)&v36, &qword_1E9A2B808, &qword_1EB7325F0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    a1 = v13;
LABEL_8:
    uint64_t v7 = v34;
    LOBYTE(a3) = v32;
    uint64_t v8 = v33;
LABEL_9:
    *(void *)&long long v36 = v12;
    *((void *)&v36 + sub_1AD3829D8(_, viewForFooterInSection, 1) = v11;
    sub_1AD20EE0C(0, &qword_1E9A2D088);
    swift_unknownObjectRetain();
    if (swift_dynamicCast())
    {
      sub_1AD20FE90(&v38, (uint64_t)v41);
      uint64_t v18 = v42;
      uint64_t v19 = v43;
      __swift_project_boxed_opaque_existential_1(v41, v42);
      LOBYTE(v38) = a3;
      id v20 = objc_msgSend(a1, sel_layoutMarginsGuide);
      objc_msgSend(v20, sel_layoutFrame);
      CGFloat v22 = v21;
      CGFloat v24 = v23;
      CGFloat v26 = v25;
      CGFloat v28 = v27;

      v44.origin.CGFloat x = v22;
      v44.origin.CGFloat y = v24;
      v44.size.width = v26;
      v44.size.height = v28;
      CGFloat Width = CGRectGetWidth(v44);
      id v17 = (id)(*(uint64_t (**)(long long *, char *, uint64_t, uint64_t, CGFloat))(v19 + 8))(&v38, v10, v18, v19, Width);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      if (v17) {
        return v17;
      }
    }
    else
    {
      uint64_t v40 = 0;
      long long v38 = 0u;
      long long v39 = 0u;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_1AD206D74((uint64_t)&v38, (unint64_t *)&unk_1E9A2D090, &qword_1E9A2D088);
    }
    return 0;
  }
  sub_1AD20FE90(&v36, (uint64_t)&v38);
  double v16 = (void *)sub_1AD73F180();
  a1 = v13;
  id v17 = objc_msgSend(v13, sel_dequeueReusableHeaderFooterViewWithIdentifier_, v16);

  if (!v17)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    goto LABEL_8;
  }
  sub_1AD1FFE38((uint64_t)&v38, (uint64_t)&v36);
  MEMORY[0x1B3E65B50](&v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return v17;
}

double OnboardingTableViewController.tableView(_:heightForHeaderInSection:)(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1AD73A860();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1B3E60B40](0, a2);
  long long v13 = *(_OWORD *)(v2 + OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_dataSource);
  *(_OWORD *)double v16 = v13;
  sub_1AD20EE0C(0, (unint64_t *)&qword_1EB73D5A0);
  sub_1AD20EE0C(0, &qword_1EB738930);
  swift_unknownObjectRetain();
  if (swift_dynamicCast())
  {
    sub_1AD20FE90(v14, (uint64_t)v17);
    uint64_t v9 = v18;
    uint64_t v10 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    (*(void (**)(long long *__return_ptr, unint64_t, unint64_t, char *, uint64_t, uint64_t))(v10 + 8))(v14, 0xD000000000000013, 0x80000001AD771460, v8, v9, v10);
    sub_1AD20EE0C(0, (unint64_t *)&qword_1EB73E870);
    if (swift_dynamicCast())
    {
      double v11 = v16[0];
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      return v11;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_1AD206D74((uint64_t)v14, (unint64_t *)&qword_1E9A2D0A0, &qword_1EB738930);
  }
  if (objc_msgSend(a1, sel_style)) {
    double v11 = *MEMORY[0x1E4FB2F28];
  }
  else {
    double v11 = 0.0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

double OnboardingTableViewController.tableView(_:heightForFooterInSection:)(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1AD73A860();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1B3E60B40](0, a2);
  long long v13 = *(_OWORD *)(v2 + OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_dataSource);
  *(_OWORD *)double v16 = v13;
  sub_1AD20EE0C(0, (unint64_t *)&qword_1EB73D5A0);
  sub_1AD20EE0C(0, &qword_1EB738930);
  swift_unknownObjectRetain();
  if (swift_dynamicCast())
  {
    sub_1AD20FE90(v14, (uint64_t)v17);
    uint64_t v9 = v18;
    uint64_t v10 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    (*(void (**)(long long *__return_ptr, unint64_t, unint64_t, char *, uint64_t, uint64_t))(v10 + 8))(v14, 0xD000000000000013, 0x80000001AD771490, v8, v9, v10);
    sub_1AD20EE0C(0, (unint64_t *)&qword_1EB73E870);
    if (swift_dynamicCast())
    {
      double v11 = v16[0];
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      return v11;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_1AD206D74((uint64_t)v14, (unint64_t *)&qword_1E9A2D0A0, &qword_1EB738930);
  }
  if (objc_msgSend(a1, sel_style)) {
    double v11 = *MEMORY[0x1E4FB2F28];
  }
  else {
    double v11 = 0.0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

void OnboardingTableViewController.tableView(_:didSelectRowAt:)(void *a1, uint64_t a2)
{
  id v4 = (void *)sub_1AD73A7C0();
  id v5 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v4);

  if (v5
    && (sub_1AD2147D4(0, (unint64_t *)&unk_1E9A2D0C0),
        sub_1AD20EE0C(0, &qword_1E9A2D0B8),
        (swift_dynamicCast() & 1) != 0))
  {
    if (*((void *)&v10 + 1)) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_1AD206D74((uint64_t)&v9, &qword_1E9A2D0B0, &qword_1E9A2D0B8);
  sub_1AD20EE0C(0, (unint64_t *)&qword_1EB73D5A0);
  sub_1AD20EE0C(0, &qword_1E9A2D0B8);
  swift_unknownObjectRetain();
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
    sub_1AD206D74((uint64_t)&v9, &qword_1E9A2D0B0, &qword_1E9A2D0B8);
    goto LABEL_9;
  }
LABEL_7:
  sub_1AD20FE90(&v9, (uint64_t)v12);
  uint64_t v6 = v13;
  uint64_t v7 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(a2, v6, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
LABEL_9:
  uint64_t v8 = (void *)sub_1AD73A7C0();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v8, 1);
}

id sub_1AD383778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, char a8, char a9, unsigned char *a10, uint64_t a11, uint64_t a12)
{
  *(void *)&a10[OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_dataSourceAdaptor] = 0;
  uint64_t v14 = &a10[OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_dataSource];
  void *v14 = a5;
  v14[1] = a12;
  *(void *)&a10[OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_tableViewStyle] = a7;
  a10[OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_useSystemMargins] = a9;
  a10[OBJC_IVAR____TtC18HealthExperienceUI29OnboardingTableViewController_allowAnimations] = a8;
  swift_unknownObjectRetain();
  uint64_t v15 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  if (a4)
  {
    double v16 = (void *)sub_1AD73F180();
    swift_bridgeObjectRelease();
  }
  else
  {
    double v16 = 0;
  }
  v20.receiver = a10;
  v20.super_class = (Class)type metadata accessor for OnboardingTableViewController();
  id v17 = objc_msgSendSuper2(&v20, sel_initWithTitle_detailText_icon_adoptTableViewScrollView_, v15, v16, a6, 1);

  id v18 = v17;
  objc_msgSend(v18, sel_setModalInPresentation_, 1);

  swift_unknownObjectRelease();
  return v18;
}

uint64_t type metadata accessor for OnboardingTableViewController()
{
  return self;
}

uint64_t sub_1AD3838E8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1AD383920()
{
  sub_1AD381F88(v0);
}

uint64_t dispatch thunk of OnboardingTableViewControllerCellSelectionHandling.indexPathSelected(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for OnboardingTableViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OnboardingTableViewController);
}

uint64_t dispatch thunk of OnboardingTableViewController.__allocating_init(title:detailText:dataSource:icon:tableViewStyle:allowAnimations:useSystemMargins:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t SummarySharingSelectedDataTypesContext.__allocating_init(selectedItems:selectionFlow:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  SummarySharingSelectedDataTypesContext.init(selectedItems:selectionFlow:)(a1, a2);
  return v4;
}

uint64_t sub_1AD3839C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD383A28()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD383A60(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD383AA8@<X0>(size_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  size_t v3 = sub_1AD2A5D44(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

size_t sub_1AD383B10()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  size_t v1 = sub_1AD2A5D44(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1AD383B68(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD386B64(0, &qword_1E9A2C3B0, type metadata accessor for SummarySharingSelectionFlow, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  long long v9 = (char *)&v27 - v8;
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1AD399718(v10);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v1 + 24) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v27 = v1;
    CGFloat v28 = v9;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v14 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1AD2A9C3C(v13, (uint64_t)v6);
      uint64_t v17 = *((void *)v6 + 7);
      uint64_t v18 = *((void *)v6 + 8);
      swift_bridgeObjectRetain();
      sub_1AD386418((uint64_t)v6, type metadata accessor for SummarySharingSelectableDataTypeItem);
      if (v18)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v15 = sub_1AD51BA2C(0, v15[2] + 1, 1, v15);
        }
        unint64_t v20 = v15[2];
        unint64_t v19 = v15[3];
        if (v20 >= v19 >> 1) {
          uint64_t v15 = sub_1AD51BA2C((void *)(v19 > 1), v20 + 1, 1, v15);
        }
        objc_super v15[2] = v20 + 1;
        double v16 = &v15[2 * v20];
        v16[4] = v17;
        v16[5] = v18;
      }
      v13 += v14;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease_n();
    uint64_t v1 = v27;
    long long v9 = v28;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v21 = sub_1AD1F41F8((uint64_t)v15);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v1 + 32) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = v1 + OBJC_IVAR____TtC18HealthExperienceUI38SummarySharingSelectedDataTypesContext_selectionFlow;
  swift_beginAccess();
  sub_1AD3862BC(v22, (uint64_t)v9, &qword_1E9A2C3B0, type metadata accessor for SummarySharingSelectionFlow);
  uint64_t v23 = type metadata accessor for SummarySharingSelectionFlow(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v9, 1, v23) == 1)
  {
    sub_1AD38633C((uint64_t)v9, &qword_1E9A2C3B0, type metadata accessor for SummarySharingSelectionFlow);
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1AD386418((uint64_t)v9, type metadata accessor for SummarySharingSelectionFlow);
    if (EnumCaseMultiPayload == 1)
    {
      swift_retain();
      uint64_t v25 = swift_bridgeObjectRetain();
      sub_1AD386478(v25);
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  sub_1AD3863AC();
  sub_1AD386630(&qword_1E9A2D190);
  swift_retain();
  sub_1AD73DB90();
  return swift_release();
}

void (*sub_1AD383F70(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  size_t v5 = sub_1AD2A5D44(v4);
  swift_bridgeObjectRelease();
  v3[3] = v5;
  return sub_1AD383FFC;
}

void sub_1AD383FFC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    sub_1AD383B68(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AD383B68(v3);
  }
  free(v2);
}

uint64_t sub_1AD384060(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v29 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v24 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v24) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
  uint64_t v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v29 = v1;
  swift_beginAccess();
  uint64_t v15 = *(void *)(v4 + 72);
  swift_bridgeObjectRetain();
  uint64_t v16 = v14;
  uint64_t v17 = v13;
  do
  {
    sub_1AD2A9C3C(v16, (uint64_t)v10);
    sub_1AD379A5C((uint64_t)v12, (uint64_t)v10);
    sub_1AD386418((uint64_t)v12, type metadata accessor for SummarySharingSelectableDataTypeItem);
    v16 += v15;
    --v17;
  }
  while (v17);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    sub_1AD2A9C3C(v14, (uint64_t)v7);
    uint64_t v21 = *((void *)v7 + 7);
    uint64_t v20 = *((void *)v7 + 8);
    swift_bridgeObjectRetain();
    sub_1AD386418((uint64_t)v7, type metadata accessor for SummarySharingSelectableDataTypeItem);
    if (v20)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v18 = sub_1AD51BA2C(0, v18[2] + 1, 1, v18);
      }
      unint64_t v23 = v18[2];
      unint64_t v22 = v18[3];
      if (v23 >= v22 >> 1) {
        uint64_t v18 = sub_1AD51BA2C((void *)(v22 > 1), v23 + 1, 1, v18);
      }
      void v18[2] = v23 + 1;
      unint64_t v19 = &v18[2 * v23];
      v19[4] = v21;
      uint64_t v19[5] = v20;
    }
    v14 += v15;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  uint64_t v24 = v18[2];
  if (v24)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v25 = v18 + 5;
    do
    {
      uint64_t v26 = *(v25 - 1);
      uint64_t v27 = *v25;
      swift_beginAccess();
      swift_bridgeObjectRetain_n();
      sub_1AD1C18AC(&v30, v26, v27);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1AD1C18AC(&v30, v26, v27);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 += 2;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  sub_1AD3863AC();
  sub_1AD386630(&qword_1E9A2D190);
  swift_retain();
  sub_1AD73DB90();
  return swift_release();
}

uint64_t sub_1AD3843F0(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1AD386B64(0, &qword_1E9A2B280, type metadata accessor for SummarySharingSelectableDataTypeItem, MEMORY[0x1E4FBB718]);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v36 = (uint64_t)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v34 - v7;
  uint64_t v39 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v9 = *(void *)(v39 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v39);
  MEMORY[0x1F4188790](v10);
  uint64_t v35 = (uint64_t)v34 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
    unint64_t v22 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v29 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v29) {
      goto LABEL_21;
    }
    goto LABEL_18;
  }
  v34[0] = v11;
  v34[1] = a1;
  uint64_t v14 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  void v34[2] = v2;
  uint64_t v15 = (uint64_t *)(v2 + 24);
  swift_bridgeObjectRetain();
  uint64_t v16 = swift_beginAccess();
  uint64_t v40 = *(void *)(v9 + 72);
  uint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  long long v38 = (uint64_t *)(v2 + 24);
  uint64_t v17 = v14;
  uint64_t v18 = v13;
  do
  {
    uint64_t v19 = *v15;
    MEMORY[0x1F4188790](v16);
    v34[-2] = v17;
    swift_bridgeObjectRetain();
    sub_1AD2F3D34((uint64_t (*)(char *))sub_1AD386B44, v19, (uint64_t)v8);
    swift_bridgeObjectRelease();
    if ((*v37)(v8, 1, v39) == 1)
    {
      uint64_t v16 = sub_1AD38633C((uint64_t)v8, &qword_1E9A2B280, type metadata accessor for SummarySharingSelectableDataTypeItem);
    }
    else
    {
      uint64_t v20 = v35;
      sub_1AD2925E8((uint64_t)v8, v35);
      swift_beginAccess();
      uint64_t v21 = v36;
      sub_1AD2A6C7C(v20, v36);
      sub_1AD38633C(v21, &qword_1E9A2B280, type metadata accessor for SummarySharingSelectableDataTypeItem);
      swift_endAccess();
      uint64_t v16 = sub_1AD386418(v20, type metadata accessor for SummarySharingSelectableDataTypeItem);
    }
    v17 += v40;
    --v18;
    uint64_t v15 = v38;
  }
  while (v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unint64_t v22 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v23 = v34[0];
  do
  {
    sub_1AD2A9C3C(v14, v23);
    uint64_t v26 = *(void *)(v23 + 56);
    uint64_t v25 = *(void *)(v23 + 64);
    swift_bridgeObjectRetain();
    sub_1AD386418(v23, type metadata accessor for SummarySharingSelectableDataTypeItem);
    if (v25)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v22 = sub_1AD51BA2C(0, v22[2] + 1, 1, v22);
      }
      unint64_t v28 = v22[2];
      unint64_t v27 = v22[3];
      if (v28 >= v27 >> 1) {
        unint64_t v22 = sub_1AD51BA2C((void *)(v27 > 1), v28 + 1, 1, v22);
      }
      v22[2] = v28 + 1;
      uint64_t v24 = &v22[2 * v28];
      v24[4] = v26;
      v24[5] = v25;
    }
    v14 += v40;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  uint64_t v29 = v22[2];
  if (v29)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v30 = v22 + 5;
    do
    {
      uint64_t v31 = *(v30 - 1);
      uint64_t v32 = *v30;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1AD2A67C8(v31, v32);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 += 2;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
  }
LABEL_21:
  swift_bridgeObjectRelease();
  sub_1AD3863AC();
  sub_1AD386630(&qword_1E9A2D190);
  swift_retain();
  sub_1AD73DB90();
  return swift_release();
}

uint64_t sub_1AD3848D8(uint64_t a1, uint64_t a2)
{
  sub_1AD386B64(0, &qword_1E9A2B2B8, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent, MEMORY[0x1E4FBB718]);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v17 - v8;
  uint64_t v10 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  sub_1AD3862BC(a1 + *(int *)(v10 + 40), (uint64_t)v9, &qword_1E9A2B2B8, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
  uint64_t v11 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent(0);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  if (v12(v9, 1, v11) == 1)
  {
    sub_1AD38633C((uint64_t)v9, &qword_1E9A2B2B8, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v13 = *(void *)&v9[*(int *)(v11 + 44)];
    swift_bridgeObjectRetain();
    sub_1AD386418((uint64_t)v9, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
  }
  sub_1AD3862BC(a2 + *(int *)(v10 + 40), (uint64_t)v7, &qword_1E9A2B2B8, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
  if (v12(v7, 1, v11) == 1)
  {
    sub_1AD38633C((uint64_t)v7, &qword_1E9A2B2B8, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v14 = *(void *)&v7[*(int *)(v11 + 44)];
    swift_bridgeObjectRetain();
    sub_1AD386418((uint64_t)v7, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
  }
  char v15 = sub_1AD581594(v14, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15 & 1;
}

uint64_t sub_1AD384B58()
{
  return sub_1AD73DC70();
}

uint64_t sub_1AD384BC0(uint64_t a1, void *a2)
{
  sub_1AD386B64(0, &qword_1E9A2C3B0, type metadata accessor for SummarySharingSelectionFlow, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - v5;
  sub_1AD3862BC(a1, (uint64_t)&v9 - v5, &qword_1E9A2C3B0, type metadata accessor for SummarySharingSelectionFlow);
  uint64_t v7 = *a2 + OBJC_IVAR____TtC18HealthExperienceUI38SummarySharingSelectedDataTypesContext_selectionFlow;
  swift_beginAccess();
  sub_1AD386674((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t sub_1AD384CC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI38SummarySharingSelectedDataTypesContext_selectionFlow;
  swift_beginAccess();
  return sub_1AD3862BC(v3, a1, &qword_1E9A2C3B0, type metadata accessor for SummarySharingSelectionFlow);
}

uint64_t sub_1AD384D30(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI38SummarySharingSelectedDataTypesContext_selectionFlow;
  swift_beginAccess();
  sub_1AD386674(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1AD384D8C())()
{
  return j__swift_endAccess;
}

void *SummarySharingSelectedDataTypesContext.init(selectedItems:selectionFlow:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[2] = MEMORY[0x1E4FBC868];
  v2[5] = MEMORY[0x1E4FBC870];
  sub_1AD3863AC();
  swift_allocObject();
  v2[6] = sub_1AD73DA60();
  uint64_t v10 = (uint64_t)v2 + OBJC_IVAR____TtC18HealthExperienceUI38SummarySharingSelectedDataTypesContext_selectionFlow;
  uint64_t v11 = type metadata accessor for SummarySharingSelectionFlow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_1AD399718(v12);
  swift_bridgeObjectRelease();
  v3[3] = v13;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v25 = v10;
    uint64_t v26 = a2;
    unint64_t v27 = v3;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v16 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1AD2A9C3C(v15, (uint64_t)v9);
      uint64_t v19 = *((void *)v9 + 7);
      uint64_t v20 = *((void *)v9 + 8);
      swift_bridgeObjectRetain();
      sub_1AD386418((uint64_t)v9, type metadata accessor for SummarySharingSelectableDataTypeItem);
      if (v20)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v17 = sub_1AD51BA2C(0, v17[2] + 1, 1, v17);
        }
        unint64_t v22 = v17[2];
        unint64_t v21 = v17[3];
        if (v22 >= v21 >> 1) {
          uint64_t v17 = sub_1AD51BA2C((void *)(v21 > 1), v22 + 1, 1, v17);
        }
        void v17[2] = v22 + 1;
        uint64_t v18 = &v17[2 * v22];
        v18[4] = v19;
        v18[5] = v20;
      }
      v15 += v16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease_n();
    a2 = v26;
    uint64_t v3 = v27;
    uint64_t v10 = v25;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = sub_1AD1F41F8((uint64_t)v17);
  swift_bridgeObjectRelease();
  v3[4] = v23;
  swift_beginAccess();
  sub_1AD386674(a2, v10);
  swift_endAccess();
  return v3;
}

uint64_t sub_1AD385098(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 49))
  {
    return sub_1AD3851FC(a1);
  }
  else
  {
    sub_1AD386B64(0, (unint64_t *)&qword_1E9A2B738, type metadata accessor for SummarySharingSelectableDataTypeItem, MEMORY[0x1E4FBBE00]);
    uint64_t v3 = *(void *)(type metadata accessor for SummarySharingSelectableDataTypeItem(0) - 8);
    unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1AD74C370;
    sub_1AD2A9C3C(a1, v5 + v4);
    sub_1AD385878(v5);
    swift_setDeallocating();
    swift_arrayDestroy();
    return swift_deallocClassInstance();
  }
}

uint64_t sub_1AD3851FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AD73CBA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73CAD0();
  sub_1AD2A9C3C(a1, (uint64_t)v5);
  uint64_t v10 = sub_1AD73CB80();
  os_log_type_t v11 = sub_1AD73F940();
  int v28 = v11;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    os_log_t v24 = v10;
    uint64_t v13 = v12;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v30 = v25;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v27 = v2;
    uint64_t v14 = sub_1AD740E30();
    uint64_t v29 = sub_1AD1F62D4(v14, v15, &v30);
    uint64_t v26 = v6;
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v23 = v7;
    uint64_t v17 = *((void *)v5 + 2);
    unint64_t v16 = *((void *)v5 + 3);
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1AD1F62D4(v17, v16, &v30);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    sub_1AD386418((uint64_t)v5, type metadata accessor for SummarySharingSelectableDataTypeItem);
    os_log_t v18 = v24;
    _os_log_impl(&dword_1AD1A4000, v24, (os_log_type_t)v28, "[%s] Adding data type with identifier '%s' to the selected data types array", (uint8_t *)v13, 0x16u);
    uint64_t v19 = v25;
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v19, -1, -1);
    MEMORY[0x1B3E68450](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v26);
  }
  else
  {
    sub_1AD386418((uint64_t)v5, type metadata accessor for SummarySharingSelectableDataTypeItem);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_1AD386B64(0, (unint64_t *)&qword_1E9A2B738, type metadata accessor for SummarySharingSelectableDataTypeItem, MEMORY[0x1E4FBBE00]);
  unint64_t v20 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1AD74C370;
  sub_1AD2A9C3C(a1, v21 + v20);
  sub_1AD384060(v21);
  swift_setDeallocating();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD385600(uint64_t a1)
{
  uint64_t v2 = sub_1AD73CBA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73CAD0();
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1AD73CB80();
  os_log_type_t v7 = sub_1AD73F940();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = v2;
    uint64_t v9 = v8;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v18 = v15;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = sub_1AD740E30();
    uint64_t v17 = sub_1AD1F62D4(v10, v11, &v18);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2048;
    uint64_t v12 = *(void *)(a1 + 16);
    swift_bridgeObjectRelease();
    uint64_t v17 = v12;
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v6, v7, "[%s] Adding array of %ld data types to selected items", (uint8_t *)v9, 0x16u);
    uint64_t v13 = v15;
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v13, -1, -1);
    MEMORY[0x1B3E68450](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v16);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_1AD384060(a1);
}

uint64_t sub_1AD385878(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  os_log_type_t v7 = (char *)&v27 - v6;
  uint64_t v8 = sub_1AD73CBA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73CAD0();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1AD73CB80();
  os_log_type_t v13 = sub_1AD73F940();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v33 = v28;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v30 = v9;
    uint64_t v15 = sub_1AD740E30();
    uint64_t v29 = v8;
    uint64_t v32 = sub_1AD1F62D4(v15, v16, &v33);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    uint64_t v17 = *(void *)(a1 + 16);
    swift_bridgeObjectRelease();
    uint64_t v32 = v17;
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v12, v13, "[%s] Removing array of %ld data types from selected items", (uint8_t *)v14, 0x16u);
    uint64_t v18 = v28;
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v18, -1, -1);
    MEMORY[0x1B3E68450](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v29);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  int64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (v19)
  {
    uint64_t v33 = MEMORY[0x1E4FBC860];
    sub_1AD2F56D0(0, v19, 0);
    unint64_t v21 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v22 = a1 + v21;
    uint64_t v23 = *(void *)(v31 + 72);
    uint64_t v20 = v33;
    do
    {
      sub_1AD2A9C3C(v22, (uint64_t)v5);
      sub_1AD2A9C3C((uint64_t)v5, (uint64_t)v7);
      v7[49] = 1;
      sub_1AD386418((uint64_t)v5, type metadata accessor for SummarySharingSelectableDataTypeItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AD2F56D0(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v33;
      }
      unint64_t v25 = *(void *)(v20 + 16);
      unint64_t v24 = *(void *)(v20 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1AD2F56D0(v24 > 1, v25 + 1, 1);
        uint64_t v20 = v33;
      }
      *(void *)(v20 + 16) = v25 + 1;
      sub_1AD2925E8((uint64_t)v7, v20 + v21 + v25 * v23);
      v22 += v23;
      --v19;
    }
    while (v19);
  }
  sub_1AD3843F0(v20);
  return swift_bridgeObjectRelease();
}

uint64_t SummarySharingSelectedDataTypesContext.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1AD38633C(v0 + OBJC_IVAR____TtC18HealthExperienceUI38SummarySharingSelectedDataTypesContext_selectionFlow, &qword_1E9A2C3B0, type metadata accessor for SummarySharingSelectionFlow);
  return v0;
}

uint64_t SummarySharingSelectedDataTypesContext.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1AD38633C(v0 + OBJC_IVAR____TtC18HealthExperienceUI38SummarySharingSelectedDataTypesContext_selectionFlow, &qword_1E9A2C3B0, type metadata accessor for SummarySharingSelectionFlow);
  return swift_deallocClassInstance();
}

id sub_1AD385DB0()
{
  uint64_t v1 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  uint64_t v34 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - v4;
  sub_1AD386B64(0, &qword_1E9A2B2B8, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent, MEMORY[0x1E4FBB718]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v33 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v35 = (uint64_t)&v33 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  os_log_type_t v13 = (char *)&v33 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v36 = v1;
  uint64_t v16 = v0 + *(int *)(v1 + 40);
  sub_1AD3862BC(v16, (uint64_t)&v33 - v14, &qword_1E9A2B2B8, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
  uint64_t v17 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent(0);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  if (v18(v15, 1, v17) == 1)
  {
    sub_1AD38633C((uint64_t)v15, &qword_1E9A2B2B8, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
    goto LABEL_5;
  }
  int64_t v19 = (void *)*((void *)v15 + 1);
  id v20 = v19;
  sub_1AD386418((uint64_t)v15, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
  if (!v19 || (id v21 = sub_1AD63DEC4(v20), v20, !v21))
  {
LABEL_5:
    sub_1AD3862BC(v16, (uint64_t)v13, &qword_1E9A2B2B8, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
    if (v18(v13, 1, v17) == 1)
    {
      sub_1AD38633C((uint64_t)v13, &qword_1E9A2B2B8, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
      uint64_t v22 = (uint64_t)v5;
      sub_1AD2A9C3C(v0, (uint64_t)v5);
    }
    else
    {
      id v21 = (id)*((void *)v13 + 6);
      id v23 = v21;
      sub_1AD386418((uint64_t)v13, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
      uint64_t v22 = (uint64_t)v5;
      sub_1AD2A9C3C(v0, (uint64_t)v5);
      if (v21)
      {
LABEL_18:
        sub_1AD386418(v22, type metadata accessor for SummarySharingSelectableDataTypeItem);
        return v21;
      }
    }
    uint64_t v24 = v35;
    uint64_t v25 = v36;
    sub_1AD3862BC(v22 + *(int *)(v36 + 40), v35, &qword_1E9A2B2B8, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
    if (v18((char *)v24, 1, v17) == 1)
    {
      sub_1AD38633C(v24, &qword_1E9A2B2B8, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
      id v26 = 0;
    }
    else
    {
      id v26 = *(id *)(v24 + 56);
      sub_1AD386418(v24, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
    }
    uint64_t v27 = (uint64_t)v34;
    id v21 = objc_msgSend(v26, sel_largeListIcon);

    sub_1AD2A9C3C(v22, v27);
    if (!v21)
    {
      uint64_t v28 = v27 + *(int *)(v25 + 40);
      uint64_t v29 = v33;
      sub_1AD3862BC(v28, v33, &qword_1E9A2B2B8, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
      if (v18((char *)v29, 1, v17) == 1)
      {
        sub_1AD38633C(v29, &qword_1E9A2B2B8, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
LABEL_16:
        id v21 = 0;
        goto LABEL_17;
      }
      uint64_t v30 = *(void **)(v29 + 56);
      id v31 = v30;
      sub_1AD386418(v29, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
      if (!v30) {
        goto LABEL_16;
      }
      id v21 = objc_msgSend(v31, sel_listIcon);
    }
LABEL_17:
    sub_1AD386418(v27, type metadata accessor for SummarySharingSelectableDataTypeItem);
    goto LABEL_18;
  }
  return v21;
}

uint64_t sub_1AD3862BC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1AD386B64(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1AD38633C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1AD386B64(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1AD3863AC()
{
  if (!qword_1E9A2C3C0)
  {
    unint64_t v0 = sub_1AD73DA70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2C3C0);
    }
  }
}

uint64_t sub_1AD386418(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AD386478(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v6) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v2 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v6) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v2 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v6) {
          return swift_release();
        }
        unint64_t v15 = *(void *)(v2 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v6) {
            return swift_release();
          }
          unint64_t v15 = *(void *)(v2 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    sub_1AD1C18AC(&v17, v12, v13);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v6) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v2 + 8 * v16);
  if (v15)
  {
    int64_t v8 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v8 >= v6) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v2 + 8 * v8);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1AD386630(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1AD3863AC();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD386674(uint64_t a1, uint64_t a2)
{
  sub_1AD386B64(0, &qword_1E9A2C3B0, type metadata accessor for SummarySharingSelectionFlow, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD386708@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD38675C()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_1AD383B68(v0);
}

uint64_t sub_1AD386788@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18HealthExperienceUI38SummarySharingSelectedDataTypesContext_selectionFlow;
  swift_beginAccess();
  return sub_1AD3862BC(v3, a2, &qword_1E9A2C3B0, type metadata accessor for SummarySharingSelectionFlow);
}

uint64_t sub_1AD386800()
{
  return type metadata accessor for SummarySharingSelectedDataTypesContext();
}

uint64_t type metadata accessor for SummarySharingSelectedDataTypesContext()
{
  uint64_t result = qword_1E9A2D198;
  if (!qword_1E9A2D198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1AD386854()
{
  sub_1AD386B64(319, &qword_1E9A2C3B0, type metadata accessor for SummarySharingSelectionFlow, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for SummarySharingSelectedDataTypesContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SummarySharingSelectedDataTypesContext);
}

uint64_t dispatch thunk of SummarySharingSelectedDataTypesContext.cachedPluginViewModels.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of SummarySharingSelectedDataTypesContext.cachedPluginViewModels.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of SummarySharingSelectedDataTypesContext.cachedPluginViewModels.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of SummarySharingSelectedDataTypesContext.selectedItems.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of SummarySharingSelectedDataTypesContext.selectedItems.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of SummarySharingSelectedDataTypesContext.selectedItems.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of SummarySharingSelectedDataTypesContext.selectedItemsDidUpdatePublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of SummarySharingSelectedDataTypesContext.selectionFlow.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of SummarySharingSelectedDataTypesContext.selectionFlow.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of SummarySharingSelectedDataTypesContext.selectionFlow.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of SummarySharingSelectedDataTypesContext.__allocating_init(selectedItems:selectionFlow:)()
{
  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t dispatch thunk of SummarySharingSelectedDataTypesContext.selectionStateDidUpdate(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of SummarySharingSelectedDataTypesContext.addDataTypes(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t sub_1AD386B44(uint64_t a1)
{
  return sub_1AD3848D8(a1, *(void *)(v1 + 16)) & 1;
}

void sub_1AD386B64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AD386BC8(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1AD386C78())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1AD386CD4()
{
  return swift_bridgeObjectRetain();
}

uint64_t (*sub_1AD386D20())()
{
  return j_j__swift_endAccess;
}

void *sub_1AD386D7C()
{
  uint64_t v1 = v0;
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int64_t v6 = (char *)v27 - v5;
  uint64_t v7 = v1 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  uint64_t v8 = sub_1AD73D260();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    unint64_t v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_sections);
    v27[1] = v1;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v27[0] = v8;
    uint64_t v11 = (uint64_t *)(v8 + 40);
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v13 = *v10;
      if (*(void *)(*v10 + 16))
      {
        uint64_t v14 = *(v11 - 1);
        uint64_t v15 = *v11;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        unint64_t v16 = sub_1AD20F694(v14, v15);
        if (v17)
        {
          uint64_t v18 = *(void *)(v13 + 56) + 48 * v16;
          uint64_t v20 = *(void *)v18;
          uint64_t v19 = *(void *)(v18 + 8);
          long long v28 = *(_OWORD *)(v18 + 16);
          uint64_t v21 = *(void *)(v18 + 32);
          uint64_t v22 = *(void *)(v18 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v12 = sub_1AD1FDAC8(0, v12[2] + 1, 1, v12);
          }
          unint64_t v24 = v12[2];
          unint64_t v23 = v12[3];
          if (v24 >= v23 >> 1) {
            uint64_t v12 = sub_1AD1FDAC8((void *)(v23 > 1), v24 + 1, 1, v12);
          }
          v12[2] = v24 + 1;
          uint64_t v25 = &v12[6 * v24];
          v25[4] = v20;
          v25[5] = v19;
          *((_OWORD *)v25 + 3) = v28;
          v25[8] = v21;
          v25[9] = v22;
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
      }
      v11 += 2;
      --v9;
    }
    while (v9);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1AD387068()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_animateChanges);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1AD3870B0(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_animateChanges);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*sub_1AD3870FC())()
{
  return j__swift_endAccess;
}

unint64_t sub_1AD387158(uint64_t a1, int a2)
{
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v86 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v83 - v6;
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  v83[0] = a1;
  int64_t v90 = v8;
  if (v8)
  {
    LODWORD(v99) = a2;
    v103[0] = MEMORY[0x1E4FBC860];
    sub_1AD20DD60(0, v8, 0);
    uint64_t v9 = v103[0];
    unint64_t v10 = (uint64_t *)(a1 + 72);
    do
    {
      uint64_t v12 = *(v10 - 1);
      uint64_t v11 = *v10;
      v103[0] = v9;
      unint64_t v14 = *(void *)(v9 + 16);
      unint64_t v13 = *(void *)(v9 + 24);
      swift_bridgeObjectRetain();
      if (v14 >= v13 >> 1)
      {
        sub_1AD20DD60(v13 > 1, v14 + 1, 1);
        uint64_t v9 = v103[0];
      }
      *(void *)(v9 + 16) = v14 + 1;
      uint64_t v15 = v9 + 16 * v14;
      *(void *)(v15 + 32) = v12;
      *(void *)(v15 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v11;
      v10 += 6;
      --v8;
    }
    while (v8);
    a1 = v83[0];
    int64_t v8 = v90;
    LOBYTE(a2) = v99;
  }
  uint64_t v16 = sub_1AD1F41F8(v9);
  swift_bridgeObjectRelease();
  uint64_t v17 = v87 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v83[1] = v17;
  uint64_t v19 = v17;
  uint64_t v20 = v86;
  v18(v7, v19, v86);
  uint64_t v21 = sub_1AD73D260();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v20);
  uint64_t v22 = sub_1AD1F41F8(v21);
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_1AD398028(v22, v16);
  swift_bridgeObjectRelease();
  if (!*(void *)(v23 + 16) || (a2 & 1) == 0 || !v8)
  {
    swift_release();
LABEL_69:
    sub_1AD1FC480(a1);
    swift_beginAccess();
    sub_1AD73D190();
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1AD73D240();
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1AD1FCB28();
    return sub_1AD1B4C88();
  }
  unint64_t v24 = (uint64_t *)(v87 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_sections);
  uint64_t v95 = (uint64_t *)(v87 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_currentItemsReuseIdentifiers);
  uint64_t v88 = a1 + 32;
  uint64_t v89 = v23 + 56;
  swift_bridgeObjectRetain();
  uint64_t v25 = 0;
  id v26 = (void *)MEMORY[0x1E4FBC860];
  CGRect v92 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v84 = v23;
  id v96 = v24;
  while (1)
  {
    if (!*(void *)(v23 + 16)) {
      goto LABEL_13;
    }
    uint64_t v94 = v26;
    uint64_t v27 = (void *)(v88 + 48 * v25);
    uint64_t v28 = v27[2];
    uint64_t v29 = v27[3];
    uint64_t v31 = v27[4];
    uint64_t v30 = v27[5];
    uint64_t v93 = v25;
    uint64_t v32 = v27[1];
    sub_1AD740CF0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_1AD73F2B0();
    uint64_t v33 = sub_1AD740D40();
    uint64_t v34 = -1 << *(unsigned char *)(v23 + 32);
    unint64_t v35 = v33 & ~v34;
    if ((*(void *)(v89 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35)) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_57:
    id v26 = v94;
    int64_t v8 = v90;
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v25 = v93;
LABEL_13:
    if (++v25 == v8)
    {
      swift_release();
      a1 = v83[0];
      swift_bridgeObjectRelease();
      goto LABEL_69;
    }
  }
  uint64_t v99 = v32;
  uint64_t v91 = v28;
  uint64_t v36 = *(void *)(v23 + 48);
  uint64_t v37 = (void *)(v36 + 16 * v35);
  BOOL v38 = *v37 == v31 && v37[1] == v30;
  uint64_t v39 = v29;
  uint64_t v98 = v31;
  if (!v38 && (sub_1AD740BC0() & 1) == 0)
  {
    uint64_t v80 = ~v34;
    while (1)
    {
      unint64_t v35 = (v35 + 1) & v80;
      if (((*(void *)(v89 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) == 0) {
        break;
      }
      long long v81 = (void *)(v36 + 16 * v35);
      BOOL v82 = *v81 == v98 && v81[1] == v30;
      if (v82 || (sub_1AD740BC0() & 1) != 0) {
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v84;
    goto LABEL_57;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void *)(v91 + 16);
  if (!v40)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v8 = v90;
    uint64_t v23 = v84;
    id v26 = v94;
    goto LABEL_12;
  }
  uint64_t v85 = v39;
  uint64_t v41 = v91 + 32;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v42 = v98;
  id v26 = v94;
  uint64_t v97 = v30;
  while (1)
  {
    sub_1AD1FFE38(v41, (uint64_t)v103);
    uint64_t v43 = *v24;
    if (!*(void *)(*v24 + 16)) {
      goto LABEL_24;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v44 = sub_1AD20F694(v42, v30);
    if ((v45 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_24:
      uint64_t v102 = 0;
      long long v101 = 0u;
      long long v100 = 0u;
      goto LABEL_25;
    }
    uint64_t v46 = *(void *)(v43 + 56) + 48 * v44;
    uint64_t v47 = *(void *)(v46 + 16);
    uint64_t v48 = *(void *)(v46 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(v103, v104);
    uint64_t v49 = sub_1AD73BBD0();
    if (!*(void *)(v48 + 16) || (unint64_t result = sub_1AD20F694(v49, v50), (v52 & 1) == 0))
    {
      uint64_t v102 = 0;
      long long v101 = 0u;
      long long v100 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    unint64_t v53 = *(void *)(*(void *)(v48 + 56) + 8 * result);
    if ((v53 & 0x8000000000000000) != 0) {
      break;
    }
    if (v53 >= *(void *)(v47 + 16)) {
      goto LABEL_72;
    }
    sub_1AD1FFE38(v47 + 40 * v53 + 32, (uint64_t)&v100);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_35:
    unint64_t v24 = v96;
    uint64_t v30 = v97;
    uint64_t v42 = v98;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v101 + 1))
    {
      sub_1AD20710C((uint64_t)&v100, (unint64_t *)&qword_1EB73E880, (unint64_t *)&qword_1EB73E870, MEMORY[0x1E4F66028], MEMORY[0x1E4FBB718]);
      __swift_project_boxed_opaque_existential_1(v103, v104);
      uint64_t v54 = sub_1AD73BBC0();
      uint64_t v56 = v55;
      __swift_project_boxed_opaque_existential_1(v103, v104);
      uint64_t v57 = sub_1AD73BBD0();
      uint64_t v59 = v58;
      uint64_t v60 = *v95;
      if (*(void *)(*v95 + 16))
      {
        uint64_t v61 = v57;
        swift_bridgeObjectRetain();
        unint64_t v62 = sub_1AD20F694(v61, v59);
        if (v63)
        {
          id v64 = (uint64_t *)(*(void *)(v60 + 56) + 16 * v62);
          uint64_t v66 = *v64;
          uint64_t v65 = v64[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v54 == v66 && v56 == v65)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_50;
          }
          char v74 = sub_1AD740BC0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v74)
          {
LABEL_50:
            __swift_project_boxed_opaque_existential_1(v103, v104);
            uint64_t v67 = sub_1AD73BBD0();
            uint64_t v69 = v75;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v30 = v97;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              CGRect v92 = sub_1AD51BA2C(0, v92[2] + 1, 1, v92);
            }
            unint64_t v78 = v92[2];
            unint64_t v77 = v92[3];
            if (v78 >= v77 >> 1) {
              CGRect v92 = sub_1AD51BA2C((void *)(v77 > 1), v78 + 1, 1, v92);
            }
            uint64_t v79 = v92;
            v92[2] = v78 + 1;
            double v73 = &v79[2 * v78];
LABEL_55:
            v73[4] = v67;
            void v73[5] = v69;
            uint64_t v42 = v98;
            goto LABEL_26;
          }
LABEL_44:
          __swift_project_boxed_opaque_existential_1(v103, v104);
          uint64_t v67 = sub_1AD73BBD0();
          uint64_t v69 = v68;
          char v70 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v30 = v97;
          if ((v70 & 1) == 0) {
            id v26 = sub_1AD51BA2C(0, v26[2] + 1, 1, v26);
          }
          unint64_t v72 = v26[2];
          unint64_t v71 = v26[3];
          if (v72 >= v71 >> 1) {
            id v26 = sub_1AD51BA2C((void *)(v71 > 1), v72 + 1, 1, v26);
          }
          void v26[2] = v72 + 1;
          double v73 = &v26[2 * v72];
          goto LABEL_55;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
LABEL_25:
    sub_1AD20710C((uint64_t)&v100, (unint64_t *)&qword_1EB73E880, (unint64_t *)&qword_1EB73E870, MEMORY[0x1E4F66028], MEMORY[0x1E4FBB718]);
LABEL_26:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
    v41 += 40;
    if (!--v40)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v8 = v90;
      uint64_t v23 = v84;
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_1AD387C94()
{
  return sub_1AD387CEC(MEMORY[0x1E4FB0FD8], MEMORY[0x1E4FB0FE8]);
}

uint64_t sub_1AD387CC0()
{
  return sub_1AD387CEC(MEMORY[0x1E4FB0FF0], MEMORY[0x1E4FB0FD0]);
}

uint64_t sub_1AD387CEC(uint64_t (*a1)(uint64_t), void (*a2)(uint64_t, uint64_t))
{
  uint64_t v5 = v2;
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v10 = &v14[-v9];
  uint64_t v11 = v5 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  uint64_t v12 = a1(v7);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess();
  a2(v12, v7);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return sub_1AD1B4C88();
}

uint64_t sub_1AD387E74(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  v25[1] = *v2;
  uint64_t v6 = sub_1AD73CBA0();
  uint64_t v26 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)v25 - v12;
  unint64_t v14 = (char *)v3 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v14, v10);
  v27[0] = a1;
  v27[1] = a2;
  sub_1AD73D1E0();
  char v16 = v15;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v16)
  {
    sub_1AD73CA80();
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_1AD73CB80();
    os_log_type_t v20 = sub_1AD73F920();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      v25[0] = swift_slowAlloc();
      v27[0] = v25[0];
      *(_DWORD *)uint64_t v21 = 136315650;
      uint64_t v22 = sub_1AD740E30();
      uint64_t v28 = sub_1AD1F62D4(v22, v23, v27);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      uint64_t v28 = sub_1AD1F62D4(0xD000000000000019, 0x80000001AD77AC60, v27);
      sub_1AD7403B0();
      *(_WORD *)(v21 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1AD1F62D4(a1, a2, v27);
      sub_1AD7403B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AD1A4000, v19, v20, "[%s] %s Failed to find section with id: %s.", (uint8_t *)v21, 0x20u);
      uint64_t v24 = v25[0];
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v24, -1, -1);
      MEMORY[0x1B3E68450](v21, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v8, v6);
  }
  else
  {
    sub_1AD1FDCF8(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1AD74C370;
    *(void *)(v17 + 32) = a1;
    *(void *)(v17 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = a2;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD73D200();
    swift_endAccess();
    swift_bridgeObjectRelease();
    return sub_1AD1B4C88();
  }
}

uint64_t sub_1AD3882C8(unint64_t a1)
{
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v18 = v1;
  uint64_t v8 = v1 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v19(v7, v8, v4);
  uint64_t v9 = sub_1AD73D260();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  uint64_t v11 = *(void *)(v9 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v11 > (uint64_t)a1)
  {
    sub_1AD1FDCF8(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1AD74C370;
    v19(v7, v8, v4);
    uint64_t v14 = sub_1AD73D260();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v10)(v7, v4);
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(v14 + 16) > a1)
    {
      uint64_t v15 = v14 + 16 * a1;
      uint64_t v16 = *(void *)(v15 + 32);
      uint64_t v17 = *(void *)(v15 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v13 + 32) = v16;
      *(void *)(v13 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v17;
      swift_beginAccess();
      sub_1AD73D200();
      swift_endAccess();
      swift_bridgeObjectRelease();
      return sub_1AD1B4C88();
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD388524(long long *a1, uint64_t a2, unint64_t a3)
{
  return sub_1AD388594(a1, a2, a3, MEMORY[0x1E4FB0FC8], 0xD00000000000001ELL, 0x80000001AD77ACA0, "[%s] %s Failed to insert a section with id: %s, because it doesn't exist.");
}

uint64_t sub_1AD38855C(long long *a1, uint64_t a2, unint64_t a3)
{
  return sub_1AD388594(a1, a2, a3, MEMORY[0x1E4FB0FC0], 0xD00000000000001DLL, 0x80000001AD77ACC0, "[%s] %s Failed to insert a section after section with id: %s, because it doesn't exist.");
}

uint64_t sub_1AD388594(long long *a1, uint64_t a2, unint64_t a3, void (*a4)(uint64_t, uint64_t *, uint64_t), uint64_t a5, unint64_t a6, const char *a7)
{
  uint64_t v76 = a7;
  unint64_t v75 = a6;
  uint64_t v74 = a5;
  uint64_t v73 = *v7;
  uint64_t v12 = sub_1AD73CBA0();
  uint64_t v78 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v73 - v18;
  long long v20 = a1[1];
  long long v84 = *a1;
  long long v85 = v20;
  long long v86 = a1[2];
  uint64_t v77 = (uint64_t)v7;
  uint64_t v21 = (char *)v7 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v21, v16);
  v82[0] = a2;
  v82[1] = a3;
  sub_1AD73D1E0();
  char v23 = v22;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if (v23)
  {
    sub_1AD73CA80();
    swift_bridgeObjectRetain_n();
    uint64_t v37 = sub_1AD73CB80();
    os_log_type_t v38 = sub_1AD73F920();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      v82[0] = v77;
      *(_DWORD *)uint64_t v39 = 136315650;
      uint64_t v40 = sub_1AD740E30();
      uint64_t v80 = sub_1AD1F62D4(v40, v41, v82);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      uint64_t v80 = sub_1AD1F62D4(v74, v75, v82);
      sub_1AD7403B0();
      *(_WORD *)(v39 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v80 = sub_1AD1F62D4(a2, a3, v82);
      sub_1AD7403B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AD1A4000, v37, v38, v76, (uint8_t *)v39, 0x20u);
      uint64_t v42 = v77;
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v42, -1, -1);
      MEMORY[0x1B3E68450](v39, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v14, v12);
  }
  sub_1AD1FDCF8(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1AD74C370;
  uint64_t v25 = *((void *)&v86 + 1);
  uint64_t v26 = (const char *)v86;
  *(void *)(v24 + 32) = v86;
  *(void *)(v24 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v25;
  uint64_t v80 = a2;
  unint64_t v81 = a3;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  a4(v24, &v80, v16);
  swift_endAccess();
  swift_bridgeObjectRelease();
  unint64_t v27 = v85;
  v87[0] = v85;
  int64_t v28 = *(void *)(v85 + 16);
  if (v28)
  {
    uint64_t v76 = v26;
    uint64_t v78 = v25;
    uint64_t v80 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1AD20DD60(0, v28, 0);
    unint64_t v75 = v27;
    uint64_t v29 = v27 + 32;
    uint64_t v30 = v80;
    do
    {
      sub_1AD1FFE38(v29, (uint64_t)v82);
      __swift_project_boxed_opaque_existential_1(v82, v83);
      uint64_t v31 = sub_1AD73BBD0();
      uint64_t v33 = v32;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AD20DD60(0, *(void *)(v30 + 16) + 1, 1);
        uint64_t v30 = v80;
      }
      unint64_t v35 = *(void *)(v30 + 16);
      unint64_t v34 = *(void *)(v30 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_1AD20DD60(v34 > 1, v35 + 1, 1);
        uint64_t v30 = v80;
      }
      *(void *)(v30 + 16) = v35 + 1;
      unint64_t v36 = v30 + 16 * v35;
      *(void *)(v36 + 32) = v31;
      *(void *)(v36 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v33;
      v29 += 40;
      --v28;
    }
    while (v28);
    sub_1AD2C964C((uint64_t)v87);
    uint64_t v25 = v78;
    uint64_t v26 = v76;
    unint64_t v27 = v75;
  }
  uint64_t v80 = (uint64_t)v26;
  unint64_t v81 = v25;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1AD73D140();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = v77;
  unint64_t v44 = (uint64_t *)(v77 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_sections);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1AD1AD7CC((uint64_t)&v84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v80 = *v44;
  *unint64_t v44 = 0x8000000000000000;
  sub_1AD1AB834(&v84, (uint64_t)v26, v25, isUniquelyReferenced_nonNull_native);
  *unint64_t v44 = v80;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v46 = *(void *)(v27 + 16);
  if (!v46) {
    return sub_1AD1B4C88();
  }
  uint64_t v47 = (void *)(v43 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_currentItemsReuseIdentifiers);
  uint64_t v48 = v27 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v78 = v46;
    sub_1AD1FFE38(v48, (uint64_t)v82);
    __swift_project_boxed_opaque_existential_1(v82, v83);
    uint64_t v50 = sub_1AD73BBD0();
    uint64_t v52 = v51;
    __swift_project_boxed_opaque_existential_1(v82, v83);
    uint64_t v53 = sub_1AD73BBC0();
    uint64_t v55 = v54;
    swift_beginAccess();
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v79 = (void *)*v47;
    uint64_t v57 = v79;
    *uint64_t v47 = 0x8000000000000000;
    unint64_t v59 = sub_1AD20F694(v50, v52);
    uint64_t v60 = v57[2];
    BOOL v61 = (v58 & 1) == 0;
    uint64_t v62 = v60 + v61;
    if (__OFADD__(v60, v61)) {
      break;
    }
    char v63 = v58;
    if (v57[3] >= v62)
    {
      if (v56)
      {
        uint64_t v66 = v79;
        if (v58) {
          goto LABEL_14;
        }
      }
      else
      {
        sub_1AD390298();
        uint64_t v66 = v79;
        if (v63) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      sub_1AD200CB8(v62, v56);
      unint64_t v64 = sub_1AD20F694(v50, v52);
      if ((v63 & 1) != (v65 & 1)) {
        goto LABEL_33;
      }
      unint64_t v59 = v64;
      uint64_t v66 = v79;
      if (v63)
      {
LABEL_14:
        uint64_t v49 = (uint64_t *)(v66[7] + 16 * v59);
        swift_bridgeObjectRelease();
        *uint64_t v49 = v53;
        v49[1] = v55;
        goto LABEL_15;
      }
    }
    v66[(v59 >> 6) + 8] |= 1 << v59;
    uint64_t v67 = (uint64_t *)(v66[6] + 16 * v59);
    *uint64_t v67 = v50;
    v67[1] = v52;
    uint64_t v68 = (uint64_t *)(v66[7] + 16 * v59);
    *uint64_t v68 = v53;
    v68[1] = v55;
    uint64_t v69 = v66[2];
    BOOL v70 = __OFADD__(v69, 1);
    uint64_t v71 = v69 + 1;
    if (v70) {
      goto LABEL_32;
    }
    v66[2] = v71;
    swift_bridgeObjectRetain();
LABEL_15:
    *uint64_t v47 = v66;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    v48 += 40;
    uint64_t v46 = v78 - 1;
    if (v78 == 1)
    {
      sub_1AD2C964C((uint64_t)v87);
      return sub_1AD1B4C88();
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  uint64_t result = sub_1AD740C30();
  __break(1u);
  return result;
}

uint64_t sub_1AD388E28(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v16 - v7 + 16;
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  long long v11 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v11;
  uint64_t v17 = v9;
  uint64_t v18 = v10;
  uint64_t v12 = v2 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v12, v5);
  uint64_t v13 = sub_1AD73D230();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_1AD1BECBC(v16, v13);
}

uint64_t sub_1AD388F84(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v51 = *v2;
  uint64_t v6 = sub_1AD73CBA0();
  uint64_t v52 = *(void **)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v48 - v12;
  uint64_t v14 = (char *)v3 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  unint64_t v15 = a2;
  sub_1AD73D1E0();
  LOBYTE(a2) = v16;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((a2 & 1) == 0)
  {
    sub_1AD1FDCF8(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1AD74C370;
    *(void *)(v17 + 32) = a1;
    *(void *)(v17 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v15;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD73D1D0();
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v52 = v3;
    uint64_t v18 = (void *)((char *)v3 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_sections);
    swift_beginAccess();
    sub_1AD395FF0(a1, v15, (uint64_t)&v55);
    uint64_t v19 = v55;
    uint64_t v20 = v56;
    uint64_t v21 = v57;
    swift_endAccess();
    sub_1AD3998A8(v19, v20, v21);
    uint64_t v22 = *v18;
    if (*(void *)(v22 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_1AD20F694(a1, v15);
      if (v24)
      {
        uint64_t v25 = (uint64_t *)(*(void *)(v22 + 56) + 48 * v23);
        uint64_t v26 = *v25;
        uint64_t v27 = v25[1];
        uint64_t v28 = v25[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v29 = v52;
        if (v28)
        {
          swift_bridgeObjectRetain();
          sub_1AD3998A8(v26, v27, v28);
          uint64_t v30 = *(void *)(v28 + 16);
          if (!v30) {
            goto LABEL_20;
          }
LABEL_13:
          uint64_t v39 = (void *)((char *)v29
                         + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_currentItemsReuseIdentifiers);
          uint64_t v40 = v28 + 32;
          do
          {
            sub_1AD1FFE38(v40, (uint64_t)&v55);
            __swift_project_boxed_opaque_existential_1(&v55, v58);
            uint64_t v41 = sub_1AD73BBD0();
            uint64_t v43 = v42;
            swift_beginAccess();
            swift_bridgeObjectRetain();
            unint64_t v44 = sub_1AD20F694(v41, v43);
            LOBYTE(v4sub_1AD3829D8(_, viewForFooterInSection, 1) = v45;
            swift_bridgeObjectRelease();
            if (v41)
            {
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v47 = *v39;
              uint64_t v53 = *v39;
              *uint64_t v39 = 0x8000000000000000;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1AD390298();
                uint64_t v47 = v53;
              }
              swift_bridgeObjectRelease();
              sub_1AD3967C4(v44, v47);
              *uint64_t v39 = v47;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_endAccess();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v55);
            v40 += 40;
            --v30;
          }
          while (v30);
          goto LABEL_20;
        }
        uint64_t v28 = MEMORY[0x1E4FBC860];
        uint64_t v30 = *(void *)(MEMORY[0x1E4FBC860] + 16);
        if (v30) {
          goto LABEL_13;
        }
LABEL_20:
        swift_bridgeObjectRelease();
        return sub_1AD1B4C88();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v29 = v52;
    uint64_t v30 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v30) {
      goto LABEL_13;
    }
    goto LABEL_20;
  }
  uint64_t v49 = a1;
  uint64_t v50 = v6;
  uint64_t v31 = v8;
  sub_1AD73CA80();
  swift_bridgeObjectRetain_n();
  uint64_t v32 = sub_1AD73CB80();
  os_log_type_t v33 = sub_1AD73F920();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v55 = v35;
    *(_DWORD *)uint64_t v34 = 136315650;
    uint64_t v36 = sub_1AD740E30();
    uint64_t v54 = sub_1AD1F62D4(v36, v37, &v55);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v54 = sub_1AD1F62D4(0xD00000000000001ALL, 0x80000001AD77ACE0, &v55);
    sub_1AD7403B0();
    *(_WORD *)(v34 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_1AD1F62D4(v49, v15, &v55);
    sub_1AD7403B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AD1A4000, v32, v33, "[%s] %s Failed to remove a section with id: %s, because it doesn't exist.", (uint8_t *)v34, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v35, -1, -1);
    MEMORY[0x1B3E68450](v34, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return ((uint64_t (*)(char *, uint64_t))v52[1])(v31, v50);
}

uint64_t sub_1AD38965C(uint64_t a1)
{
  uint64_t v2 = v1;
  v27[1] = *v1;
  uint64_t v4 = sub_1AD73CBA0();
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v28 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v27 - v9;
  uint64_t v11 = (char *)v2 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v12(v10, v11, v7);
  uint64_t v13 = sub_1AD73D230();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v10, v7);
  if (v13 <= a1)
  {
    uint64_t v20 = v28;
    sub_1AD73CA80();
    uint64_t v21 = sub_1AD73CB80();
    os_log_type_t v22 = sub_1AD73F920();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v32 = v24;
      *(_DWORD *)uint64_t v23 = 136315650;
      uint64_t v25 = sub_1AD740E30();
      uint64_t v31 = sub_1AD1F62D4(v25, v26, &v32);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v31 = sub_1AD1F62D4(0xD000000000000012, 0x80000001AD77AD00, &v32);
      sub_1AD7403B0();
      *(_WORD *)(v23 + 22) = 2048;
      uint64_t v31 = a1;
      sub_1AD7403B0();
      _os_log_impl(&dword_1AD1A4000, v21, v22, "[%s] %s Failed to remove a section at %ld, because it doesn't exist.", (uint8_t *)v23, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v24, -1, -1);
      MEMORY[0x1B3E68450](v23, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v20, v30);
  }
  else
  {
    v12(v10, v11, v7);
    uint64_t v15 = sub_1AD73D260();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v10, v7);
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (*(void *)(v15 + 16) > (unint64_t)a1)
    {
      uint64_t v17 = v15 + 16 * a1;
      uint64_t v18 = *(void *)(v17 + 32);
      unint64_t v19 = *(void *)(v17 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1AD388F84(v18, v19);
      return swift_bridgeObjectRelease();
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD389A50(uint64_t a1, unint64_t a2, uint64_t a3, int a4)
{
  LODWORD(v145) = a4;
  uint64_t v138 = a3;
  uint64_t v144 = *(void (**)(char *, char *, char *))v4;
  uint64_t v148 = sub_1AD73CBA0();
  double v147 = *(char **)(v148 - 8);
  MEMORY[0x1F4188790](v148);
  uint64_t v146 = (char *)v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v9 = v8;
  uint64_t v10 = *((void *)v8 - 1);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v134 - v11;
  double v137 = v4;
  uint64_t v13 = &v4[OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot];
  swift_beginAccess();
  int64_t v14 = v10 + 16;
  uint64_t v15 = *(void (**)(char *, char *, char *))(v10 + 16);
  v15(v12, v13, v9);
  uint64_t v16 = a1;
  uint64_t v153 = a1;
  unint64_t v154 = a2;
  unint64_t v139 = a2;
  sub_1AD73D1E0();
  LOBYTE(a2) = v17;
  uint64_t v20 = *(void (**)(char *, char *))(v10 + 8);
  uint64_t v19 = v10 + 8;
  uint64_t v18 = v20;
  v20(v12, v9);
  uint64_t v135 = v16;
  if (a2)
  {
    uint64_t v28 = v146;
    sub_1AD73CA80();
    unint64_t v29 = v139;
    swift_bridgeObjectRetain_n();
    uint64_t v30 = sub_1AD73CB80();
    os_log_type_t v31 = sub_1AD73F920();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v153 = v33;
      *(_DWORD *)uint64_t v32 = 136315650;
      uint64_t v34 = sub_1AD740E30();
      *(void *)&long long v149 = sub_1AD1F62D4(v34, v35, &v153);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      *(void *)&long long v149 = sub_1AD1F62D4(0xD000000000000045, 0x80000001AD77AD60, &v153);
      sub_1AD7403B0();
      *(_WORD *)(v32 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v149 = sub_1AD1F62D4(v135, v29, &v153);
      sub_1AD7403B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AD1A4000, v30, v31, "[%s] %s Failed to replace items at section with id: %s, because it doesn't exist.", (uint8_t *)v32, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v33, -1, -1);
      MEMORY[0x1B3E68450](v32, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (*((uint64_t (**)(char *, uint64_t))v147 + 1))(v28, v148);
  }
  double v147 = v13;
  v15(v12, v13, v9);
  unint64_t v21 = v139;
  uint64_t v153 = v16;
  unint64_t v154 = v139;
  v134[1] = sub_1AD73D210();
  v18(v12, v9);
  uint64_t v146 = v9;
  uint64_t v22 = v21;
  if (v145)
  {
    uint64_t v23 = *(void *)(v138 + 16);
    if (v23)
    {
      uint64_t v143 = v18;
      uint64_t v144 = v15;
      int64_t v145 = v14;
      uint64_t v148 = v19;
      uint64_t v24 = &v137[OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_sections];
      uint64_t v25 = &v137[OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_currentItemsReuseIdentifiers];
      uint64_t v26 = v138 + 32;
      swift_bridgeObjectRetain();
      uint64_t v142 = v24;
      swift_beginAccess();
      double v140 = v25;
      swift_beginAccess();
      long long v141 = xmmword_1AD74C370;
      uint64_t v27 = v147;
      while (1)
      {
        sub_1AD1FFE38(v26, (uint64_t)&v153);
        __swift_project_boxed_opaque_existential_1(&v153, v155);
        uint64_t v38 = sub_1AD73BBD0();
        uint64_t v40 = v39;
        v144(v12, v27, v9);
        uint64_t v156 = v38;
        uint64_t v157 = v40;
        sub_1AD73D250();
        v143(v12, v9);
        uint64_t v41 = *((void *)&v149 + 1);
        if (!*((void *)&v149 + 1)) {
          goto LABEL_22;
        }
        uint64_t v42 = *(void *)v142;
        if (!*(void *)(*(void *)v142 + 16)) {
          goto LABEL_21;
        }
        uint64_t v43 = v149;
        swift_bridgeObjectRetain();
        unint64_t v44 = sub_1AD20F694(v43, v41);
        if ((v45 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_21:
          swift_bridgeObjectRelease();
LABEL_22:
          uint64_t v151 = 0;
          long long v150 = 0u;
          long long v149 = 0u;
          uint64_t v27 = v147;
          goto LABEL_23;
        }
        uint64_t v46 = (void *)(*(void *)(v42 + 56) + 48 * v44);
        uint64_t v47 = v46[2];
        uint64_t v48 = v46[3];
        uint64_t v136 = v46[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v27 = v147;
        if (*(void *)(v48 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v49 = sub_1AD20F694(v38, v40);
          if (v50)
          {
            unint64_t v51 = *(void *)(*(void *)(v48 + 56) + 8 * v49);
            swift_bridgeObjectRelease();
            if ((v51 & 0x8000000000000000) != 0)
            {
LABEL_82:
              __break(1u);
LABEL_83:
              __break(1u);
LABEL_84:
              uint64_t result = sub_1AD740C30();
              __break(1u);
              return result;
            }
            if (v51 >= *(void *)(v47 + 16)) {
              goto LABEL_83;
            }
            sub_1AD1FFE38(v47 + 40 * v51 + 32, (uint64_t)&v149);
            goto LABEL_36;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v151 = 0;
        long long v150 = 0u;
        long long v149 = 0u;
LABEL_36:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = v146;
LABEL_23:
        swift_bridgeObjectRelease();
        uint64_t v52 = *((void *)&v150 + 1);
        sub_1AD20710C((uint64_t)&v149, (unint64_t *)&qword_1EB73E880, (unint64_t *)&qword_1EB73E870, MEMORY[0x1E4F66028], MEMORY[0x1E4FBB718]);
        if (!v52) {
          goto LABEL_10;
        }
        __swift_project_boxed_opaque_existential_1(&v153, v155);
        uint64_t v53 = sub_1AD73BBC0();
        uint64_t v55 = v54;
        __swift_project_boxed_opaque_existential_1(&v153, v155);
        uint64_t v56 = sub_1AD73BBD0();
        uint64_t v58 = v57;
        uint64_t v59 = *(void *)v140;
        if (!*(void *)(*(void *)v140 + 16))
        {
          swift_bridgeObjectRelease();
LABEL_32:
          swift_bridgeObjectRelease();
LABEL_33:
          sub_1AD1FDCF8(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
          uint64_t v67 = swift_allocObject();
          *(_OWORD *)(v67 + 16) = v141;
          __swift_project_boxed_opaque_existential_1(&v153, v155);
          *(void *)(v67 + 32) = sub_1AD73BBD0();
          *(void *)(v67 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v68;
          swift_beginAccess();
          uint64_t v9 = v146;
          sub_1AD73D190();
          goto LABEL_9;
        }
        uint64_t v60 = v56;
        swift_bridgeObjectRetain();
        unint64_t v61 = sub_1AD20F694(v60, v58);
        if ((v62 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
        char v63 = (uint64_t *)(*(void *)(v59 + 56) + 16 * v61);
        uint64_t v65 = *v63;
        uint64_t v64 = v63[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v53 == v65 && v55 == v64)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v66 = sub_1AD740BC0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v66 & 1) == 0) {
            goto LABEL_33;
          }
        }
        sub_1AD1FDCF8(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
        uint64_t v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = v141;
        __swift_project_boxed_opaque_existential_1(&v153, v155);
        *(void *)(v36 + 32) = sub_1AD73BBD0();
        *(void *)(v36 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v37;
        swift_beginAccess();
        uint64_t v9 = v146;
        sub_1AD73D240();
LABEL_9:
        swift_endAccess();
        swift_bridgeObjectRelease();
LABEL_10:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v153);
        v26 += 40;
        if (!--v23)
        {
          swift_bridgeObjectRelease();
          uint64_t v22 = v139;
          uint64_t v16 = v135;
          break;
        }
      }
    }
  }
  uint64_t v70 = v22;
  uint64_t v71 = v137;
  unint64_t v72 = &v137[OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_sections];
  swift_beginAccess();
  uint64_t v73 = *(void *)v72;
  uint64_t v74 = MEMORY[0x1E4FBC860];
  if (!*(void *)(*(void *)v72 + 16))
  {
LABEL_46:
    uint64_t v80 = *(void *)(v74 + 16);
    if (v80) {
      goto LABEL_47;
    }
    goto LABEL_54;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v75 = sub_1AD20F694(v16, v70);
  if ((v76 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  uint64_t v77 = (uint64_t *)(*(void *)(v73 + 56) + 48 * v75);
  uint64_t v78 = *v77;
  uint64_t v79 = v77[1];
  uint64_t v74 = v77[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v74)
  {
    swift_bridgeObjectRetain();
    sub_1AD3998A8(v78, v79, v74);
    uint64_t v80 = *(void *)(v74 + 16);
    if (!v80) {
      goto LABEL_54;
    }
LABEL_47:
    unint64_t v81 = (uint64_t *)&v71[OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_currentItemsReuseIdentifiers];
    uint64_t v82 = v74 + 32;
    do
    {
      sub_1AD1FFE38(v82, (uint64_t)&v153);
      __swift_project_boxed_opaque_existential_1(&v153, v155);
      uint64_t v83 = sub_1AD73BBD0();
      uint64_t v85 = v84;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      unint64_t v86 = sub_1AD20F694(v83, v85);
      LOBYTE(v83) = v87;
      swift_bridgeObjectRelease();
      if (v83)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v89 = *v81;
        int v152 = (void *)*v81;
        *unint64_t v81 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1AD390298();
          uint64_t v89 = (uint64_t)v152;
        }
        swift_bridgeObjectRelease();
        sub_1AD3967C4(v86, v89);
        *unint64_t v81 = v89;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_endAccess();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v153);
      v82 += 40;
      --v80;
    }
    while (v80);
    goto LABEL_54;
  }
  uint64_t v74 = MEMORY[0x1E4FBC860];
  uint64_t v80 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (v80) {
    goto LABEL_47;
  }
LABEL_54:
  swift_bridgeObjectRelease();
  uint64_t v90 = v138;
  int64_t v91 = *(void *)(v138 + 16);
  if (!v91)
  {
    swift_beginAccess();
    sub_1AD73D150();
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v120 = v139;
    goto LABEL_77;
  }
  CGRect v92 = &v71[OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_currentItemsReuseIdentifiers];
  swift_bridgeObjectRetain();
  uint64_t v144 = (void (*)(char *, char *, char *))(v90 + 32);
  uint64_t v93 = v90 + 32;
  int64_t v145 = v91;
  do
  {
    uint64_t v148 = v91;
    sub_1AD1FFE38(v93, (uint64_t)&v153);
    __swift_project_boxed_opaque_existential_1(&v153, v155);
    uint64_t v95 = sub_1AD73BBD0();
    uint64_t v97 = v96;
    __swift_project_boxed_opaque_existential_1(&v153, v155);
    uint64_t v98 = sub_1AD73BBC0();
    uint64_t v100 = v99;
    swift_beginAccess();
    char v101 = swift_isUniquelyReferenced_nonNull_native();
    int v152 = *(void **)v92;
    uint64_t v102 = v152;
    uint64_t v103 = v92;
    *(void *)CGRect v92 = 0x8000000000000000;
    unint64_t v105 = sub_1AD20F694(v95, v97);
    uint64_t v106 = v102[2];
    BOOL v107 = (v104 & 1) == 0;
    uint64_t v108 = v106 + v107;
    if (__OFADD__(v106, v107))
    {
      __break(1u);
LABEL_81:
      __break(1u);
      goto LABEL_82;
    }
    char v109 = v104;
    if (v102[3] >= v108)
    {
      if (v101)
      {
        double v112 = v152;
        if (v104) {
          goto LABEL_56;
        }
      }
      else
      {
        sub_1AD390298();
        double v112 = v152;
        if (v109) {
          goto LABEL_56;
        }
      }
    }
    else
    {
      sub_1AD200CB8(v108, v101);
      unint64_t v110 = sub_1AD20F694(v95, v97);
      if ((v109 & 1) != (v111 & 1)) {
        goto LABEL_84;
      }
      unint64_t v105 = v110;
      double v112 = v152;
      if (v109)
      {
LABEL_56:
        uint64_t v94 = (uint64_t *)(v112[7] + 16 * v105);
        swift_bridgeObjectRelease();
        *uint64_t v94 = v98;
        v94[1] = v100;
        goto LABEL_57;
      }
    }
    v112[(v105 >> 6) + 8] |= 1 << v105;
    id v113 = (uint64_t *)(v112[6] + 16 * v105);
    uint64_t *v113 = v95;
    v113[1] = v97;
    uint64_t v114 = (uint64_t *)(v112[7] + 16 * v105);
    *uint64_t v114 = v98;
    v114[1] = v100;
    uint64_t v115 = v112[2];
    BOOL v116 = __OFADD__(v115, 1);
    uint64_t v117 = v115 + 1;
    if (v116) {
      goto LABEL_81;
    }
    v112[2] = v117;
    swift_bridgeObjectRetain();
LABEL_57:
    CGRect v92 = v103;
    *(void *)uint64_t v103 = v112;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v153);
    v93 += 40;
    int64_t v91 = v148 - 1;
  }
  while (v148 != 1);
  uint64_t v90 = v138;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1AD73D150();
  swift_endAccess();
  swift_bridgeObjectRelease();
  *(void *)&long long v149 = MEMORY[0x1E4FBC860];
  int64_t v118 = v145;
  sub_1AD20DD60(0, v145, 0);
  uint64_t v119 = v149;
  uint64_t v120 = v139;
  uint64_t v121 = (uint64_t)v144;
  do
  {
    sub_1AD1FFE38(v121, (uint64_t)&v153);
    __swift_project_boxed_opaque_existential_1(&v153, v155);
    uint64_t v122 = sub_1AD73BBD0();
    uint64_t v124 = v123;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v153);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AD20DD60(0, *(void *)(v119 + 16) + 1, 1);
      uint64_t v119 = v149;
    }
    unint64_t v126 = *(void *)(v119 + 16);
    unint64_t v125 = *(void *)(v119 + 24);
    if (v126 >= v125 >> 1)
    {
      sub_1AD20DD60(v125 > 1, v126 + 1, 1);
      uint64_t v119 = v149;
    }
    *(void *)(v119 + 16) = v126 + 1;
    uint64_t v127 = v119 + 16 * v126;
    *(void *)(v127 + 32) = v122;
    *(void *)(v127 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v124;
    v121 += 40;
    --v118;
  }
  while (v118);
LABEL_77:
  uint64_t v128 = v135;
  *(void *)&long long v149 = v135;
  *((void *)&v149 + sub_1AD3829D8(_, viewForFooterInSection, 1) = v120;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1AD73D140();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v129 = sub_1AD386D20();
  int v131 = sub_1AD38F704(&v149, v128, v120);
  if (*(void *)(v130 + 16))
  {
    uint64_t v132 = v130;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v132 + 16) = v90;
    uint64_t v133 = Array<A>.identifierToIndexDict()(v90);
    swift_bridgeObjectRelease();
    *(void *)(v132 + 24) = v133;
  }
  ((void (*)(long long *, void))v131)(&v149, 0);
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t *, void))v129)(&v153, 0);
  return sub_1AD1B4C88();
}

unint64_t sub_1AD38ABA8(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v80 = a1;
  uint64_t v78 = *v3;
  uint64_t v82 = sub_1AD73A860();
  unint64_t v86 = *(void (***)(char *, void, uint64_t))(v82 - 8);
  MEMORY[0x1F4188790](v82);
  uint64_t v85 = (char *)v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AD73CBA0();
  uint64_t v83 = *(void *)(v6 - 8);
  uint64_t v84 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v81 = (char *)v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1AD73A670();
  uint64_t v76 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  unint64_t v75 = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v74 - v12;
  uint64_t v14 = a2;
  uint64_t v15 = sub_1AD73A830();
  uint64_t v79 = v3;
  uint64_t v16 = (char *)v3 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  char v17 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v17(v13, v16, v10);
  uint64_t v18 = sub_1AD73D230();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v13, v10);
  if (v18 >= v15)
  {
    uint64_t v31 = sub_1AD73A830();
    v17(v13, v16, v10);
    uint64_t v32 = sub_1AD73D230();
    v19(v13, v10);
    if (v31 == v32)
    {
      sub_1AD208614(0, (unint64_t *)&qword_1EB73F8D0, (unint64_t *)&qword_1EB73E870, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1AD74C370;
      sub_1AD1FFE38((uint64_t)v80, v33 + 32);
      uint64_t v34 = v75;
      sub_1AD73A660();
      uint64_t v35 = sub_1AD73A620();
      uint64_t v85 = v36;
      unint64_t v86 = (void (**)(char *, void, uint64_t))v35;
      (*(void (**)(char *, uint64_t))(v76 + 8))(v34, v77);
      sub_1AD1FBD54(MEMORY[0x1E4FBC860]);
      uint64_t v37 = swift_bridgeObjectRetain();
      uint64_t v38 = Array<A>.identifierToIndexDict()(v37);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      long long v87 = 0uLL;
      uint64_t v88 = v33;
      uint64_t v89 = v38;
      uint64_t v90 = v86;
      int64_t v91 = v85;
      v17(v13, v16, v10);
      uint64_t v39 = sub_1AD73D230();
      v19(v13, v10);
      sub_1AD1BECBC(&v87, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    unint64_t v86 = (void (**)(char *, void, uint64_t))v17;
    v17(v13, v16, v10);
    uint64_t v41 = sub_1AD73D260();
    v19(v13, v10);
    unint64_t result = sub_1AD73A830();
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(void *)(v41 + 16))
    {
      uint64_t v42 = v14;
      unint64_t v43 = v41 + 16 * result;
      uint64_t v44 = *(void *)(v43 + 32);
      uint64_t v45 = *(void *)(v43 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v85 = v16;
      ((void (*)(char *, char *, uint64_t))v86)(v13, v16, v10);
      *(void *)&long long v87 = v44;
      *((void *)&v87 + sub_1AD3829D8(_, viewForFooterInSection, 1) = v45;
      uint64_t v46 = sub_1AD73D210();
      v19(v13, v10);
      uint64_t v47 = *(void *)(v46 + 16);
      uint64_t v48 = sub_1AD73A820();
      v74[1] = v42;
      if (v47 == v48)
      {
        swift_bridgeObjectRelease();
        sub_1AD1FDCF8(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
        uint64_t v49 = swift_allocObject();
        *(_OWORD *)(v49 + 16) = xmmword_1AD74C370;
        char v50 = v80;
        __swift_project_boxed_opaque_existential_1(v80, v80[3]);
        *(void *)(v49 + 32) = sub_1AD73BBD0();
        *(void *)(v49 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v51;
        uint64_t v93 = v44;
        uint64_t v94 = v45;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_1AD73D140();
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v52 = v44;
      }
      else
      {
        unint64_t v86 = (void (**)(char *, void, uint64_t))v44;
        unint64_t result = sub_1AD73A820();
        char v50 = v80;
        if ((result & 0x8000000000000000) != 0)
        {
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
        if (result >= *(void *)(v46 + 16))
        {
LABEL_27:
          __break(1u);
          return result;
        }
        unint64_t v53 = v46 + 16 * result;
        uint64_t v55 = *(void *)(v53 + 32);
        uint64_t v54 = *(void *)(v53 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1AD1FDCF8(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
        uint64_t v56 = swift_allocObject();
        *(_OWORD *)(v56 + 16) = xmmword_1AD74C370;
        __swift_project_boxed_opaque_existential_1(v50, v50[3]);
        *(void *)(v56 + 32) = sub_1AD73BBD0();
        *(void *)(v56 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v57;
        uint64_t v93 = v55;
        uint64_t v94 = v54;
        swift_beginAccess();
        sub_1AD73D170();
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v52 = (uint64_t)v86;
      }
      uint64_t v58 = v79;
      uint64_t v59 = sub_1AD386D20();
      unint64_t v61 = sub_1AD38F704(v92, v52, v45);
      uint64_t v62 = v60 + 16;
      if (!*(void *)(v60 + 16))
      {
        ((void (*)(void *, void))v61)(v92, 0);
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t *, void))v59)(&v93, 0);
        goto LABEL_20;
      }
      uint64_t v63 = v60;
      unint64_t result = sub_1AD73A820();
      if (*(void *)(*(void *)v62 + 16) >= (int64_t)result)
      {
        uint64_t v64 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          sub_1AD1FFE38((uint64_t)v50, (uint64_t)&v87);
          sub_1AD3900B4(v64, v64, (uint64_t)&v87, (uint64_t (*)(void))sub_1AD1FE01C, (unint64_t *)&qword_1EB73E870, MEMORY[0x1E4F66028], &qword_1E9A2D1E0);
          uint64_t v65 = Array<A>.identifierToIndexDict()(*(void *)(v63 + 16));
          swift_bridgeObjectRelease();
          *(void *)(v63 + 24) = v65;
          ((void (*)(void *, void))v61)(v92, 0);
          swift_bridgeObjectRelease();
          ((void (*)(uint64_t *, void))v59)(&v93, 0);
LABEL_20:
          __swift_project_boxed_opaque_existential_1(v50, v50[3]);
          uint64_t v66 = sub_1AD73BBD0();
          uint64_t v68 = v67;
          __swift_project_boxed_opaque_existential_1(v50, v50[3]);
          uint64_t v69 = sub_1AD73BBC0();
          uint64_t v71 = v70;
          unint64_t v72 = (void *)((char *)v58
                         + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_currentItemsReuseIdentifiers);
          swift_beginAccess();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v93 = *v72;
          *unint64_t v72 = 0x8000000000000000;
          sub_1AD200B14(v69, v71, v66, v68, isUniquelyReferenced_nonNull_native);
          *unint64_t v72 = v93;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          return sub_1AD1B4C88();
        }
        goto LABEL_25;
      }
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v20 = v81;
  sub_1AD73CA80();
  uint64_t v21 = v82;
  v86[2](v85, v14, v82);
  uint64_t v22 = sub_1AD73CB80();
  os_log_type_t v23 = sub_1AD73F920();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(void *)&long long v87 = v25;
    *(_DWORD *)uint64_t v24 = 136315650;
    uint64_t v26 = sub_1AD740E30();
    uint64_t v93 = sub_1AD1F62D4(v26, v27, (uint64_t *)&v87);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    uint64_t v93 = sub_1AD1F62D4(0xD000000000000010, 0x80000001AD77ADB0, (uint64_t *)&v87);
    sub_1AD7403B0();
    *(_WORD *)(v24 + 22) = 2080;
    sub_1AD1ECC64(&qword_1E9A2D1A8, MEMORY[0x1E4F27DE8]);
    uint64_t v28 = v85;
    uint64_t v29 = sub_1AD740B50();
    uint64_t v93 = sub_1AD1F62D4(v29, v30, (uint64_t *)&v87);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v86[1])(v28, v21);
    _os_log_impl(&dword_1AD1A4000, v22, v23, "[%s] %s Failed to insert item at indexPath: %s, because it doesn't exist.", (uint8_t *)v24, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v25, -1, -1);
    MEMORY[0x1B3E68450](v24, -1, -1);
  }
  else
  {
    ((void (*)(char *, uint64_t))v86[1])(v85, v21);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v20, v84);
}

uint64_t sub_1AD38B7AC(void *a1, uint64_t a2, unint64_t a3)
{
  unint64_t v67 = a3;
  unint64_t v61 = a1;
  uint64_t v59 = *v3;
  uint64_t v5 = sub_1AD73CBA0();
  uint64_t v63 = *(void *)(v5 - 8);
  uint64_t v64 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v62 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD39990C(0, (unint64_t *)&qword_1EB731FE0, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v55 - v8;
  uint64_t v10 = sub_1AD73A860();
  uint64_t v65 = *(void *)(v10 - 8);
  uint64_t v66 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v57 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v55 - v15;
  uint64_t v58 = v3;
  char v17 = (char *)v3 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v18(v16, v17, v13);
  uint64_t v19 = a2;
  uint64_t v71 = a2;
  unint64_t v72 = v67;
  sub_1AD73D250();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v20(v16, v13);
  if (!v69)
  {
    uint64_t v24 = v19;
    unint64_t v25 = v67;
    goto LABEL_5;
  }
  uint64_t v60 = v69;
  uint64_t v56 = v68;
  v18(v16, v17, v13);
  sub_1AD38EE94((uint64_t)v9);
  v20(v16, v13);
  uint64_t v22 = v65;
  uint64_t v21 = v66;
  uint64_t v23 = v19;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v9, 1, v66) != 1)
  {
    uint64_t v34 = v57;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v57, v9, v21);
    sub_1AD1FDCF8(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1AD74C370;
    __swift_project_boxed_opaque_existential_1(v61, v61[3]);
    *(void *)(v35 + 32) = sub_1AD73BBD0();
    *(void *)(v35 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v36;
    uint64_t v71 = v23;
    unint64_t v72 = v67;
    swift_beginAccess();
    sub_1AD73D170();
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v37 = v58;
    uint64_t v38 = sub_1AD386D20();
    uint64_t v40 = sub_1AD38F704(v70, v56, v60);
    uint64_t v41 = v39 + 16;
    if (*(void *)(v39 + 16))
    {
      uint64_t v42 = v39;
      uint64_t result = sub_1AD73A820();
      if (*(void *)(*(void *)v41 + 16) < result)
      {
        __break(1u);
      }
      else
      {
        uint64_t v43 = result;
        uint64_t v44 = v61;
        if ((result & 0x8000000000000000) == 0)
        {
          uint64_t v45 = v34;
          sub_1AD1FFE38((uint64_t)v61, (uint64_t)&v68);
          sub_1AD3900B4(v43, v43, (uint64_t)&v68, (uint64_t (*)(void))sub_1AD1FE01C, (unint64_t *)&qword_1EB73E870, MEMORY[0x1E4F66028], &qword_1E9A2D1E0);
          uint64_t v46 = Array<A>.identifierToIndexDict()(*(void *)(v42 + 16));
          swift_bridgeObjectRelease();
          *(void *)(v42 + 24) = v46;
          ((void (*)(void *, void))v40)(v70, 0);
          swift_bridgeObjectRelease();
          ((void (*)(uint64_t *, void))v38)(&v71, 0);
LABEL_14:
          __swift_project_boxed_opaque_existential_1(v44, v44[3]);
          uint64_t v47 = sub_1AD73BBD0();
          uint64_t v49 = v48;
          __swift_project_boxed_opaque_existential_1(v44, v44[3]);
          uint64_t v50 = sub_1AD73BBC0();
          uint64_t v52 = v51;
          unint64_t v53 = (void *)((char *)v37
                         + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_currentItemsReuseIdentifiers);
          swift_beginAccess();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v71 = *v53;
          *unint64_t v53 = 0x8000000000000000;
          sub_1AD200B14(v50, v52, v47, v49, isUniquelyReferenced_nonNull_native);
          *unint64_t v53 = v71;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          sub_1AD1B4C88();
          return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v45, v66);
        }
      }
      __break(1u);
      return result;
    }
    ((void (*)(void *, void))v40)(v70, 0);
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t *, void))v38)(&v71, 0);
    uint64_t v44 = v61;
    uint64_t v45 = v34;
    goto LABEL_14;
  }
  uint64_t v24 = v19;
  unint64_t v25 = v67;
  swift_bridgeObjectRelease();
  sub_1AD30D068((uint64_t)v9);
LABEL_5:
  uint64_t v26 = v62;
  sub_1AD73CA80();
  swift_bridgeObjectRetain_n();
  unint64_t v27 = sub_1AD73CB80();
  os_log_type_t v28 = sub_1AD73F920();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v68 = v30;
    *(_DWORD *)uint64_t v29 = 136315650;
    uint64_t v31 = sub_1AD740E30();
    uint64_t v71 = sub_1AD1F62D4(v31, v32, &v68);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    uint64_t v71 = sub_1AD1F62D4(0xD000000000000018, 0x80000001AD77ADD0, &v68);
    sub_1AD7403B0();
    *(_WORD *)(v29 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_1AD1F62D4(v24, v25, &v68);
    sub_1AD7403B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AD1A4000, v27, v28, "[%s] %s Failed to insert item before item with id: %s, because it doesn't exist.", (uint8_t *)v29, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v30, -1, -1);
    MEMORY[0x1B3E68450](v29, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v26, v64);
}

uint64_t sub_1AD38C058(void *a1, uint64_t a2, unint64_t a3)
{
  unint64_t v66 = a3;
  uint64_t v60 = a1;
  uint64_t v58 = *v3;
  uint64_t v62 = sub_1AD73CBA0();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v63 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD39990C(0, (unint64_t *)&qword_1EB731FE0, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v54 - v7;
  uint64_t v9 = sub_1AD73A860();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v64 = v9;
  uint64_t v65 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v56 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v54 - v15;
  uint64_t v57 = v3;
  char v17 = (char *)v3 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v18(v16, v17, v13);
  uint64_t v19 = a2;
  uint64_t v70 = a2;
  unint64_t v71 = v66;
  sub_1AD73D250();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v20(v16, v13);
  if (!v68)
  {
    uint64_t v24 = v19;
    unint64_t v25 = v66;
    goto LABEL_5;
  }
  uint64_t v59 = v68;
  uint64_t v55 = v67;
  v18(v16, v17, v13);
  uint64_t v21 = v19;
  sub_1AD38EE94((uint64_t)v8);
  v20(v16, v13);
  uint64_t v23 = v64;
  uint64_t v22 = v65;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v8, 1, v64) != 1)
  {
    uint64_t v34 = v56;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v56, v8, v23);
    sub_1AD1FDCF8(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1AD74C370;
    __swift_project_boxed_opaque_existential_1(v60, v60[3]);
    *(void *)(v35 + 32) = sub_1AD73BBD0();
    *(void *)(v35 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v36;
    uint64_t v70 = v21;
    unint64_t v71 = v66;
    swift_beginAccess();
    sub_1AD73D180();
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v37 = v57;
    uint64_t v38 = sub_1AD386D20();
    uint64_t v40 = sub_1AD38F704(v69, v55, v59);
    uint64_t v41 = v39 + 16;
    if (!*(void *)(v39 + 16))
    {
      ((void (*)(void *, void))v40)(v69, 0);
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t *, void))v38)(&v70, 0);
      uint64_t v44 = v60;
      goto LABEL_15;
    }
    uint64_t v42 = v39;
    uint64_t result = sub_1AD73A820();
    uint64_t v43 = result + 1;
    if (__OFADD__(result, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v44 = v60;
      if (*(void *)(*(void *)v41 + 16) >= v43)
      {
        if ((v43 & 0x8000000000000000) == 0)
        {
          sub_1AD1FFE38((uint64_t)v60, (uint64_t)&v67);
          sub_1AD3900B4(v43, v43, (uint64_t)&v67, (uint64_t (*)(void))sub_1AD1FE01C, (unint64_t *)&qword_1EB73E870, MEMORY[0x1E4F66028], &qword_1E9A2D1E0);
          uint64_t v45 = Array<A>.identifierToIndexDict()(*(void *)(v42 + 16));
          swift_bridgeObjectRelease();
          *(void *)(v42 + 24) = v45;
          ((void (*)(void *, void))v40)(v69, 0);
          swift_bridgeObjectRelease();
          ((void (*)(uint64_t *, void))v38)(&v70, 0);
LABEL_15:
          __swift_project_boxed_opaque_existential_1(v44, v44[3]);
          uint64_t v46 = sub_1AD73BBD0();
          uint64_t v48 = v47;
          __swift_project_boxed_opaque_existential_1(v44, v44[3]);
          uint64_t v49 = sub_1AD73BBC0();
          uint64_t v51 = v50;
          uint64_t v52 = (void *)((char *)v37
                         + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_currentItemsReuseIdentifiers);
          swift_beginAccess();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v70 = *v52;
          *uint64_t v52 = 0x8000000000000000;
          sub_1AD200B14(v49, v51, v46, v48, isUniquelyReferenced_nonNull_native);
          *uint64_t v52 = v70;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          sub_1AD1B4C88();
          return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v34, v64);
        }
LABEL_19:
        __break(1u);
        return result;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v24 = v21;
  unint64_t v25 = v66;
  swift_bridgeObjectRelease();
  sub_1AD30D068((uint64_t)v8);
LABEL_5:
  uint64_t v26 = v63;
  sub_1AD73CA80();
  swift_bridgeObjectRetain_n();
  unint64_t v27 = sub_1AD73CB80();
  os_log_type_t v28 = sub_1AD73F920();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v67 = v30;
    *(_DWORD *)uint64_t v29 = 136315650;
    uint64_t v31 = sub_1AD740E30();
    uint64_t v70 = sub_1AD1F62D4(v31, v32, &v67);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    uint64_t v70 = sub_1AD1F62D4(0xD000000000000017, 0x80000001AD77ADF0, &v67);
    sub_1AD7403B0();
    *(_WORD *)(v29 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v70 = sub_1AD1F62D4(v24, v25, &v67);
    sub_1AD7403B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AD1A4000, v27, v28, "[%s] %s Failed to insert item after item with id: %s, because it doesn't exist.", (uint8_t *)v29, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v30, -1, -1);
    MEMORY[0x1B3E68450](v29, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v26, v62);
}

uint64_t sub_1AD38C900(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, v6);
  return sub_1AD398C88((uint64_t)v8, a2, a3, v3, v6, v7);
}

uint64_t sub_1AD38C964(void *a1, int64_t a2)
{
  uint64_t v46 = *v2;
  uint64_t v47 = a1;
  uint64_t v4 = sub_1AD73CBA0();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v49 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1AD73A670();
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v43 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v43 - v11;
  uint64_t v48 = v2;
  uint64_t v13 = (char *)v2 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v14(v12, v13, v9);
  uint64_t v15 = sub_1AD73D230();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v12, v9);
  BOOL v17 = v15 < a2;
  unint64_t v18 = a2;
  if (!v17)
  {
    v14(v12, v13, v9);
    uint64_t v28 = sub_1AD73D230();
    v16(v12, v9);
    if (v28 == v18)
    {
      sub_1AD208614(0, (unint64_t *)&qword_1EB73F8D0, (unint64_t *)&qword_1EB73E870, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1AD74C370;
      sub_1AD1FFE38((uint64_t)v47, v29 + 32);
      uint64_t v30 = v43;
      sub_1AD73A660();
      uint64_t v31 = sub_1AD73A620();
      uint64_t v33 = v32;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v45);
      sub_1AD1FBD54(MEMORY[0x1E4FBC860]);
      uint64_t v34 = swift_bridgeObjectRetain();
      uint64_t v35 = Array<A>.identifierToIndexDict()(v34);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      long long v53 = 0uLL;
      uint64_t v54 = v29;
      uint64_t v55 = v35;
      uint64_t v56 = v31;
      uint64_t v57 = v33;
      sub_1AD1BECBC(&v53, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v14(v12, v13, v9);
    uint64_t v36 = sub_1AD73D260();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v12, v9);
    if ((v18 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(v36 + 16) > v18)
    {
      unint64_t v37 = v36 + 16 * v18;
      uint64_t v38 = *(void *)(v37 + 32);
      unint64_t v39 = *(void *)(v37 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v40 = v47[3];
      uint64_t v41 = v47[4];
      uint64_t v42 = __swift_project_boxed_opaque_existential_1(v47, v40);
      sub_1AD398C88((uint64_t)v42, v38, v39, v48, v40, v41);
      return swift_bridgeObjectRelease();
    }
    __break(1u);
    return result;
  }
  uint64_t v19 = a2;
  uint64_t v20 = v49;
  sub_1AD73CA80();
  uint64_t v21 = sub_1AD73CB80();
  os_log_type_t v22 = sub_1AD73F920();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(void *)&long long v53 = v24;
    *(_DWORD *)uint64_t v23 = 136315650;
    uint64_t v25 = sub_1AD740E30();
    uint64_t v52 = sub_1AD1F62D4(v25, v26, (uint64_t *)&v53);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    uint64_t v52 = sub_1AD1F62D4(0xD00000000000001CLL, 0x80000001AD77AE10, (uint64_t *)&v53);
    sub_1AD7403B0();
    *(_WORD *)(v23 + 22) = 2048;
    uint64_t v52 = v19;
    sub_1AD7403B0();
    _os_log_impl(&dword_1AD1A4000, v21, v22, "[%s] %s Failed to append item to section with index: %ld, because it doesn't exist.", (uint8_t *)v23, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v24, -1, -1);
    MEMORY[0x1B3E68450](v23, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v20, v51);
}

unint64_t sub_1AD38CF5C(uint64_t a1)
{
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v28 = v1;
  uint64_t v8 = v1 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v9(v7, v8, v4);
  uint64_t v10 = sub_1AD73D260();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  uint64_t v27 = a1;
  unint64_t result = sub_1AD73A830();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (result >= *(void *)(v10 + 16))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v13 = v10 + 16 * result;
  uint64_t v14 = *(void *)(v13 + 32);
  uint64_t v15 = *(void *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9(v7, v8, v4);
  *(void *)&v31[0] = v14;
  *((void *)&v31[0] + sub_1AD3829D8(_, viewForFooterInSection, 1) = v15;
  uint64_t v16 = sub_1AD73D210();
  v11(v7, v4);
  unint64_t result = sub_1AD73A820();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (result >= *(void *)(v16 + 16))
  {
LABEL_12:
    __break(1u);
    return result;
  }
  unint64_t v17 = v16 + 16 * result;
  uint64_t v19 = *(void *)(v17 + 32);
  uint64_t v18 = *(void *)(v17 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1AD1FDCF8(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1AD74C370;
  *(void *)(v20 + 32) = v19;
  *(void *)(v20 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v18;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1AD73D150();
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1AD386D20();
  uint64_t v23 = sub_1AD38F704(v29, v14, v15);
  if (*(void *)(v22 + 16))
  {
    uint64_t v24 = v22;
    unint64_t v25 = sub_1AD73A820();
    sub_1AD38F804(v25, (uint64_t (*)(uint64_t))sub_1AD398B58, (void (*)(uint64_t, uint64_t))sub_1AD20FE90, (uint64_t)v31);
    uint64_t v26 = Array<A>.identifierToIndexDict()(*(void *)(v24 + 16));
    swift_bridgeObjectRelease();
    *(void *)(v24 + 24) = v26;
    ((void (*)(void *, void))v23)(v29, 0);
    swift_bridgeObjectRelease();
    ((void (*)(unsigned char *, void))v21)(v30, 0);
  }
  else
  {
    ((void (*)(void *, void))v23)(v29, 0);
    swift_bridgeObjectRelease();
    ((void (*)(unsigned char *, void))v21)(v30, 0);
    memset(v31, 0, sizeof(v31));
    uint64_t v32 = 0;
  }
  sub_1AD20710C((uint64_t)v31, (unint64_t *)&qword_1EB73E880, (unint64_t *)&qword_1EB73E870, MEMORY[0x1E4F66028], MEMORY[0x1E4FBB718]);
  swift_beginAccess();
  sub_1AD395F08(v19, v18);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1AD1B4C88();
}

uint64_t sub_1AD38D378(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v37 = a2;
  uint64_t v34 = *v2;
  uint64_t v5 = sub_1AD73CBA0();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v38 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v32 - v10;
  sub_1AD39990C(0, (unint64_t *)&qword_1EB731FE0, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = sub_1AD73A860();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (char *)v3 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  uint64_t v20 = v19;
  unint64_t v21 = v37;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v20, v8);
  sub_1AD38EE94((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1AD30D068((uint64_t)v14);
    sub_1AD73CA80();
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_1AD73CB80();
    os_log_type_t v23 = sub_1AD73F920();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = v35;
    uint64_t v26 = v36;
    if (v24)
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v40 = v28;
      *(_DWORD *)uint64_t v27 = 136315650;
      uint64_t v33 = a1;
      uint64_t v29 = sub_1AD740E30();
      uint64_t v39 = sub_1AD1F62D4(v29, v30, &v40);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      uint64_t v39 = sub_1AD1F62D4(0xD000000000000017, 0x80000001AD77AE30, &v40);
      sub_1AD7403B0();
      *(_WORD *)(v27 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1AD1F62D4(v33, v21, &v40);
      sub_1AD7403B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AD1A4000, v22, v23, "[%s] %s Failed to remove item with identifier: %s, because it doesn't exist.", (uint8_t *)v27, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v28, -1, -1);
      MEMORY[0x1B3E68450](v27, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v38, v36);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v38, v26);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    sub_1AD38CF5C((uint64_t)v18);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
}

uint64_t sub_1AD38D8A8(uint64_t a1, uint64_t *a2)
{
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v6 = v5;
  uint64_t v7 = *((void *)v5 - 1);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v55 - v8;
  uint64_t v60 = v2;
  uint64_t v10 = v2 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  uint64_t v11 = (void (*)(void *))(v7 + 16);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t (*)()))(v7 + 16);
  uint64_t v59 = v10;
  v12(v9, v10, v6);
  uint64_t v13 = (void *)sub_1AD73D260();
  uint64_t v14 = *(void (**)(char *, uint64_t (*)()))(v7 + 8);
  v14(v9, v6);
  unint64_t v58 = a1;
  unint64_t v15 = a1;
  unint64_t v16 = sub_1AD73A830();
  if ((v16 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v16 >= v13[2])
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v17 = &v13[2 * v16];
  a1 = v17[4];
  uint64_t v18 = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12(v9, v59, v6);
  v62[0] = a1;
  v62[1] = v18;
  uint64_t v57 = v18;
  uint64_t v13 = (void *)sub_1AD73D210();
  v14(v9, v6);
  unint64_t v15 = v58;
  unint64_t v19 = sub_1AD73A820();
  if ((v19 & 0x8000000000000000) != 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v19 >= v13[2])
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v20 = &v13[2 * v19];
  uint64_t v22 = v20[4];
  uint64_t v21 = v20[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  BOOL v24 = v22 == sub_1AD73BBD0() && v21 == v23;
  uint64_t v56 = a1;
  if (v24)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v25 = sub_1AD740BC0();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
    {
      sub_1AD1FDCF8(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v26 = swift_allocObject();
      long long v55 = xmmword_1AD74C370;
      *(_OWORD *)(v26 + 16) = xmmword_1AD74C370;
      __swift_project_boxed_opaque_existential_1(a2, a2[3]);
      *(void *)(v26 + 32) = sub_1AD73BBD0();
      *(void *)(v26 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v27;
      v61[0] = v22;
      v61[1] = v21;
      swift_beginAccess();
      sub_1AD73D170();
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = v55;
      *(void *)(v28 + 32) = v22;
      *(void *)(v28 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v21;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1AD73D150();
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_1AD395F08(v22, v21);
      swift_endAccess();
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v29 = sub_1AD73BBD0();
  uint64_t v31 = v30;
  uint64_t v32 = (uint64_t *)(v60 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_currentItemsReuseIdentifiers);
  swift_beginAccess();
  uint64_t v33 = *v32;
  if (*(void *)(v33 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v34 = sub_1AD20F694(v29, v31);
    if (v35)
    {
      uint64_t v36 = (uint64_t *)(*(void *)(v33 + 56) + 16 * v34);
      uint64_t v37 = *v36;
      uint64_t v38 = v36[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v37 = 0;
  uint64_t v38 = 0;
LABEL_18:
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v39 = sub_1AD73BBC0();
  if (!v38)
  {
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  if (v37 != v39 || v38 != v40)
  {
    char v41 = sub_1AD740BC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v41) {
      goto LABEL_24;
    }
LABEL_25:
    sub_1AD1FDCF8(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1AD74C370;
    *(void *)(v43 + 32) = v22;
    *(void *)(v43 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v21;
    swift_beginAccess();
    sub_1AD73D190();
    goto LABEL_26;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_24:
  sub_1AD1FDCF8(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1AD74C370;
  *(void *)(v42 + 32) = v22;
  *(void *)(v42 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v21;
  swift_beginAccess();
  sub_1AD73D240();
LABEL_26:
  swift_endAccess();
LABEL_27:
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v44 = sub_1AD73BBD0();
  uint64_t v46 = v45;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v47 = sub_1AD73BBC0();
  uint64_t v49 = v48;
  uint64_t v50 = (void *)(v60 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_currentItemsReuseIdentifiers);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v61[0] = *v50;
  *uint64_t v50 = 0x8000000000000000;
  sub_1AD200B14(v47, v49, v44, v46, isUniquelyReferenced_nonNull_native);
  *uint64_t v50 = v61[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v6 = sub_1AD386D20();
  uint64_t v11 = sub_1AD38F704(v61, v56, v57);
  if (!*(void *)(v52 + 16))
  {
    ((void (*)(void *, void))v11)(v61, 0);
    swift_bridgeObjectRelease();
    ((void (*)(void *, void))v6)(v62, 0);
    return sub_1AD1B4C88();
  }
  a1 = v52;
  unint64_t v15 = sub_1AD73A820();
  uint64_t v13 = *(void **)(a1 + 16);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 16) = v13;
  if (result)
  {
    if ((v15 & 0x8000000000000000) == 0) {
      goto LABEL_30;
    }
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
LABEL_38:
  uint64_t result = (uint64_t)sub_1AD398B58(v13);
  uint64_t v13 = (void *)result;
  *(void *)(a1 + 16) = result;
  if ((v15 & 0x8000000000000000) != 0) {
    goto LABEL_39;
  }
LABEL_30:
  if (v15 < v13[2])
  {
    __swift_assign_boxed_opaque_existential_1(&v13[5 * v15 + 4], a2);
    uint64_t v54 = Array<A>.identifierToIndexDict()(*(void *)(a1 + 16));
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = v54;
    ((void (*)(void *, void))v11)(v61, 0);
    swift_bridgeObjectRelease();
    ((void (*)(void *, void))v6)(v62, 0);
    return sub_1AD1B4C88();
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1AD38E094(uint64_t *a1)
{
  uint64_t v33 = *v1;
  uint64_t v3 = sub_1AD73CBA0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  uint64_t v36 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v38 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v31 - v9;
  sub_1AD39990C(0, (unint64_t *)&qword_1EB731FE0, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v14 = sub_1AD73A860();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v32 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v34 = v1;
  uint64_t v17 = (char *)v1 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v17, v7);
  uint64_t v18 = a1[3];
  uint64_t v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_1AD73BBD0();
  sub_1AD38EE94((uint64_t)v13);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1AD30D068((uint64_t)v13);
    sub_1AD73CA80();
    sub_1AD1FFE38((uint64_t)v37, (uint64_t)v41);
    unint64_t v19 = sub_1AD73CB80();
    os_log_type_t v20 = sub_1AD73F920();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v22 = v35;
    if (v21)
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v40 = v24;
      *(_DWORD *)uint64_t v23 = 136315650;
      uint64_t v25 = sub_1AD740E30();
      uint64_t v39 = sub_1AD1F62D4(v25, v26, &v40);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v39 = sub_1AD1F62D4(0x692864616F6C6572, 0xED0000293A6D6574, &v40);
      sub_1AD7403B0();
      *(_WORD *)(v23 + 22) = 2080;
      __swift_project_boxed_opaque_existential_1(v41, v41[3]);
      uint64_t v27 = sub_1AD73BBD0();
      uint64_t v39 = sub_1AD1F62D4(v27, v28, &v40);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      _os_log_impl(&dword_1AD1A4000, v19, v20, "[%s] %s Failed to reload item with id: %s, because it doesn't exist.", (uint8_t *)v23, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v24, -1, -1);
      MEMORY[0x1B3E68450](v23, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v38, v22);
  }
  else
  {
    uint64_t v29 = (uint64_t)v32;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v32, v13, v14);
    sub_1AD38D8A8(v29, v37);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v29, v14);
  }
}

uint64_t sub_1AD38E5FC()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*v0 + 176))();
  swift_beginAccess();
  uint64_t v2 = v0[7];
  swift_beginAccess();
  uint64_t v3 = v0[8];
  swift_retain();
  swift_retain();
  LOBYTE(vsub_1AD3829D8(_, viewForFooterInSection, 1) = ((uint64_t (*)(uint64_t, uint64_t))v1)(v2, v3);
  swift_release();
  swift_release();
  swift_release();
  if (v1) {
    uint64_t v4 = &protocol witness table for CompoundSectionedDataSource;
  }
  else {
    uint64_t v4 = &protocol witness table for MutableArrayDataSource;
  }
  swift_retain();
  uint64_t ObjectType = swift_getObjectType();
  ((void (*)(uint64_t, _UNKNOWN **))v4[2])(ObjectType, v4);
  return swift_unknownObjectRelease();
}

void sub_1AD38E730(void *a1, uint64_t a2, int a3)
{
}

void sub_1AD38E760(void *a1, uint64_t a2, int a3)
{
}

void sub_1AD38E790(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6, void *a7)
{
  BOOL v21 = a7;
  int v22 = a3;
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v21 - v14;
  uint64_t v16 = (void *)(a2 + *(void *)(*(void *)a2 + 112));
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v17 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  uint64_t v18 = a5(0);
  uint64_t v25 = v18;
  uint64_t v26 = a6;
  swift_getKeyPath();
  uint64_t v23 = v18;
  uint64_t v24 = a6;
  swift_getKeyPath();
  sub_1AD73DC00();
  swift_release();
  swift_release();
  if (v27)
  {
    uint64_t v19 = *v16 + *v21;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v19, v12);
  }
  else
  {
    sub_1AD73D2C0();
  }
  os_log_type_t v20 = (void *)sub_1AD73D270();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  objc_msgSend(a1, sel_snapshotDidChangeWithDataSourceID_snapshot_animated_, v17, v20, v22 & 1);
}

void sub_1AD38EA04(void *a1, uint64_t a2, int a3)
{
  int v16 = a3;
  id v15 = a1;
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v10 = *(void *)(a2 + 104);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v10 + 16);
  swift_unknownObjectRetain();
  v12(ObjectType, v10);
  swift_unknownObjectRelease();
  uint64_t v13 = (void *)sub_1AD73D270();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(v15, sel_snapshotDidChangeWithDataSourceID_snapshot_animated_, v9, v13, v16 & 1);
}

void sub_1AD38EBBC(void *a1, uint64_t a2, char a3)
{
}

void sub_1AD38EBD0(void *a1, uint64_t a2, int a3)
{
  int v14 = a3;
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v13 - v7;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  sub_1AD2D695C();
  uint64_t v11 = v10;
  uint64_t v17 = v10;
  uint64_t v18 = &protocol witness table for PrimarySecondaryDataSource<A, B>;
  swift_getKeyPath();
  uint64_t v15 = v11;
  int v16 = &protocol witness table for PrimarySecondaryDataSource<A, B>;
  swift_getKeyPath();
  sub_1AD73DC00();
  swift_release();
  swift_release();
  if (v19)
  {
    swift_retain();
    sub_1AD38E5FC();
    swift_release();
  }
  else
  {
    sub_1AD73D2C0();
  }
  uint64_t v12 = (void *)sub_1AD73D270();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(a1, sel_snapshotDidChangeWithDataSourceID_snapshot_animated_, v9, v12, v14 & 1);
}

void sub_1AD38EE0C(void *a1, uint64_t a2, int a3)
{
}

void sub_1AD38EE3C(void *a1, uint64_t a2, char a3)
{
}

void sub_1AD38EE50(void *a1, uint64_t a2, int a3)
{
}

void sub_1AD38EE80(void *a1, uint64_t a2, char a3)
{
}

uint64_t sub_1AD38EE94@<X0>(uint64_t a1@<X8>)
{
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  sub_1AD73D250();
  if (!v19) {
    goto LABEL_11;
  }
  uint64_t v2 = sub_1AD73D1E0();
  if (v3)
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t v18 = sub_1AD73A860();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
  uint64_t v4 = v2;
  if (!*(void *)(sub_1AD73D210() + 16)
    || (swift_bridgeObjectRetain(), swift_bridgeObjectRelease(), uint64_t v5 = sub_1AD73D160(), (v6 & 1) != 0)
    || (v7 = v5, uint64_t result = sub_1AD73D160(), (v9 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v10 = result - v7;
  if (__OFSUB__(result, v7))
  {
    __break(1u);
  }
  else
  {
    sub_1AD1FDCF8(0, (unint64_t *)&unk_1EB739280, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBBE00]);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1AD74C350;
    *(void *)(v11 + 32) = v4;
    *(void *)(v11 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v10;
    MEMORY[0x1B3E60AE0](v11, v12, v13, v14, v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_1AD73A860();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 0, 1, v17);
  }
  return result;
}

uint64_t MutableArrayDataSource.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_1AD38F15C(void **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = v2;
  id v5 = v2;
}

uint64_t sub_1AD38F1B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1AD38F260(uint64_t a1, void *a2)
{
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - v7, a1, v5);
  uint64_t v9 = *a2 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v9, v8, v5);
  return swift_endAccess();
}

uint64_t sub_1AD38F39C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_sections);
  swift_beginAccess();
  void *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t MutableArrayDataSource.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MutableArrayDataSource.__allocating_init(arrangedSections:identifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  MutableArrayDataSource.init(arrangedSections:identifier:)(a1, a2, a3);
  return v6;
}

uint64_t MutableArrayDataSource.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v25 = sub_1AD73A670();
  uint64_t v3 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v21 = v1;
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1AD1FBB8C(0, v6, 0);
    uint64_t v7 = 0;
    int v22 = (void (**)(char *, uint64_t))(v3 + 8);
    int64_t v23 = v6;
    uint64_t v24 = a1;
    do
    {
      uint64_t v8 = *(void *)(a1 + 8 * v7 + 32);
      swift_bridgeObjectRetain_n();
      sub_1AD73A660();
      uint64_t v9 = sub_1AD73A620();
      uint64_t v11 = v10;
      (*v22)(v5, v25);
      sub_1AD1FBD54(MEMORY[0x1E4FBC860]);
      uint64_t v12 = swift_bridgeObjectRetain();
      uint64_t v13 = Array<A>.identifierToIndexDict()(v12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v14 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AD1FBB8C(0, *(void *)(v14 + 16) + 1, 1);
        uint64_t v14 = v26;
      }
      unint64_t v16 = *(void *)(v14 + 16);
      unint64_t v15 = *(void *)(v14 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1AD1FBB8C(v15 > 1, v16 + 1, 1);
        uint64_t v14 = v26;
      }
      ++v7;
      *(void *)(v14 + 16) = v16 + 1;
      uint64_t v17 = (void *)(v14 + 48 * v16);
      v17[4] = 0;
      v17[5] = 0;
      v17[6] = v8;
      v17[7] = v13;
      v17[8] = v9;
      v17[9] = v11;
      a1 = v24;
    }
    while (v23 != v7);
    swift_bridgeObjectRelease();
    uint64_t v1 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  uint64_t v18 = sub_1AD1FBF24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 256))(v14, v18, v19);
}

void (*sub_1AD38F704(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  int64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  void v6[4] = a3;
  swift_bridgeObjectRetain();
  void v6[5] = sub_1AD3986F0(v6, a2, a3);
  return sub_1AD38F784;
}

void sub_1AD38F784(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t sub_1AD38F7D8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AD38F804(a1, (uint64_t (*)(uint64_t))sub_1AD398B30, (void (*)(uint64_t, uint64_t))sub_1AD20FE90, a2);
}

uint64_t sub_1AD38F804@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, void (*a3)(uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = a2(v9);
  }
  unint64_t v10 = *(void *)(v9 + 16);
  if (v10 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v11 = v10 - 1;
    a3(v9 + 40 * a1 + 32, a4);
    if ((uint64_t)(v11 - a1) >= 0)
    {
      uint64_t result = (uint64_t)memmove((void *)(v9 + 40 * a1 + 32), (const void *)(v9 + 40 * a1 + 72), 40 * (v11 - a1));
      *(void *)(v9 + 16) = v11;
      uint64_t *v4 = v9;
      return result;
    }
  }
  uint64_t result = sub_1AD740940();
  __break(1u);
  return result;
}

uint64_t sub_1AD38F910@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_1AD398BA8(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = &v5[10 * a1];
    long long v10 = *((_OWORD *)v8 + 2);
    long long v11 = *((_OWORD *)v8 + 3);
    uint64_t v9 = v8 + 4;
    *a2 = v10;
    a2[1] = v11;
    long long v12 = v9[3];
    long long v13 = v9[4];
    a2[2] = v9[2];
    a2[3] = v12;
    a2[4] = v13;
    uint64_t v14 = v6 - 1 - a1;
    if (v14 >= 0)
    {
      uint64_t result = (uint64_t)memmove(v9, v9 + 5, 80 * v14);
      uint64_t v5[2] = v7;
      *uint64_t v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1AD740940();
  __break(1u);
  return result;
}

uint64_t MutableArrayDataSource.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t MutableArrayDataSource.debugDescription.getter()
{
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v9 - v4;
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_1AD740680();
  uint64_t v12 = v10;
  unint64_t v13 = v11;
  sub_1AD73F300();
  swift_bridgeObjectRetain();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  sub_1AD73F300();
  uint64_t v6 = v0 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = sub_1AD73D260();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  MEMORY[0x1B3E657F0](v7, MEMORY[0x1E4FBB1A0]);
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD73F300();
  return v12;
}

uint64_t sub_1AD38FD0C()
{
  return MutableArrayDataSource.debugDescription.getter();
}

uint64_t sub_1AD38FD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD3900B4(a1, a2, a3, (uint64_t (*)(void))sub_1AD1FE01C, (unint64_t *)&qword_1EB73E870, MEMORY[0x1E4F66028], &qword_1E9A2D1E0);
}

uint64_t sub_1AD38FD60(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t v5 = sub_1AD51BF64(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  uint64_t v14 = (uint64_t)&v5[10 * a1 + 4];
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v15 = v5[2];
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = (char *)(v14 + 80);
    uint64_t v19 = (char *)&v5[10 * a2 + 4];
    if ((char *)(v14 + 80) != v19 || v18 >= &v19[80 * v17]) {
      memmove(v18, v19, 80 * v17);
    }
    uint64_t v20 = v5[2];
    BOOL v16 = __OFADD__(v20, v9);
    uint64_t v21 = v20 + v9;
    if (!v16)
    {
      uint64_t v5[2] = v21;
LABEL_20:
      sub_1AD2719D8(a3, (uint64_t)v23);
      uint64_t result = sub_1AD2719D8((uint64_t)v23, v14);
      *(void *)uint64_t v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1AD740940();
  __break(1u);
  return result;
}

char *sub_1AD38FF00(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  int64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    int64_t v6 = sub_1AD51BA2C(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  BOOL v16 = &v6[2 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = v6[2];
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v16 + 2);
    uint64_t v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20]) {
      uint64_t result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = v6[2];
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *BOOL v16 = a3;
      v16[1] = a4;
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_1AD740940();
  __break(1u);
  return result;
}

uint64_t sub_1AD390084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD3900B4(a1, a2, a3, (uint64_t (*)(void))sub_1AD51BBA4, &qword_1EB73A4A8, (uint64_t)&protocol descriptor for DataTypeDetailComponent, &qword_1E9A2D1C0);
}

uint64_t sub_1AD3900B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = *v7;
  uint64_t v10 = *(void *)(*v7 + 16);
  if (v10 < a2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v12 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v13 = 1 - v12;
  if (__OFSUB__(1, v12))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (__OFADD__(v10, v13))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *int64_t v7 = v9;
  if (!isUniquelyReferenced_nonNull_native || v10 + v13 > *(void *)(v9 + 24) >> 1)
  {
    uint64_t v9 = a4();
    *int64_t v7 = v9;
  }
  uint64_t v17 = v9 + 32 + 40 * a1;
  sub_1AD2196B8(0, a5);
  swift_arrayDestroy();
  if (!v13) {
    goto LABEL_17;
  }
  uint64_t v18 = *(void *)(v9 + 16);
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_23;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = (char *)(v17 + 40);
    uint64_t v22 = (char *)(v9 + 32 + 40 * a2);
    if ((char *)(v17 + 40) != v22 || v21 >= &v22[40 * v20]) {
      memmove(v21, v22, 40 * v20);
    }
    uint64_t v23 = *(void *)(v9 + 16);
    BOOL v19 = __OFADD__(v23, v13);
    uint64_t v24 = v23 + v13;
    if (!v19)
    {
      *(void *)(v9 + 16) = v24;
LABEL_17:
      sub_1AD1FFE38(a3, v17);
      return sub_1AD20710C(a3, a7, a5, a6, MEMORY[0x1E4FBBB08]);
    }
    goto LABEL_24;
  }
LABEL_25:
  uint64_t result = sub_1AD740940();
  __break(1u);
  return result;
}

void *sub_1AD390298()
{
  uint64_t v1 = v0;
  sub_1AD200FF8(0, (unint64_t *)&qword_1EB739170);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AD39046C()
{
  uint64_t v1 = v0;
  sub_1AD200FF8(0, (unint64_t *)&qword_1EB739180);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v2sub_1AD3829D8(_, viewForHeaderInSection, 0) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AD390638()
{
  uint64_t v1 = v0;
  sub_1AD200FF8(0, &qword_1EB739178);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 48 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v23 = *(void *)v21;
    uint64_t v22 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 32);
    uint64_t v25 = *(void *)(v21 + 40);
    unint64_t v26 = (void *)(*(void *)(v4 + 48) + v16);
    long long v27 = *(_OWORD *)(v21 + 16);
    *unint64_t v26 = v18;
    v26[1] = v19;
    uint64_t v28 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v28 = v23;
    *(void *)(v28 + 8) = v22;
    *(_OWORD *)(v28 + 16) = v27;
    *(void *)(v28 + 32) = v24;
    *(void *)(v28 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AD39085C()
{
  uint64_t v1 = v0;
  sub_1AD200FF8(0, (unint64_t *)&unk_1E9A2FA10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *uint64_t v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AD390A24()
{
  return sub_1AD392854(&qword_1E9A2D1B8, &qword_1E9A2A988, 0x1E4F28B50, (unint64_t *)&qword_1E9A2BA58);
}

void *sub_1AD390A48()
{
  uint64_t v1 = v0;
  sub_1AD200FF8(0, &qword_1EB741788);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 48 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    long long v25 = *(_OWORD *)(v21 + 16);
    long long v26 = *(_OWORD *)(v21 + 32);
    void *v24 = v19;
    v24[1] = v18;
    uint64_t v27 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v27 = v22;
    *(void *)(v27 + 8) = v23;
    *(_OWORD *)(v27 + 16) = v25;
    *(_OWORD *)(v27 + 32) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AD390C54()
{
  uint64_t v1 = v0;
  sub_1AD200FF8(0, (unint64_t *)&qword_1EB741460);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  long long v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1AD1F63A8(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_1AD1F5614(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AD390E5C()
{
  uint64_t v1 = v0;
  sub_1AD1FF100(0, (unint64_t *)&qword_1E9A2A9A8, &qword_1E9A2A9B0, (uint64_t)&type metadata for ConfirmDetailsSection.Row.CorrelatedItem);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AD391028()
{
  uint64_t v1 = v0;
  sub_1AD200FF8(0, (unint64_t *)&qword_1EB73F8A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_1AD25A474(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_1AD1F63A8(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    uint64_t result = sub_1AD1F5614(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1AD391230()
{
  uint64_t v1 = v0;
  sub_1AD259D20();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1AD3913D4()
{
  uint64_t v1 = v0;
  sub_1AD25A374();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_1AD1F63A8(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_1AD1F5614(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AD391598()
{
  uint64_t v1 = v0;
  sub_1AD39AE00(0, &qword_1E9A2A9B8, (void (*)(uint64_t))sub_1AD25A65C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AD391768()
{
  uint64_t v1 = v0;
  sub_1AD39AE00(0, (unint64_t *)&qword_1E9A2F990, type metadata accessor for HKSharingReachabilityStatus);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v2sub_1AD3829D8(_, viewForHeaderInSection, 0) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AD391930()
{
  uint64_t v1 = v0;
  sub_1AD21E678();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v17);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v17) = v18;
    id result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AD391AD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent(0);
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD39AE00(0, &qword_1E9A2D1B0, (void (*)(uint64_t))type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1AD7408F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v27 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1AD39AD38(*(void *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
    int64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    void *v22 = v19;
    v22[1] = v20;
    sub_1AD39A160((uint64_t)v4, *(void *)(v7 + 56) + v21);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1AD391D6C()
{
  uint64_t v1 = sub_1AD73A600();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD39A1C4();
  unint64_t v24 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1AD7408F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v24 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v28 = v2 + 16;
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v2 + 32;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v19 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v19, v1);
    *(void *)(*(void *)(v7 + 48) + v17) = v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v19, v4, v1);
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v26) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1AD391FF8()
{
  uint64_t v1 = v0;
  sub_1AD39A270();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1AD392198()
{
  uint64_t v1 = v0;
  sub_1AD1D4A94();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1AD392348()
{
  uint64_t v1 = v0;
  sub_1AD39AE64();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AD3924E8()
{
  uint64_t v1 = v0;
  sub_1AD259C50();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1AD392690()
{
  uint64_t v1 = v0;
  sub_1AD39AF40();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AD392830()
{
  return sub_1AD392854(&qword_1E9A2D1C8, (unint64_t *)&qword_1EB7412F0, 0x1E4F67AA8, &qword_1E9A2D1D0);
}

void *sub_1AD392854(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  sub_1AD39A30C(0, a1, a2, a3, a4);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_1AD7408F0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v5 = v8;
    return result;
  }
  id result = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 64);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v17) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v10 + 8 * v24);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v24 + 1;
      if (v24 + 1 >= v17) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v10 + 8 * v13);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v16 = (v25 - 1) & v25;
    unint64_t v19 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 8 * v19;
    int64_t v21 = *(void **)(*(void *)(v6 + 48) + v20);
    uint64_t v22 = *(void *)(*(void *)(v6 + 56) + v20);
    *(void *)(*(void *)(v8 + 48) + v2sub_1AD3829D8(_, viewForHeaderInSection, 0) = v21;
    *(void *)(*(void *)(v8 + 56) + v2sub_1AD3829D8(_, viewForHeaderInSection, 0) = v22;
    id v23 = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v17) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v10 + 8 * v26);
  if (v25)
  {
    int64_t v13 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v10 + 8 * v13);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1AD392A0C()
{
  uint64_t v1 = v0;
  sub_1AD1EBB1C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1AD7408F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1AD392B94(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AD200FF8(0, (unint64_t *)&qword_1EB739180);
  char v37 = a2;
  uint64_t v6 = sub_1AD740900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1AD740CF0();
    sub_1AD73F2B0();
    uint64_t result = sub_1AD740D40();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1AD392EBC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AD200FF8(0, (unint64_t *)&unk_1E9A2FA10);
  char v37 = a2;
  uint64_t v6 = sub_1AD740900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1AD740CF0();
    sub_1AD73F2B0();
    uint64_t result = sub_1AD740D40();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1AD3931E4(uint64_t a1, char a2)
{
  return sub_1AD395B48(a1, a2, &qword_1E9A2D1B8, &qword_1E9A2A988, 0x1E4F28B50, (unint64_t *)&qword_1E9A2BA58);
}

uint64_t sub_1AD393208(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AD200FF8(0, &qword_1EB741788);
  char v38 = a2;
  uint64_t v6 = sub_1AD740900();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v37 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v36) {
          goto LABEL_33;
        }
        unint64_t v23 = v37[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v23 = v37[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v38)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v37 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v23 = v37[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 48 * v21;
      uint64_t v33 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 8);
      long long v39 = *(_OWORD *)(v32 + 16);
      long long v40 = *(_OWORD *)(v32 + 32);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1AD740CF0();
      sub_1AD73F2B0();
      uint64_t result = sub_1AD740D40();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 48 * v17;
      *(void *)uint64_t v19 = v33;
      *(void *)(v19 + 8) = v34;
      *(_OWORD *)(v19 + 16) = v39;
      *(_OWORD *)(v19 + 32) = v40;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1AD39356C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AD200FF8(0, (unint64_t *)&qword_1EB741460);
  char v6 = a2;
  uint64_t v7 = sub_1AD740900();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v35 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v14 << 6);
      }
      else
      {
        int64_t v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v19 >= v34) {
          goto LABEL_34;
        }
        unint64_t v20 = v35[v19];
        ++v14;
        if (!v20)
        {
          int64_t v14 = v19 + 1;
          if (v19 + 1 >= v34) {
            goto LABEL_34;
          }
          unint64_t v20 = v35[v14];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v34)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v35 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v20 = v35[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v14 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v14 >= v34) {
                  goto LABEL_34;
                }
                unint64_t v20 = v35[v14];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v14 = v21;
          }
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      int64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v24 = *v22;
      uint64_t v23 = v22[1];
      char v25 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v18);
      if (v6)
      {
        sub_1AD1F5614(v25, v36);
      }
      else
      {
        sub_1AD1F63A8((uint64_t)v25, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_1AD740CF0();
      sub_1AD73F2B0();
      uint64_t result = sub_1AD740D40();
      uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      unint64_t v16 = (void *)(*(void *)(v8 + 48) + 16 * v15);
      *unint64_t v16 = v24;
      v16[1] = v23;
      uint64_t result = (uint64_t)sub_1AD1F5614(v36, (_OWORD *)(*(void *)(v8 + 56) + 32 * v15));
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v8;
  return result;
}

uint64_t sub_1AD393890(uint64_t a1, char a2)
{
  return sub_1AD1FEDE0(a1, a2, (unint64_t *)&qword_1E9A2A9A8, &qword_1E9A2A9B0, (uint64_t)&type metadata for ConfirmDetailsSection.Row.CorrelatedItem);
}

uint64_t sub_1AD3938AC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AD200FF8(0, (unint64_t *)&qword_1EB73F8A0);
  uint64_t v6 = sub_1AD740900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_1AD1F5614((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1AD25A474(v25, (uint64_t)&v38);
      sub_1AD1F63A8(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_1AD7405E0();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_1AD1F5614(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1AD393BE4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AD259D20();
  uint64_t v6 = sub_1AD740900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    char v31 = *(void **)(*(void *)(v5 + 48) + v30);
    unint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_1AD740040();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1AD393EB4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AD25A374();
  char v35 = a2;
  uint64_t v6 = sub_1AD740900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    unint64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    int64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_1AD1F5614(v22, v36);
    }
    else
    {
      sub_1AD1F63A8((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    sub_1AD740CF0();
    sub_1AD73F2B0();
    uint64_t v24 = sub_1AD740D40();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_1AD1F5614(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1AD3941EC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AD39AE00(0, &qword_1E9A2A9B8, (void (*)(uint64_t))sub_1AD25A65C);
  char v36 = a2;
  uint64_t v6 = sub_1AD740900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1AD740CF0();
    sub_1AD73F2B0();
    uint64_t result = sub_1AD740D40();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1AD39451C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AD39AE00(0, (unint64_t *)&qword_1E9A2F990, type metadata accessor for HKSharingReachabilityStatus);
  char v37 = a2;
  uint64_t v6 = sub_1AD740900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1AD740CF0();
    sub_1AD73F2B0();
    uint64_t result = sub_1AD740D40();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1AD394840(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent(0);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1AD39AE00(0, &qword_1E9A2D1B0, (void (*)(uint64_t))type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
  int v43 = a2;
  uint64_t v9 = sub_1AD740900();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  char v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  long long v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    unint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    unint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_1AD39A160(v30, (uint64_t)v7);
    }
    else
    {
      sub_1AD39AD38(v30, (uint64_t)v7, type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent);
      swift_bridgeObjectRetain();
    }
    sub_1AD740CF0();
    sub_1AD73F2B0();
    uint64_t result = sub_1AD740D40();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *unint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_1AD39A160((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_1AD394C10(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = sub_1AD73A600();
  uint64_t v5 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1AD39A1C4();
  int v42 = a2;
  uint64_t v9 = sub_1AD740900();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v38 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    int64_t v40 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v39 = (unint64_t)(v11 + 63) >> 6;
    char v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v15 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v16 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v39) {
          goto LABEL_34;
        }
        unint64_t v23 = v40[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v23 = v40[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v42)
              {
                uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
                if (v37 >= 64) {
                  bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v40 = -1 << v37;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v23 = v40[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v14 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      int64_t v25 = *(void **)(*(void *)(v8 + 48) + 8 * v21);
      uint64_t v26 = v5;
      uint64_t v27 = *(void *)(v5 + 72);
      unint64_t v28 = *(void *)(v8 + 56) + v27 * v21;
      if (v42)
      {
        (*v15)(v7, v28, v43);
      }
      else
      {
        (*v41)(v7, v28, v43);
        id v29 = v25;
      }
      uint64_t result = sub_1AD740040();
      uint64_t v30 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v31 = result & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v33 = 0;
        unint64_t v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v35 = v32 == v34;
          if (v32 == v34) {
            unint64_t v32 = 0;
          }
          v33 |= v35;
          uint64_t v36 = *(void *)(v16 + 8 * v32);
        }
        while (v36 == -1);
        unint64_t v19 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(void *)(*(void *)(v10 + 48) + 8 * v19) = v25;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v15)(*(void *)(v10 + 56) + v27 * v19, v7, v43);
      ++*(void *)(v10 + 16);
      uint64_t v5 = v26;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_1AD394FC0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AD39A270();
  uint64_t v6 = sub_1AD740900();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    BOOL v35 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v15 << 6);
      }
      else
      {
        int64_t v23 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v23 >= v12) {
          goto LABEL_33;
        }
        unint64_t v24 = v9[v23];
        ++v15;
        if (!v24)
        {
          int64_t v15 = v23 + 1;
          if (v23 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v24 = v9[v15];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v12)
            {
LABEL_33:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v35;
                goto LABEL_40;
              }
              uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
              if (v34 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v34;
              }
              uint64_t v3 = v35;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v24 = v9[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v15 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_42;
                }
                if (v15 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v24 = v9[v15];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v15 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v15 << 6);
      }
      uint64_t v30 = 8 * v22;
      unint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
      uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
      if ((a2 & 1) == 0) {
        id v33 = v31;
      }
      uint64_t result = sub_1AD740040();
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v28 = v18 == v27;
          if (v18 == v27) {
            unint64_t v18 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v13 + 8 * v18);
        }
        while (v29 == -1);
        unint64_t v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t v20 = 8 * v19;
      *(void *)(*(void *)(v7 + 48) + v2sub_1AD3829D8(_, viewForHeaderInSection, 0) = v31;
      *(void *)(*(void *)(v7 + 56) + v2sub_1AD3829D8(_, viewForHeaderInSection, 0) = v32;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1AD39528C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AD39AE64();
  uint64_t result = sub_1AD740900();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = v3;
    int64_t v35 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v35);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void **)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        id v31 = v30;
      }
      uint64_t result = sub_1AD740CE0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1AD39553C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AD259C50();
  char v37 = a2;
  uint64_t v6 = sub_1AD740900();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v34 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35) {
          goto LABEL_33;
        }
        unint64_t v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v23 = v36[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v34;
              if (v37)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v23 = v36[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void **)(*(void *)(v5 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v5 + 56) + v29);
      if ((v37 & 1) == 0)
      {
        id v32 = v30;
        swift_bridgeObjectRetain();
      }
      _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
      sub_1AD740CF0();
      sub_1AD73F2B0();
      uint64_t v14 = sub_1AD740D40();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v7 + 48) + v19) = v30;
      *(void *)(*(void *)(v7 + 56) + v19) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1AD395858(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1AD39AF40();
  uint64_t v6 = sub_1AD740900();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0) {
      id v33 = v31;
    }
    uint64_t result = sub_1AD740040();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1AD395B24(uint64_t a1, char a2)
{
  return sub_1AD395B48(a1, a2, &qword_1E9A2D1C8, (unint64_t *)&qword_1EB7412F0, 0x1E4F67AA8, &qword_1E9A2D1D0);
}

uint64_t sub_1AD395B48(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  uint64_t v7 = v6;
  uint64_t v9 = *v6;
  sub_1AD39A30C(0, a3, a4, a5, a6);
  uint64_t v10 = sub_1AD740900();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_40;
  }
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  int64_t v39 = v6;
  uint64_t v40 = v9 + 64;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & *(void *)(v9 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v24 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v25 = v24 | (v18 << 6);
      goto LABEL_31;
    }
    int64_t v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v15) {
      break;
    }
    unint64_t v27 = (void *)(v9 + 64);
    unint64_t v28 = *(void *)(v40 + 8 * v26);
    ++v18;
    if (!v28)
    {
      int64_t v18 = v26 + 1;
      if (v26 + 1 >= v15) {
        goto LABEL_33;
      }
      unint64_t v28 = *(void *)(v40 + 8 * v18);
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v15)
        {
LABEL_33:
          swift_release();
          uint64_t v7 = v39;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v28 = *(void *)(v40 + 8 * v29);
        if (!v28)
        {
          while (1)
          {
            int64_t v18 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_42;
            }
            if (v18 >= v15) {
              goto LABEL_33;
            }
            unint64_t v28 = *(void *)(v40 + 8 * v18);
            ++v29;
            if (v28) {
              goto LABEL_30;
            }
          }
        }
        int64_t v18 = v29;
      }
    }
LABEL_30:
    unint64_t v14 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v18 << 6);
LABEL_31:
    uint64_t v34 = 8 * v25;
    int64_t v35 = *(void **)(*(void *)(v9 + 48) + v34);
    uint64_t v36 = *(void *)(*(void *)(v9 + 56) + v34);
    if ((a2 & 1) == 0)
    {
      id v37 = v35;
      swift_bridgeObjectRetain();
    }
    uint64_t result = sub_1AD740040();
    uint64_t v19 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v16 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v16 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v32 = v21 == v31;
        if (v21 == v31) {
          unint64_t v21 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v16 + 8 * v21);
      }
      while (v33 == -1);
      unint64_t v22 = __clz(__rbit64(~v33)) + (v21 << 6);
    }
    *(void *)(v16 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    uint64_t v23 = 8 * v22;
    *(void *)(*(void *)(v11 + 48) + v23) = v35;
    *(void *)(*(void *)(v11 + 56) + v23) = v36;
    ++*(void *)(v11 + 16);
  }
  swift_release();
  uint64_t v7 = v39;
  unint64_t v27 = (void *)(v9 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v9 + 32);
  if (v38 >= 64) {
    bzero(v27, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v27 = -1 << v38;
  }
  *(void *)(v9 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v7 = v11;
  return result;
}

unint64_t sub_1AD395E2C(uint64_t a1, void *a2, double a3, double a4)
{
  sub_1AD740CF0();
  sub_1AD740D30();
  sub_1AD740D30();
  sub_1AD740D40();
  unint64_t result = sub_1AD740510();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  uint64_t v9 = (double *)(a2[6] + 16 * result);
  *uint64_t v9 = a3;
  v9[1] = a4;
  *(void *)(a2[7] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_1AD395F08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1AD20F694(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1AD390298();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_1AD3967C4(v6, v9);
  uint64_t *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1AD395FF0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1AD20F694(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v17 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1AD390638();
      uint64_t v11 = v17;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56) + 48 * v8;
    uint64_t v13 = *(void *)(v12 + 32);
    uint64_t v14 = *(void *)(v12 + 40);
    long long v15 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v12;
    *(_OWORD *)(a3 + 16) = v15;
    *(void *)(a3 + 32) = v13;
    *(void *)(a3 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v14;
    sub_1AD39699C(v8, v11);
    uint64_t *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

uint64_t sub_1AD396104(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1AD20F694(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 2;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1AD39085C();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v9 + 56) + v6);
  sub_1AD396B88(v6, v9);
  uint64_t *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1AD3961D4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1AD259504(a1);
  LOBYTE(asub_1AD3829D8(_, viewForFooterInSection, 1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1AD391028();
      uint64_t v9 = v11;
    }
    sub_1AD25A4D0(*(void *)(v9 + 48) + 40 * v6);
    sub_1AD1F5614((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1AD396F38(v6, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_1AD3962D0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1AD1F65C0(a1);
  LOBYTE(asub_1AD3829D8(_, viewForFooterInSection, 1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1AD3913D4();
      uint64_t v9 = v11;
    }

    sub_1AD1F5614((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1AD397104(v6, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1AD3963C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1AD20F694(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1AD391AD4();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1AD39A160(v12 + *(void *)(v20 + 72) * v8, a3);
    sub_1AD3972F8(v8, v11);
    uint64_t *v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_1AD396558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1AD259714(a1);
  LOBYTE(asub_1AD3829D8(_, viewForFooterInSection, 1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1AD391D6C();
      uint64_t v9 = v19;
    }

    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = sub_1AD73A600();
    uint64_t v18 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 32))(a2, v10 + *(void *)(v18 + 72) * v6, v11);
    sub_1AD397508(v6, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = sub_1AD73A600();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }
  return v12(v13, v14, 1, v15);
}

uint64_t sub_1AD3966F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1AD20F694(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1AD392198();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1AD3976F4(v6, v9);
  uint64_t *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1AD3967C4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1AD740500();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1AD740CF0();
        swift_bridgeObjectRetain();
        sub_1AD73F2B0();
        uint64_t v9 = sub_1AD740D40();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1AD39699C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1AD740500();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1AD740CF0();
        swift_bridgeObjectRetain();
        sub_1AD73F2B0();
        uint64_t v11 = sub_1AD740D40();
        double result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            _OWORD *v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          uint64_t v17 = (long long *)(v16 + 48 * v3);
          uint64_t v18 = (long long *)(v16 + 48 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= v18 + 3))
          {
            long long v9 = *v18;
            long long v10 = v18[2];
            v17[1] = v18[1];
            void v17[2] = v10;
            *uint64_t v17 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1AD396B88(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1AD740500();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1AD740CF0();
        swift_bridgeObjectRetain();
        sub_1AD73F2B0();
        uint64_t v9 = sub_1AD740D40();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (unsigned char *)(v14 + v3);
          uint64_t v16 = (unsigned char *)(v14 + v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1AD396D60(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1AD740500();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1AD740CF0();
        swift_bridgeObjectRetain();
        sub_1AD73F2B0();
        uint64_t v10 = sub_1AD740D40();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1AD396F38(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1AD740500();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1AD25A474(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        uint64_t v10 = sub_1AD7405E0();
        double result = sub_1AD25A4D0((uint64_t)v28);
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = *(void *)(a2 + 48);
            unint64_t v15 = v14 + 40 * v3;
            uint64_t v16 = (long long *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              long long v17 = *v16;
              long long v18 = v16[1];
              *(void *)(v15 + 32) = *((void *)v16 + 4);
              *(_OWORD *)unint64_t v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (_OWORD *)(v19 + 32 * v3);
            uint64_t v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 2))
            {
              long long v9 = v21[1];
              *uint64_t v20 = *v21;
              v20[1] = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  uint64_t *v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1AD397104(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1AD740500();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v10 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
        sub_1AD740CF0();
        id v11 = v10;
        sub_1AD73F2B0();
        uint64_t v12 = sub_1AD740D40();

        double result = swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *unint64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          long long v18 = (_OWORD *)(v17 + 32 * v3);
          uint64_t v19 = (_OWORD *)(v17 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 2))
          {
            long long v9 = v19[1];
            *long long v18 = *v19;
            v18[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1AD3972F8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1AD740500();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_1AD740CF0();
        swift_bridgeObjectRetain();
        sub_1AD73F2B0();
        uint64_t v9 = sub_1AD740D40();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent(0)
                                    - 8)
                        + 72);
        int64_t v16 = v15 * v3;
        double result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          double result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          double result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1AD397508(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1AD740500();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_1AD740040();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 < v9 || v3 < (uint64_t)v12) {
            goto LABEL_6;
          }
        }
        else if (v12 < v9 && v3 < (uint64_t)v12)
        {
          goto LABEL_6;
        }
        uint64_t v15 = *(void *)(a2 + 48);
        int64_t v16 = (void *)(v15 + 8 * v3);
        int64_t v17 = (void *)(v15 + 8 * v6);
        if (v3 != v6 || v16 >= v17 + 1) {
          *int64_t v16 = *v17;
        }
        uint64_t v18 = *(void *)(a2 + 56);
        uint64_t v19 = *(void *)(*(void *)(sub_1AD73A600() - 8) + 72);
        int64_t v20 = v19 * v3;
        unint64_t v21 = v18 + v19 * v3;
        int64_t v22 = v19 * v6;
        unint64_t v23 = v18 + v19 * v6 + v19;
        if (v20 < v22 || v21 >= v23)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v20 == v22) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1AD3976F4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1AD740500();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1AD740CF0();
        swift_bridgeObjectRetain();
        sub_1AD73F2B0();
        uint64_t v9 = sub_1AD740D40();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          int64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1AD3978CC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1AD740500();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        double result = sub_1AD740CE0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              void *v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            int64_t v16 = (void *)(v15 + 8 * v3);
            int64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *int64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1AD397A64(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1AD740500();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1AD740CF0();
        sub_1AD73F2B0();
        swift_bridgeObjectRelease();
        double result = sub_1AD740D40();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          unint64_t v11 = (unsigned char *)(v10 + v3);
          unint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *unint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (unsigned char *)(v13 + v3);
          uint64_t v15 = (unsigned char *)(v13 + v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            unsigned char *v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *int64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1AD397C78(unint64_t result, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  *(unsigned char *)(a5[7] + result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_1AD397CC0(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

_OWORD *sub_1AD397D08(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  BOOL v6 = (void *)(a5[6] + 16 * a1);
  void *v6 = a2;
  v6[1] = a3;
  double result = sub_1AD1F5614(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_1AD397D74(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  double result = sub_1AD1F5614(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

_OWORD *sub_1AD397DF0(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * asub_1AD3829D8(_, viewForFooterInSection, 1) = a2;
  double result = sub_1AD1F5614(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_1AD397E58(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  void *v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent(0);
  uint64_t result = sub_1AD39A160(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_1AD397EF0(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * asub_1AD3829D8(_, viewForFooterInSection, 1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_1AD73A600();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

unint64_t sub_1AD397F9C(unint64_t result, uint64_t a2, void *a3, double a4)
{
  a3[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a3[6] + v4) = a2;
  *(double *)(a3[7] + v4) = a4;
  uint64_t v5 = a3[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a3[2] = v7;
  }
  return result;
}

unint64_t sub_1AD397FE4(unint64_t result, char a2, char a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(unsigned char *)(a4[7] + result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t sub_1AD398028(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1AD3981B0((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1AD3981B0((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1B3E68450](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1AD3981B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  uint64_t v57 = (unint64_t *)result;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v58 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v59 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v61 = 0;
    uint64_t v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          int64_t v62 = v6;
          unint64_t v12 = v11 | (v6 << 6);
        }
        else
        {
          int64_t v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59) {
            goto LABEL_79;
          }
          unint64_t v14 = *(void *)(v58 + 8 * v13);
          int64_t v15 = v6 + 1;
          if (!v14)
          {
            int64_t v15 = v6 + 2;
            if (v6 + 2 >= v59) {
              goto LABEL_79;
            }
            unint64_t v14 = *(void *)(v58 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v6 + 3;
              if (v6 + 3 >= v59) {
                goto LABEL_79;
              }
              unint64_t v14 = *(void *)(v58 + 8 * v15);
              if (!v14)
              {
                uint64_t v16 = v6 + 4;
                if (v6 + 4 >= v59) {
                  goto LABEL_79;
                }
                unint64_t v14 = *(void *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_83;
                    }
                    if (v15 >= v59) {
                      goto LABEL_79;
                    }
                    unint64_t v14 = *(void *)(v58 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_22;
                    }
                  }
                }
                int64_t v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          unint64_t v9 = (v14 - 1) & v14;
          int64_t v62 = v15;
          unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
        uint64_t v19 = *v17;
        uint64_t v18 = v17[1];
        sub_1AD740CF0();
        swift_bridgeObjectRetain();
        sub_1AD73F2B0();
        uint64_t v20 = sub_1AD740D40();
        uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v22 = v20 & ~v21;
        unint64_t v23 = v22 >> 6;
        uint64_t v24 = 1 << v22;
        if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) != 0) {
          break;
        }
LABEL_6:
        uint64_t result = swift_bridgeObjectRelease();
        int64_t v6 = v62;
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v25 = *(void *)(a3 + 48);
      uint64_t v26 = (void *)(v25 + 16 * v22);
      BOOL v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_1AD740BC0() & 1) == 0)
      {
        uint64_t v28 = ~v21;
        for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & v28;
          if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
            break;
          }
          unint64_t v31 = (void *)(v25 + 16 * v30);
          BOOL v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_1AD740BC0() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v23 = v30 >> 6;
            uint64_t v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      v57[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_82;
      }
    }
  }
  int64_t v34 = 0;
  uint64_t v60 = a3 + 56;
  uint64_t v61 = 0;
  uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  else {
    uint64_t v36 = -1;
  }
  unint64_t v37 = v36 & *(void *)(a3 + 56);
  int64_t v63 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      unint64_t v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    int64_t v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      int64_t v34 = v41 + 1;
      if (v41 + 1 >= v63) {
        goto LABEL_79;
      }
      unint64_t v42 = *(void *)(v60 + 8 * v34);
      if (!v42)
      {
        int64_t v34 = v41 + 2;
        if (v41 + 2 >= v63) {
          goto LABEL_79;
        }
        unint64_t v42 = *(void *)(v60 + 8 * v34);
        if (!v42) {
          break;
        }
      }
    }
LABEL_62:
    unint64_t v37 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    uint64_t v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    sub_1AD740CF0();
    swift_bridgeObjectRetain();
    sub_1AD73F2B0();
    uint64_t v47 = sub_1AD740D40();
    uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v49 = v47 & ~v48;
    if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v50 = *(void *)(a4 + 48);
    uint64_t v51 = (void *)(v50 + 16 * v49);
    BOOL v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_1AD740BC0() & 1) != 0)
    {
LABEL_76:
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_1AD597D2C(v57, a2, v61, v5);
      }
    }
    else
    {
      uint64_t v53 = ~v48;
      while (1)
      {
        unint64_t v49 = (v49 + 1) & v53;
        if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
          break;
        }
        uint64_t v54 = (void *)(v50 + 16 * v49);
        BOOL v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_1AD740BC0() & 1) != 0) {
          goto LABEL_76;
        }
      }
LABEL_46:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  int64_t v43 = v41 + 3;
  if (v43 >= v63) {
    goto LABEL_79;
  }
  unint64_t v42 = *(void *)(v60 + 8 * v43);
  if (v42)
  {
    int64_t v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    int64_t v34 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v34 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v34);
    ++v43;
    if (v42) {
      goto LABEL_62;
    }
  }
LABEL_84:
  __break(1u);
  return result;
}

void (*sub_1AD3986F0(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  int64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1AD3989CC(v6);
  v6[10] = sub_1AD398810(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1AD39879C;
}

void sub_1AD39879C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_1AD398810(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  uint64_t v10 = malloc(0x58uLL);
  *a1 = v10;
  v10[7] = a3;
  v10[8] = v4;
  v10[6] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_1AD20F694(a2, a3);
  *((unsigned char *)v10 + 8sub_1AD3829D8(_, viewForHeaderInSection, 0) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[9] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v5 + 56) + 48 * v13;
        long long v20 = *(_OWORD *)v19;
        long long v21 = *(_OWORD *)(v19 + 16);
        uint64_t v22 = *(void *)(v19 + 32);
        uint64_t v23 = *(void *)(v19 + 40);
LABEL_12:
        *(_OWORD *)uint64_t v10 = v20;
        *((_OWORD *)v10 + sub_1AD3829D8(_, viewForFooterInSection, 1) = v21;
        void v10[4] = v22;
        void v10[5] = v23;
        return sub_1AD398974;
      }
LABEL_11:
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      long long v20 = 0uLL;
      long long v21 = 0uLL;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1AD390638();
      goto LABEL_7;
    }
    sub_1AD1FE968(v16, a4 & 1);
    unint64_t v24 = sub_1AD20F694(a2, a3);
    if ((v17 & 1) == (v25 & 1))
    {
      unint64_t v13 = v24;
      v10[9] = v24;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))sub_1AD740C30();
  __break(1u);
  return result;
}

void sub_1AD398974(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_1AD398A08(*a1, *((unsigned char *)*a1 + 80), (uint64_t *)(*a1)[8], (*a1)[9], (*a1)[6], (*a1)[7]);
  sub_1AD3998A8(*v1, v1[1], v1[2]);
  free(v1);
}

uint64_t (*sub_1AD3989CC(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1AD3989FC;
}

uint64_t sub_1AD3989FC(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t *sub_1AD398A08(uint64_t *result, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *result;
  uint64_t v9 = result[1];
  uint64_t v10 = result[2];
  uint64_t v11 = result[3];
  uint64_t v12 = result[4];
  uint64_t v13 = result[5];
  if (v10)
  {
    uint64_t v14 = (void *)*a3;
    if (a2)
    {
      BOOL v15 = (uint64_t *)(v14[7] + 48 * a4);
      *BOOL v15 = v8;
      v15[1] = v9;
      objc_super v15[2] = v10;
      v15[3] = v11;
      v15[4] = v12;
      void v15[5] = v13;
    }
    else
    {
      v14[(a4 >> 6) + 8] |= 1 << a4;
      uint64_t v16 = (void *)(v14[6] + 16 * a4);
      *uint64_t v16 = a5;
      v16[1] = a6;
      char v17 = (uint64_t *)(v14[7] + 48 * a4);
      *char v17 = v8;
      v17[1] = v9;
      void v17[2] = v10;
      void v17[3] = v11;
      v17[4] = v12;
      v17[5] = v13;
      uint64_t v18 = v14[2];
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19)
      {
        __break(1u);
        return result;
      }
      long long v14[2] = v20;
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1AD39699C(a4, *a3);
  }
  return (uint64_t *)sub_1AD39AEDC(v8, v9, v10);
}

void *sub_1AD398B30(void *a1)
{
  return sub_1AD51BBA4(0, a1[2], 0, a1);
}

uint64_t sub_1AD398B44(unint64_t a1)
{
  return sub_1AD51BF1C(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1AD398B58(void *a1)
{
  return sub_1AD1FE01C(0, a1[2], 0, a1);
}

uint64_t sub_1AD398B6C(unint64_t a1)
{
  return sub_1AD51C0A8(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1AD398B80(void *a1)
{
  return sub_1AD51C744(0, a1[2], 0, a1);
}

void *sub_1AD398B94(void *a1)
{
  return sub_1AD51C76C(0, a1[2], 0, a1);
}

void *sub_1AD398BA8(void *a1)
{
  return sub_1AD51BF64(0, a1[2], 0, a1);
}

void *sub_1AD398BBC(void *a1)
{
  return sub_1AD51CAC4(0, a1[2], 0, a1);
}

void *sub_1AD398BD0(void *a1)
{
  return sub_1AD51DA50(0, a1[2], 0, a1);
}

void *sub_1AD398BE4(void *a1)
{
  return sub_1AD51DB80(0, a1[2], 0, a1);
}

void *sub_1AD398BF8(void *a1)
{
  return sub_1AD51DCB0(0, a1[2], 0, a1);
}

void sub_1AD398C0C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1AD7408D0();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1B3E66A00);
}

uint64_t sub_1AD398C88(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = a4;
  uint64_t v85 = a2;
  uint64_t v84 = a1;
  uint64_t v78 = *a4;
  uint64_t v10 = sub_1AD73A670();
  uint64_t v77 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1AD73CBA0();
  uint64_t v80 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v79 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD20F2BC(0, (unint64_t *)&qword_1EB738C20, MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FB0FF8]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  BOOL v19 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  long long v21 = (char *)&v76 - v20;
  v93[3] = a5;
  v93[4] = a6;
  uint64_t v82 = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v93);
  uint64_t v23 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16);
  uint64_t v83 = boxed_opaque_existential_1;
  uint64_t v24 = v84;
  uint64_t v84 = a5;
  v23(boxed_opaque_existential_1, v24, a5);
  unint64_t v25 = a3;
  if (!a3)
  {
    uint64_t v26 = v12;
    uint64_t v85 = v10;
    BOOL v27 = v8;
    uint64_t v28 = (char *)v8 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v28, v15);
    uint64_t v29 = sub_1AD73D260();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    uint64_t v30 = *(void *)(v29 + 16);
    if (!v30)
    {
      swift_bridgeObjectRelease();
      sub_1AD208614(0, (unint64_t *)&qword_1EB73F8D0, (unint64_t *)&qword_1EB73E870, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
      uint64_t v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = xmmword_1AD74C370;
      sub_1AD1FFE38((uint64_t)v93, v69 + 32);
      sub_1AD73A660();
      uint64_t v70 = sub_1AD73A620();
      uint64_t v72 = v71;
      (*(void (**)(char *, uint64_t))(v77 + 8))(v26, v85);
      sub_1AD1FBD54(MEMORY[0x1E4FBC860]);
      uint64_t v73 = swift_bridgeObjectRetain();
      uint64_t v74 = Array<A>.identifierToIndexDict()(v73);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      long long v86 = 0uLL;
      uint64_t v87 = v69;
      uint64_t v88 = v74;
      uint64_t v89 = v70;
      uint64_t v90 = v72;
      sub_1AD1BECBC(&v86, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
    }
    uint64_t v31 = v29 + 16 * v30;
    unint64_t v25 = *(void *)(v31 + 24);
    uint64_t v85 = *(void *)(v31 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v8 = v27;
  }
  BOOL v32 = (char *)v8 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v32, v15);
  uint64_t v33 = v85;
  *(void *)&long long v86 = v85;
  *((void *)&v86 + sub_1AD3829D8(_, viewForFooterInSection, 1) = v25;
  swift_bridgeObjectRetain();
  sub_1AD73D1E0();
  uint64_t v34 = (uint64_t)v8;
  char v36 = v35;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  if (v36)
  {
    uint64_t v54 = v79;
    sub_1AD73CA80();
    swift_bridgeObjectRetain();
    BOOL v55 = sub_1AD73CB80();
    os_log_type_t v56 = sub_1AD73F920();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      *(void *)&long long v86 = v58;
      *(_DWORD *)uint64_t v57 = 136315650;
      uint64_t v59 = sub_1AD740E30();
      v92[0] = sub_1AD1F62D4(v59, v60, (uint64_t *)&v86);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v57 + 12) = 2080;
      v92[0] = sub_1AD1F62D4(0xD00000000000001DLL, 0x80000001AD77AEF0, (uint64_t *)&v86);
      sub_1AD7403B0();
      *(_WORD *)(v57 + 22) = 2080;
      swift_bridgeObjectRetain();
      v92[0] = sub_1AD1F62D4(v33, v25, (uint64_t *)&v86);
      sub_1AD7403B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AD1A4000, v55, v56, "[%s] %s Failed to append item to given section with id: %s, because it doesn't exist.", (uint8_t *)v57, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v58, -1, -1);
      MEMORY[0x1B3E68450](v57, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v80 + 8))(v54, v81);
  }
  else
  {
    sub_1AD1FDCF8(0, (unint64_t *)&qword_1EB741480, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1AD74C370;
    uint64_t v38 = v84;
    *(void *)(v37 + 32) = sub_1AD73BBD0();
    *(void *)(v37 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v39;
    v92[0] = v33;
    v92[1] = v25;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1AD73D140();
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v81 = v34;
    unint64_t v40 = sub_1AD386D20();
    unint64_t v42 = sub_1AD38F704(v91, v33, v25);
    int64_t v43 = (uint64_t *)(v41 + 16);
    if (*(void *)(v41 + 16))
    {
      uint64_t v44 = v41;
      sub_1AD1FFE38((uint64_t)v93, (uint64_t)&v86);
      uint64_t v45 = (void *)*v43;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *int64_t v43 = (uint64_t)v45;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v45 = sub_1AD1FE01C(0, v45[2] + 1, 1, v45);
        *int64_t v43 = (uint64_t)v45;
      }
      unint64_t v48 = v45[2];
      unint64_t v47 = v45[3];
      if (v48 >= v47 >> 1) {
        *int64_t v43 = (uint64_t)sub_1AD1FE01C((void *)(v47 > 1), v48 + 1, 1, v45);
      }
      uint64_t v49 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v86, v88);
      MEMORY[0x1F4188790](v49);
      uint64_t v51 = (char *)&v76 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v52 + 16))(v51);
      sub_1AD1FAE5C(v48, (uint64_t)v51, v43, v38, v82);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
      uint64_t v53 = Array<A>.identifierToIndexDict()(*(void *)(v44 + 16));
      swift_bridgeObjectRelease();
      *(void *)(v44 + 24) = v53;
      ((void (*)(void *, void))v42)(v91, 0);
      swift_bridgeObjectRelease();
      ((void (*)(void *, void))v40)(v92, 0);
    }
    else
    {
      ((void (*)(void *, void))v42)(v91, 0);
      swift_bridgeObjectRelease();
      ((void (*)(void *, void))v40)(v92, 0);
    }
    uint64_t v61 = sub_1AD73BBD0();
    uint64_t v63 = v62;
    uint64_t v64 = sub_1AD73BBC0();
    uint64_t v66 = v65;
    uint64_t v67 = (void *)(v81 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_currentItemsReuseIdentifiers);
    swift_beginAccess();
    char v68 = swift_isUniquelyReferenced_nonNull_native();
    v92[0] = *v67;
    *uint64_t v67 = 0x8000000000000000;
    sub_1AD200B14(v64, v66, v61, v63, v68);
    *uint64_t v67 = v92[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1AD1B4C88();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
}

uint64_t sub_1AD399718(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SummarySharingSelectableDataTypeItem(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  int64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1AD1ECC64(&qword_1E9A2CF90, (void (*)(uint64_t))type metadata accessor for SummarySharingSelectableDataTypeItem);
  uint64_t result = sub_1AD73F740();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_1AD39AD38(v11, (uint64_t)v6, type metadata accessor for SummarySharingSelectableDataTypeItem);
      sub_1AD379A5C((uint64_t)v8, (uint64_t)v6);
      sub_1AD39ADA0((uint64_t)v8, type metadata accessor for SummarySharingSelectableDataTypeItem);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_1AD3998A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1AD39990C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AD399970()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1AD3999A8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 16);
  *a2 = v4;
  return v4;
}

uint64_t sub_1AD399A0C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_sections);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD399A68@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_animateChanges);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1AD399ABC(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_animateChanges);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = v2;
  return result;
}

uint64_t sub_1AD399B0C()
{
  return type metadata accessor for MutableArrayDataSource();
}

uint64_t method lookup function for MutableArrayDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MutableArrayDataSource);
}

uint64_t dispatch thunk of MutableArrayDataSource.changeObservers.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MutableArrayDataSource.changeObservers.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MutableArrayDataSource.changeObservers.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of MutableArrayDataSource.snapshot.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of MutableArrayDataSource.snapshot.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of MutableArrayDataSource.snapshot.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of MutableArrayDataSource.sections.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of MutableArrayDataSource.arrangedSections.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of MutableArrayDataSource.animateChanges.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of MutableArrayDataSource.animateChanges.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of MutableArrayDataSource.animateChanges.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of MutableArrayDataSource.__allocating_init(arrangedSections:identifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of MutableArrayDataSource.replaceAllSections(with:reconfigureOrReloadItemsIfNeeded:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of MutableArrayDataSource.reconfigureAllItems()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of MutableArrayDataSource.reloadAllSectionsAndSupplementaries()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of MutableArrayDataSource.reloadSection(sectionID:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of MutableArrayDataSource.reloadSection(sectionIndex:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of MutableArrayDataSource.insert(section:index:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of MutableArrayDataSource.insert(section:beforeSection:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of MutableArrayDataSource.insert(section:afterSection:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of MutableArrayDataSource.append(section:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of MutableArrayDataSource.removeSection(identifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of MutableArrayDataSource.removeSection(at:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of MutableArrayDataSource.replaceItemsForSection(sectionID:newItems:reconfigureAndReloadItems:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of MutableArrayDataSource.insert(item:at:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of MutableArrayDataSource.insert(item:beforeItem:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of MutableArrayDataSource.insert(item:afterItem:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of MutableArrayDataSource.append(item:toSectionWithID:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of MutableArrayDataSource.append(item:toSectionIndex:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of MutableArrayDataSource.removeItemAt(indexPath:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of MutableArrayDataSource.removeItem(identifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of MutableArrayDataSource.replace(at:with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of MutableArrayDataSource.reload(item:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of MutableArrayDataSource.sendUpdatedSnapshot()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of MutableArrayDataSource.reuseIdentifierForItem(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of MutableArrayDataSource.item(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t sub_1AD39A0EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1AD37FE60();
  uint64_t result = sub_1AD73F740();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1AD379CF4(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1AD39A160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummarySharingSelectableDataTypeItem.PluginViewModelContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AD39A1C4()
{
  if (!qword_1EB73D2E0)
  {
    sub_1AD73B520();
    sub_1AD73A600();
    sub_1AD1ECC64(&qword_1EB738430, MEMORY[0x1E4F674F8]);
    unint64_t v0 = sub_1AD740930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB73D2E0);
    }
  }
}

void sub_1AD39A270()
{
  if (!qword_1EB73D488)
  {
    sub_1AD73B520();
    sub_1AD1ECC64(&qword_1EB738430, MEMORY[0x1E4F674F8]);
    unint64_t v0 = sub_1AD740930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB73D488);
    }
  }
}

void sub_1AD39A30C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_1AD2147D4(255, a3);
    sub_1AD39990C(255, &qword_1E9A2B718, type metadata accessor for SummarySharingSelectableDataTypeItem, MEMORY[0x1E4FBB320]);
    sub_1AD1F1EE0(a5, a3);
    unint64_t v8 = sub_1AD740930();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1AD39A3E8()
{
  return 16;
}

__n128 sub_1AD39A3F4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1AD39A400(uint64_t a1)
{
  uint64_t v2 = sub_1AD73C730();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  char v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1AD1ECC64(&qword_1E9A2B6E8, MEMORY[0x1E4F66840]);
  uint64_t result = sub_1AD73F740();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1AD379FC4((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1AD39A59C(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1AD7408D0();
    swift_bridgeObjectRelease();
  }
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB741780);
  sub_1AD1F1EE0((unint64_t *)&qword_1EB73D180, (unint64_t *)&qword_1EB741780);
  uint64_t result = sub_1AD73F740();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1AD7408D0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        char v6 = (void *)MEMORY[0x1B3E669F0](i, a1);
        sub_1AD37A2E8(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        unint64_t v8 = *v7++;
        sub_1AD37A2E8(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AD39A710(uint64_t a1)
{
  uint64_t v2 = sub_1AD73ACC0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  char v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1AD1ECC64((unint64_t *)&unk_1E9A2F270, MEMORY[0x1E4F670F8]);
  uint64_t result = sub_1AD73F740();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1AD37A318((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1AD39A8AC(uint64_t a1)
{
  uint64_t v2 = sub_1AD73A4B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v28 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  BOOL v27 = (char *)v21 - v6;
  sub_1AD39990C(0, (unint64_t *)&qword_1EB731C20, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  sub_1AD1ECC64((unint64_t *)&unk_1EB73E798, MEMORY[0x1E4F276F0]);
  uint64_t v29 = sub_1AD73F740();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    unint64_t v25 = v12;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    uint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      BOOL v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_1AD37A92C(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    BOOL v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_1AD39AB7C(uint64_t a1)
{
  uint64_t v2 = sub_1AD73C850();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1AD1ECC64(&qword_1EB73F6D8, MEMORY[0x1E4F675C8]);
  uint64_t result = sub_1AD73F740();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v5, v14, v2);
      sub_1AD37AC50((uint64_t)v8, v5);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1AD39AD20()
{
  return 16;
}

__n128 sub_1AD39AD2C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1AD39AD38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AD39ADA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1AD39AE00(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1AD740930();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1AD39AE64()
{
  if (!qword_1E9A2D1D8)
  {
    sub_1AD2147D4(255, (unint64_t *)&qword_1EB741440);
    unint64_t v0 = sub_1AD740930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2D1D8);
    }
  }
}

uint64_t sub_1AD39AEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1AD39AF40()
{
  if (!qword_1E9A2D1E8)
  {
    sub_1AD2147D4(255, (unint64_t *)&qword_1EB7412F0);
    sub_1AD1F1EE0(&qword_1E9A2D1D0, (unint64_t *)&qword_1EB7412F0);
    unint64_t v0 = sub_1AD740930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2D1E8);
    }
  }
}

uint64_t ButtonCollectionViewItem.reuseIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ButtonCollectionViewItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ButtonCollectionViewItem.reuseIdentifier.modify())(void, void)
{
  return nullsub_1;
}

unint64_t ButtonCollectionViewItem.uniqueIdentifier.getter()
{
  return 0xD000000000000019;
}

uint64_t ButtonCollectionViewItem.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ButtonCollectionViewItem.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = a2;
  return result;
}

uint64_t (*ButtonCollectionViewItem.title.modify())(void, void)
{
  return nullsub_1;
}

void *ButtonCollectionViewItem.image.getter()
{
  uint64_t v1 = *(void **)(v0 + 48);
  id v2 = v1;
  return v1;
}

void ButtonCollectionViewItem.image.setter(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
}

uint64_t (*ButtonCollectionViewItem.image.modify())(void, void)
{
  return nullsub_1;
}

uint64_t ButtonCollectionViewItem.isEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t ButtonCollectionViewItem.isEnabled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

uint64_t (*ButtonCollectionViewItem.isEnabled.modify())(void, void)
{
  return nullsub_1;
}

uint64_t sub_1AD39B200@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1AD39E904;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_1AD21485C(v3);
}

uint64_t sub_1AD39B280(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1AD35B5AC;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void *)(a2 + 64);
  sub_1AD21485C(v3);
  uint64_t result = sub_1AD1E4514(v7);
  *(void *)(a2 + 64) = v6;
  *(void *)(a2 + 72) = v5;
  return result;
}

uint64_t ButtonCollectionViewItem.buttonTapAction.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_1AD21485C(v1);
  return v1;
}

uint64_t ButtonCollectionViewItem.buttonTapAction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1AD1E4514(*(void *)(v2 + 64));
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*ButtonCollectionViewItem.buttonTapAction.modify())(void, void)
{
  return nullsub_1;
}

uint64_t ButtonCollectionViewItem.isContextMenuPrimaryAction.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t ButtonCollectionViewItem.isContextMenuPrimaryAction.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8sub_1AD3829D8(_, viewForHeaderInSection, 0) = result;
  return result;
}

uint64_t (*ButtonCollectionViewItem.isContextMenuPrimaryAction.modify())(void, void)
{
  return nullsub_1;
}

uint64_t ButtonCollectionViewItem.isFullWidthButton.getter()
{
  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t ButtonCollectionViewItem.isFullWidthButton.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8sub_1AD3829D8(_, viewForFooterInSection, 1) = result;
  return result;
}

uint64_t (*ButtonCollectionViewItem.isFullWidthButton.modify())(void, void)
{
  return nullsub_1;
}

uint64_t sub_1AD39B408@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 96);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1AD39E8D0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_1AD21485C(v3);
}

uint64_t sub_1AD39B488(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1AD39E890;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void *)(a2 + 88);
  sub_1AD21485C(v3);
  uint64_t result = sub_1AD1E4514(v7);
  *(void *)(a2 + 88) = v6;
  *(void *)(a2 + 96) = v5;
  return result;
}

uint64_t ButtonCollectionViewItem.makeContextMenu.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  sub_1AD21485C(v1);
  return v1;
}

uint64_t ButtonCollectionViewItem.makeContextMenu.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1AD1E4514(*(void *)(v2 + 88));
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t (*ButtonCollectionViewItem.makeContextMenu.modify())(void, void)
{
  return nullsub_1;
}

uint64_t ButtonCollectionViewItem.init(identifier:title:image:isEnabled:buttonTapAction:isContextMenuPrimaryAction:makeContextMenu:isFullWidthButton:reuseIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)a9 = a14;
  *(void *)(a9 + 8) = a15;
  *(void *)(a9 + 16) = result;
  *(void *)(a9 + 24) = a2;
  *(void *)(a9 + 32) = a3;
  *(void *)(a9 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = a4;
  *(void *)(a9 + 48) = a5;
  *(unsigned char *)(a9 + 56) = a6;
  *(void *)(a9 + 64) = a7;
  *(void *)(a9 + 72) = a8;
  *(unsigned char *)(a9 + 8sub_1AD3829D8(_, viewForHeaderInSection, 0) = a10;
  *(unsigned char *)(a9 + 8sub_1AD3829D8(_, viewForFooterInSection, 1) = a13;
  *(void *)(a9 + 88) = a11;
  *(void *)(a9 + 96) = a12;
  return result;
}

unint64_t sub_1AD39B5E8()
{
  return 0xD000000000000019;
}

uint64_t sub_1AD39B658()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_parentViewController;
  swift_beginAccess();
  return MEMORY[0x1B3E68580](v1);
}

void sub_1AD39B6A4(void *a1)
{
}

void (*sub_1AD39B6FC(void *a1))(id **, char)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_parentViewController;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1B3E68580](v5);
  return sub_1AD351928;
}

uint64_t sub_1AD39B780(uint64_t a1, void **a2)
{
  sub_1AD207CB4(a1, (uint64_t)v7, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
  uint64_t v3 = *a2;
  uint64_t v4 = (uint64_t)*a2 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_item;
  swift_beginAccess();
  sub_1AD205C2C((uint64_t)v7, v4);
  uint64_t v5 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x160))(v5);
  return sub_1AD207168((uint64_t)v7, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
}

uint64_t sub_1AD39B86C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_item;
  swift_beginAccess();
  return sub_1AD207CB4(v3, a1, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
}

uint64_t sub_1AD39B8DC(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_item;
  swift_beginAccess();
  sub_1AD205C2C(a1, v3);
  uint64_t v4 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x160))(v4);
  return sub_1AD207168(a1, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
}

uint64_t (*sub_1AD39B9AC(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1AD39BA0C;
}

uint64_t sub_1AD39BA0C(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **(void **)(a1 + 24)) + 0x160))(result);
  }
  return result;
}

id sub_1AD39BA78()
{
  uint64_t v1 = OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell____lazy_storage___button;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell____lazy_storage___button);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell____lazy_storage___button);
  }
  else
  {
    uint64_t v4 = v0;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = (void *)(*(uint64_t (**)(void))(ObjectType + 384))();
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v4 + vsub_1AD3829D8(_, viewForFooterInSection, 1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1AD39BAF8()
{
  return sub_1AD2E8C2C((SEL *)&selRef_systemBlueColor);
}

id sub_1AD39BB04()
{
  return sub_1AD2E8C2C((SEL *)&selRef_systemWhiteColor);
}

uint64_t sub_1AD39BB10()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_isFullWidthButton);
  swift_beginAccess();
  return *v1;
}

void sub_1AD39BB58(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_isFullWidthButton);
  swift_beginAccess();
  unsigned char *v3 = a1;
  sub_1AD39CCB4();
}

void (*sub_1AD39BBB0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1AD39BC10;
}

void sub_1AD39BC10(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1AD39CCB4();
  }
}

void *sub_1AD39BC44(double a1, double a2, double a3, double a4)
{
  swift_unknownObjectWeakInit();
  uint64_t v9 = &v4[OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_item];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + sub_1AD3829D8(_, viewForFooterInSection, 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = &v4[OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_didTapAction];
  void *v10 = 0;
  v10[1] = 0;
  *(void *)&v4[OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell____lazy_storage___button] = 0;
  v4[OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_isFullWidthButton] = 1;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  *(void *)&v4[OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_fullWidthButtonConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v4[OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_compactWidthButtonConstraints] = v11;
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for ButtonCollectionViewCell();
  uint64_t v12 = objc_msgSendSuper2(&v16, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v13 = *(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v12) + 0x150);
  uint64_t v14 = v12;
  v13();

  return v14;
}

id ButtonCollectionViewCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t sub_1AD39BE1C()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = sub_1AD39BA78();
  objc_msgSend(v1, sel_addSubview_, v2);

  id v3 = sub_1AD39BA78();
  objc_msgSend(v3, sel_addTarget_action_forControlEvents_, v0, sel_didTapButton_, 64);

  uint64_t v4 = *(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158);
  return v4();
}

void sub_1AD39BEFC()
{
  id v1 = v0;
  sub_1AD1EFDA4();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1AD74DE20;
  id v3 = sub_1AD39BA78();
  id v4 = objc_msgSend(v3, sel_leadingAnchor);

  id v5 = objc_msgSend(v1, sel_contentView);
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
  *(void *)(v2 + 32) = v7;
  id v8 = objc_msgSend(v1, sel_contentView);
  id v9 = objc_msgSend(v8, sel_trailingAnchor);

  id v10 = sub_1AD39BA78();
  id v11 = objc_msgSend(v10, sel_trailingAnchor);

  id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v11);
  *(void *)(v2 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v12;
  sub_1AD73F4D0();
  *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_fullWidthButtonConstraints] = v2;
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1AD74DE20;
  id v14 = sub_1AD39BA78();
  id v15 = objc_msgSend(v14, sel_leadingAnchor);

  id v16 = objc_msgSend(v1, sel_contentView);
  id v17 = objc_msgSend(v16, sel_leadingAnchor);

  id v18 = objc_msgSend(v15, sel_constraintGreaterThanOrEqualToAnchor_, v17);
  *(void *)(v13 + 32) = v18;
  id v19 = objc_msgSend(v1, sel_contentView);
  id v20 = objc_msgSend(v19, sel_trailingAnchor);

  id v21 = sub_1AD39BA78();
  id v22 = objc_msgSend(v21, sel_trailingAnchor);

  id v23 = objc_msgSend(v20, sel_constraintGreaterThanOrEqualToAnchor_, v22);
  *(void *)(v13 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v23;
  sub_1AD73F4D0();
  *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_compactWidthButtonConstraints] = v13;
  swift_bridgeObjectRelease();
  uint64_t v24 = self;
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1AD74C720;
  id v26 = sub_1AD39BA78();
  id v27 = objc_msgSend(v26, sel_topAnchor);

  id v28 = objc_msgSend(v1, sel_contentView);
  id v29 = objc_msgSend(v28, sel_topAnchor);

  id v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
  *(void *)(v25 + 32) = v30;
  id v31 = objc_msgSend(v1, sel_contentView);
  id v32 = objc_msgSend(v31, sel_bottomAnchor);

  id v33 = sub_1AD39BA78();
  id v34 = objc_msgSend(v33, sel_bottomAnchor);

  id v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v34);
  *(void *)(v25 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v35;
  id v36 = sub_1AD39BA78();
  id v37 = objc_msgSend(v36, sel_centerYAnchor);

  id v38 = objc_msgSend(v1, sel_contentView);
  id v39 = objc_msgSend(v38, sel_centerYAnchor);

  id v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  *(void *)(v25 + 48) = v40;
  id v41 = sub_1AD39BA78();
  id v42 = objc_msgSend(v41, sel_centerXAnchor);

  id v43 = objc_msgSend(v1, sel_contentView);
  id v44 = objc_msgSend(v43, sel_centerXAnchor);

  id v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v44);
  *(void *)(v25 + 56) = v45;
  sub_1AD73F4D0();
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F810);
  uint64_t v46 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_activateConstraints_, v46);
}

void sub_1AD39C46C()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1AD73CBA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD20867C(0, (unint64_t *)&qword_1EB732830, MEMORY[0x1E4FB1290]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  id v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  id v12 = (char *)&v49 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  id v15 = (char *)&v49 - v14;
  MEMORY[0x1F4188790](v13);
  id v17 = (char *)&v49 - v16;
  uint64_t v18 = v1 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_item;
  swift_beginAccess();
  sub_1AD207CB4(v18, (uint64_t)v70, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
  if (!v70[3])
  {
    sub_1AD207168((uint64_t)v70, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
    goto LABEL_6;
  }
  sub_1AD2282B4();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    sub_1AD73CAD0();
    id v28 = sub_1AD73CB80();
    os_log_type_t v29 = sub_1AD73F940();
    if (os_log_type_enabled(v28, v29))
    {
      id v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      v62[0] = v31;
      *(_DWORD *)id v30 = 136315138;
      uint64_t v32 = sub_1AD740E30();
      v70[0] = sub_1AD1F62D4(v32, v33, v62);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AD1A4000, v28, v29, "[%s] Item is not ButtonCollectionViewItem", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v31, -1, -1);
      MEMORY[0x1B3E68450](v30, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return;
  }
  uint64_t v54 = v62[1];
  uint64_t v53 = v62[3];
  uint64_t v19 = v62[5];
  uint64_t v49 = v62[4];
  id v59 = (id)v62[6];
  unsigned int v51 = v63;
  uint64_t v56 = v64;
  uint64_t v57 = v65;
  unsigned int v50 = v66;
  char v20 = v67;
  id v21 = (unsigned char *)(v1 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_isFullWidthButton);
  uint64_t v22 = v69;
  BOOL v55 = v68;
  swift_beginAccess();
  unsigned char *v21 = v20;
  sub_1AD39CCB4();
  id v23 = sub_1AD39BA78();
  sub_1AD740260();
  uint64_t v24 = sub_1AD740240();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  uint64_t v60 = v25 + 48;
  int v26 = v61(v17, 1, v24);
  uint64_t v58 = v22;
  uint64_t v52 = v19;
  if (v26)
  {
    id v27 = (void (*)(uint64_t))MEMORY[0x1E4FB1290];
    sub_1AD207CB4((uint64_t)v17, (uint64_t)v9, (unint64_t *)&qword_1EB732830, MEMORY[0x1E4FB1290]);
    sub_1AD740270();

    sub_1AD207168((uint64_t)v17, (unint64_t *)&qword_1EB732830, v27);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1AD740210();
    sub_1AD740270();
  }
  id v34 = sub_1AD39BA78();
  sub_1AD740260();
  if (v61(v15, 1, v24))
  {
    id v35 = (void (*)(uint64_t))MEMORY[0x1E4FB1290];
    sub_1AD207CB4((uint64_t)v15, (uint64_t)v9, (unint64_t *)&qword_1EB732830, MEMORY[0x1E4FB1290]);
    sub_1AD740270();

    sub_1AD207168((uint64_t)v15, (unint64_t *)&qword_1EB732830, v35);
  }
  else
  {
    id v36 = v59;
    sub_1AD7401F0();
    sub_1AD740270();
  }
  id v37 = sub_1AD39BA78();
  sub_1AD740260();
  if (v61(v12, 1, v24))
  {
    id v38 = (void (*)(uint64_t))MEMORY[0x1E4FB1290];
    sub_1AD207CB4((uint64_t)v12, (uint64_t)v9, (unint64_t *)&qword_1EB732830, MEMORY[0x1E4FB1290]);
    sub_1AD740270();

    sub_1AD207168((uint64_t)v12, (unint64_t *)&qword_1EB732830, v38);
  }
  else
  {
    id v39 = objc_msgSend(self, sel_configurationWithTextStyle_scale_, *MEMORY[0x1E4FB28C8], 2);
    sub_1AD7400B0();
    sub_1AD740270();
  }
  id v40 = v55;
  uint64_t v41 = v51;
  id v42 = sub_1AD39BA78();
  objc_msgSend(v42, sel_setEnabled_, v41);

  if (v40)
  {
    uint64_t v43 = v1 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_parentViewController;
    swift_beginAccess();
    id v44 = (void *)MEMORY[0x1B3E68580](v43);
    swift_retain();
    id v45 = (void *)v40(v44);

    sub_1AD1E4514((uint64_t)v40);
    if (v45)
    {
      id v46 = sub_1AD39BA78();
      objc_msgSend(v46, sel_setMenu_, v45);

      id v47 = sub_1AD39BA78();
      objc_msgSend(v47, sel_setShowsMenuAsPrimaryAction_, v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1AD1E4514(v56);
      sub_1AD1E4514((uint64_t)v40);

      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1AD1E4514(v56);
    uint64_t v48 = (uint64_t)v40;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1AD1E4514(v56);
    uint64_t v48 = 0;
  }
  sub_1AD1E4514(v48);
}

void sub_1AD39CCB4()
{
  swift_beginAccess();
  uint64_t v0 = self;
  sub_1AD2147D4(0, (unint64_t *)&qword_1EB73F810);
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_activateConstraints_, v1);

  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_deactivateConstraints_, v2);
}

uint64_t sub_1AD39CDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  sub_1AD20867C(0, (unint64_t *)&qword_1EB732830, MEMORY[0x1E4FB1290]);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v23 - v14;
  id v16 = sub_1AD39BA78();
  sub_1AD740260();
  uint64_t v17 = sub_1AD740240();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v15, 1, v17))
  {
    uint64_t v18 = (void (*)(uint64_t))MEMORY[0x1E4FB1290];
    sub_1AD207CB4((uint64_t)v15, (uint64_t)v12, (unint64_t *)&qword_1EB732830, MEMORY[0x1E4FB1290]);
    sub_1AD740270();

    sub_1AD207168((uint64_t)v15, (unint64_t *)&qword_1EB732830, v18);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1AD740210();
    sub_1AD740270();
  }
  id v19 = sub_1AD39BA78();
  objc_msgSend(v19, sel_setEnabled_, a5 & 1);

  char v20 = (void *)(v6 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_didTapAction);
  uint64_t v21 = *(void *)(v6 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_didTapAction);
  *char v20 = a3;
  v20[1] = a4;
  swift_retain();
  return sub_1AD1E4514(v21);
}

void sub_1AD39CFC0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, int a6)
{
  int v37 = a6;
  uint64_t v34 = a1;
  id v35 = a3;
  sub_1AD20867C(0, (unint64_t *)&qword_1EB732830, MEMORY[0x1E4FB1290]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  id v36 = (char *)&v34 - v13;
  MEMORY[0x1F4188790](v14);
  id v16 = (char *)&v34 - v15;
  MEMORY[0x1F4188790](v17);
  id v19 = (char *)&v34 - v18;
  char v20 = (void *)(v6 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_didTapAction);
  uint64_t v21 = *(void *)(v6 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_didTapAction);
  *char v20 = a4;
  v20[1] = a5;
  swift_retain();
  sub_1AD1E4514(v21);
  id v22 = sub_1AD39BA78();
  sub_1AD740260();
  uint64_t v23 = sub_1AD740240();
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  if (v24(v19, 1, v23))
  {
    uint64_t v25 = (void (*)(uint64_t))MEMORY[0x1E4FB1290];
    sub_1AD207CB4((uint64_t)v19, (uint64_t)v11, (unint64_t *)&qword_1EB732830, MEMORY[0x1E4FB1290]);
    sub_1AD740270();

    sub_1AD207168((uint64_t)v19, (unint64_t *)&qword_1EB732830, v25);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1AD740210();
    sub_1AD740270();
  }
  id v26 = sub_1AD39BA78();
  sub_1AD740260();
  if (v24(v16, 1, v23))
  {
    id v27 = (void (*)(uint64_t))MEMORY[0x1E4FB1290];
    sub_1AD207CB4((uint64_t)v16, (uint64_t)v11, (unint64_t *)&qword_1EB732830, MEMORY[0x1E4FB1290]);
    sub_1AD740270();

    sub_1AD207168((uint64_t)v16, (unint64_t *)&qword_1EB732830, v27);
  }
  else
  {
    id v28 = v35;
    sub_1AD7401F0();
    sub_1AD740270();
  }
  id v29 = sub_1AD39BA78();
  uint64_t v30 = (uint64_t)v36;
  sub_1AD740260();
  if (v24((char *)v30, 1, v23))
  {
    uint64_t v31 = (void (*)(uint64_t))MEMORY[0x1E4FB1290];
    sub_1AD207CB4(v30, (uint64_t)v11, (unint64_t *)&qword_1EB732830, MEMORY[0x1E4FB1290]);
    sub_1AD740270();

    sub_1AD207168(v30, (unint64_t *)&qword_1EB732830, v31);
  }
  else
  {
    id v32 = objc_msgSend(self, sel_configurationWithTextStyle_scale_, *MEMORY[0x1E4FB28C8], 2, v34);
    sub_1AD7400B0();
    sub_1AD740270();
  }
  id v33 = sub_1AD39BA78();
  objc_msgSend(v33, sel_setEnabled_, v37 & 1);
}

void sub_1AD39D38C()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1AD73CBA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v1, sel_viewController);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = (uint64_t)&v1[OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_item];
    swift_beginAccess();
    sub_1AD207CB4(v8, (uint64_t)v24, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
    if (v24[3])
    {
      sub_1AD2282B4();
      if (swift_dynamicCast())
      {
        uint64_t v9 = (void *)v21[6];
        uint64_t v10 = v22;
        uint64_t v11 = v23;
        if (v22)
        {
          id v12 = v7;
          v10(v7);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          sub_1AD1E4514((uint64_t)v10);
          sub_1AD1E4514(v11);

          return;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_1AD1E4514(0);
        uint64_t v20 = v11;
LABEL_14:
        sub_1AD1E4514(v20);
        return;
      }
    }
    else
    {
      sub_1AD207168((uint64_t)v24, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
    }
    id v19 = *(void (**)(void *))&v1[OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_didTapAction];
    if (!v19)
    {

      return;
    }
    swift_retain();
    v19(v7);

    uint64_t v20 = (uint64_t)v19;
    goto LABEL_14;
  }
  sub_1AD73CAD0();
  uint64_t v13 = sub_1AD73CB80();
  os_log_type_t v14 = sub_1AD73F920();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v21[0] = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v17 = sub_1AD740E30();
    v24[0] = sub_1AD1F62D4(v17, v18, v21);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v13, v14, "[%s] Could not get presenting view controller", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v16, -1, -1);
    MEMORY[0x1B3E68450](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1AD39D778()
{
  swift_unknownObjectWeakDestroy();
  sub_1AD207168(v0 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_item, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
  sub_1AD1E4514(*(void *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_didTapAction));

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id ButtonCollectionViewCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ButtonCollectionViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ButtonCollectionViewCell.deselectionBehavior.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_item;
  swift_beginAccess();
  sub_1AD207CB4(v3, (uint64_t)v10, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
  if (!v11)
  {
    uint64_t result = sub_1AD207168((uint64_t)v10, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
LABEL_6:
    char v5 = 0;
    goto LABEL_7;
  }
  sub_1AD2282B4();
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1AD1E4514(v8);
  uint64_t result = sub_1AD1E4514(v9);
  if ((v7 & 1) == 0) {
    goto LABEL_6;
  }
  char v5 = 1;
LABEL_7:
  *a1 = v5;
  return result;
}

uint64_t sub_1AD39DA3C@<X0>(char *a1@<X8>)
{
  return ButtonCollectionViewCell.deselectionBehavior.getter(a1);
}

void *sub_1AD39DA60()
{
  uint64_t v0 = sub_1AD7400F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1AD7401D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1AD740240();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  os_log_type_t v14 = (char *)&v20 - v13;
  sub_1AD740220();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FB1268], v4);
  sub_1AD7400E0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FB1218], v0);
  sub_1AD740100();
  uint64_t v15 = self;
  id v16 = objc_msgSend(v15, sel_systemBlueColor);
  sub_1AD740190();
  id v17 = objc_msgSend(v15, sel_systemWhiteColor);
  sub_1AD7401A0();
  sub_1AD740110();
  sub_1AD2147D4(0, &qword_1EB73C2B0);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  unint64_t v18 = (void *)sub_1AD740250();
  objc_msgSend(v18, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v18;
}

void _s18HealthExperienceUI24ButtonCollectionViewCellC5coderACSgSo7NSCoderC_tcfc_0()
{
  swift_unknownObjectWeakInit();
  uint64_t v1 = &v0[OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_item];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + sub_1AD3829D8(_, viewForFooterInSection, 1) = 0u;
  *((void *)v1 + 4) = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_didTapAction];
  *uint64_t v2 = 0;
  v2[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell____lazy_storage___button] = 0;
  v0[OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_isFullWidthButton] = 1;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_fullWidthButtonConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_compactWidthButtonConstraints] = v3;

  sub_1AD7408B0();
  __break(1u);
}

uint64_t type metadata accessor for ButtonCollectionViewCell()
{
  return self;
}

uint64_t sub_1AD39DE5C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_parentViewController;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1B3E68580](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1AD39DEB4()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1AD39DF0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_item;
  swift_beginAccess();
  return sub_1AD207CB4(v3, a2, (unint64_t *)&qword_1EB73E880, (void (*)(uint64_t))sub_1AD2282B4);
}

uint64_t sub_1AD39DF84@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_isFullWidthButton);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_1AD39DFD8(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC18HealthExperienceUI24ButtonCollectionViewCell_isFullWidthButton);
  swift_beginAccess();
  unsigned char *v3 = v2;
  sub_1AD39CCB4();
}

void destroy for ButtonCollectionViewItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(a1 + 64)) {
    swift_release();
  }
  if (*(void *)(a1 + 88))
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for ButtonCollectionViewItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v6;
  char v7 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = (_OWORD *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v7;
  if (v8)
  {
    uint64_t v11 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *v9;
  }
  uint64_t v12 = *(void *)(a2 + 88);
  *(_WORD *)(a1 + 8sub_1AD3829D8(_, viewForHeaderInSection, 0) = *(_WORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = v12;
    *(void *)(a1 + 96) = v13;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  }
  return a1;
}

uint64_t assignWithCopy for ButtonCollectionViewItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 48);
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  id v6 = v5;

  uint64_t v7 = *(void *)(a1 + 64);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  if (v7)
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v8;
      *(void *)(a1 + 72) = v9;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = v10;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_8:
  uint64_t v11 = *(void *)(a1 + 88);
  *(unsigned char *)(a1 + 8sub_1AD3829D8(_, viewForHeaderInSection, 0) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 8sub_1AD3829D8(_, viewForFooterInSection, 1) = *(unsigned char *)(a2 + 81);
  uint64_t v12 = *(void *)(a2 + 88);
  if (!v11)
  {
    if (v12)
    {
      uint64_t v14 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = v12;
      *(void *)(a1 + 96) = v14;
      swift_retain();
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    return a1;
  }
  if (!v12)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v13 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v12;
  *(void *)(a1 + 96) = v13;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 8sub_1AD3829D8(_, viewForHeaderInSection, 0) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for ButtonCollectionViewItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  long long v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = *(_OWORD *)(a2 + 40);

  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a1 + 64);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  if (v8)
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v7;
      *(void *)(a1 + 72) = v9;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = v10;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_8:
  uint64_t v11 = *(void *)(a2 + 88);
  uint64_t v12 = *(void *)(a1 + 88);
  *(unsigned char *)(a1 + 8sub_1AD3829D8(_, viewForHeaderInSection, 0) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 8sub_1AD3829D8(_, viewForFooterInSection, 1) = *(unsigned char *)(a2 + 81);
  if (!v12)
  {
    if (v11)
    {
      uint64_t v14 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = v11;
      *(void *)(a1 + 96) = v14;
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v13 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v13;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonCollectionViewItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ButtonCollectionViewItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ButtonCollectionViewItem()
{
  return &type metadata for ButtonCollectionViewItem;
}

uint64_t method lookup function for ButtonCollectionViewCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ButtonCollectionViewCell);
}

uint64_t dispatch thunk of ButtonCollectionViewCell.parentViewController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ButtonCollectionViewCell.parentViewController.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ButtonCollectionViewCell.parentViewController.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ButtonCollectionViewCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ButtonCollectionViewCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ButtonCollectionViewCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of static ButtonCollectionViewCell.buttonTextColor.getter()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of static ButtonCollectionViewCell.buttonBackgroundColor.getter()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of ButtonCollectionViewCell.isFullWidthButton.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ButtonCollectionViewCell.isFullWidthButton.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ButtonCollectionViewCell.isFullWidthButton.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ButtonCollectionViewCell.setUpViews()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ButtonCollectionViewCell.addConstraints()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of ButtonCollectionViewCell.itemUpdated()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of static ButtonCollectionViewCell.makeButton()()
{
  return (*(uint64_t (**)(void))(v0 + 384))();
}

uint64_t dispatch thunk of ButtonCollectionViewCell.update(with:didTapAction:isEnabled:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of ButtonCollectionViewCell.update(with:symbol:didTapAction:isEnabled:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t sub_1AD39E858()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD39E890(uint64_t a1)
{
  void (*v2)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v4;
  uint64_t v5;

  unint64_t v2 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16);
  uint64_t v5 = a1;
  v2(&v4, &v5);
  return v4;
}

uint64_t sub_1AD39E8D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1AD39E904(void *a1)
{
  return sub_1AD33ACC8(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_1AD39E918()
{
}

uint64_t sub_1AD39E948()
{
  return type metadata accessor for SummarySharingContactPickerSectionedDataSource();
}

uint64_t type metadata accessor for SummarySharingContactPickerSectionedDataSource()
{
  uint64_t result = qword_1E9A2D228;
  if (!qword_1E9A2D228) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SnidgetCurrentValueView.ViewModel.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  long long v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
    uint64_t v9 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, AssociatedTypeWitness);
    uint64_t v9 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v9, 1, AssociatedTypeWitness);
}

uint64_t SnidgetCurrentValueView.ViewModel.debugDescription.getter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_1AD740340();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v6 = (char *)&v8 - v5;
  SnidgetCurrentValueView.ViewModel.value.getter(a1, (uint64_t)&v8 - v5);
  LODWORD(asub_1AD3829D8(_, viewForFooterInSection, 1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v6, 1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (a1 == 1) {
    return 0x617461446F6ELL;
  }
  else {
    return 0x65756C6156736168;
  }
}

uint64_t sub_1AD39EC8C(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1AD740BC0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AD39ECFC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1AD39ED50(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1AD39EDA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AD39EC8C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AD39EDD8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1AD216C94();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1AD39EE08(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1AD39EE5C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1AD39EEB0@<X0>(unsigned char *a1@<X8>)
{
  char v2 = sub_1AD216C94();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 & 1;
  return result;
}

uint64_t sub_1AD39EEF8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1AD39EF4C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t SnidgetCurrentValueView.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SnidgetCurrentValueView.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *char v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SnidgetCurrentValueView.id.modify())(void, void)
{
  return nullsub_1;
}

uint64_t SnidgetCurrentValueView.viewModel.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = type metadata accessor for SnidgetCurrentValueView.ViewModel();
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t SnidgetCurrentValueView.viewModel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for SnidgetCurrentValueView.ViewModel();
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*SnidgetCurrentValueView.viewModel.modify())(void, void)
{
  return nullsub_1;
}

uint64_t SnidgetCurrentValueView.previousViewModel.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  type metadata accessor for SnidgetCurrentValueView.ViewModel();
  uint64_t v5 = sub_1AD740340();
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t SnidgetCurrentValueView.previousViewModel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 40);
  type metadata accessor for SnidgetCurrentValueView.ViewModel();
  uint64_t v5 = sub_1AD740340();
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*SnidgetCurrentValueView.previousViewModel.modify())(void, void)
{
  return nullsub_1;
}

uint64_t SnidgetCurrentValueView.ViewModel<>.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a4;
  uint64_t v41 = a2;
  uint64_t v37 = type metadata accessor for SnidgetCurrentValueView.ViewModel.DataCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_1AD740B10();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  MEMORY[0x1F4188790](v6);
  id v36 = (char *)&v29 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v42 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v43 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v34 = (char *)&v29 - v9;
  uint64_t v10 = type metadata accessor for SnidgetCurrentValueView.ViewModel.NoDataCodingKeys();
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v33 = v10;
  uint64_t v31 = v11;
  uint64_t v32 = sub_1AD740B10();
  uint64_t v30 = *(void *)(v32 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v32);
  id v29 = (char *)&v29 - v13;
  uint64_t v14 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SnidgetCurrentValueView.ViewModel.CodingKeys();
  swift_getWitnessTable();
  uint64_t v44 = sub_1AD740B10();
  uint64_t v17 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  id v19 = (char *)&v29 - v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v21 = v42;
  uint64_t v20 = v43;
  sub_1AD740D90();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v45, v41);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v16, 1, v20) == 1)
  {
    char v46 = 0;
    id v22 = v29;
    uint64_t v23 = v44;
    sub_1AD740A70();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v32);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v23);
  }
  else
  {
    uint64_t v45 = v17;
    uint64_t v25 = v34;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v34, v16, v20);
    char v47 = 1;
    id v26 = v36;
    uint64_t v27 = v44;
    sub_1AD740A70();
    uint64_t v28 = v39;
    sub_1AD740B00();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v28);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v19, v27);
  }
}

uint64_t sub_1AD39F778(void *a1, uint64_t a2, uint64_t a3)
{
  return SnidgetCurrentValueView.ViewModel<>.encode(to:)(a1, a2, a3, *(void *)(a3 - 16));
}

uint64_t StandardSnidgetCurrentValueNoDataView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  sub_1AD1F9DB8(0, &qword_1EB73BF08, MEMORY[0x1E4F3E0A0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v35 - v3;
  uint64_t v5 = sub_1AD73E900();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD1FA774();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v37 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = *v1;
  v35[0] = v1[1];
  if (qword_1EB732818 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_1AD73A1D0();
  uint64_t v42 = v11;
  sub_1AD20F9FC();
  uint64_t v12 = sub_1AD73E9B0();
  uint64_t v14 = v13;
  v35[1] = v15;
  char v17 = v16 & 1;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F3E150], v5);
  uint64_t v18 = *MEMORY[0x1E4F3E090];
  uint64_t v19 = sub_1AD73E7F0();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v4, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v4, 0, 1, v19);
  sub_1AD73E8A0();
  sub_1AD1F9CEC((uint64_t)v4, &qword_1EB73BF08, MEMORY[0x1E4F3E0A0]);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1AD73E810();
  sub_1AD73E8B0();
  swift_release();
  uint64_t v21 = sub_1AD73E980();
  uint64_t v23 = v22;
  LOBYTE(v2sub_1AD3829D8(_, viewForHeaderInSection, 0) = v24;
  swift_release();
  LOBYTE(v18) = v20 & 1;
  sub_1AD1CB6E0(v12, v14, v17);
  swift_bridgeObjectRelease();
  sub_1AD73EBC0();
  uint64_t v25 = sub_1AD73E950();
  uint64_t v27 = v26;
  char v29 = v28;
  uint64_t v31 = v30;
  swift_release();
  sub_1AD1CB6E0(v21, v23, v18);
  swift_bridgeObjectRelease();
  uint64_t v41 = v25;
  uint64_t v42 = v27;
  char v43 = v29 & 1;
  uint64_t v44 = v31;
  uint64_t v39 = 0;
  unint64_t v40 = 0xE000000000000000;
  if (v36)
  {
    uint64_t v32 = v36 + OBJC_IVAR____TtC18HealthExperienceUI19ProvidedViewContext_baseAutomationIdentifier;
    swift_beginAccess();
    if (!*(void *)(v32 + 8)) {
      _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
    }
    swift_bridgeObjectRetain();
    sub_1AD73F300();
    swift_bridgeObjectRelease();
    sub_1AD73F300();
    uint64_t v33 = (uint64_t)v37;
    sub_1AD73EAA0();
    swift_bridgeObjectRelease();
    sub_1AD1CB6E0(v25, v27, v29 & 1);
    swift_bridgeObjectRelease();
    return sub_1AD3A1264(v33, v38);
  }
  else
  {
    type metadata accessor for ProvidedViewContext(0);
    sub_1AD1F8B44(&qword_1EB739D80, (void (*)(uint64_t))type metadata accessor for ProvidedViewContext);
    uint64_t result = sub_1AD73E140();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD39FCC8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD3A0158(&OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_supratitleString, a1);
}

uint64_t sub_1AD39FCD4(uint64_t a1)
{
  return sub_1AD3A01D0(a1, &OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_supratitleString);
}

uint64_t (*sub_1AD39FCE0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1AD39FD3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_primaryString;
  swift_beginAccess();
  uint64_t v4 = sub_1AD73A190();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1AD39FDC4(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1AD73A190();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = *a2 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_primaryString;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_1AD39FEE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_primaryString;
  swift_beginAccess();
  uint64_t v4 = sub_1AD73A190();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1AD39FF64(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_primaryString;
  swift_beginAccess();
  uint64_t v4 = sub_1AD73A190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1AD39FFF0())()
{
  return j__swift_endAccess;
}

uint64_t sub_1AD3A004C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F273A8];
  sub_1AD1F9DB8(0, &qword_1EB7407F8, MEMORY[0x1E4F273A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v14 - v10;
  sub_1AD1F9F58(a1, (uint64_t)&v14 - v10, &qword_1EB7407F8, v8);
  uint64_t v12 = *a2 + *a5;
  swift_beginAccess();
  sub_1AD1F8120((uint64_t)v11, v12);
  return swift_endAccess();
}

uint64_t sub_1AD3A014C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD3A0158(&OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_subtitleString, a1);
}

uint64_t sub_1AD3A0158@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  return sub_1AD1F9F58(v4, a2, &qword_1EB7407F8, MEMORY[0x1E4F273A8]);
}

uint64_t sub_1AD3A01C4(uint64_t a1)
{
  return sub_1AD3A01D0(a1, &OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_subtitleString);
}

uint64_t sub_1AD3A01D0(uint64_t a1, void *a2)
{
  uint64_t v4 = v2 + *a2;
  swift_beginAccess();
  sub_1AD1F8120(a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1AD3A0228())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1AD3A0284@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_animationConfiguration;
  swift_beginAccess();
  char v4 = *(unsigned char *)(v3 + 24);
  *(void *)a2 = *(void *)v3;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v3 + 8);
  *(unsigned char *)(a2 + 24) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD3A02F0(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  char v5 = *((unsigned char *)a1 + 24);
  uint64_t v6 = *a2 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_animationConfiguration;
  swift_beginAccess();
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = v2;
  *(void *)(v6 + 16) = v4;
  *(unsigned char *)(v6 + 24) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD3A0374@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_animationConfiguration;
  swift_beginAccess();
  char v4 = *(unsigned char *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(unsigned char *)(a1 + 24) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD3A03DC(long long *a1)
{
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 2);
  char v3 = *((unsigned char *)a1 + 24);
  uint64_t v4 = v1 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_animationConfiguration;
  swift_beginAccess();
  *(_OWORD *)uint64_t v4 = v6;
  *(void *)(v4 + 16) = v2;
  *(unsigned char *)(v4 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1AD3A0450())()
{
  return j_j__swift_endAccess;
}

uint64_t StandardSnidgetCurrentValueDataView.ViewModel.__allocating_init(supratitleString:primaryString:subtitleString:animationConfiguration:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  uint64_t v8 = swift_allocObject();
  StandardSnidgetCurrentValueDataView.ViewModel.init(supratitleString:primaryString:subtitleString:animationConfiguration:)(a1, a2, a3, a4);
  return v8;
}

uint64_t StandardSnidgetCurrentValueDataView.ViewModel.init(supratitleString:primaryString:subtitleString:animationConfiguration:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  long long v17 = *a4;
  uint64_t v16 = *((void *)a4 + 2);
  char v15 = *((unsigned char *)a4 + 24);
  uint64_t v8 = v4 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_supratitleString;
  uint64_t v9 = sub_1AD73A190();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v11(v8, 1, 1, v9);
  uint64_t v12 = v4 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_subtitleString;
  v11(v4 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_subtitleString, 1, 1, v9);
  uint64_t v13 = v4 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_animationConfiguration;
  *(void *)(v13 + 8) = 0;
  *(void *)(v13 + 16) = 0;
  *(unsigned char *)(v13 + 24) = 0;
  *(void *)uint64_t v13 = 0;
  swift_beginAccess();
  sub_1AD1F8120(a1, v8);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v4 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_primaryString, a2, v9);
  swift_beginAccess();
  sub_1AD1F8120(a3, v12);
  swift_endAccess();
  swift_beginAccess();
  *(_OWORD *)uint64_t v13 = v17;
  *(void *)(v13 + 16) = v16;
  *(unsigned char *)(v13 + 24) = v15;
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t StandardSnidgetCurrentValueDataView.ViewModel.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  StandardSnidgetCurrentValueDataView.ViewModel.init(from:)(a1);
  return v2;
}

uint64_t sub_1AD3A0730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AD3A3454(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD3A0758(uint64_t a1)
{
  unint64_t v2 = sub_1AD1FA7D4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AD3A0794(uint64_t a1)
{
  unint64_t v2 = sub_1AD1FA7D4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t StandardSnidgetCurrentValueDataView.ViewModel.deinit()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F273A8];
  sub_1AD1F9CEC(v0 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_supratitleString, &qword_1EB7407F8, MEMORY[0x1E4F273A8]);
  uint64_t v2 = v0 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_primaryString;
  uint64_t v3 = sub_1AD73A190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_1AD1F9CEC(v0 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_subtitleString, &qword_1EB7407F8, v1);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StandardSnidgetCurrentValueDataView.ViewModel.__deallocating_deinit()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F273A8];
  sub_1AD1F9CEC(v0 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_supratitleString, &qword_1EB7407F8, MEMORY[0x1E4F273A8]);
  uint64_t v2 = v0 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_primaryString;
  uint64_t v3 = sub_1AD73A190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_1AD1F9CEC(v0 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_subtitleString, &qword_1EB7407F8, v1);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD3A09A4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v36 = sub_1AD73A190();
  uint64_t v33 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  id v35 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F273A8];
  sub_1AD1F9DB8(0, &qword_1EB7407F8, MEMORY[0x1E4F273A8], MEMORY[0x1E4FBB718]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v32 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v32 - v9;
  sub_1AD1F81B4(0, &qword_1EB73D280, MEMORY[0x1E4FBBDE0]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  char v15 = (char *)&v32 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD1FA7D4();
  sub_1AD740D90();
  uint64_t v34 = v2;
  uint64_t v16 = v2 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_supratitleString;
  swift_beginAccess();
  uint64_t v17 = v16;
  uint64_t v18 = v5;
  uint64_t v19 = v36;
  uint64_t v20 = v15;
  sub_1AD1F9F58(v17, (uint64_t)v10, &qword_1EB7407F8, v18);
  LOBYTE(v38) = 0;
  sub_1AD1F8B44((unint64_t *)&unk_1EB73CAC0, MEMORY[0x1E4F273A8]);
  uint64_t v21 = v37;
  sub_1AD740AB0();
  if (v21)
  {
    sub_1AD1F9CEC((uint64_t)v10, &qword_1EB7407F8, MEMORY[0x1E4F273A8]);
  }
  else
  {
    uint64_t v37 = v13;
    sub_1AD1F9CEC((uint64_t)v10, &qword_1EB7407F8, MEMORY[0x1E4F273A8]);
    uint64_t v22 = v34;
    uint64_t v23 = v34 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_primaryString;
    swift_beginAccess();
    uint64_t v24 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v35, v23, v19);
    LOBYTE(v38) = 1;
    sub_1AD740B00();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v35, v19);
    uint64_t v25 = v22 + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_subtitleString;
    swift_beginAccess();
    uint64_t v26 = v25;
    uint64_t v27 = v32;
    sub_1AD1F9F58(v26, v32, &qword_1EB7407F8, MEMORY[0x1E4F273A8]);
    LOBYTE(v38) = 2;
    sub_1AD740AB0();
    sub_1AD1F9CEC(v27, &qword_1EB7407F8, MEMORY[0x1E4F273A8]);
    char v28 = (long long *)(v22
                     + OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_animationConfiguration);
    swift_beginAccess();
    uint64_t v29 = *((void *)v28 + 2);
    char v30 = *((unsigned char *)v28 + 24);
    long long v38 = *v28;
    uint64_t v39 = v29;
    char v40 = v30;
    char v41 = 3;
    sub_1AD3A12C8();
    sub_1AD740AB0();
    uint64_t v13 = v37;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v20, v12);
}

uint64_t sub_1AD3A0EC8(void *a1)
{
  return sub_1AD3A09A4(a1);
}

uint64_t StandardSnidgetCurrentValueDataView.viewModel.getter()
{
  return swift_retain();
}

uint64_t StandardSnidgetCurrentValueDataView.viewModel.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*StandardSnidgetCurrentValueDataView.viewModel.modify())(void, void)
{
  return nullsub_1;
}

uint64_t StandardSnidgetCurrentValueDataView.$viewModel.getter()
{
  type metadata accessor for StandardSnidgetCurrentValueDataView.ViewModel();
  sub_1AD1F8B44(&qword_1EB73B7A8, (void (*)(uint64_t))type metadata accessor for StandardSnidgetCurrentValueDataView.ViewModel);
  return sub_1AD73DFE0();
}

uint64_t StandardSnidgetCurrentValueDataView.previousViewModel.getter()
{
  return swift_retain();
}

uint64_t StandardSnidgetCurrentValueDataView.previousViewModel.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*StandardSnidgetCurrentValueDataView.previousViewModel.modify())(void, void)
{
  return nullsub_1;
}

uint64_t StandardSnidgetCurrentValueDataView.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  type metadata accessor for ProvidedViewContext(0);
  sub_1AD1F8B44(&qword_1EB739D80, (void (*)(uint64_t))type metadata accessor for ProvidedViewContext);
  uint64_t v4 = sub_1AD73E150();
  uint64_t v6 = v5;
  type metadata accessor for StandardSnidgetCurrentValueDataView.ViewModel();
  sub_1AD1F8B44(&qword_1EB73B7A8, (void (*)(uint64_t))type metadata accessor for StandardSnidgetCurrentValueDataView.ViewModel);
  swift_retain();
  swift_retain();
  uint64_t v7 = sub_1AD73DFD0();
  uint64_t v9 = v8;
  swift_retain_n();
  swift_release();
  swift_release_n();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v7;
  a2[1] = v9;
  a2[2] = v3;
  a2[3] = v4;
  a2[4] = v6;
  return result;
}

uint64_t StandardSnidgetCurrentValueDataView.body.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1AD1FA298();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = *(_OWORD *)(v1 + 16);
  v13[0] = *(_OWORD *)v1;
  v13[1] = v6;
  uint64_t v14 = *(void *)(v1 + 32);
  *(void *)uint64_t v5 = sub_1AD73E440();
  *((void *)v5 + sub_1AD3829D8(_, viewForFooterInSection, 1) = 0x4000000000000000;
  v5[16] = 0;
  sub_1AD1BA6B4();
  sub_1AD1F8D54((uint64_t)v13, (uint64_t)&v5[*(int *)(v7 + 44)]);
  uint64_t v8 = sub_1AD73EBA0();
  char v9 = sub_1AD73E740();
  sub_1AD1FA170((uint64_t)v5, a1, (uint64_t (*)(void))sub_1AD1FA298);
  sub_1AD1BA680(0);
  uint64_t v11 = a1 + *(int *)(v10 + 36);
  *(void *)uint64_t v11 = v8;
  *(unsigned char *)(v11 + 8) = v9;
  return sub_1AD1F9E70((uint64_t)v5, (uint64_t (*)(void))sub_1AD1FA298);
}

uint64_t sub_1AD3A1264(uint64_t a1, uint64_t a2)
{
  sub_1AD1FA774();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AD3A12C8()
{
  unint64_t result = qword_1EB73C9C8;
  if (!qword_1EB73C9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB73C9C8);
  }
  return result;
}

uint64_t sub_1AD3A131C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AD3A1338@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_supratitleString, a2);
}

uint64_t sub_1AD3A1344(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD3A004C(a1, a2, a3, a4, &OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_supratitleString);
}

uint64_t sub_1AD3A136C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_subtitleString, a2);
}

uint64_t keypath_getTm_1@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1 + *a2;
  swift_beginAccess();
  return sub_1AD1F9F58(v4, a3, &qword_1EB7407F8, MEMORY[0x1E4F273A8]);
}

uint64_t sub_1AD3A13E8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD3A004C(a1, a2, a3, a4, &OBJC_IVAR____TtCV18HealthExperienceUI35StandardSnidgetCurrentValueDataView9ViewModel_subtitleString);
}

uint64_t sub_1AD3A1410@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_retain();
}

uint64_t sub_1AD3A141C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 8) = v3;
  return result;
}

uint64_t *sub_1AD3A1460(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(unsigned int *)(v5 + 84);
  uint64_t v8 = v6;
  if (v7) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  size_t v10 = v9 + v6;
  if (v7 >= 2) {
    size_t v11 = v9;
  }
  else {
    size_t v11 = v9 + 1;
  }
  int v12 = v6 & 0x100000;
  if (v8 > 7 || v12 != 0 || ((v9 + v8 + ((v8 + 16) & ~v8)) & ~v8) + v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v16 = (uint64_t *)(v15 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v17 = AssociatedTypeWitness;
    size_t __n = v11;
    uint64_t v18 = ~v8;
    uint64_t v19 = a2[1];
    *a1 = *a2;
    a1[1] = v19;
    uint64_t v34 = a1;
    uint64_t v20 = (char *)a1 + v8;
    uint64_t v21 = (char *)a2 + v8;
    uint64_t v22 = (void *)((unint64_t)(v20 + 16) & v18);
    uint64_t v23 = (const void *)((unint64_t)(v21 + 16) & v18);
    uint64_t v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    swift_bridgeObjectRetain();
    if (v24(v23, 1, v17))
    {
      memcpy(v22, v23, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v22, v23, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v22, 0, 1, v17);
    }
    uint64_t v26 = (void *)(((unint64_t)v22 + v10) & v18);
    uint64_t v27 = (unsigned __int8 *)(((unint64_t)v23 + v10) & v18);
    if (v7 > 1)
    {
      char v28 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))v24;
      if (v24(v27, v7, v17) >= 2)
      {
LABEL_40:
        memcpy(v26, v27, __n);
        return v34;
      }
    }
    else
    {
      char v28 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))v24;
      if (v27[v9])
      {
        int v29 = (v27[v9] - 1) << (8 * v9);
        if (v9 > 3) {
          int v29 = 0;
        }
        if (v9)
        {
          int v30 = v9 <= 3 ? v9 : 4;
          switch(v30)
          {
            case 2:
              int v31 = *(unsigned __int16 *)v27;
              break;
            case 3:
              int v31 = *(unsigned __int16 *)v27 | (v27[2] << 16);
              break;
            case 4:
              int v31 = *(_DWORD *)v27;
              break;
            default:
              int v31 = *v27;
              break;
          }
        }
        else
        {
          int v31 = 0;
        }
        if ((v31 | v29) != 0xFFFFFFFF) {
          goto LABEL_40;
        }
      }
    }
    if (v28(v27, 1, v17))
    {
      memcpy(v26, v27, v9);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(v26, v27, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v26, 0, 1, v17);
    }
    uint64_t v16 = v34;
    if (v7 <= 1) {
      *((unsigned char *)v26 + v9) = 0;
    }
  }
  return v16;
}

void *sub_1AD3A17B8(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (unint64_t)a1 + v6 + 16;
  uint64_t v42 = ~v6;
  char v40 = a1;
  unint64_t v41 = (unint64_t)a2 + v6 + 16;
  uint64_t v8 = (const void *)(v41 & ~v6);
  uint64_t v9 = v5;
  size_t v10 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
  unsigned int v11 = v10(v7 & ~v6, 1, AssociatedTypeWitness);
  char v43 = v10;
  unsigned int v12 = v10((unint64_t)v8, 1, AssociatedTypeWitness);
  if (v11)
  {
    if (v12)
    {
      if (*(_DWORD *)(v9 + 84)) {
        size_t v13 = *(void *)(v9 + 64);
      }
      else {
        size_t v13 = *(void *)(v9 + 64) + 1;
      }
      memcpy((void *)(v7 & ~v6), v8, v13);
      uint64_t v14 = AssociatedTypeWitness;
    }
    else
    {
      uint64_t v14 = AssociatedTypeWitness;
      (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))(v7 & ~v6, v8, AssociatedTypeWitness);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v9 + 56))(v7 & ~v6, 0, 1, AssociatedTypeWitness);
    }
  }
  else if (v12)
  {
    uint64_t v14 = AssociatedTypeWitness;
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v7 & ~v6, AssociatedTypeWitness);
    if (*(_DWORD *)(v9 + 84)) {
      size_t v15 = *(void *)(v9 + 64);
    }
    else {
      size_t v15 = *(void *)(v9 + 64) + 1;
    }
    memcpy((void *)(v7 & ~v6), v8, v15);
  }
  else
  {
    uint64_t v14 = AssociatedTypeWitness;
    (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 24))(v7 & ~v6, v8, AssociatedTypeWitness);
  }
  uint64_t v16 = *(unsigned int *)(v9 + 84);
  if (v16) {
    size_t v17 = *(void *)(v9 + 64);
  }
  else {
    size_t v17 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v18 = (unsigned __int16 *)(((v7 | v6) + v17) & v42);
  uint64_t v19 = (unsigned __int16 *)(((v41 | v6) + v17) & v42);
  if (v16 <= 1)
  {
    char v20 = 8 * v17;
    if (*((unsigned char *)v18 + v17))
    {
      int v21 = (*((unsigned __int8 *)v18 + v17) - 1) << v20;
      if (v17 > 3) {
        int v21 = 0;
      }
      if (v17)
      {
        int v22 = v17 <= 3 ? v17 : 4;
        switch(v22)
        {
          case 2:
            int v23 = *v18;
            break;
          case 3:
            int v23 = *v18 | (*(unsigned __int8 *)((((v7 | v6) + v17) & v42) + 2) << 16);
            break;
          case 4:
            int v23 = *(_DWORD *)v18;
            break;
          default:
            int v23 = *(unsigned __int8 *)v18;
            break;
        }
      }
      else
      {
        int v23 = 0;
      }
      if ((v23 | v21) != 0xFFFFFFFF)
      {
        uint64_t v25 = (unsigned int (*)(unsigned __int16 *, uint64_t, uint64_t))v43;
        if (*((unsigned char *)v19 + v17))
        {
          int v28 = (*((unsigned __int8 *)v19 + v17) - 1) << v20;
          if (v17 > 3) {
            int v28 = 0;
          }
          if (v17)
          {
            int v29 = v17 <= 3 ? v17 : 4;
            switch(v29)
            {
              case 2:
                int v30 = *v19;
                break;
              case 3:
                int v30 = *(unsigned __int16 *)(((v41 | v6) + v17) & v42) | (*(unsigned __int8 *)((((v41 | v6) + v17) & v42)
                                                                                            + 2) << 16);
                break;
              case 4:
                int v30 = *(_DWORD *)v19;
                break;
              default:
                int v30 = *(unsigned __int8 *)v19;
                break;
            }
          }
          else
          {
            int v30 = 0;
          }
          if ((v30 | v28) != 0xFFFFFFFF) {
            goto LABEL_74;
          }
        }
        goto LABEL_81;
      }
    }
    uint64_t v25 = (unsigned int (*)(unsigned __int16 *, uint64_t, uint64_t))v43;
    if (*((unsigned char *)v19 + v17))
    {
      int v31 = (*((unsigned __int8 *)v19 + v17) - 1) << v20;
      if (v17 > 3) {
        int v31 = 0;
      }
      if (v17)
      {
        int v32 = v17 <= 3 ? v17 : 4;
        switch(v32)
        {
          case 2:
            int v33 = *v19;
            break;
          case 3:
            int v33 = *(unsigned __int16 *)(((v41 | v6) + v17) & v42) | (*(unsigned __int8 *)((((v41 | v6) + v17) & v42) + 2) << 16);
            break;
          case 4:
            int v33 = *(_DWORD *)v19;
            break;
          default:
            int v33 = *(unsigned __int8 *)v19;
            break;
        }
      }
      else
      {
        int v33 = 0;
      }
      if ((v33 | v31) != 0xFFFFFFFF)
      {
LABEL_61:
        if (!v25(v18, 1, v14)) {
          (*(void (**)(unsigned __int16 *, uint64_t))(v9 + 8))(v18, v14);
        }
        goto LABEL_74;
      }
    }
LABEL_63:
    unsigned int v34 = v25(v18, 1, v14);
    unsigned int v35 = v25(v19, 1, v14);
    if (v34)
    {
      if (!v35)
      {
        (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v9 + 16))(v18, v19, v14);
        (*(void (**)(unsigned __int16 *, void, uint64_t, uint64_t))(v9 + 56))(v18, 0, 1, v14);
        return v40;
      }
    }
    else
    {
      if (!v35)
      {
        (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v9 + 24))(v18, v19, v14);
        return v40;
      }
      (*(void (**)(unsigned __int16 *, uint64_t))(v9 + 8))(v18, v14);
    }
    uint64_t v36 = v18;
    uint64_t v37 = v19;
    size_t v38 = v17;
LABEL_78:
    memcpy(v36, v37, v38);
    return v40;
  }
  size_t v24 = ((v7 | v6) + v17) & v42;
  uint64_t v25 = (unsigned int (*)(unsigned __int16 *, uint64_t, uint64_t))v43;
  unsigned int v26 = v43(v24, *(unsigned int *)(v9 + 84), v14);
  unsigned int v27 = v43((unint64_t)v19, v16, v14);
  if (v26 < 2)
  {
    if (v27 >= 2) {
      goto LABEL_61;
    }
    goto LABEL_63;
  }
  if (v27 >= 2)
  {
LABEL_74:
    if (v16 >= 2) {
      size_t v38 = v17;
    }
    else {
      size_t v38 = v17 + 1;
    }
    uint64_t v36 = v18;
    uint64_t v37 = v19;
    goto LABEL_78;
  }
LABEL_81:
  if (v25(v19, 1, v14))
  {
    memcpy(v18, v19, v17);
  }
  else
  {
    (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v9 + 16))(v18, v19, v14);
    (*(void (**)(unsigned __int16 *, void, uint64_t, uint64_t))(v9 + 56))(v18, 0, 1, v14);
  }
  uint64_t result = v40;
  if (v16 <= 1) {
    *((unsigned char *)v18 + v17) = 0;
  }
  return result;
}

_OWORD *sub_1AD3A1DB8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  size_t v24 = a1;
  unint64_t v7 = (unint64_t)a1 + v6 + 16;
  uint64_t v8 = ~v6;
  unint64_t v9 = (unint64_t)a2 + v6 + 16;
  uint64_t v25 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v26 = AssociatedTypeWitness;
  if (v25(v9 & ~v6, 1, AssociatedTypeWitness))
  {
    uint64_t v10 = *(unsigned int *)(v5 + 84);
    size_t v11 = *(void *)(v5 + 64);
    if (v10) {
      size_t v12 = *(void *)(v5 + 64);
    }
    else {
      size_t v12 = v11 + 1;
    }
    memcpy((void *)(v7 & ~v6), (const void *)(v9 & ~v6), v12);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(v7 & ~v6, v9 & ~v6, AssociatedTypeWitness);
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v5 + 56))(v7 & ~v6, 0, 1, AssociatedTypeWitness);
    uint64_t v10 = *(unsigned int *)(v5 + 84);
    size_t v11 = *(void *)(v5 + 64);
  }
  if (v10) {
    size_t v13 = v11;
  }
  else {
    size_t v13 = v11 + 1;
  }
  uint64_t v14 = (void *)(((v7 | v6) + v13) & v8);
  size_t v15 = (v9 | v6) + v13;
  uint64_t v16 = (unsigned __int8 *)(v15 & v8);
  if (v10 > 1)
  {
    uint64_t v18 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))v25;
    uint64_t v17 = v26;
    if (v25(v15 & v8, v10, v26) >= 2)
    {
LABEL_31:
      if (v10 >= 2) {
        size_t v23 = v13;
      }
      else {
        size_t v23 = v13 + 1;
      }
      memcpy(v14, v16, v23);
      return v24;
    }
  }
  else
  {
    uint64_t v18 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))v25;
    uint64_t v17 = v26;
    if (v16[v13])
    {
      int v19 = (v16[v13] - 1) << (8 * v13);
      if (v13 > 3) {
        int v19 = 0;
      }
      if (v13)
      {
        int v20 = v13 <= 3 ? v13 : 4;
        switch(v20)
        {
          case 2:
            int v21 = *(unsigned __int16 *)v16;
            break;
          case 3:
            int v21 = *(unsigned __int16 *)v16 | (v16[2] << 16);
            break;
          case 4:
            int v21 = *(_DWORD *)v16;
            break;
          default:
            int v21 = *v16;
            break;
        }
      }
      else
      {
        int v21 = 0;
      }
      if ((v21 | v19) != 0xFFFFFFFF) {
        goto LABEL_31;
      }
    }
  }
  if (v18(v16, 1, v17))
  {
    memcpy(v14, v16, v13);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 32))(v14, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v17);
  }
  uint64_t result = v24;
  if (v10 <= 1) {
    *((unsigned char *)v14 + v13) = 0;
  }
  return result;
}

void *sub_1AD3A2094(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (unint64_t)a1 + v7 + 16;
  uint64_t v43 = ~v7;
  unint64_t v41 = a1;
  unint64_t v42 = (unint64_t)a2 + v7 + 16;
  unint64_t v9 = (const void *)(v42 & ~v7);
  uint64_t v10 = v6;
  size_t v11 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
  unsigned int v12 = v11(v8 & ~v7, 1, AssociatedTypeWitness);
  uint64_t v44 = v11;
  unsigned int v13 = v11((unint64_t)v9, 1, AssociatedTypeWitness);
  if (v12)
  {
    if (v13)
    {
      if (*(_DWORD *)(v10 + 84)) {
        size_t v14 = *(void *)(v10 + 64);
      }
      else {
        size_t v14 = *(void *)(v10 + 64) + 1;
      }
      memcpy((void *)(v8 & ~v7), v9, v14);
      uint64_t v15 = AssociatedTypeWitness;
    }
    else
    {
      uint64_t v15 = AssociatedTypeWitness;
      (*(void (**)(unint64_t, const void *, uint64_t))(v10 + 32))(v8 & ~v7, v9, AssociatedTypeWitness);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v10 + 56))(v8 & ~v7, 0, 1, AssociatedTypeWitness);
    }
  }
  else if (v13)
  {
    uint64_t v15 = AssociatedTypeWitness;
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v8 & ~v7, AssociatedTypeWitness);
    if (*(_DWORD *)(v10 + 84)) {
      size_t v16 = *(void *)(v10 + 64);
    }
    else {
      size_t v16 = *(void *)(v10 + 64) + 1;
    }
    memcpy((void *)(v8 & ~v7), v9, v16);
  }
  else
  {
    uint64_t v15 = AssociatedTypeWitness;
    (*(void (**)(unint64_t, const void *, uint64_t))(v10 + 40))(v8 & ~v7, v9, AssociatedTypeWitness);
  }
  uint64_t v17 = *(unsigned int *)(v10 + 84);
  if (v17) {
    size_t v18 = *(void *)(v10 + 64);
  }
  else {
    size_t v18 = *(void *)(v10 + 64) + 1;
  }
  int v19 = (unsigned __int16 *)(((v8 | v7) + v18) & v43);
  int v20 = (unsigned __int16 *)(((v42 | v7) + v18) & v43);
  if (v17 <= 1)
  {
    char v21 = 8 * v18;
    if (*((unsigned char *)v19 + v18))
    {
      int v22 = (*((unsigned __int8 *)v19 + v18) - 1) << v21;
      if (v18 > 3) {
        int v22 = 0;
      }
      if (v18)
      {
        int v23 = v18 <= 3 ? v18 : 4;
        switch(v23)
        {
          case 2:
            int v24 = *v19;
            break;
          case 3:
            int v24 = *v19 | (*(unsigned __int8 *)((((v8 | v7) + v18) & v43) + 2) << 16);
            break;
          case 4:
            int v24 = *(_DWORD *)v19;
            break;
          default:
            int v24 = *(unsigned __int8 *)v19;
            break;
        }
      }
      else
      {
        int v24 = 0;
      }
      if ((v24 | v22) != 0xFFFFFFFF)
      {
        uint64_t v26 = (unsigned int (*)(unsigned __int16 *, uint64_t, uint64_t))v44;
        if (*((unsigned char *)v20 + v18))
        {
          int v29 = (*((unsigned __int8 *)v20 + v18) - 1) << v21;
          if (v18 > 3) {
            int v29 = 0;
          }
          if (v18)
          {
            int v30 = v18 <= 3 ? v18 : 4;
            switch(v30)
            {
              case 2:
                int v31 = *v20;
                break;
              case 3:
                int v31 = *(unsigned __int16 *)(((v42 | v7) + v18) & v43) | (*(unsigned __int8 *)((((v42 | v7) + v18) & v43)
                                                                                            + 2) << 16);
                break;
              case 4:
                int v31 = *(_DWORD *)v20;
                break;
              default:
                int v31 = *(unsigned __int8 *)v20;
                break;
            }
          }
          else
          {
            int v31 = 0;
          }
          if ((v31 | v29) != 0xFFFFFFFF) {
            goto LABEL_74;
          }
        }
        goto LABEL_81;
      }
    }
    uint64_t v26 = (unsigned int (*)(unsigned __int16 *, uint64_t, uint64_t))v44;
    if (*((unsigned char *)v20 + v18))
    {
      int v32 = (*((unsigned __int8 *)v20 + v18) - 1) << v21;
      if (v18 > 3) {
        int v32 = 0;
      }
      if (v18)
      {
        int v33 = v18 <= 3 ? v18 : 4;
        switch(v33)
        {
          case 2:
            int v34 = *v20;
            break;
          case 3:
            int v34 = *(unsigned __int16 *)(((v42 | v7) + v18) & v43) | (*(unsigned __int8 *)((((v42 | v7) + v18) & v43) + 2) << 16);
            break;
          case 4:
            int v34 = *(_DWORD *)v20;
            break;
          default:
            int v34 = *(unsigned __int8 *)v20;
            break;
        }
      }
      else
      {
        int v34 = 0;
      }
      if ((v34 | v32) != 0xFFFFFFFF)
      {
LABEL_61:
        if (!v26(v19, 1, v15)) {
          (*(void (**)(unsigned __int16 *, uint64_t))(v10 + 8))(v19, v15);
        }
        goto LABEL_74;
      }
    }
LABEL_63:
    unsigned int v35 = v26(v19, 1, v15);
    unsigned int v36 = v26(v20, 1, v15);
    if (v35)
    {
      if (!v36)
      {
        (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v10 + 32))(v19, v20, v15);
        (*(void (**)(unsigned __int16 *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v15);
        return v41;
      }
    }
    else
    {
      if (!v36)
      {
        (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v10 + 40))(v19, v20, v15);
        return v41;
      }
      (*(void (**)(unsigned __int16 *, uint64_t))(v10 + 8))(v19, v15);
    }
    uint64_t v37 = v19;
    size_t v38 = v20;
    size_t v39 = v18;
LABEL_78:
    memcpy(v37, v38, v39);
    return v41;
  }
  size_t v25 = ((v8 | v7) + v18) & v43;
  uint64_t v26 = (unsigned int (*)(unsigned __int16 *, uint64_t, uint64_t))v44;
  unsigned int v27 = v44(v25, *(unsigned int *)(v10 + 84), v15);
  unsigned int v28 = v44((unint64_t)v20, v17, v15);
  if (v27 < 2)
  {
    if (v28 >= 2) {
      goto LABEL_61;
    }
    goto LABEL_63;
  }
  if (v28 >= 2)
  {
LABEL_74:
    if (v17 >= 2) {
      size_t v39 = v18;
    }
    else {
      size_t v39 = v18 + 1;
    }
    uint64_t v37 = v19;
    size_t v38 = v20;
    goto LABEL_78;
  }
LABEL_81:
  if (v26(v20, 1, v15))
  {
    memcpy(v19, v20, v18);
  }
  else
  {
    (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v10 + 32))(v19, v20, v15);
    (*(void (**)(unsigned __int16 *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v15);
  }
  uint64_t result = v41;
  if (v17 <= 1) {
    *((unsigned char *)v19 + v18) = 0;
  }
  return result;
}

uint64_t *sub_1AD3A26CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v6 = *(void *)(v5 + 64);
  }
  else {
    size_t v6 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v6 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  else
  {
    uint64_t v11 = AssociatedTypeWitness;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v6);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v11);
    }
  }
  return a1;
}

void *sub_1AD3A2824(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  size_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    unsigned int v12 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v11 = v5 + 8;
    v12(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v10 + 1;
  }
  memcpy(a1, a2, v13);
  return a1;
}

void *sub_1AD3A299C(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v6 = *(void *)(v5 + 64);
    }
    else {
      size_t v6 = *(void *)(v5 + 64) + 1;
    }
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_1AD3A2A9C(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  size_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    unsigned int v12 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v11 = v5 + 8;
    v12(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v10 + 1;
  }
  memcpy(a1, a2, v13);
  return a1;
}

void *initializeBufferWithCopyOfBuffer for StandardSnidgetCurrentValueNoDataView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for StandardSnidgetCurrentValueNoDataView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for StandardSnidgetCurrentValueNoDataView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for StandardSnidgetCurrentValueNoDataView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StandardSnidgetCurrentValueNoDataView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

void *assignWithCopy for StandardSnidgetCurrentValueDataView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for StandardSnidgetCurrentValueDataView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for StandardSnidgetCurrentValueDataView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StandardSnidgetCurrentValueDataView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1AD3A2F30()
{
  return type metadata accessor for StandardSnidgetCurrentValueDataView.ViewModel();
}

uint64_t method lookup function for StandardSnidgetCurrentValueDataView.ViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StandardSnidgetCurrentValueDataView.ViewModel);
}

uint64_t dispatch thunk of StandardSnidgetCurrentValueDataView.ViewModel.supratitleString.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of StandardSnidgetCurrentValueDataView.ViewModel.supratitleString.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of StandardSnidgetCurrentValueDataView.ViewModel.supratitleString.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of StandardSnidgetCurrentValueDataView.ViewModel.primaryString.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of StandardSnidgetCurrentValueDataView.ViewModel.primaryString.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of StandardSnidgetCurrentValueDataView.ViewModel.primaryString.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of StandardSnidgetCurrentValueDataView.ViewModel.subtitleString.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of StandardSnidgetCurrentValueDataView.ViewModel.subtitleString.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of StandardSnidgetCurrentValueDataView.ViewModel.subtitleString.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of StandardSnidgetCurrentValueDataView.ViewModel.animationConfiguration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of StandardSnidgetCurrentValueDataView.ViewModel.animationConfiguration.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of StandardSnidgetCurrentValueDataView.ViewModel.animationConfiguration.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of StandardSnidgetCurrentValueDataView.ViewModel.__allocating_init(supratitleString:primaryString:subtitleString:animationConfiguration:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of StandardSnidgetCurrentValueDataView.ViewModel.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of StandardSnidgetCurrentValueDataView.ViewModel.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t sub_1AD3A3174()
{
  return swift_getWitnessTable();
}

unint64_t sub_1AD3A31E0()
{
  unint64_t result = qword_1E9A2D238;
  if (!qword_1E9A2D238)
  {
    sub_1AD1FA774();
    sub_1AD1F8B44(&qword_1EB738EE8, MEMORY[0x1E4F3DF60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2D238);
  }
  return result;
}

uint64_t sub_1AD3A3288()
{
  return sub_1AD1FA614((unint64_t *)&qword_1EB738D28, sub_1AD1BA680, (void (*)(void))sub_1AD2200A4, (void (*)(void))sub_1AD2208DC);
}

ValueMetadata *type metadata accessor for StandardSnidgetCurrentValueDataView.ViewModel.CodingKeys()
{
  return &type metadata for StandardSnidgetCurrentValueDataView.ViewModel.CodingKeys;
}

uint64_t sub_1AD3A336C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1AD3A3388()
{
  return swift_getWitnessTable();
}

unint64_t sub_1AD3A33A8()
{
  unint64_t result = qword_1E9A2D240;
  if (!qword_1E9A2D240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9A2D240);
  }
  return result;
}

uint64_t sub_1AD3A33FC()
{
  return sub_1AD73F150() & 1;
}

uint64_t sub_1AD3A3454(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001AD77B140 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x537972616D697270 && a2 == 0xED0000676E697274 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xEE00676E69727453 || (sub_1AD740BC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AD77B170)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_1AD740BC0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1AD3A3660(uint64_t a1)
{
  return a1;
}

uint64_t sub_1AD3A36A8@<X0>(uint64_t *a1@<X8>)
{
  sub_1AD73A010();
  uint64_t result = sub_1AD73A000();
  *a1 = result;
  return result;
}

void sub_1AD3A36DC()
{
}

void sub_1AD3A36FC()
{
}

uint64_t sub_1AD3A3724()
{
  return 8;
}

uint64_t sub_1AD3A3730()
{
  return swift_release();
}

uint64_t sub_1AD3A3738(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1AD3A3748()
{
  return sub_1AD73F0C0();
}

void *sub_1AD3A378C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_1AD3A3798()
{
  if (!qword_1E9A2D248)
  {
    sub_1AD73A030();
    unint64_t v0 = sub_1AD740DA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9A2D248);
    }
  }
}

uint64_t MutableArrayDataSourceWithLayout.init(arrangedSections:collapseEmptySections:layoutConstructor:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *v4;
  size_t v10 = (void *)swift_allocObject();
  void v10[2] = a3;
  v10[3] = a4;
  void v10[4] = v9;
  uint64_t v11 = (void *)((char *)v4
                 + OBJC_IVAR____TtC18HealthExperienceUI32MutableArrayDataSourceWithLayout_layoutSectionProvider);
  *uint64_t v11 = sub_1AD21285C;
  v11[1] = v10;
  *((unsigned char *)v4 + OBJC_IVAR____TtC18HealthExperienceUI32MutableArrayDataSourceWithLayout_collapseEmptySections) = a2;
  swift_retain();
  uint64_t v12 = sub_1AD1FBF24();
  uint64_t v14 = MutableArrayDataSource.init(arrangedSections:identifier:)(a1, v12, v13);
  swift_release();
  return v14;
}

uint64_t MutableArrayDataSourceWithLayout.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  sub_1AD20E2C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

void MutableArrayDataSourceWithLayout.__allocating_init(arrangedSections:identifier:)()
{
}

uint64_t sub_1AD3A39D0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI32MutableArrayDataSourceWithLayout_layoutSectionProvider);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_retain();
  return v2;
}

uint64_t sub_1AD3A3A28(uint64_t a1, uint64_t a2)
{
  char v5 = (void *)(v2 + OBJC_IVAR____TtC18HealthExperienceUI32MutableArrayDataSourceWithLayout_layoutSectionProvider);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_release();
}

uint64_t (*sub_1AD3A3A88())()
{
  return j_j__swift_endAccess;
}

id (*sub_1AD3A3AE4())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = sub_1AD73CBA0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD73CAD0();
  int v4 = sub_1AD73CB80();
  os_log_type_t v5 = sub_1AD73F920();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v13 = v0;
    int v7 = (uint8_t *)v6;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)int v7 = 136315138;
    uint64_t v9 = sub_1AD740E30();
    uint64_t v14 = sub_1AD1F62D4(v9, v10, &v15);
    sub_1AD7403B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AD1A4000, v4, v5, "[%s]: layoutConstructor is deprecated and will not behave correctly with context-dependent layout providers", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3E68450](v8, -1, -1);
    MEMORY[0x1B3E68450](v7, -1, -1);

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v13);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  swift_allocObject();
  swift_weakInit();
  return sub_1AD3A4D70;
}

uint64_t sub_1AD3A3D38(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  void v6[4] = v2;
  void v6[5] = v5;
  int v7 = (uint64_t *)((char *)v2
                 + OBJC_IVAR____TtC18HealthExperienceUI32MutableArrayDataSourceWithLayout_layoutSectionProvider);
  swift_beginAccess();
  *int v7 = sub_1AD3A4E8C;
  v7[1] = v6;
  swift_retain();
  return swift_release();
}

void (*sub_1AD3A3E04(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x50uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  v3[8] = v1;
  v3[9] = v4;
  sub_1AD3A3AE4();
  v3[6] = sub_1AD3A4D70;
  v3[7] = v5;
  return sub_1AD3A3E98;
}

void sub_1AD3A3E98(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 48);
  uint64_t v4 = *(void *)(*(void *)a1 + 56);
  if (a2)
  {
    uint64_t v5 = v2[8];
    uint64_t v6 = v2[9];
    int v7 = (void *)swift_allocObject();
    void v7[2] = v3;
    _OWORD v7[3] = v4;
    void v7[4] = v5;
    void v7[5] = v6;
    uint64_t v8 = (void *)(v5 + OBJC_IVAR____TtC18HealthExperienceUI32MutableArrayDataSourceWithLayout_layoutSectionProvider);
    swift_beginAccess();
    void *v8 = sub_1AD3A53C4;
    v8[1] = v7;
    swift_retain();
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v9 = v2[8];
    uint64_t v10 = v2[9];
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = v3;
    void v11[3] = v4;
    void v11[4] = v9;
    void v11[5] = v10;
    uint64_t v12 = (void *)(v9 + OBJC_IVAR____TtC18HealthExperienceUI32MutableArrayDataSourceWithLayout_layoutSectionProvider);
    swift_beginAccess();
    *uint64_t v12 = sub_1AD3A53C4;
    v12[1] = v11;
    swift_retain();
  }
  swift_release();
  free(v2);
}

uint64_t sub_1AD3A3FE0()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC18HealthExperienceUI32MutableArrayDataSourceWithLayout_collapseEmptySections);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1AD3A4028(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC18HealthExperienceUI32MutableArrayDataSourceWithLayout_collapseEmptySections);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*sub_1AD3A4074())()
{
  return j__swift_endAccess;
}

uint64_t sub_1AD3A40D0(long long *a1)
{
  long long v7 = *a1;
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = (uint64_t (**)(long long *))(v1
                                           + OBJC_IVAR____TtC18HealthExperienceUI32MutableArrayDataSourceWithLayout_layoutSectionProvider);
  swift_beginAccess();
  uint64_t v4 = *v3;
  long long v8 = v7;
  uint64_t v9 = v2;
  swift_retain();
  uint64_t v5 = v4(&v8);
  swift_release();
  return v5;
}

uint64_t MutableArrayDataSourceWithLayout.__allocating_init(_:collapseEmptySections:sectionLayout:)(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v30 = sub_1AD73A670();
  uint64_t v7 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v24 = a3;
    int v25 = a2;
    uint64_t v26 = v3;
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1AD1FBB8C(0, v10, 0);
    uint64_t v11 = 0;
    unsigned int v27 = (void (**)(char *, uint64_t))(v7 + 8);
    int64_t v28 = v10;
    uint64_t v29 = a1;
    do
    {
      uint64_t v12 = *(void *)(a1 + 8 * v11 + 32);
      swift_bridgeObjectRetain_n();
      sub_1AD73A660();
      uint64_t v13 = sub_1AD73A620();
      uint64_t v15 = v14;
      (*v27)(v9, v30);
      sub_1AD1FBD54(MEMORY[0x1E4FBC860]);
      uint64_t v16 = swift_bridgeObjectRetain();
      uint64_t v17 = Array<A>.identifierToIndexDict()(v16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v18 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AD1FBB8C(0, *(void *)(v18 + 16) + 1, 1);
        uint64_t v18 = v31;
      }
      unint64_t v20 = *(void *)(v18 + 16);
      unint64_t v19 = *(void *)(v18 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1AD1FBB8C(v19 > 1, v20 + 1, 1);
        uint64_t v18 = v31;
      }
      ++v11;
      *(void *)(v18 + 16) = v20 + 1;
      char v21 = (void *)(v18 + 48 * v20);
      v21[4] = 0;
      v21[5] = 0;
      v21[6] = v12;
      v21[7] = v17;
      uint64_t v21[8] = v13;
      v21[9] = v15;
      a1 = v29;
    }
    while (v28 != v11);
    swift_bridgeObjectRelease();
    uint64_t v3 = v26;
    LOBYTE(a2) = v25;
    a3 = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a3;
  return (*(uint64_t (**)(uint64_t, void, id (*)(uint64_t, uint64_t), uint64_t))(v3 + 568))(v18, a2 & 1, sub_1AD3A4F2C, v22);
}

uint64_t sub_1AD3A440C@<X0>(void *a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC18HealthExperienceUI32MutableArrayDataSourceWithLayout_layoutSectionProvider);
  swift_beginAccess();
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  *a2 = sub_1AD3A5378;
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v6;
  return swift_retain();
}

uint64_t sub_1AD3A4498(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = (void *)(*a2 + OBJC_IVAR____TtC18HealthExperienceUI32MutableArrayDataSourceWithLayout_layoutSectionProvider);
  swift_beginAccess();
  void *v6 = sub_1AD3A5340;
  v6[1] = v5;
  swift_retain();
  return swift_release();
}

uint64_t sub_1AD3A4534(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  swift_retain();
  return sub_1AD3A3D38((uint64_t)sub_1AD3A52C4, v3);
}

id sub_1AD3A45A4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (uint64_t (**)(long long *))(Strong
                                             + OBJC_IVAR____TtC18HealthExperienceUI32MutableArrayDataSourceWithLayout_layoutSectionProvider);
    swift_beginAccess();
    uint64_t v6 = *v5;
    swift_retain();
    swift_unknownObjectRetain();
    *(void *)&long long v9 = a1;
    *((void *)&v9 + sub_1AD3829D8(_, viewForFooterInSection, 1) = a2;
    *(void *)&long long v10 = sub_1AD45DAAC(a1);
    uint64_t v7 = v6(&v9);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EB740018 != -1) {
      swift_once();
    }
    v17[4] = xmmword_1EB73ECE8;
    v17[5] = unk_1EB73ECF8;
    v17[6] = xmmword_1EB73ED08;
    v17[7] = unk_1EB73ED18;
    v17[0] = xmmword_1EB73ECA8;
    v17[1] = *(_OWORD *)&qword_1EB73ECB8;
    void v17[2] = unk_1EB73ECC8;
    void v17[3] = unk_1EB73ECD8;
    sub_1AD29176C();
    long long v13 = xmmword_1EB73ECE8;
    long long v14 = unk_1EB73ECF8;
    long long v15 = xmmword_1EB73ED08;
    long long v16 = unk_1EB73ED18;
    long long v9 = xmmword_1EB73ECA8;
    long long v10 = *(_OWORD *)&qword_1EB73ECB8;
    long long v11 = unk_1EB73ECC8;
    long long v12 = unk_1EB73ECD8;
    sub_1AD212ECC((uint64_t)v17);
    return sub_1AD213458(&v9);
  }
  return (id)v7;
}

uint64_t sub_1AD3A4748(void *a1, uint64_t (*a2)(void, void))
{
  uint64_t result = a2(*a1, a1[1]);
  if (!result)
  {
    sub_1AD740680();
    swift_bridgeObjectRelease();
    sub_1AD740E30();
    sub_1AD73F300();
    swift_bridgeObjectRelease();
    sub_1AD73F300();
    type metadata accessor for MutableArrayDataSourceWithLayout();
    swift_retain();
    sub_1AD73F220();
    sub_1AD73F300();
    swift_bridgeObjectRelease();
    sub_1AD276C68();
    swift_allocError();
    *(void *)uint64_t v3 = 91;
    *(void *)(v3 + 8) = 0xE100000000000000;
    *(unsigned char *)(v3 + 16) = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t MutableArrayDataSourceWithLayout.__allocating_init(arrangedSections:collapseEmptySections:layoutConstructor:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return MutableArrayDataSourceWithLayout.init(arrangedSections:collapseEmptySections:layoutConstructor:)(a1, a2, a3, a4);
}

uint64_t sub_1AD3A48DC(void *a1, uint64_t (*a2)(void, void))
{
  return sub_1AD21287C(a1, a2);
}

uint64_t sub_1AD3A48F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t MutableArrayDataSourceWithLayout.__allocating_init(arrangedSections:collapseEmptySections:sectionLayout:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, id (*)(uint64_t, uint64_t), uint64_t))(v3 + 568);
  return v8(a1, a2, sub_1AD3A53AC, v7);
}

id sub_1AD3A49B4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (!a3)
  {
    if (qword_1EB740020 != -1) {
      swift_once();
    }
    _OWORD v8[4] = xmmword_1EB73ED68;
    void v8[5] = unk_1EB73ED78;
    uint64_t v8[6] = xmmword_1EB73ED88;
    v8[7] = xmmword_1EB73ED98;
    v8[0] = xmmword_1EB73ED28;
    v8[1] = *(_OWORD *)&qword_1EB73ED38;
    long long v8[2] = unk_1EB73ED48;
    v8[3] = *(_OWORD *)&qword_1EB73ED58;
    sub_1AD29176C();
    void v7[4] = xmmword_1EB73ED68;
    void v7[5] = unk_1EB73ED78;
    v7[6] = xmmword_1EB73ED88;
    v7[7] = xmmword_1EB73ED98;
    v7[0] = xmmword_1EB73ED28;
    v7[1] = *(_OWORD *)&qword_1EB73ED38;
    void v7[2] = unk_1EB73ED48;
    _OWORD v7[3] = *(_OWORD *)&qword_1EB73ED58;
    sub_1AD212ECC((uint64_t)v8);
    id v4 = sub_1AD213458(v7);
  }
  id v5 = a3;
  return v4;
}

uint64_t MutableArrayDataSourceWithLayout.__allocating_init(_:collapseEmptySections:layoutSectionProvider:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v33 = sub_1AD73A670();
  uint64_t v9 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  long long v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    int v26 = a2;
    uint64_t v27 = a3;
    uint64_t v28 = a4;
    uint64_t v29 = v4;
    uint64_t v34 = MEMORY[0x1E4FBC860];
    sub_1AD1FBB8C(0, v12, 0);
    uint64_t v13 = 0;
    uint64_t v30 = (void (**)(char *, uint64_t))(v9 + 8);
    int64_t v31 = v12;
    uint64_t v32 = a1;
    do
    {
      uint64_t v14 = *(void *)(a1 + 8 * v13 + 32);
      swift_bridgeObjectRetain_n();
      sub_1AD73A660();
      uint64_t v15 = sub_1AD73A620();
      uint64_t v17 = v16;
      (*v30)(v11, v33);
      sub_1AD1FBD54(MEMORY[0x1E4FBC860]);
      uint64_t v18 = swift_bridgeObjectRetain();
      uint64_t v19 = Array<A>.identifierToIndexDict()(v18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v20 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AD1FBB8C(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v34;
      }
      unint64_t v22 = *(void *)(v20 + 16);
      unint64_t v21 = *(void *)(v20 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1AD1FBB8C(v21 > 1, v22 + 1, 1);
        uint64_t v20 = v34;
      }
      ++v13;
      *(void *)(v20 + 16) = v22 + 1;
      int v23 = (void *)(v20 + 48 * v22);
      v23[4] = 0;
      v23[5] = 0;
      v23[6] = v14;
      v23[7] = v19;
      v23[8] = v15;
      v23[9] = v17;
      a1 = v32;
    }
    while (v31 != v13);
    swift_bridgeObjectRelease();
    a4 = v28;
    uint64_t v4 = v29;
    a3 = v27;
    LOBYTE(a2) = v26;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = MEMORY[0x1E4FBC860];
  }
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 592))(v20, a2 & 1, a3, a4);
}

void MutableArrayDataSourceWithLayout.init(arrangedSections:identifier:)()
{
}

uint64_t sub_1AD3A4D38()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

id sub_1AD3A4D70(uint64_t a1, uint64_t a2)
{
  return sub_1AD3A45A4(a1, a2);
}

uint64_t sub_1AD3A4D78()
{
  return swift_release();
}

uint64_t MutableArrayDataSourceWithLayout.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18HealthExperienceUI22MutableArrayDataSource_snapshot;
  sub_1AD20E2C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD3A4E8C(void *a1)
{
  return sub_1AD3A4748(a1, *(uint64_t (**)(void, void))(v1 + 16));
}

uint64_t objectdestroy_5Tm_0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD3A4EF4()
{
  return swift_deallocObject();
}

id sub_1AD3A4F2C(uint64_t a1, uint64_t a2)
{
  return sub_1AD3A49B4(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1AD3A4F3C@<X0>(void *a1@<X8>)
{
  sub_1AD3A3AE4();
  uint64_t v3 = v2;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_1AD3A4D70;
  *(void *)(result + 24) = v3;
  *a1 = sub_1AD3A5308;
  a1[1] = result;
  return result;
}

uint64_t sub_1AD3A4FA8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC18HealthExperienceUI32MutableArrayDataSourceWithLayout_collapseEmptySections);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1AD3A4FFC(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC18HealthExperienceUI32MutableArrayDataSourceWithLayout_collapseEmptySections);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = v2;
  return result;
}

uint64_t sub_1AD3A504C()
{
  return type metadata accessor for MutableArrayDataSourceWithLayout();
}

uint64_t method lookup function for MutableArrayDataSourceWithLayout(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MutableArrayDataSourceWithLayout);
}

uint64_t dispatch thunk of MutableArrayDataSourceWithLayout.layoutSectionProvider.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t dispatch thunk of MutableArrayDataSourceWithLayout.layoutSectionProvider.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of MutableArrayDataSourceWithLayout.layoutSectionProvider.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of MutableArrayDataSourceWithLayout.layoutConstructor.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t dispatch thunk of MutableArrayDataSourceWithLayout.layoutConstructor.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 528))();
}

uint64_t dispatch thunk of MutableArrayDataSourceWithLayout.layoutConstructor.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of MutableArrayDataSourceWithLayout.collapseEmptySections.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t dispatch thunk of MutableArrayDataSourceWithLayout.collapseEmptySections.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 552))();
}

uint64_t dispatch thunk of MutableArrayDataSourceWithLayout.collapseEmptySections.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 560))();
}

uint64_t dispatch thunk of MutableArrayDataSourceWithLayout.__allocating_init(arrangedSections:collapseEmptySections:layoutConstructor:)()
{
  return (*(uint64_t (**)(void))(v0 + 568))();
}

uint64_t dispatch thunk of MutableArrayDataSourceWithLayout.layout(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

uint64_t dispatch thunk of MutableArrayDataSourceWithLayout.shouldCollapseEmptySection(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 584))();
}

uint64_t dispatch thunk of MutableArrayDataSourceWithLayout.__allocating_init(arrangedSections:collapseEmptySections:layoutSectionProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 592))();
}

uint64_t sub_1AD3A528C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD3A52C4(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  uint64_t v3 = *(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t *))(v2 + 16);
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  v3(&v5, &v7, &v6);
  return v5;
}

uint64_t sub_1AD3A5308@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v3 + 16))(*a1, *a2);
  *a3 = result;
  return result;
}

void *sub_1AD3A5340()
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v0 + 16))(&v3);
  if (!v1) {
    return (void *)v3;
  }
  return result;
}

uint64_t sub_1AD3A5378@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1AD3A53C4(void *a1)
{
  return sub_1AD3A4E8C(a1);
}

void sub_1AD3A53DC(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_contentView);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unsigned char *v3 = v2;
  id v5 = v2;
  sub_1AD3A5454(v4);
}

void sub_1AD3A5454(void *a1)
{
  uint64_t v2 = v1;
  if (!a1) {
    goto LABEL_24;
  }
  sub_1AD3A6D1C(0, &qword_1E9A2D280, (uint64_t (*)(uint64_t))sub_1AD3A6CB4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD7511A0;
  uint64_t v5 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_sharedConstraints];
  *(void *)(inited + 32) = v5;
  uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_centeredConstraints];
  *(void *)(inited + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v6;
  uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_scrollingConstraints];
  *(void *)(inited + 48) = v7;
  if (v5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    id v8 = a1;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1AD51CBD0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v11 = v9[2];
    unint64_t v10 = v9[3];
    if (v11 >= v10 >> 1) {
      uint64_t v9 = sub_1AD51CBD0((void *)(v10 > 1), v11 + 1, 1, v9);
    }
    long long v9[2] = v11 + 1;
    v9[v11 + 4] = v5;
    if (!v6) {
      goto LABEL_13;
    }
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  id v12 = a1;
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  if (v6)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1AD51CBD0(0, v9[2] + 1, 1, v9);
    }
    unint64_t v14 = v9[2];
    unint64_t v13 = v9[3];
    if (v14 >= v13 >> 1) {
      uint64_t v9 = sub_1AD51CBD0((void *)(v13 > 1), v14 + 1, 1, v9);
    }
    long long v9[2] = v14 + 1;
    v9[v14 + 4] = v6;
  }
LABEL_13:
  if (v7)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1AD51CBD0(0, v9[2] + 1, 1, v9);
    }
    unint64_t v16 = v9[2];
    unint64_t v15 = v9[3];
    if (v16 >= v15 >> 1) {
      uint64_t v9 = sub_1AD51CBD0((void *)(v15 > 1), v16 + 1, 1, v9);
    }
    long long v9[2] = v16 + 1;
    v9[v16 + 4] = v7;
  }
  swift_release();
  uint64_t v17 = v9[2];
  if (v17)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = 0;
    do
    {
      unint64_t v19 = v9[v18++ + 4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1AD21FC9C(v19);
      swift_bridgeObjectRelease();
    }
    while (v17 != v18);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = self;
  sub_1AD1EED2C();
  unint64_t v21 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_deactivateConstraints_, v21);

  objc_msgSend(a1, sel_removeFromSuperview);
LABEL_24:
  unint64_t v22 = (id *)&v2[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_contentView];
  swift_beginAccess();
  if (!*v22) {
    return;
  }
  int v23 = *(void **)&v2[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView__internalContentView];
  id v24 = *v22;
  objc_msgSend(v23, sel_addSubview_, v24);
  sub_1AD1EFDA4();
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1AD74DE20;
  id v26 = objc_msgSend(v24, sel_leadingAnchor);
  id v27 = objc_msgSend(v23, sel_leadingAnchor);
  id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v27);

  *(void *)(v25 + 32) = v28;
  id v29 = objc_msgSend(v24, sel_trailingAnchor);
  id v30 = objc_msgSend(v23, sel_trailingAnchor);
  id v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v30);

  *(void *)(v25 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v31;
  sub_1AD73F4D0();
  uint64_t v32 = OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_sharedConstraints;
  *(void *)&v2[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_sharedConstraints] = v25;
  swift_bridgeObjectRelease();
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1AD74DE20;
  id v34 = objc_msgSend(v24, sel_topAnchor);
  id v35 = objc_msgSend(v23, sel_topAnchor);
  id v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v35);

  *(void *)(v33 + 32) = v36;
  id v37 = objc_msgSend(v23, sel_bottomAnchor);
  id v38 = objc_msgSend(v24, sel_bottomAnchor);
  id v39 = objc_msgSend(v37, sel_constraintGreaterThanOrEqualToAnchor_, v38);

  *(void *)(v33 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v39;
  sub_1AD73F4D0();
  uint64_t v40 = OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_scrollingConstraints;
  *(void *)&v2[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_scrollingConstraints] = v33;
  swift_bridgeObjectRelease();
  id v41 = objc_msgSend(v23, sel_heightAnchor);
  id v42 = objc_msgSend(v2, sel_heightAnchor);
  id v43 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v42);

  LODWORD(v44) = 1132068864;
  objc_msgSend(v43, sel_setPriority_, v44);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1AD74DE20;
  *(void *)(v45 + 32) = v43;
  id v46 = v43;
  id v47 = objc_msgSend(v24, sel_centerYAnchor);
  id v48 = objc_msgSend(v23, sel_centerYAnchor);
  id v49 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v48);

  *(void *)(v45 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v49;
  sub_1AD73F4D0();
  *(void *)&v2[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_centeredConstraints] = v45;
  swift_bridgeObjectRelease();
  sub_1AD3A6D1C(0, &qword_1E9A2D280, (uint64_t (*)(uint64_t))sub_1AD3A6CB4, MEMORY[0x1E4FBBE00]);
  uint64_t v50 = swift_initStackObject();
  *(_OWORD *)(v50 + 16) = xmmword_1AD74C350;
  uint64_t v51 = *(void *)&v2[v32];
  *(void *)(v50 + 32) = v51;
  uint64_t v52 = *(void *)&v2[v40];
  *(void *)(v50 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v52;
  if (v51)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    uint64_t v53 = sub_1AD51CBD0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v55 = v53[2];
    unint64_t v54 = v53[3];
    if (v55 >= v54 >> 1) {
      uint64_t v53 = sub_1AD51CBD0((void *)(v54 > 1), v55 + 1, 1, v53);
    }
    v53[2] = v55 + 1;
    v53[v55 + 4] = v51;
    if (!v52) {
      goto LABEL_36;
    }
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  uint64_t v53 = (void *)MEMORY[0x1E4FBC860];
  if (v52)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v53 = sub_1AD51CBD0(0, v53[2] + 1, 1, v53);
    }
    unint64_t v57 = v53[2];
    unint64_t v56 = v53[3];
    if (v57 >= v56 >> 1) {
      uint64_t v53 = sub_1AD51CBD0((void *)(v56 > 1), v57 + 1, 1, v53);
    }
    v53[2] = v57 + 1;
    v53[v57 + 4] = v52;
  }
LABEL_36:
  swift_release();
  uint64_t v58 = v53[2];
  if (v58)
  {
    swift_bridgeObjectRetain();
    uint64_t v59 = 0;
    do
    {
      unint64_t v60 = v53[v59++ + 4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1AD21FC9C(v60);
      swift_bridgeObjectRelease();
    }
    while (v58 != v59);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v61 = self;
  sub_1AD1EED2C();
  uint64_t v62 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  objc_msgSend(v61, sel_activateConstraints_, v62);
}

void *sub_1AD3A5D20()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_contentView);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1AD3A5D70(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_contentView);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unsigned char *v3 = a1;
  id v5 = a1;
  sub_1AD3A5454(v4);
}

void (*sub_1AD3A5DE0(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_contentView;
  v3[4] = v1;
  v3[5] = v4;
  id v5 = (void **)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *v5;
  v3[3] = *v5;
  id v7 = v6;
  return sub_1AD3A5E68;
}

void sub_1AD3A5E68(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = (void **)(*(void *)a1 + 24);
  id v3 = *v4;
  uint64_t v6 = *(void *)(*(void *)a1 + 32);
  uint64_t v5 = *(void *)(*(void *)a1 + 40);
  id v7 = *(void **)(v6 + v5);
  *(void *)(v6 + v5) = *v4;
  if (a2)
  {
    id v8 = v3;
    sub_1AD3A5454(v7);

    id v7 = *v4;
  }
  else
  {
    id v9 = v3;
    sub_1AD3A5454(v7);
  }
  free(v2);
}

char *sub_1AD3A5F04(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_contentView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_centeredConstraints] = 0;
  *(void *)&v4[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_scrollingConstraints] = 0;
  *(void *)&v4[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_sharedConstraints] = 0;
  id v9 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  unint64_t v10 = v4;
  id v11 = objc_msgSend(v9, sel_init);
  *(void *)&v10[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView__internalContentView] = v11;

  v35.receiver = v10;
  v35.super_class = (Class)type metadata accessor for VerticallyCenteredContentScrollView();
  id v12 = (char *)objc_msgSendSuper2(&v35, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v13 = OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView__internalContentView;
  unint64_t v14 = *(void **)&v12[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView__internalContentView];
  unint64_t v15 = v12;
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v15, sel_addSubview_, v14);
  unint64_t v16 = self;
  sub_1AD1EFDA4();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1AD74C710;
  id v18 = objc_msgSend(v14, sel_topAnchor);
  id v19 = objc_msgSend(v15, sel_topAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(void *)(v17 + 32) = v20;
  id v21 = objc_msgSend(*(id *)&v12[v13], sel_leadingAnchor);
  id v22 = objc_msgSend(v15, sel_leadingAnchor);
  id v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

  *(void *)(v17 + 4sub_1AD3829D8(_, viewForHeaderInSection, 0) = v23;
  id v24 = objc_msgSend(*(id *)&v12[v13], sel_trailingAnchor);
  id v25 = objc_msgSend(v15, sel_trailingAnchor);
  id v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

  *(void *)(v17 + 48) = v26;
  id v27 = objc_msgSend(*(id *)&v12[v13], sel_widthAnchor);
  id v28 = objc_msgSend(v15, sel_widthAnchor);
  id v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  *(void *)(v17 + 56) = v29;
  id v30 = objc_msgSend(*(id *)&v12[v13], sel_bottomAnchor);
  id v31 = objc_msgSend(v15, sel_bottomAnchor);
  id v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v31);

  *(void *)(v17 + 64) = v32;
  sub_1AD73F4D0();
  sub_1AD1EED2C();
  uint64_t v33 = (void *)sub_1AD73F490();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_activateConstraints_, v33);

  return v15;
}

void sub_1AD3A6348()
{
  uint64_t v1 = v0;
  v46.receiver = v0;
  v46.super_class = (Class)type metadata accessor for VerticallyCenteredContentScrollView();
  objc_msgSendSuper2(&v46, sel_layoutSubviews);
  uint64_t v2 = (id *)&v0[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_contentView];
  swift_beginAccess();
  if (*v2)
  {
    id v3 = *v2;
    objc_msgSend(v1, sel_bounds);
    double v5 = v4;
    objc_msgSend(v3, sel_frame);
    double v7 = v6;
    if (v6 >= v5)
    {
      unint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_centeredConstraints];
      unint64_t v9 = MEMORY[0x1E4FBC860];
      if (!v8) {
        goto LABEL_28;
      }
      uint64_t v42 = MEMORY[0x1E4FBC860];
      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = sub_1AD7408D0();
        if (v10) {
          goto LABEL_6;
        }
      }
      else
      {
        uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v10)
        {
LABEL_6:
          if (v10 >= 1)
          {
            for (uint64_t i = 0; i != v10; ++i)
            {
              if ((v8 & 0xC000000000000001) != 0) {
                id v12 = (id)MEMORY[0x1B3E669F0](i, v8);
              }
              else {
                id v12 = *(id *)(v8 + 8 * i + 32);
              }
              uint64_t v13 = v12;
              if (objc_msgSend(v12, sel_isActive, v42))
              {
                sub_1AD740750();
                sub_1AD740790();
                sub_1AD7407A0();
                sub_1AD740760();
              }
              else
              {
              }
            }
            swift_bridgeObjectRelease();
            unint64_t v9 = v42;
LABEL_28:
            if (!(v9 >> 62)) {
              goto LABEL_29;
            }
            goto LABEL_37;
          }
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          __break(1u);
          goto LABEL_88;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v9 = MEMORY[0x1E4FBC860];
      if (!(MEMORY[0x1E4FBC860] >> 62))
      {
LABEL_29:
        if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_30:
          id v20 = self;
          sub_1AD1EED2C();
          id v21 = (void *)sub_1AD73F490();
          swift_bridgeObjectRelease();
          objc_msgSend(v20, sel_deactivateConstraints_, v21);

          goto LABEL_39;
        }
LABEL_38:
        swift_bridgeObjectRelease();
LABEL_39:
        unint64_t v25 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_scrollingConstraints];
        unint64_t v26 = MEMORY[0x1E4FBC860];
        if (!v25) {
          goto LABEL_52;
        }
        uint64_t v44 = MEMORY[0x1E4FBC860];
        if (v25 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v27 = sub_1AD7408D0();
          if (v27)
          {
LABEL_42:
            if (v27 >= 1)
            {
              for (uint64_t j = 0; j != v27; ++j)
              {
                if ((v25 & 0xC000000000000001) != 0) {
                  id v29 = (id)MEMORY[0x1B3E669F0](j, v25);
                }
                else {
                  id v29 = *(id *)(v25 + 8 * j + 32);
                }
                id v30 = v29;
                if (objc_msgSend(v29, sel_isActive, v44))
                {
                }
                else
                {
                  sub_1AD740750();
                  sub_1AD740790();
                  sub_1AD7407A0();
                  sub_1AD740760();
                }
              }
              swift_bridgeObjectRelease();
              unint64_t v26 = v44;
LABEL_52:
              if (!(v26 >> 62)) {
                goto LABEL_53;
              }
              goto LABEL_77;
            }
            goto LABEL_87;
          }
        }
        else
        {
          uint64_t v27 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v27) {
            goto LABEL_42;
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v26 = MEMORY[0x1E4FBC860];
        if (!(MEMORY[0x1E4FBC860] >> 62))
        {
LABEL_53:
          if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_74;
          }
LABEL_82:
          swift_bridgeObjectRelease();
          goto LABEL_83;
        }
LABEL_77:
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_1AD7408D0();
        swift_bridgeObjectRelease();
        if (v40) {
          goto LABEL_74;
        }
        goto LABEL_82;
      }
LABEL_37:
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1AD7408D0();
      swift_bridgeObjectRelease();
      if (v24) {
        goto LABEL_30;
      }
      goto LABEL_38;
    }
    unint64_t v14 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_scrollingConstraints];
    unint64_t v15 = MEMORY[0x1E4FBC860];
    if (!v14)
    {
LABEL_32:
      if (!(v15 >> 62)) {
        goto LABEL_33;
      }
      goto LABEL_57;
    }
    uint64_t v43 = MEMORY[0x1E4FBC860];
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1AD7408D0();
      if (v16) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v16)
      {
LABEL_18:
        if (v16 < 1) {
          goto LABEL_86;
        }
        for (uint64_t k = 0; k != v16; ++k)
        {
          if ((v14 & 0xC000000000000001) != 0) {
            id v18 = (id)MEMORY[0x1B3E669F0](k, v14);
          }
          else {
            id v18 = *(id *)(v14 + 8 * k + 32);
          }
          id v19 = v18;
          if (objc_msgSend(v18, sel_isActive, v43))
          {
            sub_1AD740750();
            sub_1AD740790();
            sub_1AD7407A0();
            sub_1AD740760();
          }
          else
          {
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v15 = v43;
        goto LABEL_32;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v15 = MEMORY[0x1E4FBC860];
    if (!(MEMORY[0x1E4FBC860] >> 62))
    {
LABEL_33:
      if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_34:
        id v22 = self;
        sub_1AD1EED2C();
        id v23 = (void *)sub_1AD73F490();
        swift_bridgeObjectRelease();
        objc_msgSend(v22, sel_deactivateConstraints_, v23);

        goto LABEL_59;
      }
LABEL_58:
      swift_bridgeObjectRelease();
LABEL_59:
      unint64_t v32 = *(void *)&v1[OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_centeredConstraints];
      unint64_t v33 = MEMORY[0x1E4FBC860];
      if (!v32) {
        goto LABEL_72;
      }
      uint64_t v45 = MEMORY[0x1E4FBC860];
      if (v32 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v34 = sub_1AD7408D0();
        if (v34) {
          goto LABEL_62;
        }
      }
      else
      {
        uint64_t v34 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v34)
        {
LABEL_62:
          if (v34 < 1)
          {
LABEL_88:
            __break(1u);
            return;
          }
          for (uint64_t m = 0; m != v34; ++m)
          {
            if ((v32 & 0xC000000000000001) != 0) {
              id v36 = (id)MEMORY[0x1B3E669F0](m, v32);
            }
            else {
              id v36 = *(id *)(v32 + 8 * m + 32);
            }
            id v37 = v36;
            if (objc_msgSend(v36, sel_isActive, v45))
            {
            }
            else
            {
              sub_1AD740750();
              sub_1AD740790();
              sub_1AD7407A0();
              sub_1AD740760();
            }
          }
          swift_bridgeObjectRelease();
          unint64_t v33 = v45;
LABEL_72:
          if (!(v33 >> 62)) {
            goto LABEL_73;
          }
          goto LABEL_81;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v33 = MEMORY[0x1E4FBC860];
      if (!(MEMORY[0x1E4FBC860] >> 62))
      {
LABEL_73:
        if (!*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_82;
        }
LABEL_74:
        id v38 = self;
        sub_1AD1EED2C();
        id v39 = (void *)sub_1AD73F490();
        swift_bridgeObjectRelease();
        objc_msgSend(v38, sel_activateConstraints_, v39);

LABEL_83:
        objc_msgSend(v1, sel_setShowsVerticalScrollIndicator_, v7 >= v5);

        return;
      }
LABEL_81:
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_1AD7408D0();
      swift_bridgeObjectRelease();
      if (!v41) {
        goto LABEL_82;
      }
      goto LABEL_74;
    }
LABEL_57:
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1AD7408D0();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_34;
    }
    goto LABEL_58;
  }
}

id VerticallyCenteredContentScrollView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VerticallyCenteredContentScrollView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for VerticallyCenteredContentScrollView()
{
  return self;
}

id sub_1AD3A6B98@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  id v3 = (void **)(*a1 + OBJC_IVAR____TtC18HealthExperienceUI35VerticallyCenteredContentScrollView_contentView);
  swift_beginAccess();
  double v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for VerticallyCenteredContentScrollView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VerticallyCenteredContentScrollView);
}

uint64_t dispatch thunk of VerticallyCenteredContentScrollView.contentView.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of VerticallyCenteredContentScrollView.contentView.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of VerticallyCenteredContentScrollView.contentView.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

void sub_1AD3A6CB4(uint64_t a1)
{
}

void sub_1AD3A6CE8(uint64_t a1)
{
}

void sub_1AD3A6D1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t DataType.uniqueIdentifier.getter()
{
  uint64_t v0 = (void *)sub_1AD73B2C0();
  if (!v0) {
    return 7104878;
  }
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_identifier);

  uint64_t v3 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  return v3;
}

uint64_t DataType.reuseIdentifier.getter()
{
  return sub_1AD73F220();
}

unint64_t sub_1AD3A6E34()
{
  unint64_t result = qword_1EB7325E0;
  if (!qword_1EB7325E0)
  {
    type metadata accessor for ContentConfigurationCollectionViewListCell();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB7325E0);
  }
  return result;
}

uint64_t sub_1AD3A6E70()
{
  return sub_1AD73F220();
}

uint64_t sub_1AD3A6EAC()
{
  uint64_t v0 = (void *)sub_1AD73B2C0();
  if (!v0) {
    return 7104878;
  }
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_identifier);

  uint64_t v3 = _sSo19HKFeatureIdentifiera18HealthExperienceUIE2idSSvg_0();
  return v3;
}

void sub_1AD3A6F84()
{
  v37[4] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = sub_1AD73F210();
  MEMORY[0x1F4188790](v1 - 8);
  v36.receiver = v0;
  v36.super_class = (Class)type metadata accessor for InternalFeedItemDataPropertyViewController();
  objc_msgSendSuper2(&v36, sel_viewDidLoad);
  id v2 = (void *)sub_1AD73F180();
  objc_msgSend(v0, sel_setTitle_, v2);

  id v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
    __break(1u);
    goto LABEL_15;
  }
  double v4 = v3;
  double v5 = self;
  id v6 = objc_msgSend(v5, sel_systemBackgroundColor);
  objc_msgSend(v4, sel_setBackgroundColor_, v6);

  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1DD8]), sel_init);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v8 = v7;
  id v9 = objc_msgSend(v5, sel_clearColor);
  objc_msgSend(v8, sel_setBackgroundColor_, v9);

  id v10 = objc_msgSend(v5, sel_labelColor);
  objc_msgSend(v8, sel_setTextColor_, v10);

  objc_msgSend(v8, sel_setBounces_, 1);
  unint64_t v11 = *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI42InternalFeedItemDataPropertyViewController_data + 8];
  if (v11 >> 60 != 15)
  {
    uint64_t v12 = *(void *)&v0[OBJC_IVAR____TtC18HealthExperienceUI42InternalFeedItemDataPropertyViewController_data];
    uint64_t v13 = self;
    sub_1AD20A054(v12, v11);
    unint64_t v14 = (void *)sub_1AD73A4D0();
    id v35 = 0;
    id v15 = objc_msgSend(v13, sel_JSONObjectWithData_options_error_, v14, 0, &v35);

    id v16 = v35;
    if (v15)
    {
      sub_1AD7404B0();
      swift_unknownObjectRelease();
      __swift_project_boxed_opaque_existential_1(v37, v37[3]);
      uint64_t v17 = sub_1AD740BA0();
      id v35 = 0;
      id v18 = objc_msgSend(v13, sel_dataWithJSONObject_options_error_, v17, 1, &v35);
      swift_unknownObjectRelease();
      id v19 = v35;
      if (v18)
      {
        uint64_t v20 = sub_1AD73A4E0();
        unint64_t v22 = v21;

        sub_1AD73F200();
        sub_1AD73F1D0();
        uint64_t v24 = v23;
        sub_1AD208DFC(v20, v22);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
        if (!v24)
        {
          sub_1AD20A054(v12, v11);
          sub_1AD73A4C0();
          sub_1AD228620(v12, v11);
        }
        sub_1AD228620(v12, v11);
        goto LABEL_11;
      }
      uint64_t v27 = v19;
      unint64_t v26 = (void *)sub_1AD73A360();

      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    }
    else
    {
      unint64_t v25 = v16;
      unint64_t v26 = (void *)sub_1AD73A360();

      swift_willThrow();
    }
    sub_1AD20A054(v12, v11);
    sub_1AD73A4C0();
    sub_1AD228620(v12, v11);
    sub_1AD228620(v12, v11);
  }
LABEL_11:
  id v28 = (void *)sub_1AD73F180();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setText_, v28);

  id v29 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v8, sel_setFont_, v29);

  objc_msgSend(v8, sel_setEditable_, 0);
  id v30 = objc_msgSend(v0, sel_view);
  if (!v30)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  uint64_t v31 = v30;
  objc_msgSend(v30, sel_addSubview_, v8);

  id v32 = objc_msgSend(v0, sel_view);
  if (!v32) {
    goto LABEL_16;
  }
  unint64_t v33 = v32;
  id v34 = objc_msgSend(v32, sel_layoutMarginsGuide);

  objc_msgSend(v8, sel_hk_alignConstraintsWithGuide_, v34);
}

id sub_1AD3A7538()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InternalFeedItemDataPropertyViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for InternalFeedItemDataPropertyViewController()
{
  return self;
}

uint64_t dispatch thunk of PluginInternalSettingsProviding.makeInternalSettingsViewController()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t static ChartContext.version.getter()
{
  return 3;
}

uint64_t static ChartContext.supportsSecureCoding.getter()
{
  return 1;
}

unint64_t static ChartContext.contextArchiveKey.getter()
{
  return 0xD000000000000016;
}

unint64_t static ChartContext.dateKey.getter()
{
  return 0xD000000000000013;
}

unint64_t static ChartContext.dateIntervalKey.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static ChartContext.preferredOverlayKey.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static ChartContext.trendActiveKey.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t static ChartContext.chartOptionsKey.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t ChartContext.date.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD3A7700(v1 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_date, a1, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928]);
}

uint64_t ChartContext.dateInterval.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD3A7700(v1 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_dateInterval, a1, &qword_1EB73E780, MEMORY[0x1E4F26E60]);
}

uint64_t sub_1AD3A7700(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1AD1D722C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1AD3A776C()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_preferredOverlayRawValue + 8)) {
    return 0;
  }
  else {
    return *(void *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_preferredOverlayRawValue);
  }
}

uint64_t sub_1AD3A778C(uint64_t result)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_preferredOverlayRawValue;
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = 0;
  return result;
}

uint64_t (*sub_1AD3A77A4(void *a1))()
{
  uint64_t v2 = OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_preferredOverlayRawValue;
  a1[1] = v1;
  a1[2] = v2;
  id v3 = (uint64_t *)(v1 + v2);
  int v4 = *((unsigned __int8 *)v3 + 8);
  uint64_t v5 = *v3;
  if (v4) {
    uint64_t v5 = 0;
  }
  *a1 = v5;
  return sub_1AD3A77E8;
}

uint64_t sub_1AD3A77EC()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_trendActiveRawValue + 8)) {
    return 0;
  }
  else {
    return *(void *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_trendActiveRawValue);
  }
}

uint64_t sub_1AD3A780C(uint64_t result)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_trendActiveRawValue;
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = 0;
  return result;
}

uint64_t (*sub_1AD3A7824(void *a1))()
{
  uint64_t v2 = OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_trendActiveRawValue;
  a1[1] = v1;
  a1[2] = v2;
  id v3 = (uint64_t *)(v1 + v2);
  int v4 = *((unsigned __int8 *)v3 + 8);
  uint64_t v5 = *v3;
  if (v4) {
    uint64_t v5 = 0;
  }
  *a1 = v5;
  return sub_1AD3A77E8;
}

void *sub_1AD3A7868(void *result)
{
  uint64_t v1 = result[1] + result[2];
  *(void *)uint64_t v1 = *result;
  *(unsigned char *)(v1 + 8) = 0;
  return result;
}

void sub_1AD3A7880(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_chartOptionsRawValue + 8)) {
    *a1 = 0;
  }
  else {
    *a1 = *(void *)(v1 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_chartOptionsRawValue);
  }
}

HealthExperienceUI::ChartContext::ChartOptions __swiftcall ChartContext.ChartOptions.init(rawValue:)(HealthExperienceUI::ChartContext::ChartOptions rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void *sub_1AD3A78B0(void *result)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_chartOptionsRawValue;
  *(void *)uint64_t v2 = *result;
  *(unsigned char *)(v2 + 8) = 0;
  return result;
}

void *(*sub_1AD3A78CC(void *a1))(void *result)
{
  uint64_t v2 = OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_chartOptionsRawValue;
  a1[1] = v1;
  a1[2] = v2;
  id v3 = (uint64_t *)(v1 + v2);
  if (v3[1]) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = *v3;
  }
  *a1 = v4;
  return sub_1AD3A7868;
}

uint64_t ChartContext.__allocating_init(date:preferredOverlay:trendActive:chartOptions:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  int v9 = a3 & 1;
  sub_1AD1D722C(0, &qword_1EB73E780, MEMORY[0x1E4F26E60]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v22 - v11;
  uint64_t v13 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AD1D722C(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v14 - 8);
  id v16 = (char *)&v22 - v15;
  uint64_t v17 = *a5;
  sub_1AD3A7700(a1, (uint64_t)&v22 - v15, (unint64_t *)&unk_1EB741390, v13);
  uint64_t v18 = sub_1AD739E10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 1, v18);
  uint64_t v23 = v17;
  id v19 = objc_allocWithZone((Class)type metadata accessor for ChartContext());
  uint64_t v20 = sub_1AD3A7C8C((uint64_t)v16, (uint64_t)v12, a2, v9, a4, &v23);
  sub_1AD3A9B90(a1, (unint64_t *)&unk_1EB741390, v13);
  return v20;
}

uint64_t ChartContext.__allocating_init(dateInterval:preferredOverlay:trendActive:chartOptions:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  int v9 = a3 & 1;
  uint64_t v10 = (void (*)(uint64_t))MEMORY[0x1E4F26E60];
  sub_1AD1D722C(0, &qword_1EB73E780, MEMORY[0x1E4F26E60]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v22 - v12;
  sub_1AD1D722C(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v14 - 8);
  id v16 = (char *)&v22 - v15;
  uint64_t v17 = *a5;
  uint64_t v18 = sub_1AD73A600();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
  sub_1AD3A7700(a1, (uint64_t)v13, &qword_1EB73E780, v10);
  uint64_t v23 = v17;
  id v19 = objc_allocWithZone((Class)type metadata accessor for ChartContext());
  uint64_t v20 = sub_1AD3A7C8C((uint64_t)v16, (uint64_t)v13, a2, v9, a4, &v23);
  sub_1AD3A9B90(a1, &qword_1EB73E780, v10);
  return v20;
}

uint64_t sub_1AD3A7C8C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v38 = a3;
  uint64_t v39 = a5;
  int v37 = a4;
  uint64_t v41 = a2;
  int v9 = (void (*)(uint64_t))MEMORY[0x1E4F26E60];
  sub_1AD1D722C(0, &qword_1EB73E780, MEMORY[0x1E4F26E60]);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v36 - v14;
  id v16 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AD1D722C(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v17 - 8);
  id v19 = (char *)&v36 - v18;
  uint64_t v36 = *a6;
  uint64_t v20 = &v6[OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_preferredOverlayRawValue];
  *(void *)uint64_t v20 = 0;
  v20[8] = 1;
  unint64_t v21 = &v6[OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_trendActiveRawValue];
  *(void *)unint64_t v21 = 0;
  uint64_t v21[8] = 1;
  uint64_t v22 = &v6[OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_chartOptionsRawValue];
  *(void *)uint64_t v22 = 0;
  v22[8] = 1;
  uint64_t v40 = a1;
  sub_1AD3A7700(a1, (uint64_t)&v36 - v18, (unint64_t *)&unk_1EB741390, v16);
  sub_1AD3A7700(v41, (uint64_t)v15, &qword_1EB73E780, v9);
  uint64_t v23 = sub_1AD73A600();
  LODWORD(asub_1AD3829D8(_, viewForFooterInSection, 1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v19, 1, v23);
  sub_1AD3AA590((uint64_t)v15, (uint64_t)v13, &qword_1EB73E780, v9);
  if (a1 == 1
    || (uint64_t v24 = sub_1AD739E10(),
        (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v13, 1, v24) == 1))
  {
    unint64_t v25 = v6;
    unint64_t v26 = (void (*)(uint64_t))MEMORY[0x1E4F26E60];
    sub_1AD3A9B90((uint64_t)v13, &qword_1EB73E780, MEMORY[0x1E4F26E60]);
    uint64_t v27 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1AD3A9B90((uint64_t)v19, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928]);
    uint64_t v28 = v40;
    sub_1AD3A7700(v40, (uint64_t)&v25[OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_date], (unint64_t *)&unk_1EB741390, v27);
    uint64_t v29 = v41;
    sub_1AD3A7700(v41, (uint64_t)&v25[OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_dateInterval], &qword_1EB73E780, v26);
    char v30 = v37 & 1;
    uint64_t v31 = v38;
    if (v37) {
      uint64_t v31 = 0;
    }
    *(void *)uint64_t v20 = v31;
    v20[8] = v30;
    *(void *)unint64_t v21 = v39;
    uint64_t v21[8] = 0;
    *(void *)uint64_t v22 = v36;
    v22[8] = 0;

    id v32 = (objc_class *)type metadata accessor for ChartContext();
    v42.receiver = v25;
    v42.super_class = v32;
    id v33 = objc_msgSendSuper2(&v42, sel_init);
    sub_1AD3A9B90(v29, &qword_1EB73E780, v26);
    sub_1AD3A9B90(v28, (unint64_t *)&unk_1EB741390, v27);
    return (uint64_t)v33;
  }
  else
  {
    id v35 = v6;
    uint64_t result = sub_1AD3A9B90((uint64_t)v13, &qword_1EB73E780, MEMORY[0x1E4F26E60]);
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD3A802C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v43 = a8;
  uint64_t v42 = a7;
  int v41 = a6;
  uint64_t v40 = a5;
  int v39 = a4;
  uint64_t v38 = a3;
  uint64_t v11 = (void (*)(uint64_t))MEMORY[0x1E4F26E60];
  sub_1AD1D722C(0, &qword_1EB73E780, MEMORY[0x1E4F26E60]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v46 = (uint64_t)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  id v16 = (char *)&v37 - v15;
  uint64_t v17 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AD1D722C(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v37 - v19;
  unint64_t v21 = &v8[OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_preferredOverlayRawValue];
  *(void *)unint64_t v21 = 0;
  uint64_t v21[8] = 1;
  uint64_t v22 = &v8[OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_trendActiveRawValue[0]];
  *(void *)uint64_t v22 = 0;
  v22[8] = 1;
  uint64_t v23 = &v8[OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_chartOptionsRawValue];
  *(void *)uint64_t v23 = 0;
  v23[8] = 1;
  uint64_t v45 = a1;
  sub_1AD3A7700(a1, (uint64_t)&v37 - v19, (unint64_t *)&unk_1EB741390, v17);
  uint64_t v44 = a2;
  sub_1AD3A7700(a2, (uint64_t)v16, &qword_1EB73E780, v11);
  uint64_t v24 = sub_1AD73A600();
  LODWORD(a2) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v20, 1, v24);
  uint64_t v25 = (uint64_t)v16;
  uint64_t v26 = v46;
  sub_1AD3AA590(v25, v46, &qword_1EB73E780, v11);
  if (a2 == 1
    || (uint64_t v27 = sub_1AD739E10(),
        (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v26, 1, v27) == 1))
  {
    uint64_t v28 = v8;
    uint64_t v29 = (void (*)(uint64_t))MEMORY[0x1E4F26E60];
    sub_1AD3A9B90(v26, &qword_1EB73E780, MEMORY[0x1E4F26E60]);
    char v30 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1AD3A9B90((uint64_t)v20, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928]);
    uint64_t v31 = v45;
    sub_1AD3A7700(v45, (uint64_t)&v28[OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_date], (unint64_t *)&unk_1EB741390, v30);
    uint64_t v32 = v44;
    sub_1AD3A7700(v44, (uint64_t)&v28[OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_dateInterval], &qword_1EB73E780, v29);
    *(void *)unint64_t v21 = v38;
    uint64_t v21[8] = v39 & 1;
    *(void *)uint64_t v22 = v40;
    v22[8] = v41 & 1;
    *(void *)uint64_t v23 = v42;
    v23[8] = v43 & 1;

    id v33 = (objc_class *)type metadata accessor for ChartContext();
    v47.receiver = v28;
    v47.super_class = v33;
    id v34 = objc_msgSendSuper2(&v47, sel_init);
    sub_1AD3A9B90(v32, &qword_1EB73E780, v29);
    sub_1AD3A9B90(v31, (unint64_t *)&unk_1EB741390, v30);
    return (uint64_t)v34;
  }
  else
  {
    uint64_t v36 = v8;
    uint64_t result = sub_1AD3A9B90(v26, &qword_1EB73E780, MEMORY[0x1E4F26E60]);
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD3A8454()
{
  uint64_t v1 = (void (*)(uint64_t))MEMORY[0x1E4F26E60];
  sub_1AD1D722C(0, &qword_1EB73E780, MEMORY[0x1E4F26E60]);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v13 - v3;
  uint64_t v5 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AD1D722C(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v13 - v7;
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_1AD740680();
  sub_1AD73F300();
  sub_1AD3A7700(v0 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_date, (uint64_t)v8, (unint64_t *)&unk_1EB741390, v5);
  sub_1AD73F220();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  sub_1AD73F300();
  sub_1AD3A7700(v0 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_dateInterval, (uint64_t)v4, &qword_1EB73E780, v1);
  sub_1AD73F220();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  sub_1AD73F300();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_preferredOverlayRawValue + 8)) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_preferredOverlayRawValue);
  }
  uint64_t v14 = v9;
  type metadata accessor for HKOverlayRoomPreferredOverlay(0);
  sub_1AD73F220();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  sub_1AD73F300();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_trendActiveRawValue + 8)) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_trendActiveRawValue);
  }
  uint64_t v14 = v10;
  type metadata accessor for HKOverlayRoomTrendActive(0);
  sub_1AD73F220();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  sub_1AD73F300();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_chartOptionsRawValue + 8)) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_chartOptionsRawValue);
  }
  uint64_t v14 = v11;
  sub_1AD73F220();
  sub_1AD73F300();
  swift_bridgeObjectRelease();
  return v15;
}

void sub_1AD3A8770(void *a1)
{
  uint64_t v2 = v1;
  sub_1AD1D722C(0, &qword_1EB73E780, MEMORY[0x1E4F26E60]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v27 - v5;
  uint64_t v7 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1AD1D722C(0, (unint64_t *)&unk_1EB741390, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v27 - v9;
  sub_1AD3A7700(v2 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_date, (uint64_t)&v27 - v9, (unint64_t *)&unk_1EB741390, v7);
  uint64_t v11 = sub_1AD73A600();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    uint64_t v13 = (void *)sub_1AD73A590();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    id v14 = v13;
    uint64_t v15 = (void *)sub_1AD73F180();
    objc_msgSend(a1, sel_encodeObject_forKey_, v14, v15);
  }
  sub_1AD3A7700(v2 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_dateInterval, (uint64_t)v6, &qword_1EB73E780, MEMORY[0x1E4F26E60]);
  uint64_t v16 = sub_1AD739E10();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) != 1)
  {
    uint64_t v18 = (void *)sub_1AD739D90();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v16);
    id v19 = v18;
    uint64_t v20 = (void *)sub_1AD73F180();
    objc_msgSend(a1, sel_encodeObject_forKey_, v19, v20);
  }
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_preferredOverlayRawValue + 8) & 1) == 0)
  {
    id v21 = (id)sub_1AD73F770();
    uint64_t v22 = (void *)sub_1AD73F180();
    objc_msgSend(a1, sel_encodeObject_forKey_, v21, v22);
  }
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_trendActiveRawValue + 8) & 1) == 0)
  {
    id v23 = (id)sub_1AD73F770();
    uint64_t v24 = (void *)sub_1AD73F180();
    objc_msgSend(a1, sel_encodeObject_forKey_, v23, v24);
  }
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC18HealthExperienceUI12ChartContext_chartOptionsRawValue + 8) & 1) == 0)
  {
    id v25 = (id)sub_1AD73F770();
    uint64_t v26 = (void *)sub_1AD73F180();
    objc_msgSend(a1, sel_encodeObject_forKey_, v25, v26);
  }
}

id ChartContext.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1AD3A9C18();

  return v4;
}

id ChartContext.init(coder:)(void *a1)
{
  id v2 = sub_1AD3A9C18();

  return v2;
}

uint64_t sub_1AD3A8C94()
{
  uint64_t v1 = v0;
  v24[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1AD73CBA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = self;
  v24[0] = 0;
  id v7 = objc_msgSend(v6, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v1, 1, v24);
  id v8 = v24[0];
  if (v7)
  {
    uint64_t v9 = sub_1AD73A4E0();
  }
  else
  {
    uint64_t v10 = v8;
    uint64_t v11 = (void *)sub_1AD73A360();

    swift_willThrow();
    sub_1AD73CB20();
    id v12 = v11;
    id v13 = v11;
    id v14 = sub_1AD73CB80();
    os_log_type_t v15 = sub_1AD73F920();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      v24[0] = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v22[1] = v16 + 4;
      uint64_t v23 = (uint64_t)v11;
      id v18 = v11;
      sub_1AD26B6B8();
      uint64_t v19 = sub_1AD73F220();
      uint64_t v23 = sub_1AD1F62D4(v19, v20, (uint64_t *)v24);
      sub_1AD7403B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AD1A4000, v14, v15, "Failed to encode data with error %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3E68450](v17, -1, -1);
      MEMORY[0x1B3E68450](v16, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  return v9;
}

id ChartContext.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ChartContext.init()()
{
}

unint64_t sub_1AD3A900C(char a1)
{
  unint64_t result = 1702125924;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65746E4965746164;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1AD3A90C8()
{
  return sub_1AD3A900C(*v0);
}

uint64_t sub_1AD3A90D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1AD3AAF2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD3A90F8(uint64_t a1)
{
  unint64_t v2 = sub_1AD3AA4D8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1AD3A9134(uint64_t a1)
{
  unint64_t v2 = sub_1AD3AA4D8();
  return MEMORY[0x1F41862B0](a1, v2);
}

id ChartContext.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChartContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}